!_TAG_FILE_SORTED	2	/0=unsorted, 1=sorted, 2=foldcase/
#	/etc/vimrc	/^    nmap # <Plug>MarkSearchOrCurPrev$/;"	m	language:Vim
*	/etc/vimrc	/^    nmap * <Plug>MarkSearchOrCurNext$/;"	m	language:Vim
,/	/etc/vimrc	/^nnoremap <silent> ,\/ :execute 'vimgrep \/'.@\/.'\/g %'<CR>:copen<CR>$/;"	m	language:Vim
<	/etc/vimrc	/^vnoremap < <gv$/;"	m	language:Vim
<A-]>	/etc/vimrc	/^map <A-]> :vsp <CR>:exec("tag ".expand("<cword>"))<CR>$/;"	m	language:Vim
<C-e>	/etc/vimrc	/^inoremap <C-e> <C-o>\$$/;"	m	language:Vim
<C-F12>	/etc/vimrc	/^map <C-F12> :!ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .<CR>$/;"	m	language:Vim
<C-F2>	/etc/vimrc	/^nnoremap <C-F2> ^$/;"	m	language:Vim
<C-F3>	/etc/vimrc	/^nnoremap <C-F3> \$$/;"	m	language:Vim
<C-F4>	/etc/vimrc	/^nnoremap <C-F4> <Esc>:tabp<CR>$/;"	m	language:Vim
<C-F5>	/etc/vimrc	/^nnoremap <C-F5> <Esc>:tabn<CR>$/;"	m	language:Vim
<C-F6>	/etc/vimrc	/^vmap <C-F6> <F6>v`>$/;"	m	language:Vim
<C-F7>	/etc/vimrc	/^nmap <C-F7> :set paste<CR>i<CR><CR><Esc>k:.!xclip -o<CR>JxkJx:set nopaste<CR>$/;"	m	language:Vim
<C-F8>	/etc/vimrc	/^nnoremap <C-F8> :call ToggleVerbose()<CR>$/;"	m	language:Vim
<C-F9>	/etc/vimrc	/^nnoremap <C-F9> :call ToggleXXD()<CR>$/;"	m	language:Vim
<C-\>	/etc/vimrc	/^map <C-\\> :tab split<CR>:exec("tag ".expand("<cword>"))<CR>$/;"	m	language:Vim
<c-]>	/etc/vimrc	/^nnoremap <c-]> g<c-]>$/;"	m	language:Vim
<c-]>	/etc/vimrc	/^vnoremap <c-]> g<c-]>$/;"	m	language:Vim
<Esc><F2>	/etc/vimrc	/^map <Esc><F2> <M-F2>$/;"	m	language:Vim
<Esc><F3>	/etc/vimrc	/^map <Esc><F3> <M-F3>$/;"	m	language:Vim
<Esc><F4>	/etc/vimrc	/^map <Esc><F4> <M-F4>$/;"	m	language:Vim
<Esc><F5>	/etc/vimrc	/^map <Esc><F5> <M-F5>$/;"	m	language:Vim
<Esc><F6>	/etc/vimrc	/^map <Esc><F6> <M-F6>$/;"	m	language:Vim
<Esc><F7>	/etc/vimrc	/^map <Esc><F7> <M-F7>$/;"	m	language:Vim
<Esc><F8>	/etc/vimrc	/^map <Esc><F8> <M-F8>$/;"	m	language:Vim
<Esc><F9>	/etc/vimrc	/^map <Esc><F9> <M-F9>$/;"	m	language:Vim
<F2>	/etc/vimrc	/^nnoremap <F2> <Esc>:tabp<CR>$/;"	m	language:Vim
<F3>	/etc/vimrc	/^nnoremap <F3> <Esc>:tabn<CR>$/;"	m	language:Vim
<F4>	/etc/vimrc	/^nnoremap <F4> <C-u>$/;"	m	language:Vim
<F5>	/etc/vimrc	/^nnoremap <F5> <C-d>$/;"	m	language:Vim
<F6>	/etc/vimrc	/^vmap <F6> "+y<Esc>:call system("xclip -i -selection clipboard", getreg("\\""))$/;"	m	language:Vim
<F7>	/etc/vimrc	/^nmap <F7> :call setreg("\\"",system("xclip -o -selection clipboard"))<CR>"+p$/;"	m	language:Vim
<F8>	/etc/vimrc	/^nmap <F8> <Esc>:verbose map$/;"	m	language:Vim
<F9>	/etc/vimrc	/^nnoremap <F9> :call ToggleFold()<CR>$/;"	m	language:Vim
<Leader>!	/etc/vimrc	/^    nmap <Leader>!  <Plug>MarkSearchGroup1Prev$/;"	m	language:Vim
<Leader>"	/etc/vimrc	/^nnoremap <Leader>" mzI# <Esc>`z$/;"	m	language:Vim
<Leader>'	/etc/vimrc	/^nnoremap <Leader>' <Esc>:w!<CR>$/;"	m	language:Vim
<Leader>,	/etc/vimrc	/^nnoremap <Leader>, <Esc>:s\/ .*:[0-9][0-9]\/\/$/;"	m	language:Vim
<Leader>-	/etc/vimrc	/^noremap <Leader>- <Esc>[c$/;"	m	language:Vim
<Leader>.	/etc/vimrc	/^nnoremap <Leader>. <Esc>:s\/[0-9]*\\. \/\/$/;"	m	language:Vim
<Leader>/	/etc/vimrc	/^nnoremap <Leader>\/ <Esc>i<C-r>=system('')$/;"	m	language:Vim
<Leader>1	/etc/vimrc	/^    nmap <Leader>1  <Plug>MarkSearchGroup1Next$/;"	m	language:Vim
<Leader>2	/etc/vimrc	/^    nmap <Leader>2  <Plug>MarkSearchGroup2Next$/;"	m	language:Vim
<Leader>3	/etc/vimrc	/^    nmap <Leader>3  <Plug>MarkSearchGroup2Next$/;"	m	language:Vim
<Leader>4	/etc/vimrc	/^    nmap <Leader>4  <Plug>MarkSearchGroup2Next$/;"	m	language:Vim
<Leader>5	/etc/vimrc	/^    nmap <Leader>5  <Plug>MarkSearchGroup2Next$/;"	m	language:Vim
<Leader>6	/etc/vimrc	/^    nmap <Leader>6  <Plug>MarkSearchGroup2Next$/;"	m	language:Vim
<Leader>7	/etc/vimrc	/^    nmap <Leader>7  <Plug>MarkSearchGroup2Next$/;"	m	language:Vim
<Leader>8	/etc/vimrc	/^    nmap <Leader>8  <Plug>MarkSearchGroup2Next$/;"	m	language:Vim
<Leader>9	/etc/vimrc	/^    nmap <Leader>9  <Plug>MarkSearchGroup2Next$/;"	m	language:Vim
<Leader>;	/etc/vimrc	/^nnoremap <Leader>; <Esc>:q!<CR>$/;"	m	language:Vim
<Leader>=	/etc/vimrc	/^noremap <Leader>= <Esc>]c$/;"	m	language:Vim
<Leader>a	/etc/vimrc	/^nnoremap <Leader>a <Esc>:A<CR>$/;"	m	language:Vim
<Leader>cc	/etc/vimrc	/^nnoremap <Leader>cc :%s\/\\<<C-r><C-w>\\>\/<C-r><C-w>$/;"	m	language:Vim
<Leader>cc	/etc/vimrc	/^vnoremap <Leader>cc y:%s\/<C-r>"\/<C-r>"$/;"	m	language:Vim
<Leader>dg	/etc/vimrc	/^nnoremap <Leader>dg <Esc>:diffget<CR>]c$/;"	m	language:Vim
<Leader>dg	/etc/vimrc	/^vnoremap <Leader>dg <Esc>:'<,'>diffget<CR>]c$/;"	m	language:Vim
<Leader>dp	/etc/vimrc	/^nnoremap <Leader>dp <Esc>:diffput<CR>]c$/;"	m	language:Vim
<Leader>dp	/etc/vimrc	/^vnoremap <Leader>dp <Esc>:'<,'>diffput<CR>]c$/;"	m	language:Vim
<Leader>dw	/etc/vimrc	/^nnoremap <Leader>dw <Esc>:wincmd p<CR>$/;"	m	language:Vim
<Leader>ew	/etc/vimrc	/^nnoremap <Leader>ew <Esc>:tabe <C-r>=expand("%:p:h")."\/"<CR>$/;"	m	language:Vim
<Leader>h	/etc/vimrc	/^nnoremap <Leader>h <Esc>:silent !cat \/store\/config\/mappings-vim.txt \\| sed 's\/^[ ]*\/\/' \\| less<CR>:redraw!<CR>$/;"	m	language:Vim
<Leader>M	/etc/vimrc	/^    nmap <Leader>M <Plug>MarkToggle$/;"	m	language:Vim
<Leader>n	/etc/vimrc	/^    nmap <Leader>n <Plug>MarkConfirmAllClear$/;"	m	language:Vim
<Leader>o	/etc/vimrc	/^nnoremap <Leader>o <Esc>:diffget<CR>]c$/;"	m	language:Vim
<Leader>o	/etc/vimrc	/^vnoremap <Leader>o <Esc>:'<,'>diffget<CR>]c$/;"	m	language:Vim
<Leader>p	/etc/vimrc	/^nnoremap <Leader>p <Esc>:diffput<CR>]c$/;"	m	language:Vim
<Leader>p	/etc/vimrc	/^vnoremap <Leader>p <Esc>:'<,'>diffput<CR>]c$/;"	m	language:Vim
<Leader>rac	/etc/vimrc	/^nnoremap <Leader>rac :%s\/<C-v><Esc>\\[\\(\\d\\{1,2}\\(;\\d\\{1,2}\\)\\{0,2\\}\\)\\?[m\\|K]\/\/g<CR>$/;"	m	language:Vim
<Leader>rc	/etc/vimrc	/^nnoremap <Leader>rc :%s\/\\<<C-r><C-w>\\>\/$/;"	m	language:Vim
<Leader>rc	/etc/vimrc	/^vnoremap <Leader>rc y:%s\/<C-r>"\/$/;"	m	language:Vim
<Leader>rts	/etc/vimrc	/^nnoremap <Leader>rts :%s\/ \/    \/g<CR>$/;"	m	language:Vim
<Leader>s	/etc/vimrc	/^nnoremap <Leader>s <Esc>:silent w! !sudo tee % >\/dev\/null<CR>$/;"	m	language:Vim
<Leader>u	/etc/vimrc	/^nnoremap <Leader>u <Esc>:silent w! !sudo tee % >\/dev\/null<CR>$/;"	m	language:Vim
<Leader>v	/etc/vimrc	/^nnoremap <Leader>v <Esc>:silent !cat \/store\/config\/100vimcommands.txt \\| sed 's\/^[ ]*\/\/' \\| less<CR>:redraw!<CR>$/;"	m	language:Vim
<Leader>[	/etc/vimrc	/^nnoremap <Leader>[ <Esc>:q<CR>$/;"	m	language:Vim
<Leader>]	/etc/vimrc	/^nnoremap <Leader>] <Esc>:w<CR>$/;"	m	language:Vim
<M-c>	/etc/vimrc	/^vmap <M-c> "*y$/;"	m	language:Vim
<M-F2>	/etc/vimrc	/^nnoremap <M-F2> 0dw$/;"	m	language:Vim
<M-F4>	/etc/vimrc	/^nnoremap <M-F4> <Esc>:set scrollbind<CR>$/;"	m	language:Vim
<M-F5>	/etc/vimrc	/^nnoremap <M-F5> <Esc>:set noscb<CR>$/;"	m	language:Vim
<M-F6>	/etc/vimrc	/^vmap <M-F6> :<Esc>`>a<CR><Esc>mx`<i<CR><Esc>my'xk$v'y!xclip -selection c<CR>u$/;"	m	language:Vim
<M-F7>	/etc/vimrc	/^nmap <M-F7> mz:-1r !xclip -o -sel clip<CR>`z$/;"	m	language:Vim
<M-F8>	/etc/vimrc	/^nnoremap <M-F8> :call ToggleHex()<CR>$/;"	m	language:Vim
<M-F9>	/etc/vimrc	/^nnoremap <M-F9> :call ToggleIndent()<CR>$/;"	m	language:Vim
<M-v>	/etc/vimrc	/^nmap <M-v> "*p$/;"	m	language:Vim
<M-x>	/etc/vimrc	/^vmap <M-x> "*x$/;"	m	language:Vim
<Plug>IgnoreMarkSearchNext	/etc/vimrc	/^    nmap <Plug>IgnoreMarkSearchNext <Plug>MarkSearchNext$/;"	m	language:Vim
<Plug>IgnoreMarkSearchPrev	/etc/vimrc	/^    nmap <Plug>IgnoreMarkSearchPrev <Plug>MarkSearchPrev$/;"	m	language:Vim
<Plug>IgnoreMarkSet	/etc/vimrc	/^    vmap <Plug>IgnoreMarkSet <Plug>MarkSet$/;"	m	language:Vim
>	/etc/vimrc	/^vnoremap > >gv$/;"	m	language:Vim
abstract_end	/usr/bin/googler	/^    def abstract_end(self, tag, annotation):$/;"	m	language:Python	class:GoogleParser
abstract_start	/usr/bin/googler	/^    def abstract_start(self, tag, attrs):$/;"	m	language:Python	class:GoogleParser
addr	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	struct expr		*addr;$/;"	m	language:C++	struct:nat_stmt	typeref:struct:nat_stmt::expr
annotate_tag	/usr/bin/googler	/^def annotate_tag(annotated_starttag_handler):$/;"	f	language:Python
API_REPO_BASE	/usr/bin/googler	/^API_REPO_BASE = 'https:\/\/api.github.com\/repos\/jarun\/googler'$/;"	v	language:Python
archive	/usr/lib/initcpio/install/esp-update-linux	/^archive() {$/;"	f	language:Sh
argparse	/usr/bin/googler	/^import argparse$/;"	i	language:Python
atexit	/usr/bin/googler	/^import atexit$/;"	i	language:Python
Binary	/etc/vimrc	/^augroup Binary$/;"	a	language:Vim
Biorthogonal_1_3	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^	Biorthogonal_1_3,$/;"	e	language:C++	enum:Wavelet::Type
Biorthogonal_1_5	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^	Biorthogonal_1_5,$/;"	e	language:C++	enum:Wavelet::Type
Biorthogonal_2_2	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^	Biorthogonal_2_2,$/;"	e	language:C++	enum:Wavelet::Type
Biorthogonal_2_4	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^	Biorthogonal_2_4,$/;"	e	language:C++	enum:Wavelet::Type
Biorthogonal_2_6	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^	Biorthogonal_2_6,$/;"	e	language:C++	enum:Wavelet::Type
Biorthogonal_2_8	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^	Biorthogonal_2_8,$/;"	e	language:C++	enum:Wavelet::Type
Biorthogonal_3_1	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^	Biorthogonal_3_1,$/;"	e	language:C++	enum:Wavelet::Type
Biorthogonal_3_3	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^	Biorthogonal_3_3,$/;"	e	language:C++	enum:Wavelet::Type
Biorthogonal_3_5	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^	Biorthogonal_3_5,$/;"	e	language:C++	enum:Wavelet::Type
Biorthogonal_3_7	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^	Biorthogonal_3_7,$/;"	e	language:C++	enum:Wavelet::Type
Biorthogonal_3_9	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^	Biorthogonal_3_9,$/;"	e	language:C++	enum:Wavelet::Type
Biorthogonal_4_4	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^	Biorthogonal_4_4,$/;"	e	language:C++	enum:Wavelet::Type
Biorthogonal_5_5	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^	Biorthogonal_5_5,$/;"	e	language:C++	enum:Wavelet::Type
Biorthogonal_6_8	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^	Biorthogonal_6_8,$/;"	e	language:C++	enum:Wavelet::Type
bot_eval	/store/code/git/core2/modules/utilities.py	/^def bot_eval(msg):$/;"	f	language:Python
build	/home/alyptik/aur/i3status-mpd-git/PKGBUILD	/^build() {$/;"	f	language:Sh
build	/home/alyptik/aur/john-git/PKGBUILD	/^build() {$/;"	f	language:Sh
build	/home/alyptik/aur/linux-surfacepro3-rt/PKGBUILD	/^build() {$/;"	f	language:Sh
build	/home/alyptik/aur/lvtk-git/PKGBUILD	/^build() {$/;"	f	language:Sh
build	/home/alyptik/aur/mipsel-linux-glibc/PKGBUILD	/^build() {$/;"	f	language:Sh
build	/home/alyptik/aur/mixxx-git/PKGBUILD	/^build() {$/;"	f	language:Sh
build	/store/code/aur/linux-surfacepro3-rt/PKGBUILD	/^build() {$/;"	f	language:Sh
build	/store/code/aur/nftables/PKGBUILD	/^build() {$/;"	f	language:Sh
build	/store/code/git/core2/modules/useful.py	/^    from googleapiclient.discovery import build$/;"	i	language:Python
build	/usr/lib/initcpio/install/esp-update-linux	/^build() {$/;"	f	language:Sh
burst	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	uint32_t		burst;$/;"	m	language:C++	struct:limit_stmt
BYTE	/store/code/git/xxHash/xxhash.c	/^    typedef uint8_t  BYTE;$/;"	t	language:C++	file:
BYTE	/store/code/git/xxHash/xxhash.c	/^    typedef unsigned char      BYTE;$/;"	t	language:C++	file:
bytes	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	uint64_t		bytes;$/;"	m	language:C++	struct:counter_stmt
catching_keys_data	/store/config/.weechat/python/autoload/vimode.py	/^catching_keys_data = {'amount': 0}$/;"	v	language:Python
cb_check_esc	/store/config/.weechat/python/autoload/vimode.py	/^def cb_check_esc(data, remaining_calls):$/;"	f	language:Python
cb_cmd_text	/store/config/.weechat/python/autoload/vimode.py	/^def cb_cmd_text(data, item, window):$/;"	f	language:Python
cb_config	/store/config/.weechat/python/autoload/vimode.py	/^def cb_config(data, option, value):$/;"	f	language:Python
cb_exec_cmd	/store/config/.weechat/python/autoload/vimode.py	/^def cb_exec_cmd(data, remaining_calls):$/;"	f	language:Python
cb_key_alt_j	/store/config/.weechat/python/autoload/vimode.py	/^def cb_key_alt_j():$/;"	f	language:Python
cb_key_combo_default	/store/config/.weechat/python/autoload/vimode.py	/^def cb_key_combo_default(data, signal, signal_data):$/;"	f	language:Python
cb_key_pressed	/store/config/.weechat/python/autoload/vimode.py	/^def cb_key_pressed(data, signal, signal_data):$/;"	f	language:Python
cb_key_r	/store/config/.weechat/python/autoload/vimode.py	/^def cb_key_r():$/;"	f	language:Python
cb_line_numbers	/store/config/.weechat/python/autoload/vimode.py	/^def cb_line_numbers(data, item, window):$/;"	f	language:Python
cb_mode_indicator	/store/config/.weechat/python/autoload/vimode.py	/^def cb_mode_indicator(data, item, window):$/;"	f	language:Python
cb_motion_f	/store/config/.weechat/python/autoload/vimode.py	/^def cb_motion_f(update_last=True):$/;"	f	language:Python
cb_motion_F	/store/config/.weechat/python/autoload/vimode.py	/^def cb_motion_F(update_last=True):$/;"	f	language:Python
cb_motion_t	/store/config/.weechat/python/autoload/vimode.py	/^def cb_motion_t(update_last=True):$/;"	f	language:Python
cb_motion_T	/store/config/.weechat/python/autoload/vimode.py	/^def cb_motion_T(update_last=True):$/;"	f	language:Python
cb_timer_update_line_numbers	/store/config/.weechat/python/autoload/vimode.py	/^def cb_timer_update_line_numbers(data, remaining_calls):$/;"	f	language:Python
cb_update_line_numbers	/store/config/.weechat/python/autoload/vimode.py	/^def cb_update_line_numbers(data, signal, signal_data):$/;"	f	language:Python
cb_vimode_cmd	/store/config/.weechat/python/autoload/vimode.py	/^def cb_vimode_cmd(data, buf, args):$/;"	f	language:Python
cb_vi_buffer	/store/config/.weechat/python/autoload/vimode.py	/^def cb_vi_buffer(data, item, window):$/;"	f	language:Python
chandeop	/store/code/git/core2/modules/utilities.py	/^def chandeop(msg):$/;"	f	language:Python
chandevoice	/store/code/git/core2/modules/utilities.py	/^def chandevoice(msg):$/;"	f	language:Python
chanop	/store/code/git/core2/modules/utilities.py	/^def chanop(msg):$/;"	f	language:Python
chanvoice	/store/code/git/core2/modules/utilities.py	/^def chanvoice(msg):$/;"	f	language:Python
checkDirectRendering	/store/code/git/mixxx/src/mixxx.cpp	/^void MixxxMainWindow::checkDirectRendering() {$/;"	f	language:C++	class:MixxxMainWindow
checkDirectRendering	/store/code/git/mixxx/src/mixxx.h	/^    void checkDirectRendering();$/;"	p	language:C++	class:MixxxMainWindow
check_tell	/store/code/git/core2/modules/useful.py	/^def check_tell(msg):$/;"	f	language:Python
check_warnings	/store/config/.weechat/python/autoload/vimode.py	/^def check_warnings():$/;"	f	language:Python
classes	/usr/bin/googler	/^    def classes(attrs):$/;"	m	language:Python	class:GoogleParser
client	/usr/bin/googler	/^import http.client$/;"	i	language:Python
close	/usr/bin/googler	/^    def close(self):$/;"	m	language:Python	class:GoogleConnection
closeDeveloperToolsDlgChecked	/store/code/git/mixxx/src/mixxx.h	/^    void closeDeveloperToolsDlgChecked(int r);$/;"	p	language:C++	class:MixxxMainWindow
closeEvent	/store/code/git/mixxx/src/mixxx.cpp	/^void MixxxMainWindow::closeEvent(QCloseEvent *event) {$/;"	f	language:C++	class:MixxxMainWindow
closeEvent	/store/code/git/mixxx/src/mixxx.h	/^    virtual void closeEvent(QCloseEvent *event);$/;"	p	language:C++	class:MixxxMainWindow
cmdloop	/usr/bin/googler	/^    def cmdloop(self):$/;"	m	language:Python	class:GooglerCmd
cmd_text	/store/config/.weechat/python/autoload/vimode.py	/^cmd_text = ""$/;"	v	language:Python
Coiflet_1	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^	Coiflet_1,$/;"	e	language:C++	enum:Wavelet::Type
Coiflet_2	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^	Coiflet_2,$/;"	e	language:C++	enum:Wavelet::Type
Coiflet_3	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^	Coiflet_3,$/;"	e	language:C++	enum:Wavelet::Type
Coiflet_4	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^	Coiflet_4,$/;"	e	language:C++	enum:Wavelet::Type
Coiflet_5	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^	Coiflet_5,$/;"	e	language:C++	enum:Wavelet::Type
collections	/usr/bin/googler	/^import collections$/;"	i	language:Python
COLORMAP	/usr/bin/googler	/^COLORMAP = {k: '\\x1b[%sm' % v for k, v in {$/;"	v	language:Python
colors	/usr/bin/googler	/^    colors = None$/;"	v	language:Python	class:GooglerCmd
colors	/usr/bin/googler	/^    colors = None$/;"	v	language:Python	class:Result
Colors	/usr/bin/googler	/^Colors = collections.namedtuple('Colors', 'index, title, url, metadata, abstract, prompt, reset')$/;"	v	language:Python
confirmExit	/store/code/git/mixxx/src/mixxx.cpp	/^bool MixxxMainWindow::confirmExit() {$/;"	f	language:C++	class:MixxxMainWindow
confirmExit	/store/code/git/mixxx/src/mixxx.h	/^    bool confirmExit();$/;"	p	language:C++	class:MixxxMainWindow
connect	/usr/bin/googler	/^    def connect(self, notweak=False):$/;"	m	language:Python	class:TLS1_2Connection
connectMenuBar	/store/code/git/mixxx/src/mixxx.cpp	/^void MixxxMainWindow::connectMenuBar() {$/;"	f	language:C++	class:MixxxMainWindow
connectMenuBar	/store/code/git/mixxx/src/mixxx.h	/^    void connectMenuBar();$/;"	p	language:C++	class:MixxxMainWindow
counter	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^		struct counter_stmt	counter;$/;"	m	language:C++	union:stmt::__anon2	typeref:struct:stmt::__anon2::counter_stmt
counter_stmt	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^struct counter_stmt {$/;"	s	language:C++
counter_stmt_alloc	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^extern struct stmt *counter_stmt_alloc(const struct location *loc);$/;"	p	language:C++
counter_stmt_alloc	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^struct stmt *counter_stmt_alloc(const struct location *loc)$/;"	f	language:C++
counter_stmt_ops	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static const struct stmt_ops counter_stmt_ops = {$/;"	v	language:C++	typeref:struct:stmt_ops	file:
counter_stmt_print	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static void counter_stmt_print(const struct stmt *stmt)$/;"	f	language:C++	file:
createDecompositionFilters	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^    static void createDecompositionFilters(Type,$/;"	p	language:C++	class:Wavelet
createMenuBar	/store/code/git/mixxx/src/mixxx.cpp	/^void MixxxMainWindow::createMenuBar() {$/;"	f	language:C++	class:MixxxMainWindow
createMenuBar	/store/code/git/mixxx/src/mixxx.h	/^    void createMenuBar();$/;"	p	language:C++	class:MixxxMainWindow
csv	/store/config/.weechat/python/autoload/vimode.py	/^import csv$/;"	i	language:Python
ct	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^		struct ct_stmt		ct;$/;"	m	language:C++	union:stmt::__anon2	typeref:struct:stmt::__anon2::ct_stmt
ct_stmt	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^struct ct_stmt {$/;"	s	language:C++
ct_stmt_alloc	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^extern struct stmt *ct_stmt_alloc(const struct location *loc,$/;"	p	language:C++
data_unit	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static const char *data_unit[] = {$/;"	v	language:C++	file:
Daubechies_10	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^        Daubechies_10,$/;"	e	language:C++	enum:Wavelet::Type
Daubechies_2	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^        Daubechies_2,$/;"	e	language:C++	enum:Wavelet::Type
Daubechies_20	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^        Daubechies_20,$/;"	e	language:C++	enum:Wavelet::Type
Daubechies_3	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^        Daubechies_3,$/;"	e	language:C++	enum:Wavelet::Type
Daubechies_4	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^        Daubechies_4,$/;"	e	language:C++	enum:Wavelet::Type
Daubechies_40	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^        Daubechies_40,$/;"	e	language:C++	enum:Wavelet::Type
Daubechies_5	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^        Daubechies_5,$/;"	e	language:C++	enum:Wavelet::Type
Daubechies_6	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^        Daubechies_6,$/;"	e	language:C++	enum:Wavelet::Type
Daubechies_7	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^        Daubechies_7,$/;"	e	language:C++	enum:Wavelet::Type
Daubechies_8	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^        Daubechies_8,$/;"	e	language:C++	enum:Wavelet::Type
Daubechies_9	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^        Daubechies_9,$/;"	e	language:C++	enum:Wavelet::Type
deop	/store/code/git/core2/modules/utilities.py	/^def deop(msg):$/;"	f	language:Python
destroy	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	void			(*destroy)(struct stmt *stmt);$/;"	m	language:C++	struct:stmt_ops
dev	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	struct expr		*dev;$/;"	m	language:C++	struct:dup_stmt	typeref:struct:dup_stmt::expr
developerToolsDlgClosed	/store/code/git/mixxx/src/mixxx.h	/^    void developerToolsDlgClosed(int r);$/;"	p	language:C++	class:MixxxMainWindow
devoice	/store/code/git/core2/modules/utilities.py	/^def devoice(msg):$/;"	f	language:Python
digest	/store/code/git/xxHash/xxhash.h	/^typedef struct { unsigned char digest[4]; } XXH32_canonical_t;$/;"	m	language:C++	struct:__anon2
digest	/store/code/git/xxHash/xxhash.h	/^typedef struct { unsigned char digest[8]; } XXH64_canonical_t;$/;"	m	language:C++	struct:__anon3
disable	/store/code/git/mixxx/src/controllers/softtakeover.cpp	/^void SoftTakeoverCtrl::disable(ControlObject* control) {$/;"	f	language:C++	class:SoftTakeoverCtrl
display_results	/usr/bin/googler	/^    def display_results(self, prelude='\\n', json_output=False):$/;"	m	language:Python	class:GooglerCmd
download_latest_googler	/usr/bin/googler	/^def download_latest_googler(include_git=False):$/;"	f	language:Python
do_first	/usr/bin/googler	/^    def do_first(self):$/;"	m	language:Python	class:GooglerCmd
do_google	/usr/bin/googler	/^    def do_google(self, arg):$/;"	m	language:Python	class:GooglerCmd
do_next	/usr/bin/googler	/^    def do_next(self):$/;"	m	language:Python	class:GooglerCmd
do_open	/usr/bin/googler	/^    def do_open(self):$/;"	m	language:Python	class:GooglerCmd
do_previous	/usr/bin/googler	/^    def do_previous(self):$/;"	m	language:Python	class:GooglerCmd
do_unfilter	/usr/bin/googler	/^    def do_unfilter(self):$/;"	m	language:Python	class:GooglerCmd
dup	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^		struct dup_stmt		dup;$/;"	m	language:C++	union:stmt::__anon2	typeref:struct:stmt::__anon2::dup_stmt
dup_stmt	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^struct dup_stmt {$/;"	s	language:C++
dup_stmt_alloc	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^struct stmt *dup_stmt_alloc(const struct location *loc);$/;"	p	language:C++
dup_stmt_alloc	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^struct stmt *dup_stmt_alloc(const struct location *loc)$/;"	f	language:C++
dup_stmt_destroy	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static void dup_stmt_destroy(struct stmt *stmt)$/;"	f	language:C++	file:
dup_stmt_ops	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static const struct stmt_ops dup_stmt_ops = {$/;"	v	language:C++	typeref:struct:stmt_ops	file:
dup_stmt_print	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static void dup_stmt_print(const struct stmt *stmt)$/;"	f	language:C++	file:
dup_stmt_type	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^uint32_t dup_stmt_type(const char *type);$/;"	p	language:C++
enable	/store/code/git/mixxx/src/controllers/softtakeover.cpp	/^void SoftTakeoverCtrl::enable(ControlObject* control) {$/;"	f	language:C++	class:SoftTakeoverCtrl
ENABLE_SELF_UPGRADE_MECHANISM	/usr/bin/googler	/^ENABLE_SELF_UPGRADE_MECHANISM=True$/;"	v	language:Python
enforced_method	/usr/bin/googler	/^    def enforced_method(self, *args, **kwargs):$/;"	f	language:Python	function:require_keywords
enforced_method	/usr/bin/googler	/^    def enforced_method(self, arg):$/;"	f	language:Python	function:no_argument
entities	/usr/bin/googler	/^import html.entities$/;"	i	language:Python
error	/usr/bin/googler	/^    def error(self, message):$/;"	m	language:Python	class:GooglerArgumentParser
esc_pressed	/store/config/.weechat/python/autoload/vimode.py	/^esc_pressed = 0$/;"	v	language:Python
event	/store/code/git/mixxx/src/mixxx.cpp	/^bool MixxxMainWindow::event(QEvent* e) {$/;"	f	language:C++	class:MixxxMainWindow
event	/store/code/git/mixxx/src/mixxx.h	/^    virtual bool event(QEvent* e);$/;"	p	language:C++	class:MixxxMainWindow
eventFilter	/store/code/git/mixxx/src/mixxx.cpp	/^bool MixxxMainWindow::eventFilter(QObject* obj, QEvent* event) {$/;"	f	language:C++	class:MixxxMainWindow
eventFilter	/store/code/git/mixxx/src/mixxx.h	/^    virtual bool eventFilter(QObject *obj, QEvent *event);$/;"	p	language:C++	class:MixxxMainWindow
expr	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^		struct expr		*expr;$/;"	m	language:C++	union:stmt::__anon2	typeref:struct:stmt::__anon2::expr
expr	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	struct expr			*expr;$/;"	m	language:C++	struct:ct_stmt	typeref:struct:ct_stmt::expr
expr	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	struct expr			*expr;$/;"	m	language:C++	struct:meta_stmt	typeref:struct:meta_stmt::expr
expr	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	struct expr			*expr;$/;"	m	language:C++	struct:payload_stmt	typeref:struct:payload_stmt::expr
expr	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	struct expr		*expr;$/;"	m	language:C++	struct:reject_stmt	typeref:struct:reject_stmt::expr
expr_stmt_alloc	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^extern struct stmt *expr_stmt_alloc(const struct location *loc,$/;"	p	language:C++
expr_stmt_alloc	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^struct stmt *expr_stmt_alloc(const struct location *loc, struct expr *expr)$/;"	f	language:C++
expr_stmt_destroy	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static void expr_stmt_destroy(struct stmt *stmt)$/;"	f	language:C++	file:
expr_stmt_ops	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static const struct stmt_ops expr_stmt_ops = {$/;"	v	language:C++	typeref:struct:stmt_ops	file:
expr_stmt_print	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static void expr_stmt_print(const struct stmt *stmt)$/;"	f	language:C++	file:
family	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	unsigned int		family;$/;"	m	language:C++	struct:reject_stmt
FAQ_ESC	/store/config/.weechat/python/autoload/vimode.py	/^FAQ_ESC = GITHUB_BASE + "FAQ.md#esc-key-not-being-detected-instantly"$/;"	v	language:Python
FAQ_KEYBINDINGS	/store/config/.weechat/python/autoload/vimode.py	/^FAQ_KEYBINDINGS = GITHUB_BASE + "FAQ#problematic-key-bindings.md"$/;"	v	language:Python
fetch	/usr/bin/googler	/^    def fetch(self):$/;"	m	language:Python	class:GooglerCmd
fetch_and_display	/usr/bin/googler	/^    def fetch_and_display(self, prelude='\\n', json_output=False, interactive=True):$/;"	m	language:Python	class:GooglerCmd
fetch_page	/usr/bin/googler	/^    def fetch_page(self, url):$/;"	m	language:Python	class:GoogleConnection
fight	/store/code/git/core2/modules/useful.py	/^def fight(msg):$/;"	f	language:Python
filecmp	/usr/bin/googler	/^    import filecmp$/;"	i	language:Python
finalize	/store/code/git/mixxx/src/mixxx.cpp	/^void MixxxMainWindow::finalize() {$/;"	f	language:C++	class:MixxxMainWindow
finalize	/store/code/git/mixxx/src/mixxx.h	/^    void finalize();$/;"	p	language:C++	class:MixxxMainWindow
first_page	/usr/bin/googler	/^    def first_page(self):$/;"	m	language:Python	class:GoogleUrl
flags	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	enum stmt_flags			flags;$/;"	m	language:C++	struct:stmt	typeref:enum:stmt::stmt_flags
flags	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	uint16_t		flags;$/;"	m	language:C++	struct:queue_stmt
flags	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	uint32_t		flags;$/;"	m	language:C++	struct:limit_stmt
flags	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	uint32_t		flags;$/;"	m	language:C++	struct:log_stmt
flags	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	uint32_t		flags;$/;"	m	language:C++	struct:masq_stmt
flags	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	uint32_t		flags;$/;"	m	language:C++	struct:nat_stmt
flags	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	uint32_t		flags;$/;"	m	language:C++	struct:redir_stmt
flow	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^		struct flow_stmt	flow;$/;"	m	language:C++	union:stmt::__anon2	typeref:struct:stmt::__anon2::flow_stmt
flow_stmt	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^struct flow_stmt {$/;"	s	language:C++
flow_stmt_alloc	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^extern struct stmt *flow_stmt_alloc(const struct location *loc);$/;"	p	language:C++
flow_stmt_alloc	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^struct stmt *flow_stmt_alloc(const struct location *loc)$/;"	f	language:C++
flow_stmt_destroy	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static void flow_stmt_destroy(struct stmt *stmt)$/;"	f	language:C++	file:
flow_stmt_ops	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static const struct stmt_ops flow_stmt_ops = {$/;"	v	language:C++	typeref:struct:stmt_ops	file:
flow_stmt_print	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static void flow_stmt_print(const struct stmt *stmt)$/;"	f	language:C++	file:
FORCE_INLINE	/store/code/git/xxHash/xxhash.c	116;"	d	language:C++	file:
FORCE_INLINE	/store/code/git/xxHash/xxhash.c	120;"	d	language:C++	file:
FORCE_INLINE	/store/code/git/xxHash/xxhash.c	122;"	d	language:C++	file:
FORCE_INLINE	/store/code/git/xxHash/xxhash.c	125;"	d	language:C++	file:
full	/usr/bin/googler	/^    def full(self):$/;"	m	language:Python	class:GoogleUrl
fullScreenChanged	/store/code/git/mixxx/src/mixxx.h	/^    void fullScreenChanged(bool fullscreen);$/;"	p	language:C++	class:MixxxMainWindow
functools	/usr/bin/googler	/^import functools$/;"	i	language:Python
fwd	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^		struct fwd_stmt		fwd;$/;"	m	language:C++	union:stmt::__anon2	typeref:struct:stmt::__anon2::fwd_stmt
fwd_stmt	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^struct fwd_stmt {$/;"	s	language:C++
fwd_stmt_alloc	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^struct stmt *fwd_stmt_alloc(const struct location *loc);$/;"	p	language:C++
fwd_stmt_alloc	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^struct stmt *fwd_stmt_alloc(const struct location *loc)$/;"	f	language:C++
fwd_stmt_destroy	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static void fwd_stmt_destroy(struct stmt *stmt)$/;"	f	language:C++	file:
fwd_stmt_ops	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static const struct stmt_ops fwd_stmt_ops = {$/;"	v	language:C++	typeref:struct:stmt_ops	file:
fwd_stmt_print	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static void fwd_stmt_print(const struct stmt *stmt)$/;"	f	language:C++	file:
fwd_stmt_type	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^uint32_t fwd_stmt_type(const char *type);$/;"	p	language:C++
g:easytags_always_enabled	/etc/vimrc	/^let g:easytags_always_enabled = 1$/;"	v	language:Vim
g:easytags_async	/etc/vimrc	/^let g:easytags_async = 1$/;"	v	language:Vim
g:easytags_on_cursorhold	/etc/vimrc	/^let g:easytags_on_cursorhold = 1$/;"	v	language:Vim
g:gruvbox_contrast_dark	/etc/vimrc	/^let g:gruvbox_contrast_dark="high"$/;"	v	language:Vim
g:gruvbox_contrast_light	/etc/vimrc	/^let g:gruvbox_contrast_light="high"$/;"	v	language:Vim
g:gruvbox_improved_strings	/etc/vimrc	/^let g:gruvbox_improved_strings=0$/;"	v	language:Vim
g:gruvbox_improved_warnings	/etc/vimrc	/^let g:gruvbox_improved_warnings=0$/;"	v	language:Vim
g:mwAutoLoadMarks	/etc/vimrc	/^let g:mwAutoLoadMarks = 1$/;"	v	language:Vim
g:mwDefaultHighlightingPalette	/etc/vimrc	/^  let g:mwDefaultHighlightingPalette = 'maximum'$/;"	v	language:Vim
g:mwDefaultHighlightingPalette	/etc/vimrc	/^let g:mwDefaultHighlightingPalette = 'maximum'$/;"	v	language:Vim
g:mwDirectGroupJumpMappingNum	/etc/vimrc	/^    let g:mwDirectGroupJumpMappingNum = 50$/;"	v	language:Vim
g:mwIgnoreCase	/etc/vimrc	/^let g:mwIgnoreCase = 0$/;"	v	language:Vim
g:rbpt_loadcmd_toggle	/etc/vimrc	/^let g:rbpt_loadcmd_toggle = 0$/;"	v	language:Vim
g:rbpt_max	/etc/vimrc	/^let g:rbpt_max = 16$/;"	v	language:Vim
g:solarized_contrast	/etc/vimrc	/^  let g:solarized_contrast="high"	"default value is normal$/;"	v	language:Vim
g:solarized_contrast	/etc/vimrc	/^  let g:solarized_contrast="low"	"default value is normal$/;"	v	language:Vim
g:solarized_degrade	/etc/vimrc	/^  let g:solarized_degrade=0		"default value is 0$/;"	v	language:Vim
g:solarized_degrade	/etc/vimrc	/^  let g:solarized_degrade=0		"default value is 0$/;"	v	language:Vim
g:solarized_diffmode	/etc/vimrc	/^let g:solarized_diffmode="high"	"default value is normal$/;"	v	language:Vim
g:solarized_hitrail	/etc/vimrc	/^let g:solarized_hitrail=1	"default value is 0$/;"	v	language:Vim
g:solarized_termcolors	/etc/vimrc	/^  let g:solarized_termcolors=16	"default value is 16$/;"	v	language:Vim
g:solarized_termcolors	/etc/vimrc	/^  let g:solarized_termcolors=256	"default value is 16$/;"	v	language:Vim
g:solarized_termtrans	/etc/vimrc	/^  let g:solarized_termtrans=0		"default value is 0$/;"	v	language:Vim
g:solarized_termtrans	/etc/vimrc	/^  let g:solarized_termtrans=1		"default value is 0$/;"	v	language:Vim
g:solarized_visibility	/etc/vimrc	/^  let g:solarized_visibility="normal"	"default value is normal$/;"	v	language:Vim
g:solarized_visibility	/etc/vimrc	/^  let g:solarized_visibility="normal"	"default value is normal$/;"	v	language:Vim
g:startify_bookmarks	/etc/vimrc	/^let g:startify_bookmarks = [$/;"	v	language:Vim
g:startify_change_to_dir	/etc/vimrc	/^let g:startify_change_to_dir          = 1$/;"	v	language:Vim
g:startify_custom_footer	/etc/vimrc	/^let g:startify_custom_footer =$/;"	v	language:Vim
g:startify_custom_header	/etc/vimrc	/^let g:startify_custom_header =$/;"	v	language:Vim
g:startify_enable_special	/etc/vimrc	/^let g:startify_enable_special         = 1$/;"	v	language:Vim
g:startify_files_number	/etc/vimrc	/^let g:startify_files_number           = 8$/;"	v	language:Vim
g:startify_list_order	/etc/vimrc	/^let g:startify_list_order = [$/;"	v	language:Vim
g:startify_relative_path	/etc/vimrc	/^let g:startify_relative_path          = 1$/;"	v	language:Vim
g:startify_session_autoload	/etc/vimrc	/^let g:startify_session_autoload       = 1$/;"	v	language:Vim
g:startify_session_delete_buffers	/etc/vimrc	/^let g:startify_session_delete_buffers = 1$/;"	v	language:Vim
g:startify_session_persistence	/etc/vimrc	/^let g:startify_session_persistence    = 1$/;"	v	language:Vim
g:startify_skiplist	/etc/vimrc	/^let g:startify_skiplist = [$/;"	v	language:Vim
g:startify_update_oldfiles	/etc/vimrc	/^let g:startify_update_oldfiles        = 1$/;"	v	language:Vim
g:tfold	/etc/vimrc	/^let g:tfold = 0$/;"	v	language:Vim
g:thex	/etc/vimrc	/^let g:thex = 0$/;"	v	language:Vim
g:tindent	/etc/vimrc	/^let g:tindent = 0$/;"	v	language:Vim
g:tverbose	/etc/vimrc	/^let g:tverbose = 0$/;"	v	language:Vim
g:txxd	/etc/vimrc	/^let g:txxd = 0$/;"	v	language:Vim
g<c-]>	/etc/vimrc	/^nnoremap g<c-]> <c-]>$/;"	m	language:Vim
g<c-]>	/etc/vimrc	/^vnoremap g<c-]> <c-]>$/;"	m	language:Vim
GCC_VERSION	/store/code/git/xxHash/xxhash.c	178;"	d	language:C++	file:
getGuiTick	/store/code/git/mixxx/src/mixxx.h	/^    inline GuiTick* getGuiTick() { return m_pGuiTick; };$/;"	f	language:C++	class:MixxxMainWindow
getToolTipsCfg	/store/code/git/mixxx/src/mixxx.h	/^    inline mixxx::TooltipsPreference getToolTipsCfg() { return m_toolTipsCfg; }$/;"	f	language:C++	class:MixxxMainWindow
getWaveletName	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^    static std::string getWaveletName(Type);$/;"	p	language:C++	class:Wavelet
get_keys_and_count	/store/config/.weechat/python/autoload/vimode.py	/^def get_keys_and_count(combo):$/;"	f	language:Python
get_pos	/store/config/.weechat/python/autoload/vimode.py	/^def get_pos(data, regex, cur, ignore_cur=False, count=0):$/;"	f	language:Python
get_rate	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static const char *get_rate(uint64_t byte_rate, uint64_t *rate)$/;"	f	language:C++	file:
get_unit	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static const char *get_unit(uint64_t u)$/;"	f	language:C++	file:
GITHUB_BASE	/store/config/.weechat/python/autoload/vimode.py	/^GITHUB_BASE = "https:\/\/github.com\/GermainZ\/weechat-vimode\/blob\/master\/"$/;"	v	language:Python
GoogleConnection	/usr/bin/googler	/^class GoogleConnection(object):$/;"	c	language:Python
GoogleConnectionError	/usr/bin/googler	/^class GoogleConnectionError(Exception):$/;"	c	language:Python
GoogleParser	/usr/bin/googler	/^class GoogleParser(html.parser.HTMLParser):$/;"	c	language:Python
GooglerArgumentParser	/usr/bin/googler	/^class GooglerArgumentParser(argparse.ArgumentParser):$/;"	c	language:Python
GooglerCmd	/usr/bin/googler	/^class GooglerCmd(object):$/;"	c	language:Python
GooglerCmdException	/usr/bin/googler	/^class GooglerCmdException(Exception):$/;"	c	language:Python
GoogleUrl	/usr/bin/googler	/^class GoogleUrl(object):$/;"	c	language:Python
google_search	/store/code/git/core2/modules/useful.py	/^    def google_search(search_term, api_key, cse_id, **kwargs):$/;"	f	language:Python	function:fight
group	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	uint16_t		group;$/;"	m	language:C++	struct:log_stmt
gV	/etc/vimrc	/^noremap gV `[v`]$/;"	m	language:Vim
gzip	/usr/bin/googler	/^import gzip$/;"	i	language:Python
g_one	/store/code/git/xxHash/xxhash.c	/^    static const int g_one = 1;$/;"	v	language:C++	file:
Haar	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^        Haar = 0,$/;"	e	language:C++	enum:Wavelet::Type
handler	/usr/bin/googler	/^    def handler(self, tag):$/;"	f	language:Python	function:retrieve_tag_annotation
handler	/usr/bin/googler	/^    def handler(self, tag, attrs):$/;"	f	language:Python	function:annotate_tag
Hashbang	/etc/vimrc	/^function! Hashbang(portable, permission, RemExt)$/;"	f	language:Vim
help	/usr/bin/googler	/^    def help():$/;"	m	language:Python	class:GooglerCmd
help	/usr/lib/initcpio/install/esp-update-linux	/^help() {$/;"	f	language:Sh
homepushdcheck	/home/alyptik/.bashrc	/^homepushdcheck() {$/;"	f	language:Sh
host	/usr/bin/googler	/^    def host(self):$/;"	m	language:Python	class:GoogleConnection
hostname	/usr/bin/googler	/^    def hostname(self):$/;"	m	language:Python	class:GoogleUrl
hostname	/usr/bin/googler	/^    def hostname(self, hostname):$/;"	m	language:Python	class:GoogleUrl
html	/usr/bin/googler	/^import html.entities$/;"	i	language:Python
html	/usr/bin/googler	/^import html.parser$/;"	i	language:Python
http	/usr/bin/googler	/^import http.client$/;"	i	language:Python
HTTPSConnection	/usr/bin/googler	/^from http.client import HTTPSConnection$/;"	i	language:Python
icmp_code	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	int8_t			icmp_code;$/;"	m	language:C++	struct:reject_stmt
ignore	/store/code/git/mixxx/src/controllers/softtakeover.cpp	/^bool SoftTakeover::ignore(ControlObject* control, double newParameter) {$/;"	f	language:C++	class:SoftTakeover
ignore	/store/code/git/mixxx/src/controllers/softtakeover.cpp	/^bool SoftTakeoverCtrl::ignore(ControlObject* control, double newParameter) {$/;"	f	language:C++	class:SoftTakeoverCtrl
ignoreNext	/store/code/git/mixxx/src/controllers/softtakeover.cpp	/^void SoftTakeover::ignoreNext() {$/;"	f	language:C++	class:SoftTakeover
ignoreNext	/store/code/git/mixxx/src/controllers/softtakeover.cpp	/^void SoftTakeoverCtrl::ignoreNext(ControlObject* control) {$/;"	f	language:C++	class:SoftTakeoverCtrl
ignore_end	/usr/bin/googler	/^    def ignore_end(self, tag, annotation):$/;"	m	language:Python	class:GoogleParser
IGNORE_LIST	/usr/bin/googler	/^    IGNORE_LIST = [$/;"	v	language:Python	class:GoogleParser
ignore_start	/usr/bin/googler	/^    def ignore_start(self, tag, attrs):$/;"	m	language:Python	class:GoogleParser
imgurredirect	/store/config/scripts/plumber.sh	/^imgurredirect(){$/;"	f	language:Sh
initialize	/store/code/git/mixxx/src/mixxx.cpp	/^void MixxxMainWindow::initialize(QApplication* pApp, const CmdlineArgs& args) {$/;"	f	language:C++	class:MixxxMainWindow
initialize	/store/code/git/mixxx/src/mixxx.h	/^    void initialize(QApplication *app, const CmdlineArgs& args);$/;"	p	language:C++	class:MixxxMainWindow
initializeKeyboard	/store/code/git/mixxx/src/mixxx.cpp	/^void MixxxMainWindow::initializeKeyboard() {$/;"	f	language:C++	class:MixxxMainWindow
initializeKeyboard	/store/code/git/mixxx/src/mixxx.h	/^    void initializeKeyboard();$/;"	p	language:C++	class:MixxxMainWindow
initializeWindow	/store/code/git/mixxx/src/mixxx.cpp	/^void MixxxMainWindow::initializeWindow() {$/;"	f	language:C++	class:MixxxMainWindow
initializeWindow	/store/code/git/mixxx/src/mixxx.h	/^    void initializeWindow();$/;"	p	language:C++	class:MixxxMainWindow
insert_annotation	/usr/bin/googler	/^    def insert_annotation(self, tag, annotation):$/;"	m	language:Python	class:GoogleParser
isfile	/store/code/git/core2/modules/useful.py	/^from os.path import isfile$/;"	i	language:Python
is_colorstr	/usr/bin/googler	/^    def is_colorstr(arg):$/;"	m	language:Python	class:GooglerArgumentParser
is_duration	/usr/bin/googler	/^    def is_duration(arg):$/;"	m	language:Python	class:GooglerArgumentParser
IS_KEYWORD	/store/config/.weechat/python/autoload/vimode.py	/^IS_KEYWORD = re.compile(r"[a-zA-Z0-9_@À-ÿ]")$/;"	v	language:Python
j	/etc/vimrc	/^nnoremap <silent> <expr> j (v:count ? 'j' : 'gj')$/;"	m	language:Vim
jdump	/store/code/git/core2/modules/useful.py	/^from json import dump as jdump, load as jload$/;"	i	language:Python
jload	/store/code/git/core2/modules/useful.py	/^from json import dump as jdump, load as jload$/;"	i	language:Python
join	/store/code/git/core2/modules/utilities.py	/^def join(msg):$/;"	f	language:Python
json	/usr/bin/googler	/^            import json$/;"	i	language:Python
json	/usr/bin/googler	/^        import json$/;"	i	language:Python
json	/usr/bin/googler	/^import json$/;"	i	language:Python
jsonizable_object	/usr/bin/googler	/^    def jsonizable_object(self):$/;"	m	language:Python	class:Result
k	/etc/vimrc	/^nnoremap <silent> <expr> k (v:count ? 'k' : 'gk')$/;"	m	language:Vim
kAuxiliaryCount	/store/code/git/mixxx/src/mixxx.cpp	/^const int MixxxMainWindow::kAuxiliaryCount = 4;$/;"	m	language:C++	class:MixxxMainWindow	file:
kAuxiliaryCount	/store/code/git/mixxx/src/mixxx.h	/^    static const int kAuxiliaryCount;$/;"	m	language:C++	class:MixxxMainWindow
kDefaultTakeoverThreshold	/store/code/git/mixxx/src/controllers/softtakeover.cpp	/^const double SoftTakeover::kDefaultTakeoverThreshold = 3.0 \/ 128;$/;"	m	language:C++	class:SoftTakeover	file:
key	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	enum nft_ct_keys		key;$/;"	m	language:C++	struct:ct_stmt	typeref:enum:ct_stmt::nft_ct_keys
key	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	enum nft_meta_keys		key;$/;"	m	language:C++	struct:meta_stmt	typeref:enum:meta_stmt::nft_meta_keys
key	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	struct expr		*key;$/;"	m	language:C++	struct:flow_stmt	typeref:struct:flow_stmt::expr
key	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	struct expr		*key;$/;"	m	language:C++	struct:set_stmt	typeref:struct:set_stmt::expr
keywords	/usr/bin/googler	/^    def keywords(self):$/;"	m	language:Python	class:GooglerCmd
keywords	/usr/bin/googler	/^    def keywords(self):$/;"	m	language:Python	class:GoogleUrl
keywords	/usr/bin/googler	/^    def keywords(self, keywords):$/;"	m	language:Python	class:GoogleUrl
key_a	/store/config/.weechat/python/autoload/vimode.py	/^def key_a(buf, input_line, cur, count):$/;"	f	language:Python
key_A	/store/config/.weechat/python/autoload/vimode.py	/^def key_A(buf, input_line, cur, count):$/;"	f	language:Python
key_alt_j	/store/config/.weechat/python/autoload/vimode.py	/^def key_alt_j(buf, input_line, cur, count):$/;"	f	language:Python
key_base	/store/config/.weechat/python/autoload/vimode.py	/^def key_base(buf, input_line, cur, count):$/;"	f	language:Python
key_C	/store/config/.weechat/python/autoload/vimode.py	/^def key_C(buf, input_line, cur, count):$/;"	f	language:Python
key_cc	/store/config/.weechat/python/autoload/vimode.py	/^def key_cc(buf, input_line, cur, count):$/;"	f	language:Python
key_comma	/store/config/.weechat/python/autoload/vimode.py	/^def key_comma(buf, input_line, cur, count):$/;"	f	language:Python
key_G	/store/config/.weechat/python/autoload/vimode.py	/^def key_G(buf, input_line, cur, count):$/;"	f	language:Python
key_i	/store/config/.weechat/python/autoload/vimode.py	/^def key_i(buf, input_line, cur, count):$/;"	f	language:Python
key_I	/store/config/.weechat/python/autoload/vimode.py	/^def key_I(buf, input_line, cur, count):$/;"	f	language:Python
key_r	/store/config/.weechat/python/autoload/vimode.py	/^def key_r(buf, input_line, cur, count):$/;"	f	language:Python
key_R	/store/config/.weechat/python/autoload/vimode.py	/^def key_R(buf, input_line, cur, count):$/;"	f	language:Python
key_semicolon	/store/config/.weechat/python/autoload/vimode.py	/^def key_semicolon(buf, input_line, cur, count, swap=False):$/;"	f	language:Python
key_tilda	/store/config/.weechat/python/autoload/vimode.py	/^def key_tilda(buf, input_line, cur, count):$/;"	f	language:Python
key_yy	/store/config/.weechat/python/autoload/vimode.py	/^def key_yy(buf, input_line, cur, count):$/;"	f	language:Python
kick	/store/code/git/core2/modules/utilities.py	/^def kick(msg):$/;"	f	language:Python
kMicrophoneCount	/store/code/git/mixxx/src/mixxx.cpp	/^const int MixxxMainWindow::kMicrophoneCount = 4;$/;"	m	language:C++	class:MixxxMainWindow	file:
kMicrophoneCount	/store/code/git/mixxx/src/mixxx.h	/^    static const int kMicrophoneCount;$/;"	m	language:C++	class:MixxxMainWindow
kSubsequentValueOverrideTime	/store/code/git/mixxx/src/controllers/softtakeover.cpp	/^const mixxx::Duration SoftTakeover::kSubsequentValueOverrideTime =$/;"	m	language:C++	class:SoftTakeover	file:
large_len	/store/code/git/xxHash/xxhash.h	/^       unsigned large_len;$/;"	m	language:C++	struct:XXH32_state_s
LastType	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^        LastType = Meyer$/;"	e	language:C++	enum:Wavelet::Type
last_search_motion	/store/config/.weechat/python/autoload/vimode.py	/^last_search_motion = {'motion': None, 'data': None}$/;"	v	language:Python
last_signal_time	/store/config/.weechat/python/autoload/vimode.py	/^last_signal_time = 0$/;"	v	language:Python
launchProgress	/store/code/git/mixxx/src/mixxx.cpp	/^void MixxxMainWindow::launchProgress(int progress) {$/;"	f	language:C++	class:MixxxMainWindow
launchProgress	/store/code/git/mixxx/src/mixxx.h	/^    void launchProgress(int progress);$/;"	p	language:C++	class:MixxxMainWindow
level	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	uint32_t		level;$/;"	m	language:C++	struct:log_stmt
limit	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^		struct limit_stmt	limit;$/;"	m	language:C++	union:stmt::__anon2	typeref:struct:stmt::__anon2::limit_stmt
limit_stmt	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^struct limit_stmt {$/;"	s	language:C++
limit_stmt_alloc	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^extern struct stmt *limit_stmt_alloc(const struct location *loc);$/;"	p	language:C++
limit_stmt_alloc	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^struct stmt *limit_stmt_alloc(const struct location *loc)$/;"	f	language:C++
limit_stmt_ops	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static const struct stmt_ops limit_stmt_ops = {$/;"	v	language:C++	typeref:struct:stmt_ops	file:
limit_stmt_print	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static void limit_stmt_print(const struct stmt *stmt)$/;"	f	language:C++	file:
list	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	struct list_head		list;$/;"	m	language:C++	struct:stmt	typeref:struct:stmt::list_head
location	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	struct location			location;$/;"	m	language:C++	struct:stmt	typeref:struct:stmt::location
log	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^		struct log_stmt		log;$/;"	m	language:C++	union:stmt::__anon2	typeref:struct:stmt::__anon2::log_stmt
logger	/usr/bin/googler	/^logger = logging.getLogger()$/;"	v	language:Python
logging	/usr/bin/googler	/^import logging$/;"	i	language:Python
log_level	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static const char *log_level(uint32_t level)$/;"	f	language:C++	file:
log_stmt	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^struct log_stmt {$/;"	s	language:C++
log_stmt_alloc	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^extern struct stmt *log_stmt_alloc(const struct location *loc);$/;"	p	language:C++
log_stmt_alloc	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^struct stmt *log_stmt_alloc(const struct location *loc)$/;"	f	language:C++
log_stmt_destroy	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static void log_stmt_destroy(struct stmt *stmt)$/;"	f	language:C++	file:
log_stmt_ops	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static const struct stmt_ops log_stmt_ops = {$/;"	v	language:C++	typeref:struct:stmt_ops	file:
log_stmt_print	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static void log_stmt_print(const struct stmt *stmt)$/;"	f	language:C++	file:
main	/usr/bin/googler	/^def main():$/;"	f	language:Python
masq	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^		struct masq_stmt	masq;$/;"	m	language:C++	union:stmt::__anon2	typeref:struct:stmt::__anon2::masq_stmt
masq_stmt	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^struct masq_stmt {$/;"	s	language:C++
masq_stmt_alloc	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^extern struct stmt *masq_stmt_alloc(const struct location *loc);$/;"	p	language:C++
masq_stmt_alloc	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^struct stmt *masq_stmt_alloc(const struct location *loc)$/;"	f	language:C++
masq_stmt_destroy	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static void masq_stmt_destroy(struct stmt *stmt)$/;"	f	language:C++	file:
masq_stmt_ops	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static const struct stmt_ops masq_stmt_ops = {$/;"	v	language:C++	typeref:struct:stmt_ops	file:
masq_stmt_print	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static void masq_stmt_print(const struct stmt *stmt)$/;"	f	language:C++	file:
me	/store/code/git/core2/modules/utilities.py	/^def me(msg):$/;"	f	language:Python
mem32	/store/code/git/xxHash/xxhash.h	/^       unsigned mem32[4];   \/* buffer defined as U32 for alignment *\/$/;"	m	language:C++	struct:XXH32_state_s
mem64	/store/code/git/xxHash/xxhash.h	/^       unsigned long long mem64[4];   \/* buffer defined as U64 for alignment *\/$/;"	m	language:C++	struct:XXH64_state_s
memsize	/store/code/git/xxHash/xxhash.h	/^       unsigned memsize;$/;"	m	language:C++	struct:XXH32_state_s
memsize	/store/code/git/xxHash/xxhash.h	/^       unsigned memsize;$/;"	m	language:C++	struct:XXH64_state_s
MEM_MODULE	/store/code/git/xxHash/xxhash.c	526;"	d	language:C++	file:
meta	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^		struct meta_stmt	meta;$/;"	m	language:C++	union:stmt::__anon2	typeref:struct:stmt::__anon2::meta_stmt
meta_stmt	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^struct meta_stmt {$/;"	s	language:C++
meta_stmt_alloc	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^extern struct stmt *meta_stmt_alloc(const struct location *loc,$/;"	p	language:C++
Meyer	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^	Meyer,$/;"	e	language:C++	enum:Wavelet::Type
MixxxMainWindow	/store/code/git/mixxx/src/mixxx.cpp	/^MixxxMainWindow::MixxxMainWindow(QApplication* pApp, const CmdlineArgs& args)$/;"	f	language:C++	class:MixxxMainWindow
MixxxMainWindow	/store/code/git/mixxx/src/mixxx.h	/^    MixxxMainWindow(QApplication *app, const CmdlineArgs& args);$/;"	p	language:C++	class:MixxxMainWindow
MixxxMainWindow	/store/code/git/mixxx/src/mixxx.h	/^class MixxxMainWindow : public QMainWindow {$/;"	c	language:C++
MIXXX_H	/store/code/git/mixxx/src/mixxx.h	19;"	d	language:C++
mode	/store/code/git/core2/modules/utilities.py	/^def mode(msg):$/;"	f	language:Python
mode	/store/config/.weechat/python/autoload/vimode.py	/^mode = "INSERT"$/;"	v	language:Python
motion_0	/store/config/.weechat/python/autoload/vimode.py	/^def motion_0(input_line, cur, count):$/;"	f	language:Python
motion_b	/store/config/.weechat/python/autoload/vimode.py	/^def motion_b(input_line, cur, count):$/;"	f	language:Python
motion_B	/store/config/.weechat/python/autoload/vimode.py	/^def motion_B(input_line, cur, count):$/;"	f	language:Python
motion_base	/store/config/.weechat/python/autoload/vimode.py	/^def motion_base(input_line, cur, count):$/;"	f	language:Python
motion_carret	/store/config/.weechat/python/autoload/vimode.py	/^def motion_carret(input_line, cur, count):$/;"	f	language:Python
motion_dollar	/store/config/.weechat/python/autoload/vimode.py	/^def motion_dollar(input_line, cur, count):$/;"	f	language:Python
motion_e	/store/config/.weechat/python/autoload/vimode.py	/^def motion_e(input_line, cur, count):$/;"	f	language:Python
motion_E	/store/config/.weechat/python/autoload/vimode.py	/^def motion_E(input_line, cur, count):$/;"	f	language:Python
motion_f	/store/config/.weechat/python/autoload/vimode.py	/^def motion_f(input_line, cur, count):$/;"	f	language:Python
motion_F	/store/config/.weechat/python/autoload/vimode.py	/^def motion_F(input_line, cur, count):$/;"	f	language:Python
motion_ge	/store/config/.weechat/python/autoload/vimode.py	/^def motion_ge(input_line, cur, count):$/;"	f	language:Python
motion_gE	/store/config/.weechat/python/autoload/vimode.py	/^def motion_gE(input_line, cur, count):$/;"	f	language:Python
motion_h	/store/config/.weechat/python/autoload/vimode.py	/^def motion_h(input_line, cur, count):$/;"	f	language:Python
motion_l	/store/config/.weechat/python/autoload/vimode.py	/^def motion_l(input_line, cur, count):$/;"	f	language:Python
motion_t	/store/config/.weechat/python/autoload/vimode.py	/^def motion_t(input_line, cur, count):$/;"	f	language:Python
motion_T	/store/config/.weechat/python/autoload/vimode.py	/^def motion_T(input_line, cur, count):$/;"	f	language:Python
motion_w	/store/config/.weechat/python/autoload/vimode.py	/^def motion_w(input_line, cur, count):$/;"	f	language:Python
motion_W	/store/config/.weechat/python/autoload/vimode.py	/^def motion_W(input_line, cur, count):$/;"	f	language:Python
mpvcmd	/store/config/scripts/plumber.sh	/^mpvcmd(){$/;"	f	language:Sh
m_cmdLineArgs	/store/code/git/mixxx/src/mixxx.h	/^    const CmdlineArgs& m_cmdLineArgs;$/;"	m	language:C++	class:MixxxMainWindow
m_pBroadcastManager	/store/code/git/mixxx/src/mixxx.h	/^    BroadcastManager* m_pBroadcastManager;$/;"	m	language:C++	class:MixxxMainWindow
m_pControllerManager	/store/code/git/mixxx/src/mixxx.h	/^    ControllerManager* m_pControllerManager;$/;"	m	language:C++	class:MixxxMainWindow
m_pDeveloperToolsDlg	/store/code/git/mixxx/src/mixxx.h	/^    DlgDeveloperTools* m_pDeveloperToolsDlg;$/;"	m	language:C++	class:MixxxMainWindow
m_pEffectsManager	/store/code/git/mixxx/src/mixxx.h	/^    EffectsManager* m_pEffectsManager;$/;"	m	language:C++	class:MixxxMainWindow
m_pEngine	/store/code/git/mixxx/src/mixxx.h	/^    EngineMaster* m_pEngine;$/;"	m	language:C++	class:MixxxMainWindow
m_pGuiTick	/store/code/git/mixxx/src/mixxx.h	/^    GuiTick* m_pGuiTick;$/;"	m	language:C++	class:MixxxMainWindow
m_pKbdConfig	/store/code/git/mixxx/src/mixxx.h	/^    ConfigObject<ConfigValueKbd>* m_pKbdConfig;$/;"	m	language:C++	class:MixxxMainWindow
m_pKbdConfigEmpty	/store/code/git/mixxx/src/mixxx.h	/^    ConfigObject<ConfigValueKbd>* m_pKbdConfigEmpty;$/;"	m	language:C++	class:MixxxMainWindow
m_pKeyboard	/store/code/git/mixxx/src/mixxx.h	/^    KeyboardEventFilter* m_pKeyboard;$/;"	m	language:C++	class:MixxxMainWindow
m_pLaunchImage	/store/code/git/mixxx/src/mixxx.h	/^    LaunchImage* m_pLaunchImage;$/;"	m	language:C++	class:MixxxMainWindow
m_pLibrary	/store/code/git/mixxx/src/mixxx.h	/^    Library* m_pLibrary;$/;"	m	language:C++	class:MixxxMainWindow
m_pMenuBar	/store/code/git/mixxx/src/mixxx.h	/^    WMainMenuBar* m_pMenuBar;$/;"	m	language:C++	class:MixxxMainWindow
m_pPlayerManager	/store/code/git/mixxx/src/mixxx.h	/^    PlayerManager* m_pPlayerManager;$/;"	m	language:C++	class:MixxxMainWindow
m_pPrefDlg	/store/code/git/mixxx/src/mixxx.h	/^    DlgPreferences* m_pPrefDlg;$/;"	m	language:C++	class:MixxxMainWindow
m_pRecordingManager	/store/code/git/mixxx/src/mixxx.h	/^    RecordingManager* m_pRecordingManager;$/;"	m	language:C++	class:MixxxMainWindow
m_pSettingsManager	/store/code/git/mixxx/src/mixxx.h	/^    SettingsManager* m_pSettingsManager;$/;"	m	language:C++	class:MixxxMainWindow
m_pSkinLoader	/store/code/git/mixxx/src/mixxx.h	/^    SkinLoader* m_pSkinLoader;$/;"	m	language:C++	class:MixxxMainWindow
m_pSoundManager	/store/code/git/mixxx/src/mixxx.h	/^    SoundManager* m_pSoundManager;$/;"	m	language:C++	class:MixxxMainWindow
m_pTouchShift	/store/code/git/mixxx/src/mixxx.h	/^    ControlPushButton* m_pTouchShift;$/;"	m	language:C++	class:MixxxMainWindow
m_pVCManager	/store/code/git/mixxx/src/mixxx.h	/^    VinylControlManager* m_pVCManager;$/;"	m	language:C++	class:MixxxMainWindow
m_pWidgetParent	/store/code/git/mixxx/src/mixxx.h	/^    QWidget* m_pWidgetParent;$/;"	m	language:C++	class:MixxxMainWindow
m_runtime_timer	/store/code/git/mixxx/src/mixxx.h	/^    Timer m_runtime_timer;$/;"	m	language:C++	class:MixxxMainWindow
m_toolTipsCfg	/store/code/git/mixxx/src/mixxx.h	/^    mixxx::TooltipsPreference m_toolTipsCfg;$/;"	m	language:C++	class:MixxxMainWindow
name	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	const char		*name;$/;"	m	language:C++	struct:stmt_ops
nat	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^		struct nat_stmt		nat;$/;"	m	language:C++	union:stmt::__anon2	typeref:struct:stmt::__anon2::nat_stmt
nat_stmt	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^struct nat_stmt {$/;"	s	language:C++
nat_stmt_alloc	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^extern struct stmt *nat_stmt_alloc(const struct location *loc);$/;"	p	language:C++
nat_stmt_alloc	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^struct stmt *nat_stmt_alloc(const struct location *loc)$/;"	f	language:C++
nat_stmt_destroy	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static void nat_stmt_destroy(struct stmt *stmt)$/;"	f	language:C++	file:
nat_stmt_ops	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static const struct stmt_ops nat_stmt_ops = {$/;"	v	language:C++	typeref:struct:stmt_ops	file:
nat_stmt_print	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static void nat_stmt_print(const struct stmt *stmt)$/;"	f	language:C++	file:
netloc	/usr/bin/googler	/^    def netloc(self):$/;"	m	language:Python	class:GoogleUrl
news	/usr/bin/googler	/^    def news(self):$/;"	m	language:Python	class:GoogleUrl
newSkinLoaded	/store/code/git/mixxx/src/mixxx.h	/^    void newSkinLoaded();$/;"	p	language:C++	class:MixxxMainWindow
new_connection	/usr/bin/googler	/^    def new_connection(self, host=None, port=None, timeout=45):$/;"	m	language:Python	class:GoogleConnection
next_page	/usr/bin/googler	/^    def next_page(self):$/;"	m	language:Python	class:GoogleUrl
NFTABLES_STATEMENT_H	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	2;"	d	language:C++
NoKeywordsException	/usr/bin/googler	/^class NoKeywordsException(GooglerCmdException):$/;"	c	language:Python
nonnegative_int	/usr/bin/googler	/^    def nonnegative_int(arg):$/;"	m	language:Python	class:GooglerArgumentParser
noOutputDlg	/store/code/git/mixxx/src/mixxx.cpp	/^int MixxxMainWindow::noOutputDlg(bool *continueClicked) {$/;"	f	language:C++	class:MixxxMainWindow
noOutputDlg	/store/code/git/mixxx/src/mixxx.h	/^    int noOutputDlg(bool* continueClicked);$/;"	p	language:C++	class:MixxxMainWindow
noSoundDlg	/store/code/git/mixxx/src/mixxx.cpp	/^int MixxxMainWindow::noSoundDlg(void) {$/;"	f	language:C++	class:MixxxMainWindow
noSoundDlg	/store/code/git/mixxx/src/mixxx.h	/^    int noSoundDlg(void);$/;"	p	language:C++	class:MixxxMainWindow
notice	/store/code/git/core2/modules/utilities.py	/^def notice(msg):$/;"	f	language:Python
Notify	/store/code/git/core2/modules/useful.py	/^from modules.notify import Notify$/;"	i	language:Python
notify_in	/store/code/git/core2/modules/useful.py	/^def notify_in(msg):$/;"	f	language:Python
no_argument	/usr/bin/googler	/^def no_argument(method):$/;"	f	language:Python
OmniCpp_MayCompleteArrow	/etc/vimrc	/^let OmniCpp_MayCompleteArrow = 1$/;"	v	language:Vim
OmniCpp_MayCompleteDot	/etc/vimrc	/^let OmniCpp_MayCompleteDot = 1$/;"	v	language:Vim
OmniCpp_MayCompleteScope	/etc/vimrc	/^let OmniCpp_MayCompleteScope = 1$/;"	v	language:Vim
op	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	enum nft_dynset_ops	op;$/;"	m	language:C++	struct:set_stmt	typeref:enum:set_stmt::nft_dynset_ops
op	/store/code/git/core2/modules/utilities.py	/^def op(msg):$/;"	f	language:Python
open_url	/usr/bin/googler	/^def open_url(url):$/;"	f	language:Python
operator_base	/store/config/.weechat/python/autoload/vimode.py	/^def operator_base(buf, input_line, pos1, pos2, overwrite):$/;"	f	language:Python
operator_c	/store/config/.weechat/python/autoload/vimode.py	/^def operator_c(buf, input_line, pos1, pos2, overwrite=False):$/;"	f	language:Python
operator_d	/store/config/.weechat/python/autoload/vimode.py	/^def operator_d(buf, input_line, pos1, pos2, overwrite=False):$/;"	f	language:Python
operator_y	/store/config/.weechat/python/autoload/vimode.py	/^def operator_y(buf, input_line, pos1, pos2, _):$/;"	f	language:Python
ops	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	const struct stmt_ops		*ops;$/;"	m	language:C++	struct:stmt	typeref:struct:stmt::stmt_ops
options	/usr/bin/googler	/^    def options(self):$/;"	m	language:Python	class:GooglerCmd
os	/store/config/.weechat/python/autoload/vimode.py	/^import os$/;"	i	language:Python
os	/usr/bin/googler	/^import os$/;"	i	language:Python
package	/home/alyptik/aur/i3status-mpd-git/PKGBUILD	/^package() {$/;"	f	language:Sh
package	/home/alyptik/aur/john-git/PKGBUILD	/^package() {$/;"	f	language:Sh
package	/home/alyptik/aur/lvtk-git/PKGBUILD	/^package() {$/;"	f	language:Sh
package	/home/alyptik/aur/mixxx-git/PKGBUILD	/^package() {$/;"	f	language:Sh
package	/store/code/aur/eclipse-cdt/PKGBUILD	/^package() {$/;"	f	language:Sh
package	/store/code/aur/nftables/PKGBUILD	/^package() {$/;"	f	language:Sh
packets	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	uint64_t		packets;$/;"	m	language:C++	struct:counter_stmt
parse	/usr/bin/googler	/^import urllib.parse$/;"	i	language:Python
parse	/usr/bin/googler	/^import urllib.request, urllib.parse$/;"	i	language:Python
parser	/usr/bin/googler	/^import html.parser$/;"	i	language:Python
parse_args	/usr/bin/googler	/^def parse_args(args=None, namespace=None):$/;"	f	language:Python
payload	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^		struct payload_stmt	payload;$/;"	m	language:C++	union:stmt::__anon2	typeref:struct:stmt::__anon2::payload_stmt
payload_stmt	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^struct payload_stmt {$/;"	s	language:C++
payload_stmt_alloc	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^extern struct stmt *payload_stmt_alloc(const struct location *loc,$/;"	p	language:C++
pkgver	/home/alyptik/aur/i3status-mpd-git/PKGBUILD	/^pkgver() {$/;"	f	language:Sh
pkgver	/home/alyptik/aur/john-git/PKGBUILD	/^pkgver() {$/;"	f	language:Sh
pkgver	/home/alyptik/aur/lvtk-git/PKGBUILD	/^pkgver() {$/;"	f	language:Sh
pkgver	/home/alyptik/aur/mixxx-git/PKGBUILD	/^pkgver() {$/;"	f	language:Sh
platform	/usr/bin/googler	/^import platform$/;"	i	language:Python
pop_textbuf	/usr/bin/googler	/^    def pop_textbuf(self):$/;"	m	language:Python	class:GoogleParser
positive_int	/usr/bin/googler	/^    def positive_int(arg):$/;"	m	language:Python	class:GooglerArgumentParser
pprint	/store/code/git/core2/modules/useful.py	/^    import pprint$/;"	i	language:Python
prefix	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	const char		*prefix;$/;"	m	language:C++	struct:log_stmt
prepare	/home/alyptik/aur/john-git/PKGBUILD	/^prepare() {$/;"	f	language:Sh
prepare	/home/alyptik/aur/linux-surfacepro3-rt/PKGBUILD	/^prepare() {$/;"	f	language:Sh
prepare	/store/code/aur/linux-surfacepro3-rt/PKGBUILD	/^prepare() {$/;"	f	language:Sh
prepare	/store/code/aur/nftables/PKGBUILD	/^prepare() {$/;"	f	language:Sh
prev_page	/usr/bin/googler	/^    def prev_page(self):$/;"	m	language:Python	class:GoogleUrl
PRIME32_1	/store/code/git/xxHash/xxhash.c	/^static const U32 PRIME32_1 = 2654435761U;$/;"	v	language:C++	file:
PRIME32_2	/store/code/git/xxHash/xxhash.c	/^static const U32 PRIME32_2 = 2246822519U;$/;"	v	language:C++	file:
PRIME32_3	/store/code/git/xxHash/xxhash.c	/^static const U32 PRIME32_3 = 3266489917U;$/;"	v	language:C++	file:
PRIME32_4	/store/code/git/xxHash/xxhash.c	/^static const U32 PRIME32_4 =  668265263U;$/;"	v	language:C++	file:
PRIME32_5	/store/code/git/xxHash/xxhash.c	/^static const U32 PRIME32_5 =  374761393U;$/;"	v	language:C++	file:
PRIME64_1	/store/code/git/xxHash/xxhash.c	/^static const U64 PRIME64_1 = 11400714785074694791ULL;$/;"	v	language:C++	file:
PRIME64_2	/store/code/git/xxHash/xxhash.c	/^static const U64 PRIME64_2 = 14029467366897019727ULL;$/;"	v	language:C++	file:
PRIME64_3	/store/code/git/xxHash/xxhash.c	/^static const U64 PRIME64_3 =  1609587929392839161ULL;$/;"	v	language:C++	file:
PRIME64_4	/store/code/git/xxHash/xxhash.c	/^static const U64 PRIME64_4 =  9650029242287828579ULL;$/;"	v	language:C++	file:
PRIME64_5	/store/code/git/xxHash/xxhash.c	/^static const U64 PRIME64_5 =  2870177450012600261ULL;$/;"	v	language:C++	file:
print	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	void			(*print)(const struct stmt *stmt);$/;"	m	language:C++	struct:stmt_ops
print	/usr/bin/googler	/^    def print(self):$/;"	m	language:Python	class:Result
printerr	/usr/bin/googler	/^def printerr(msg):$/;"	f	language:Python
print_general_info	/usr/bin/googler	/^    def print_general_info(file=None):$/;"	m	language:Python	class:GooglerArgumentParser
print_help	/usr/bin/googler	/^    def print_help(self, file=None):$/;"	m	language:Python	class:GooglerArgumentParser
print_nf_nat_flags	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static void print_nf_nat_flags(uint32_t flags)$/;"	f	language:C++	file:
print_omniprompt_help	/usr/bin/googler	/^    def print_omniprompt_help(file=None):$/;"	m	language:Python	class:GooglerArgumentParser
print_warning	/store/config/.weechat/python/autoload/vimode.py	/^def print_warning(text):$/;"	f	language:Python
proto	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	struct expr		*proto;$/;"	m	language:C++	struct:masq_stmt	typeref:struct:masq_stmt::expr
proto	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	struct expr		*proto;$/;"	m	language:C++	struct:nat_stmt	typeref:struct:nat_stmt::expr
proto	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	struct expr		*proto;$/;"	m	language:C++	struct:redir_stmt	typeref:struct:redir_stmt::expr
qthreshold	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	uint16_t		qthreshold;$/;"	m	language:C++	struct:log_stmt
query	/usr/bin/googler	/^    def query(self):$/;"	m	language:Python	class:GoogleUrl
queue	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^		struct queue_stmt	queue;$/;"	m	language:C++	union:stmt::__anon2	typeref:struct:stmt::__anon2::queue_stmt
queue	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	struct expr		*queue;$/;"	m	language:C++	struct:queue_stmt	typeref:struct:queue_stmt::expr
queue_stmt	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^struct queue_stmt {$/;"	s	language:C++
queue_stmt_alloc	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^extern struct stmt *queue_stmt_alloc(const struct location *loc);$/;"	p	language:C++
queue_stmt_alloc	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^struct stmt *queue_stmt_alloc(const struct location *loc)$/;"	f	language:C++
queue_stmt_ops	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static const struct stmt_ops queue_stmt_ops = {$/;"	v	language:C++	typeref:struct:stmt_ops	file:
queue_stmt_print	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static void queue_stmt_print(const struct stmt *stmt)$/;"	f	language:C++	file:
rate	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	uint64_t		rate;$/;"	m	language:C++	struct:limit_stmt
raw	/store/code/git/core2/modules/utilities.py	/^def raw(msg):$/;"	f	language:Python
RAW_DOWNLOAD_REPO_BASE	/usr/bin/googler	/^RAW_DOWNLOAD_REPO_BASE = 'https:\/\/raw.githubusercontent.com\/jarun\/googler'$/;"	v	language:Python
re	/store/config/.weechat/python/autoload/vimode.py	/^import re$/;"	i	language:Python
readline	/usr/bin/googler	/^    import readline$/;"	i	language:Python
README_URL	/store/config/.weechat/python/autoload/vimode.py	/^README_URL = GITHUB_BASE + "README.md"$/;"	v	language:Python
read_next_command	/usr/bin/googler	/^    def read_next_command(self):$/;"	m	language:Python	class:GooglerCmd
rebootMixxxView	/store/code/git/mixxx/src/mixxx.cpp	/^void MixxxMainWindow::rebootMixxxView() {$/;"	f	language:C++	class:MixxxMainWindow
rebootMixxxView	/store/code/git/mixxx/src/mixxx.h	/^    void rebootMixxxView();$/;"	p	language:C++	class:MixxxMainWindow
recompile	/store/code/git/core2/modules/useful.py	/^from re import compile as recompile, match as rematch$/;"	i	language:Python
record_charref	/usr/bin/googler	/^    def record_charref(self, ref):$/;"	m	language:Python	class:GoogleParser
record_data	/usr/bin/googler	/^    def record_data(self, data):$/;"	m	language:Python	class:GoogleParser
record_entityref	/usr/bin/googler	/^    def record_entityref(self, ref):$/;"	m	language:Python	class:GoogleParser
record_transformed_data	/usr/bin/googler	/^            def record_transformed_data(data):$/;"	f	language:Python	function:GoogleParser.start_populating_textbuf
redir	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^		struct redir_stmt	redir;$/;"	m	language:C++	union:stmt::__anon2	typeref:struct:stmt::__anon2::redir_stmt
redir_stmt	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^struct redir_stmt {$/;"	s	language:C++
redir_stmt_alloc	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^extern struct stmt *redir_stmt_alloc(const struct location *loc);$/;"	p	language:C++
redir_stmt_alloc	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^struct stmt *redir_stmt_alloc(const struct location *loc)$/;"	f	language:C++
redir_stmt_destroy	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static void redir_stmt_destroy(struct stmt *stmt)$/;"	f	language:C++	file:
redir_stmt_ops	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static const struct stmt_ops redir_stmt_ops = {$/;"	v	language:C++	typeref:struct:stmt_ops	file:
redir_stmt_print	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static void redir_stmt_print(const struct stmt *stmt)$/;"	f	language:C++	file:
REGEX_INT	/store/config/.weechat/python/autoload/vimode.py	/^REGEX_INT = r"[0-9]"$/;"	v	language:Python
REGEX_MOTION_CARRET	/store/config/.weechat/python/autoload/vimode.py	/^REGEX_MOTION_CARRET = re.compile(r"\\S")$/;"	v	language:Python
REGEX_MOTION_G_UPPERCASE_E	/store/config/.weechat/python/autoload/vimode.py	/^REGEX_MOTION_G_UPPERCASE_E = REGEX_MOTION_UPPERCASE_W$/;"	v	language:Python
REGEX_MOTION_LOWERCASE_W	/store/config/.weechat/python/autoload/vimode.py	/^REGEX_MOTION_LOWERCASE_W = re.compile(r"\\b\\S|(?<=\\s)\\S")$/;"	v	language:Python
REGEX_MOTION_UPPERCASE_B	/store/config/.weechat/python/autoload/vimode.py	/^REGEX_MOTION_UPPERCASE_B = REGEX_MOTION_UPPERCASE_E$/;"	v	language:Python
REGEX_MOTION_UPPERCASE_E	/store/config/.weechat/python/autoload/vimode.py	/^REGEX_MOTION_UPPERCASE_E = re.compile(r"\\S(?!\\S)")$/;"	v	language:Python
REGEX_MOTION_UPPERCASE_W	/store/config/.weechat/python/autoload/vimode.py	/^REGEX_MOTION_UPPERCASE_W = re.compile(r"(?<=\\s)\\S")$/;"	v	language:Python
REGEX_PROBLEMATIC_KEYBINDINGS	/store/config/.weechat/python/autoload/vimode.py	/^REGEX_PROBLEMATIC_KEYBINDINGS = re.compile(r"meta-\\w(meta|ctrl)")$/;"	v	language:Python
reject	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^		struct reject_stmt	reject;$/;"	m	language:C++	union:stmt::__anon2	typeref:struct:stmt::__anon2::reject_stmt
reject_stmt	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^struct reject_stmt {$/;"	s	language:C++
reject_stmt_alloc	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^extern struct stmt *reject_stmt_alloc(const struct location *loc);$/;"	p	language:C++
reject_stmt_alloc	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^struct stmt *reject_stmt_alloc(const struct location *loc)$/;"	f	language:C++
reject_stmt_ops	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static const struct stmt_ops reject_stmt_ops = {$/;"	v	language:C++	typeref:struct:stmt_ops	file:
reject_stmt_print	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static void reject_stmt_print(const struct stmt *stmt)$/;"	f	language:C++	file:
relative	/usr/bin/googler	/^    def relative(self):$/;"	m	language:Python	class:GoogleUrl
reload	/store/code/git/core2/modules/utilities.py	/^def reload(msg):$/;"	f	language:Python
rematch	/store/code/git/core2/modules/useful.py	/^from re import compile as recompile, match as rematch$/;"	i	language:Python
renew_connection	/usr/bin/googler	/^    def renew_connection(self, timeout=45):$/;"	m	language:Python	class:GoogleConnection
request	/usr/bin/googler	/^    import urllib.request$/;"	i	language:Python
request	/usr/bin/googler	/^import urllib.request, urllib.parse$/;"	i	language:Python
require_keywords	/usr/bin/googler	/^def require_keywords(method):$/;"	f	language:Python
resCur	/etc/vimrc	/^augroup resCur$/;"	a	language:Vim
ResCur	/etc/vimrc	/^function! ResCur()$/;"	f	language:Vim
reserved	/store/code/git/xxHash/xxhash.h	/^       unsigned reserved;   \/* never read nor write, will be removed in a future version *\/$/;"	m	language:C++	struct:XXH32_state_s
reserved	/store/code/git/xxHash/xxhash.h	/^       unsigned reserved[2];          \/* never read nor write, will be removed in a future version *\/$/;"	m	language:C++	struct:XXH64_state_s
restrict	/store/code/git/xxHash/xxhash.h	79;"	d	language:C++
Result	/usr/bin/googler	/^class Result(object):$/;"	c	language:Python
result_end	/usr/bin/googler	/^    def result_end(self, tag, annotation):$/;"	m	language:Python	class:GoogleParser
result_start	/usr/bin/googler	/^    def result_start(self, tag, attrs):$/;"	m	language:Python	class:GoogleParser
retrieve_tag_annotation	/usr/bin/googler	/^def retrieve_tag_annotation(annotated_endtag_handler):$/;"	f	language:Python
rmtell	/store/code/git/core2/modules/useful.py	/^def rmtell(msg):$/;"	f	language:Python
root_end	/usr/bin/googler	/^    def root_end(self, tag, annotation):$/;"	m	language:Python	class:GoogleParser
root_start	/usr/bin/googler	/^    def root_start(self, tag, attrs):$/;"	m	language:Python	class:GoogleParser
S32	/store/code/git/xxHash/xxhash.c	/^    typedef   signed int       S32;$/;"	t	language:C++	file:
S32	/store/code/git/xxHash/xxhash.c	/^    typedef  int32_t S32;$/;"	t	language:C++	file:
say	/store/code/git/core2/modules/utilities.py	/^def say(msg):$/;"	f	language:Python
SCRIPT_AUTHOR	/store/config/.weechat/python/autoload/vimode.py	/^SCRIPT_AUTHOR = "GermainZ <germanosz@gmail.com>"$/;"	v	language:Python
SCRIPT_DESC	/store/config/.weechat/python/autoload/vimode.py	/^SCRIPT_DESC = ("Add vi\/vim-like modes and keybindings to WeeChat.")$/;"	v	language:Python
SCRIPT_LICENSE	/store/config/.weechat/python/autoload/vimode.py	/^SCRIPT_LICENSE = "GPL3"$/;"	v	language:Python
SCRIPT_NAME	/store/config/.weechat/python/autoload/vimode.py	/^SCRIPT_NAME = "vimode"$/;"	v	language:Python
SCRIPT_VERSION	/store/config/.weechat/python/autoload/vimode.py	/^SCRIPT_VERSION = "0.5"$/;"	v	language:Python
self_replace	/usr/bin/googler	/^def self_replace(path):$/;"	f	language:Python
self_upgrade	/usr/bin/googler	/^def self_upgrade(include_git=False):$/;"	f	language:Python
set	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^		struct set_stmt		set;$/;"	m	language:C++	union:stmt::__anon2	typeref:struct:stmt::__anon2::set_stmt
set	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	struct expr		*set;$/;"	m	language:C++	struct:flow_stmt	typeref:struct:flow_stmt::expr
set	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	struct expr		*set;$/;"	m	language:C++	struct:set_stmt	typeref:struct:set_stmt::expr
setproctitle	/usr/bin/googler	/^    import setproctitle$/;"	i	language:Python
setThreshold	/store/code/git/mixxx/src/controllers/softtakeover.cpp	/^void SoftTakeover::setThreshold(double threshold) {$/;"	f	language:C++	class:SoftTakeover
setToolTipsCfg	/store/code/git/mixxx/src/mixxx.cpp	/^void MixxxMainWindow::setToolTipsCfg(mixxx::TooltipsPreference tt) {$/;"	f	language:C++	class:MixxxMainWindow
setToolTipsCfg	/store/code/git/mixxx/src/mixxx.h	/^    void setToolTipsCfg(mixxx::TooltipsPreference tt);$/;"	p	language:C++	class:MixxxMainWindow
set_cur	/store/config/.weechat/python/autoload/vimode.py	/^def set_cur(buf, input_line, pos, cap=True):$/;"	f	language:Python
set_handlers_to	/usr/bin/googler	/^    def set_handlers_to(self, scope):$/;"	m	language:Python	class:GoogleParser
set_mode	/store/config/.weechat/python/autoload/vimode.py	/^def set_mode(arg):$/;"	f	language:Python
set_prompt	/home/alyptik/.bashrc	/^set_prompt () {$/;"	f	language:Sh
set_queries	/usr/bin/googler	/^    def set_queries(self, **kwargs):$/;"	m	language:Python	class:GoogleUrl
set_stmt	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^struct set_stmt {$/;"	s	language:C++
set_stmt_alloc	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^extern struct stmt *set_stmt_alloc(const struct location *loc);$/;"	p	language:C++
set_stmt_alloc	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^struct stmt *set_stmt_alloc(const struct location *loc)$/;"	f	language:C++
set_stmt_destroy	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static void set_stmt_destroy(struct stmt *stmt)$/;"	f	language:C++	file:
set_stmt_ops	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static const struct stmt_ops set_stmt_ops = {$/;"	v	language:C++	typeref:struct:stmt_ops	file:
set_stmt_op_names	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static const char * const set_stmt_op_names[] = {$/;"	v	language:C++	file:
set_stmt_print	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static void set_stmt_print(const struct stmt *stmt)$/;"	f	language:C++	file:
showsome	/usr/bin/googler	/^def showsome(searchfor):$/;"	f	language:Python
shutil	/usr/bin/googler	/^    import shutil$/;"	i	language:Python
sigint_handler	/usr/bin/googler	/^def sigint_handler(signum, frame):$/;"	f	language:Python
signal	/usr/bin/googler	/^import signal$/;"	i	language:Python
Sitelink	/usr/bin/googler	/^class Sitelink(object):$/;"	c	language:Python
sitelink_end	/usr/bin/googler	/^    def sitelink_end(self, tag, annotation):$/;"	m	language:Python	class:GoogleParser
sitelink_start	/usr/bin/googler	/^    def sitelink_start(self, tag, attrs):$/;"	m	language:Python	class:GoogleParser
sitelink_table_end	/usr/bin/googler	/^    def sitelink_table_end(self, tag, annotation):$/;"	m	language:Python	class:GoogleParser
sitelink_table_start	/usr/bin/googler	/^    def sitelink_table_start(self, tag, attrs):$/;"	m	language:Python	class:GoogleParser
sitelink_title_end	/usr/bin/googler	/^    def sitelink_title_end(self, tag, annotation):$/;"	m	language:Python	class:GoogleParser
sitelink_title_start	/usr/bin/googler	/^    def sitelink_title_start(self, tag, attrs):$/;"	m	language:Python	class:GoogleParser
slotDeveloperTools	/store/code/git/mixxx/src/mixxx.cpp	/^void MixxxMainWindow::slotDeveloperTools(bool visible) {$/;"	f	language:C++	class:MixxxMainWindow
slotDeveloperTools	/store/code/git/mixxx/src/mixxx.h	/^    void slotDeveloperTools(bool enable);$/;"	p	language:C++	class:MixxxMainWindow
slotDeveloperToolsClosed	/store/code/git/mixxx/src/mixxx.cpp	/^void MixxxMainWindow::slotDeveloperToolsClosed() {$/;"	f	language:C++	class:MixxxMainWindow
slotDeveloperToolsClosed	/store/code/git/mixxx/src/mixxx.h	/^    void slotDeveloperToolsClosed();$/;"	p	language:C++	class:MixxxMainWindow
slotFileLoadSongPlayer	/store/code/git/mixxx/src/mixxx.cpp	/^void MixxxMainWindow::slotFileLoadSongPlayer(int deck) {$/;"	f	language:C++	class:MixxxMainWindow
slotFileLoadSongPlayer	/store/code/git/mixxx/src/mixxx.h	/^    void slotFileLoadSongPlayer(int deck);$/;"	p	language:C++	class:MixxxMainWindow
slotHelpAbout	/store/code/git/mixxx/src/mixxx.cpp	/^void MixxxMainWindow::slotHelpAbout() {$/;"	f	language:C++	class:MixxxMainWindow
slotHelpAbout	/store/code/git/mixxx/src/mixxx.h	/^    void slotHelpAbout();$/;"	p	language:C++	class:MixxxMainWindow
slotNoDeckPassthroughInputConfigured	/store/code/git/mixxx/src/mixxx.cpp	/^void MixxxMainWindow::slotNoDeckPassthroughInputConfigured() {$/;"	f	language:C++	class:MixxxMainWindow
slotNoDeckPassthroughInputConfigured	/store/code/git/mixxx/src/mixxx.h	/^    void slotNoDeckPassthroughInputConfigured();$/;"	p	language:C++	class:MixxxMainWindow
slotNoMicrophoneInputConfigured	/store/code/git/mixxx/src/mixxx.cpp	/^void MixxxMainWindow::slotNoMicrophoneInputConfigured() {$/;"	f	language:C++	class:MixxxMainWindow
slotNoMicrophoneInputConfigured	/store/code/git/mixxx/src/mixxx.h	/^    void slotNoMicrophoneInputConfigured();$/;"	p	language:C++	class:MixxxMainWindow
slotNoVinylControlInputConfigured	/store/code/git/mixxx/src/mixxx.cpp	/^void MixxxMainWindow::slotNoVinylControlInputConfigured() {$/;"	f	language:C++	class:MixxxMainWindow
slotNoVinylControlInputConfigured	/store/code/git/mixxx/src/mixxx.h	/^    void slotNoVinylControlInputConfigured();$/;"	p	language:C++	class:MixxxMainWindow
slotOptionsKeyboard	/store/code/git/mixxx/src/mixxx.cpp	/^void MixxxMainWindow::slotOptionsKeyboard(bool toggle) {$/;"	f	language:C++	class:MixxxMainWindow
slotOptionsKeyboard	/store/code/git/mixxx/src/mixxx.h	/^    void slotOptionsKeyboard(bool toggle);$/;"	p	language:C++	class:MixxxMainWindow
slotOptionsPreferences	/store/code/git/mixxx/src/mixxx.cpp	/^void MixxxMainWindow::slotOptionsPreferences() {$/;"	f	language:C++	class:MixxxMainWindow
slotOptionsPreferences	/store/code/git/mixxx/src/mixxx.h	/^    void slotOptionsPreferences();$/;"	p	language:C++	class:MixxxMainWindow
slotUpdateWindowTitle	/store/code/git/mixxx/src/mixxx.cpp	/^void MixxxMainWindow::slotUpdateWindowTitle(TrackPointer pTrack) {$/;"	f	language:C++	class:MixxxMainWindow
slotUpdateWindowTitle	/store/code/git/mixxx/src/mixxx.h	/^    void slotUpdateWindowTitle(TrackPointer pTrack);$/;"	p	language:C++	class:MixxxMainWindow
slotViewFullScreen	/store/code/git/mixxx/src/mixxx.cpp	/^void MixxxMainWindow::slotViewFullScreen(bool toggle) {$/;"	f	language:C++	class:MixxxMainWindow
slotViewFullScreen	/store/code/git/mixxx/src/mixxx.h	/^    void slotViewFullScreen(bool toggle);$/;"	p	language:C++	class:MixxxMainWindow
snaplen	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	unsigned int		snaplen;$/;"	m	language:C++	struct:log_stmt
socket	/usr/bin/googler	/^import socket$/;"	i	language:Python
SoftTakeover	/store/code/git/mixxx/src/controllers/softtakeover.cpp	/^SoftTakeover::SoftTakeover()$/;"	f	language:C++	class:SoftTakeover
SoftTakeoverCtrl	/store/code/git/mixxx/src/controllers/softtakeover.cpp	/^SoftTakeoverCtrl::SoftTakeoverCtrl() {$/;"	f	language:C++	class:SoftTakeoverCtrl
SPECIAL_CHARS	/store/config/.weechat/python/autoload/vimode.py	/^SPECIAL_CHARS = {'^': "carret",$/;"	v	language:Python
ssl	/usr/bin/googler	/^import ssl$/;"	i	language:Python
start_catching_keys	/store/config/.weechat/python/autoload/vimode.py	/^def start_catching_keys(amount, callback, input_line, cur, count, buf=None):$/;"	f	language:Python
start_populating_textbuf	/usr/bin/googler	/^    def start_populating_textbuf(self, data_transformer=None):$/;"	m	language:Python	class:GoogleParser
stmt	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	struct stmt		*stmt;$/;"	m	language:C++	struct:flow_stmt	typeref:struct:flow_stmt::stmt
stmt	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^struct stmt {$/;"	s	language:C++
stmt_alloc	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^extern struct stmt *stmt_alloc(const struct location *loc,$/;"	p	language:C++
stmt_alloc	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^struct stmt *stmt_alloc(const struct location *loc,$/;"	f	language:C++
STMT_COUNTER	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	STMT_COUNTER,$/;"	e	language:C++	enum:stmt_types
STMT_CT	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	STMT_CT,$/;"	e	language:C++	enum:stmt_types
STMT_DUP	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	STMT_DUP,$/;"	e	language:C++	enum:stmt_types
stmt_evaluate	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^int stmt_evaluate(struct eval_ctx *ctx, struct stmt *stmt);$/;"	p	language:C++
STMT_EXPRESSION	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	STMT_EXPRESSION,$/;"	e	language:C++	enum:stmt_types
stmt_flags	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^enum stmt_flags {$/;"	g	language:C++
STMT_FLOW	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	STMT_FLOW,$/;"	e	language:C++	enum:stmt_types
stmt_free	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^extern void stmt_free(struct stmt *stmt);$/;"	p	language:C++
stmt_free	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^void stmt_free(struct stmt *stmt)$/;"	f	language:C++
STMT_FWD	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	STMT_FWD,$/;"	e	language:C++	enum:stmt_types
STMT_F_STATEFUL	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	STMT_F_STATEFUL		= 0x2,$/;"	e	language:C++	enum:stmt_flags
STMT_F_TERMINAL	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	STMT_F_TERMINAL		= 0x1,$/;"	e	language:C++	enum:stmt_flags
STMT_INVALID	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	STMT_INVALID,$/;"	e	language:C++	enum:stmt_types
STMT_LIMIT	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	STMT_LIMIT,$/;"	e	language:C++	enum:stmt_types
stmt_list_free	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^extern void stmt_list_free(struct list_head *list);$/;"	p	language:C++
stmt_list_free	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^void stmt_list_free(struct list_head *list)$/;"	f	language:C++
STMT_LOG	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	STMT_LOG,$/;"	e	language:C++	enum:stmt_types
STMT_LOG_GROUP	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	STMT_LOG_GROUP		= (1 << 2),$/;"	e	language:C++	enum:__anon1
STMT_LOG_LEVEL	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	STMT_LOG_LEVEL		= (1 << 4),$/;"	e	language:C++	enum:__anon1
STMT_LOG_PREFIX	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	STMT_LOG_PREFIX		= (1 << 0),$/;"	e	language:C++	enum:__anon1
STMT_LOG_QTHRESHOLD	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	STMT_LOG_QTHRESHOLD	= (1 << 3),$/;"	e	language:C++	enum:__anon1
STMT_LOG_SNAPLEN	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	STMT_LOG_SNAPLEN	= (1 << 1),$/;"	e	language:C++	enum:__anon1
STMT_MASQ	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	STMT_MASQ,$/;"	e	language:C++	enum:stmt_types
STMT_META	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	STMT_META,$/;"	e	language:C++	enum:stmt_types
STMT_NAT	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	STMT_NAT,$/;"	e	language:C++	enum:stmt_types
stmt_ops	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^struct stmt_ops {$/;"	s	language:C++
STMT_PAYLOAD	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	STMT_PAYLOAD,$/;"	e	language:C++	enum:stmt_types
stmt_print	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^extern void stmt_print(const struct stmt *stmt);$/;"	p	language:C++
stmt_print	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^void stmt_print(const struct stmt *stmt)$/;"	f	language:C++
STMT_QUEUE	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	STMT_QUEUE,$/;"	e	language:C++	enum:stmt_types
STMT_REDIR	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	STMT_REDIR,$/;"	e	language:C++	enum:stmt_types
STMT_REJECT	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	STMT_REJECT,$/;"	e	language:C++	enum:stmt_types
STMT_SET	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	STMT_SET,$/;"	e	language:C++	enum:stmt_types
stmt_types	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^enum stmt_types {$/;"	g	language:C++
STMT_VERDICT	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	STMT_VERDICT,$/;"	e	language:C++	enum:stmt_types
stop_populating_textbuf	/usr/bin/googler	/^    def stop_populating_textbuf(self):$/;"	m	language:Python	class:GoogleParser
StringIO	/store/config/.weechat/python/autoload/vimode.py	/^from StringIO import StringIO$/;"	i	language:Python
subprocess	/store/config/.weechat/python/autoload/vimode.py	/^import subprocess$/;"	i	language:Python
Symlet_10	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^	Symlet_10,$/;"	e	language:C++	enum:Wavelet::Type
Symlet_2	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^	Symlet_2,$/;"	e	language:C++	enum:Wavelet::Type
Symlet_20	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^	Symlet_20,$/;"	e	language:C++	enum:Wavelet::Type
Symlet_3	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^	Symlet_3,$/;"	e	language:C++	enum:Wavelet::Type
Symlet_30	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^	Symlet_30,$/;"	e	language:C++	enum:Wavelet::Type
Symlet_4	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^	Symlet_4,$/;"	e	language:C++	enum:Wavelet::Type
Symlet_5	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^	Symlet_5,$/;"	e	language:C++	enum:Wavelet::Type
Symlet_6	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^	Symlet_6,$/;"	e	language:C++	enum:Wavelet::Type
Symlet_7	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^	Symlet_7,$/;"	e	language:C++	enum:Wavelet::Type
Symlet_8	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^	Symlet_8,$/;"	e	language:C++	enum:Wavelet::Type
Symlet_9	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^	Symlet_9,$/;"	e	language:C++	enum:Wavelet::Type
sys	/usr/bin/googler	/^import sys$/;"	i	language:Python
syslog_level	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static const char *syslog_level[LOG_DEBUG + 1] = {$/;"	v	language:C++	file:
system_is_windows	/usr/bin/googler	/^def system_is_windows():$/;"	f	language:Python
table	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	const char		*table;$/;"	m	language:C++	struct:flow_stmt
tell	/store/code/git/core2/modules/useful.py	/^def tell(msg):$/;"	f	language:Python
tellme	/store/code/git/core2/modules/useful.py	/^def tellme(msg):$/;"	f	language:Python
tempfile	/usr/bin/googler	/^            import tempfile$/;"	i	language:Python
tempfile	/usr/bin/googler	/^    import tempfile$/;"	i	language:Python
textwrap	/usr/bin/googler	/^import textwrap$/;"	i	language:Python
time	/store/config/.weechat/python/autoload/vimode.py	/^import time$/;"	i	language:Python
title_end	/usr/bin/googler	/^    def title_end(self, tag, annotation):$/;"	m	language:Python	class:GoogleParser
title_start	/usr/bin/googler	/^    def title_start(self, tag, attrs):$/;"	m	language:Python	class:GoogleParser
TLD_TO_DOMAIN_MAP	/usr/bin/googler	/^    TLD_TO_DOMAIN_MAP = {$/;"	v	language:Python	class:GoogleUrl
TLS1_2Connection	/usr/bin/googler	/^class TLS1_2Connection(HTTPSConnection):$/;"	c	language:Python
tmpl	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	const struct ct_template	*tmpl;$/;"	m	language:C++	struct:ct_stmt	typeref:struct:ct_stmt::ct_template
tmpl	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	const struct meta_template	*tmpl;$/;"	m	language:C++	struct:meta_stmt	typeref:struct:meta_stmt::meta_template
to	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	struct expr		*to;$/;"	m	language:C++	struct:dup_stmt	typeref:struct:dup_stmt::expr
to	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	struct expr		*to;$/;"	m	language:C++	struct:fwd_stmt	typeref:struct:fwd_stmt::expr
ToggleFold	/etc/vimrc	/^function! ToggleFold()$/;"	f	language:Vim
ToggleHex	/etc/vimrc	/^function! ToggleHex()$/;"	f	language:Vim
ToggleIndent	/etc/vimrc	/^function! ToggleIndent()$/;"	f	language:Vim
ToggleVerbose	/etc/vimrc	/^function! ToggleVerbose()$/;"	f	language:Vim
ToggleXXD	/etc/vimrc	/^function! ToggleXXD()$/;"	f	language:Vim
total_len	/store/code/git/xxHash/xxhash.h	/^       unsigned long long total_len;$/;"	m	language:C++	struct:XXH64_state_s
total_len_32	/store/code/git/xxHash/xxhash.h	/^       unsigned total_len_32;$/;"	m	language:C++	struct:XXH32_state_s
Type	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^    enum Type {$/;"	g	language:C++	class:Wavelet
type	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	enum nft_limit_type	type;$/;"	m	language:C++	struct:limit_stmt	typeref:enum:limit_stmt::nft_limit_type
type	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	enum nft_nat_types	type;$/;"	m	language:C++	struct:nat_stmt	typeref:enum:nat_stmt::nft_nat_types
type	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	enum nft_reject_types	type;$/;"	m	language:C++	struct:reject_stmt	typeref:enum:reject_stmt::nft_reject_types
type	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	enum stmt_types		type;$/;"	m	language:C++	struct:stmt_ops	typeref:enum:stmt_ops::stmt_types
U16	/store/code/git/xxHash/xxhash.c	/^    typedef uint16_t U16;$/;"	t	language:C++	file:
U16	/store/code/git/xxHash/xxhash.c	/^    typedef unsigned short     U16;$/;"	t	language:C++	file:
U32	/store/code/git/xxHash/xxhash.c	/^    typedef uint32_t U32;$/;"	t	language:C++	file:
U32	/store/code/git/xxHash/xxhash.c	/^    typedef unsigned int       U32;$/;"	t	language:C++	file:
u32	/store/code/git/xxHash/xxhash.c	/^typedef union { U32 u32; U64 u64; } __attribute__((packed)) unalign64;$/;"	m	language:C++	union:__anon4	file:
u32	/store/code/git/xxHash/xxhash.c	/^typedef union { U32 u32; } __attribute__((packed)) unalign;$/;"	m	language:C++	union:__anon1	file:
U64	/store/code/git/xxHash/xxhash.c	/^    typedef uint64_t U64;$/;"	t	language:C++	file:
U64	/store/code/git/xxHash/xxhash.c	/^    typedef unsigned long long U64;   \/* if your compiler doesn't support unsigned long long, replace by another 64-bit type here. Note that xxhash.h will also need to be updated. *\/$/;"	t	language:C++	file:
u64	/store/code/git/xxHash/xxhash.c	/^typedef union { U32 u32; U64 u64; } __attribute__((packed)) unalign64;$/;"	m	language:C++	union:__anon4	file:
unalign	/store/code/git/xxHash/xxhash.c	/^typedef union { U32 u32; } __attribute__((packed)) unalign;$/;"	t	language:C++	typeref:union:__anon1	file:
unalign64	/store/code/git/xxHash/xxhash.c	/^typedef union { U32 u32; U64 u64; } __attribute__((packed)) unalign64;$/;"	t	language:C++	typeref:union:__anon4	file:
UnfoldCur	/etc/vimrc	/^  function! UnfoldCur()$/;"	f	language:Vim
unit	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	uint64_t		unit;$/;"	m	language:C++	struct:limit_stmt
unset_queries	/usr/bin/googler	/^    def unset_queries(self, *args):$/;"	m	language:Python	class:GoogleUrl
update	/usr/bin/googler	/^    def update(self, opts=None, **kwargs):$/;"	m	language:Python	class:GoogleUrl
url	/usr/bin/googler	/^    def url(self):$/;"	m	language:Python	class:GoogleUrl
urllib	/usr/bin/googler	/^    import urllib.request$/;"	i	language:Python
urllib	/usr/bin/googler	/^import urllib.parse$/;"	i	language:Python
urllib	/usr/bin/googler	/^import urllib.request, urllib.parse$/;"	i	language:Python
urllib	/usr/bin/googler	/^import urllib.request, urllib.parse$/;"	i	language:Python
urltable	/usr/bin/googler	/^    def urltable(self):$/;"	m	language:Python	class:Result
USER_AGENT	/usr/bin/googler	/^USER_AGENT = ('Mozilla\/5.0 (X11; Ubuntu; Linux x86_64; rv:48.0) Gecko\/20100101 Firefox\/48.0')$/;"	v	language:Python
v1	/store/code/git/xxHash/xxhash.h	/^       unsigned long long v1;$/;"	m	language:C++	struct:XXH64_state_s
v1	/store/code/git/xxHash/xxhash.h	/^       unsigned v1;$/;"	m	language:C++	struct:XXH32_state_s
v2	/store/code/git/xxHash/xxhash.h	/^       unsigned long long v2;$/;"	m	language:C++	struct:XXH64_state_s
v2	/store/code/git/xxHash/xxhash.h	/^       unsigned v2;$/;"	m	language:C++	struct:XXH32_state_s
v3	/store/code/git/xxHash/xxhash.h	/^       unsigned long long v3;$/;"	m	language:C++	struct:XXH64_state_s
v3	/store/code/git/xxHash/xxhash.h	/^       unsigned v3;$/;"	m	language:C++	struct:XXH32_state_s
v4	/store/code/git/xxHash/xxhash.h	/^       unsigned long long v4;$/;"	m	language:C++	struct:XXH64_state_s
v4	/store/code/git/xxHash/xxhash.h	/^       unsigned v4;$/;"	m	language:C++	struct:XXH32_state_s
val	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^	struct expr			*val;$/;"	m	language:C++	struct:payload_stmt	typeref:struct:payload_stmt::expr
verdict_stmt_alloc	/store/code/aur/nftables/src/nftables-0.6/include/statement.h	/^extern struct stmt *verdict_stmt_alloc(const struct location *loc,$/;"	p	language:C++
verdict_stmt_alloc	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^struct stmt *verdict_stmt_alloc(const struct location *loc, struct expr *expr)$/;"	f	language:C++
verdict_stmt_ops	/store/code/aur/nftables/src/nftables-0.6/src/statement.c	/^static const struct stmt_ops verdict_stmt_ops = {$/;"	v	language:C++	typeref:struct:stmt_ops	file:
VERSION	/store/config/.weechat/python/autoload/vimode.py	/^    VERSION = weechat.info_get("version_number", "")$/;"	v	language:Python
vimode_settings	/store/config/.weechat/python/autoload/vimode.py	/^vimode_settings = {'no_warn': ("off", "don't warn about problematic"$/;"	v	language:Python
vimpager_use_gvim	/etc/vimrc	/^let vimpager_use_gvim = 1$/;"	v	language:Vim
vi_buffer	/store/config/.weechat/python/autoload/vimode.py	/^vi_buffer = ""$/;"	v	language:Python
VI_COMMANDS	/store/config/.weechat/python/autoload/vimode.py	/^VI_COMMANDS = {'h': "\/help",$/;"	v	language:Python
VI_KEYS	/store/config/.weechat/python/autoload/vimode.py	/^VI_KEYS = {'j': "\/window scroll_down",$/;"	v	language:Python
VI_MOTIONS	/store/config/.weechat/python/autoload/vimode.py	/^VI_MOTIONS = ["w", "e", "b", "^", "$", "h", "l", "W", "E", "B", "f", "F", "t",$/;"	v	language:Python
VI_OPERATORS	/store/config/.weechat/python/autoload/vimode.py	/^VI_OPERATORS = ["c", "d", "y"]$/;"	v	language:Python
voice	/store/code/git/core2/modules/utilities.py	/^def voice(msg):$/;"	f	language:Python
w!!	/etc/vimrc	/^cnoremap w!! silent w !sudo dd of=%$/;"	m	language:Vim
Wavelet	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	/^class Wavelet$/;"	c	language:C++
webbrowser	/usr/bin/googler	/^        import webbrowser$/;"	i	language:Python
weechat	/store/config/.weechat/python/autoload/vimode.py	/^import weechat$/;"	i	language:Python
which	/home/alyptik/.bashrc	/^which() { (alias; declare -f) | \/usr\/bin\/which --tty-only --read-alias --read-functions --show-tilde --show-dot $@; }$/;"	f	language:Sh
WHITESPACE	/store/config/.weechat/python/autoload/vimode.py	/^WHITESPACE = re.compile(r"\\s")$/;"	v	language:Python
XXH32	/store/code/git/xxHash/xxhash.c	/^XXH_PUBLIC_API unsigned int XXH32 (const void* input, size_t len, unsigned int seed)$/;"	f	language:C++
XXH32	/store/code/git/xxHash/xxhash.h	/^XXH_PUBLIC_API XXH32_hash_t XXH32 (const void* input, size_t length, unsigned int seed);$/;"	p	language:C++
XXH32	/store/code/git/xxHash/xxhash.h	134;"	d	language:C++
XXH32_canonicalFromHash	/store/code/git/xxHash/xxhash.c	/^XXH_PUBLIC_API void XXH32_canonicalFromHash(XXH32_canonical_t* dst, XXH32_hash_t hash)$/;"	f	language:C++
XXH32_canonicalFromHash	/store/code/git/xxHash/xxhash.h	/^XXH_PUBLIC_API void XXH32_canonicalFromHash(XXH32_canonical_t* dst, XXH32_hash_t hash);$/;"	p	language:C++
XXH32_canonicalFromHash	/store/code/git/xxHash/xxhash.h	141;"	d	language:C++
XXH32_canonical_t	/store/code/git/xxHash/xxhash.h	/^typedef struct { unsigned char digest[4]; } XXH32_canonical_t;$/;"	t	language:C++	typeref:struct:__anon2
XXH32_copyState	/store/code/git/xxHash/xxhash.c	/^XXH_PUBLIC_API void XXH32_copyState(XXH32_state_t* restrict dstState, const XXH32_state_t* restrict srcState)$/;"	f	language:C++
XXH32_copyState	/store/code/git/xxHash/xxhash.h	/^XXH_PUBLIC_API void XXH32_copyState(XXH32_state_t* restrict dst_state, const XXH32_state_t* restrict src_state);$/;"	p	language:C++
XXH32_copyState	/store/code/git/xxHash/xxhash.h	140;"	d	language:C++
XXH32_createState	/store/code/git/xxHash/xxhash.c	/^XXH_PUBLIC_API XXH32_state_t* XXH32_createState(void)$/;"	f	language:C++
XXH32_createState	/store/code/git/xxHash/xxhash.h	/^XXH_PUBLIC_API XXH32_state_t* XXH32_createState(void);$/;"	p	language:C++
XXH32_createState	/store/code/git/xxHash/xxhash.h	135;"	d	language:C++
XXH32_digest	/store/code/git/xxHash/xxhash.c	/^XXH_PUBLIC_API unsigned int XXH32_digest (const XXH32_state_t* state_in)$/;"	f	language:C++
XXH32_digest	/store/code/git/xxHash/xxhash.h	/^XXH_PUBLIC_API XXH32_hash_t  XXH32_digest (const XXH32_state_t* statePtr);$/;"	p	language:C++
XXH32_digest	/store/code/git/xxHash/xxhash.h	139;"	d	language:C++
XXH32_digest_endian	/store/code/git/xxHash/xxhash.c	/^FORCE_INLINE U32 XXH32_digest_endian (const XXH32_state_t* state, XXH_endianess endian)$/;"	f	language:C++
XXH32_endian_align	/store/code/git/xxHash/xxhash.c	/^FORCE_INLINE U32 XXH32_endian_align(const void* input, size_t len, U32 seed, XXH_endianess endian, XXH_alignment align)$/;"	f	language:C++
XXH32_freeState	/store/code/git/xxHash/xxhash.c	/^XXH_PUBLIC_API XXH_errorcode XXH32_freeState(XXH32_state_t* statePtr)$/;"	f	language:C++
XXH32_freeState	/store/code/git/xxHash/xxhash.h	/^XXH_PUBLIC_API XXH_errorcode  XXH32_freeState(XXH32_state_t* statePtr);$/;"	p	language:C++
XXH32_freeState	/store/code/git/xxHash/xxhash.h	136;"	d	language:C++
XXH32_hashFromCanonical	/store/code/git/xxHash/xxhash.c	/^XXH_PUBLIC_API XXH32_hash_t XXH32_hashFromCanonical(const XXH32_canonical_t* src)$/;"	f	language:C++
XXH32_hashFromCanonical	/store/code/git/xxHash/xxhash.h	/^XXH_PUBLIC_API XXH32_hash_t XXH32_hashFromCanonical(const XXH32_canonical_t* src);$/;"	p	language:C++
XXH32_hashFromCanonical	/store/code/git/xxHash/xxhash.h	142;"	d	language:C++
XXH32_hash_t	/store/code/git/xxHash/xxhash.h	/^typedef unsigned int       XXH32_hash_t;$/;"	t	language:C++
XXH32_reset	/store/code/git/xxHash/xxhash.c	/^XXH_PUBLIC_API XXH_errorcode XXH32_reset(XXH32_state_t* statePtr, unsigned int seed)$/;"	f	language:C++
XXH32_reset	/store/code/git/xxHash/xxhash.h	/^XXH_PUBLIC_API XXH_errorcode XXH32_reset  (XXH32_state_t* statePtr, unsigned int seed);$/;"	p	language:C++
XXH32_reset	/store/code/git/xxHash/xxhash.h	137;"	d	language:C++
XXH32_round	/store/code/git/xxHash/xxhash.c	/^static U32 XXH32_round(U32 seed, U32 input)$/;"	f	language:C++	file:
XXH32_state_s	/store/code/git/xxHash/xxhash.h	/^   struct XXH32_state_s {$/;"	s	language:C++
XXH32_state_t	/store/code/git/xxHash/xxhash.h	/^typedef struct XXH32_state_s XXH32_state_t;   \/* incomplete type *\/$/;"	t	language:C++	typeref:struct:XXH32_state_s
XXH32_update	/store/code/git/xxHash/xxhash.c	/^XXH_PUBLIC_API XXH_errorcode XXH32_update (XXH32_state_t* state_in, const void* input, size_t len)$/;"	f	language:C++
XXH32_update	/store/code/git/xxHash/xxhash.h	/^XXH_PUBLIC_API XXH_errorcode XXH32_update (XXH32_state_t* statePtr, const void* input, size_t length);$/;"	p	language:C++
XXH32_update	/store/code/git/xxHash/xxhash.h	138;"	d	language:C++
XXH32_update_endian	/store/code/git/xxHash/xxhash.c	/^FORCE_INLINE XXH_errorcode XXH32_update_endian (XXH32_state_t* state, const void* input, size_t len, XXH_endianess endian)$/;"	f	language:C++
XXH64	/store/code/git/xxHash/xxhash.c	/^XXH_PUBLIC_API unsigned long long XXH64 (const void* input, size_t len, unsigned long long seed)$/;"	f	language:C++
XXH64	/store/code/git/xxHash/xxhash.h	/^XXH_PUBLIC_API XXH64_hash_t XXH64 (const void* input, size_t length, unsigned long long seed);$/;"	p	language:C++
XXH64	/store/code/git/xxHash/xxhash.h	143;"	d	language:C++
XXH64_canonicalFromHash	/store/code/git/xxHash/xxhash.c	/^XXH_PUBLIC_API void XXH64_canonicalFromHash(XXH64_canonical_t* dst, XXH64_hash_t hash)$/;"	f	language:C++
XXH64_canonicalFromHash	/store/code/git/xxHash/xxhash.h	/^XXH_PUBLIC_API void XXH64_canonicalFromHash(XXH64_canonical_t* dst, XXH64_hash_t hash);$/;"	p	language:C++
XXH64_canonicalFromHash	/store/code/git/xxHash/xxhash.h	150;"	d	language:C++
XXH64_canonical_t	/store/code/git/xxHash/xxhash.h	/^typedef struct { unsigned char digest[8]; } XXH64_canonical_t;$/;"	t	language:C++	typeref:struct:__anon3
XXH64_copyState	/store/code/git/xxHash/xxhash.c	/^XXH_PUBLIC_API void XXH64_copyState(XXH64_state_t* restrict dstState, const XXH64_state_t* restrict srcState)$/;"	f	language:C++
XXH64_copyState	/store/code/git/xxHash/xxhash.h	/^XXH_PUBLIC_API void XXH64_copyState(XXH64_state_t* restrict dst_state, const XXH64_state_t* restrict src_state);$/;"	p	language:C++
XXH64_copyState	/store/code/git/xxHash/xxhash.h	149;"	d	language:C++
XXH64_createState	/store/code/git/xxHash/xxhash.c	/^XXH_PUBLIC_API XXH64_state_t* XXH64_createState(void)$/;"	f	language:C++
XXH64_createState	/store/code/git/xxHash/xxhash.h	/^XXH_PUBLIC_API XXH64_state_t* XXH64_createState(void);$/;"	p	language:C++
XXH64_createState	/store/code/git/xxHash/xxhash.h	144;"	d	language:C++
XXH64_digest	/store/code/git/xxHash/xxhash.c	/^XXH_PUBLIC_API unsigned long long XXH64_digest (const XXH64_state_t* state_in)$/;"	f	language:C++
XXH64_digest	/store/code/git/xxHash/xxhash.h	/^XXH_PUBLIC_API XXH64_hash_t  XXH64_digest (const XXH64_state_t* statePtr);$/;"	p	language:C++
XXH64_digest	/store/code/git/xxHash/xxhash.h	148;"	d	language:C++
XXH64_digest_endian	/store/code/git/xxHash/xxhash.c	/^FORCE_INLINE U64 XXH64_digest_endian (const XXH64_state_t* state, XXH_endianess endian)$/;"	f	language:C++
XXH64_endian_align	/store/code/git/xxHash/xxhash.c	/^FORCE_INLINE U64 XXH64_endian_align(const void* input, size_t len, U64 seed, XXH_endianess endian, XXH_alignment align)$/;"	f	language:C++
XXH64_freeState	/store/code/git/xxHash/xxhash.c	/^XXH_PUBLIC_API XXH_errorcode XXH64_freeState(XXH64_state_t* statePtr)$/;"	f	language:C++
XXH64_freeState	/store/code/git/xxHash/xxhash.h	/^XXH_PUBLIC_API XXH_errorcode  XXH64_freeState(XXH64_state_t* statePtr);$/;"	p	language:C++
XXH64_freeState	/store/code/git/xxHash/xxhash.h	145;"	d	language:C++
XXH64_hashFromCanonical	/store/code/git/xxHash/xxhash.c	/^XXH_PUBLIC_API XXH64_hash_t XXH64_hashFromCanonical(const XXH64_canonical_t* src)$/;"	f	language:C++
XXH64_hashFromCanonical	/store/code/git/xxHash/xxhash.h	/^XXH_PUBLIC_API XXH64_hash_t XXH64_hashFromCanonical(const XXH64_canonical_t* src);$/;"	p	language:C++
XXH64_hashFromCanonical	/store/code/git/xxHash/xxhash.h	151;"	d	language:C++
XXH64_hash_t	/store/code/git/xxHash/xxhash.h	/^typedef unsigned long long XXH64_hash_t;$/;"	t	language:C++
XXH64_mergeRound	/store/code/git/xxHash/xxhash.c	/^static U64 XXH64_mergeRound(U64 acc, U64 val)$/;"	f	language:C++	file:
XXH64_reset	/store/code/git/xxHash/xxhash.c	/^XXH_PUBLIC_API XXH_errorcode XXH64_reset(XXH64_state_t* statePtr, unsigned long long seed)$/;"	f	language:C++
XXH64_reset	/store/code/git/xxHash/xxhash.h	/^XXH_PUBLIC_API XXH_errorcode XXH64_reset  (XXH64_state_t* statePtr, unsigned long long seed);$/;"	p	language:C++
XXH64_reset	/store/code/git/xxHash/xxhash.h	146;"	d	language:C++
XXH64_round	/store/code/git/xxHash/xxhash.c	/^static U64 XXH64_round(U64 acc, U64 input)$/;"	f	language:C++	file:
XXH64_state_s	/store/code/git/xxHash/xxhash.h	/^   struct XXH64_state_s {$/;"	s	language:C++
XXH64_state_t	/store/code/git/xxHash/xxhash.h	/^typedef struct XXH64_state_s XXH64_state_t;   \/* incomplete type *\/$/;"	t	language:C++	typeref:struct:XXH64_state_s
XXH64_update	/store/code/git/xxHash/xxhash.c	/^XXH_PUBLIC_API XXH_errorcode XXH64_update (XXH64_state_t* state_in, const void* input, size_t len)$/;"	f	language:C++
XXH64_update	/store/code/git/xxHash/xxhash.h	/^XXH_PUBLIC_API XXH_errorcode XXH64_update (XXH64_state_t* statePtr, const void* input, size_t length);$/;"	p	language:C++
XXH64_update	/store/code/git/xxHash/xxhash.h	147;"	d	language:C++
XXH64_update_endian	/store/code/git/xxHash/xxhash.c	/^FORCE_INLINE XXH_errorcode XXH64_update_endian (XXH64_state_t* state, const void* input, size_t len, XXH_endianess endian)$/;"	f	language:C++
XXHASH_H_5627135585666179	/store/code/git/xxHash/xxhash.h	68;"	d	language:C++
XXH_aligned	/store/code/git/xxHash/xxhash.c	/^typedef enum { XXH_aligned, XXH_unaligned } XXH_alignment;$/;"	e	language:C++	enum:__anon3	file:
XXH_alignment	/store/code/git/xxHash/xxhash.c	/^typedef enum { XXH_aligned, XXH_unaligned } XXH_alignment;$/;"	t	language:C++	typeref:enum:__anon3	file:
XXH_bigEndian	/store/code/git/xxHash/xxhash.c	/^typedef enum { XXH_bigEndian=0, XXH_littleEndian=1 } XXH_endianess;$/;"	e	language:C++	enum:__anon2	file:
XXH_CAT	/store/code/git/xxHash/xxhash.h	131;"	d	language:C++
XXH_CPU_LITTLE_ENDIAN	/store/code/git/xxHash/xxhash.c	212;"	d	language:C++	file:
XXH_endianess	/store/code/git/xxHash/xxhash.c	/^typedef enum { XXH_bigEndian=0, XXH_littleEndian=1 } XXH_endianess;$/;"	t	language:C++	typeref:enum:__anon2	file:
XXH_ERROR	/store/code/git/xxHash/xxhash.h	/^typedef enum { XXH_OK=0, XXH_ERROR } XXH_errorcode;$/;"	e	language:C++	enum:__anon1
XXH_errorcode	/store/code/git/xxHash/xxhash.h	/^typedef enum { XXH_OK=0, XXH_ERROR } XXH_errorcode;$/;"	t	language:C++	typeref:enum:__anon1
XXH_FORCE_ALIGN_CHECK	/store/code/git/xxHash/xxhash.c	88;"	d	language:C++	file:
XXH_FORCE_ALIGN_CHECK	/store/code/git/xxHash/xxhash.c	90;"	d	language:C++	file:
XXH_FORCE_MEMORY_ACCESS	/store/code/git/xxHash/xxhash.c	54;"	d	language:C++	file:
XXH_FORCE_MEMORY_ACCESS	/store/code/git/xxHash/xxhash.c	57;"	d	language:C++	file:
XXH_FORCE_NATIVE_FORMAT	/store/code/git/xxHash/xxhash.c	77;"	d	language:C++	file:
XXH_free	/store/code/git/xxHash/xxhash.c	/^static void  XXH_free  (void* p)  { free(p); }$/;"	f	language:C++	file:
XXH_get32bits	/store/code/git/xxHash/xxhash.c	269;"	d	language:C++	file:
XXH_get64bits	/store/code/git/xxHash/xxhash.c	630;"	d	language:C++	file:
XXH_littleEndian	/store/code/git/xxHash/xxhash.c	/^typedef enum { XXH_bigEndian=0, XXH_littleEndian=1 } XXH_endianess;$/;"	e	language:C++	enum:__anon2	file:
XXH_malloc	/store/code/git/xxHash/xxhash.c	/^static void* XXH_malloc(size_t s) { return malloc(s); }$/;"	f	language:C++	file:
XXH_memcpy	/store/code/git/xxHash/xxhash.c	/^static void* XXH_memcpy(void* dest, const void* src, size_t size) { return memcpy(dest,src,size); }$/;"	f	language:C++	file:
XXH_NAME2	/store/code/git/xxHash/xxhash.h	132;"	d	language:C++
XXH_OK	/store/code/git/xxHash/xxhash.h	/^typedef enum { XXH_OK=0, XXH_ERROR } XXH_errorcode;$/;"	e	language:C++	enum:__anon1
XXH_PUBLIC_API	/store/code/git/xxHash/xxhash.h	107;"	d	language:C++
XXH_PUBLIC_API	/store/code/git/xxHash/xxhash.h	109;"	d	language:C++
XXH_PUBLIC_API	/store/code/git/xxHash/xxhash.h	111;"	d	language:C++
XXH_PUBLIC_API	/store/code/git/xxHash/xxhash.h	113;"	d	language:C++
XXH_PUBLIC_API	/store/code/git/xxHash/xxhash.h	116;"	d	language:C++
XXH_read32	/store/code/git/xxHash/xxhash.c	/^static U32 XXH_read32(const void* memPtr) { return *(const U32*) memPtr; }$/;"	f	language:C++	file:
XXH_read32	/store/code/git/xxHash/xxhash.c	/^static U32 XXH_read32(const void* memPtr)$/;"	f	language:C++	file:
XXH_read32	/store/code/git/xxHash/xxhash.c	/^static U32 XXH_read32(const void* ptr) { return ((const unalign*)ptr)->u32; }$/;"	f	language:C++	file:
XXH_read64	/store/code/git/xxHash/xxhash.c	/^static U64 XXH_read64(const void* memPtr) { return *(const U64*) memPtr; }$/;"	f	language:C++	file:
XXH_read64	/store/code/git/xxHash/xxhash.c	/^static U64 XXH_read64(const void* memPtr)$/;"	f	language:C++	file:
XXH_read64	/store/code/git/xxHash/xxhash.c	/^static U64 XXH_read64(const void* ptr) { return ((const unalign64*)ptr)->u64; }$/;"	f	language:C++	file:
XXH_readBE32	/store/code/git/xxHash/xxhash.c	/^static U32 XXH_readBE32(const void* ptr)$/;"	f	language:C++	file:
XXH_readBE64	/store/code/git/xxHash/xxhash.c	/^static U64 XXH_readBE64(const void* ptr)$/;"	f	language:C++	file:
XXH_readLE32	/store/code/git/xxHash/xxhash.c	/^FORCE_INLINE U32 XXH_readLE32(const void* ptr, XXH_endianess endian)$/;"	f	language:C++
XXH_readLE32_align	/store/code/git/xxHash/xxhash.c	/^FORCE_INLINE U32 XXH_readLE32_align(const void* ptr, XXH_endianess endian, XXH_alignment align)$/;"	f	language:C++
XXH_readLE64	/store/code/git/xxHash/xxhash.c	/^FORCE_INLINE U64 XXH_readLE64(const void* ptr, XXH_endianess endian)$/;"	f	language:C++
XXH_readLE64_align	/store/code/git/xxHash/xxhash.c	/^FORCE_INLINE U64 XXH_readLE64_align(const void* ptr, XXH_endianess endian, XXH_alignment align)$/;"	f	language:C++
XXH_rotl32	/store/code/git/xxHash/xxhash.c	182;"	d	language:C++	file:
XXH_rotl32	/store/code/git/xxHash/xxhash.c	185;"	d	language:C++	file:
XXH_rotl64	/store/code/git/xxHash/xxhash.c	183;"	d	language:C++	file:
XXH_rotl64	/store/code/git/xxHash/xxhash.c	186;"	d	language:C++	file:
XXH_STATIC_ASSERT	/store/code/git/xxHash/xxhash.c	243;"	d	language:C++	file:
XXH_STATIC_LINKING_ONLY	/store/code/git/xxHash/xxhash.c	107;"	d	language:C++	file:
XXH_STATIC_LINKING_ONLY	/store/code/git/xxHash/xxhash.h	104;"	d	language:C++
XXH_swap32	/store/code/git/xxHash/xxhash.c	/^static U32 XXH_swap32 (U32 x)$/;"	f	language:C++	file:
XXH_swap32	/store/code/git/xxHash/xxhash.c	190;"	d	language:C++	file:
XXH_swap32	/store/code/git/xxHash/xxhash.c	192;"	d	language:C++	file:
XXH_swap64	/store/code/git/xxHash/xxhash.c	/^static U64 XXH_swap64 (U64 x)$/;"	f	language:C++	file:
XXH_swap64	/store/code/git/xxHash/xxhash.c	565;"	d	language:C++	file:
XXH_swap64	/store/code/git/xxHash/xxhash.c	567;"	d	language:C++	file:
XXH_unaligned	/store/code/git/xxHash/xxhash.c	/^typedef enum { XXH_aligned, XXH_unaligned } XXH_alignment;$/;"	e	language:C++	enum:__anon3	file:
XXH_versionNumber	/store/code/git/xxHash/xxhash.c	/^XXH_PUBLIC_API unsigned XXH_versionNumber (void) { return XXH_VERSION_NUMBER; }$/;"	f	language:C++
XXH_versionNumber	/store/code/git/xxHash/xxhash.h	/^XXH_PUBLIC_API unsigned XXH_versionNumber (void);$/;"	p	language:C++
XXH_versionNumber	/store/code/git/xxHash/xxhash.h	133;"	d	language:C++
XXH_VERSION_MAJOR	/store/code/git/xxHash/xxhash.h	158;"	d	language:C++
XXH_VERSION_MINOR	/store/code/git/xxHash/xxhash.h	159;"	d	language:C++
XXH_VERSION_NUMBER	/store/code/git/xxHash/xxhash.h	161;"	d	language:C++
XXH_VERSION_RELEASE	/store/code/git/xxHash/xxhash.h	160;"	d	language:C++
Y	/etc/vimrc	/^noremap Y y\$$/;"	m	language:Vim
[15;5~	/etc/vimrc	/^map [15;5~ <C-F5>$/;"	m	language:Vim
[17;5~	/etc/vimrc	/^map [17;5~ <C-F6>$/;"	m	language:Vim
[18;5~	/etc/vimrc	/^map [18;5~ <C-F7>$/;"	m	language:Vim
[19;5~	/etc/vimrc	/^map [19;5~ <C-F8>$/;"	m	language:Vim
[1;5Q	/etc/vimrc	/^map [1;5Q <C-F2>$/;"	m	language:Vim
[1;5R	/etc/vimrc	/^map [1;5R <C-F3>$/;"	m	language:Vim
[1;5S	/etc/vimrc	/^map [1;5S <C-F4>$/;"	m	language:Vim
[20;5~	/etc/vimrc	/^map [20;5~ <C-F9>$/;"	m	language:Vim
_package	/home/alyptik/aur/linux-surfacepro3-rt/PKGBUILD	/^_package() {$/;"	f	language:Sh
_package	/store/code/aur/linux-surfacepro3-rt/PKGBUILD	/^_package() {$/;"	f	language:Sh
_print_metadata_and_abstract	/usr/bin/googler	/^    def _print_metadata_and_abstract(self, abstract, metadata=None, indent=0):$/;"	m	language:Python	class:Result
_print_title_and_url	/usr/bin/googler	/^    def _print_title_and_url(self, index, title, url, indent=0):$/;"	m	language:Python	class:Result
_raw_get	/usr/bin/googler	/^    def _raw_get(self, url):$/;"	m	language:Python	class:GoogleConnection
_redirect	/usr/bin/googler	/^    def _redirect(self, url):$/;"	m	language:Python	class:GoogleConnection
_VERSION_	/usr/bin/googler	/^_VERSION_ = '2.8'$/;"	v	language:Python
_WAVELET_H_	/home/alyptik/code/git/mixxx/vamp-plugins/dsp/wavelet/Wavelet.h	17;"	d	language:C++
__init__	/usr/bin/googler	/^    def __init__(self, host, **kwargs):$/;"	m	language:Python	class:TLS1_2Connection
__init__	/usr/bin/googler	/^    def __init__(self, host, port=None, timeout=45, proxy=None, notweak=False):$/;"	m	language:Python	class:GoogleConnection
__init__	/usr/bin/googler	/^    def __init__(self, index, title, url, abstract, metadata=None, sitelinks=None):$/;"	m	language:Python	class:Result
__init__	/usr/bin/googler	/^    def __init__(self, news=False):$/;"	m	language:Python	class:GoogleParser
__init__	/usr/bin/googler	/^    def __init__(self, opts):$/;"	m	language:Python	class:GooglerCmd
__init__	/usr/bin/googler	/^    def __init__(self, opts=None, **kwargs):$/;"	m	language:Python	class:GoogleUrl
__init__	/usr/bin/googler	/^    def __init__(self, title, url, abstract):$/;"	m	language:Python	class:Sitelink
__setup__	/store/code/git/core2/modules/useful.py	/^def __setup__():$/;"	f	language:Python	file:
__str__	/usr/bin/googler	/^    def __str__(self):$/;"	m	language:Python	class:GoogleUrl	file:
~MixxxMainWindow	/store/code/git/mixxx/src/mixxx.cpp	/^MixxxMainWindow::~MixxxMainWindow() {$/;"	f	language:C++	class:MixxxMainWindow
~MixxxMainWindow	/store/code/git/mixxx/src/mixxx.h	/^    virtual ~MixxxMainWindow();$/;"	p	language:C++	class:MixxxMainWindow
~SoftTakeoverCtrl	/store/code/git/mixxx/src/controllers/softtakeover.cpp	/^SoftTakeoverCtrl::~SoftTakeoverCtrl() {$/;"	f	language:C++	class:SoftTakeoverCtrl
