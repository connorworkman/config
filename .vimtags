!_TAG_FILE_SORTED	2	/0=unsorted, 1=sorted, 2=foldcase/
#	/store/config/vimrc	/^    nmap # <Plug>MarkSearchOrCurPrev$/;"	m	language:Vim
*	/store/config/vimrc	/^    nmap * <Plug>MarkSearchOrCurNext$/;"	m	language:Vim
,/	/store/config/vimrc	/^nnoremap <silent> ,\/ :execute 'vimgrep \/'.@\/.'\/g %'<CR>:copen<CR>$/;"	m	language:Vim
<	/store/config/vimrc	/^vnoremap < <gv$/;"	m	language:Vim
<C-e>	/store/config/vimrc	/^inoremap <C-e> <C-o>\$$/;"	m	language:Vim
<C-F2>	/store/config/vimrc	/^nnoremap <C-F2> ^$/;"	m	language:Vim
<C-F3>	/store/config/vimrc	/^nnoremap <C-F3> \$$/;"	m	language:Vim
<C-F4>	/store/config/vimrc	/^nnoremap <C-F4> <Esc>:tabp<CR>$/;"	m	language:Vim
<C-F5>	/store/config/vimrc	/^nnoremap <C-F5> <Esc>:tabn<CR>$/;"	m	language:Vim
<C-F6>	/store/config/vimrc	/^vmap <C-F6> <F6>v`>$/;"	m	language:Vim
<C-F7>	/store/config/vimrc	/^nmap <C-F7> :set paste<CR>i<CR><CR><Esc>k:.!xclip -o<CR>JxkJx:set nopaste<CR>$/;"	m	language:Vim
<C-F8>	/store/config/vimrc	/^nnoremap <C-F8> :call ToggleVerbose()<CR>$/;"	m	language:Vim
<C-F9>	/store/config/vimrc	/^nnoremap <C-F9> :call ToggleXXD()<CR>$/;"	m	language:Vim
<C-\>	/store/config/vimrc	/^nnoremap <C-\\> <Esc>:SCCompileRun<CR>$/;"	m	language:Vim
<C-\>	/store/config/vimrc	/^vnoremap <C-\\> <Esc>:SCCompileRun<CR>$/;"	m	language:Vim
<C-]>	/store/config/vimrc	/^nnoremap <C-]> g<C-]>$/;"	m	language:Vim
<C-]>	/store/config/vimrc	/^vnoremap <C-]> g<C-]>$/;"	m	language:Vim
<Esc>'	/store/config/vimrc	/^map <Esc>' <M-'>$/;"	m	language:Vim
<Esc>;	/store/config/vimrc	/^map <Esc>; <M-;>$/;"	m	language:Vim
<Esc><F12>	/store/config/vimrc	/^map <Esc><F12> <M-F12>$/;"	m	language:Vim
<Esc><F2>	/store/config/vimrc	/^map <Esc><F2> <M-F2>$/;"	m	language:Vim
<Esc><F3>	/store/config/vimrc	/^map <Esc><F3> <M-F3>$/;"	m	language:Vim
<Esc><F4>	/store/config/vimrc	/^map <Esc><F4> <M-F4>$/;"	m	language:Vim
<Esc><F5>	/store/config/vimrc	/^map <Esc><F5> <M-F5>$/;"	m	language:Vim
<Esc><F6>	/store/config/vimrc	/^map <Esc><F6> <M-F6>$/;"	m	language:Vim
<Esc><F7>	/store/config/vimrc	/^map <Esc><F7> <M-F7>$/;"	m	language:Vim
<Esc><F8>	/store/config/vimrc	/^map <Esc><F8> <M-F8>$/;"	m	language:Vim
<Esc><F9>	/store/config/vimrc	/^map <Esc><F9> <M-F9>$/;"	m	language:Vim
<F2>	/store/config/vimrc	/^nnoremap <F2> <Esc>:tabp<CR>$/;"	m	language:Vim
<F3>	/store/config/vimrc	/^nnoremap <F3> <Esc>:tabn<CR>$/;"	m	language:Vim
<F4>	/store/config/vimrc	/^nnoremap <F4> <C-u>$/;"	m	language:Vim
<F5>	/store/config/vimrc	/^nnoremap <F5> <C-d>$/;"	m	language:Vim
<F6>	/store/config/vimrc	/^vmap <F6> "+y<Esc>:call system("xclip -i -selection clipboard", getreg("\\""))$/;"	m	language:Vim
<F7>	/store/config/vimrc	/^nmap <F7> :call setreg("\\"",system("xclip -o -selection clipboard"))<CR>"+p$/;"	m	language:Vim
<F8>	/store/config/vimrc	/^nmap <F8> <Esc>:verbose map$/;"	m	language:Vim
<F9>	/store/config/vimrc	/^nnoremap <F9> :call ToggleFold()<CR>$/;"	m	language:Vim
<Leader>!	/store/config/vimrc	/^    nmap <Leader>!  <Plug>MarkSearchGroup1Prev$/;"	m	language:Vim
<Leader>"	/store/config/vimrc	/^nnoremap <Leader>" mzI# <Esc>`z$/;"	m	language:Vim
<Leader>'	/store/config/vimrc	/^nnoremap <Leader>' <Esc>:w!<CR>$/;"	m	language:Vim
<Leader>,	/store/config/vimrc	/^nnoremap <Leader>, <Esc>:s\/ .*:[0-9][0-9]\/\/$/;"	m	language:Vim
<Leader>-	/store/config/vimrc	/^noremap <Leader>- <Esc>[c$/;"	m	language:Vim
<Leader>.	/store/config/vimrc	/^nnoremap <Leader>. <Esc>:s\/[0-9]*\\. \/\/$/;"	m	language:Vim
<Leader>/	/store/config/vimrc	/^nnoremap <Leader>\/ <Esc>:%s\/\\(.*\\) by \\(.*\\)\/\\2 - \\1\/$/;"	m	language:Vim
<Leader>1	/store/config/vimrc	/^    nmap <Leader>1  <Plug>MarkSearchGroup1Next$/;"	m	language:Vim
<Leader>2	/store/config/vimrc	/^    nmap <Leader>2  <Plug>MarkSearchGroup2Next$/;"	m	language:Vim
<Leader>3	/store/config/vimrc	/^    nmap <Leader>3  <Plug>MarkSearchGroup2Next$/;"	m	language:Vim
<Leader>4	/store/config/vimrc	/^    nmap <Leader>4  <Plug>MarkSearchGroup2Next$/;"	m	language:Vim
<Leader>5	/store/config/vimrc	/^    nmap <Leader>5  <Plug>MarkSearchGroup2Next$/;"	m	language:Vim
<Leader>6	/store/config/vimrc	/^    nmap <Leader>6  <Plug>MarkSearchGroup2Next$/;"	m	language:Vim
<Leader>7	/store/config/vimrc	/^    nmap <Leader>7  <Plug>MarkSearchGroup2Next$/;"	m	language:Vim
<Leader>8	/store/config/vimrc	/^    nmap <Leader>8  <Plug>MarkSearchGroup2Next$/;"	m	language:Vim
<Leader>9	/store/config/vimrc	/^    nmap <Leader>9  <Plug>MarkSearchGroup2Next$/;"	m	language:Vim
<Leader>;	/store/config/vimrc	/^nnoremap <Leader>; <Esc>:q!<CR>$/;"	m	language:Vim
<Leader>=	/store/config/vimrc	/^noremap <Leader>= <Esc>]c$/;"	m	language:Vim
<Leader>a	/store/config/vimrc	/^nnoremap <Leader>a <Esc>:A<CR>$/;"	m	language:Vim
<Leader>cc	/store/config/vimrc	/^nnoremap <Leader>cc :%s\/\\<<C-r><C-w>\\>\/<C-r><C-w>$/;"	m	language:Vim
<Leader>cc	/store/config/vimrc	/^vnoremap <Leader>cc y:%s\/<C-r>"\/<C-r>"$/;"	m	language:Vim
<Leader>dg	/store/config/vimrc	/^nnoremap <Leader>dg <Esc>:diffget<CR>]c$/;"	m	language:Vim
<Leader>dg	/store/config/vimrc	/^vnoremap <Leader>dg <Esc>:'<,'>diffget<CR>]c$/;"	m	language:Vim
<Leader>dp	/store/config/vimrc	/^nnoremap <Leader>dp <Esc>:diffput<CR>]c$/;"	m	language:Vim
<Leader>dp	/store/config/vimrc	/^vnoremap <Leader>dp <Esc>:'<,'>diffput<CR>]c$/;"	m	language:Vim
<Leader>dw	/store/config/vimrc	/^nnoremap <Leader>dw <Esc>:wincmd p<CR>$/;"	m	language:Vim
<Leader>ew	/store/config/vimrc	/^nnoremap <Leader>ew <Esc>:tabe <C-r>=expand("%:p:h")."\/"<CR>$/;"	m	language:Vim
<Leader>h	/store/config/vimrc	/^nnoremap <Leader>h <Esc>:silent !cat \/store\/config\/mappings-vim.txt \\| sed 's\/^[ ]*\/\/' \\| less<CR>:redraw!<CR>$/;"	m	language:Vim
<Leader>M	/store/config/vimrc	/^    nmap <Leader>M <Plug>MarkToggle$/;"	m	language:Vim
<Leader>n	/store/config/vimrc	/^    nmap <Leader>n <Plug>MarkConfirmAllClear$/;"	m	language:Vim
<Leader>o	/store/config/vimrc	/^nnoremap <Leader>o <Esc>:diffget<CR>]c$/;"	m	language:Vim
<Leader>o	/store/config/vimrc	/^vnoremap <Leader>o <Esc>:'<,'>diffget<CR>]c$/;"	m	language:Vim
<Leader>p	/store/config/vimrc	/^nnoremap <Leader>p <Esc>:diffput<CR>]c$/;"	m	language:Vim
<Leader>p	/store/config/vimrc	/^vnoremap <Leader>p <Esc>:'<,'>diffput<CR>]c$/;"	m	language:Vim
<Leader>rac	/store/config/vimrc	/^nnoremap <Leader>rac :%s\/<C-v><Esc>\\[\\(\\d\\{1,2}\\(;\\d\\{1,2}\\)\\{0,2\\}\\)\\?[m\\|K]\/\/g<CR>$/;"	m	language:Vim
<Leader>rc	/store/config/vimrc	/^nnoremap <Leader>rc :%s\/\\<<C-r><C-w>\\>\/$/;"	m	language:Vim
<Leader>rc	/store/config/vimrc	/^vnoremap <Leader>rc y:%s\/<C-r>"\/$/;"	m	language:Vim
<Leader>rts	/store/config/vimrc	/^nnoremap <Leader>rts :%s\/ \/    \/g<CR>$/;"	m	language:Vim
<Leader>s	/store/config/vimrc	/^nnoremap <Leader>s <Esc>:silent w! !sudo tee % >\/dev\/null<CR>$/;"	m	language:Vim
<Leader>u	/store/config/vimrc	/^nnoremap <Leader>u <Esc>:silent w! !sudo tee % >\/dev\/null<CR>$/;"	m	language:Vim
<Leader>v	/store/config/vimrc	/^nnoremap <Leader>v <Esc>:silent !cat \/store\/config\/100vimcommands.txt \\| sed 's\/^[ ]*\/\/' \\| less<CR>:redraw!<CR>$/;"	m	language:Vim
<Leader>[	/store/config/vimrc	/^nnoremap <Leader>[ <Esc>:q<CR>$/;"	m	language:Vim
<Leader>]	/store/config/vimrc	/^nnoremap <Leader>] <Esc>:w<CR>$/;"	m	language:Vim
<M-'>	/store/config/vimrc	/^nnoremap <M-'> <Esc>:tab split<CR>:exec("tag ".expand("<cword>"))<CR>$/;"	m	language:Vim
<M-'>	/store/config/vimrc	/^vnoremap <M-'> <Esc>:tab split<CR>:exec("tag ".expand("<cword>"))<CR>$/;"	m	language:Vim
<M-;>	/store/config/vimrc	/^noremap <M-;> <Esc>:vsplit<CR>:wincmd w<CR>:exec("tag ".expand("<cword>"))<CR>$/;"	m	language:Vim
<M-;>	/store/config/vimrc	/^vnoremap <M-;> <Esc>:vsplit<CR>:wincmd w<CR>:exec("tag ".expand("<cword>"))<CR>$/;"	m	language:Vim
<M-c>	/store/config/vimrc	/^vmap <M-c> "*y$/;"	m	language:Vim
<M-F2>	/store/config/vimrc	/^nnoremap <M-F2> 0dw$/;"	m	language:Vim
<M-F4>	/store/config/vimrc	/^nnoremap <M-F4> <Esc>:set scrollbind<CR>$/;"	m	language:Vim
<M-F5>	/store/config/vimrc	/^nnoremap <M-F5> <Esc>:set noscb<CR>$/;"	m	language:Vim
<M-F6>	/store/config/vimrc	/^vmap <M-F6> :<Esc>`>a<CR><Esc>mx`<i<CR><Esc>my'xk$v'y!xclip -selection c<CR>u$/;"	m	language:Vim
<M-F7>	/store/config/vimrc	/^nmap <M-F7> mz:-1r !xclip -o -sel clip<CR>`z$/;"	m	language:Vim
<M-F8>	/store/config/vimrc	/^nnoremap <M-F8> :call ToggleHex()<CR>$/;"	m	language:Vim
<M-F9>	/store/config/vimrc	/^nnoremap <M-F9> :call ToggleIndent()<CR>$/;"	m	language:Vim
<M-v>	/store/config/vimrc	/^nmap <M-v> "*p$/;"	m	language:Vim
<M-x>	/store/config/vimrc	/^vmap <M-x> "*x$/;"	m	language:Vim
<Plug>IgnoreMarkSearchNext	/store/config/vimrc	/^    nmap <Plug>IgnoreMarkSearchNext <Plug>MarkSearchNext$/;"	m	language:Vim
<Plug>IgnoreMarkSearchPrev	/store/config/vimrc	/^    nmap <Plug>IgnoreMarkSearchPrev <Plug>MarkSearchPrev$/;"	m	language:Vim
<Plug>IgnoreMarkSet	/store/config/vimrc	/^    vmap <Plug>IgnoreMarkSet <Plug>MarkSet$/;"	m	language:Vim
>	/store/config/vimrc	/^vnoremap > >gv$/;"	m	language:Vim
addButton	/store/code/git/mixxx/src/errordialoghandler.cpp	/^void ErrorDialogProperties::addButton(QMessageBox::StandardButton button) {$/;"	f	language:C++	class:ErrorDialogProperties
Binary	/store/config/vimrc	/^augroup Binary$/;"	a	language:Vim
boxClosed	/store/code/git/mixxx/src/errordialoghandler.cpp	/^void ErrorDialogHandler::boxClosed(QString key) {$/;"	f	language:C++	class:ErrorDialogHandler
checkError	/store/code/git/mixxx/src/errordialoghandler.cpp	/^bool ErrorDialogHandler::checkError() {$/;"	f	language:C++	class:ErrorDialogHandler
derp	/store/code/hello/hello.cc	/^	int derp;$/;"	m	language:C++	class:X	file:
errorDialog	/store/code/git/mixxx/src/errordialoghandler.cpp	/^void ErrorDialogHandler::errorDialog(ErrorDialogProperties* pProps) {$/;"	f	language:C++	class:ErrorDialogHandler
ErrorDialogHandler	/store/code/git/mixxx/src/errordialoghandler.cpp	/^ErrorDialogHandler::ErrorDialogHandler()$/;"	f	language:C++	class:ErrorDialogHandler
ErrorDialogHandler::boxClosed	/store/code/git/mixxx/src/errordialoghandler.cpp	/^void ErrorDialogHandler::boxClosed(QString key) {$/;"	f	language:C++	class:ErrorDialogHandler
ErrorDialogHandler::checkError	/store/code/git/mixxx/src/errordialoghandler.cpp	/^bool ErrorDialogHandler::checkError() {$/;"	f	language:C++	class:ErrorDialogHandler
ErrorDialogHandler::errorDialog	/store/code/git/mixxx/src/errordialoghandler.cpp	/^void ErrorDialogHandler::errorDialog(ErrorDialogProperties* pProps) {$/;"	f	language:C++	class:ErrorDialogHandler
ErrorDialogHandler::ErrorDialogHandler	/store/code/git/mixxx/src/errordialoghandler.cpp	/^ErrorDialogHandler::ErrorDialogHandler()$/;"	f	language:C++	class:ErrorDialogHandler
ErrorDialogHandler::newDialogProperties	/store/code/git/mixxx/src/errordialoghandler.cpp	/^ErrorDialogProperties* ErrorDialogHandler::newDialogProperties() {$/;"	f	language:C++	class:ErrorDialogHandler
ErrorDialogHandler::requestErrorDialog	/store/code/git/mixxx/src/errordialoghandler.cpp	/^bool ErrorDialogHandler::requestErrorDialog(DialogType type, QString message,$/;"	f	language:C++	class:ErrorDialogHandler
ErrorDialogHandler::requestErrorDialog	/store/code/git/mixxx/src/errordialoghandler.cpp	/^bool ErrorDialogHandler::requestErrorDialog(ErrorDialogProperties* props) {$/;"	f	language:C++	class:ErrorDialogHandler
ErrorDialogHandler::setEnabled	/store/code/git/mixxx/src/errordialoghandler.cpp	/^void ErrorDialogHandler::setEnabled(bool enabled) {$/;"	f	language:C++	class:ErrorDialogHandler
ErrorDialogHandler::s_bEnabled	/store/code/git/mixxx/src/errordialoghandler.cpp	/^bool ErrorDialogHandler::s_bEnabled = true;$/;"	m	language:C++	class:ErrorDialogHandler	file:
ErrorDialogHandler::s_pInstance	/store/code/git/mixxx/src/errordialoghandler.cpp	/^ErrorDialogHandler* ErrorDialogHandler::s_pInstance = NULL;$/;"	m	language:C++	class:ErrorDialogHandler	file:
ErrorDialogHandler::~ErrorDialogHandler	/store/code/git/mixxx/src/errordialoghandler.cpp	/^ErrorDialogHandler::~ErrorDialogHandler() {$/;"	f	language:C++	class:ErrorDialogHandler
ErrorDialogProperties	/store/code/git/mixxx/src/errordialoghandler.cpp	/^ErrorDialogProperties::ErrorDialogProperties()$/;"	f	language:C++	class:ErrorDialogProperties
ErrorDialogProperties::addButton	/store/code/git/mixxx/src/errordialoghandler.cpp	/^void ErrorDialogProperties::addButton(QMessageBox::StandardButton button) {$/;"	f	language:C++	class:ErrorDialogProperties
ErrorDialogProperties::ErrorDialogProperties	/store/code/git/mixxx/src/errordialoghandler.cpp	/^ErrorDialogProperties::ErrorDialogProperties()$/;"	f	language:C++	class:ErrorDialogProperties
ErrorDialogProperties::setText	/store/code/git/mixxx/src/errordialoghandler.cpp	/^void ErrorDialogProperties::setText(QString text) {$/;"	f	language:C++	class:ErrorDialogProperties
ErrorDialogProperties::setTitle	/store/code/git/mixxx/src/errordialoghandler.cpp	/^void ErrorDialogProperties::setTitle(QString title) {$/;"	f	language:C++	class:ErrorDialogProperties
ErrorDialogProperties::setType	/store/code/git/mixxx/src/errordialoghandler.cpp	/^void ErrorDialogProperties::setType(DialogType typeToSet) {$/;"	f	language:C++	class:ErrorDialogProperties
foobar	/store/code/hello/hello.cc	/^	int foobar;$/;"	m	language:C++	class:X	file:
g:easytags_always_enabled	/store/config/vimrc	/^let g:easytags_always_enabled=0$/;"	v	language:Vim
g:easytags_async	/store/config/vimrc	/^let g:easytags_async=1$/;"	v	language:Vim
g:easytags_auto_highlight	/store/config/vimrc	/^let g:easytags_auto_highlight=1$/;"	v	language:Vim
g:easytags_dynamic_files	/store/config/vimrc	/^let g:easytags_dynamic_files=0$/;"	v	language:Vim
g:easytags_include_members	/store/config/vimrc	/^let g:easytags_include_members=1$/;"	v	language:Vim
g:easytags_on_cursorhold	/store/config/vimrc	/^let g:easytags_on_cursorhold=1$/;"	v	language:Vim
g:easytags_resolve_links	/store/config/vimrc	/^let g:easytags_resolve_links=1$/;"	v	language:Vim
g:gruvbox_contrast_dark	/store/config/vimrc	/^let g:gruvbox_contrast_dark='high'$/;"	v	language:Vim
g:gruvbox_contrast_light	/store/config/vimrc	/^let g:gruvbox_contrast_light='high'$/;"	v	language:Vim
g:gruvbox_improved_strings	/store/config/vimrc	/^let g:gruvbox_improved_strings=0$/;"	v	language:Vim
g:gruvbox_improved_warnings	/store/config/vimrc	/^let g:gruvbox_improved_warnings=0$/;"	v	language:Vim
g:mwAutoLoadMarks	/store/config/vimrc	/^let g:mwAutoLoadMarks = 1$/;"	v	language:Vim
g:mwDefaultHighlightingPalette	/store/config/vimrc	/^  let g:mwDefaultHighlightingPalette='maximum'$/;"	v	language:Vim
g:mwDefaultHighlightingPalette	/store/config/vimrc	/^let g:mwDefaultHighlightingPalette = 'maximum'$/;"	v	language:Vim
g:mwDirectGroupJumpMappingNum	/store/config/vimrc	/^    let g:mwDirectGroupJumpMappingNum = 50$/;"	v	language:Vim
g:mwIgnoreCase	/store/config/vimrc	/^let g:mwIgnoreCase = 0$/;"	v	language:Vim
g:rbpt_loadcmd_toggle	/store/config/vimrc	/^let g:rbpt_loadcmd_toggle = 0$/;"	v	language:Vim
g:rbpt_max	/store/config/vimrc	/^let g:rbpt_max = 16$/;"	v	language:Vim
g:solarized_contrast	/store/config/vimrc	/^  let g:solarized_contrast='high'$/;"	v	language:Vim
g:solarized_contrast	/store/config/vimrc	/^  let g:solarized_contrast='low'$/;"	v	language:Vim
g:solarized_degrade	/store/config/vimrc	/^  let g:solarized_degrade=0$/;"	v	language:Vim
g:solarized_degrade	/store/config/vimrc	/^  let g:solarized_degrade=0$/;"	v	language:Vim
g:solarized_diffmode	/store/config/vimrc	/^let g:solarized_diffmode='high'$/;"	v	language:Vim
g:solarized_hitrail	/store/config/vimrc	/^let g:solarized_hitrail=1$/;"	v	language:Vim
g:solarized_termcolors	/store/config/vimrc	/^  let g:solarized_termcolors=16$/;"	v	language:Vim
g:solarized_termcolors	/store/config/vimrc	/^  let g:solarized_termcolors=256$/;"	v	language:Vim
g:solarized_termtrans	/store/config/vimrc	/^  let g:solarized_termtrans=0$/;"	v	language:Vim
g:solarized_termtrans	/store/config/vimrc	/^  let g:solarized_termtrans=1$/;"	v	language:Vim
g:solarized_visibility	/store/config/vimrc	/^  let g:solarized_visibility='normal'$/;"	v	language:Vim
g:solarized_visibility	/store/config/vimrc	/^  let g:solarized_visibility='normal'$/;"	v	language:Vim
g:startify_bookmarks	/store/config/vimrc	/^let g:startify_bookmarks = [$/;"	v	language:Vim
g:startify_change_to_dir	/store/config/vimrc	/^let g:startify_change_to_dir          = 1$/;"	v	language:Vim
g:startify_custom_footer	/store/config/vimrc	/^let g:startify_custom_footer =$/;"	v	language:Vim
g:startify_custom_header	/store/config/vimrc	/^let g:startify_custom_header =$/;"	v	language:Vim
g:startify_enable_special	/store/config/vimrc	/^let g:startify_enable_special         = 1$/;"	v	language:Vim
g:startify_files_number	/store/config/vimrc	/^let g:startify_files_number           = 8$/;"	v	language:Vim
g:startify_list_order	/store/config/vimrc	/^let g:startify_list_order = [$/;"	v	language:Vim
g:startify_relative_path	/store/config/vimrc	/^let g:startify_relative_path          = 1$/;"	v	language:Vim
g:startify_session_autoload	/store/config/vimrc	/^let g:startify_session_autoload       = 1$/;"	v	language:Vim
g:startify_session_delete_buffers	/store/config/vimrc	/^let g:startify_session_delete_buffers = 1$/;"	v	language:Vim
g:startify_session_persistence	/store/config/vimrc	/^let g:startify_session_persistence    = 1$/;"	v	language:Vim
g:startify_skiplist	/store/config/vimrc	/^let g:startify_skiplist = [$/;"	v	language:Vim
g:startify_update_oldfiles	/store/config/vimrc	/^let g:startify_update_oldfiles        = 1$/;"	v	language:Vim
g:tfold	/store/config/vimrc	/^let g:tfold = 0$/;"	v	language:Vim
g:thex	/store/config/vimrc	/^let g:thex = 0$/;"	v	language:Vim
g:tindent	/store/config/vimrc	/^let g:tindent = 0$/;"	v	language:Vim
g:tverbose	/store/config/vimrc	/^let g:tverbose = 0$/;"	v	language:Vim
g:txxd	/store/config/vimrc	/^let g:txxd = 0$/;"	v	language:Vim
g<C-]>	/store/config/vimrc	/^nnoremap g<C-]> <C-]>$/;"	m	language:Vim
g<C-]>	/store/config/vimrc	/^vnoremap g<C-]> <C-]>$/;"	m	language:Vim
get_bit	/store/code/hello/hello.cc	/^int get_bit(T x) {$/;"	f	language:C++
gV	/store/config/vimrc	/^noremap gV `[v`]$/;"	m	language:Vim
Hashbang	/store/config/vimrc	/^function! Hashbang(portable, permission, RemExt)$/;"	f	language:Vim
j	/store/config/vimrc	/^nnoremap <silent> <expr> j (v:count ? 'j' : 'gj')$/;"	m	language:Vim
k	/store/config/vimrc	/^nnoremap <silent> <expr> k (v:count ? 'k' : 'gk')$/;"	m	language:Vim
main	/store/code/hello/hello.c	/^int main(int argc, char **argv)$/;"	f	language:C++
main	/store/code/hello/hello.cc	/^int main(int argc, char **argv)$/;"	f	language:C++
newDialogProperties	/store/code/git/mixxx/src/errordialoghandler.cpp	/^ErrorDialogProperties* ErrorDialogHandler::newDialogProperties() {$/;"	f	language:C++	class:ErrorDialogHandler
OmniCpp_MayCompleteArrow	/store/config/vimrc	/^let OmniCpp_MayCompleteArrow=1$/;"	v	language:Vim
OmniCpp_MayCompleteDot	/store/config/vimrc	/^let OmniCpp_MayCompleteDot=1$/;"	v	language:Vim
OmniCpp_MayCompleteScope	/store/config/vimrc	/^let OmniCpp_MayCompleteScope=1$/;"	v	language:Vim
operator +	/store/code/hello/hello.cc	/^	int operator+(const X &a);$/;"	p	language:C++	class:X	file:
operator +	/store/code/hello/hello.cc	/^int X::operator+(const X &a) {$/;"	f	language:C++	class:X
operator =	/store/code/hello/hello.cc	/^	X &operator=(const T &a);$/;"	p	language:C++	class:X	file:
operator =	/store/code/hello/hello.cc	/^X &X::operator=(const T &a) {$/;"	f	language:C++	class:X
requestErrorDialog	/store/code/git/mixxx/src/errordialoghandler.cpp	/^bool ErrorDialogHandler::requestErrorDialog(DialogType type, QString message,$/;"	f	language:C++	class:ErrorDialogHandler
requestErrorDialog	/store/code/git/mixxx/src/errordialoghandler.cpp	/^bool ErrorDialogHandler::requestErrorDialog(ErrorDialogProperties* props) {$/;"	f	language:C++	class:ErrorDialogHandler
resCur	/store/config/vimrc	/^augroup resCur$/;"	a	language:Vim
ResCur	/store/config/vimrc	/^function! ResCur()$/;"	f	language:Vim
setEnabled	/store/code/git/mixxx/src/errordialoghandler.cpp	/^void ErrorDialogHandler::setEnabled(bool enabled) {$/;"	f	language:C++	class:ErrorDialogHandler
setText	/store/code/git/mixxx/src/errordialoghandler.cpp	/^void ErrorDialogProperties::setText(QString text) {$/;"	f	language:C++	class:ErrorDialogProperties
setTitle	/store/code/git/mixxx/src/errordialoghandler.cpp	/^void ErrorDialogProperties::setTitle(QString title) {$/;"	f	language:C++	class:ErrorDialogProperties
setType	/store/code/git/mixxx/src/errordialoghandler.cpp	/^void ErrorDialogProperties::setType(DialogType typeToSet) {$/;"	f	language:C++	class:ErrorDialogProperties
s_bEnabled	/store/code/git/mixxx/src/errordialoghandler.cpp	/^bool ErrorDialogHandler::s_bEnabled = true;$/;"	m	language:C++	class:ErrorDialogHandler	file:
s_pInstance	/store/code/git/mixxx/src/errordialoghandler.cpp	/^ErrorDialogHandler* ErrorDialogHandler::s_pInstance = NULL;$/;"	m	language:C++	class:ErrorDialogHandler	file:
ToggleFold	/store/config/vimrc	/^function! ToggleFold()$/;"	f	language:Vim
ToggleHex	/store/config/vimrc	/^function! ToggleHex()$/;"	f	language:Vim
ToggleIndent	/store/config/vimrc	/^function! ToggleIndent()$/;"	f	language:Vim
ToggleVerbose	/store/config/vimrc	/^function! ToggleVerbose()$/;"	f	language:Vim
ToggleXXD	/store/config/vimrc	/^function! ToggleXXD()$/;"	f	language:Vim
UnfoldCur	/store/config/vimrc	/^  function! UnfoldCur()$/;"	f	language:Vim
vimpager_use_gvim	/store/config/vimrc	/^let vimpager_use_gvim = 1$/;"	v	language:Vim
w!!	/store/config/vimrc	/^cnoremap w!! silent w !sudo dd of=%$/;"	m	language:Vim
X	/store/code/hello/hello.cc	/^	X() : foobar(2), derp(2){$/;"	f	language:C++	class:X
X	/store/code/hello/hello.cc	/^class X {$/;"	c	language:C++	file:
X::derp	/store/code/hello/hello.cc	/^	int derp;$/;"	m	language:C++	class:X	file:
X::foobar	/store/code/hello/hello.cc	/^	int foobar;$/;"	m	language:C++	class:X	file:
X::operator +	/store/code/hello/hello.cc	/^	int operator+(const X &a);$/;"	p	language:C++	class:X	file:
X::operator +	/store/code/hello/hello.cc	/^int X::operator+(const X &a) {$/;"	f	language:C++	class:X
X::operator =	/store/code/hello/hello.cc	/^	X &operator=(const T &a);$/;"	p	language:C++	class:X	file:
X::operator =	/store/code/hello/hello.cc	/^X &X::operator=(const T &a) {$/;"	f	language:C++	class:X
X::X	/store/code/hello/hello.cc	/^	X() : foobar(2), derp(2){$/;"	f	language:C++	class:X
X::~X	/store/code/hello/hello.cc	/^	~X() {$/;"	f	language:C++	class:X
Y	/store/config/vimrc	/^noremap Y y\$$/;"	m	language:Vim
[15;5~	/store/config/vimrc	/^map [15;5~ <C-F5>$/;"	m	language:Vim
[17;5~	/store/config/vimrc	/^map [17;5~ <C-F6>$/;"	m	language:Vim
[18;5~	/store/config/vimrc	/^map [18;5~ <C-F7>$/;"	m	language:Vim
[19;5~	/store/config/vimrc	/^map [19;5~ <C-F8>$/;"	m	language:Vim
[1;5Q	/store/config/vimrc	/^map [1;5Q <C-F2>$/;"	m	language:Vim
[1;5R	/store/config/vimrc	/^map [1;5R <C-F3>$/;"	m	language:Vim
[1;5S	/store/config/vimrc	/^map [1;5S <C-F4>$/;"	m	language:Vim
[20;5~	/store/config/vimrc	/^map [20;5~ <C-F9>$/;"	m	language:Vim
[24;5~	/store/config/vimrc	/^map [24;5~ <C-F12>$/;"	m	language:Vim
~ErrorDialogHandler	/store/code/git/mixxx/src/errordialoghandler.cpp	/^ErrorDialogHandler::~ErrorDialogHandler() {$/;"	f	language:C++	class:ErrorDialogHandler
~X	/store/code/hello/hello.cc	/^	~X() {$/;"	f	language:C++	class:X
