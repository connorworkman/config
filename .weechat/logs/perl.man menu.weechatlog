2016-10-26 04:56:09		MENU(1)              User Contributed Perl Documentation              MENU(1)
2016-10-26 04:56:09		[04:56]
2016-10-26 04:56:09		NAME
2016-10-26 04:56:09		       menu - menu and popup menu system for weechat (weechat edition)
2016-10-26 04:56:09		SYNOPSIS
2016-10-26 04:56:09		       Use
2016-10-26 04:56:09		         /menu
2016-10-26 04:56:09		       to open the main menu or (recommended) add a key binding to open the
2016-10-26 04:56:09		       menu. For example,
2016-10-26 04:56:09		         /key bind meta-m /menu
2016-10-26 04:56:09		       would allow you to open the menu with Alt+M.
2016-10-26 04:56:09		       If your WeeChat comes with builtin cursor and mouse support, you can
2016-10-26 04:56:09		       bind the nick popup menu to the nicklist using
2016-10-26 04:56:09		         /key bindctxt mouse @item(buffer_nicklist):button1 hsignal:menu
2016-10-26 04:56:09		       or if you want to use cursor mode, you can bind it to a key like this:
2016-10-26 04:56:09		         /key bindctxt cursor @item(buffer_nicklist):m hsignal:menu;/cursor stop
2016-10-26 04:56:09		DESCRIPTION
2016-10-26 04:56:09		       menu will give you a main menu and a popup menu to be able to use some
2016-10-26 04:56:09		       features through menu entries. A popup menu for the nicklist is
2016-10-26 04:56:09		       included by default.
2016-10-26 04:56:09		USAGE
2016-10-26 04:56:09		       to open the main menu, hit the key you defined as a keybinding as
2016-10-26 04:56:09		       explained in the "SYNOPSIS" or type "/menu".
2016-10-26 04:56:09		   Menu navigation
2016-10-26 04:56:09		       after you open the main menu, you will be able to choose the main menu
2016-10-26 04:56:09		       entry using the left-arrow and right-arrow keys of your keyboard. You
2016-10-26 04:56:09		       can also type the underlined letters for quick access. To open a
2016-10-26 04:56:09		       submenu, just press the Return key while the menu entry is
2016-10-26 04:56:09		       highlighted.
2016-10-26 04:56:09		   Submenus
2016-10-26 04:56:09		       Once you have opened a submenu, use the up-arrow and down-arrow to
2016-10-26 04:56:09		       choose a menu entry. To run a menu entry, confirm with Return again.
2016-10-26 04:56:09		       to close any menu, type Ctrl+X on your keyboard.
2016-10-26 04:56:09		       for mouse support, this script will listen to mouse input signals. You
2016-10-26 04:56:09		       need WeeChat with builtin cursor and mouse support.
2016-10-26 04:56:09		   Nick menu
2016-10-26 04:56:09		       There is a popup menu for nick names which can be opened using
2016-10-26 04:56:09		         /menu nick NICKNAME
2016-10-26 04:56:09		       whereby NICKNAME has to be replaced by a real nick. More conveniently,
2016-10-26 04:56:09		       when using the mouse this command is bound to clicks on the nicklist
2016-10-26 04:56:09		       so you can just click on a nick in the nicklist to open this popup
2016-10-26 04:56:09		       menu. It is navigated in the same way as a submenu.
2016-10-26 04:56:09		CAVEATS
2016-10-26 04:56:09		       ·   per-buffer key bindings as are used by iset, urlgrab, coords, the
2016-10-26 04:56:09		           man page viewer (/menu help) and some game scripts always override
2016-10-26 04:56:09		           the global key bindings, so you will not be able to navigate the
2016-10-26 04:56:09		           menu in this case.
2016-10-26 04:56:09		TODO
2016-10-26 04:56:09		       ·   would be nice to have popup menu on right click, name insertion on
2016-10-26 04:56:09		           left click and query (or default action) on double click on the
2016-10-26 04:56:09		           nicklist. Also, clicking on names in chat should scroll the
2016-10-26 04:56:09		           nicklist there and otherwise behave the same.
2016-10-26 04:56:09		       ·   interactive menu entries are lacking yet (like Join channel,
2016-10-26 04:56:09		           Connect to server) due to the missing implementation of a
2016-10-26 04:56:09		           interactive command.
2016-10-26 04:56:09		SETTINGS
2016-10-26 04:56:09		       the settings are usually found in the
2016-10-26 04:56:09		         plugins.var.perl.menu
2016-10-26 04:56:09		       namespace, that is, type
2016-10-26 04:56:09		         /set plugins.var.perl.menu.*
2016-10-26 04:56:09		       to see them and
2016-10-26 04:56:09		         /set plugins.var.perl.menu.SETTINGNAME VALUE
2016-10-26 04:56:09		       to change a setting "SETTINGNAME" to a new value "VALUE". Finally,
2016-10-26 04:56:09		         /unset plugins.var.perl.menu.SETTINGNAME
2016-10-26 04:56:09		       will reset a setting to its default value.
2016-10-26 04:56:09		       the following settings are available:
2016-10-26 04:56:09		   sticky_menu
2016-10-26 04:56:09		       if this is set to on, a submenu is not closed when the entry is
2016-10-26 04:56:09		       confirmed but has to be closed manually using Ctrl+X.
2016-10-26 04:56:09		   active_help
2016-10-26 04:56:09		       this setting is documented for completeness, it reflects if the help
2016-10-26 04:56:09		       bar is visible and can be toggled from within the menu with Ctrl+H.
2016-10-26 04:56:09		   key_binding_hidden
2016-10-26 04:56:09		       if set to on, the friendly reminder how to open the main menu (by
2016-10-26 04:56:09		       default: /menu to open menu) will be removed from view. useful for
2016-10-26 04:56:09		       those people bothered by it.
2016-10-26 04:56:09		   main_menu_hidden
2016-10-26 04:56:09		       if set to on, the main menu bar will be always hidden. useful if you
2016-10-26 04:56:09		       don't care about clicking on the main menu and want to save one line
2016-10-26 04:56:09		       on your screen (due to internal reasons, the setting
2016-10-26 04:56:09		       weechat.bar.main_menu.hidden does not work reliably, use this
2016-10-26 04:56:09		       instead.)
2016-10-26 04:56:09		MENU CONFIGURATION
2016-10-26 04:56:09		       the whole menu is configurable through the file menu.conf or
2016-10-26 04:56:09		         /set menu.var.*
2016-10-26 04:56:09		       The syntax for a main menu is
2016-10-26 04:56:09		         /set menu.var.#.name &Name
2016-10-26 04:56:09		       where "#" is an unique number, "Name" is the name of the menu and the
2016-10-26 04:56:09		       letter after the "&" is the unique shortcut for this menu. All menu
2016-10-26 04:56:09		       entries in the submenu of this menu are of the form
2016-10-26 04:56:09		         /set menu.var.#.1.name &Item
2016-10-26 04:56:09		         /set menu.var.#.1.command /command
2016-10-26 04:56:09		       where "#" is the number of the main menu, 1 is an unique number for
2016-10-26 04:56:09		       this submenu item, "Item" is the name of this item, the letter after
2016-10-26 04:56:09		       the "&" is the unique shortcut for this item as above. "/command"
2016-10-26 04:56:09		       specifies the command to be executed, for multiple commands create an
2016-10-26 04:56:09		       alias first.
2016-10-26 04:56:09		       See the included main menu for an example.
2016-10-26 04:56:09		   Popup menus
2016-10-26 04:56:09		       Popup menus are configured through
2016-10-26 04:56:09		         /set menu.var.POPUP.*
2016-10-26 04:56:09		       where "POPUP" is the name of the popup menu. The popup menu entries
2016-10-26 04:56:09		       are configured in the same way as submenu entries above, with "POPUP"
2016-10-26 04:56:09		       replacing "#". To open a popup menu, use
2016-10-26 04:56:09		         /menu POPUP args
2016-10-26 04:56:09		       The value of "args" is available in a popup command as $0, $1, ...
2016-10-26 04:56:09		       See the included "nick" popup for an example.
2016-10-26 04:56:09		   Dynamic menus
2016-10-26 04:56:09		       Dynamic menu entries are configured through .command settings. There
2016-10-26 04:56:09		       must not be a .name on this level for dynamic menu generation to work.
2016-10-26 04:56:09		       The syntax is as follows:
2016-10-26 04:56:09		         /set menu.var.#.name &Buffers
2016-10-26 04:56:09		         /set menu.var.#.1.command "%gui_buffers.buffer% ${i} ${buffer.name} % /buffer ${buffer.full_name}"
2016-10-26 04:56:09		       The first part of command must be %HDATA_LIST.HDATA_NAME% (see the
2016-10-26 04:56:09		       weechat api docs for info on hdata).
2016-10-26 04:56:09		       The second part sets the .name of the dynamic items and the third part
2016-10-26 04:56:09		       sets the .command. They are seperated by % and evaluated with /eval
2016-10-26 04:56:09		       (see /help eval for more info).
2016-10-26 04:56:09		       Refer to the three dynamic menus that ship with the sample config.
2016-10-26 04:56:09		       For usage with scripts, another form of dynamic menu is supported:
2016-10-26 04:56:09		         /set menu.var.POPUP.1.command "%#info_hashtable% $1 % $0"
2016-10-26 04:56:09		       The first part of command must be %#INFO_HASHTABLE_NAME% (see the
2016-10-26 04:56:09		       weechat api docs on weechat_hook_info_hashtable).
2016-10-26 04:56:09		       The second and third part are passed on to the hashtable function in
2016-10-26 04:56:09		       the hashtable parameter. The returned hashtable must contain suitable
2016-10-26 04:56:09		       1.command/1.name pairs to be added into the menu.
2016-10-26 04:56:09		       You can check the spell_menu script for an example of how to use this.
2016-10-26 04:56:09		perl v5.24.0                      2016-09-13                          MENU(1)
