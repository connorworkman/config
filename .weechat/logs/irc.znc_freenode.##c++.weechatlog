2016-10-17 12:30:36	<--	felixi (~mikko@a88-115-27-145.elisa-laajakaista.fi) has quit (Ping timeout: 260 seconds)
2016-10-17 12:31:24	-->	pa (~pa@unaffiliated/pa) has joined ##c++
2016-10-17 12:32:39	<--	shaggycat (~quassel@95-37-215-204.dynamic.mts-nn.ru) has quit (Ping timeout: 252 seconds)
2016-10-17 12:32:46	<--	m-schlitzer (~m-schlitz@ip-178-200-132-146.hsi07.unitymediagroup.de) has quit (Quit: WeeChat 1.4)
2016-10-17 12:33:00	-->	harold (~harold@85-238-17-190.fibertel.com.ar) has joined ##c++
2016-10-17 12:33:10	-->	illerucis (~illerucis@2620:10d:c091:180::22c1) has joined ##c++
2016-10-17 12:33:51	<--	JoshS (~jshjsh@172.56.39.213) has quit (Ping timeout: 244 seconds)
2016-10-17 12:33:53	-->	Betal (~Betal@unaffiliated/betal) has joined ##c++
2016-10-17 12:36:39	<--	gagbo (~gagbo@unaffiliated/gagbo) has quit (Quit: Konversation terminated!)
2016-10-17 12:36:42	-->	juliyx (~juliy@cable-89-16-155-206.cust.telecolumbus.net) has joined ##c++
2016-10-17 12:37:37	<--	SecondForm_Glenn (~Thunderbi@108.189.70.212) has quit (Quit: SecondForm_Glenn)
2016-10-17 12:37:37		[12:37]
2016-10-17 12:37:59	<--	ReverseBlade (~user@213.74.212.180) has quit (Ping timeout: 244 seconds)
2016-10-17 12:40:11	<--	biberu (~biberu@c-cf2d72d5.08-441-7570702.cust.bredbandsbolaget.se) has quit
2016-10-17 12:40:40	<--	extinct_potato (~extinct_p@ahq247.neoplus.adsl.tpnet.pl) has quit (Quit: Leaving)
2016-10-17 12:41:44	<--	juliyx (~juliy@cable-89-16-155-206.cust.telecolumbus.net) has quit (Quit: Leaving)
2016-10-17 12:41:48	-->	gagbo (~gagbo@unaffiliated/gagbo) has joined ##c++
2016-10-17 12:43:23	-->	saml_ (~saml@cpe-24-102-97-97.nyc.res.rr.com) has joined ##c++
2016-10-17 12:43:44	<--	tadaa (~tadaaa@nat-wh-wz4-12.rz.uni-karlsruhe.de) has quit (Read error: Connection reset by peer)
2016-10-17 12:43:47	<--	rebb (~rebb3@p54B80A52.dip0.t-ipconnect.de) has quit (Quit: Pong timeout)
2016-10-17 12:43:48	<--	f00mado_1 (~Thunderbi@2600:8805:9980:164:d823:d1a4:6902:c3a5) has quit (Ping timeout: 245 seconds)
2016-10-17 12:43:55	-->	blueyed (~daniel@hahler.de) has joined ##c++
2016-10-17 12:43:57	<--	sn1c (~sn1c@xdsl-78-35-95-46.netcologne.de) has quit (Quit: sn1c)
2016-10-17 12:44:05	blueyed	I am trying to hack rxvt-unicode's code, and would like to extend "char **env = environ" to append/overwrite an existing entry for execle.
2016-10-17 12:44:40	blueyed	Can I append something to an array of pointers?  Should I take care to remove an existing entry for the same env var?
2016-10-17 12:45:37	Eelis	you sound like you're in way over your head. are you actually interested in learning C++, or just in getting a quick fix?
2016-10-17 12:45:40	-->	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has joined ##c++
2016-10-17 12:45:54	-->	juliy (~juliy@cable-89-16-155-206.cust.telecolumbus.net) has joined ##c++
2016-10-17 12:46:01	-->	zwliew (uid161395@gateway/web/irccloud.com/x-hogiadqwumtrogwv) has joined ##c++
2016-10-17 12:46:05	<--	justanotheruser (~justanoth@unaffiliated/justanotheruser) has quit (Ping timeout: 250 seconds)
2016-10-17 12:46:28	-->	hualet (~hualet@113.57.50.233) has joined ##c++
2016-10-17 12:46:43	soksok_3612	guys some weired question
2016-10-17 12:46:44	-->	SecondForm_Glenn (~Thunderbi@108.189.70.212) has joined ##c++
2016-10-17 12:47:00	<--	UnripeSuica (~UnlikeSui@115.93.122.107) has quit (Ping timeout: 260 seconds)
2016-10-17 12:48:19	soksok_3612	if i have string with size 10 bytes and i need it to fit with my struct, for example struct s{int i, int g, short s} here i need the first 4 bytes f string goes to i, and second 4 bytes goes to next 4 byes and so on
2016-10-17 12:48:47	<--	Cohedrin (~textual@c-73-170-239-253.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-17 12:49:16	-->	justanotheruser (~justanoth@unaffiliated/justanotheruser) has joined ##c++
2016-10-17 12:49:42	-->	blueness (~blueness@gentoo/developer/blueness) has joined ##c++
2016-10-17 12:50:15	<--	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has quit (Ping timeout: 252 seconds)
2016-10-17 12:50:31	klys	soksok_3612, your string length + 1 is your string's size (unless using class string.)
2016-10-17 12:51:08	<--	hualet (~hualet@113.57.50.233) has quit (Ping timeout: 260 seconds)
2016-10-17 12:51:37	-->	Cohedrin (~textual@73.93.141.101) has joined ##c++
2016-10-17 12:51:41	soksok_3612	klys: ok so how i do that
2016-10-17 12:51:42	<--	tarspace (~tarspace@37.130.146.83) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-10-17 12:52:02	klys	soksok_3612, memcpy( dest, src, length );
2016-10-17 12:52:22	<--	diod (~diod@unaffiliated/diod) has quit (Ping timeout: 258 seconds)
2016-10-17 12:52:37	soksok_3612	klys: ok what if instead of struct i made class so what will be the solution
2016-10-17 12:52:37		[12:52]
2016-10-17 12:53:03	soksok_3612	klys: class a {int i, int g, short s};
2016-10-17 12:53:12	klys	then you have a few more problems and will have to obscure how you do it (which is just as complex) internally.
2016-10-17 12:53:43	-->	ReverseBlade (~user@213.74.212.180) has joined ##c++
2016-10-17 12:54:17	soksok_3612	klys: yes u right but now i have packet and i need to extract some data from it so i made data packing and need the packet fir to my class
2016-10-17 12:54:45	klys	packets differ in endianness also
2016-10-17 12:55:16	soksok_3612	klys: yes i know that all i need is to make something that makes it fit to class
2016-10-17 12:55:51	klys	as long as your class contains no function then you need to add constructor and descructor
2016-10-17 12:55:52	soksok_3612	klys: if string=10 bytes so i need first 4 bytes goes a.i for example
2016-10-17 12:56:16	klys	you want to use the uint32_t from <sys/types.h>
2016-10-17 12:56:53	-->	arpd (~arpd@wan.schoolroad.co.uk) has joined ##c++
2016-10-17 12:56:56	-->	shaggycat (~quassel@95-37-215-204.dynamic.mts-nn.ru) has joined ##c++
2016-10-17 12:56:59	w3z	hah, could you stop "helping"
2016-10-17 12:57:03	soksok_3612	klys: ok can i copy first four bytes to variable on class ?
2016-10-17 12:57:12	klys	^
2016-10-17 12:57:18	soksok_3612	w3z: why stop helping
2016-10-17 12:57:26	blueyed	Eelis: I am interested in learning, of course.. :)  But I apparently miss some basics.  Given the "extern char **environ", how can I append to it?
2016-10-17 12:57:30	<--	bumbar_ (~bumbar@unaffiliated/bumbar) has quit (Quit: Leaving)
2016-10-17 12:57:31	w3z	because hes making mistakes
2016-10-17 12:57:40	w3z	its the blind leading the blind
2016-10-17 12:57:47	<--	sammyg (~sammyg@unaffiliated/sammyg) has quit (Quit: Leaving)
2016-10-17 12:58:01	soksok_3612	w3z: ok can u told me the right thing :)
2016-10-17 12:58:38	<--	hellofunk (~user@ip4da3a019.direct-adsl.nl) has quit (Ping timeout: 250 seconds)
2016-10-17 12:59:03	soksok_3612	w3z: i'm sure that u know the solution
2016-10-17 12:59:16	blueyed	btw: I am "only" trying to inject LD_PRELOAD for subprocesses (the shell), maybe there is a better way than execle?!
2016-10-17 12:59:19	soksok_3612	w3z: can u share the solution with us ?
2016-10-17 12:59:29	w3z	nope, im busy, someone might if you ask a direct question and or post a testcase
2016-10-17 12:59:32	-->	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2016-10-17 13:00:12	<--	SwiftMatt (~Objective@162.242.94.72) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-10-17 13:00:21	soksok_3612	w3z: man im still make an idea so i dont have a code just i need to know how to make this and then write the code
2016-10-17 13:00:37	soksok_3612	w3z: at least give us a link for the solution
2016-10-17 13:00:39	<--	Cohedrin (~textual@73.93.141.101) has quit (Ping timeout: 256 seconds)
2016-10-17 13:00:53	<--	KnownSyntax (~KnownSynt@unaffiliated/knownsyntax) has quit (Ping timeout: 245 seconds)
2016-10-17 13:00:59	<--	anunnaki (~chris@unaffiliated/anunnaki) has quit (Quit: leaving)
2016-10-17 13:01:13	<--	damme (~damme@2001:16d8:cc75::802) has quit (Ping timeout: 256 seconds)
2016-10-17 13:02:00	<--	Neomex (~Neomex@bqz177.neoplus.adsl.tpnet.pl) has quit (Quit: Leaving)
2016-10-17 13:02:42	-->	ni8 (~ikari@ip70-185-109-150.ga.at.cox.net) has joined ##c++
2016-10-17 13:02:54	-->	diod (~diod@2a02:a03f:2c0b:3a00:21b:21ff:fe12:d0b7) has joined ##c++
2016-10-17 13:02:55	<--	diod (~diod@2a02:a03f:2c0b:3a00:21b:21ff:fe12:d0b7) has quit (Changing host)
2016-10-17 13:02:55	-->	diod (~diod@unaffiliated/diod) has joined ##c++
2016-10-17 13:03:22	soksok_3612	w3z: seems that u dont need to help mmm
2016-10-17 13:03:41	<--	gagbo (~gagbo@unaffiliated/gagbo) has quit (Quit: Konversation terminated!)
2016-10-17 13:04:20	<--	wno (~foo@kekkonen.niksula.hut.fi) has quit (Ping timeout: 252 seconds)
2016-10-17 13:04:26	<--	harold (~harold@85-238-17-190.fibertel.com.ar) has quit (Ping timeout: 250 seconds)
2016-10-17 13:04:50	<--	juliy (~juliy@cable-89-16-155-206.cust.telecolumbus.net) has quit (Remote host closed the connection)
2016-10-17 13:04:51	soksok_3612	guys need help with that please
2016-10-17 13:04:53	<--	thegunbuster (~ikari@unaffiliated/thegunbuster) has quit (Ping timeout: 250 seconds)
2016-10-17 13:05:01	-->	wno (~foo@kekkonen.niksula.hut.fi) has joined ##c++
2016-10-17 13:05:04	<--	softmetz (1q1o8bZ88o@menkent.uberspace.de) has quit (Ping timeout: 252 seconds)
2016-10-17 13:05:08	<--	ejnahc (~hello@chan.je) has quit (Ping timeout: 250 seconds)
2016-10-17 13:05:09	-->	juliy (~juliy@cable-89-16-155-206.cust.telecolumbus.net) has joined ##c++
2016-10-17 13:05:13	-->	softmetz (TVbwqxSWTO@menkent.uberspace.de) has joined ##c++
2016-10-17 13:05:19	-->	ejnahc (~hello@chan.je) has joined ##c++
2016-10-17 13:05:20	-->	harold (~harold@85-238-17-190.fibertel.com.ar) has joined ##c++
2016-10-17 13:05:34	<--	cd80 (~bf3@46.166.190.228) has quit (Ping timeout: 250 seconds)
2016-10-17 13:06:17	-->	cd80 (~bf3@46.166.190.185) has joined ##c++
2016-10-17 13:06:43	soksok_3612	w3z: thanks for help ;)
2016-10-17 13:06:45	<--	karakedi (~eAC53C340@unaffiliated/orphan) has quit (Remote host closed the connection)
2016-10-17 13:07:41	-->	Cohedrin (~textual@73.93.140.146) has joined ##c++
2016-10-17 13:07:41		[13:07]
2016-10-17 13:07:43	<--	iceiceice (~chris@nat-tvwna-outside-visitornet2-a-184.princeton.org) has quit (Ping timeout: 265 seconds)
2016-10-17 13:08:08	-->	KnownSyntax (~KnownSynt@173-25-59-107.client.mchsi.com) has joined ##c++
2016-10-17 13:08:09	<--	KnownSyntax (~KnownSynt@173-25-59-107.client.mchsi.com) has quit (Changing host)
2016-10-17 13:08:09	-->	KnownSyntax (~KnownSynt@unaffiliated/knownsyntax) has joined ##c++
2016-10-17 13:11:09	<--	SM0TVI (~sm0tvi@unaffiliated/sm0tvi) has quit (Ping timeout: 252 seconds)
2016-10-17 13:12:14	<--	iterati (~vangelis@46.12.185.49.dsl.dyn.forthnet.gr) has quit (Ping timeout: 250 seconds)
2016-10-17 13:12:17	-->	sssilver (~sssilver@38.122.48.218) has joined ##c++
2016-10-17 13:12:48	<--	MulleDK20 (MulleDK19@unaffiliated/mulledk19) has quit (Ping timeout: 252 seconds)
2016-10-17 13:13:15	-->	symm- (~symm-@188.27.0.23) has joined ##c++
2016-10-17 13:13:47	w3z	i definitely dont need to help, i may help if i have time and feel like it ....now whats your question....how do you get data from a packet in to an object ...
2016-10-17 13:13:48	<--	sssilver (~sssilver@38.122.48.218) has quit (Client Quit)
2016-10-17 13:14:02	-->	iceiceice (~chris@nat-tvwna-outside-visitornet2-a-184.princeton.org) has joined ##c++
2016-10-17 13:15:44	w3z	well it depends on the type of the object, if its pod, and has no padding, you can simply use it as an effective type in the buffer via a cast (the legallity of doing so in std c++ is eh), alternatively you can placement new it in to the buffer, assuming proper alignment .... otherwise, you have to copy the data from the buffer in to your new object instance
2016-10-17 13:16:43	w3z	there is no difference between a class and struct type in c++ other than default public access to members and public inheritance
2016-10-17 13:17:06	w3z	the fixed size integral types are defined in cstdint ....
2016-10-17 13:17:35	-->	tarspace (~tarspace@37.130.146.83) has joined ##c++
2016-10-17 13:17:47	<--	ReverseBlade (~user@213.74.212.180) has quit (Ping timeout: 244 seconds)
2016-10-17 13:17:48	<--	Brklyn (~truthbk@38.122.226.210) has quit (Ping timeout: 260 seconds)
2016-10-17 13:20:31	-->	doppel (~chatzilla@ip70-189-197-158.lv.lv.cox.net) has joined ##c++
2016-10-17 13:21:08	-->	Blue_Hat (~TwinKam20@206.214.26.146) has joined ##c++
2016-10-17 13:21:08	-->	glenfe (~glen@ool-18b8d08e.dyn.optonline.net) has joined ##c++
2016-10-17 13:21:08	<--	glenfe (~glen@ool-18b8d08e.dyn.optonline.net) has quit (Changing host)
2016-10-17 13:21:08	-->	glenfe (~glen@unaffiliated/glenfe) has joined ##c++
2016-10-17 13:21:46	<--	Blue_Hat (~TwinKam20@206.214.26.146) has quit (Read error: Connection reset by peer)
2016-10-17 13:23:28	<--	syem (~s@unaffiliated/syem) has quit (Quit: Lost terminal)
2016-10-17 13:23:28		[13:23]
2016-10-17 13:23:49	<--	tarspace (~tarspace@37.130.146.83) has quit (Quit: tarspace)
2016-10-17 13:24:38	<--	Vincent7 (~NoIdent@dslb-084-063-142-150.084.063.pools.vodafone-ip.de) has quit (Ping timeout: 265 seconds)
2016-10-17 13:25:05	<--	fedepad (~fedepad@p4FE10CCC.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-10-17 13:26:40	-->	SM0TVI (~sm0tvi@unaffiliated/sm0tvi) has joined ##c++
2016-10-17 13:28:08	-->	roko (d193902f@gateway/web/freenode/ip.209.147.144.47) has joined ##c++
2016-10-17 13:30:06	<--	EvilPenguin (~EvilPengu@bur-inet-pa-3.disney.com) has quit (Read error: Connection reset by peer)
2016-10-17 13:30:19	-->	JoshS (~jshjsh@m9d0536d0.tmodns.net) has joined ##c++
2016-10-17 13:30:21	-->	SwiftMatt (~Objective@162.242.94.93) has joined ##c++
2016-10-17 13:30:33	-->	EvilPenguin (~EvilPengu@bur-inet-pa-3.disney.com) has joined ##c++
2016-10-17 13:31:28	w3z	{vector<char> V(10,0); S* es = reinterpret_cast<S*>(&V[0]); S* ns=new(&V[0]) S; S cs; memcpy(&cs.i,&V[0],4); memcpy(&cs.j,&V[4],4); memcpy(&cs.k,&V[8],2); cout<<es->i,es->j,es->k,ns->i,ns->j,ns->k,cs.i,cs.j,cs.k; } struct S{int32_t i,j; int16_t k;};
2016-10-17 13:31:29	geordi	0, 0, 0, 0, 0, 0, 0, 0, 0
2016-10-17 13:31:42	-->	crazy_pete (~peter@2602:306:32eb:40d0::49) has joined ##c++
2016-10-17 13:31:43	<--	modlin (~quassel@93.123.41.167) has quit (Ping timeout: 244 seconds)
2016-10-17 13:32:30	<--	anuxivm (~anuxi@92.185.154.236) has left ##c++
2016-10-17 13:33:10	w3z	!interview
2016-10-17 13:33:12	nolyc	Do you think enough people realize that given a duration argument D_t, the real-time duration of the timeout is D_t + D_i + D_m?
2016-10-17 13:33:23	<--	Dohplay (~Dohplay@2601:246:4400:f10c:550f:a67d:eb8a:9ebc) has quit (Ping timeout: 245 seconds)
2016-10-17 13:33:30	<--	iceiceice (~chris@nat-tvwna-outside-visitornet2-a-184.princeton.org) has quit (Read error: Connection reset by peer)
2016-10-17 13:33:39	<--	f3r70rr35f (~fernando@200-112-118-3.baf.movistar.cl) has quit (Ping timeout: 252 seconds)
2016-10-17 13:33:44	-->	iceiceice (~chris@nat-tvwna-outside-visitornet2-a-184.princeton.org) has joined ##c++
2016-10-17 13:34:29	-->	ReverseBlade (~user@213.74.212.180) has joined ##c++
2016-10-17 13:34:30	-->	rorro (~rorro@155.4.14.18) has joined ##c++
2016-10-17 13:35:28	<--	serycjon (~jonas@20.53.broadband14.iol.cz) has quit (Ping timeout: 260 seconds)
2016-10-17 13:35:29	<--	tc2keats (~tc2keats@gateway/tor-sasl/tc2keats) has quit (Remote host closed the connection)
2016-10-17 13:35:56	<--	JoshS (~jshjsh@m9d0536d0.tmodns.net) has quit (Ping timeout: 260 seconds)
2016-10-17 13:36:33	-->	JoshS (~jshjsh@172.56.38.151) has joined ##c++
2016-10-17 13:37:19	-->	f3r70rr35f (~fernando@200-112-118-3.baf.movistar.cl) has joined ##c++
2016-10-17 13:37:42	w3z	heh, thats pretty obscure and mangled by the translation to simple text, D_t is the user provided duration to the wait for type library functions,  D_i is apparently the quality of impl delay,D_m is the quality of management delay (theyre D subscript)
2016-10-17 13:38:23	-->	davidstone (~davidston@184-96-182-164.hlrn.qwest.net) has joined ##c++
2016-10-17 13:38:33	<--	phinxy (~tehhhd@unaffiliated/phinxy) has quit (Read error: Connection reset by peer)
2016-10-17 13:38:33		[13:38]
2016-10-17 13:38:39	<--	iceiceice (~chris@nat-tvwna-outside-visitornet2-a-184.princeton.org) has quit (Ping timeout: 265 seconds)
2016-10-17 13:39:54	-->	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has joined ##c++
2016-10-17 13:40:25	<--	SwiftMatt (~Objective@162.242.94.93) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-10-17 13:41:09	-->	karakedi (~eAC53C340@unaffiliated/orphan) has joined ##c++
2016-10-17 13:43:05	<--	JoshS (~jshjsh@172.56.38.151) has quit (Ping timeout: 244 seconds)
2016-10-17 13:43:45	-->	SwiftMatt (~Objective@162.242.94.93) has joined ##c++
2016-10-17 13:43:56	--	Khaotic_ is now known as Khaotic
2016-10-17 13:44:12	<--	SwiftMatt (~Objective@162.242.94.93) has quit (Client Quit)
2016-10-17 13:44:28	-->	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has joined ##c++
2016-10-17 13:44:39	<--	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has quit (Ping timeout: 252 seconds)
2016-10-17 13:44:41	<--	TomyLobo (~TomyLobo@2a02:8109:87c0:20c:551f:9795:fd96:b7d8) has quit (Ping timeout: 260 seconds)
2016-10-17 13:45:59	<--	EvilPenguin (~EvilPengu@bur-inet-pa-3.disney.com) has quit (Read error: Connection reset by peer)
2016-10-17 13:46:19	<--	Lowl3v3l (~Lowl3v3l@dslb-088-075-000-014.088.075.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2016-10-17 13:46:52	<--	Karyon (~yaaic@unaffiliated/karyon) has quit (Remote host closed the connection)
2016-10-17 13:47:03	-->	EvilPenguin (~EvilPengu@bur-inet-pa-3.disney.com) has joined ##c++
2016-10-17 13:47:44	-->	hualet (~hualet@113.57.50.233) has joined ##c++
2016-10-17 13:47:55	w3z	!interview
2016-10-17 13:47:56	nolyc	How do you make sense of the fact that a ( token that follows noexcept is part of the noexcept-specification and does not commence an initializer?
2016-10-17 13:48:03	ville	wish we could query to quality of the provided clocks
2016-10-17 13:48:33	doppel	i don't.  i haven't really studied the noexcept specification.
2016-10-17 13:48:43	doppel	i guess that means i don't get the job :-(
2016-10-17 13:49:02	ville	just because someone chose that the time_point is nanoseconds doesn't mean anything really in terms of accuracy, precission or resolution
2016-10-17 13:49:04	doppel	at least it hasn't asked me where i see myself in 5 years.
2016-10-17 13:49:47	-->	JoshS (~jshjsh@172.56.38.151) has joined ##c++
2016-10-17 13:50:42	doppel	"i see myself living in my parents' house, applying for whatever jobs i can find, and welfare."
2016-10-17 13:50:48	 *	doppel kicks the interviewer
2016-10-17 13:50:51	ville	of course all the implementations would just return some random values for those, which would have nothing to do with the actual clock
2016-10-17 13:51:23	davidstone	is_ieee
2016-10-17 13:51:28	<--	Tobbi (~Tobbi@supertux/tobbi) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-10-17 13:52:01	davidstone	Or sorry, is_iec559
2016-10-17 13:52:15	w3z	its not as if the interfaces were designed for hard realtime, at least theytake a duration
2016-10-17 13:52:16	<--	hualet (~hualet@113.57.50.233) has quit (Ping timeout: 260 seconds)
2016-10-17 13:52:28	Khaotic	oh common
2016-10-17 13:52:32	ville	davidstone: for me? not sure what that has to do with clocks
2016-10-17 13:52:50	davidstone	I was using it as an example of another similar interface that implementations blatantly lie about
2016-10-17 13:52:57	davidstone	It seems more like an intent than a promise
2016-10-17 13:52:57	ville	ah right
2016-10-17 13:53:31	<--	soksok_3612 (~IceChat9@197.39.229.172) has quit (Quit: When the chips are down, the buffalo is empty)
2016-10-17 13:53:46	-->	topshell (~wew@447495.s.dedikuoti.lt) has joined ##c++
2016-10-17 13:53:46		[13:53]
2016-10-17 13:55:08	Eelis	!give Eelis interview
2016-10-17 13:55:09	nolyc	Eelis: Do you often dream about the fact that an object of type cv void* shall have the same representation and alignment requirements as cv char*?
2016-10-17 13:55:33	Eelis	not often enough, i think
2016-10-17 13:55:51	w3z	void dreams are so bland
2016-10-17 13:55:53	Eelis	in fact i didn't even know this was explicit
2016-10-17 13:55:58	Moto-chan	Not really w3z!
2016-10-17 13:56:03	Moto-chan	You can interpret them to be anything!
2016-10-17 13:56:14	davidstone	Well, you can reinterpret them, anyway
2016-10-17 13:56:16	Moto-chan	But then your brain explodes because you didn't follow strict alignment requirements.
2016-10-17 13:56:45	Eelis	same representation, does that mean same size?
2016-10-17 13:56:50	Eelis	s/mean/imply/
2016-10-17 13:56:54	-->	arescorpio (~arescorpi@152.171.94.34) has joined ##c++
2016-10-17 13:57:13	<--	bayardo (~julian@181.171.10.114) has quit
2016-10-17 13:57:42	w3z	how could it not be? all T*s are converible to void* and back
2016-10-17 13:57:44	Eelis	yes, looks like it
2016-10-17 13:57:55	Moto-chan	Actually, I don't know what same representation would imply... To me, representation would be the format, so signed, unsigned, two's complement, but a representation doesn't apply to void, as it's not anything.
2016-10-17 13:58:01	<--	f3r70rr35f (~fernando@200-112-118-3.baf.movistar.cl) has quit (Quit: leaving)
2016-10-17 13:58:12	Eelis	Moto-chan: http://eel.is/c++draft/basic.types#object_representation
2016-10-17 13:58:22	-->	VlijmenFileer (~vlijmenfi@li865-150.members.linode.com) has joined ##c++
2016-10-17 13:58:25	-->	rosten (~rosten@cpe-45-48-9-161.socal.res.rr.com) has joined ##c++
2016-10-17 13:58:26	-->	f3r70rr35f (~fernando@200-112-118-3.baf.movistar.cl) has joined ##c++
2016-10-17 13:58:46	-->	hualet (~hualet@113.57.50.233) has joined ##c++
2016-10-17 13:58:56	Eelis	and it's about the representation of the pointer, not of void
2016-10-17 13:58:58	Moto-chan	I see
2016-10-17 13:59:17	<--	gegagome (~gegagome@206.83.5.2) has quit (Quit: gegagome)
2016-10-17 13:59:32	<--	Munnu (~timo@91-158-145-247.elisa-laajakaista.fi) has quit (Quit: Follow the white rabbit. Compile the desert of the real. 139.)
2016-10-17 13:59:46	<--	destiny (uid73933@gateway/web/irccloud.com/x-vciivwygxuuwoevg) has quit (Quit: Connection closed for inactivity)
2016-10-17 14:00:09	<--	Lenore (b84a0f22@gateway/web/freenode/ip.184.74.15.34) has left ##c++
2016-10-17 14:00:24	<--	roko (d193902f@gateway/web/freenode/ip.209.147.144.47) has quit (Quit: Page closed)
2016-10-17 14:00:28	Eelis	wait, i don't even understand the interview question. is it "an object of type cv void* shall have the same [[representation and alignment] requirements] as cv char*", so two kinds of requirements?
2016-10-17 14:00:49	Eelis	or is it "an object of type cv void* shall have the same [representation and [alignment requirements]] as cv char*"
2016-10-17 14:01:01	w3z	i dont know that they "have to" be the same size though, as long as void* is as wide as a T*, and only the width of T* is used in the void*s representation
2016-10-17 14:01:53	Moto-chan	<< reinterpret_cast<Eelis&>(w3z);
2016-10-17 14:01:53	geordi	error: 'Eelis' does not name a type
2016-10-17 14:01:55	-->	TheSeven (~quassel@rockbox/developer/TheSeven) has joined ##c++
2016-10-17 14:01:56	Moto-chan	:(
2016-10-17 14:02:00	Eelis	i would ask the interviewer to please specify the intended parse tree of their ambiguous statement
2016-10-17 14:02:06	Eelis	*question
2016-10-17 14:02:08	-->	SunnyD (~SunnyD@cpe-72-178-78-211.hot.res.rr.com) has joined ##c++
2016-10-17 14:02:16	doppel	!interview
2016-10-17 14:02:17	nolyc	Did you know that a text line shall not begin with a # preprocessing token?
2016-10-17 14:02:28	Eelis	hmmm
2016-10-17 14:02:33	-->	iterati (~vangelis@46.12.185.49.dsl.dyn.forthnet.gr) has joined ##c++
2016-10-17 14:02:43	<--	ReverseBlade (~user@213.74.212.180) has quit (Ping timeout: 244 seconds)
2016-10-17 14:02:47	Eelis	"text line" is kinda vague, nolyc
2016-10-17 14:03:02	ubsan	what does that actually mean?
2016-10-17 14:03:16	doppel	perhaps it means "after preprocessing"
2016-10-17 14:03:28	<--	hualet (~hualet@113.57.50.233) has quit (Ping timeout: 260 seconds)
2016-10-17 14:04:16	<--	zero_byte (~zer0@gw2.globalcom.cz) has quit (Ping timeout: 265 seconds)
2016-10-17 14:04:19	Eelis	geordi: #
2016-10-17 14:04:20	geordi	Success
2016-10-17 14:04:22	Eelis	geordi: #define X(x) x \ X(#)
2016-10-17 14:04:22	geordi	error: stray '#' in program
2016-10-17 14:04:27	doppel	or a line that is not preprocessed
2016-10-17 14:04:33	-->	Akahige (~Rob@unaffiliated/moto-chan) has joined ##c++
2016-10-17 14:04:37	Eelis	http://eel.is/c++draft/cpp#nt:text-line
2016-10-17 14:04:48	w3z	it obviously doesnt mean any text because quoted text can have a # in a new line
2016-10-17 14:05:08	Eelis	ah, preprocessor lines are called "control lines"
2016-10-17 14:05:14	Eelis	i did /not/ know that!
2016-10-17 14:05:21	Oxyd	It says “# preprocessing token”, not a “# character”.
2016-10-17 14:06:38	Eelis	would be neater if the interview was stated like "what are the four kinds of lines in C++?"
2016-10-17 14:07:04	Eelis	oh no, it doesn't work like that. the productions for preprocessor conditional stuff are multi-line
2016-10-17 14:07:05	-->	roko (d193902f@gateway/web/freenode/ip.209.147.144.47) has joined ##c++
2016-10-17 14:07:33	<--	Moto-chan (~Rob@unaffiliated/moto-chan) has quit (Ping timeout: 248 seconds)
2016-10-17 14:07:36	Eelis	it could ask "what are the four kinds of group-part?" though
2016-10-17 14:07:41	-->	moffz0r (~moffz0r@14-201-5-120.static.tpgi.com.au) has joined ##c++
2016-10-17 14:07:47	Eelis	hmm, could have that for all the grammar productions
2016-10-17 14:07:48	ubsan	that would be a terrible interview question
2016-10-17 14:08:08	Eelis	that's why !interview is so much fun
2016-10-17 14:08:26	Eelis	it's like being interviewed by a psychopath
2016-10-17 14:08:28	roko	while debugging with gdb in a try catch block, on hitting next the control does not stop in the catch block and the execution resumes till the end. What could be an issue
2016-10-17 14:08:51	-->	YungRaj (~YungRaj@nat-165-91-13-126.tamulink.tamu.edu) has joined ##c++
2016-10-17 14:08:51		[14:08]
2016-10-17 14:08:58	w3z	what does #line do ...
2016-10-17 14:09:28	Eelis	{ \ #line 333 \ cout << __LINE__; }
2016-10-17 14:09:29	geordi	333
2016-10-17 14:10:29	Eelis	{ \ #line 3333333333 \ cout << __LINE__; }
2016-10-17 14:10:33	geordi	error: line number out of range
2016-10-17 14:11:01	w3z	{#line silly \ cout<< __LINE__;}
2016-10-17 14:11:01	geordi	error: stray '#' in program
2016-10-17 14:11:02	Eelis	pff doesn't even support a couple billion lines of code per file
2016-10-17 14:11:09	davidstone	I wonder what the most complicated strictly standard compliant program is (if anything?)
2016-10-17 14:11:13	w3z	{\#line silly \ cout<< __LINE__;}
2016-10-17 14:11:13	geordi	error: "silly" after #line is not a positive integer
2016-10-17 14:11:19	davidstone	As in not exceeding any minimum required implementation limits
2016-10-17 14:11:52	davidstone	All side-effects and return values from main are implementation defined, though
2016-10-17 14:12:03	<--	Betal (~Betal@unaffiliated/betal) has quit (Ping timeout: 256 seconds)
2016-10-17 14:12:16	-->	television (~alex@unaffiliated/arexr) has joined ##c++
2016-10-17 14:13:12	w3z	not sure your question is meaningful, whats "most complicated" and what if i add a line to it
2016-10-17 14:13:20	<--	Skruff (Elite15320@gateway/shell/elitebnc/x-qzwuxmoqzvjurfnv) has quit (Ping timeout: 258 seconds)
2016-10-17 14:13:21	davidstone	Well, can you add a line to it?
2016-10-17 14:13:28	davidstone	Or would that then exceed the implementation limit
2016-10-17 14:13:34	baudejogos	o_O
2016-10-17 14:13:35	davidstone	It's intended as a subjective question
2016-10-17 14:13:46	baudejogos	so useful
2016-10-17 14:14:05	Oxyd	I suppose the empty file is the most complicated, then. Since an implementation may place a limit of 0 bytes on any program.
2016-10-17 14:14:15	davidstone	Like, is it actually possible to write, say, Tetris without exceeding implementation limits?
2016-10-17 14:14:21	baudejogos	yes
2016-10-17 14:14:23	baudejogos	!next
2016-10-17 14:14:25	nolyc	Another satisfied customer, next!
2016-10-17 14:14:34	Oxyd	Depends on the implementation limits.
2016-10-17 14:15:06	<--	Markow (~Markow@176.122.215.103) has quit (Remote host closed the connection)
2016-10-17 14:15:20	<--	SecondForm_Glenn (~Thunderbi@108.189.70.212) has quit (Ping timeout: 250 seconds)
2016-10-17 14:16:25	-->	iceiceice (~chris@nat-tvwna-outside-visitornet2-a-184.princeton.org) has joined ##c++
2016-10-17 14:17:54	-->	TikityTik (~TikityTik@162.223.44.49) has joined ##c++
2016-10-17 14:19:05	-->	freddyG (~freddy57@unaffiliated/freddy57) has joined ##c++
2016-10-17 14:19:53	<--	Gustavo6046 (~Gustavo60@unaffiliated/gustavo6046) has quit (Quit: *rooonc* *yawn* *accidentally dropping a spore* *rooonc* zZzZzZ)
2016-10-17 14:19:57	-->	zero_byte (~zer0@ip-89-103-110-138.net.upcbroadband.cz) has joined ##c++
2016-10-17 14:20:10	<--	juliy (~juliy@cable-89-16-155-206.cust.telecolumbus.net) has quit (Quit: Leaving)
2016-10-17 14:20:11	<--	ERROH (mama@unaffiliated/almathea) has quit (Ping timeout: 268 seconds)
2016-10-17 14:22:06	-->	Cohedrin_ (~textual@c-73-170-239-253.hsd1.ca.comcast.net) has joined ##c++
2016-10-17 14:22:16	<--	shaggycat (~quassel@95-37-215-204.dynamic.mts-nn.ru) has quit (Ping timeout: 250 seconds)
2016-10-17 14:24:36	<--	Cohedrin (~textual@73.93.140.146) has quit (Ping timeout: 250 seconds)
2016-10-17 14:24:36		[14:24]
2016-10-17 14:26:08	-->	SwiftMatt (~Objective@130.253.27.153) has joined ##c++
2016-10-17 14:26:31	-->	felixi (~mikko@a88-115-27-145.elisa-laajakaista.fi) has joined ##c++
2016-10-17 14:27:09	-->	chris_ (~chris@nat-tvwna-outside-visitornet2-a-184.princeton.org) has joined ##c++
2016-10-17 14:27:16	-->	f00mado_ (~Thunderbi@ip72-221-100-23.ri.ri.cox.net) has joined ##c++
2016-10-17 14:27:55	-->	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has joined ##c++
2016-10-17 14:28:57	-->	Karyon (~yaaic@unaffiliated/karyon) has joined ##c++
2016-10-17 14:29:21	--	Karyon is now known as Guest70252
2016-10-17 14:29:53	<--	iceiceice (~chris@nat-tvwna-outside-visitornet2-a-184.princeton.org) has quit (Ping timeout: 265 seconds)
2016-10-17 14:30:27	-->	Crazylemon64 (~Crazylemo@207.62.170.215) has joined ##c++
2016-10-17 14:32:33	<--	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has quit (Ping timeout: 245 seconds)
2016-10-17 14:34:04	-->	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has joined ##c++
2016-10-17 14:35:05	-->	ReverseBlade (~user@213.74.212.180) has joined ##c++
2016-10-17 14:35:26	-->	sssilver (~sssilver@2605:6000:ee54:b500:81c3:a3a5:c04c:2db1) has joined ##c++
2016-10-17 14:36:46	<--	Guest70252 (~yaaic@unaffiliated/karyon) has quit (Quit: sayonara)
2016-10-17 14:36:52	-->	andyhuzhill (~Thunderbi@14.23.45.178) has joined ##c++
2016-10-17 14:36:57	-->	hualet (~hualet@118.184.15.164) has joined ##c++
2016-10-17 14:37:26	-->	Skruff (Elite15320@gateway/shell/elitebnc/x-bouhcpdnkbjmfcdu) has joined ##c++
2016-10-17 14:38:37	<--	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has quit (Ping timeout: 240 seconds)
2016-10-17 14:40:13	-->	pmercado (~pmercado@186-104-245-4.baf.movistar.cl) has joined ##c++
2016-10-17 14:40:13		[14:40]
2016-10-17 14:40:16	<--	heiner (~heiner@dslb-178-005-130-105.178.005.pools.vodafone-ip.de) has quit (Disconnected by services)
2016-10-17 14:40:26	-->	heiner (~heiner@dslc-082-082-226-040.pools.arcor-ip.net) has joined ##c++
2016-10-17 14:41:32	-->	Dohplay (~Dohplay@2601:246:4400:f10c:64b3:e224:8352:31b9) has joined ##c++
2016-10-17 14:43:02	-->	GinoMan (~GinoMan@2601:41:c101:487a:61f1:405b:8bf5:e3d5) has joined ##c++
2016-10-17 14:44:39	w3z	!interview
2016-10-17 14:44:40	<--	doppel (~chatzilla@ip70-189-197-158.lv.lv.cox.net) has quit (Quit: ChatZilla 0.9.92 [Firefox 49.0.1/20160922113459])
2016-10-17 14:44:41	nolyc	Why is it so important that a value of type std::nullptr_t is a null pointer constant?
2016-10-17 14:45:56	<--	kimundi (~Kimundi@p57BC70F0.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2016-10-17 14:47:34	<--	Skruff (Elite15320@gateway/shell/elitebnc/x-bouhcpdnkbjmfcdu) has quit (Ping timeout: 250 seconds)
2016-10-17 14:47:47	Eelis	hmm that's kind of weird, i genuinely wonder why that is
2016-10-17 14:47:56	Eelis	{ void * x{}; constexpr void * p = x; }
2016-10-17 14:47:56	geordi	error: the value of 'x' is not usable in a constant expression
2016-10-17 14:47:58	Eelis	{ nullptr_t x{}; constexpr void * p = x; }
2016-10-17 14:47:59	geordi	<no output>
2016-10-17 14:48:36	Eelis	nullptr_t is a weird special case here. wonder what reasonable code would ever depend on this
2016-10-17 14:48:52	davidstone	It's not really a special case
2016-10-17 14:49:02	-->	zap0 (~moofy@14-201-222-143.tpgi.com.au) has joined ##c++
2016-10-17 14:49:05	davidstone	Well, it's a special case of a broader concept: the singleton type
2016-10-17 14:49:10	davidstone	A type that can only contain one value
2016-10-17 14:49:16	davidstone	Like std::true_type and std::false_type
2016-10-17 14:49:18	-->	KaiserAres (~KaiserAre@unaffiliated/kaiserares) has joined ##c++
2016-10-17 14:49:27	Oxyd	Perhaps it's to allow code like nullptr_t hugarian_notation_prefix_null = nullptr;, for those who really don't like the name nullptr.
2016-10-17 14:49:42	w3z	{using T=int*; T x{}; constexpr int* p=x;}
2016-10-17 14:49:42	geordi	error: the value of 'x' is not usable in a constant expression
2016-10-17 14:49:50	Eelis	{ std::false_type x{}; constexpr void * p = x; }
2016-10-17 14:49:50	geordi	error: cannot convert 'false_type {aka integral_constant<bool, false>}' to 'void* const' in initialization
2016-10-17 14:49:55	-->	nine_milli (~nine_mill@32.211.52.104) has joined ##c++
2016-10-17 14:50:00	-->	AndChat335225 (~AndChat33@2600:8807:c145:3c00:1088:b2ca:e0ff:d685) has joined ##c++
2016-10-17 14:50:13	<--	nine_milli (~nine_mill@32.211.52.104) has left ##c++
2016-10-17 14:50:29	davidstone	That's good
2016-10-17 14:50:33	w3z	{using T=int*; constexpr T x{}; constexpr int* p=x;}
2016-10-17 14:50:34	geordi	<no output>
2016-10-17 14:50:41	-->	Skruff (Elite15320@gateway/shell/elitebnc/x-wfumwrskpauapwek) has joined ##c++
2016-10-17 14:51:02	Eelis	davidstone: so can you name another type that behaves like this?
2016-10-17 14:51:04	davidstone	{ std::false_type x{}; constexpr bool b = x; }
2016-10-17 14:51:04	geordi	<no output>
2016-10-17 14:51:35	Eelis	ok that's better
2016-10-17 14:51:35	<--	iterati (~vangelis@46.12.185.49.dsl.dyn.forthnet.gr) has quit (Remote host closed the connection)
2016-10-17 14:51:57	Eelis	but that still doesn't explain why it's necessary at all
2016-10-17 14:52:04	Eelis	only that it's also something you can do with a stdlib component
2016-10-17 14:52:51	-->	Vinnie_win_u (~TheVinn@pdpc/supporter/gold/thevinn) has joined ##c++
2016-10-17 14:53:06	davidstone	It gets you constexpr-guaranteed function arguments
2016-10-17 14:53:16	w3z	well its something you can do with any compile time constant but yeah, it doesnt seem essential
2016-10-17 14:53:29	w3z	(for ullptr_t)
2016-10-17 14:53:32	-->	mandeep (~mandeep@108.61.226.28) has joined ##c++
2016-10-17 14:53:48	-->	iterati (~vangelis@46.12.185.49.dsl.dyn.forthnet.gr) has joined ##c++
2016-10-17 14:53:50	Eelis	davidstone: you mean for functions that have a nullptr_t parameter? why would they even name the parameter?
2016-10-17 14:53:58	<--	Vinnie_win (vinnie.fal@pdpc/supporter/gold/thevinn) has quit (Ping timeout: 258 seconds)
2016-10-17 14:54:20	davidstone	Yeah, typically you just see people doing something like void f(std::nullptr_t) { g(nullptr); }
2016-10-17 14:54:26	davidstone	When it's spelled out like that
2016-10-17 14:54:53	w3z	"typically", i dont think ive ever seen that :)
2016-10-17 14:54:58	-->	shaggycat (~quassel@95-37-215-204.dynamic.mts-nn.ru) has joined ##c++
2016-10-17 14:55:39	davidstone	But maybe there was code like this first: template<typename T> void wrapper(T pointer) { f(pointer); }
2016-10-17 14:55:39		[14:55]
2016-10-17 14:55:39	-->	rockstar_ (~rockstar@cpe-72-224-119-105.nycap.res.rr.com) has joined ##c++
2016-10-17 14:55:42	w3z	im trying to think of a use in tmp that could justify it
2016-10-17 14:55:53	davidstone	And `f` has an overload that is specialized on nullptr to be deleted
2016-10-17 14:55:58	davidstone	Or provide some other sort of error mechanism
2016-10-17 14:56:21	davidstone	For instance, my string class should be constructible with char const *, but not nullptr
