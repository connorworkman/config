2016-10-17 12:30:36	<--	felixi (~mikko@a88-115-27-145.elisa-laajakaista.fi) has quit (Ping timeout: 260 seconds)
2016-10-17 12:31:24	-->	pa (~pa@unaffiliated/pa) has joined ##c++
2016-10-17 12:32:39	<--	shaggycat (~quassel@95-37-215-204.dynamic.mts-nn.ru) has quit (Ping timeout: 252 seconds)
2016-10-17 12:32:46	<--	m-schlitzer (~m-schlitz@ip-178-200-132-146.hsi07.unitymediagroup.de) has quit (Quit: WeeChat 1.4)
2016-10-17 12:33:00	-->	harold (~harold@85-238-17-190.fibertel.com.ar) has joined ##c++
2016-10-17 12:33:10	-->	illerucis (~illerucis@2620:10d:c091:180::22c1) has joined ##c++
2016-10-17 12:33:51	<--	JoshS (~jshjsh@172.56.39.213) has quit (Ping timeout: 244 seconds)
2016-10-17 12:33:53	-->	Betal (~Betal@unaffiliated/betal) has joined ##c++
2016-10-17 12:36:39	<--	gagbo (~gagbo@unaffiliated/gagbo) has quit (Quit: Konversation terminated!)
2016-10-17 12:36:42	-->	juliyx (~juliy@cable-89-16-155-206.cust.telecolumbus.net) has joined ##c++
2016-10-17 12:37:37	<--	SecondForm_Glenn (~Thunderbi@108.189.70.212) has quit (Quit: SecondForm_Glenn)
2016-10-17 12:37:37		[12:37]
2016-10-17 12:37:59	<--	ReverseBlade (~user@213.74.212.180) has quit (Ping timeout: 244 seconds)
2016-10-17 12:40:11	<--	biberu (~biberu@c-cf2d72d5.08-441-7570702.cust.bredbandsbolaget.se) has quit
2016-10-17 12:40:40	<--	extinct_potato (~extinct_p@ahq247.neoplus.adsl.tpnet.pl) has quit (Quit: Leaving)
2016-10-17 12:41:44	<--	juliyx (~juliy@cable-89-16-155-206.cust.telecolumbus.net) has quit (Quit: Leaving)
2016-10-17 12:41:48	-->	gagbo (~gagbo@unaffiliated/gagbo) has joined ##c++
2016-10-17 12:43:23	-->	saml_ (~saml@cpe-24-102-97-97.nyc.res.rr.com) has joined ##c++
2016-10-17 12:43:44	<--	tadaa (~tadaaa@nat-wh-wz4-12.rz.uni-karlsruhe.de) has quit (Read error: Connection reset by peer)
2016-10-17 12:43:47	<--	rebb (~rebb3@p54B80A52.dip0.t-ipconnect.de) has quit (Quit: Pong timeout)
2016-10-17 12:43:48	<--	f00mado_1 (~Thunderbi@2600:8805:9980:164:d823:d1a4:6902:c3a5) has quit (Ping timeout: 245 seconds)
2016-10-17 12:43:55	-->	blueyed (~daniel@hahler.de) has joined ##c++
2016-10-17 12:43:57	<--	sn1c (~sn1c@xdsl-78-35-95-46.netcologne.de) has quit (Quit: sn1c)
2016-10-17 12:44:05	blueyed	I am trying to hack rxvt-unicode's code, and would like to extend "char **env = environ" to append/overwrite an existing entry for execle.
2016-10-17 12:44:40	blueyed	Can I append something to an array of pointers?  Should I take care to remove an existing entry for the same env var?
2016-10-17 12:45:37	Eelis	you sound like you're in way over your head. are you actually interested in learning C++, or just in getting a quick fix?
2016-10-17 12:45:40	-->	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has joined ##c++
2016-10-17 12:45:54	-->	juliy (~juliy@cable-89-16-155-206.cust.telecolumbus.net) has joined ##c++
2016-10-17 12:46:01	-->	zwliew (uid161395@gateway/web/irccloud.com/x-hogiadqwumtrogwv) has joined ##c++
2016-10-17 12:46:05	<--	justanotheruser (~justanoth@unaffiliated/justanotheruser) has quit (Ping timeout: 250 seconds)
2016-10-17 12:46:28	-->	hualet (~hualet@113.57.50.233) has joined ##c++
2016-10-17 12:46:43	soksok_3612	guys some weired question
2016-10-17 12:46:44	-->	SecondForm_Glenn (~Thunderbi@108.189.70.212) has joined ##c++
2016-10-17 12:47:00	<--	UnripeSuica (~UnlikeSui@115.93.122.107) has quit (Ping timeout: 260 seconds)
2016-10-17 12:48:19	soksok_3612	if i have string with size 10 bytes and i need it to fit with my struct, for example struct s{int i, int g, short s} here i need the first 4 bytes f string goes to i, and second 4 bytes goes to next 4 byes and so on
2016-10-17 12:48:47	<--	Cohedrin (~textual@c-73-170-239-253.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-17 12:49:16	-->	justanotheruser (~justanoth@unaffiliated/justanotheruser) has joined ##c++
2016-10-17 12:49:42	-->	blueness (~blueness@gentoo/developer/blueness) has joined ##c++
2016-10-17 12:50:15	<--	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has quit (Ping timeout: 252 seconds)
2016-10-17 12:50:31	klys	soksok_3612, your string length + 1 is your string's size (unless using class string.)
2016-10-17 12:51:08	<--	hualet (~hualet@113.57.50.233) has quit (Ping timeout: 260 seconds)
2016-10-17 12:51:37	-->	Cohedrin (~textual@73.93.141.101) has joined ##c++
2016-10-17 12:51:41	soksok_3612	klys: ok so how i do that
2016-10-17 12:51:42	<--	tarspace (~tarspace@37.130.146.83) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-10-17 12:52:02	klys	soksok_3612, memcpy( dest, src, length );
2016-10-17 12:52:22	<--	diod (~diod@unaffiliated/diod) has quit (Ping timeout: 258 seconds)
2016-10-17 12:52:37	soksok_3612	klys: ok what if instead of struct i made class so what will be the solution
2016-10-17 12:52:37		[12:52]
2016-10-17 12:53:03	soksok_3612	klys: class a {int i, int g, short s};
2016-10-17 12:53:12	klys	then you have a few more problems and will have to obscure how you do it (which is just as complex) internally.
2016-10-17 12:53:43	-->	ReverseBlade (~user@213.74.212.180) has joined ##c++
2016-10-17 12:54:17	soksok_3612	klys: yes u right but now i have packet and i need to extract some data from it so i made data packing and need the packet fir to my class
2016-10-17 12:54:45	klys	packets differ in endianness also
2016-10-17 12:55:16	soksok_3612	klys: yes i know that all i need is to make something that makes it fit to class
2016-10-17 12:55:51	klys	as long as your class contains no function then you need to add constructor and descructor
2016-10-17 12:55:52	soksok_3612	klys: if string=10 bytes so i need first 4 bytes goes a.i for example
2016-10-17 12:56:16	klys	you want to use the uint32_t from <sys/types.h>
2016-10-17 12:56:53	-->	arpd (~arpd@wan.schoolroad.co.uk) has joined ##c++
2016-10-17 12:56:56	-->	shaggycat (~quassel@95-37-215-204.dynamic.mts-nn.ru) has joined ##c++
2016-10-17 12:56:59	w3z	hah, could you stop "helping"
2016-10-17 12:57:03	soksok_3612	klys: ok can i copy first four bytes to variable on class ?
2016-10-17 12:57:12	klys	^
2016-10-17 12:57:18	soksok_3612	w3z: why stop helping
2016-10-17 12:57:26	blueyed	Eelis: I am interested in learning, of course.. :)  But I apparently miss some basics.  Given the "extern char **environ", how can I append to it?
2016-10-17 12:57:30	<--	bumbar_ (~bumbar@unaffiliated/bumbar) has quit (Quit: Leaving)
2016-10-17 12:57:31	w3z	because hes making mistakes
2016-10-17 12:57:40	w3z	its the blind leading the blind
2016-10-17 12:57:47	<--	sammyg (~sammyg@unaffiliated/sammyg) has quit (Quit: Leaving)
2016-10-17 12:58:01	soksok_3612	w3z: ok can u told me the right thing :)
2016-10-17 12:58:38	<--	hellofunk (~user@ip4da3a019.direct-adsl.nl) has quit (Ping timeout: 250 seconds)
2016-10-17 12:59:03	soksok_3612	w3z: i'm sure that u know the solution
2016-10-17 12:59:16	blueyed	btw: I am "only" trying to inject LD_PRELOAD for subprocesses (the shell), maybe there is a better way than execle?!
2016-10-17 12:59:19	soksok_3612	w3z: can u share the solution with us ?
2016-10-17 12:59:29	w3z	nope, im busy, someone might if you ask a direct question and or post a testcase
2016-10-17 12:59:32	-->	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2016-10-17 13:00:12	<--	SwiftMatt (~Objective@162.242.94.72) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-10-17 13:00:21	soksok_3612	w3z: man im still make an idea so i dont have a code just i need to know how to make this and then write the code
2016-10-17 13:00:37	soksok_3612	w3z: at least give us a link for the solution
2016-10-17 13:00:39	<--	Cohedrin (~textual@73.93.141.101) has quit (Ping timeout: 256 seconds)
2016-10-17 13:00:53	<--	KnownSyntax (~KnownSynt@unaffiliated/knownsyntax) has quit (Ping timeout: 245 seconds)
2016-10-17 13:00:59	<--	anunnaki (~chris@unaffiliated/anunnaki) has quit (Quit: leaving)
2016-10-17 13:01:13	<--	damme (~damme@2001:16d8:cc75::802) has quit (Ping timeout: 256 seconds)
2016-10-17 13:02:00	<--	Neomex (~Neomex@bqz177.neoplus.adsl.tpnet.pl) has quit (Quit: Leaving)
2016-10-17 13:02:42	-->	ni8 (~ikari@ip70-185-109-150.ga.at.cox.net) has joined ##c++
2016-10-17 13:02:54	-->	diod (~diod@2a02:a03f:2c0b:3a00:21b:21ff:fe12:d0b7) has joined ##c++
2016-10-17 13:02:55	<--	diod (~diod@2a02:a03f:2c0b:3a00:21b:21ff:fe12:d0b7) has quit (Changing host)
2016-10-17 13:02:55	-->	diod (~diod@unaffiliated/diod) has joined ##c++
2016-10-17 13:03:22	soksok_3612	w3z: seems that u dont need to help mmm
2016-10-17 13:03:41	<--	gagbo (~gagbo@unaffiliated/gagbo) has quit (Quit: Konversation terminated!)
2016-10-17 13:04:20	<--	wno (~foo@kekkonen.niksula.hut.fi) has quit (Ping timeout: 252 seconds)
2016-10-17 13:04:26	<--	harold (~harold@85-238-17-190.fibertel.com.ar) has quit (Ping timeout: 250 seconds)
2016-10-17 13:04:50	<--	juliy (~juliy@cable-89-16-155-206.cust.telecolumbus.net) has quit (Remote host closed the connection)
2016-10-17 13:04:51	soksok_3612	guys need help with that please
2016-10-17 13:04:53	<--	thegunbuster (~ikari@unaffiliated/thegunbuster) has quit (Ping timeout: 250 seconds)
2016-10-17 13:05:01	-->	wno (~foo@kekkonen.niksula.hut.fi) has joined ##c++
2016-10-17 13:05:04	<--	softmetz (1q1o8bZ88o@menkent.uberspace.de) has quit (Ping timeout: 252 seconds)
2016-10-17 13:05:08	<--	ejnahc (~hello@chan.je) has quit (Ping timeout: 250 seconds)
2016-10-17 13:05:09	-->	juliy (~juliy@cable-89-16-155-206.cust.telecolumbus.net) has joined ##c++
2016-10-17 13:05:13	-->	softmetz (TVbwqxSWTO@menkent.uberspace.de) has joined ##c++
2016-10-17 13:05:19	-->	ejnahc (~hello@chan.je) has joined ##c++
2016-10-17 13:05:20	-->	harold (~harold@85-238-17-190.fibertel.com.ar) has joined ##c++
2016-10-17 13:05:34	<--	cd80 (~bf3@46.166.190.228) has quit (Ping timeout: 250 seconds)
2016-10-17 13:06:17	-->	cd80 (~bf3@46.166.190.185) has joined ##c++
2016-10-17 13:06:43	soksok_3612	w3z: thanks for help ;)
2016-10-17 13:06:45	<--	karakedi (~eAC53C340@unaffiliated/orphan) has quit (Remote host closed the connection)
2016-10-17 13:07:41	-->	Cohedrin (~textual@73.93.140.146) has joined ##c++
2016-10-17 13:07:41		[13:07]
2016-10-17 13:07:43	<--	iceiceice (~chris@nat-tvwna-outside-visitornet2-a-184.princeton.org) has quit (Ping timeout: 265 seconds)
2016-10-17 13:08:08	-->	KnownSyntax (~KnownSynt@173-25-59-107.client.mchsi.com) has joined ##c++
2016-10-17 13:08:09	<--	KnownSyntax (~KnownSynt@173-25-59-107.client.mchsi.com) has quit (Changing host)
2016-10-17 13:08:09	-->	KnownSyntax (~KnownSynt@unaffiliated/knownsyntax) has joined ##c++
2016-10-17 13:11:09	<--	SM0TVI (~sm0tvi@unaffiliated/sm0tvi) has quit (Ping timeout: 252 seconds)
2016-10-17 13:12:14	<--	iterati (~vangelis@46.12.185.49.dsl.dyn.forthnet.gr) has quit (Ping timeout: 250 seconds)
2016-10-17 13:12:17	-->	sssilver (~sssilver@38.122.48.218) has joined ##c++
2016-10-17 13:12:48	<--	MulleDK20 (MulleDK19@unaffiliated/mulledk19) has quit (Ping timeout: 252 seconds)
2016-10-17 13:13:15	-->	symm- (~symm-@188.27.0.23) has joined ##c++
2016-10-17 13:13:47	w3z	i definitely dont need to help, i may help if i have time and feel like it ....now whats your question....how do you get data from a packet in to an object ...
2016-10-17 13:13:48	<--	sssilver (~sssilver@38.122.48.218) has quit (Client Quit)
2016-10-17 13:14:02	-->	iceiceice (~chris@nat-tvwna-outside-visitornet2-a-184.princeton.org) has joined ##c++
2016-10-17 13:15:44	w3z	well it depends on the type of the object, if its pod, and has no padding, you can simply use it as an effective type in the buffer via a cast (the legallity of doing so in std c++ is eh), alternatively you can placement new it in to the buffer, assuming proper alignment .... otherwise, you have to copy the data from the buffer in to your new object instance
2016-10-17 13:16:43	w3z	there is no difference between a class and struct type in c++ other than default public access to members and public inheritance
2016-10-17 13:17:06	w3z	the fixed size integral types are defined in cstdint ....
2016-10-17 13:17:35	-->	tarspace (~tarspace@37.130.146.83) has joined ##c++
2016-10-17 13:17:47	<--	ReverseBlade (~user@213.74.212.180) has quit (Ping timeout: 244 seconds)
2016-10-17 13:17:48	<--	Brklyn (~truthbk@38.122.226.210) has quit (Ping timeout: 260 seconds)
2016-10-17 13:20:31	-->	doppel (~chatzilla@ip70-189-197-158.lv.lv.cox.net) has joined ##c++
2016-10-17 13:21:08	-->	Blue_Hat (~TwinKam20@206.214.26.146) has joined ##c++
2016-10-17 13:21:08	-->	glenfe (~glen@ool-18b8d08e.dyn.optonline.net) has joined ##c++
2016-10-17 13:21:08	<--	glenfe (~glen@ool-18b8d08e.dyn.optonline.net) has quit (Changing host)
2016-10-17 13:21:08	-->	glenfe (~glen@unaffiliated/glenfe) has joined ##c++
2016-10-17 13:21:46	<--	Blue_Hat (~TwinKam20@206.214.26.146) has quit (Read error: Connection reset by peer)
2016-10-17 13:23:28	<--	syem (~s@unaffiliated/syem) has quit (Quit: Lost terminal)
2016-10-17 13:23:28		[13:23]
2016-10-17 13:23:49	<--	tarspace (~tarspace@37.130.146.83) has quit (Quit: tarspace)
2016-10-17 13:24:38	<--	Vincent7 (~NoIdent@dslb-084-063-142-150.084.063.pools.vodafone-ip.de) has quit (Ping timeout: 265 seconds)
2016-10-17 13:25:05	<--	fedepad (~fedepad@p4FE10CCC.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-10-17 13:26:40	-->	SM0TVI (~sm0tvi@unaffiliated/sm0tvi) has joined ##c++
2016-10-17 13:28:08	-->	roko (d193902f@gateway/web/freenode/ip.209.147.144.47) has joined ##c++
2016-10-17 13:30:06	<--	EvilPenguin (~EvilPengu@bur-inet-pa-3.disney.com) has quit (Read error: Connection reset by peer)
2016-10-17 13:30:19	-->	JoshS (~jshjsh@m9d0536d0.tmodns.net) has joined ##c++
2016-10-17 13:30:21	-->	SwiftMatt (~Objective@162.242.94.93) has joined ##c++
2016-10-17 13:30:33	-->	EvilPenguin (~EvilPengu@bur-inet-pa-3.disney.com) has joined ##c++
2016-10-17 13:31:28	w3z	{vector<char> V(10,0); S* es = reinterpret_cast<S*>(&V[0]); S* ns=new(&V[0]) S; S cs; memcpy(&cs.i,&V[0],4); memcpy(&cs.j,&V[4],4); memcpy(&cs.k,&V[8],2); cout<<es->i,es->j,es->k,ns->i,ns->j,ns->k,cs.i,cs.j,cs.k; } struct S{int32_t i,j; int16_t k;};
2016-10-17 13:31:29	geordi	0, 0, 0, 0, 0, 0, 0, 0, 0
2016-10-17 13:31:42	-->	crazy_pete (~peter@2602:306:32eb:40d0::49) has joined ##c++
2016-10-17 13:31:43	<--	modlin (~quassel@93.123.41.167) has quit (Ping timeout: 244 seconds)
2016-10-17 13:32:30	<--	anuxivm (~anuxi@92.185.154.236) has left ##c++
2016-10-17 13:33:10	w3z	!interview
2016-10-17 13:33:12	nolyc	Do you think enough people realize that given a duration argument D_t, the real-time duration of the timeout is D_t + D_i + D_m?
2016-10-17 13:33:23	<--	Dohplay (~Dohplay@2601:246:4400:f10c:550f:a67d:eb8a:9ebc) has quit (Ping timeout: 245 seconds)
2016-10-17 13:33:30	<--	iceiceice (~chris@nat-tvwna-outside-visitornet2-a-184.princeton.org) has quit (Read error: Connection reset by peer)
2016-10-17 13:33:39	<--	f3r70rr35f (~fernando@200-112-118-3.baf.movistar.cl) has quit (Ping timeout: 252 seconds)
2016-10-17 13:33:44	-->	iceiceice (~chris@nat-tvwna-outside-visitornet2-a-184.princeton.org) has joined ##c++
2016-10-17 13:34:29	-->	ReverseBlade (~user@213.74.212.180) has joined ##c++
2016-10-17 13:34:30	-->	rorro (~rorro@155.4.14.18) has joined ##c++
2016-10-17 13:35:28	<--	serycjon (~jonas@20.53.broadband14.iol.cz) has quit (Ping timeout: 260 seconds)
2016-10-17 13:35:29	<--	tc2keats (~tc2keats@gateway/tor-sasl/tc2keats) has quit (Remote host closed the connection)
2016-10-17 13:35:56	<--	JoshS (~jshjsh@m9d0536d0.tmodns.net) has quit (Ping timeout: 260 seconds)
2016-10-17 13:36:33	-->	JoshS (~jshjsh@172.56.38.151) has joined ##c++
2016-10-17 13:37:19	-->	f3r70rr35f (~fernando@200-112-118-3.baf.movistar.cl) has joined ##c++
2016-10-17 13:37:42	w3z	heh, thats pretty obscure and mangled by the translation to simple text, D_t is the user provided duration to the wait for type library functions,  D_i is apparently the quality of impl delay,D_m is the quality of management delay (theyre D subscript)
2016-10-17 13:38:23	-->	davidstone (~davidston@184-96-182-164.hlrn.qwest.net) has joined ##c++
2016-10-17 13:38:33	<--	phinxy (~tehhhd@unaffiliated/phinxy) has quit (Read error: Connection reset by peer)
2016-10-17 13:38:33		[13:38]
2016-10-17 13:38:39	<--	iceiceice (~chris@nat-tvwna-outside-visitornet2-a-184.princeton.org) has quit (Ping timeout: 265 seconds)
2016-10-17 13:39:54	-->	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has joined ##c++
2016-10-17 13:40:25	<--	SwiftMatt (~Objective@162.242.94.93) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-10-17 13:41:09	-->	karakedi (~eAC53C340@unaffiliated/orphan) has joined ##c++
2016-10-17 13:43:05	<--	JoshS (~jshjsh@172.56.38.151) has quit (Ping timeout: 244 seconds)
2016-10-17 13:43:45	-->	SwiftMatt (~Objective@162.242.94.93) has joined ##c++
2016-10-17 13:43:56	--	Khaotic_ is now known as Khaotic
2016-10-17 13:44:12	<--	SwiftMatt (~Objective@162.242.94.93) has quit (Client Quit)
2016-10-17 13:44:28	-->	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has joined ##c++
2016-10-17 13:44:39	<--	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has quit (Ping timeout: 252 seconds)
2016-10-17 13:44:41	<--	TomyLobo (~TomyLobo@2a02:8109:87c0:20c:551f:9795:fd96:b7d8) has quit (Ping timeout: 260 seconds)
2016-10-17 13:45:59	<--	EvilPenguin (~EvilPengu@bur-inet-pa-3.disney.com) has quit (Read error: Connection reset by peer)
2016-10-17 13:46:19	<--	Lowl3v3l (~Lowl3v3l@dslb-088-075-000-014.088.075.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2016-10-17 13:46:52	<--	Karyon (~yaaic@unaffiliated/karyon) has quit (Remote host closed the connection)
2016-10-17 13:47:03	-->	EvilPenguin (~EvilPengu@bur-inet-pa-3.disney.com) has joined ##c++
2016-10-17 13:47:44	-->	hualet (~hualet@113.57.50.233) has joined ##c++
2016-10-17 13:47:55	w3z	!interview
2016-10-17 13:47:56	nolyc	How do you make sense of the fact that a ( token that follows noexcept is part of the noexcept-specification and does not commence an initializer?
2016-10-17 13:48:03	ville	wish we could query to quality of the provided clocks
2016-10-17 13:48:33	doppel	i don't.  i haven't really studied the noexcept specification.
2016-10-17 13:48:43	doppel	i guess that means i don't get the job :-(
2016-10-17 13:49:02	ville	just because someone chose that the time_point is nanoseconds doesn't mean anything really in terms of accuracy, precission or resolution
2016-10-17 13:49:04	doppel	at least it hasn't asked me where i see myself in 5 years.
2016-10-17 13:49:47	-->	JoshS (~jshjsh@172.56.38.151) has joined ##c++
2016-10-17 13:50:42	doppel	"i see myself living in my parents' house, applying for whatever jobs i can find, and welfare."
2016-10-17 13:50:48	 *	doppel kicks the interviewer
2016-10-17 13:50:51	ville	of course all the implementations would just return some random values for those, which would have nothing to do with the actual clock
2016-10-17 13:51:23	davidstone	is_ieee
2016-10-17 13:51:28	<--	Tobbi (~Tobbi@supertux/tobbi) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-10-17 13:52:01	davidstone	Or sorry, is_iec559
2016-10-17 13:52:15	w3z	its not as if the interfaces were designed for hard realtime, at least theytake a duration
2016-10-17 13:52:16	<--	hualet (~hualet@113.57.50.233) has quit (Ping timeout: 260 seconds)
2016-10-17 13:52:28	Khaotic	oh common
2016-10-17 13:52:32	ville	davidstone: for me? not sure what that has to do with clocks
2016-10-17 13:52:50	davidstone	I was using it as an example of another similar interface that implementations blatantly lie about
2016-10-17 13:52:57	davidstone	It seems more like an intent than a promise
2016-10-17 13:52:57	ville	ah right
2016-10-17 13:53:31	<--	soksok_3612 (~IceChat9@197.39.229.172) has quit (Quit: When the chips are down, the buffalo is empty)
2016-10-17 13:53:46	-->	topshell (~wew@447495.s.dedikuoti.lt) has joined ##c++
2016-10-17 13:53:46		[13:53]
2016-10-17 13:55:08	Eelis	!give Eelis interview
2016-10-17 13:55:09	nolyc	Eelis: Do you often dream about the fact that an object of type cv void* shall have the same representation and alignment requirements as cv char*?
2016-10-17 13:55:33	Eelis	not often enough, i think
2016-10-17 13:55:51	w3z	void dreams are so bland
2016-10-17 13:55:53	Eelis	in fact i didn't even know this was explicit
2016-10-17 13:55:58	Moto-chan	Not really w3z!
2016-10-17 13:56:03	Moto-chan	You can interpret them to be anything!
2016-10-17 13:56:14	davidstone	Well, you can reinterpret them, anyway
2016-10-17 13:56:16	Moto-chan	But then your brain explodes because you didn't follow strict alignment requirements.
2016-10-17 13:56:45	Eelis	same representation, does that mean same size?
2016-10-17 13:56:50	Eelis	s/mean/imply/
2016-10-17 13:56:54	-->	arescorpio (~arescorpi@152.171.94.34) has joined ##c++
2016-10-17 13:57:13	<--	bayardo (~julian@181.171.10.114) has quit
2016-10-17 13:57:42	w3z	how could it not be? all T*s are converible to void* and back
2016-10-17 13:57:44	Eelis	yes, looks like it
2016-10-17 13:57:55	Moto-chan	Actually, I don't know what same representation would imply... To me, representation would be the format, so signed, unsigned, two's complement, but a representation doesn't apply to void, as it's not anything.
2016-10-17 13:58:01	<--	f3r70rr35f (~fernando@200-112-118-3.baf.movistar.cl) has quit (Quit: leaving)
2016-10-17 13:58:12	Eelis	Moto-chan: http://eel.is/c++draft/basic.types#object_representation
2016-10-17 13:58:22	-->	VlijmenFileer (~vlijmenfi@li865-150.members.linode.com) has joined ##c++
2016-10-17 13:58:25	-->	rosten (~rosten@cpe-45-48-9-161.socal.res.rr.com) has joined ##c++
2016-10-17 13:58:26	-->	f3r70rr35f (~fernando@200-112-118-3.baf.movistar.cl) has joined ##c++
2016-10-17 13:58:46	-->	hualet (~hualet@113.57.50.233) has joined ##c++
2016-10-17 13:58:56	Eelis	and it's about the representation of the pointer, not of void
2016-10-17 13:58:58	Moto-chan	I see
2016-10-17 13:59:17	<--	gegagome (~gegagome@206.83.5.2) has quit (Quit: gegagome)
2016-10-17 13:59:32	<--	Munnu (~timo@91-158-145-247.elisa-laajakaista.fi) has quit (Quit: Follow the white rabbit. Compile the desert of the real. 139.)
2016-10-17 13:59:46	<--	destiny (uid73933@gateway/web/irccloud.com/x-vciivwygxuuwoevg) has quit (Quit: Connection closed for inactivity)
2016-10-17 14:00:09	<--	Lenore (b84a0f22@gateway/web/freenode/ip.184.74.15.34) has left ##c++
2016-10-17 14:00:24	<--	roko (d193902f@gateway/web/freenode/ip.209.147.144.47) has quit (Quit: Page closed)
2016-10-17 14:00:28	Eelis	wait, i don't even understand the interview question. is it "an object of type cv void* shall have the same [[representation and alignment] requirements] as cv char*", so two kinds of requirements?
2016-10-17 14:00:49	Eelis	or is it "an object of type cv void* shall have the same [representation and [alignment requirements]] as cv char*"
2016-10-17 14:01:01	w3z	i dont know that they "have to" be the same size though, as long as void* is as wide as a T*, and only the width of T* is used in the void*s representation
2016-10-17 14:01:53	Moto-chan	<< reinterpret_cast<Eelis&>(w3z);
2016-10-17 14:01:53	geordi	error: 'Eelis' does not name a type
2016-10-17 14:01:55	-->	TheSeven (~quassel@rockbox/developer/TheSeven) has joined ##c++
2016-10-17 14:01:56	Moto-chan	:(
2016-10-17 14:02:00	Eelis	i would ask the interviewer to please specify the intended parse tree of their ambiguous statement
2016-10-17 14:02:06	Eelis	*question
2016-10-17 14:02:08	-->	SunnyD (~SunnyD@cpe-72-178-78-211.hot.res.rr.com) has joined ##c++
2016-10-17 14:02:16	doppel	!interview
2016-10-17 14:02:17	nolyc	Did you know that a text line shall not begin with a # preprocessing token?
2016-10-17 14:02:28	Eelis	hmmm
2016-10-17 14:02:33	-->	iterati (~vangelis@46.12.185.49.dsl.dyn.forthnet.gr) has joined ##c++
2016-10-17 14:02:43	<--	ReverseBlade (~user@213.74.212.180) has quit (Ping timeout: 244 seconds)
2016-10-17 14:02:47	Eelis	"text line" is kinda vague, nolyc
2016-10-17 14:03:02	ubsan	what does that actually mean?
2016-10-17 14:03:16	doppel	perhaps it means "after preprocessing"
2016-10-17 14:03:28	<--	hualet (~hualet@113.57.50.233) has quit (Ping timeout: 260 seconds)
2016-10-17 14:04:16	<--	zero_byte (~zer0@gw2.globalcom.cz) has quit (Ping timeout: 265 seconds)
2016-10-17 14:04:19	Eelis	geordi: #
2016-10-17 14:04:20	geordi	Success
2016-10-17 14:04:22	Eelis	geordi: #define X(x) x \ X(#)
2016-10-17 14:04:22	geordi	error: stray '#' in program
2016-10-17 14:04:27	doppel	or a line that is not preprocessed
2016-10-17 14:04:33	-->	Akahige (~Rob@unaffiliated/moto-chan) has joined ##c++
2016-10-17 14:04:37	Eelis	http://eel.is/c++draft/cpp#nt:text-line
2016-10-17 14:04:48	w3z	it obviously doesnt mean any text because quoted text can have a # in a new line
2016-10-17 14:05:08	Eelis	ah, preprocessor lines are called "control lines"
2016-10-17 14:05:14	Eelis	i did /not/ know that!
2016-10-17 14:05:21	Oxyd	It says “# preprocessing token”, not a “# character”.
2016-10-17 14:06:38	Eelis	would be neater if the interview was stated like "what are the four kinds of lines in C++?"
2016-10-17 14:07:04	Eelis	oh no, it doesn't work like that. the productions for preprocessor conditional stuff are multi-line
2016-10-17 14:07:05	-->	roko (d193902f@gateway/web/freenode/ip.209.147.144.47) has joined ##c++
2016-10-17 14:07:33	<--	Moto-chan (~Rob@unaffiliated/moto-chan) has quit (Ping timeout: 248 seconds)
2016-10-17 14:07:36	Eelis	it could ask "what are the four kinds of group-part?" though
2016-10-17 14:07:41	-->	moffz0r (~moffz0r@14-201-5-120.static.tpgi.com.au) has joined ##c++
2016-10-17 14:07:47	Eelis	hmm, could have that for all the grammar productions
2016-10-17 14:07:48	ubsan	that would be a terrible interview question
2016-10-17 14:08:08	Eelis	that's why !interview is so much fun
2016-10-17 14:08:26	Eelis	it's like being interviewed by a psychopath
2016-10-17 14:08:28	roko	while debugging with gdb in a try catch block, on hitting next the control does not stop in the catch block and the execution resumes till the end. What could be an issue
2016-10-17 14:08:51	-->	YungRaj (~YungRaj@nat-165-91-13-126.tamulink.tamu.edu) has joined ##c++
2016-10-17 14:08:51		[14:08]
2016-10-17 14:08:58	w3z	what does #line do ...
2016-10-17 14:09:28	Eelis	{ \ #line 333 \ cout << __LINE__; }
2016-10-17 14:09:29	geordi	333
2016-10-17 14:10:29	Eelis	{ \ #line 3333333333 \ cout << __LINE__; }
2016-10-17 14:10:33	geordi	error: line number out of range
2016-10-17 14:11:01	w3z	{#line silly \ cout<< __LINE__;}
2016-10-17 14:11:01	geordi	error: stray '#' in program
2016-10-17 14:11:02	Eelis	pff doesn't even support a couple billion lines of code per file
2016-10-17 14:11:09	davidstone	I wonder what the most complicated strictly standard compliant program is (if anything?)
2016-10-17 14:11:13	w3z	{\#line silly \ cout<< __LINE__;}
2016-10-17 14:11:13	geordi	error: "silly" after #line is not a positive integer
2016-10-17 14:11:19	davidstone	As in not exceeding any minimum required implementation limits
2016-10-17 14:11:52	davidstone	All side-effects and return values from main are implementation defined, though
2016-10-17 14:12:03	<--	Betal (~Betal@unaffiliated/betal) has quit (Ping timeout: 256 seconds)
2016-10-17 14:12:16	-->	television (~alex@unaffiliated/arexr) has joined ##c++
2016-10-17 14:13:12	w3z	not sure your question is meaningful, whats "most complicated" and what if i add a line to it
2016-10-17 14:13:20	<--	Skruff (Elite15320@gateway/shell/elitebnc/x-qzwuxmoqzvjurfnv) has quit (Ping timeout: 258 seconds)
2016-10-17 14:13:21	davidstone	Well, can you add a line to it?
2016-10-17 14:13:28	davidstone	Or would that then exceed the implementation limit
2016-10-17 14:13:34	baudejogos	o_O
2016-10-17 14:13:35	davidstone	It's intended as a subjective question
2016-10-17 14:13:46	baudejogos	so useful
2016-10-17 14:14:05	Oxyd	I suppose the empty file is the most complicated, then. Since an implementation may place a limit of 0 bytes on any program.
2016-10-17 14:14:15	davidstone	Like, is it actually possible to write, say, Tetris without exceeding implementation limits?
2016-10-17 14:14:21	baudejogos	yes
2016-10-17 14:14:23	baudejogos	!next
2016-10-17 14:14:25	nolyc	Another satisfied customer, next!
2016-10-17 14:14:34	Oxyd	Depends on the implementation limits.
2016-10-17 14:15:06	<--	Markow (~Markow@176.122.215.103) has quit (Remote host closed the connection)
2016-10-17 14:15:20	<--	SecondForm_Glenn (~Thunderbi@108.189.70.212) has quit (Ping timeout: 250 seconds)
2016-10-17 14:16:25	-->	iceiceice (~chris@nat-tvwna-outside-visitornet2-a-184.princeton.org) has joined ##c++
2016-10-17 14:17:54	-->	TikityTik (~TikityTik@162.223.44.49) has joined ##c++
2016-10-17 14:19:05	-->	freddyG (~freddy57@unaffiliated/freddy57) has joined ##c++
2016-10-17 14:19:53	<--	Gustavo6046 (~Gustavo60@unaffiliated/gustavo6046) has quit (Quit: *rooonc* *yawn* *accidentally dropping a spore* *rooonc* zZzZzZ)
2016-10-17 14:19:57	-->	zero_byte (~zer0@ip-89-103-110-138.net.upcbroadband.cz) has joined ##c++
2016-10-17 14:20:10	<--	juliy (~juliy@cable-89-16-155-206.cust.telecolumbus.net) has quit (Quit: Leaving)
2016-10-17 14:20:11	<--	ERROH (mama@unaffiliated/almathea) has quit (Ping timeout: 268 seconds)
2016-10-17 14:22:06	-->	Cohedrin_ (~textual@c-73-170-239-253.hsd1.ca.comcast.net) has joined ##c++
2016-10-17 14:22:16	<--	shaggycat (~quassel@95-37-215-204.dynamic.mts-nn.ru) has quit (Ping timeout: 250 seconds)
2016-10-17 14:24:36	<--	Cohedrin (~textual@73.93.140.146) has quit (Ping timeout: 250 seconds)
2016-10-17 14:24:36		[14:24]
2016-10-17 14:26:08	-->	SwiftMatt (~Objective@130.253.27.153) has joined ##c++
2016-10-17 14:26:31	-->	felixi (~mikko@a88-115-27-145.elisa-laajakaista.fi) has joined ##c++
2016-10-17 14:27:09	-->	chris_ (~chris@nat-tvwna-outside-visitornet2-a-184.princeton.org) has joined ##c++
2016-10-17 14:27:16	-->	f00mado_ (~Thunderbi@ip72-221-100-23.ri.ri.cox.net) has joined ##c++
2016-10-17 14:27:55	-->	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has joined ##c++
2016-10-17 14:28:57	-->	Karyon (~yaaic@unaffiliated/karyon) has joined ##c++
2016-10-17 14:29:21	--	Karyon is now known as Guest70252
2016-10-17 14:29:53	<--	iceiceice (~chris@nat-tvwna-outside-visitornet2-a-184.princeton.org) has quit (Ping timeout: 265 seconds)
2016-10-17 14:30:27	-->	Crazylemon64 (~Crazylemo@207.62.170.215) has joined ##c++
2016-10-17 14:32:33	<--	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has quit (Ping timeout: 245 seconds)
2016-10-17 14:34:04	-->	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has joined ##c++
2016-10-17 14:35:05	-->	ReverseBlade (~user@213.74.212.180) has joined ##c++
2016-10-17 14:35:26	-->	sssilver (~sssilver@2605:6000:ee54:b500:81c3:a3a5:c04c:2db1) has joined ##c++
2016-10-17 14:36:46	<--	Guest70252 (~yaaic@unaffiliated/karyon) has quit (Quit: sayonara)
2016-10-17 14:36:52	-->	andyhuzhill (~Thunderbi@14.23.45.178) has joined ##c++
2016-10-17 14:36:57	-->	hualet (~hualet@118.184.15.164) has joined ##c++
2016-10-17 14:37:26	-->	Skruff (Elite15320@gateway/shell/elitebnc/x-bouhcpdnkbjmfcdu) has joined ##c++
2016-10-17 14:38:37	<--	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has quit (Ping timeout: 240 seconds)
2016-10-17 14:40:13	-->	pmercado (~pmercado@186-104-245-4.baf.movistar.cl) has joined ##c++
2016-10-17 14:40:13		[14:40]
2016-10-17 14:40:16	<--	heiner (~heiner@dslb-178-005-130-105.178.005.pools.vodafone-ip.de) has quit (Disconnected by services)
2016-10-17 14:40:26	-->	heiner (~heiner@dslc-082-082-226-040.pools.arcor-ip.net) has joined ##c++
2016-10-17 14:41:32	-->	Dohplay (~Dohplay@2601:246:4400:f10c:64b3:e224:8352:31b9) has joined ##c++
2016-10-17 14:43:02	-->	GinoMan (~GinoMan@2601:41:c101:487a:61f1:405b:8bf5:e3d5) has joined ##c++
2016-10-17 14:44:39	w3z	!interview
2016-10-17 14:44:40	<--	doppel (~chatzilla@ip70-189-197-158.lv.lv.cox.net) has quit (Quit: ChatZilla 0.9.92 [Firefox 49.0.1/20160922113459])
2016-10-17 14:44:41	nolyc	Why is it so important that a value of type std::nullptr_t is a null pointer constant?
2016-10-17 14:45:56	<--	kimundi (~Kimundi@p57BC70F0.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2016-10-17 14:47:34	<--	Skruff (Elite15320@gateway/shell/elitebnc/x-bouhcpdnkbjmfcdu) has quit (Ping timeout: 250 seconds)
2016-10-17 14:47:47	Eelis	hmm that's kind of weird, i genuinely wonder why that is
2016-10-17 14:47:56	Eelis	{ void * x{}; constexpr void * p = x; }
2016-10-17 14:47:56	geordi	error: the value of 'x' is not usable in a constant expression
2016-10-17 14:47:58	Eelis	{ nullptr_t x{}; constexpr void * p = x; }
2016-10-17 14:47:59	geordi	<no output>
2016-10-17 14:48:36	Eelis	nullptr_t is a weird special case here. wonder what reasonable code would ever depend on this
2016-10-17 14:48:52	davidstone	It's not really a special case
2016-10-17 14:49:02	-->	zap0 (~moofy@14-201-222-143.tpgi.com.au) has joined ##c++
2016-10-17 14:49:05	davidstone	Well, it's a special case of a broader concept: the singleton type
2016-10-17 14:49:10	davidstone	A type that can only contain one value
2016-10-17 14:49:16	davidstone	Like std::true_type and std::false_type
2016-10-17 14:49:18	-->	KaiserAres (~KaiserAre@unaffiliated/kaiserares) has joined ##c++
2016-10-17 14:49:27	Oxyd	Perhaps it's to allow code like nullptr_t hugarian_notation_prefix_null = nullptr;, for those who really don't like the name nullptr.
2016-10-17 14:49:42	w3z	{using T=int*; T x{}; constexpr int* p=x;}
2016-10-17 14:49:42	geordi	error: the value of 'x' is not usable in a constant expression
2016-10-17 14:49:50	Eelis	{ std::false_type x{}; constexpr void * p = x; }
2016-10-17 14:49:50	geordi	error: cannot convert 'false_type {aka integral_constant<bool, false>}' to 'void* const' in initialization
2016-10-17 14:49:55	-->	nine_milli (~nine_mill@32.211.52.104) has joined ##c++
2016-10-17 14:50:00	-->	AndChat335225 (~AndChat33@2600:8807:c145:3c00:1088:b2ca:e0ff:d685) has joined ##c++
2016-10-17 14:50:13	<--	nine_milli (~nine_mill@32.211.52.104) has left ##c++
2016-10-17 14:50:29	davidstone	That's good
2016-10-17 14:50:33	w3z	{using T=int*; constexpr T x{}; constexpr int* p=x;}
2016-10-17 14:50:34	geordi	<no output>
2016-10-17 14:50:41	-->	Skruff (Elite15320@gateway/shell/elitebnc/x-wfumwrskpauapwek) has joined ##c++
2016-10-17 14:51:02	Eelis	davidstone: so can you name another type that behaves like this?
2016-10-17 14:51:04	davidstone	{ std::false_type x{}; constexpr bool b = x; }
2016-10-17 14:51:04	geordi	<no output>
2016-10-17 14:51:35	Eelis	ok that's better
2016-10-17 14:51:35	<--	iterati (~vangelis@46.12.185.49.dsl.dyn.forthnet.gr) has quit (Remote host closed the connection)
2016-10-17 14:51:57	Eelis	but that still doesn't explain why it's necessary at all
2016-10-17 14:52:04	Eelis	only that it's also something you can do with a stdlib component
2016-10-17 14:52:51	-->	Vinnie_win_u (~TheVinn@pdpc/supporter/gold/thevinn) has joined ##c++
2016-10-17 14:53:06	davidstone	It gets you constexpr-guaranteed function arguments
2016-10-17 14:53:16	w3z	well its something you can do with any compile time constant but yeah, it doesnt seem essential
2016-10-17 14:53:29	w3z	(for ullptr_t)
2016-10-17 14:53:32	-->	mandeep (~mandeep@108.61.226.28) has joined ##c++
2016-10-17 14:53:48	-->	iterati (~vangelis@46.12.185.49.dsl.dyn.forthnet.gr) has joined ##c++
2016-10-17 14:53:50	Eelis	davidstone: you mean for functions that have a nullptr_t parameter? why would they even name the parameter?
2016-10-17 14:53:58	<--	Vinnie_win (vinnie.fal@pdpc/supporter/gold/thevinn) has quit (Ping timeout: 258 seconds)
2016-10-17 14:54:20	davidstone	Yeah, typically you just see people doing something like void f(std::nullptr_t) { g(nullptr); }
2016-10-17 14:54:26	davidstone	When it's spelled out like that
2016-10-17 14:54:53	w3z	"typically", i dont think ive ever seen that :)
2016-10-17 14:54:58	-->	shaggycat (~quassel@95-37-215-204.dynamic.mts-nn.ru) has joined ##c++
2016-10-17 14:55:39	davidstone	But maybe there was code like this first: template<typename T> void wrapper(T pointer) { f(pointer); }
2016-10-17 14:55:39		[14:55]
2016-10-17 14:55:39	-->	rockstar_ (~rockstar@cpe-72-224-119-105.nycap.res.rr.com) has joined ##c++
2016-10-17 14:55:42	w3z	im trying to think of a use in tmp that could justify it
2016-10-17 14:55:53	davidstone	And `f` has an overload that is specialized on nullptr to be deleted
2016-10-17 14:55:58	davidstone	Or provide some other sort of error mechanism
2016-10-17 14:56:21	davidstone	For instance, my string class should be constructible with char const *, but not nullptr
2016-10-17 14:56:42	davidstone	Making a special type means that if the user passes a literal nullptr, I keep some of those checks
2016-10-17 14:56:46	davidstone	Can't catch everything
2016-10-17 14:57:00	davidstone	I guess that's actually a slightly separate issue
2016-10-17 14:57:36	w3z	: {string S{nullptr};}
2016-10-17 14:57:47	w3z	{string S{nullptr};}
2016-10-17 14:57:48	geordi	terminated by logic_error: basic_string::_M_construct null not valid
2016-10-17 14:57:52	davidstone	All standard libraries currently allow that at compile-time
2016-10-17 14:57:55	Eelis	if you have a function that takes T* and can't handle null pointers, then trying to remedy that situation with overloads seems exceedingly stupid to me
2016-10-17 14:58:14	davidstone	Well, consider std::string
2016-10-17 14:58:29	davidstone	If you overloaded its constructor to static_assert or be deleted for nullptr_t, that catches some bugs
2016-10-17 14:58:31	<--	k_sze[work] (~Kira@unaffiliated/kira) has quit (Read error: Connection reset by peer)
2016-10-17 14:58:31	davidstone	Not sure how many, but some
2016-10-17 14:58:48	Eelis	by that logic, we should do that for all functions that take T* and can't handle null pointers, as i just said
2016-10-17 14:58:59	Eelis	so that logic leads to atrocities
2016-10-17 14:59:16	davidstone	The 'real' solution is to use a better type for string literals
2016-10-17 14:59:22	-->	k_sze[work] (~Kira@unaffiliated/kira) has joined ##c++
2016-10-17 15:00:12	davidstone	If it weren't for all of the string literals and C-strings floating around, I'd agree that reference parameters are the real solution
2016-10-17 15:00:37	w3z	anyway, that wouldnt catch anything but the silliest mistakes
2016-10-17 15:00:38	davidstone	Unless you have a better wya?
2016-10-17 15:01:09	Oxyd	A string literal will never be a null pointer literal.
2016-10-17 15:02:28	-->	fstd_ (~fstd@unaffiliated/fisted) has joined ##c++
2016-10-17 15:02:39	<--	ReverseBlade (~user@213.74.212.180) has quit (Ping timeout: 244 seconds)
2016-10-17 15:03:06	<--	YungRaj (~YungRaj@nat-165-91-13-126.tamulink.tamu.edu) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-10-17 15:03:15	Eelis	a far better way already would be for the compiler to realize when it sees a function starting with assert(p); on a pointer parameter p, it can warn on calls to that function for which its analyses suggest it will be called with a null pointer
2016-10-17 15:03:42	Eelis	and those analyses can be all the wonderful flow analysis stuff and whatnot, and actually catch some meaningful cases
2016-10-17 15:04:39	-->	voidah (~voidah@unaffiliated/voider) has joined ##c++
2016-10-17 15:04:44	<--	m_ben (~m_ben@unaffiliated/m-ben/x-5917362) has quit (Ping timeout: 250 seconds)
2016-10-17 15:06:35	Eelis	{ f(nullptr); } void f(int*p){assert(p);} // i mean, there's really no good reason why we can't have a compile-time warning for this
2016-10-17 15:06:36	geordi	Assertion `p' fails.
2016-10-17 15:06:38	<--	fstd (~fstd@unaffiliated/fisted) has quit (Ping timeout: 250 seconds)
2016-10-17 15:06:38	--	fstd_ is now known as fstd
2016-10-17 15:06:59	Eelis	it ain't the 70s no more
2016-10-17 15:07:12	Oxyd	You just need to convince your loliboy V-ille to go implement it.
2016-10-17 15:07:30	Eelis	i think the clang folks might be more eager
2016-10-17 15:07:40	Eelis	they love analysis tricks
2016-10-17 15:07:49	Eelis	and great diagnostics
2016-10-17 15:08:37	-->	ERROH (mama@unaffiliated/almathea) has joined ##c++
2016-10-17 15:08:58	<--	roko (d193902f@gateway/web/freenode/ip.209.147.144.47) has quit (Quit: Page closed)
2016-10-17 15:09:02	-->	ekinmur (~ekinmur@unaffiliated/ekinmur) has joined ##c++
2016-10-17 15:09:38	<--	swatti (~memory@194.88.49.178) has quit (Ping timeout: 245 seconds)
2016-10-17 15:10:19	<--	chris_ (~chris@nat-tvwna-outside-visitornet2-a-184.princeton.org) has quit (Quit: Ex-Chat)
2016-10-17 15:10:28	-->	chris_ (~chris@nat-tvwna-outside-visitornet2-a-184.princeton.org) has joined ##c++
2016-10-17 15:11:08	<--	hualet (~hualet@118.184.15.164) has quit (Remote host closed the connection)
2016-10-17 15:11:08		[15:11]
2016-10-17 15:11:36	-->	hualet (~hualet@118.184.15.164) has joined ##c++
2016-10-17 15:13:13	-->	chris__ (~chris@nat-tvwna-outside-visitornet2-a-184.princeton.org) has joined ##c++
2016-10-17 15:13:34	<--	chris_ (~chris@nat-tvwna-outside-visitornet2-a-184.princeton.org) has quit (Read error: Connection reset by peer)
2016-10-17 15:14:11	-->	SecondForm_Glenn (~Thunderbi@97-102-42-24.res.bhn.net) has joined ##c++
2016-10-17 15:14:25	-->	rockstar___ (~rockstar@cpe-72-224-119-105.nycap.res.rr.com) has joined ##c++
2016-10-17 15:14:55	-->	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2016-10-17 15:16:09	<--	hualet (~hualet@118.184.15.164) has quit (Ping timeout: 260 seconds)
2016-10-17 15:16:10	-->	Carbonflux (~Bob@75-172-112-206.tukw.qwest.net) has joined ##c++
2016-10-17 15:16:22	-->	swatti (~memory@194.88.49.178) has joined ##c++
2016-10-17 15:16:51	<--	moffz0r (~moffz0r@14-201-5-120.static.tpgi.com.au) has quit (Quit: Leaving)
2016-10-17 15:18:28	-->	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has joined ##c++
2016-10-17 15:19:24	<--	TikityTik (~TikityTik@162.223.44.49) has quit (Read error: Connection reset by peer)
2016-10-17 15:21:46	<--	mackal (~mike@pool-96-237-144-12.bstnma.fios.verizon.net) has quit (Quit: BE VIGILANT.)
2016-10-17 15:22:02	-->	alienbot (~quassel@116.6.99.222) has joined ##c++
2016-10-17 15:22:37	-->	re1 (~reiser@178.220.1.2) has joined ##c++
2016-10-17 15:22:41	<--	re1 (~reiser@178.220.1.2) has quit (Client Quit)
2016-10-17 15:22:58	<--	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has quit (Ping timeout: 245 seconds)
2016-10-17 15:23:02	-->	re1 (~reiser@178.220.1.2) has joined ##c++
2016-10-17 15:23:09	<--	vitimiti (~vitimiti@unaffiliated/vitimiti) has quit (Ping timeout: 252 seconds)
2016-10-17 15:23:10	<--	alienbot (~quassel@116.6.99.222) has quit (Remote host closed the connection)
2016-10-17 15:23:31	-->	alienbot (~quassel@116.6.99.222) has joined ##c++
2016-10-17 15:23:48	<--	ipronin (~ipronin@8.25.197.27) has quit (Ping timeout: 245 seconds)
2016-10-17 15:23:55	-->	postsneakernet (~postsneak@c-76-111-222-223.hsd1.fl.comcast.net) has joined ##c++
2016-10-17 15:24:33	<--	rorro (~rorro@155.4.14.18) has quit (Ping timeout: 260 seconds)
2016-10-17 15:24:56	-->	ReverseBlade (~user@213.74.212.180) has joined ##c++
2016-10-17 15:25:06	<--	topshell (~wew@447495.s.dedikuoti.lt) has quit (Remote host closed the connection)
2016-10-17 15:25:28	-->	jsgrant (~jsgrant@71-11-142-172.dhcp.stls.mo.charter.com) has joined ##c++
2016-10-17 15:28:12	-->	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has joined ##c++
2016-10-17 15:28:12		[15:28]
2016-10-17 15:28:23	<--	illerucis (~illerucis@2620:10d:c091:180::22c1) has quit (Ping timeout: 245 seconds)
2016-10-17 15:28:51	<--	chris__ (~chris@nat-tvwna-outside-visitornet2-a-184.princeton.org) has quit (Ping timeout: 265 seconds)
2016-10-17 15:30:28	<--	KaiserAres (~KaiserAre@unaffiliated/kaiserares) has quit (Ping timeout: 250 seconds)
2016-10-17 15:32:28	w3z	theres all kinds of clang toold i wasnt aware of, ericwf directed me at http://clang.llvm.org/docs/ThreadSafetyAnalysis.html last night
2016-10-17 15:32:33	<--	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has quit (Ping timeout: 245 seconds)
2016-10-17 15:32:34	w3z	tools
2016-10-17 15:36:20	<--	Henke37 (~Henrik@81-227-16-59-no133.bredband.skanova.com) has quit (Quit: ERR_SHUTDOWN)
2016-10-17 15:36:45	<--	ReverseBlade (~user@213.74.212.180) has quit (Ping timeout: 244 seconds)
2016-10-17 15:36:47	-->	topshell (~wew@447495.s.dedikuoti.lt) has joined ##c++
2016-10-17 15:37:38	<--	logan_e__ (uid164592@gateway/web/irccloud.com/x-tjhtdgzdkyitirti) has quit (Quit: Connection closed for inactivity)
2016-10-17 15:38:32	-->	hualet (~hualet@118.184.15.164) has joined ##c++
2016-10-17 15:39:06	-->	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has joined ##c++
2016-10-17 15:39:17	-->	illerucis (~illerucis@ool-18bef55c.dyn.optonline.net) has joined ##c++
2016-10-17 15:40:29	<--	alienbot (~quassel@116.6.99.222) has quit (Remote host closed the connection)
2016-10-17 15:40:55	-->	alienbot (~quassel@116.6.99.222) has joined ##c++
2016-10-17 15:40:56	klys	:)  it's bigger and squeakier than ever
2016-10-17 15:41:02	<--	illerucis (~illerucis@ool-18bef55c.dyn.optonline.net) has quit (Remote host closed the connection)
2016-10-17 15:41:57	<--	Awesomecase (sid56584@gateway/web/irccloud.com/x-iagzjqgxgtyrlgbu) has quit (Ping timeout: 248 seconds)
2016-10-17 15:42:08	<--	AndChat335225 (~AndChat33@2600:8807:c145:3c00:1088:b2ca:e0ff:d685) has quit (Ping timeout: 245 seconds)
2016-10-17 15:42:36	<--	mehdi___ (sid15567@gateway/web/irccloud.com/x-hakheuapeqpnulri) has quit (Read error: Connection reset by peer)
2016-10-17 15:43:23	<--	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has quit (Ping timeout: 245 seconds)
2016-10-17 15:43:23		[15:43]
2016-10-17 15:43:28	-->	mehdi___ (sid15567@gateway/web/irccloud.com/x-ngrrwbvthymqjdci) has joined ##c++
2016-10-17 15:44:03	<--	voldyman (uid11639@gateway/web/irccloud.com/x-ahftvtegjvuhtege) has quit (Ping timeout: 252 seconds)
2016-10-17 15:44:44	-->	Awesomecase (sid56584@gateway/web/irccloud.com/x-icstwfkqfrnnmdqt) has joined ##c++
2016-10-17 15:44:58	-->	voldyman (uid11639@gateway/web/irccloud.com/x-rwhjlpjtmypmdfuw) has joined ##c++
2016-10-17 15:46:23	-->	JazzBot (6217d1d8@gateway/web/freenode/ip.98.23.209.216) has joined ##c++
2016-10-17 15:46:29	<--	blackbird1 (~blackbird@197.3.200.195) has quit (Quit: Leaving)
2016-10-17 15:46:30	<--	Green (uid722@gateway/web/irccloud.com/x-gaoiuiutjsmkiamu) has quit (Read error: Network is unreachable)
2016-10-17 15:46:40	<--	barq (sid103986@gateway/web/irccloud.com/x-chqttkvpdnvmkxec) has quit (Ping timeout: 260 seconds)
2016-10-17 15:46:53	<--	Kamuela (sid111576@gateway/web/irccloud.com/x-alooxhleqxrypgzu) has quit (Ping timeout: 258 seconds)
2016-10-17 15:47:04	-->	Green (uid722@gateway/web/irccloud.com/x-qspanqwxyadedffo) has joined ##c++
2016-10-17 15:48:27	<--	SunnyD (~SunnyD@cpe-72-178-78-211.hot.res.rr.com) has quit (Quit: ChatZilla 0.9.90.1 [Firefox 30.0/20140605174243])
2016-10-17 15:49:09	<--	a000a (~plusone@176.24.26.166) has quit (Ping timeout: 265 seconds)
2016-10-17 15:49:12	-->	barq (sid103986@gateway/web/irccloud.com/x-wpbbmcfxrdakaobb) has joined ##c++
2016-10-17 15:49:45	<--	andyhuzhill (~Thunderbi@14.23.45.178) has quit (Ping timeout: 260 seconds)
2016-10-17 15:50:24	-->	ReverseBlade (~user@213.74.212.180) has joined ##c++
2016-10-17 15:51:33	-->	Nilesh_ (uid116340@gateway/web/irccloud.com/x-jgwpuaemkcdciozj) has joined ##c++
2016-10-17 15:51:40	JazzBot	Hey everyone, my professor tasked us to find the maximum spanning tree from a matrix. I think I got it figured out but failing to compile the code. I'm trying to pass in a vector of a class by reference to moddify. What I have fails to compile on line 39 because "use '&' to create a pointer to member. I'm not sure what I'm doing wrong. http://pastebin.com/bjEa1CsQ
2016-10-17 15:52:13	-->	threebar (~threebar@unaffiliated/notten) has joined ##c++
2016-10-17 15:52:32	<--	JoshS (~jshjsh@172.56.38.151) has quit (Ping timeout: 265 seconds)
2016-10-17 15:53:00	-->	Immune_ (~Immune@47.145.46.247) has joined ##c++
2016-10-17 15:54:17	-->	Alucards (~Thunderbi@eduD113.kent.ac.uk) has joined ##c++
2016-10-17 15:54:35	JazzBot	Sorry the caller is on line 52
2016-10-17 15:54:47	chaiomanot	JazzBot, "begin" is a method, not a member
2016-10-17 15:55:04	<--	Immune (~Immune@47.145.46.247) has quit (Ping timeout: 245 seconds)
2016-10-17 15:55:04	<--	swatti (~memory@194.88.49.178) has quit (Ping timeout: 256 seconds)
2016-10-17 15:55:07	-->	mindandsky (~mindandsk@2601:283:8000:4250:d957:66a1:9e8f:78f8) has joined ##c++
2016-10-17 15:55:09	chaiomanot	edgeList.begin is missing parens
2016-10-17 15:55:24	<--	Aquazi (~Aquazi@host65-199-dynamic.32-79-r.retail.telecomitalia.it) has quit (Quit: Leaving)
2016-10-17 15:55:35	-->	uuplusu (~uuplusu@218.108.29.107) has joined ##c++
2016-10-17 15:55:50	chaiomanot	also you're using bitwise ors where you mean to use logical
2016-10-17 15:56:01	JazzBot	yep that was it and forgot to return my sorted list on the caller method
2016-10-17 15:56:04	JazzBot	on which line?
2016-10-17 15:56:17	chaiomanot	66
2016-10-17 15:56:19	chaiomanot	maybe others
2016-10-17 15:56:34	JazzBot	Lol thanks for catching that
2016-10-17 15:56:43	JazzBot	probably would of given me a headache
2016-10-17 15:56:43	-->	Arlen0 (~Arlen0@38-103-219-200.alamobb.net) has joined ##c++
2016-10-17 15:57:03	-->	ferdna (~ferdna@cpe-69-23-141-130.elp.res.rr.com) has joined ##c++
2016-10-17 15:57:09	<--	hualet (~hualet@118.184.15.164) has quit (Remote host closed the connection)
2016-10-17 15:57:25	chaiomanot	turn up your warnings
2016-10-17 15:57:30	chaiomanot	the compiler should catch that
2016-10-17 15:57:31	<--	Arlen0 (~Arlen0@38-103-219-200.alamobb.net) has quit (Client Quit)
2016-10-17 15:57:39	-->	hualet (~hualet@118.184.15.164) has joined ##c++
2016-10-17 15:57:48	<--	nikki93 (~nikki93@2601:645:8104:cb10:c077:3177:d295:d3d1) has quit (Remote host closed the connection)
2016-10-17 15:57:50	-->	callousf1 (~thraxxus@2602:302:d1fb:3360:c0d4:f2ed:597:1d65) has joined ##c++
2016-10-17 15:57:52	zap0	!wall
2016-10-17 15:58:02	<--	Green (uid722@gateway/web/irccloud.com/x-qspanqwxyadedffo) has quit (Ping timeout: 250 seconds)
2016-10-17 15:58:22	JazzBot	I use c# at work where there is a clear difference between properties and methods. I keep getting burned by accidentally trying to access it like a c# property.
2016-10-17 15:58:36	<--	snover (~Adium@unaffiliated/snover) has quit (Quit: Leaving.)
2016-10-17 15:58:36		[15:58]
2016-10-17 15:58:47	JazzBot	Ok good to know, thanks chaiomanot
2016-10-17 15:59:10	chaiomanot	np
2016-10-17 15:59:13	-->	Kamuela (sid111576@gateway/web/irccloud.com/x-yhfjcssliuuawskv) has joined ##c++
2016-10-17 15:59:30	-->	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has joined ##c++
2016-10-17 15:59:37	<--	edr (~edr@pdpc/supporter/professional/edr) has quit (Quit: Leaving)
2016-10-17 16:00:51	-->	swatti (~memory@194.88.49.178) has joined ##c++
2016-10-17 16:01:03	-->	FreeBirdLjj (~freebirdl@223.65.168.113) has joined ##c++
2016-10-17 16:02:10	<--	hualet (~hualet@118.184.15.164) has quit (Ping timeout: 252 seconds)
2016-10-17 16:04:10	<--	saml_ (~saml@cpe-24-102-97-97.nyc.res.rr.com) has quit (Remote host closed the connection)
2016-10-17 16:04:14	-->	iibewegung (~iibewegun@pdpc/supporter/student/iibewegung) has joined ##c++
2016-10-17 16:04:22	-->	UnripeSuica (~UnlikeSui@115.93.122.107) has joined ##c++
2016-10-17 16:04:24	<--	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has quit (Ping timeout: 252 seconds)
2016-10-17 16:05:44	<--	FreeBirdLjj (~freebirdl@223.65.168.113) has quit (Ping timeout: 260 seconds)
2016-10-17 16:05:49	-->	mackal (~mike@pool-96-237-144-12.bstnma.fios.verizon.net) has joined ##c++
2016-10-17 16:05:50	-->	Betal (~Betal@unaffiliated/betal) has joined ##c++
2016-10-17 16:06:55	-->	Green (uid722@gateway/web/irccloud.com/x-dndmuwvejwwmjlib) has joined ##c++
2016-10-17 16:06:55	-->	a000a (~plusone@176.24.26.166) has joined ##c++
2016-10-17 16:08:32	<--	CEnnis91 (uid3543@gateway/web/irccloud.com/x-boeqyeyxzyfbavbq) has quit (Quit: Connection closed for inactivity)
2016-10-17 16:08:58	<--	iibewegung (~iibewegun@pdpc/supporter/student/iibewegung) has quit (Ping timeout: 265 seconds)
2016-10-17 16:09:52	<--	BombStrike (~BombStrik@z174090.dynamic.ppp.asahi-net.or.jp) has quit (Ping timeout: 258 seconds)
2016-10-17 16:11:00	<--	topshell (~wew@447495.s.dedikuoti.lt) has quit (Remote host closed the connection)
2016-10-17 16:11:55	<--	Alucards (~Thunderbi@eduD113.kent.ac.uk) has quit (Quit: Alucards)
2016-10-17 16:12:28	-->	iibewegung (~iibewegun@114.70.15.201) has joined ##c++
2016-10-17 16:12:28	<--	iibewegung (~iibewegun@114.70.15.201) has quit (Changing host)
2016-10-17 16:12:28	-->	iibewegung (~iibewegun@pdpc/supporter/student/iibewegung) has joined ##c++
2016-10-17 16:12:59	<--	Betal (~Betal@unaffiliated/betal) has quit (Disconnected by services)
2016-10-17 16:13:01	iibewegung	oops .. sorry I got disconnected .. did I miss anything
2016-10-17 16:13:07	-->	Betal (~Betal@unaffiliated/betal) has joined ##c++
2016-10-17 16:14:29	-->	Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2016-10-17 16:14:29		[16:14]
2016-10-17 16:15:30	<--	dave0x6d (uid190567@gateway/web/irccloud.com/x-qpixuvxcydjkrthl) has quit (Quit: Connection closed for inactivity)
2016-10-17 16:16:01	Eelis	!give iibewegung interview
2016-10-17 16:16:03	nolyc	iibewegung: Do you often dream about the fact that abbreviating postfix-expression.id-expression as E1.E2, E1 is called the object expression?
2016-10-17 16:17:11	<--	uuplusu (~uuplusu@218.108.29.107) has quit (Remote host closed the connection)
2016-10-17 16:17:47	-->	uuplusu (~uuplusu@183.157.160.45) has joined ##c++
2016-10-17 16:18:05	<--	ReverseBlade (~user@213.74.212.180) has quit (Ping timeout: 244 seconds)
2016-10-17 16:19:09	<--	karakedi (~eAC53C340@unaffiliated/orphan) has quit (Ping timeout: 260 seconds)
2016-10-17 16:19:18	iibewegung	uh.. no. should i have called it Boost.Pooling?
2016-10-17 16:20:18	-->	hualet (~hualet@118.184.15.164) has joined ##c++
2016-10-17 16:23:39	<--	EvilPenguin (~EvilPengu@bur-inet-pa-3.disney.com) has quit (Ping timeout: 252 seconds)
2016-10-17 16:24:48	w3z	whats E2 called
2016-10-17 16:25:04	Eelis	good question
2016-10-17 16:25:10	-->	nikki93 (~nikki93@c-67-169-12-37.hsd1.ca.comcast.net) has joined ##c++
2016-10-17 16:25:22	<--	sssilver (~sssilver@2605:6000:ee54:b500:81c3:a3a5:c04c:2db1) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-10-17 16:25:53	<--	hexagoxel (~hexagoxel@p200300798F155C00021E33FFFE2231E9.dip0.t-ipconnect.de) has quit (Ping timeout: 245 seconds)
2016-10-17 16:26:24	<--	ni8 (~ikari@ip70-185-109-150.ga.at.cox.net) has quit (Read error: Connection reset by peer)
2016-10-17 16:28:14	w3z	5.2.5, E2 doesnt get a special name
2016-10-17 16:28:18	-->	AbleBacon (~AbleBacon@unaffiliated/ablebacon) has joined ##c++
2016-10-17 16:28:34	<--	vinnie92_ (uid189878@gateway/web/irccloud.com/x-hwuqkptiokgqkgrm) has quit (Quit: Connection closed for inactivity)
2016-10-17 16:28:58	-->	FreeBirdLjj (~freebirdl@202.119.46.36) has joined ##c++
2016-10-17 16:29:04	<--	felixi (~mikko@a88-115-27-145.elisa-laajakaista.fi) has quit (Ping timeout: 256 seconds)
2016-10-17 16:30:00	-->	ReverseBlade (~user@213.74.212.180) has joined ##c++
2016-10-17 16:30:00		[16:30]
2016-10-17 16:30:33	-->	ADrunkBloaker (~soapta@67.237.54.200) has joined ##c++
2016-10-17 16:30:57	<--	ADrunkBloaker (~soapta@67.237.54.200) has left ##c++
2016-10-17 16:31:09	-->	xameada_ (~xameada@ip98-165-190-88.ph.ph.cox.net) has joined ##c++
2016-10-17 16:31:11	-->	ADrunkBloaker (~soapta@67.237.54.200) has joined ##c++
2016-10-17 16:32:59	-->	hexagoxel (~hexagoxel@p200300798F1D1700021E33FFFE2231E9.dip0.t-ipconnect.de) has joined ##c++
2016-10-17 16:33:15	<--	zap0 (~moofy@14-201-222-143.tpgi.com.au) has quit (Quit: zap0)
2016-10-17 16:34:52	<--	Suchorski (regex@unaffiliated/suchorski) has quit
2016-10-17 16:34:58	-->	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has joined ##c++
2016-10-17 16:36:33	introom	how can I print out the type of an expression with typeid or whatever without trimming the reference?
2016-10-17 16:36:43	introom	{ cout << typeid(int&).name() << endl;}
2016-10-17 16:36:44	geordi	int
2016-10-17 16:37:06	introom	<< TYPE(int&)
2016-10-17 16:37:06	geordi	error: template argument 1 is invalid
2016-10-17 16:37:27	<--	hualet (~hualet@118.184.15.164) has quit (Remote host closed the connection)
2016-10-17 16:37:49	Akahige	<< TYPE<int&>
2016-10-17 16:37:50	geordi	int&
2016-10-17 16:37:55	-->	hualet (~hualet@118.184.15.164) has joined ##c++
2016-10-17 16:38:21	Akahige	introom: TYPE is some geordi magic, written by Eelis I believe. It builds upon typeid afaik. The code is up on github if you wish to see it.
2016-10-17 16:38:46	Akahige	I do not know how he resolves the types to whether they references etc... However I imagine he does it though specialization
2016-10-17 16:38:47	introom	Akahige: yes. Eelis gave me the link yesterday.
2016-10-17 16:39:23	-->	andyhuzhill (~Thunderbi@14.23.45.178) has joined ##c++
2016-10-17 16:39:41	<--	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has quit (Ping timeout: 260 seconds)
2016-10-17 16:40:15	<--	ADrunkBloaker (~soapta@67.237.54.200) has quit
2016-10-17 16:40:27	<--	bernalex (~alexander@gentoo/developer/fsf.member.bernalex) has quit (Ping timeout: 258 seconds)
2016-10-17 16:41:04	-->	xaxxon (~xaxxon@2601:602:9d00:d58b:6546:397d:c77e:7e5d) has joined ##c++
2016-10-17 16:41:27	-->	drunkbloaker (43ed36c8@gateway/web/cgi-irc/kiwiirc.com/ip.67.237.54.200) has joined ##c++
2016-10-17 16:41:51	-->	segmond (~segmond@2601:40b:8404:fd10:74e0:c801:31e7:b8a8) has joined ##c++
2016-10-17 16:42:03	<--	drunkbloaker (43ed36c8@gateway/web/cgi-irc/kiwiirc.com/ip.67.237.54.200) has quit (Client Quit)
2016-10-17 16:42:48	<--	hualet (~hualet@118.184.15.164) has quit (Ping timeout: 256 seconds)
2016-10-17 16:45:16	-->	benkant (~benkant@vpn-singapore-119-81-113-90.hosts.getcloakvpn.com) has joined ##c++
2016-10-17 16:45:16		[16:45]
2016-10-17 16:45:27	AbleBacon	i use gerodi's "TYPE" all the time for my own experimentation. look for "type_strings.hpp"
2016-10-17 16:45:43	AbleBacon	you can do some simple stuff to detach all the type-printing functions from geordi himself
2016-10-17 16:45:49	AbleBacon	so that it can be used stand-alone
2016-10-17 16:45:53	<--	benkant_ (~benkant@vpn-singapore-119-81-113-90.hosts.getcloakvpn.com) has quit (Ping timeout: 245 seconds)
2016-10-17 16:46:28	-->	illerucis (~illerucis@ool-18bef55c.dyn.optonline.net) has joined ##c++
2016-10-17 16:46:35	introom	AbleBacon: I cloned the prelude folder and directly include the type_string.hpp, did a "cout << TYPE<int&>", only got weird output.
2016-10-17 16:46:52	-->	ADrunkBloaker (~soapta@67.237.54.200) has joined ##c++
2016-10-17 16:47:31	AbleBacon	yeah--the TYPE macro is like... part of geordi's class but doesn't need to be. if you remove the declaration from it, you can get it to work. i don't recall exactly what i did since it was a while ago
2016-10-17 16:47:31	-->	bernalex (~alexander@149.223.189.109.customer.cdi.no) has joined ##c++
2016-10-17 16:48:03	-->	illeruci_ (~illerucis@ool-18bef55c.dyn.optonline.net) has joined ##c++
2016-10-17 16:49:20	<--	chachasmooth (~chachasmo@unaffiliated/chachasmooth) has quit (Ping timeout: 250 seconds)
2016-10-17 16:49:49	AbleBacon	lemme see if i can remember how i got it to work
2016-10-17 16:49:50	-->	chachasmooth (~chachasmo@unaffiliated/chachasmooth) has joined ##c++
2016-10-17 16:50:05	introom	AbleBacon: cool!
2016-10-17 16:50:37	<--	f3r70rr35f (~fernando@200-112-118-3.baf.movistar.cl) has quit (Ping timeout: 260 seconds)
2016-10-17 16:50:53	<--	illerucis (~illerucis@ool-18bef55c.dyn.optonline.net) has quit (Ping timeout: 245 seconds)
2016-10-17 16:51:09	<--	SecondForm_Glenn (~Thunderbi@97-102-42-24.res.bhn.net) has quit (Ping timeout: 252 seconds)
2016-10-17 16:51:40	<--	nikki93 (~nikki93@c-67-169-12-37.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2016-10-17 16:54:34	-->	w33 (~w33@unaffiliated/w33) has joined ##c++
2016-10-17 16:54:54	<--	Dohplay (~Dohplay@2601:246:4400:f10c:64b3:e224:8352:31b9) has quit (Read error: Connection reset by peer)
2016-10-17 16:55:07	-->	UnlikeSuika (~UnlikeSui@115.93.122.107) has joined ##c++
2016-10-17 16:55:50	<--	UnlikeSuika (~UnlikeSui@115.93.122.107) has quit (Read error: Connection reset by peer)
2016-10-17 16:55:53	<--	UnripeSuica (~UnlikeSui@115.93.122.107) has quit (Read error: Connection reset by peer)
2016-10-17 16:56:35	-->	c0le (~c0le@59.99.251.45) has joined ##c++
2016-10-17 16:56:35	AbleBacon	introom: the "TYPE" macro relies on the "demangle" function, which is in the "geordi" namespace. so i just copied that function into its own separate header file and included that header file with the other ones for "TYPE"
2016-10-17 16:57:00	AbleBacon	and that should detach all the "TYPE" stuff from its dependency on geordi
2016-10-17 16:57:17	-->	prehensileNipple (~nooblet@124.197.62.6) has joined ##c++
2016-10-17 16:57:20	-->	nilg (~user@77.70.2.229) has joined ##c++
2016-10-17 16:58:43	<--	ADrunkBloaker (~soapta@67.237.54.200) has quit
2016-10-17 16:59:02	-->	ADrunkBloaker (~soapta@67.237.54.200) has joined ##c++
2016-10-17 16:59:38	<--	callousf1 (~thraxxus@2602:302:d1fb:3360:c0d4:f2ed:597:1d65) has quit (Ping timeout: 245 seconds)
2016-10-17 17:00:38	<--	pepper_chico (~pepper_ch@187.56.114.146) has quit (Quit: WeeChat 1.6)
2016-10-17 17:00:38		[17:00]
2016-10-17 17:01:38	<--	w33 (~w33@unaffiliated/w33) has quit (Quit: w33)
2016-10-17 17:02:31	<--	ReverseBlade (~user@213.74.212.180) has quit (Ping timeout: 244 seconds)
2016-10-17 17:03:21	-->	hualet (~hualet@118.184.15.164) has joined ##c++
2016-10-17 17:03:46	AbleBacon	idk looks like he changed a lot of stuff around since the version i used for that
2016-10-17 17:04:12	<--	ADrunkBloaker (~soapta@67.237.54.200) has quit
2016-10-17 17:04:13	xaxxon	introom, what was your question?
2016-10-17 17:04:29	<--	nacon (~nacon@unaffiliated/nacon) has quit (Quit: leaving)
2016-10-17 17:05:29	<--	mindandsky (~mindandsk@2601:283:8000:4250:d957:66a1:9e8f:78f8) has quit (Ping timeout: 245 seconds)
2016-10-17 17:05:32	<--	kbdkode (~kbdkode@unaffiliated/kbdkode) has quit (Ping timeout: 260 seconds)
2016-10-17 17:06:40	<--	illeruci_ (~illerucis@ool-18bef55c.dyn.optonline.net) has quit (Remote host closed the connection)
2016-10-17 17:07:49	-->	f3r70rr35f (~fernando@200-112-118-3.baf.movistar.cl) has joined ##c++
2016-10-17 17:09:15	<--	shaggycat (~quassel@95-37-215-204.dynamic.mts-nn.ru) has quit (Ping timeout: 252 seconds)
2016-10-17 17:09:48	introom	xaxxon: my question was, how to print out the type without trimming the references, e.g., showtype(int&) gives int& instead of int.
2016-10-17 17:10:25	xaxxon	std::remove_reference_t<T>
2016-10-17 17:10:39	xaxxon	wait.. what output do you WANT for an int&?
2016-10-17 17:11:20	introom	xaxxon: exactly like TYPE<> of geordi
2016-10-17 17:11:40	<--	iterati (~vangelis@46.12.185.49.dsl.dyn.forthnet.gr) has quit (Quit: Leaving.)
2016-10-17 17:11:40	xaxxon	post a geordi example, pls
2016-10-17 17:12:06	<--	blackbeard420 (~blackbear@dynamic-acs-24-154-171-60.zoominternet.net) has quit (Quit: Lost terminal)
2016-10-17 17:12:30	-->	Synthbread (~Synthead@c-67-182-139-37.hsd1.wa.comcast.net) has joined ##c++
2016-10-17 17:12:50	introom	<< TYPE<int&>
2016-10-17 17:12:50	geordi	int&
2016-10-17 17:13:07	introom	{ cout << typeid(int&).name();} see the difference
2016-10-17 17:13:07	geordi	error: 'see' does not name a type; did you mean 'sleep'? (fix known)
2016-10-17 17:14:20	<--	KAHR-Alpha (~Alpha@AReims-652-1-18-165.w90-18.abo.wanadoo.fr) has quit (Ping timeout: 260 seconds)
2016-10-17 17:15:35	AbleBacon	here, introom, i'll just send you what i made a year ago that uses geordi's "TYPE". geordi is public domain so i'm sure that's ok, right?
2016-10-17 17:16:10	<--	ekinmur (~ekinmur@unaffiliated/ekinmur) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-10-17 17:16:10		[17:16]
2016-10-17 17:17:06	introom	AbleBacon: yeah sure. through what means will you send the code?
2016-10-17 17:17:07	xaxxon	introom, here's the code I use to get type names from non-windows stuff: v
2016-10-17 17:17:10	xaxxon	introom, https://github.com/xaxxon/v8toolkit/blob/f34ceb957dea5a678c2f64123293f3e20e945ff2/include/v8helpers.h#L58
2016-10-17 17:19:38	xaxxon	introom, the guts of it are actually here: v
2016-10-17 17:19:39	xaxxon	https://github.com/xaxxon/v8toolkit/blob/f34ceb957dea5a678c2f64123293f3e20e945ff2/src/v8helpers.cpp#L11
2016-10-17 17:19:51	-->	anunnaki (~chris@unaffiliated/anunnaki) has joined ##c++
2016-10-17 17:19:53	AbleBacon	does that do what geordi's stuff does?
2016-10-17 17:20:12	-->	mangolisk (~mangolisk@S0106848dc7ebaa06.vc.shawcable.net) has joined ##c++
2016-10-17 17:20:13	xaxxon	I don't know, but it prints the actual demangled type name of a type
2016-10-17 17:20:20	xaxxon	on certain platforms
2016-10-17 17:21:51	AbleBacon	will it do freaky shit?
2016-10-17 17:21:52	AbleBacon	int main() { const auto blah = [](const std::string& s, const std::string& t){ return s + t; }; std::cout << TYPE(blah) << std::endl; }
2016-10-17 17:21:55	AbleBacon	geordi: int main() { const auto blah = [](const std::string& s, const std::string& t){ return s + t; }; std::cout << TYPE(blah) << std::endl; }
2016-10-17 17:21:55	geordi	lvalue main::{lambda(string const&, string const&)#1} const
2016-10-17 17:23:16	<--	orbiter (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has quit (Read error: Connection reset by peer)
2016-10-17 17:23:26	<--	anunnaki (~chris@unaffiliated/anunnaki) has quit (Client Quit)
2016-10-17 17:23:30	-->	ReverseBlade (~user@213.74.212.180) has joined ##c++
2016-10-17 17:23:40	-->	orbiter (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has joined ##c++
2016-10-17 17:24:25	xaxxon	AbleBacon, I don't know, but probably not.   it does whatever __cxa_demangle does
2016-10-17 17:24:38	xaxxon	https://gcc.gnu.org/onlinedocs/libstdc++/libstdc++-html-USERS-4.3/a01696.html
2016-10-17 17:24:59	AbleBacon	ah. well, the TYPE macro here does all kinds of crazy stuff on top of that
2016-10-17 17:25:01	-->	kbdkode (~kbdkode@unaffiliated/kbdkode) has joined ##c++
2016-10-17 17:25:14	AbleBacon	it preserves references and 'const's and stuff
2016-10-17 17:25:38	-->	anunnaki (~chris@unaffiliated/anunnaki) has joined ##c++
2016-10-17 17:25:57	-->	YungRaj (~YungRaj@50-24-71-159.bcstcmtk01.res.dyn.suddenlink.net) has joined ##c++
2016-10-17 17:26:00	<--	samik (~smukherje@netops-100.sfo1.bitgravity.com) has quit (Ping timeout: 250 seconds)
2016-10-17 17:26:12	-->	fedepad (~fedepad@p4FE10CCC.dip0.t-ipconnect.de) has joined ##c++
2016-10-17 17:26:28	<--	f3r70rr35f (~fernando@200-112-118-3.baf.movistar.cl) has quit (Ping timeout: 260 seconds)
2016-10-17 17:27:42	<--	nilg (~user@77.70.2.229) has quit (Read error: Connection reset by peer)
2016-10-17 17:28:00	<--	fogbank (~foggy@88.147.42.198) has quit (Ping timeout: 256 seconds)
2016-10-17 17:28:04	<--	pmercado (~pmercado@186-104-245-4.baf.movistar.cl) has quit (Quit: Konversation terminated!)
2016-10-17 17:28:06	<--	FreeBirdLjj (~freebirdl@202.119.46.36) has quit (Remote host closed the connection)
2016-10-17 17:28:45	introom	AbleBacon: works great!
2016-10-17 17:28:49	AbleBacon	:D
2016-10-17 17:29:01	AbleBacon	i just wish i could get the newer version of it to work
2016-10-17 17:29:21	AbleBacon	that example i tried a few lines up is ridiculously long in the version i have
2016-10-17 17:29:49	-->	nilg (~user@77.70.2.229) has joined ##c++
2016-10-17 17:30:23	-->	medgno (~textual@c-73-181-187-190.hsd1.wa.comcast.net) has joined ##c++
2016-10-17 17:30:44	<--	fedepad (~fedepad@p4FE10CCC.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2016-10-17 17:31:27	-->	Freze (~Freze@c-73-167-60-180.hsd1.ma.comcast.net) has joined ##c++
2016-10-17 17:31:27		[17:31]
2016-10-17 17:32:05	<--	ERROH (mama@unaffiliated/almathea) has quit (Ping timeout: 256 seconds)
2016-10-17 17:32:35	medgno	Hello everyone.  I'm working on content for a class teaching gdb, and I'm trying to find code where relying on uninitialized memory being set to 0 will cause a segfault.  I have this code, but it's not reliably crashing for me outside of the debugger.  Any suggestions? http://melpon.org/wandbox/permlink/Q8jH2pbBHLQSRa6D
2016-10-17 17:32:47	<--	Freze (~Freze@c-73-167-60-180.hsd1.ma.comcast.net) has quit (Changing host)
2016-10-17 17:32:47	-->	Freze (~Freze@unaffiliated/freze) has joined ##c++
2016-10-17 17:33:09	medgno	I should clarify, this is one class session in a CS 3 class teaching gdb, and I want a simple example of "The error disappears when run under the debugger!"
2016-10-17 17:33:48	<--	andyhuzhill (~Thunderbi@14.23.45.178) has quit (Ping timeout: 245 seconds)
2016-10-17 17:36:52	xaxxon	!give medgno general
2016-10-17 17:36:54	nolyc	medgno: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2016-10-17 17:37:05	medgno	sounds good, thanks!
2016-10-17 17:37:46	-->	f3r70rr35f (~fernando@200-112-118-3.baf.movistar.cl) has joined ##c++
2016-10-17 17:38:15	<--	f3r70rr35f (~fernando@200-112-118-3.baf.movistar.cl) has quit (Client Quit)
2016-10-17 17:39:51	-->	shingshang (~shingshan@101.164.159.8) has joined ##c++
2016-10-17 17:43:19	-->	w33 (~w33@unaffiliated/w33) has joined ##c++
2016-10-17 17:44:33	-->	DigiByteDev (~JT2@n218250011174.netvigator.com) has joined ##c++
2016-10-17 17:44:53	<--	bitlord (~bitlord@unaffiliated/bitlord) has quit (Quit: Leaving)
2016-10-17 17:45:41	-->	ERROH (mama@unaffiliated/almathea) has joined ##c++
2016-10-17 17:45:43	<--	JazzBot (6217d1d8@gateway/web/freenode/ip.98.23.209.216) has quit (Quit: Page closed)
2016-10-17 17:45:50	-->	JoshS (~jshjsh@172.56.17.42) has joined ##c++
2016-10-17 17:45:59	<--	nilg (~user@77.70.2.229) has quit (Read error: Connection reset by peer)
2016-10-17 17:46:26	-->	nilg (~user@77.70.2.229) has joined ##c++
2016-10-17 17:47:49	-->	inop (~Android@209.95.50.27) has joined ##c++
2016-10-17 17:47:49		[17:47]
2016-10-17 17:48:40	<--	hualet (~hualet@118.184.15.164) has quit (Remote host closed the connection)
2016-10-17 17:49:06	-->	hualet (~hualet@118.184.15.164) has joined ##c++
2016-10-17 17:49:30	--	Akahige is now known as Moto-chan
2016-10-17 17:49:45	-->	ipronin (~ipronin@c-76-102-197-199.hsd1.ca.comcast.net) has joined ##c++
2016-10-17 17:49:59	<--	nilg (~user@77.70.2.229) has quit (Read error: Connection reset by peer)
2016-10-17 17:50:57	<--	ville (~ville@176-93-224-30.bb.dnainternet.fi) has quit (Ping timeout: 265 seconds)
2016-10-17 17:51:29	-->	nilg (~user@77.70.2.229) has joined ##c++
2016-10-17 17:51:46	-->	UnlikeSuika (~UnlikeSui@115.93.122.107) has joined ##c++
2016-10-17 17:52:17	-->	Xanather (~xanather@unaffiliated/xanather) has joined ##c++
2016-10-17 17:52:46	-->	nikki93 (~nikki93@2601:645:8104:cb10:c077:3177:d295:d3d1) has joined ##c++
2016-10-17 17:54:00	<--	hualet (~hualet@118.184.15.164) has quit (Ping timeout: 260 seconds)
2016-10-17 17:54:16	-->	logan_e__ (uid164592@gateway/web/irccloud.com/x-tbldhmwfnumfxqcc) has joined ##c++
2016-10-17 17:55:13	<--	Skruff (Elite15320@gateway/shell/elitebnc/x-wfumwrskpauapwek) has quit (Ping timeout: 244 seconds)
2016-10-17 17:55:19	<--	JoshS (~jshjsh@172.56.17.42) has quit (Ping timeout: 265 seconds)
2016-10-17 17:56:19	-->	Skruff (Elite15320@gateway/shell/elitebnc/x-qdxouaaequoxqbyh) has joined ##c++
2016-10-17 17:56:20	<--	shingshang (~shingshan@101.164.159.8) has quit (Ping timeout: 250 seconds)
2016-10-17 17:56:27	<--	nwkj86 (~nwkj86@142.66.6.51.dyn.plus.net) has quit (Remote host closed the connection)
2016-10-17 17:56:27	-->	callousf1 (~thraxxus@2602:302:d1fb:3360:9d4d:7bb5:8a71:5d3e) has joined ##c++
2016-10-17 17:56:48	<--	Crazylemon64 (~Crazylemo@207.62.170.215) has quit (Ping timeout: 260 seconds)
2016-10-17 17:56:51	-->	nwkj86 (~nwkj86@142.66.6.51.dyn.plus.net) has joined ##c++
2016-10-17 17:57:12	<--	nikki93 (~nikki93@2601:645:8104:cb10:c077:3177:d295:d3d1) has quit (Ping timeout: 250 seconds)
2016-10-17 17:57:48	<--	ReverseBlade (~user@213.74.212.180) has quit (Ping timeout: 244 seconds)
2016-10-17 17:57:49	<--	allen29 (~all@unaffiliated/allen29) has quit (Quit: Leaving)
2016-10-17 17:59:48	-->	Crazylemon64 (~Crazylemo@207.62.170.215) has joined ##c++
2016-10-17 18:02:41	-->	Orbitrix (~Huevos@c-76-127-14-226.hsd1.nm.comcast.net) has joined ##c++
2016-10-17 18:05:04	-->	dave0x6d (uid190567@gateway/web/irccloud.com/x-gmtgtqfwrnflcobr) has joined ##c++
2016-10-17 18:05:04		[18:05]
2016-10-17 18:07:21	-->	hariel (~wolfcub@177.131.178.156) has joined ##c++
2016-10-17 18:08:26	w33	what function like memcpy was there that allowed the two buffers to overlap?
2016-10-17 18:09:20	xaxxon	w33, https://linux.die.net/man/3/memmove
2016-10-17 18:10:38	<--	alhariel (~wolfcub@177.131.178.156) has quit (Ping timeout: 250 seconds)
2016-10-17 18:10:50	w33	thanks
2016-10-17 18:11:36	w33	ptr_1 and ptr_1 overlaps in memcpy(ptr_1,ptr_1, num);. Is that okay? It's basically a NOP?
2016-10-17 18:11:44	ubsan	it's fine
2016-10-17 18:11:48	-->	JoshS (~jshjsh@172.56.17.42) has joined ##c++
2016-10-17 18:11:49	ubsan	although it won't be a NOP
2016-10-17 18:11:52	ubsan	in many cases
2016-10-17 18:12:33	w33	ubsan: it won't?
2016-10-17 18:12:34	medgno	isn't memcpy with overlapping memory undefined?
2016-10-17 18:12:49	ubsan	w33: I mean like, it'll still do the copy
2016-10-17 18:12:56	ubsan	even though it's equivalent to a NOP
2016-10-17 18:13:00	ubsan	so sloooowness
2016-10-17 18:13:47	Moto-chan	If you pass in equal pointers, they do overlap, therefore the behaviour is unsigned.
2016-10-17 18:13:53	Moto-chan	For memcpy anyway
2016-10-17 18:14:13	chrisf	undefined, perhaps.
2016-10-17 18:14:34	Moto-chan	Lol, yes
2016-10-17 18:14:35	Moto-chan	Typo
2016-10-17 18:15:12	chrisf	ubsan: you spout /far/ more nonsense than your nick would suggest :(
2016-10-17 18:15:33	Moto-chan	Silly ubsan
2016-10-17 18:15:34	ubsan	chrisf: wtf are you talking aboooooouut oh shit
2016-10-17 18:15:36	w33	right
2016-10-17 18:15:39	ubsan	I misread the original
2016-10-17 18:15:48	ubsan	question
2016-10-17 18:15:55	ubsan	w33: sorry, no, it's still bad
2016-10-17 18:16:08	w33	twam ur
2016-10-17 18:16:13	w33	*it's undef
2016-10-17 18:16:27	w33	 anyway, solved it
2016-10-17 18:18:07	<--	c0le (~c0le@59.99.251.45) has quit (Read error: Connection reset by peer)
2016-10-17 18:20:18	-->	unK_ (~drunK@host-81-190-235-217.dynamic.mm.pl) has joined ##c++
2016-10-17 18:20:18		[18:20]
2016-10-17 18:20:33	-->	xaxxon_ (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has joined ##c++
2016-10-17 18:20:39	<--	xaxxon (~xaxxon@2601:602:9d00:d58b:6546:397d:c77e:7e5d) has quit (Disconnected by services)
2016-10-17 18:20:43	<--	xaxxon_ (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has quit (Client Quit)
2016-10-17 18:20:53	-->	xaxxon (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has joined ##c++
2016-10-17 18:21:40	<--	YungRaj (~YungRaj@50-24-71-159.bcstcmtk01.res.dyn.suddenlink.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-10-17 18:22:16	-->	c0le (~c0le@59.99.251.45) has joined ##c++
2016-10-17 18:23:21	-->	ReverseBlade (~user@213.74.212.180) has joined ##c++
2016-10-17 18:25:02	-->	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has joined ##c++
2016-10-17 18:25:46	-->	felixi (~mikko@a88-115-27-145.elisa-laajakaista.fi) has joined ##c++
2016-10-17 18:27:53	<--	inop (~Android@209.95.50.27) has quit (Quit: -a- IRC for Android 2.1.33)
2016-10-17 18:28:50	<--	callousf1 (~thraxxus@2602:302:d1fb:3360:9d4d:7bb5:8a71:5d3e) has quit (Ping timeout: 250 seconds)
2016-10-17 18:29:33	<--	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has quit (Ping timeout: 252 seconds)
2016-10-17 18:31:48	<--	xameada (~xameada@ip98-165-190-88.ph.ph.cox.net) has quit (Ping timeout: 252 seconds)
2016-10-17 18:32:11	<--	kadoban (~mud@unaffiliated/kadoban) has quit (Quit: bye)
2016-10-17 18:32:41	<--	SwiftMatt (~Objective@130.253.27.153) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-10-17 18:34:43	-->	samik (~smukherje@24.4.162.17) has joined ##c++
2016-10-17 18:35:52	<--	samik (~smukherje@24.4.162.17) has quit (Client Quit)
2016-10-17 18:35:52		[18:35]
2016-10-17 18:36:19	-->	uuplusu_ (~uuplusu@218.108.29.107) has joined ##c++
2016-10-17 18:38:08	<--	Cabanossi (~Cabanossi@p5DD7A1A1.dip0.t-ipconnect.de) has quit (Ping timeout: 258 seconds)
2016-10-17 18:39:49	-->	Cabanossi (~Cabanossi@p5DD7B861.dip0.t-ipconnect.de) has joined ##c++
2016-10-17 18:40:16	<--	uuplusu (~uuplusu@183.157.160.45) has quit (Ping timeout: 260 seconds)
2016-10-17 18:41:42	<--	JoshS (~jshjsh@172.56.17.42) has quit (Ping timeout: 265 seconds)
2016-10-17 18:42:32	<--	DigiByteDev (~JT2@n218250011174.netvigator.com) has quit (Quit: DigiByteDev)
2016-10-17 18:44:44	<--	woggle (~charles@c-73-251-125-90.hsd1.va.comcast.net) has quit (Ping timeout: 268 seconds)
2016-10-17 18:44:58	-->	JoshS (~jshjsh@172.56.17.42) has joined ##c++
2016-10-17 18:45:00	-->	moffz0r (~moffz0r@14-201-5-120.static.tpgi.com.au) has joined ##c++
2016-10-17 18:45:01	<--	oxygene (~fred@ALille-652-1-90-160.w2-5.abo.wanadoo.fr) has quit (Quit: Quitte)
2016-10-17 18:45:23	-->	woggle (~charles@c-73-251-125-90.hsd1.va.comcast.net) has joined ##c++
2016-10-17 18:45:43	-->	hualet (~hualet@118.184.15.164) has joined ##c++
2016-10-17 18:45:59	-->	andyhuzhill (~Thunderbi@14.23.45.178) has joined ##c++
2016-10-17 18:46:25	-->	jshjsh (~jshjsh@172.56.17.42) has joined ##c++
2016-10-17 18:46:26	<--	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has quit (Quit: Leaving.)
2016-10-17 18:49:38	<--	JoshS (~jshjsh@172.56.17.42) has quit (Ping timeout: 250 seconds)
2016-10-17 18:50:21	<--	KindOne (kindone@freenude/topless/kindone) has quit (Ping timeout: 260 seconds)
2016-10-17 18:50:53	<--	TheScholar (~randomman@ool-44c16ddc.dyn.optonline.net) has quit
2016-10-17 18:50:53		[18:50]
2016-10-17 18:54:49	<--	TheSeven (~quassel@rockbox/developer/TheSeven) has quit (Ping timeout: 256 seconds)
2016-10-17 18:55:38	-->	Neslepaks (~Neslepaks@178.61.71.85) has joined ##c++
2016-10-17 18:57:21	-->	mss_cyclist (~MSe@89-250-189-210.tangos.nl) has joined ##c++
2016-10-17 18:58:20	<--	arescorpio (~arescorpi@152.171.94.34) has quit (Quit: Leaving.)
2016-10-17 18:58:32	-->	EvilPenguin (~EvilPengu@2605:e000:6189:9600:b42d:b7ce:4c53:a947) has joined ##c++
2016-10-17 18:58:51	-->	samik (~smukherje@24.4.162.17) has joined ##c++
2016-10-17 18:59:03	-->	kawaCat (~kawaCat@KD106133123073.au-net.ne.jp) has joined ##c++
2016-10-17 18:59:28	-->	KindOne (kindone@freenude/topless/kindone) has joined ##c++
2016-10-17 18:59:36	<--	BustyLoli-Chan (~BustyLoli@c-67-163-66-115.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-17 18:59:48	<--	Sculptor_ (~Sculptor@trivialand/master/sculptor) has quit (Ping timeout: 244 seconds)
2016-10-17 19:00:19	<--	ReverseBlade (~user@213.74.212.180) has quit (Ping timeout: 244 seconds)
2016-10-17 19:00:41	-->	TheScholar (~randomman@ool-44c16ddc.dyn.optonline.net) has joined ##c++
2016-10-17 19:02:42	-->	nikki93 (~nikki93@2601:645:8104:cb10:c077:3177:d295:d3d1) has joined ##c++
2016-10-17 19:05:04	-->	justicefries (sid26447@gateway/web/irccloud.com/x-heofilpzgzaxmobb) has joined ##c++
2016-10-17 19:06:57	-->	hatter (~hatter@213.80.106.150) has joined ##c++
2016-10-17 19:06:57		[19:06]
2016-10-17 19:07:42	<--	vralphv (~vralp@d137-186-58-40.abhsia.telus.net) has quit (Quit: Lost terminal)
2016-10-17 19:09:09	<--	unK_ (~drunK@host-81-190-235-217.dynamic.mm.pl) has quit (Quit: KVIrc 4.3.1 Aria http://www.kvirc.net/)
2016-10-17 19:09:24	<--	TheScholar (~randomman@ool-44c16ddc.dyn.optonline.net) has quit
2016-10-17 19:10:13	-->	calincru (~calin@141.85.225.205) has joined ##c++
2016-10-17 19:10:48	-->	kasper^ (~safaf@82.137.9.188) has joined ##c++
2016-10-17 19:11:35	-->	alhariel (~wolfcub@177.131.178.156) has joined ##c++
2016-10-17 19:14:37	<--	hariel (~wolfcub@177.131.178.156) has quit (Ping timeout: 260 seconds)
2016-10-17 19:15:37	--	jshjsh is now known as JoshS
2016-10-17 19:16:27	<--	DEElekgolo (~DEElekgol@2602:30a:2e0e:a7a0:174:2c4d:b0e6:ba87) has quit (Quit: Leaving)
2016-10-17 19:17:32	<--	uniqueusername (~user@CPE1cabc071f3a3-CM1cabc071f3a0.cpe.net.cable.rogers.com) has quit (Ping timeout: 260 seconds)
2016-10-17 19:21:26	<--	nikki93 (~nikki93@2601:645:8104:cb10:c077:3177:d295:d3d1) has quit (Remote host closed the connection)
2016-10-17 19:22:23	<--	Cabanossi (~Cabanossi@p5DD7B861.dip0.t-ipconnect.de) has quit (Quit: Bye, bye...)
2016-10-17 19:22:23		[19:22]
2016-10-17 19:22:32	-->	AquaL1te (~AquaL1te@unaffiliated/aqual1te) has joined ##c++
2016-10-17 19:22:45	-->	Cabanossi (~Cabanossi@p5DD7B861.dip0.t-ipconnect.de) has joined ##c++
2016-10-17 19:26:08	<--	satbyy (~Satish_By@unaffiliated/satbyy) has quit (Remote host closed the connection)
2016-10-17 19:26:15	-->	callousf1 (~thraxxus@2602:302:d1fb:3360:c450:1cb:965f:75e) has joined ##c++
2016-10-17 19:26:46	<--	Lokomotiv (~ASAP@unaffiliated/lokomotiv) has quit (Ping timeout: 252 seconds)
2016-10-17 19:27:07	-->	Lokomotiv (~ASAP@unaffiliated/lokomotiv) has joined ##c++
2016-10-17 19:30:06	-->	TheScholar (~randomman@ool-44c16ddc.dyn.optonline.net) has joined ##c++
2016-10-17 19:30:10	-->	Mike11 (~Mike@unaffiliated/mike11) has joined ##c++
2016-10-17 19:31:11	-->	kasper_ (~safaf@82.137.9.188) has joined ##c++
2016-10-17 19:31:14	-->	ReverseBlade (~user@213.74.212.180) has joined ##c++
2016-10-17 19:31:32	<--	kasper^ (~safaf@82.137.9.188) has quit (Ping timeout: 256 seconds)
2016-10-17 19:32:00	<--	kasper_ (~safaf@82.137.9.188) has quit (Client Quit)
2016-10-17 19:32:20	-->	kasper^ (~safaf@82.137.9.188) has joined ##c++
2016-10-17 19:33:09	-->	Mike111 (~Mike@5.0.236.207) has joined ##c++
2016-10-17 19:33:09	<--	Mike111 (~Mike@5.0.236.207) has quit (Client Quit)
2016-10-17 19:34:28	-->	Mithras (~textual@175.192.165.221) has joined ##c++
2016-10-17 19:34:29	<--	hualet (~hualet@118.184.15.164) has quit (Remote host closed the connection)
2016-10-17 19:34:56	-->	hualet (~hualet@118.184.15.164) has joined ##c++
2016-10-17 19:35:14	-->	ralph_ (~ralph@cpe-72-231-226-61.buffalo.res.rr.com) has joined ##c++
2016-10-17 19:36:26	<--	Mike11 (~Mike@unaffiliated/mike11) has quit (Ping timeout: 250 seconds)
2016-10-17 19:36:38	<--	ralph_ (~ralph@cpe-72-231-226-61.buffalo.res.rr.com) has quit (Client Quit)
2016-10-17 19:36:58	<--	glenfe (~glen@unaffiliated/glenfe) has quit (Read error: Connection reset by peer)
2016-10-17 19:38:52	-->	Jesin (~Jesin@pool-96-231-49-118.washdc.fios.verizon.net) has joined ##c++
2016-10-17 19:38:52		[19:38]
2016-10-17 19:39:49	<--	hualet (~hualet@118.184.15.164) has quit (Ping timeout: 260 seconds)
2016-10-17 19:40:46	<--	threebar (~threebar@unaffiliated/notten) has quit (Ping timeout: 250 seconds)
2016-10-17 19:41:29	w33	int &i = arr[x];     arr[x]=5 is now equivalent to i=5?
2016-10-17 19:41:53	<--	Neslepaks (~Neslepaks@178.61.71.85) has quit (Quit: Neslepaks)
2016-10-17 19:44:40	Bloodust	yup
2016-10-17 19:45:09	<--	verm1n (~verm1n@209-6-236-59.c3-0.wrx-ubr1.sbo-wrx.ma.cable.rcn.com) has quit (Ping timeout: 248 seconds)
2016-10-17 19:45:16	-->	kenden (~dsps@85.211.209.162) has joined ##c++
2016-10-17 19:46:51	-->	kw01f (~kw01f@merlin.mvtec.com) has joined ##c++
2016-10-17 19:46:53	<--	esas (~esas@unaffiliated/esas) has quit
2016-10-17 19:47:20	<--	rockstar___ (~rockstar@cpe-72-224-119-105.nycap.res.rr.com) has quit (Ping timeout: 244 seconds)
2016-10-17 19:47:51	<--	rockstar_ (~rockstar@cpe-72-224-119-105.nycap.res.rr.com) has quit (Ping timeout: 244 seconds)
2016-10-17 19:49:16	Moto-chan	w33: try joining ##c++-basic :) It's rather welcoming for simpler questions like this. People will tend to explain things more and take more time to ensure you come to an understanding. Whereas this channel is intended for discussion of the language itself.
2016-10-17 19:49:20	Moto-chan	That, and the interview trigger.
2016-10-17 19:49:23	Moto-chan	!interview
2016-10-17 19:49:24	nolyc	Were you surprised when you first learned that a fence with acquire semantics is called an acquire fence?
2016-10-17 19:49:53	-->	lolek (~lolek@unaffiliated/marcin) has joined ##c++
2016-10-17 19:50:04	-->	dminuoso_ (~dminuoso@unaffiliated/dminuoso) has joined ##c++
2016-10-17 19:50:16	medgno	wait, nolyc has an !interview trigger?
2016-10-17 19:50:29	<--	kenden (~dsps@85.211.209.162) has quit (Quit: My computer has gone to sleep. ZZZzzz…)
2016-10-17 19:52:26	-->	qqcore33 (4d554b85@gateway/web/freenode/ip.77.85.75.133) has joined ##c++
2016-10-17 19:52:49	<--	Leovale (~Leovale@104-222-125-173.cpe.teksavvy.com) has quit (Read error: Connection reset by peer)
2016-10-17 19:53:03	<--	samik (~smukherje@24.4.162.17) has quit (Quit: samik)
2016-10-17 19:53:08	<--	ljmf00 (uid190412@gateway/web/irccloud.com/x-ixbwpohsvxtvjjnw) has quit (Quit: Connection closed for inactivity)
2016-10-17 19:53:33	qqcore33	Hello, Idk if this is the right channel to ask, but I saw a project on github, which solution is not on Visual Studio, but requires to use msys and mingw. I was wondering if someone can make the project compile in Visual Studio. It has like 6 files total.
2016-10-17 19:53:49	<--	govg (~govg@unaffiliated/govg) has quit (Ping timeout: 260 seconds)
2016-10-17 19:54:34	<--	ReverseBlade (~user@213.74.212.180) has quit (Ping timeout: 244 seconds)
2016-10-17 19:54:34		[19:54]
2016-10-17 19:55:41	<--	uuplusu_ (~uuplusu@218.108.29.107) has quit (Remote host closed the connection)
2016-10-17 19:55:58	<--	medgno (~textual@c-73-181-187-190.hsd1.wa.comcast.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-10-17 19:56:19	-->	uuplusu (~uuplusu@183.157.160.46) has joined ##c++
2016-10-17 19:58:01	Moto-chan	qqcore33: Would require rewriting most of the code no doubt. Someone COULD, but doubt they would without a reason to.
2016-10-17 19:58:13	Moto-chan	Unless they're Canadian ( ¬‿¬)
2016-10-17 19:58:33	qqcore33	haha, well thanks for the answer Moto-chan , but is this for sure? The big code-rewriting part?
2016-10-17 19:59:12	qqcore33	And are you Canadian by any chance?
2016-10-17 19:59:53	<--	callousf1 (~thraxxus@2602:302:d1fb:3360:c450:1cb:965f:75e) has quit (Ping timeout: 260 seconds)
2016-10-17 20:00:32	<--	hatter (~hatter@213.80.106.150) has quit (Ping timeout: 260 seconds)
2016-10-17 20:00:40	<--	Mithras (~textual@175.192.165.221) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-10-17 20:00:46	-->	nikki93 (~nikki93@2601:645:8104:cb10:c077:3177:d295:d3d1) has joined ##c++
2016-10-17 20:01:02	Moto-chan	I'm Irish, and the reason it uses MinGW and msys is because it's just some ported Linux code that they didn't want to rewrite, so they compile it in the emulated Linux that is MinGW :P
2016-10-17 20:02:02	<--	P1RATEZ (piratez@unaffiliated/p1ratez) has quit
2016-10-17 20:03:06	qqcore33	Moto-chan: well will you try to make it runnable on VS2015 when I tell you that the code is the shit. Like some interesting stuff
2016-10-17 20:03:22	Moto-chan	Doubtfully
2016-10-17 20:03:33	qqcore33	: (
2016-10-17 20:03:48	Moto-chan	Although, feel free to join ##c++-general, tell us what it does, and you might arouse some interest.
2016-10-17 20:03:55	qqcore33	well, can you at least tell me how do separate and configur ethe project
2016-10-17 20:04:01	qqcore33	the errors in the code I'll handle myself?
2016-10-17 20:04:14	w33	holy shit.. can you stop sending people back and forth between channels. nobody is joining shit, just talk c++
2016-10-17 20:04:48	w33	in each C++-* channel: "go to ##c++-[300 options]"
2016-10-17 20:04:53	Moto-chan	Personally, I'd love for it just to be in one channel.
2016-10-17 20:04:54	w33	like... holy shit.
2016-10-17 20:05:05	w33	stop sending people to other channels then :P
2016-10-17 20:05:07	Moto-chan	But attempt it, and feel the wraith of this channel's rules.
2016-10-17 20:05:11	qqcore33	w33: yeah I agree
2016-10-17 20:05:16	-->	SwiftMatt (~Objective@162.242.95.56) has joined ##c++
2016-10-17 20:05:19	qqcore33	i am sick and tired of people making me rejoin channel
2016-10-17 20:05:23	qqcore33	it should be one tbh
2016-10-17 20:05:24	Moto-chan	Then get off freenode
2016-10-17 20:05:33	Moto-chan	freenode is anal about topic by definition
2016-10-17 20:05:38	-->	kaffeetrauma (~Thunderbi@n37.informatik.fh-dortmund.de) has joined ##c++
2016-10-17 20:05:43	qqcore33	who cares about freenode
2016-10-17 20:05:47	qqcore33	fuck rules and shit
2016-10-17 20:05:48	w33	yeah, who cares.
2016-10-17 20:05:50	w33	yep.
2016-10-17 20:06:04	qqcore33	i dont even care about topics and license on source codes and shit
2016-10-17 20:06:06	Moto-chan	Then enjoy getting banned/silenced in this channel by the ops ^_^
2016-10-17 20:06:18	greenbagels_	hi Moto-chan :)
2016-10-17 20:06:18	qqcore33	i just download edit the author name to my own and I say to my friends that I did it
2016-10-17 20:06:19	Moto-chan	As I said, I'm merely playing by the rules of those who run this channel
2016-10-17 20:06:27	-->	ejbs_ (~ejbs_@ipbcc28f86.dynamic.kabel-deutschland.de) has joined ##c++
2016-10-17 20:07:05	-->	Elirips (~Elirips@242.109.22.178.ftth.as8758.net) has joined ##c++
2016-10-17 20:07:06	qqcore33	u ask what the code does?
2016-10-17 20:07:11	-->	unK_ (~drunK@host-81-190-235-217.dynamic.mm.pl) has joined ##c++
2016-10-17 20:07:18	qqcore33	it bypasses DSE and gives me the opportunity to load unsigned drivers
2016-10-17 20:07:25	qqcore33	without patchguard fucking bsoding
2016-10-17 20:09:06	-->	adempus (~adempus@ool-43529049.dyn.optonline.net) has joined ##c++
2016-10-17 20:14:44	-->	renn0xtk9 (~max@2a00:1398:9:fb01:28a4:a7d9:ce67:9cd9) has joined ##c++
2016-10-17 20:14:44		[20:14]
2016-10-17 20:16:00	-->	fedepad (~fedepad@p4FE13C0D.dip0.t-ipconnect.de) has joined ##c++
2016-10-17 20:16:05	<--	fedepad (~fedepad@p4FE13C0D.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-10-17 20:16:31	-->	rriemann (~rriemann@dhcp-67-135.ixxi.ens-lyon.fr) has joined ##c++
2016-10-17 20:16:37	-->	rmunoz (~ricardo@37.red-217-126-176.staticip.rima-tde.net) has joined ##c++
2016-10-17 20:19:25	<--	thirtythreeforty (~quassel@unaffiliated/gh403) has quit (Read error: Connection reset by peer)
2016-10-17 20:19:29	<--	renn0xtk9 (~max@2a00:1398:9:fb01:28a4:a7d9:ce67:9cd9) has quit (Ping timeout: 260 seconds)
2016-10-17 20:19:39	-->	thirtythreeforty (~quassel@unaffiliated/gh403) has joined ##c++
2016-10-17 20:20:21	w3z	we got us a turd in the punch bowl, a couple of rebels
2016-10-17 20:20:31	-->	jablo (~jablo@80.243.123.111) has joined ##c++
2016-10-17 20:20:58	-->	corsaere (~corsaere@unaffiliated/corsaere) has joined ##c++
2016-10-17 20:21:20	w3z	!interview
2016-10-17 20:21:21	nolyc	Did you know that member functions of a local class shall be defined inline in their class definition, if they are defined at all?
2016-10-17 20:21:49	Moto-chan	w3z: Careful! Someone may think that guy is you at a glance!
2016-10-17 20:23:45	-->	fedepad (~fedepad@p4FE13C0D.dip0.t-ipconnect.de) has joined ##c++
2016-10-17 20:24:06	xaxxon	a "did you know" "yes/no" interview question.   I want to interview there
2016-10-17 20:24:23	xaxxon	though I guess it could be a trick questino
2016-10-17 20:24:39	w3z	can you explain why if you prefer ..... because local function definitions are not allowed
2016-10-17 20:24:41	-->	jamesaxl (~jamesaxl@176.98.129.195) has joined ##c++
2016-10-17 20:25:06	<--	dminuoso_ (~dminuoso@unaffiliated/dminuoso) has quit (Ping timeout: 252 seconds)
2016-10-17 20:25:31	w3z	even retards want to be like mike
2016-10-17 20:25:34	Moto-chan	They're inline inside the class definition because it'd be pretty silly if they weren't :3
2016-10-17 20:26:06	<--	ipronin (~ipronin@c-76-102-197-199.hsd1.ca.comcast.net) has quit (Ping timeout: 265 seconds)
2016-10-17 20:26:19	-->	govg (~govg@unaffiliated/govg) has joined ##c++
2016-10-17 20:26:24	<--	nikki93 (~nikki93@2601:645:8104:cb10:c077:3177:d295:d3d1) has quit (Remote host closed the connection)
2016-10-17 20:26:47	w3z	(though jordan references are sort of dated now, dunno if retards want to be like lebron though)
2016-10-17 20:26:59	-->	nikki93 (~nikki93@2601:645:8104:cb10:c077:3177:d295:d3d1) has joined ##c++
2016-10-17 20:27:15	w3z	!interview
2016-10-17 20:27:17	nolyc	When does it matter that the member functions whose names end in _until take an argument that specifies a time point?
2016-10-17 20:27:54	-->	ReverseBlade (~user@213.74.212.180) has joined ##c++
2016-10-17 20:27:56	w3z	when you want to specify a timeout ...
2016-10-17 20:27:59	-->	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has joined ##c++
2016-10-17 20:28:18	-->	dminuoso_ (~dminuoso@unaffiliated/dminuoso) has joined ##c++
2016-10-17 20:28:30	-->	velco (~chill@vlan-nesebar-60-155.comnet.bg) has joined ##c++
2016-10-17 20:28:31	<--	fedepad (~fedepad@p4FE13C0D.dip0.t-ipconnect.de) has quit (Ping timeout: 265 seconds)
2016-10-17 20:28:51	w3z	!interview
2016-10-17 20:28:53	nolyc	Do you often dream about the fact that a class that declares or inherits a virtual function is called a polymorphic class?
2016-10-17 20:29:10	-->	seishun (~Kakera@62.85.100.180) has joined ##c++
2016-10-17 20:30:36	-->	jonge (~jonge@p5B11C93A.dip0.t-ipconnect.de) has joined ##c++
2016-10-17 20:30:36		[20:30]
2016-10-17 20:30:57	-->	threebar` (~threebar@pool-71-190-153-164.nycmny.fios.verizon.net) has joined ##c++
2016-10-17 20:31:03	<--	lolek (~lolek@unaffiliated/marcin) has left ##c++
2016-10-17 20:31:07	<--	rriemann (~rriemann@dhcp-67-135.ixxi.ens-lyon.fr) has quit (Quit: Konversation terminated!)
2016-10-17 20:31:28	<--	nikki93 (~nikki93@2601:645:8104:cb10:c077:3177:d295:d3d1) has quit (Ping timeout: 250 seconds)
2016-10-17 20:31:47	cbreak	w3z: when you care about the difference between steady clock and wall clock
2016-10-17 20:33:11	-->	kszatan (~kszatan@91.241.2.251) has joined ##c++
2016-10-17 20:34:40	-->	Davidbrcz (~david@2a01:cb19:85f3:f300:4eeb:42ff:feca:49af) has joined ##c++
2016-10-17 20:35:05	qqcore33	w3z: It's only like 50 line all of the makefile
2016-10-17 20:35:41	<--	josef_k (~Jeremy@210-10-222-98.mel.static-ipl.aapt.com.au) has quit (Ping timeout: 256 seconds)
2016-10-17 20:37:08	<--	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has quit (Ping timeout: 245 seconds)
2016-10-17 20:41:21	<--	segmond (~segmond@2601:40b:8404:fd10:74e0:c801:31e7:b8a8) has quit (Ping timeout: 256 seconds)
2016-10-17 20:42:48	-->	shingshang (~shingshan@101.164.159.8) has joined ##c++
2016-10-17 20:44:20	<--	nwkj86 (~nwkj86@142.66.6.51.dyn.plus.net) has quit (Ping timeout: 260 seconds)
2016-10-17 20:44:59	<--	flonk (~flonk@ec2-52-40-29-25.us-west-2.compute.amazonaws.com) has quit (Ping timeout: 268 seconds)
2016-10-17 20:49:09	-->	szulak_ (uid162164@gateway/web/irccloud.com/x-axroahcvqzcyqkof) has joined ##c++
2016-10-17 20:49:09		[20:49]
2016-10-17 20:49:19	<--	ReverseBlade (~user@213.74.212.180) has quit (Read error: Connection reset by peer)
2016-10-17 20:49:38	<--	dminuoso_ (~dminuoso@unaffiliated/dminuoso) has quit (Remote host closed the connection)
2016-10-17 20:49:40	urdh	What kind of an interview question is that?
2016-10-17 20:50:10	-->	hualet (~hualet@118.184.15.164) has joined ##c++
2016-10-17 20:50:17	cbreak	US election interview?
2016-10-17 20:50:41	<--	cybex_ (~cybex_@154.69.136.192) has quit (Quit: Leaving.)
2016-10-17 20:50:46	-->	cybex_1 (~cybex_@154.69.136.192) has joined ##c++
2016-10-17 20:50:47	<--	cybex_1 (~cybex_@154.69.136.192) has quit (Client Quit)
2016-10-17 20:50:54	-->	bjz (~bjz@119.225.16.78) has joined ##c++
2016-10-17 20:50:59	<--	w33 (~w33@unaffiliated/w33) has quit (Ping timeout: 256 seconds)
2016-10-17 20:51:03	-->	cybex_ (~cybex_@154.69.136.192) has joined ##c++
2016-10-17 20:51:08	-->	rendar (~rendar@host99-179-dynamic.13-79-r.retail.telecomitalia.it) has joined ##c++
2016-10-17 20:51:31	<--	martiert_work (114914@vor.ifi.uio.no) has quit (Remote host closed the connection)
2016-10-17 20:51:51	-->	destiny (uid73933@gateway/web/irccloud.com/x-jlitxppbfpkvaehu) has joined ##c++
2016-10-17 20:51:55	Cleroth	Even bots dream sometimes.
2016-10-17 20:53:47	-->	frib (~dynorsau@host127-144-dynamic.51-82-r.retail.telecomitalia.it) has joined ##c++
2016-10-17 20:54:27	<--	anunnaki (~chris@unaffiliated/anunnaki) has quit (Remote host closed the connection)
2016-10-17 20:54:32	-->	ReverseBlade (~user@213.74.212.180) has joined ##c++
2016-10-17 20:54:36	<--	hualet (~hualet@118.184.15.164) has quit (Ping timeout: 250 seconds)
2016-10-17 20:54:40	-->	rzeck (~robert@84-10-11-234.static.chello.pl) has joined ##c++
2016-10-17 20:55:19	<--	cybex_ (~cybex_@154.69.136.192) has quit (Client Quit)
2016-10-17 20:56:34	<--	bjz (~bjz@119.225.16.78) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-10-17 20:56:34	-->	callousf1 (~thraxxus@2602:302:d1fb:3360:bd95:5b97:a9bd:ab10) has joined ##c++
2016-10-17 21:03:33	-->	alyptik (~alyptik@unaffiliated/alyptik) has joined ##c++
2016-10-17 21:03:33		[21:03]
2016-10-17 21:03:33	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || https://isocpp.org/faq || pastes: http://melpon.org/wandbox"
2016-10-17 21:03:33	--	Topic set by V-ille (~ville@81-175-149-170.bb.dnainternet.fi) on Fri, 18 Sep 2015 07:13:01
2016-10-17 21:03:33	--	Channel ##c++: 946 nicks (0 ops, 0 voices, 946 normals)
2016-10-17 21:03:33	***	Buffer Playback...
2016-10-17 21:03:33	w33	[06:04:14] holy shit.. can you stop sending people back and forth between channels. nobody is joining shit, just talk c++ [06:04:14]
2016-10-17 21:03:33	w33	[06:04:48] in each C++-* channel: "go to ##c++-[300 options]" [06:04:48]
2016-10-17 21:03:33	Moto-chan	[06:04:53] Personally, I'd love for it just to be in one channel. [06:04:53]
2016-10-17 21:03:33	w33	[06:04:54] like... holy shit. [06:04:54]
2016-10-17 21:03:33	w33	[06:05:05] stop sending people to other channels then :P [06:05:05]
2016-10-17 21:03:33	Moto-chan	[06:05:07] But attempt it, and feel the wraith of this channel's rules. [06:05:07]
2016-10-17 21:03:33	qqcore33	[06:05:11] w33: yeah I agree [06:05:11]
2016-10-17 21:03:33	qqcore33	[06:05:19] i am sick and tired of people making me rejoin channel [06:05:19]
2016-10-17 21:03:33	qqcore33	[06:05:23] it should be one tbh [06:05:23]
2016-10-17 21:03:33	Moto-chan	[06:05:24] Then get off freenode [06:05:24]
2016-10-17 21:03:33	Moto-chan	[06:05:33] freenode is anal about topic by definition [06:05:33]
2016-10-17 21:03:33	qqcore33	[06:05:43] who cares about freenode [06:05:43]
2016-10-17 21:03:33	qqcore33	[06:05:47] fuck rules and shit [06:05:47]
2016-10-17 21:03:33	w33	[06:05:48] yeah, who cares. [06:05:48]
2016-10-17 21:03:33	w33	[06:05:50] yep. [06:05:50]
2016-10-17 21:03:33	qqcore33	[06:06:04] i dont even care about topics and license on source codes and shit [06:06:04]
2016-10-17 21:03:33	Moto-chan	[06:06:06] Then enjoy getting banned/silenced in this channel by the ops ^_^ [06:06:06]
2016-10-17 21:03:33	greenbagels_	[06:06:18] hi Moto-chan :) [06:06:18]
2016-10-17 21:03:33	qqcore33	[06:06:18] i just download edit the author name to my own and I say to my friends that I did it [06:06:18]
2016-10-17 21:03:33	Moto-chan	[06:06:19] As I said, I'm merely playing by the rules of those who run this channel [06:06:19]
2016-10-17 21:03:33	qqcore33	[06:07:06] u ask what the code does? [06:07:06]
2016-10-17 21:03:33	qqcore33	[06:07:18] it bypasses DSE and gives me the opportunity to load unsigned drivers [06:07:18]
2016-10-17 21:03:33	qqcore33	[06:07:25] without patchguard fucking bsoding [06:07:25]
2016-10-17 21:03:33	w3z	[06:20:21] we got us a turd in the punch bowl, a couple of rebels [06:20:21]
2016-10-17 21:03:33	w3z	[06:21:20] !interview [06:21:20]
2016-10-17 21:03:33	nolyc	[06:21:21] Did you know that member functions of a local class shall be defined inline in their class definition, if they are defined at all? [06:21:21]
2016-10-17 21:03:33	Moto-chan	[06:21:49] w3z: Careful! Someone may think that guy is you at a glance! [06:21:49]
2016-10-17 21:03:33	xaxxon	[06:24:06] a "did you know" "yes/no" interview question.   I want to interview there [06:24:06]
2016-10-17 21:03:33	xaxxon	[06:24:23] though I guess it could be a trick questino [06:24:23]
2016-10-17 21:03:33	w3z	[06:24:39] can you explain why if you prefer ..... because local function definitions are not allowed [06:24:39]
2016-10-17 21:03:33	w3z	[06:25:31] even retards want to be like mike [06:25:31]
2016-10-17 21:03:33	Moto-chan	[06:25:34] They're inline inside the class definition because it'd be pretty silly if they weren't :3 [06:25:34]
2016-10-17 21:03:33	w3z	[06:26:47] (though jordan references are sort of dated now, dunno if retards want to be like lebron though) [06:26:47]
2016-10-17 21:03:33	w3z	[06:27:15] !interview [06:27:15]
2016-10-17 21:03:33	nolyc	[06:27:17] When does it matter that the member functions whose names end in _until take an argument that specifies a time point? [06:27:17]
2016-10-17 21:03:33	w3z	[06:27:56] when you want to specify a timeout ... [06:27:56]
2016-10-17 21:03:33	w3z	[06:28:51] !interview [06:28:51]
2016-10-17 21:03:33	nolyc	[06:28:53] Do you often dream about the fact that a class that declares or inherits a virtual function is called a polymorphic class? [06:28:53]
2016-10-17 21:03:33	cbreak	[06:31:47] w3z: when you care about the difference between steady clock and wall clock [06:31:47]
2016-10-17 21:03:33	qqcore33	[06:35:05] w3z: It's only like 50 line all of the makefile [06:35:05]
2016-10-17 21:03:33	urdh	[06:49:40] What kind of an interview question is that? [06:49:40]
2016-10-17 21:03:33	cbreak	[06:50:17] US election interview? [06:50:17]
2016-10-17 21:03:33	Cleroth	[06:51:55] Even bots dream sometimes. [06:51:55]
2016-10-17 21:03:33	fiveflowerzz	[07:01:33] Hi! [07:01:33]
2016-10-17 21:03:33	Moto-chan	[07:01:58] sup [07:01:58]
2016-10-17 21:03:33	fiveflowerzz	[07:02:27] How to know when (in which cases)   mytype x;    automatically assigns it to a zero value? [07:02:27]
2016-10-17 21:03:34	fiveflowerzz	[07:02:52] i.e. for which types are we sure, in C++03, that it is automatically zero when defining it ? [07:02:52]
2016-10-17 21:03:34	velco	[07:02:52] mytype x{}; [07:02:52]
2016-10-17 21:03:34	fiveflowerzz	[07:03:21] velco: can you explain? [07:03:21]
2016-10-17 21:03:34	velco	[07:03:23] "mytype x;" is default initialized; if there is no ctor it won;t be initialized [07:03:23]
2016-10-17 21:03:34	***	Playback Complete.
2016-10-17 21:03:54	velco	in contrast, "mytype x{};" will be zeroed if there is no ctor
2016-10-17 21:04:06	xaxxon	fiveflowerzz, http://stackoverflow.com/a/2218275/493106
2016-10-17 21:04:09	--	Channel created on Fri, 14 Sep 2001 17:15:35
2016-10-17 21:04:11	-->	mijowh (~mijowh@75.97.236.147.res-cmts.leh.ptd.net) has joined ##c++
2016-10-17 21:04:12	velco	(if there is, ofc, the ctor is called and whatever it does that's the initialization)
2016-10-17 21:04:42	<--	mss_cyclist (~MSe@89-250-189-210.tangos.nl) has quit (Ping timeout: 252 seconds)
2016-10-17 21:04:55	fiveflowerzz	xaxxon: thanks!
2016-10-17 21:05:05	fiveflowerzz	example: what happens with: std::valarray<float> z(1024);   ?
2016-10-17 21:05:09	<--	mgaunard_ (~mgaunard@host-92-8-36-190.as43234.net) has quit (Ping timeout: 248 seconds)
2016-10-17 21:05:22	fiveflowerzz	know to know precisely if it's initialized to 0 or not? in which doc should I look?
2016-10-17 21:05:30	<--	dave0x6d (uid190567@gateway/web/irccloud.com/x-gmtgtqfwrnflcobr) has quit (Quit: Connection closed for inactivity)
2016-10-17 21:05:35	fiveflowerzz	I wanted to "read the source" to be sure, but where should I look? :)
2016-10-17 21:05:39	velco	the standard, or cppreference
2016-10-17 21:05:40	xaxxon	the constructor for valarray
2016-10-17 21:05:52	<--	calincru (~calin@141.85.225.205) has quit (Ping timeout: 250 seconds)
2016-10-17 21:05:53	xaxxon	or for std:: it's in the spec
2016-10-17 21:06:02	fiveflowerzz	velco: is cppreference official doc?
2016-10-17 21:06:08	velco	no
2016-10-17 21:06:12	xaxxon	fiveflowerzz, no, but it's quite good
2016-10-17 21:06:12	xaxxon	http://en.cppreference.com/w/cpp/numeric/valarray
2016-10-17 21:06:18	velco	the standard is official
2016-10-17 21:06:26	-->	Sceorem (~Sceorem@xbn44-3-82-232-76-9.fbx.proxad.net) has joined ##c++
2016-10-17 21:06:26	-->	calincru (~calin@141.85.225.205) has joined ##c++
2016-10-17 21:06:36	velco	screw authorities :P
2016-10-17 21:06:51	fiveflowerzz	xaxxon: on this cppreference page, where can I see that std::valarray<float> z(1024);  will be init to 0 ?
2016-10-17 21:06:53	-->	tachoknight__ (~tachoknig@c-73-246-129-13.hsd1.il.comcast.net) has joined ##c++
2016-10-17 21:07:01	xaxxon	http://en.cppreference.com/w/cpp/numeric/valarray/valarray
2016-10-17 21:07:10	-->	mss_cyclist (~MSe@89-250-189-210.tangos.nl) has joined ##c++
2016-10-17 21:07:26	-->	coincoin4ever (~coincoin@178.16.163.28) has joined ##c++
2016-10-17 21:07:29	xaxxon	hrmm... but I odn't know the answer to your next question
2016-10-17 21:07:40	<--	tachoknight_ (~tachoknig@c-73-246-129-13.hsd1.il.comcast.net) has quit (Ping timeout: 260 seconds)
2016-10-17 21:08:14	fiveflowerzz	Here it says : explicit valarray( std::size_t count );
2016-10-17 21:08:14	fiveflowerzz		(2) then     2) Constructs a numeric array with count copies of value-initialized elements.
2016-10-17 21:08:30	fiveflowerzz	how to be sure that "value-initialized elements." means 0 ?
2016-10-17 21:08:34	<--	coincoin4ever (~coincoin@178.16.163.28) has quit (Client Quit)
2016-10-17 21:09:03	velco	the default ctor initialises a valarray with zero elements
2016-10-17 21:09:27	velco	fiveflowerzz: it means 0
2016-10-17 21:09:35	-->	fedepad (~fedepad@eduroam-88-37.zdv.uni-mainz.de) has joined ##c++
2016-10-17 21:09:41	velco	fiveflowerzz: for stuff like float and double
2016-10-17 21:10:02	velco	you can be sure from another part of the standard :)
2016-10-17 21:10:02	-->	Acs (~Acs@host81-152-189-71.range81-152.btcentralplus.com) has joined ##c++
2016-10-17 21:10:17	fiveflowerzz	velco: that's what seems obvious, but I'd like to see it written somewhere :)
2016-10-17 21:10:23	-->	code_zombie_ (~code_zomb@136.63.230.43) has joined ##c++
2016-10-17 21:10:39	xaxxon	well, you know where to look
2016-10-17 21:10:44	fiveflowerzz	in order to take good programming habits of veriying such assumptions
2016-10-17 21:11:03	velco	fiveflowerzz: http://eel.is/c++draft/dcl.init#8
2016-10-17 21:12:15	-->	biberu (~biberu@c-cf2d72d5.08-441-7570702.cust.bredbandsbolaget.se) has joined ##c++
2016-10-17 21:12:31	<--	a3Dman (~3Dman@unaffiliated/a3dman) has quit (Ping timeout: 256 seconds)
2016-10-17 21:12:41	<--	EvilPenguin (~EvilPengu@2605:e000:6189:9600:b42d:b7ce:4c53:a947) has quit (Ping timeout: 260 seconds)
2016-10-17 21:12:58	<--	code_zombie (~code_zomb@136.63.230.43) has quit (Ping timeout: 245 seconds)
2016-10-17 21:14:11	<--	a000a (~plusone@176.24.26.166) has quit (Ping timeout: 252 seconds)
2016-10-17 21:14:54	fiveflowerzz	velco: Thanks  !
2016-10-17 21:15:26	<--	Vinnie_win_u (~TheVinn@pdpc/supporter/gold/thevinn) has quit (Read error: Connection reset by peer)
2016-10-17 21:15:53	<--	mangolisk (~mangolisk@S0106848dc7ebaa06.vc.shawcable.net) has quit (Read error: Connection reset by peer)
2016-10-17 21:15:59	-->	Anodl (~Anodl@213.157.2.74) has joined ##c++
2016-10-17 21:16:11	-->	Vinnie_win (~TheVinn@pdpc/supporter/gold/thevinn) has joined ##c++
2016-10-17 21:16:37	-->	anunnaki (~chris@unaffiliated/anunnaki) has joined ##c++
2016-10-17 21:16:42	-->	kua (~kuahara@cpe-68-201-21-196.sw.res.rr.com) has joined ##c++
2016-10-17 21:17:19	-->	hatter (~hatter@h-90-120.a137.corp.bahnhof.se) has joined ##c++
2016-10-17 21:17:21	-->	mitch0 (~mitch@92-249-145-12.pool.digikabel.hu) has joined ##c++
2016-10-17 21:17:24	-->	Z8050017 (~ASAP@pool-173-63-56-218.nwrknj.fios.verizon.net) has joined ##c++
2016-10-17 21:17:35	-->	mgaunard_ (~mgaunard@host-92-8-36-190.as43234.net) has joined ##c++
2016-10-17 21:17:35	-->	afiefh (afiefh@nat/ibm/x-jglolpddjhjavics) has joined ##c++
2016-10-17 21:17:51	<--	unforgiven512 (~unforgive@freebsd-dev.unforgivendevelopment.com) has quit (Ping timeout: 250 seconds)
2016-10-17 21:18:04	<--	harold (~harold@85-238-17-190.fibertel.com.ar) has quit (Ping timeout: 256 seconds)
2016-10-17 21:18:11	-->	Vincent7 (~NoIdent@dslb-084-063-142-150.084.063.pools.vodafone-ip.de) has joined ##c++
2016-10-17 21:18:11	<--	Lokomotiv (~ASAP@unaffiliated/lokomotiv) has quit (Ping timeout: 256 seconds)
2016-10-17 21:18:17	<--	dyreshark (~george@138.68.21.213) has quit (Ping timeout: 250 seconds)
2016-10-17 21:18:18	<--	mandeep (~mandeep@108.61.226.28) has quit (Ping timeout: 265 seconds)
2016-10-17 21:18:43	<--	Flannel (~flannel@ubuntu/member/flannel) has quit (Ping timeout: 250 seconds)
2016-10-17 21:18:43		[21:18]
2016-10-17 21:18:47	<--	ARCADIVS (~RMM@24-179-11-74.dhcp.leds.al.charter.com) has quit (Ping timeout: 265 seconds)
2016-10-17 21:18:53	-->	harold (~harold@85-238-17-190.fibertel.com.ar) has joined ##c++
2016-10-17 21:19:14	-->	bjz (~bjz@119.225.16.78) has joined ##c++
2016-10-17 21:19:53	-->	Flannel (~flannel@ubuntu/member/flannel) has joined ##c++
2016-10-17 21:19:55	-->	noidea (~noidea@82.79.210.134) has joined ##c++
2016-10-17 21:19:55	<--	noidea (~noidea@82.79.210.134) has quit (Changing host)
2016-10-17 21:19:55	-->	noidea (~noidea@unaffiliated/no-idea/x-0944443) has joined ##c++
2016-10-17 21:20:06	-->	Elysion (~elysion@ppp121-45-81-39.bras1.adl6.internode.on.net) has joined ##c++
2016-10-17 21:20:35	-->	dyreshark (~george@138.68.21.213) has joined ##c++
2016-10-17 21:20:42	-->	mandeep (~mandeep@108.61.226.28) has joined ##c++
2016-10-17 21:20:42	-->	ARCADIVS (~RMM@24-179-11-74.dhcp.leds.al.charter.com) has joined ##c++
2016-10-17 21:20:45	-->	coincoin4ever (~coincoin@178.16.163.28) has joined ##c++
2016-10-17 21:20:48	<--	kuahara (~kuahara@cpe-68-201-21-196.sw.res.rr.com) has quit (Ping timeout: 260 seconds)
2016-10-17 21:21:40	<--	qqcore33 (4d554b85@gateway/web/freenode/ip.77.85.75.133) has quit (Ping timeout: 260 seconds)
2016-10-17 21:21:56	-->	ipronin (~ipronin@96-95-197-97-static.hfc.comcastbusiness.net) has joined ##c++
2016-10-17 21:21:59	-->	hualet (~hualet@118.184.15.164) has joined ##c++
2016-10-17 21:22:02	<--	adempus (~adempus@ool-43529049.dyn.optonline.net) has quit (Remote host closed the connection)
2016-10-17 21:23:14	<--	bjz (~bjz@119.225.16.78) has quit (Client Quit)
2016-10-17 21:23:28	<--	felixi (~mikko@a88-115-27-145.elisa-laajakaista.fi) has quit (Ping timeout: 250 seconds)
2016-10-17 21:24:26	<--	hualet (~hualet@118.184.15.164) has quit (Remote host closed the connection)
2016-10-17 21:24:54	-->	hualet (~hualet@118.184.15.164) has joined ##c++
2016-10-17 21:24:55	-->	unforgiven512 (~unforgive@freebsd-dev.unforgivendevelopment.com) has joined ##c++
2016-10-17 21:24:58	<--	hualet (~hualet@118.184.15.164) has quit (Read error: Connection reset by peer)
2016-10-17 21:25:06	-->	hualet (~hualet@118.184.15.164) has joined ##c++
2016-10-17 21:25:07	<--	hualet (~hualet@118.184.15.164) has quit (Remote host closed the connection)
2016-10-17 21:25:11	<--	Davidbrcz (~david@2a01:cb19:85f3:f300:4eeb:42ff:feca:49af) has quit (Quit: Leaving)
2016-10-17 21:25:26	-->	hualet (~hualet@118.184.15.164) has joined ##c++
2016-10-17 21:25:53	-->	a3Dman (~3Dman@unaffiliated/a3dman) has joined ##c++
2016-10-17 21:26:02	<--	code_zombie_ (~code_zomb@136.63.230.43) has quit (Quit: Leaving)
2016-10-17 21:26:11	-->	bjz (~bjz@119.225.16.78) has joined ##c++
2016-10-17 21:26:41	<--	ipronin (~ipronin@96-95-197-97-static.hfc.comcastbusiness.net) has quit (Ping timeout: 260 seconds)
2016-10-17 21:26:49	<--	crazy_pete (~peter@2602:306:32eb:40d0::49) has quit (Quit: Leaving)
2016-10-17 21:27:01	-->	gnidmoo (~gnidmoo@2a01:e35:2f2c:320:eefe:451c:d8c8:6e3a) has joined ##c++
2016-10-17 21:28:15	<--	mitch0 (~mitch@92-249-145-12.pool.digikabel.hu) has quit (Remote host closed the connection)
2016-10-17 21:28:45	-->	tgrkzus (~tgrkzus@60-242-7-87.static.tpgi.com.au) has joined ##c++
2016-10-17 21:29:14	fiveflowerzz	velco: was this C++11 or C++03 (i couldn't find the title exactly)
2016-10-17 21:29:16	<--	ejbs_ (~ejbs_@ipbcc28f86.dynamic.kabel-deutschland.de) has quit (Quit: ejbs_)
2016-10-17 21:29:44	<--	ReverseBlade (~user@213.74.212.180) has quit (Read error: Connection reset by peer)
2016-10-17 21:30:03	velco	fiveflowerzz: it's the c++17 candidate, the text is present since c++11 at least
2016-10-17 21:30:05	<--	callousf1 (~thraxxus@2602:302:d1fb:3360:bd95:5b97:a9bd:ab10) has quit (Ping timeout: 256 seconds)
2016-10-17 21:30:30	velco	s/at least//
2016-10-17 21:30:45	w3z	yes it was true in 03 as well
2016-10-17 21:31:00	<--	govg (~govg@unaffiliated/govg) has quit (Ping timeout: 250 seconds)
2016-10-17 21:31:04	fiveflowerzz	velco: is there the same for 03?
2016-10-17 21:31:31	velco	you couldn't do netither "float x();"  nor "float x{};" and get value initialisation in '03
2016-10-17 21:31:38	w3z	container elements wree default constructed with T() and for scalar types that meant 0 initialzied
2016-10-17 21:31:57	velco	right
2016-10-17 21:32:29	xaxxon	fiveflowerzz, you should be able to look this up for yourself now that you know what to look for
2016-10-17 21:34:08	velco	fiveflowerzz: yeah, it is present in '03, same text essentially
2016-10-17 21:34:08		[21:34]
2016-10-17 21:36:33	<--	triacontahedron (~quassel@2a02:6b8:0:408:253f:891:aca0:7bf7) has quit (Remote host closed the connection)
2016-10-17 21:38:01	<--	seishun (~Kakera@62.85.100.180) has quit (Ping timeout: 256 seconds)
2016-10-17 21:38:45	-->	Jiwan (~jeangu@212.247.124.2) has joined ##c++
2016-10-17 21:38:49	<--	meth (~meth@unaffiliated/meth) has quit (Ping timeout: 260 seconds)
2016-10-17 21:38:54	-->	Haliucinas (~Haliucina@88-119-97-225.static.zebra.lt) has joined ##c++
2016-10-17 21:40:40	<--	divno (~divno@unaffiliated/divno) has quit (Quit: divno)
2016-10-17 21:40:46	fiveflowerzz	It's not so easy to find the official C++03 standard paper... I only found drafts (and we don't know if they are the official ones or not)
2016-10-17 21:41:24	<--	w3z (~w3z@173-169-121-88.res.bhn.net) has quit (Ping timeout: 250 seconds)
2016-10-17 21:41:27	urdh	fiveflowerzz, you can buy the official standard from ISO
2016-10-17 21:41:46	urdh	but just use the last draft before the standard, it's essentially the same
2016-10-17 21:42:17	<--	ferdna (~ferdna@cpe-69-23-141-130.elp.res.rr.com) has quit (Quit: Leaving)
2016-10-17 21:42:46	-->	mitch0 (~mitch@92-249-145-12.pool.digikabel.hu) has joined ##c++
2016-10-17 21:43:05	-->	RebelCoder (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has joined ##c++
2016-10-17 21:43:06	-->	lsk (~lsk@enucs/member/lsk) has joined ##c++
2016-10-17 21:43:45	<--	Amperture (~Amp@24-136-5-183.c3-0.fld-ubr1.chi-fld.il.cable.rcn.com) has quit (Ping timeout: 258 seconds)
2016-10-17 21:44:21	-->	GavinMagnus (~simon@194.254.61.161) has joined ##c++
2016-10-17 21:44:52	-->	MulleDK19 (MulleDK19@unaffiliated/mulledk19) has joined ##c++
2016-10-17 21:45:01	<--	hualet (~hualet@118.184.15.164) has quit (Remote host closed the connection)
2016-10-17 21:45:15	-->	w3z (~w3z@173-169-121-88.res.bhn.net) has joined ##c++
2016-10-17 21:45:29	-->	hualet (~hualet@118.184.15.164) has joined ##c++
2016-10-17 21:45:54	fiveflowerzz	urdh: i googled, but didn't find an authoritative source for c++03
2016-10-17 21:46:01	fiveflowerzz	except ISO, which seems to be non free?
2016-10-17 21:46:15	<--	blueness (~blueness@gentoo/developer/blueness) has quit (Quit: blueness)
2016-10-17 21:46:28	urdh	well yes, the actual standard costs money
2016-10-17 21:46:52	<--	mountaingoat (~mountaing@unaffiliated/mountaingoat) has quit (Ping timeout: 250 seconds)
2016-10-17 21:47:20	urdh	don't know what draft might be the closest approximation to the c++03 standard though, sorry
2016-10-17 21:47:41	<--	pa (~pa@unaffiliated/pa) has quit (Ping timeout: 260 seconds)
2016-10-17 21:47:42	<--	Goplat (~goplat@reactos/developer/Goplat) has quit (Remote host closed the connection)
2016-10-17 21:48:01	-->	drozdziak1 (~drozdziak@do-atman.cubiware.com) has joined ##c++
2016-10-17 21:48:27	-->	hualet_ (~hualet@118.184.15.164) has joined ##c++
2016-10-17 21:48:49	-->	blueness (~blueness@gentoo/developer/blueness) has joined ##c++
2016-10-17 21:49:00	-->	PlasmaHH (~plasmahh@213.61.9.75) has joined ##c++
2016-10-17 21:49:50	<--	hualet (~hualet@118.184.15.164) has quit (Read error: Connection reset by peer)
2016-10-17 21:49:50		[21:49]
2016-10-17 21:50:02	-->	achauvin (~achauvin@nat-wifi-etu-3.univ-rouen.fr) has joined ##c++
2016-10-17 21:50:20	-->	issac (~issac@39.130.82.128) has joined ##c++
2016-10-17 21:50:29	<--	RebelCoder (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has quit (Ping timeout: 256 seconds)
2016-10-17 21:50:47	--	irc: disconnected from server
2016-10-18 00:14:19	-->	alyptik (~alyptik@unaffiliated/alyptik) has joined ##c++
2016-10-18 00:14:19		[00:14]
2016-10-18 00:14:19	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || https://isocpp.org/faq || pastes: http://melpon.org/wandbox"
2016-10-18 00:14:19	--	Topic set by V-ille (~ville@81-175-149-170.bb.dnainternet.fi) on Fri, 18 Sep 2015 07:13:01
2016-10-18 00:14:20	--	Channel ##c++: 976 nicks (0 ops, 0 voices, 976 normals)
2016-10-18 00:14:20	***	Buffer Playback...
2016-10-18 00:14:20	V-ille	[09:06:50] casting the vectors won't [09:06:50]
2016-10-18 00:14:20	xaxxon	[09:06:53] Waynes, the vectors aren't compatible [09:06:53]
2016-10-18 00:14:20	xaxxon	[09:07:08] the data inside them may be, but you cannot pass it to something that wants a vector of the other type [09:07:08]
2016-10-18 00:14:20	V-ille	[09:07:28] you need to get a span type from the future [09:07:28]
2016-10-18 00:14:20	xaxxon	[09:07:28] you can't even change the constness of the element type [09:07:28]
2016-10-18 00:14:20	Waynes	[09:08:22] ok, but thanks anyway [09:08:22]
2016-10-18 00:14:20	AbleBacon	[09:08:52] the irony is that 'char' and 'unsigned char' could actually be stored identically on your system [09:08:52]
2016-10-18 00:14:20	xaxxon	[09:09:38] AbleBacon, but can they be stored ironically? [09:09:38]
2016-10-18 00:14:20	ville	[09:09:50] so what's the deal with ranges, spans and views? lot of it seems to be just naming the same thing differently? [09:09:50]
2016-10-18 00:14:20	ville	[09:12:11] what's the relation between the three? some sort of hierarchy or more like a venn diagramm with some overlap? [09:12:11]
2016-10-18 00:14:20	w3z	[09:21:00] <<i,S::v; struct S{static int v; int f(int x=S::v){return x;}}; int i=S{}.f(); int g(){return 42;}  int S::v=g(); //contrived dynamic init brokenness [09:21:00]
2016-10-18 00:14:20	geordi	[09:21:01] 0, 42 [09:21:01]
2016-10-18 00:14:20	AbleBacon	[09:21:58] why would you ever want to 'union' an 'int' and a 'float'? [09:21:58]
2016-10-18 00:14:20	urdh	[09:22:31] because some people think they are allowed to read the bit representation of a float that way [09:22:31]
2016-10-18 00:14:20	urdh	[09:22:42] but that doesn't make sense with plain int, so i dunno [09:22:42]
2016-10-18 00:14:20	bumbar	[09:22:43] i'm getting undefined reference to template member function inside a nested class. function is specialized and defined in the header file, http://ideone.com/TJz3bP [09:22:43]
2016-10-18 00:14:20	urdh	[09:23:33] !give bumbar testcase [09:23:33]
2016-10-18 00:14:20	nolyc	[09:23:34] bumbar: A testcase is the _least_ amount of code that replicates your problem, paste it to http://coliru.stacked-crooked.com and give us the link. Do _not_ paste code to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/ [09:23:34]
2016-10-18 00:14:20	urdh	[09:23:47] bumbar: that doesn't reproduce whatever error you are seeing [09:23:47]
2016-10-18 00:14:20	AbleBacon	[09:24:00] yeah... in fact, it seems to be running fine... [09:24:00]
2016-10-18 00:14:20	bumbar	[09:24:47] urdh, it's split across multiple files [09:24:47]
2016-10-18 00:14:20	dminuoso_	[09:25:02] AbleBacon: There could be plenty reasons. One obvious could be that you're implementing a variant type, then a union is a great place to start. [09:25:02]
2016-10-18 00:14:20	urdh	[09:25:10] bumbar, use wandbox then [09:25:10]
2016-10-18 00:14:20	urdh	[09:25:18] http://melpon.org/wandbox/ [09:25:18]
2016-10-18 00:14:20	w3z	[09:25:50] hah someone broke clangs stdlib on wandbox, tsk tsk [09:25:50]
2016-10-18 00:14:20	urdh	[09:26:22] lol wtf [09:26:22]
2016-10-18 00:14:20	urdh	[09:27:03] only Clang HEAD though [09:27:03]
2016-10-18 00:14:20	dminuoso_	[09:27:28] Will a union always align the data according to the type with the largest alignment requirement? [09:27:28]
2016-10-18 00:14:20	w3z	[09:27:31] including string or iostream, seems to lead to conflicting definitions of swap errors, though they look the same in the error text [09:27:31]
2016-10-18 00:14:20	urdh	[09:27:51] that's what you get when you don't have gated commits with good regression tests [09:27:51]
2016-10-18 00:14:20	w3z	[09:28:18] it was probably EricWF's fault :) [09:28:18]
2016-10-18 00:14:20	urdh	[09:29:33] dminuoso_, http://eel.is/c++draft/class.union#2 [09:29:33]
2016-10-18 00:14:20	urdh	[09:29:39] so, uh, "maybe"? [09:29:39]
2016-10-18 00:14:20	urdh	[09:30:48] i can't read standardese, but it sounds like it has to since all members share address [09:30:48]
2016-10-18 00:14:20	dminuoso_	[09:32:04] Are such notes normative? [09:32:04]
2016-10-18 00:14:20	dminuoso_	[09:32:19] (I thought that notes without exceptions are non-normative in ISO) [09:32:19]
2016-10-18 00:14:20	urdh	[09:32:42] well, they are I suppose [09:32:42]
2016-10-18 00:14:20	urdh	[09:32:59] but check what the note refers to as well [09:32:59]
2016-10-18 00:14:20	bumbar	[09:33:36] urdh, i can't reproduce it, but the structure is the same, http://melpon.org/wandbox/permlink/xe0IOV0ufAsedldw [09:33:36]
2016-10-18 00:14:20	dminuoso_	[09:34:21] urdh: I wonder if two union members are considered to be layout compatible then. [09:34:21]
2016-10-18 00:14:20	dminuoso_	[09:34:59] That according to [basic.compound] would mean that a pointer to each would hvae the same alignment. [09:34:59]
2016-10-18 00:14:20	dminuoso_	[09:35:40] urdh: Ohhh [expr.static.cast] is the key. [09:35:40]
2016-10-18 00:14:20	dminuoso_	[09:35:59] urdh: [...] If the original pointer value represents the address A of a byte in memory and A does not satisfy the alignment requirement of T, then the resulting pointer value is unspecified. Otherwise, if the original pointer value points to an object a, and there is an object b of type T (ignoring cv-qualification) that is pointer-interconvertible ([basic.compound]) with a, the result is a pointer to b. [09:35:59]
2016-10-18 00:14:20	dminuoso_	[09:36:05] [...] [09:36:05]
2016-10-18 00:14:20	dminuoso_	[09:36:44] urdh: And according to iso http://www.iso.org/schema/isosts/v1.1/doc/n-6ew0.html notes are indeed without exception non-normative. [09:36:44]
2016-10-18 00:14:20	elsewho	[09:45:59] hi, how can i deduce the type of a lambda expression C++11, or is it depending on the compiler implementation? [09:45:59]
2016-10-18 00:14:20	velco	[09:47:54] just like you deduce othre types: pass the lambda to a function template [09:47:54]
2016-10-18 00:14:20	w3z	[09:48:16] how old fashioned :) [09:48:16]
2016-10-18 00:14:20	pqpqpq66	[10:05:47] hi [10:05:47]
2016-10-18 00:14:20	klys	[10:10:24] hi... [10:10:24]
2016-10-18 00:14:20	***	Playback Complete.
2016-10-18 00:14:28	--	Channel created on Fri, 14 Sep 2001 17:15:35
2016-10-18 00:14:41	-->	afiefh (~afiefh@195.110.40.242) has joined ##c++
2016-10-18 00:14:52	<--	hualet (~hualet@118.184.15.164) has quit (Ping timeout: 256 seconds)
2016-10-18 00:17:02	<--	unK_ (~drunK@host-81-190-235-217.dynamic.mm.pl) has quit (Ping timeout: 244 seconds)
2016-10-18 00:17:18	-->	rockstar__ (~rockstar@cpe-72-224-119-105.nycap.res.rr.com) has joined ##c++
2016-10-18 00:17:42	AStorm	hello, I'm trying to write a member function returning a lambda in (what I think is) C++14 (as implemented by gcc 4.9.x), but compiler cries about auto return type
2016-10-18 00:17:54	AStorm	ditto with decltype(auto)
2016-10-18 00:18:43	-->	Rudolf (~rodolfo@unaffiliated/rudolf) has joined ##c++
2016-10-18 00:18:49	AStorm	something like: class Foo { auto returnLambda() { return [this](int) { ... }; } };
2016-10-18 00:19:07	-->	Zunino (~Zunino@201.90.236.42) has joined ##c++
2016-10-18 00:19:31	klys	I have a member function that returns lambdas in this snippet I've been editing all day
2016-10-18 00:19:49	AStorm	compiler says something cryptic like: error: use of 'decltype(auto) makeEventHandler(const char*, const string&)' before deduction of 'auto'
2016-10-18 00:19:55	AStorm	ditto without decltype
2016-10-18 00:20:09	AStorm	which looks to be bunkum
2016-10-18 00:20:23	urdh	dminuoso_: sorry, i went for lunch
2016-10-18 00:20:33	AStorm	because the use is as parameter to a function with clearly defined type
2016-10-18 00:20:44	klys	if you're using auto you should replace it with the type you mean
2016-10-18 00:20:47	-->	slawas (~slawas@postfw01.ps01.plo.tdch.dk) has joined ##c++
2016-10-18 00:20:50	urdh	but the conclusion was that they have to be aligned, otherwise static_cast is unspecified?
2016-10-18 00:21:07	AStorm	klys: that does not work with lambdas d'oh
2016-10-18 00:21:14	AStorm	lambdas have no explicit type
2016-10-18 00:21:30	<--	NixTravel (~Nix@2001:690:2200:9ac1:34f8:1:38c0:108c) has quit (Quit: Leaving)
2016-10-18 00:21:37	AStorm	read the whole question next time
2016-10-18 00:21:48	<--	ARCADIVS (~RMM@24-179-11-74.dhcp.leds.al.charter.com) has quit (Quit: ARCADIVS)
2016-10-18 00:21:54	AStorm	(yes, I could return something like std::function but that's not what I asked)
2016-10-18 00:21:56	klys	I believe the compiler is aware of the type, and so should you be.
2016-10-18 00:22:04	AStorm	yes, but the lambda type is special
2016-10-18 00:22:31	AStorm	feel free to read up on type of lambda in the standard
2016-10-18 00:22:34	-->	yo5phz (~yo5phz___@83.103.155.5) has joined ##c++
2016-10-18 00:22:38	urdh	dminuoso_: I feel like it's kind of moot anyway because you're only allowed to have one active member at a time (modulo structs with a base), so does it even matter?
2016-10-18 00:22:39	-->	bjz (~bjz@pa49-185-229-147.pa.vic.optusnet.com.au) has joined ##c++
2016-10-18 00:22:43	AStorm	what I'm actually asking is if I am doing something wrong or g++ 4.9 is broken
2016-10-18 00:23:11	<--	slawas (~slawas@postfw01.ps01.plo.tdch.dk) has left ##c++
2016-10-18 00:23:12	<--	rriemann (~rriemann@dhcp-67-135.ixxi.ens-lyon.fr) has quit (Ping timeout: 260 seconds)
2016-10-18 00:23:38	dminuoso_	urdh: Ahh.
2016-10-18 00:23:39	klys	are you sure [this] makes sense?
2016-10-18 00:23:40	AStorm	to make the case more interesting, I'm trying to use that lambda returning member function in the constructor
2016-10-18 00:23:50	AStorm	it should always make sense, it's a Foo*
2016-10-18 00:24:04	AStorm	and yes, it's a member function
2016-10-18 00:24:09	dminuoso_	urdh: Is there actually no supported way to force type punning in C++ then?
2016-10-18 00:24:27	dminuoso_	(I kept thinking it was legal since its allowed in C since Csomething)
2016-10-18 00:24:35	dminuoso_	(Other than memcpying I mean)
2016-10-18 00:25:12	urdh	I think taking a detour through char* is allowed but I'm not sure
2016-10-18 00:25:27	AStorm	no, detour through char* is not quite allowed anymore
2016-10-18 00:25:45	AStorm	only union seems to be
2016-10-18 00:25:51	urdh	well it aliases so that's not ok technically
2016-10-18 00:25:59	AStorm	s/technically//
2016-10-18 00:26:34	Adrinael	Accessing union members that are not active is UB too
2016-10-18 00:26:40	urdh	s/technically/according to the standard, but if will probably(TM) work with -fno-strict-aliasing/
2016-10-18 00:28:04	-->	NixTravel_1 (~Nix@2001:690:2200:9ac1:34f8:1:38c0:108c) has joined ##c++
2016-10-18 00:28:05	klys	astorm, https://ideone.com/sphB6b
2016-10-18 00:29:04	<--	NixTravel_1 (~Nix@2001:690:2200:9ac1:34f8:1:38c0:108c) has quit (Client Quit)
2016-10-18 00:29:04	urdh	anyway it seems like the real answer would be a combination of union and pointer casting, but only sometimes?
2016-10-18 00:29:07	urdh	http://stackoverflow.com/questions/346622/opinions-on-type-punning-in-c#346675
2016-10-18 00:29:07	-->	S4nD3r (~Nix@2001:690:2200:9ac1:34f8:1:38c0:108c) has joined ##c++
2016-10-18 00:29:17	S4nD3r	Hi
2016-10-18 00:29:20	klys	hi
2016-10-18 00:29:20		[00:29]
2016-10-18 00:29:34	S4nD3r	finally I'm back! I was having some problems to connect
2016-10-18 00:29:50	S4nD3r	By the way, I need a little help to store in a txt file the vector of vectors content. The snippet is at http://paste.ubuntu.com/23342947/
2016-10-18 00:29:56	urdh	but in general I think what the standard is trying to make you do is not care about the bit representation, and explicitly implement your conversions instead
2016-10-18 00:30:31	urdh	also sorry about the SO link, it refers to a deleted answer :(
2016-10-18 00:30:33	<--	callousf1 (~thraxxus@2602:302:d1fb:3360:d00f:6fad:4160:a104) has quit (Ping timeout: 260 seconds)
2016-10-18 00:30:53	velco	dminuoso_: I'v come to this approach to type punning http://ideone.com/P01BEv
2016-10-18 00:31:06	<--	shirt (~shirt@adsl-v01-3db14831dc15da1b.tau.ac.il) has quit (Ping timeout: 247 seconds)
2016-10-18 00:31:52	urdh	tl;dr don't do type-punning if you can avoid it
2016-10-18 00:33:07	velco	don't write any code if you can avoid it, that is, if you get the job done without it :)
2016-10-18 00:33:26	<--	Carbonflux (~Bob@75-172-112-206.tukw.qwest.net) has quit (Quit: Leaving)
2016-10-18 00:33:36	dminuoso_	urdh: Well realistically if you pun through a char pointer explicitly, compilers will behave as I have learned from velco. :)
2016-10-18 00:33:41	<--	Bellator (~Bellator@D93FF597.cm-21.dynamic.ziggo.nl) has quit (Ping timeout: 256 seconds)
2016-10-18 00:33:46	velco	perfect device - the one does not exist yet does its function
2016-10-18 00:33:53	urdh	what I meant was if you're e.g. reading uint32s from a stream of uint8s, implement it with bit shifts and whatnot instead of type-punning
2016-10-18 00:33:59	dminuoso_	velco: It's an interesting approach that you just showed.
2016-10-18 00:34:10	w3z	if youre targetting 2011, youre sol, unless you have the capturing lambda type information somehow
2016-10-18 00:34:19	w3z	in 2014+ its simple
2016-10-18 00:34:19	velco	it weasels around the non-active union member
2016-10-18 00:34:49	w3z	{S{}.f()();} struct S{auto f(){return [this]{BARK;};}};
2016-10-18 00:34:49	<--	zwliew (uid161395@gateway/web/irccloud.com/x-uodnjhrjasibiihm) has quit (Ping timeout: 256 seconds)
2016-10-18 00:34:50	geordi	S::f()::<lambda()>
2016-10-18 00:34:50	dminuoso_	velco: So you "leak" the old object, and create a new one ontop of it with a new active type right?
2016-10-18 00:34:52	urdh	velco, i feel like that's not ok somehow, but I can't back that up :(
2016-10-18 00:35:03	velco	dminuoso_: yes
2016-10-18 00:35:06	velco	urdh: yes :)
2016-10-18 00:35:10	-->	zwliew (uid161395@gateway/web/irccloud.com/x-ipvlbzlokyqrfvwz) has joined ##c++
2016-10-18 00:35:24	dminuoso_	velco: I like it.
2016-10-18 00:35:52	dminuoso_	Though I think Ill just stick with __attribute__((__may_alias__)) and reinterpret_cast like a madman in the few places where I need it.
2016-10-18 00:36:06	dminuoso_	(That union trick is just too verbose for my taste)
2016-10-18 00:36:11	w3z	sounds like a job for launder, 17 here to clean up old messes
2016-10-18 00:36:11	w3z	http://en.cppreference.com/w/cpp/utility/launder
2016-10-18 00:36:13	-->	orbiter (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has joined ##c++
2016-10-18 00:36:17	-->	alhariel (~wolfcub@177.131.178.156) has joined ##c++
2016-10-18 00:36:51	w3z	its much too late tonight for me to think about your union shenanigans
2016-10-18 00:36:56	dminuoso_	w3z: Oh. What is that! :o
2016-10-18 00:37:12	<--	orbiter2 (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has quit (Ping timeout: 260 seconds)
2016-10-18 00:37:36	-->	Elysion (~elysion@ppp121-45-81-39.bras1.adl6.internode.on.net) has joined ##c++
2016-10-18 00:37:37	dminuoso_	w3z: Mmm cppreference says that the type of X is the same as T, ignoring cv-qualifiers.
2016-10-18 00:37:46	-->	karab44 (~karab44@unaffiliated/karab44) has joined ##c++
2016-10-18 00:37:49	-->	shirty (~shirty@155.170-247-81.adsl-dyn.isp.belgacom.be) has joined ##c++
2016-10-18 00:38:38	-->	Neslepaks (~Neslepaks@178.61.71.85) has joined ##c++
2016-10-18 00:38:57	<--	hariel (~wolfcub@177.131.178.156) has quit (Ping timeout: 260 seconds)
2016-10-18 00:39:20	<--	Neslepaks (~Neslepaks@178.61.71.85) has left ##c++
2016-10-18 00:40:20	<--	brwsr (~textual@193.108.76.86) has quit (Ping timeout: 265 seconds)
2016-10-18 00:42:35	urdh	velco, operator new says "If initializer is absent, the object is default-initialized", so won't the new union instance technically have an unspecified value?
2016-10-18 00:42:46	<--	ReverseBlade (~user@213.74.212.180) has quit (Read error: Connection reset by peer)
2016-10-18 00:43:06	<--	c0le (~c0le@59.99.251.45) has quit (Quit: "This is the end.. My beautiful friend.. The end.")
2016-10-18 00:43:26	velco	maybe
2016-10-18 00:43:39	velco	maybe some -fsanitize= option can break this
2016-10-18 00:45:05	-->	ReverseBlade (~user@213.74.212.180) has joined ##c++
2016-10-18 00:45:05		[00:45]
2016-10-18 00:45:24	<--	kilbith (4ee51c3e@gateway/web/cgi-irc/kiwiirc.com/ip.78.229.28.62) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-10-18 00:45:24	<--	LuckySavage7 (~Savage@47-33-169-74.dhcp.mdfd.or.charter.com) has quit (Ping timeout: 250 seconds)
2016-10-18 00:45:48	-->	kamog (~user@95.72.59.107) has joined ##c++
2016-10-18 00:46:41	velco	it kinda relies on the compiler doing nothing, just like you rely on the compiler not inserting  arbitrarily inserting finite empty loops in your program :)
2016-10-18 00:47:36	<--	bjz (~bjz@pa49-185-229-147.pa.vic.optusnet.com.au) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-10-18 00:47:41	-->	brwsr (~textual@193.108.76.86) has joined ##c++
2016-10-18 00:47:45	dminuoso_	Let's entertain that thought for a moment, velco. Where would you rely on this?
2016-10-18 00:48:17	velco	dminuoso_: rely on which one ?
2016-10-18 00:48:23	dminuoso_	I mean arbitrarily long finite empty loops have no visible side effects, do they?
2016-10-18 00:48:44	urdh	define "visible"
2016-10-18 00:49:12	urdh	if I depend on my application sending an UDP packet often enough, it will have side effects I can see ;)
2016-10-18 00:49:44	urdh	(but I guess that would technically be a QoI issue)
2016-10-18 00:51:25	-->	calincru (~calin@p22.eregie.pub.ro) has joined ##c++
2016-10-18 00:52:02	dminuoso_	Okay that's still a fair point I guess.
2016-10-18 00:52:12	<--	brwsr (~textual@193.108.76.86) has quit (Ping timeout: 260 seconds)
2016-10-18 00:52:31	-->	zap0 (~moofy@14-201-222-143.tpgi.com.au) has joined ##c++
2016-10-18 00:52:44	-->	brwsr (~textual@176.227.200.90) has joined ##c++
2016-10-18 00:53:33	<--	brwsr (~textual@176.227.200.90) has quit (Client Quit)
2016-10-18 00:54:17	-->	c0le (~c0le@59.99.251.45) has joined ##c++
2016-10-18 00:54:29	-->	rorro (~rorro@c-227-137.eduroam.liu.se) has joined ##c++
2016-10-18 00:55:12	-->	oddRaven (~Ravenous@ip4da2344f.direct-adsl.nl) has joined ##c++
2016-10-18 00:55:40	<--	oddRaven (~Ravenous@ip4da2344f.direct-adsl.nl) has left ##c++ ("Leaving")
2016-10-18 00:56:18	<--	HerzogDeXtEr (~farci@i59F6B8AE.versanet.de) has quit (Read error: Connection reset by peer)
2016-10-18 00:56:57	<--	CoolBreeze (~CoolBreez@120.88.159.151) has quit (Remote host closed the connection)
2016-10-18 00:57:17	-->	brwsr (~textual@176.227.200.90) has joined ##c++
2016-10-18 00:57:26	-->	CoolBreeze (~CoolBreez@109.201.138.247) has joined ##c++
2016-10-18 00:58:34	-->	hualet (~hualet@118.184.15.164) has joined ##c++
2016-10-18 00:58:53	-->	gareppa (~gareppa@151.31.43.18) has joined ##c++
2016-10-18 01:00:04	<--	kbdkode (~kbdkode@unaffiliated/kbdkode) has quit (Ping timeout: 260 seconds)
2016-10-18 01:01:20	-->	bjz (~bjz@14-201-215-168.tpgi.com.au) has joined ##c++
2016-10-18 01:01:20		[01:01]
2016-10-18 01:06:16	-->	Wit4r7 (~Wit4r7@wlan-141-23-74-131.tubit.tu-berlin.de) has joined ##c++
2016-10-18 01:06:56	-->	irrenhaus3 (~xenon@HSI-KBW-046-005-253-025.hsi8.kabel-badenwuerttemberg.de) has joined ##c++
2016-10-18 01:08:43	<--	dh (dh@bsd.ee) has quit (Read error: Connection reset by peer)
2016-10-18 01:09:46	-->	chris64 (~chris@unaffiliated/chris64) has joined ##c++
2016-10-18 01:09:51	<--	bazrush (~bazrush@149.152.238.178.in-addr.arpa) has quit
2016-10-18 01:10:39	chris64	is std::function the only way despite templates to pass a lambda as an argument to a function?
2016-10-18 01:11:18	Adrinael	Yes, the type of a lambda is quite unspecified
2016-10-18 01:11:33	Adrinael	Type erasure via std::function or templates or auto is your friend
2016-10-18 01:11:53	Adrinael	For some lambdas you can grab it as a function pointer but meh
2016-10-18 01:11:55	velco	you can pass an ordinary function pointer
2016-10-18 01:11:55	<--	Wit4r7 (~Wit4r7@wlan-141-23-74-131.tubit.tu-berlin.de) has quit (Quit: Leaving)
2016-10-18 01:12:00	chris64	auto arguments are up to C++17, right?
2016-10-18 01:12:04	va	std::function just grabs that ordinary function pointer
2016-10-18 01:12:09	<--	hualet (~hualet@118.184.15.164) has quit (Remote host closed the connection)
2016-10-18 01:12:28	<--	alhariel (~wolfcub@177.131.178.156) has quit (Quit: Leaving)
2016-10-18 01:12:29	chris64	I think I read that one cannot pass a lambda as an function ptr argument on stackoverflow
2016-10-18 01:12:37	-->	hualet (~hualet@118.184.15.164) has joined ##c++
2016-10-18 01:12:40	-->	bazrush (~bazrush@149.152.238.178.in-addr.arpa) has joined ##c++
2016-10-18 01:12:45	Adrinael	Not just any lambda
2016-10-18 01:12:45	chris64	so that's wrong? maybe I midread it
2016-10-18 01:12:54	-->	CtrlC (~CtrlC@unaffiliated/ctrlc) has joined ##c++
2016-10-18 01:13:02	-->	jiik (~antankh@wf124-051.ust.hk) has joined ##c++
2016-10-18 01:13:02	chris64	Adrinael: what do you mean by 'not just any'?
2016-10-18 01:13:04	-->	vinnie92_ (uid189878@gateway/web/irccloud.com/x-dpfbmmgwyycgltfj) has joined ##c++
2016-10-18 01:13:05	va	{ qsort(NULL,0,0,[](const void *a, const void *b) -> int { return 0; }); }
2016-10-18 01:13:05	geordi	warning: null argument where non-null required (argument 1)
2016-10-18 01:13:16	va	chris64: of course one can pass a lambda as a function ptr argument ^
2016-10-18 01:13:25	Adrinael	chris64, a lambda without captures converts to a function pointer
2016-10-18 01:13:32	-->	iceiceice (~chris@pool-173-61-153-221.cmdnnj.fios.verizon.net) has joined ##c++
2016-10-18 01:13:34	Adrinael	But captures are nice
2016-10-18 01:13:37	chris64	ah, okay
2016-10-18 01:13:45	chris64	Adrinael: yes indeed
2016-10-18 01:13:46	xaxxon	is this code valid?  https://godbolt.org/g/BbJuQF    works with clang, not with gcc
2016-10-18 01:13:47	<--	iceiceice (~chris@pool-173-61-153-221.cmdnnj.fios.verizon.net) has quit (Changing host)
2016-10-18 01:13:47	-->	iceiceice (~chris@unaffiliated/iceiceice) has joined ##c++
2016-10-18 01:14:08	-->	fogbank (~foggy@88.147.42.198) has joined ##c++
2016-10-18 01:14:11	xaxxon	it doesn't like the lambda in the inline initialization -- says it didn't/can't capture 'this'
2016-10-18 01:14:15	chris64	but std::function has a performance impact, right?
2016-10-18 01:14:21	biberu	chris64: you can let the type of the function be deduced, if that's what you want?
2016-10-18 01:14:24	-->	dh (~dh@bsd.ee) has joined ##c++
2016-10-18 01:14:30	xaxxon	chris64, many
2016-10-18 01:14:45	chris64	biberu: no, because it's in another compilation unit
2016-10-18 01:15:11	chris64	so it cannot be a template
2016-10-18 01:15:15	-->	MaBunny (~Peter@117.194.200.242) has joined ##c++
2016-10-18 01:15:26	<--	Melite (~Melite@cpe-45-49-134-161.socal.res.rr.com) has quit (Quit: Leaving)
2016-10-18 01:15:38	<--	MaBunny (~Peter@117.194.200.242) has quit (Max SendQ exceeded)
2016-10-18 01:15:59	-->	MaBunny (~Peter@117.194.200.242) has joined ##c++
2016-10-18 01:16:06	chris64	do you mean by captures reference captures or those by copy?
2016-10-18 01:16:12	xaxxon	any
2016-10-18 01:16:16	chris64	mh
2016-10-18 01:16:30	<--	MaBunny (~Peter@117.194.200.242) has quit (Max SendQ exceeded)
2016-10-18 01:16:30		[01:16]
2016-10-18 01:16:31	va	xaxxon: well you have a static initializer there
2016-10-18 01:16:38	xaxxon	va yah
2016-10-18 01:16:41	<--	GinoMan (~GinoMan@2601:41:c101:487a:61f1:405b:8bf5:e3d5) has quit (Read error: Connection reset by peer)
2016-10-18 01:16:57	-->	MaBunny (~Peter@117.194.200.242) has joined ##c++
2016-10-18 01:17:03	velco	"double z = [this] { return x * x + y * y; }();"
2016-10-18 01:17:06	<--	MaBunny (~Peter@117.194.200.242) has quit (Max SendQ exceeded)
2016-10-18 01:17:08	<--	hualet (~hualet@118.184.15.164) has quit (Ping timeout: 245 seconds)
2016-10-18 01:17:10	velco	but no idea if the orignal is valid or not
2016-10-18 01:17:10	-->	GinoMan (~GinoMan@2601:41:c101:487a:61f1:405b:8bf5:e3d5) has joined ##c++
2016-10-18 01:17:14	-->	alhariel (~wolfcub@177.131.178.156) has joined ##c++
2016-10-18 01:17:30	-->	blackbeard420 (~blackbear@dynamic-acs-24-154-171-60.zoominternet.net) has joined ##c++
2016-10-18 01:18:07	velco	I vaguely remember something about capturing this in the std ... *goes to look it up*
2016-10-18 01:19:00	xaxxon	"Reference members cannot be bound to temporaries in a default member initializer" is this relevant?
2016-10-18 01:19:04	xaxxon	nm
2016-10-18 01:19:06	-->	Wit4r7 (~Wit4r7@wlan-141-23-74-131.tubit.tu-berlin.de) has joined ##c++
2016-10-18 01:19:22	-->	rriemann (~rriemann@dhcp-67-135.ixxi.ens-lyon.fr) has joined ##c++
2016-10-18 01:19:49	xaxxon	w3z, where are you?  I *NEEEEED* you, baby
2016-10-18 01:19:50	<--	Wit4r7 (~Wit4r7@wlan-141-23-74-131.tubit.tu-berlin.de) has quit (Client Quit)
2016-10-18 01:21:26	velco	"A lambda-expression appearing in a default argument shall not implicitly or explicitly capture any entity"
2016-10-18 01:21:39	velco	oh, ignore me
2016-10-18 01:21:58	velco	(the example resembled member initializers)
2016-10-18 01:22:33	<--	Bigcheese (~quassel@unaffiliated/bigcheese) has quit (Ping timeout: 260 seconds)
2016-10-18 01:22:52	<--	felixi (~mikko@a88-115-27-145.elisa-laajakaista.fi) has quit (Ping timeout: 265 seconds)
2016-10-18 01:23:38	<--	FreeBirdLjj (~freebirdl@223.65.168.113) has quit (Remote host closed the connection)
2016-10-18 01:24:22	xaxxon	interestingly, if you move the struct outside of main, it works fine in gcc
2016-10-18 01:24:33	xaxxon	https://godbolt.org/g/ILPXOp
2016-10-18 01:24:45	xaxxon	which makes me think it's a gcc bug... but I don't know all the rules
2016-10-18 01:25:03	<--	damme (~damme@2001:16d8:cc75::802) has quit (Ping timeout: 245 seconds)
2016-10-18 01:25:05	xaxxon	but I've never heard of anything inside a class definition that cared about where it was if it didn't have external dependencies
2016-10-18 01:25:34	xaxxon	and it's since been reported: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=78019
2016-10-18 01:27:38	<--	logan_e__ (uid164592@gateway/web/irccloud.com/x-tbldhmwfnumfxqcc) has quit (Quit: Connection closed for inactivity)
2016-10-18 01:27:59	-->	jcelerier1 (~jcelerier@APoitiers-651-1-144-113.w86-201.abo.wanadoo.fr) has joined ##c++
2016-10-18 01:28:13	<--	uuplusu (~uuplusu@183.157.160.46) has quit (Quit: Leaving...)
2016-10-18 01:28:27	-->	Ruzzy (~justin@CPE-120-147-39-181.cjym2.win.bigpond.net.au) has joined ##c++
2016-10-18 01:28:32	Ruzzy	hello
2016-10-18 01:28:35	-->	TikityTik (~TikityTik@162.223.44.49) has joined ##c++
2016-10-18 01:28:59	-->	Bigcheese (~quassel@unaffiliated/bigcheese) has joined ##c++
2016-10-18 01:29:07	klys	hi
2016-10-18 01:29:29	velco	in all these case removing this fails compilation https://godbolt.org/g/8GwMWX
2016-10-18 01:30:28	<--	CoolBreeze (~CoolBreez@109.201.138.247) has quit (Ping timeout: 245 seconds)
2016-10-18 01:31:06	-->	Z3N1T (~Zenit@179.176.16.101.dynamic.adsl.gvt.net.br) has joined ##c++
2016-10-18 01:32:30	<--	brwsr (~textual@176.227.200.90) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-10-18 01:32:30		[01:32]
2016-10-18 01:32:44	<--	justanotheruser (~justanoth@unaffiliated/justanotheruser) has quit (Ping timeout: 260 seconds)
2016-10-18 01:32:56	Ruzzy	riddle me this anyone
2016-10-18 01:32:58	<--	Z3N1T (~Zenit@179.176.16.101.dynamic.adsl.gvt.net.br) has quit (Client Quit)
2016-10-18 01:33:13	-->	sphenxes (~sphenxes@192-164-150-200.hdsl.highway.telekom.at) has joined ##c++
2016-10-18 01:33:22	Ruzzy	in industry, which editors/IDEs are used for C++ on linux?
2016-10-18 01:33:28	Ruzzy	is there a defacto standard?
2016-10-18 01:33:36	Ruzzy	esp c++ 11
2016-10-18 01:33:41	-->	Z3N1T (~Zenit@179.176.16.101.dynamic.adsl.gvt.net.br) has joined ##c++
2016-10-18 01:34:03	Eelis	offtopic, and no
2016-10-18 01:34:31	<--	dave_sullivan (dave_sulli@c-73-15-62-103.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-18 01:34:40	Ruzzy	>offtopic. Where would the question belong?
2016-10-18 01:34:46	Eelis	!general
2016-10-18 01:34:47	nolyc	##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2016-10-18 01:34:59	afiefh	Ruzzy, no there isn't. Where I work people use a mix of Vim, Emacs, Eclipse and KDevelop
2016-10-18 01:35:04	<--	nikki93 (~nikki93@2601:645:8104:cb10:e5ef:c5ad:ef8b:b36) has quit (Remote host closed the connection)
2016-10-18 01:35:21	<--	f00mado_ (~Thunderbi@ip72-221-100-23.ri.ri.cox.net) has quit (Ping timeout: 256 seconds)
2016-10-18 01:35:23	Ruzzy	thankyou. I'll stop bothering you guys with offtopic now. peace.
2016-10-18 01:35:25	klys	industry is like, collaborating over a git project using editors that understand revision control
2016-10-18 01:35:41	Eelis	klys: ##c++-general
2016-10-18 01:35:52	Adrinael	std::git
2016-10-18 01:35:55	klys	tools
2016-10-18 01:36:52	<--	VlijmenFileer (~vlijmenfi@li865-150.members.linode.com) has quit (Quit: Leaving)
2016-10-18 01:37:16	-->	dave_sullivan (dave_sulli@c-73-15-62-103.hsd1.ca.comcast.net) has joined ##c++
2016-10-18 01:38:12	-->	irco (~irco@vpn205-056.rzuser.uni-heidelberg.de) has joined ##c++
2016-10-18 01:41:54	<--	xissburg_ (~xissburg@unaffiliated/xissburg) has quit (Quit: ZZZzzz…)
2016-10-18 01:42:46	-->	xissburg (~xissburg@unaffiliated/xissburg) has joined ##c++
2016-10-18 01:43:23	<--	manuels (~manuelsch@p20030072AF6BC2001EEA2F3E8805DBF5.dip0.t-ipconnect.de) has quit (Ping timeout: 245 seconds)
2016-10-18 01:43:29	<--	velco (~chill@vlan-nesebar-60-155.comnet.bg) has quit (Quit: Leaving...)
2016-10-18 01:43:32	<--	rockstar__ (~rockstar@cpe-72-224-119-105.nycap.res.rr.com) has quit (Ping timeout: 260 seconds)
2016-10-18 01:43:37	-->	drazil (~drazil@108.61.99.238) has joined ##c++
2016-10-18 01:44:21	-->	Aquza (~blub@p578b4612.dip0.t-ipconnect.de) has joined ##c++
2016-10-18 01:44:25	<--	knundrum (~knundrum@203-59-163-141.dyn.iinet.net.au) has quit (Quit: Leaving)
2016-10-18 01:46:01	<--	araml (~araml@unaffiliated/araml) has quit (Quit: WeeChat 1.0.1)
2016-10-18 01:47:29	-->	alienbot (~quassel@183.60.162.102) has joined ##c++
2016-10-18 01:47:59	-->	CoolBreeze (~CoolBreez@120.88.159.151) has joined ##c++
2016-10-18 01:47:59		[01:47]
2016-10-18 01:48:10	-->	shirt (~shirt@adsl-v01-3db14831dc15da1b.tau.ac.il) has joined ##c++
2016-10-18 01:48:19	-->	Bellator (~Bellator@D93FF597.cm-21.dynamic.ziggo.nl) has joined ##c++
2016-10-18 01:48:40	<--	josef__k (~jeremy@220-244-178-179.tpgi.com.au) has quit (Ping timeout: 250 seconds)
2016-10-18 01:48:49	<--	Aquza (~blub@p578b4612.dip0.t-ipconnect.de) has quit (Client Quit)
2016-10-18 01:49:43	-->	sphenxes02 (~sphenxes@192-164-150-200.hdsl.highway.telekom.at) has joined ##c++
2016-10-18 01:51:24	-->	govg (~govg@unaffiliated/govg) has joined ##c++
2016-10-18 01:51:55	-->	gagbo (~gagbo@unaffiliated/gagbo) has joined ##c++
2016-10-18 01:51:57	-->	tlaxkit (~Thunderbi@92.185.154.236) has joined ##c++
2016-10-18 01:53:00	<--	jiik (~antankh@wf124-051.ust.hk) has quit (Ping timeout: 250 seconds)
2016-10-18 01:53:16	<--	sphenxes01 (~sphenxes@91-115-168-242.adsl.highway.telekom.at) has quit (Ping timeout: 260 seconds)
2016-10-18 01:53:48	<--	GinoMan (~GinoMan@2601:41:c101:487a:61f1:405b:8bf5:e3d5) has quit (Ping timeout: 245 seconds)
2016-10-18 01:55:31	<--	Ruzzy (~justin@CPE-120-147-39-181.cjym2.win.bigpond.net.au) has quit (Read error: Connection reset by peer)
2016-10-18 01:57:27	-->	Oipo (~Oipo@46.166.138.140) has joined ##c++
2016-10-18 01:57:54	--	thomas is now known as jinglebellz
2016-10-18 01:58:54	<--	mss_cyclist (~MSe@89-250-189-210.tangos.nl) has quit (Ping timeout: 260 seconds)
2016-10-18 01:59:35	-->	jiik (~antankh@wf124-051.ust.hk) has joined ##c++
2016-10-18 02:02:41	<--	Malkrith (uid186536@gateway/web/irccloud.com/x-zscgmmraijwzchhv) has quit (Quit: Connection closed for inactivity)
2016-10-18 02:02:56	-->	fogb (~foggy@88.147.42.198) has joined ##c++
2016-10-18 02:02:57	elsewho	hello, i am using a code that probably has been implemented in windows and it uses stdext::hash_set<T>. anybody, has an idea how to port this to standard c++?
2016-10-18 02:03:28	-->	pabs38 (6dbea17c@gateway/web/cgi-irc/kiwiirc.com/ip.109.190.161.124) has joined ##c++
2016-10-18 02:03:28		[02:03]
2016-10-18 02:03:37	-->	bjz_ (~bjz@104.222.140.102) has joined ##c++
2016-10-18 02:03:39	-->	rogual (~rogual@foon.uk) has joined ##c++
2016-10-18 02:03:42	-->	tc2keats (~tc2keats@gateway/tor-sasl/tc2keats) has joined ##c++
2016-10-18 02:03:54	<--	bjz (~bjz@14-201-215-168.tpgi.com.au) has quit (Ping timeout: 252 seconds)
2016-10-18 02:04:21	-->	Endarked (~endarked@2a01:11bf:5b1:b300:1816:ec23:5d2e:9288) has joined ##c++
2016-10-18 02:04:59	urdh	elsewho, maybe use std:unordered_set? I dunno, what's an stdext::hash_set?
2016-10-18 02:05:09	urdh	!stdref unordered_set
2016-10-18 02:05:10	refbot	std::unordered_set: http://en.cppreference.com/w/cpp/container/unordered_set
2016-10-18 02:05:17	<--	chris64 (~chris@unaffiliated/chris64) has quit (Ping timeout: 260 seconds)
2016-10-18 02:05:44	-->	FreeBirdLjj (~freebirdl@223.65.168.113) has joined ##c++
2016-10-18 02:05:56	<--	Beetny (~Beetny@14-202-48-200.tpgi.com.au) has quit (Ping timeout: 256 seconds)
2016-10-18 02:06:48	<--	fogbank (~foggy@88.147.42.198) has quit (Ping timeout: 260 seconds)
2016-10-18 02:07:44	<--	Xatenev (~Gerd@pd907f4d2.dip0.t-ipconnect.de) has left ##c++
2016-10-18 02:09:13	<--	MulleDK19 (MulleDK19@unaffiliated/mulledk19) has quit
2016-10-18 02:09:23	<--	Endarked (~endarked@2a01:11bf:5b1:b300:1816:ec23:5d2e:9288) has quit (Quit: WeeChat 1.5)
2016-10-18 02:09:51	-->	mss_cyclist (~MSe@89-250-189-210.tangos.nl) has joined ##c++
2016-10-18 02:10:44	-->	rebb (~rebb3@p54B81010.dip0.t-ipconnect.de) has joined ##c++
2016-10-18 02:11:28	<--	KAHR-Alpha (~Alpha@AReims-652-1-18-165.w90-18.abo.wanadoo.fr) has quit (Ping timeout: 260 seconds)
2016-10-18 02:11:58	-->	Gustavo6046 (~Gustavo60@unaffiliated/gustavo6046) has joined ##c++
2016-10-18 02:12:40	-->	MulleDK19 (MulleDK19@unaffiliated/mulledk19) has joined ##c++
2016-10-18 02:13:51	-->	araml (~araml@181.167.68.89) has joined ##c++
2016-10-18 02:15:33	-->	unK_ (~drunK@host-81-190-235-217.dynamic.mm.pl) has joined ##c++
2016-10-18 02:16:34	-->	jefcolbi (~Thunderbi@138.68.152.129) has joined ##c++
2016-10-18 02:16:54	-->	chris64 (~chris@unaffiliated/chris64) has joined ##c++
2016-10-18 02:17:03	<--	Tempesta_ (~Tempesta@183.98.39.250) has left ##c++
2016-10-18 02:17:12	-->	interop_madness (~interop_m@unaffiliated/interop-madness/x-8858653) has joined ##c++
2016-10-18 02:17:13	-->	Tempesta (~Tempesta@unaffiliated/tempesta) has joined ##c++
2016-10-18 02:18:49	-->	brwsr (~textual@193.108.76.86) has joined ##c++
2016-10-18 02:18:49		[02:18]
2016-10-18 02:18:54	-->	Endarked (~endarked@2a01:11bf:5b1:b300:1816:ec23:5d2e:9288) has joined ##c++
2016-10-18 02:19:30	-->	velco (~chill@vlan-nesebar-60-155.comnet.bg) has joined ##c++
2016-10-18 02:19:49	introom	is { 1/ 0.} # UB ?
2016-10-18 02:19:57	cbreak	introom: no
2016-10-18 02:20:03	-->	serycjon (~jonas@wced-181-219-32-147.feld.cvut.cz) has joined ##c++
2016-10-18 02:20:09	introom	should be inf, but http://eel.is/c++draft/expr.mul doesn't mention it.
2016-10-18 02:20:18	cbreak	it's floating point
2016-10-18 02:20:23	cbreak	different standard
2016-10-18 02:20:30	-->	kilbith (4ee51c3e@gateway/web/cgi-irc/kiwiirc.com/ip.78.229.28.62) has joined ##c++
2016-10-18 02:20:59	introom	cbreak: 5.6p4 doesn't apply to floats? It doesn't say that.
2016-10-18 02:21:17	<--	kilbith (4ee51c3e@gateway/web/cgi-irc/kiwiirc.com/ip.78.229.28.62) has quit (Client Quit)
2016-10-18 02:21:48	<--	aep_ (~aep@zero.exys.org) has quit (Changing host)
2016-10-18 02:21:48	-->	aep_ (~aep@libqxt/developer/aep) has joined ##c++
2016-10-18 02:21:50	introom	cbreak: though possible IEEE754 may same something about it. but ISTM the draft says its UB.
2016-10-18 02:21:51	Eelis	it's ub
2016-10-18 02:22:15	<--	pabs38 (6dbea17c@gateway/web/cgi-irc/kiwiirc.com/ip.109.190.161.124) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-10-18 02:22:22	introom	Eelis: not the dot, in `0.'
2016-10-18 02:22:22	-->	flonk (~flonk@ec2-52-40-29-25.us-west-2.compute.amazonaws.com) has joined ##c++
2016-10-18 02:22:35	<--	KaliLinuxGR (~alexandro@unaffiliated/kalilinuxgr) has quit (Remote host closed the connection)
2016-10-18 02:22:41	TinoDidriksen	http://eel.is/c++draft/expr#4
2016-10-18 02:23:08	Eelis	introom: yes, i see it. and if you think it's so obfuscated that you must assume that any reader overlooked it, you should have made it less obfuscated.
2016-10-18 02:23:32	-->	thib (~Thibaut12@wikimedia/Thibaut120094) has joined ##c++
2016-10-18 02:24:08	<--	ReverseBlade (~user@213.74.212.180) has quit (Ping timeout: 244 seconds)
2016-10-18 02:24:40	introom	TinoDidriksen: so looks more like it's impl defined.
2016-10-18 02:24:48	<--	karab44 (~karab44@unaffiliated/karab44) has quit
2016-10-18 02:24:56	TinoDidriksen	No, it says UB. Notes are not normative.
2016-10-18 02:25:12	<--	serycjon (~jonas@wced-181-219-32-147.feld.cvut.cz) has quit (Ping timeout: 256 seconds)
2016-10-18 02:25:20	TinoDidriksen	Implementations may turn UB into something else, but that doesn't make it portable.
2016-10-18 02:25:25	-->	KaliLinuxGR (~alexandro@188.117.249.206) has joined ##c++
2016-10-18 02:25:25	<--	KaliLinuxGR (~alexandro@188.117.249.206) has quit (Changing host)
2016-10-18 02:25:25	-->	KaliLinuxGR (~alexandro@unaffiliated/kalilinuxgr) has joined ##c++
2016-10-18 02:26:35	-->	navidr (uid112413@gateway/web/irccloud.com/x-fnbhybzejohegexc) has joined ##c++
2016-10-18 02:26:49	-->	bedah (~bedah@dyndsl-037-138-116-201.ewe-ip-backbone.de) has joined ##c++
2016-10-18 02:27:09	cbreak	it says it's ub if the result isn't mathematically defined
2016-10-18 02:27:18	cbreak	(or the result isn't representable)
2016-10-18 02:27:20	<--	Endarked (~endarked@2a01:11bf:5b1:b300:1816:ec23:5d2e:9288) has quit (Quit: WeeChat 1.5)
2016-10-18 02:27:37	-->	Endarked (~endarked@2a01:11bf:5b1:b300:1816:ec23:5d2e:9288) has joined ##c++
2016-10-18 02:27:46	TinoDidriksen	And it's not guaranteed that the floating point representation can handle it.
2016-10-18 02:27:48	Eelis	introom's own link was better
2016-10-18 02:27:51	Eelis	*citation
2016-10-18 02:27:57	Eelis	http://eel.is/c++draft/expr.mul#4
2016-10-18 02:28:06	Eelis	"If the second operand of / or % is zero the behavior is undefined."
2016-10-18 02:28:36	<--	alienbot (~quassel@183.60.162.102) has quit (Ping timeout: 265 seconds)
2016-10-18 02:28:45	cbreak	it only applies for platforms where / is a built-in operator (which is I guess most of them that provide floating point support in the first place)
2016-10-18 02:28:55	Eelis	no, it applies to standard C++.
2016-10-18 02:29:53	<--	velco (~chill@vlan-nesebar-60-155.comnet.bg) has quit (Remote host closed the connection)
2016-10-18 02:31:00	cbreak	that's not what the standard says
2016-10-18 02:31:08	Eelis	lolwut
2016-10-18 02:31:18	<--	mad_enz (~mad_enz@2607:f090:488d:2ab:b913:1758:dd2f:e602) has quit (Ping timeout: 245 seconds)
2016-10-18 02:31:48	-->	velco (~chill@vlan-nesebar-60-155.comnet.bg) has joined ##c++
2016-10-18 02:32:05	cbreak	"Clause [expr] defines the effects of operators when applied to types for which they have not been overloaded. Operator overloading shall not modify the rules for the built-in operators, that is, for operators applied to types for which they are defined by this Standard. "
2016-10-18 02:32:12	cbreak	-> only applies to built-in operators
2016-10-18 02:32:18	Oxyd	Op/ can't be overloaded for int, double, though.
2016-10-18 02:32:36	cbreak	Oxyd: but it is not required to exist by the standard
2016-10-18 02:32:40	-->	ReverseBlade (~user@213.74.212.180) has joined ##c++
2016-10-18 02:32:46	-->	rockstar___ (~rockstar@cpe-72-224-119-105.nycap.res.rr.com) has joined ##c++
2016-10-18 02:32:53	Oxyd	Sure it is.
2016-10-18 02:33:07	cbreak	you don't have to provide floating point support
2016-10-18 02:33:09	Eelis	now what, you think the operators in C++ are all optional? :D
2016-10-18 02:33:14	cbreak	so you surely don't have to provide / for floats either
2016-10-18 02:33:59	Oxyd	Surely you do.
2016-10-18 02:33:59		[02:33]
2016-10-18 02:34:19	<--	Nilesh_ (uid116340@gateway/web/irccloud.com/x-jgwpuaemkcdciozj) has quit (Quit: Connection closed for inactivity)
2016-10-18 02:34:25	<--	slavanap (~slavanap@5.145.247.18) has quit (Quit: Leaving)
2016-10-18 02:34:34	Oxyd	Floating-point types are arithmetic types, and http://eel.is/c++draft/expr.mul clearly says that / is defind for arithmetic types.
2016-10-18 02:34:45	Oxyd	Therefore, / is defined for floating-point types. In C++.
2016-10-18 02:34:54	TinoDidriksen	You do have to provide floating point support.
2016-10-18 02:35:00	Henke37	except that you can overload operator new. two X two times actually.
2016-10-18 02:35:23	Henke37	once globally and once for each class. and once for normal new and once for nothrow new
2016-10-18 02:35:34	<--	rogual (~rogual@foon.uk) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-10-18 02:36:23	<--	pqpqpq66 (~pqpqpq66@xviswork2.informatik.tu-freiberg.de) has quit (Remote host closed the connection)
2016-10-18 02:36:23	TinoDidriksen	http://eel.is/c++draft/basic.fundamental#8 - they must exist and they must be arithmetic, but beyond that they're implementation defined.
2016-10-18 02:37:01	<--	yumaokao (~yumaokao@218-161-54-18.HINET-IP.hinet.net) has quit (Ping timeout: 260 seconds)
2016-10-18 02:37:14	cbreak	so they have to be able to represent values
2016-10-18 02:37:28	cbreak	but it says it doesn't require any particular range
2016-10-18 02:37:49	cbreak	wonder if a singular value representation is acceptable
2016-10-18 02:37:59	Henke37	define "singular"
2016-10-18 02:38:00	TinoDidriksen	Hence not required to handle inf, hence /0.0 is UB.
2016-10-18 02:38:17	cbreak	Henke37: like nullptr_t
2016-10-18 02:38:23	cbreak	one that can only represent a singular value
2016-10-18 02:38:48	cbreak	but interesting
2016-10-18 02:39:03	cbreak	so the float keyword has to be supported but what it does is all UB
2016-10-18 02:39:19	Eelis	nope
2016-10-18 02:39:30	Henke37	the standard does define classics like sin and tan
2016-10-18 02:39:43	-->	serycjon (~jonas@k333stu2.felk.cvut.cz) has joined ##c++
2016-10-18 02:39:55	cbreak	yeah, but only as far as the implementation can represent it it seems
2016-10-18 02:40:00	Eelis	nope
2016-10-18 02:40:01	Eelis	"The value representation of floating-point types is implementation-defined."
2016-10-18 02:40:10	Eelis	ID != UB
2016-10-18 02:40:24	cbreak	Eelis: it's UB if an operation results in a value that can't be represented
2016-10-18 02:40:44	cbreak	Eelis: i.e. if that float can't represent 2, then 1 + 1 would be UB :/
2016-10-18 02:40:54	-->	hualet (~hualet@113.57.50.233) has joined ##c++
2016-10-18 02:41:21	cbreak	according to the "If during the evaluation of an expression, the result is not mathematically defined or not in the range of representable values for its type, the behavior is undefined." that was linked above
2016-10-18 02:41:54	-->	doppel (~chatzilla@ip70-189-197-158.lv.lv.cox.net) has joined ##c++
2016-10-18 02:42:11	Eelis	that's why you first check the flag that tells you you have IEEE floats
2016-10-18 02:42:21	Eelis	which is provided by the standard
2016-10-18 02:42:22	cbreak	so, since division by zero isn't clearly mathematically defined, nor is -inf or +inf required to be there, it's UB I guess
2016-10-18 02:42:24	<--	omnipot (~Dawid@eop137.internetdsl.tpnet.pl) has quit (Ping timeout: 252 seconds)
2016-10-18 02:42:38	cbreak	Eelis: oh, so division by zero isn't ub :P
2016-10-18 02:42:45	cbreak	(if you have ieee floats)
2016-10-18 02:42:46	-->	rogual (~rogual@foon.uk) has joined ##c++
2016-10-18 02:43:01	Eelis	if you check the flag, it's not UB, no
2016-10-18 02:43:10	Eelis	i don't know why this is hard for you to understand
2016-10-18 02:43:21	Eelis	division by zero /is/ still UB
2016-10-18 02:43:30	Eelis	but 1+1 is not UB if you check the flag
2016-10-18 02:43:36	cbreak	1.0 / 3.0 is not representable either
2016-10-18 02:43:39	<--	Endarked (~endarked@2a01:11bf:5b1:b300:1816:ec23:5d2e:9288) has quit (Quit: WeeChat 1.5)
2016-10-18 02:43:45	cbreak	Eelis: what's the difference?
2016-10-18 02:43:51	cbreak	the "mathematically well defined" part?
2016-10-18 02:43:52	Eelis	the difference is that one is spelled out
2016-10-18 02:44:03	cbreak	right
2016-10-18 02:44:05	Henke37	no rule that it isn't representable. no rule that the implementation isn't using fractions
2016-10-18 02:44:07	Eelis	so saying "oh noes it's all UB" is not only wrong, it's FUD scaremongering
2016-10-18 02:44:50	cbreak	Henke37: if you use ieee floats, then it won't use fractionals, it'll use floating point representation
2016-10-18 02:44:57	-->	mad_enz (~mad_enz@2607:f090:488d:2ab:f9c1:9559:d581:aa23) has joined ##c++
2016-10-18 02:45:05	Henke37	if indeed
2016-10-18 02:45:19	-->	Endarked (~endarked@2a01:11bf:5b1:b300:1816:ec23:5d2e:9288) has joined ##c++
2016-10-18 02:45:26	<--	King_Hual (~failed@unaffiliated/king-hual/x-1207580) has quit (Read error: Connection reset by peer)
2016-10-18 02:45:34	-->	Erlkoenig (~erlkoenig@gw-2s00.inf.fh-bonn-rhein-sieg.de) has joined ##c++
2016-10-18 02:45:44	<--	AbleBacon (~AbleBacon@unaffiliated/ablebacon) has quit (Read error: Connection reset by peer)
2016-10-18 02:46:00	<--	rockstar___ (~rockstar@cpe-72-224-119-105.nycap.res.rr.com) has quit (Ping timeout: 260 seconds)
2016-10-18 02:46:50	-->	SecondForm_Glenn (~Thunderbi@97-102-42-24.res.bhn.net) has joined ##c++
2016-10-18 02:47:37	-->	King_Hual (~failed@94.26.28.68) has joined ##c++
2016-10-18 02:47:38	<--	King_Hual (~failed@94.26.28.68) has quit (Changing host)
2016-10-18 02:47:38	-->	King_Hual (~failed@unaffiliated/king-hual/x-1207580) has joined ##c++
2016-10-18 02:48:41	-->	boristheanimal (~boris2015@unaffiliated/boris2015) has joined ##c++
2016-10-18 02:49:25	-->	blackwolf (~blackwolf@ool-44c27f1f.dyn.optonline.net) has joined ##c++
2016-10-18 02:49:25		[02:49]
2016-10-18 02:50:21	Henke37	Eelis, I am having trouble with that link you posted. I can't seem to find anything about the new operator
2016-10-18 02:50:39	<--	iambatman (~boris2015@unaffiliated/boris2015) has quit (Ping timeout: 252 seconds)
2016-10-18 02:51:06	<--	Z8050017 (~ASAP@pool-173-63-56-218.nwrknj.fios.verizon.net) has left ##c++
2016-10-18 02:51:23	-->	Lokomotiv (~ASAP@unaffiliated/lokomotiv) has joined ##c++
2016-10-18 02:51:28	-->	knamehost (~kdname@unaffiliated/knamehost) has joined ##c++
2016-10-18 02:51:56	<--	govg (~govg@unaffiliated/govg) has quit (Ping timeout: 250 seconds)
2016-10-18 02:52:08	-->	k299 (~chatzilla@219.85.198.51) has joined ##c++
2016-10-18 02:52:38	<--	Endarked (~endarked@2a01:11bf:5b1:b300:1816:ec23:5d2e:9288) has quit (Quit: WeeChat 1.5)
2016-10-18 02:53:01	<--	brwsr (~textual@193.108.76.86) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-10-18 02:54:07	<--	jiik (~antankh@wf124-051.ust.hk) has quit (Ping timeout: 256 seconds)
2016-10-18 02:54:13	AStorm	hello folks again, I'll pastebin the log of my issue which relates to something like class Foo { auto memberFn() { return [this](int) { ... }; }; } - using memberFn gives an error from G++ 4.9
2016-10-18 02:54:13	-->	LuckySavage7 (~Savage@47-33-169-74.dhcp.mdfd.or.charter.com) has joined ##c++
2016-10-18 02:54:39	AStorm	error: use of 'auto Foo::makeEventHandler(const char*, const string&)' before deduction of 'auto'
2016-10-18 02:55:00	AStorm	-std=c++14 is enabled
2016-10-18 02:55:01	urdh	uh
2016-10-18 02:55:04	urdh	!testcase
2016-10-18 02:55:06	nolyc	A testcase is the _least_ amount of code that replicates your problem, paste it to http://coliru.stacked-crooked.com and give us the link. Do _not_ paste code to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
2016-10-18 02:55:14	ville	AStorm: 4.9 sounds old enough not to have auto
2016-10-18 02:55:20	-->	modlin (~quassel@93.123.41.167) has joined ##c++
2016-10-18 02:55:32	<--	knamehost (~kdname@unaffiliated/knamehost) has left ##c++ ("Leaving")
2016-10-18 02:55:55	<--	thirtythreeforty (~quassel@unaffiliated/gh403) has quit (Read error: Connection reset by peer)
2016-10-18 02:56:03	ville	or does it? well guess it's there about
2016-10-18 02:56:04	-->	thirtythreeforty (~quassel@unaffiliated/gh403) has joined ##c++
2016-10-18 02:56:13	AStorm	it has auto, allegedly, according to: https://gcc.gnu.org/projects/cxx-status.html#cxx14
2016-10-18 02:56:45	-->	jiik (~antankh@wf124-051.ust.hk) has joined ##c++
2016-10-18 02:56:52	ville	then do a testcase...
2016-10-18 02:56:54	AStorm	(Return type deduction for normal functions)
2016-10-18 02:56:57	ville	!give AStorm testcase
2016-10-18 02:56:59	nolyc	AStorm: A testcase is the _least_ amount of code that replicates your problem, paste it to http://coliru.stacked-crooked.com and give us the link. Do _not_ paste code to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
2016-10-18 02:57:08	AStorm	ok, ehh
2016-10-18 02:57:14	AStorm	GCC 6.1 compiles fine
2016-10-18 02:57:17	<--	modlin (~quassel@93.123.41.167) has quit (Remote host closed the connection)
2016-10-18 02:57:17	AStorm	clang 3.8 also does
2016-10-18 02:57:32	jiffe	4.8.4 works with auto
2016-10-18 02:57:38	<--	Karyon (~yaaic@unaffiliated/karyon) has quit (Remote host closed the connection)
2016-10-18 02:57:42	AStorm	the return function derivation jiffe
2016-10-18 02:57:46	AStorm	*return function type
2016-10-18 02:57:52	AStorm	it has partial support only
2016-10-18 02:58:08	AStorm	hmm, cannot access that pastebin from work T_T
2016-10-18 02:58:20	ville	!paste
2016-10-18 02:58:22	nolyc	Paste your test case to http://coliru.stacked-crooked.com/ Do _not_ paste to the channel. See the testcase checklist at http://eel.is/c++/testcase
2016-10-18 02:58:23	urdh	use wandbox then
2016-10-18 02:58:24	urdh	http://melpon.org/wandbox/
2016-10-18 02:59:03	ville	gambled !paste and !testcase would be out-of-sync with regards to paste bin to use
2016-10-18 02:59:05	-->	damme (~damme@2001:16d8:cc75::802) has joined ##c++
2016-10-18 03:00:16	-->	the_2nd (~the_2nd@2a02:8070:4584:9e00::1) has joined ##c++
2016-10-18 03:02:30	-->	rockstar__ (~rockstar@cpe-72-224-119-105.nycap.res.rr.com) has joined ##c++
2016-10-18 03:03:07	-->	mikhey (~mikhey@2601:985:4100:6e00:14ec:d238:753e:4477) has joined ##c++
2016-10-18 03:04:14	-->	benkant_ (~benkant@vpn-tokyo-161-202-65-52.hosts.getcloakvpn.com) has joined ##c++
2016-10-18 03:04:21	-->	yumaokao (~yumaokao@218-161-54-18.HINET-IP.hinet.net) has joined ##c++
2016-10-18 03:04:29	AStorm	never mind, this works, lambda didn't have one variable it needed captured
2016-10-18 03:04:29		[03:04]
2016-10-18 03:04:36	AStorm	and GCC 4.9 is terribly bad at error messages
2016-10-18 03:05:27	<--	benkant (~benkant@node-5k9.pool-101-108.dynamic.totbb.net) has quit (Ping timeout: 252 seconds)
2016-10-18 03:06:39	<--	gareppa (~gareppa@151.31.43.18) has quit (Quit: Leaving)
2016-10-18 03:06:44	va	There's always gcc6
2016-10-18 03:07:20	AStorm	still, I have some problem, I'll try a testcase, back in a bit
2016-10-18 03:08:12	urdh	s/gcc6/clang/
2016-10-18 03:08:29	-->	Furkiepurkie (~Furkie@2001:1af8:4700:a03c:7::) has joined ##c++
2016-10-18 03:08:39	va	no seriously. 4.9 appears to have been a rather unloved version..
2016-10-18 03:08:47	<--	xissburg (~xissburg@unaffiliated/xissburg) has quit (Quit: ZZZzzz…)
2016-10-18 03:08:50	-->	kilbith (4ee51c3e@gateway/web/cgi-irc/kiwiirc.com/ip.78.229.28.62) has joined ##c++
2016-10-18 03:09:23	<--	jiik (~antankh@wf124-051.ust.hk) has quit (Quit: Leaving)
2016-10-18 03:09:35	urdh	that's probably true, I haven't paid attention to GCC since Clang 3.5 or something
2016-10-18 03:09:39	-->	zpataki (~quassel@91.82.139.80.pool.invitel.hu) has joined ##c++
2016-10-18 03:09:42	urdh	which feels like it would be 'round gcc-4.8
2016-10-18 03:09:43	<--	kilbith (4ee51c3e@gateway/web/cgi-irc/kiwiirc.com/ip.78.229.28.62) has quit (Client Quit)
2016-10-18 03:10:08	urdh	all I remember is the terrible diagnostics
2016-10-18 03:10:10	<--	mithsv (~mithsv@144-197-128-083.dynamic.caiway.nl) has quit (Quit: Sleep)
2016-10-18 03:11:05	<--	Appleman1234 (~Appleman1@KD106154019035.au-net.ne.jp) has quit (Ping timeout: 260 seconds)
2016-10-18 03:11:20	--	metachr0n is now known as metachr0n-away
2016-10-18 03:11:24	-->	ekinmur (~ekinmur@unaffiliated/ekinmur) has joined ##c++
2016-10-18 03:11:54	<--	zpataki (~quassel@91.82.139.80.pool.invitel.hu) has quit (Remote host closed the connection)
2016-10-18 03:12:12	-->	CEnnis91 (uid3543@gateway/web/irccloud.com/x-szgzoavngzfipyum) has joined ##c++
2016-10-18 03:12:35	<--	metachr0n-away (~nobody@gateway/vpn/privateinternetaccess/metachr0n) has quit (Quit: WeeChat 1.5)
2016-10-18 03:13:14	AStorm	here's the testcase: http://melpon.org/wandbox/permlink/tkGEZQ0bjaTloJeZ
2016-10-18 03:14:55	<--	jefcolbi (~Thunderbi@138.68.152.129) has quit (Read error: Connection reset by peer)
2016-10-18 03:15:28	doppel	damn it, somebody in ##c made me think, earlier.
2016-10-18 03:15:41	doppel	i don't like thinking this early in the morning, before i've had caffeine.
2016-10-18 03:15:44	elsewho	AStorm, are you yousing features beyond C++11?
2016-10-18 03:15:53	urdh	AStorm, http://melpon.org/wandbox/permlink/V1M8bpCuUfGOeOzs
2016-10-18 03:15:58	doppel	hehehehe
2016-10-18 03:16:19	AStorm	elsewho: yes, C++14
2016-10-18 03:16:56	AStorm	LOL
2016-10-18 03:17:00	AStorm	it's positional?!
2016-10-18 03:17:04	-->	jefcolbi (~Thunderbi@138.68.152.129) has joined ##c++
2016-10-18 03:17:42	urdh	¯\_(ツ)_/¯
2016-10-18 03:17:53	AStorm	probably gcc 4.9 bug
2016-10-18 03:18:19	elsewho	i asked bc, auto as return type doesnt work in C++1, isnt it?
2016-10-18 03:18:19	urdh	i'd say more "lack of feature" than "bug", but meh
2016-10-18 03:18:30	elsewho	11
2016-10-18 03:18:37	-->	Ipki (~Ipki@cac94-8-82-245-27-76.fbx.proxad.net) has joined ##c++
2016-10-18 03:19:13	urdh	(i'm not sure the first case is guaranteed by the standard to work, because you *do* use the auto return type before it can be deduced, if your compiler is dumb and can't backtrack or whatever)
2016-10-18 03:19:25	AStorm	not sure, standard probably mandates it to work
2016-10-18 03:19:32	urdh	there's a similar thing with MSVC and typenames IIRC
2016-10-18 03:19:32		[03:19]
2016-10-18 03:19:34	AStorm	because otherwise... wtf
2016-10-18 03:19:42	AStorm	(yes, auto is hard)
2016-10-18 03:19:46	-->	felixi (~mikko@a88-115-27-145.elisa-laajakaista.fi) has joined ##c++
2016-10-18 03:19:48	<--	iceiceice (~chris@unaffiliated/iceiceice) has quit (Ping timeout: 252 seconds)
2016-10-18 03:20:39	urdh	why is it wtf, you have to declare free functions before using them as well?
2016-10-18 03:21:01	AStorm	it's not a free function, it's a member function
2016-10-18 03:21:21	AStorm	I might be wrong and indeed standard mandates it to fail
2016-10-18 03:21:33	-->	vuoto (~vuoto@80-71-135-9.u.parknet.dk) has joined ##c++
2016-10-18 03:21:36	AStorm	(if you replace auto with std::function<void(int)> it will magically work)
2016-10-18 03:21:46	urdh	I don't think it mandates it to fail, I'm just saying it probably doesn't mandate it to work
2016-10-18 03:21:53	AStorm	probably...
2016-10-18 03:22:08	AStorm	clang actually also fails in this specific case with a much better error message
2016-10-18 03:22:12	urdh	well yes if you deduce the type for it then it obviously won't have problems deducing it
2016-10-18 03:22:16	<--	rorro (~rorro@c-227-137.eduroam.liu.se) has quit (Ping timeout: 250 seconds)
2016-10-18 03:22:55	-->	marcofe (~marcofe@test-centre4-gw.estec.esa.int) has joined ##c++
2016-10-18 03:22:57	-->	jefcolbi1 (~Thunderbi@138.68.152.129) has joined ##c++
2016-10-18 03:23:07	<--	Erlkoenig (~erlkoenig@gw-2s00.inf.fh-bonn-rhein-sieg.de) has quit (Ping timeout: 256 seconds)
2016-10-18 03:23:08	urdh	clang has pretty much the same error message...
2016-10-18 03:23:34	<--	jefcolbi (~Thunderbi@138.68.152.129) has quit (Ping timeout: 256 seconds)
2016-10-18 03:23:35	--	jefcolbi1 is now known as jefcolbi
2016-10-18 03:24:45	<--	matiu (~matiu@unaffiliated/matiu) has quit (Ping timeout: 252 seconds)
2016-10-18 03:24:46	AStorm	better
2016-10-18 03:24:47	-->	rorro (~rorro@c-227-137.eduroam.liu.se) has joined ##c++
2016-10-18 03:25:04	AStorm	error: function 'lambdaFoo' with deduced return type cannot be used before it is defined <- totally clear
2016-10-18 03:26:52	thinlizzy	upgrading compilers is hard these days. they cost a fortune
2016-10-18 03:26:57	<--	rriemann (~rriemann@dhcp-67-135.ixxi.ens-lyon.fr) has quit (Ping timeout: 252 seconds)
2016-10-18 03:27:02	urdh	I think "use of [...] before deduction of 'auto'" is pretty clear too, but meh
2016-10-18 03:27:25	urdh	anyway, relevant bits of standard: http://eel.is/c++draft/dcl.spec.auto#10
2016-10-18 03:27:50	<--	the_2nd (~the_2nd@2a02:8070:4584:9e00::1) has quit (Quit: Leaving)
2016-10-18 03:27:59	<--	ekinmur (~ekinmur@unaffiliated/ekinmur) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-10-18 03:28:36	-->	viro (~viro@unaffiliated/viro) has joined ##c++
2016-10-18 03:28:41	urdh	so gcc-6 is basically being very nice accepting that program if i understand the standardese correctly
2016-10-18 03:29:08	<--	jefcolbi (~Thunderbi@138.68.152.129) has quit (Read error: Connection reset by peer)
2016-10-18 03:32:08	<--	dinfuehr (~dinfuehr@62-46-160-230.adsl.highway.telekom.at) has quit (Ping timeout: 245 seconds)
2016-10-18 03:34:19	-->	dinfuehr (~dinfuehr@188-23-187-80.adsl.highway.telekom.at) has joined ##c++
2016-10-18 03:35:25	-->	Erlkoenig (~erlkoenig@gw-2s00.inf.fh-bonn-rhein-sieg.de) has joined ##c++
2016-10-18 03:35:25		[03:35]
2016-10-18 03:35:44	Erlkoenig	http://ideone.com/utNvUo The empty base class optimization apparantly does not apply for P1, because A and C share the same base class, which needs to have different addresses in both instances. Does anyone happen to know a trick to make this work, i.e. make the compressed_pair actually have size 4 (as with P2)?
2016-10-18 03:36:47	thinlizzy	too bad I have no fucking idea what is compressed pair
2016-10-18 03:38:07	<--	jcelerier1 (~jcelerier@APoitiers-651-1-144-113.w86-201.abo.wanadoo.fr) has quit (Quit: WeeChat 1.6)
2016-10-18 03:39:06	<--	boristheanimal (~boris2015@unaffiliated/boris2015) has quit (Quit: brb)
2016-10-18 03:42:03	-->	onetwothree123 (~Mutter@c-71-238-12-243.hsd1.wa.comcast.net) has joined ##c++
2016-10-18 03:44:46	-->	MikeDebian (~ML@a81-84-80-8.cpe.netcabo.pt) has joined ##c++
2016-10-18 03:44:49	<--	hualet (~hualet@113.57.50.233) has quit (Remote host closed the connection)
2016-10-18 03:44:56	-->	iterati (~vangelis@46.12.185.49.dsl.dyn.forthnet.gr) has joined ##c++
2016-10-18 03:45:19	-->	hualet (~hualet@113.57.50.233) has joined ##c++
2016-10-18 03:45:39	<--	rosten (~rosten@cpe-45-48-9-161.socal.res.rr.com) has quit (Ping timeout: 252 seconds)
2016-10-18 03:46:32	ERROH	Looking at how that is implemented I'm not sure what confuses it.
2016-10-18 03:46:52	-->	Gathis (~TheBlack@unaffiliated/gathis) has joined ##c++
2016-10-18 03:46:54	<--	mss_cyclist (~MSe@89-250-189-210.tangos.nl) has quit (Ping timeout: 265 seconds)
2016-10-18 03:47:43	<--	Rudolf (~rodolfo@unaffiliated/rudolf) has quit (Quit: [IRSSI])
2016-10-18 03:47:45	<--	Ipki (~Ipki@cac94-8-82-245-27-76.fbx.proxad.net) has quit (Remote host closed the connection)
2016-10-18 03:47:50	<--	Amun_Ra (~amun-ra@retro.rocks) has quit (Ping timeout: 250 seconds)
2016-10-18 03:48:32	Erlkoenig	a compressed pair is like std::pair but uses empty base class optimization in order to not consume memory for empty elements
2016-10-18 03:48:58	thinlizzy	why not using std::pair instead?
2016-10-18 03:48:59	<--	rogual (~rogual@foon.uk) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-10-18 03:49:18	<--	onetwothree123 (~Mutter@c-71-238-12-243.hsd1.wa.comcast.net) has quit (Ping timeout: 250 seconds)
2016-10-18 03:49:35	-->	brwsr (~textual@193.108.76.86) has joined ##c++
2016-10-18 03:49:36	thinlizzy	sometimes A or B will be empty classes?
2016-10-18 03:49:38	<--	hualet (~hualet@113.57.50.233) has quit (Ping timeout: 256 seconds)
2016-10-18 03:49:39	Erlkoenig	actually i have this problem with my own tuple implementation which works similar to boost.compressed_pair; i chose to present the problem using compressed_pair because it is much simpler and more well-known
2016-10-18 03:49:44	Erlkoenig	yes
2016-10-18 03:50:05	thinlizzy	I see
2016-10-18 03:50:48	thinlizzy	looks like EBO does not kick in when the same base class is duplicated :)
2016-10-18 03:50:48		[03:50]
2016-10-18 03:50:59	-->	Amun_Ra (~amun-ra@retro.rocks) has joined ##c++
2016-10-18 03:51:29	<--	k299 (~chatzilla@219.85.198.51) has quit (Remote host closed the connection)
2016-10-18 03:51:30	ERROH	-w << sizeof(C); struct E{}; struct A:E{}; struct C: A, E{};
2016-10-18 03:51:31	AStorm	thanks urdh
2016-10-18 03:51:36	ERROH	geordi, -w << sizeof(C); struct E{}; struct A:E{}; struct C: A, E{};
2016-10-18 03:51:36	geordi	2
2016-10-18 03:51:37	<--	brwsr (~textual@193.108.76.86) has quit (Client Quit)
2016-10-18 03:51:41	Erlkoenig	yes, because (Empty*)(A*)(&someP1Instance) would be equal to (Empty*)(B*)(&someP1Instance) if the optimization were applied
2016-10-18 03:51:44	ERROH	you basically want that to print 1.
2016-10-18 03:52:21	AStorm	urdh: the funny part is it says "once it's been seen in a function" - but nothing about classes or namespaces
2016-10-18 03:52:39	Eelis	ERROH: then you'd have two different Es with the same address. sounds silly
2016-10-18 03:52:55	ERROH	Eelis, I know.  I'm not OP, though.
2016-10-18 03:53:18	-->	Murii (~Murii@86.125.194.251) has joined ##c++
2016-10-18 03:53:33	Erlkoenig	i don't mind both E's having the same address...
2016-10-18 03:53:57	Oxyd	Wonder if it'd be reasonable to add an attribute, like [[empty]] or something, that would allow objects of empty classes to share addresses with other objects of empty types.
2016-10-18 03:54:00	-->	brwsr (~textual@193.108.76.86) has joined ##c++
2016-10-18 03:54:22	-->	rbern (~rbern@unaffiliated/rbern) has joined ##c++
2016-10-18 03:54:31	Erlkoenig	that would be awesome, if it also applied to member variables so you wouldn't need EBO
2016-10-18 03:55:13	Erlkoenig	i could give Empty a template parameter, to have A,B,C derive from different E instantiations... but that's quite ugly
2016-10-18 03:55:26	Eelis	Oxyd: i suppose a start would be to disallow pointer arithmetic for such types
2016-10-18 03:55:47	Eelis	have fun seeing how much that breaks :D
2016-10-18 03:55:53	<--	tocka (~tocka@78-56-107-170.static.zebra.lt) has quit (Ping timeout: 256 seconds)
2016-10-18 03:56:12	Oxyd	I suppose you could just say that pointer arithmetic on an [[empty]] type is UB.
2016-10-18 03:56:20	Eelis	good luck with that
2016-10-18 03:56:30	<--	Amun_Ra (~amun-ra@retro.rocks) has quit (Ping timeout: 250 seconds)
2016-10-18 03:56:31	thinlizzy	:)
2016-10-18 03:56:35	<--	AquaL1te (~AquaL1te@unaffiliated/aqual1te) has quit (Quit: leaving)
2016-10-18 03:56:36	Oxyd	Would you say doing pointer arithmetic on such empty types is a common thing?
2016-10-18 03:56:45	-->	rosten (~rosten@cpe-45-48-9-161.socal.res.rr.com) has joined ##c++
2016-10-18 03:56:54	thinlizzy	"I have no idea how it works, so it should be UB"
2016-10-18 03:57:13	AStorm	why would you want it anyway
2016-10-18 03:57:20	Erlkoenig	to save memory...
2016-10-18 03:57:26	AStorm	you cannot have polymorphic classes work like that
2016-10-18 03:57:31	AStorm	and other case is covered with void*
2016-10-18 03:57:35	Erlkoenig	nothing polymorphic here
2016-10-18 03:57:55	thinlizzy	poly wants a cracker
2016-10-18 03:58:06	Eelis	Oxyd: pointer arith is used not just when you manually do pointer arithmetic. it's also used when you want e.g. a vector of things. so you can have code on vector<T> that gets instantiated with a would-be-empty T.
2016-10-18 03:58:11	Eelis	Oxyd: so making that UB is a minefield.
2016-10-18 03:58:33	-->	Retic (~Retic@mar13-2-82-246-223-195.fbx.proxad.net) has joined ##c++
2016-10-18 03:58:38	elsewho	may somebody reveal what is the purpose of such an "empty type"?
2016-10-18 03:58:40	<--	brwsr (~textual@193.108.76.86) has quit (Ping timeout: 250 seconds)
2016-10-18 03:58:48	elsewho	how does it make life easier?
2016-10-18 03:58:52	<--	Retic (~Retic@mar13-2-82-246-223-195.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-10-18 03:58:53	Eelis	elsewho: simplest example is a captureless lambda
2016-10-18 03:58:54	AStorm	currently? having a type-checked void* equivalent
2016-10-18 03:59:04	AStorm	captureless lambda is not quite an empty type
2016-10-18 03:59:08	thinlizzy	lol
2016-10-18 03:59:11	-->	spwg (~spwg@nag77-2-83-152-154-106.fbx.proxad.net) has joined ##c++
2016-10-18 03:59:12	thinlizzy	"not quite"
2016-10-18 03:59:13	Eelis	AStorm: what's in it?
2016-10-18 03:59:21	Oxyd	Eelis: Why would you want a vector of empty types, though? Since they're empty, they all have the same state. So perhaps making vector<T> with T being [[empty]] UB wouldn't be much of an issue.
2016-10-18 03:59:23	AStorm	whatever implementation defines to be in it
2016-10-18 03:59:24	AStorm	e.g. RTTI
2016-10-18 03:59:27	<--	kamog (~user@95.72.59.107) has quit (Remote host closed the connection)
2016-10-18 03:59:29	thinlizzy	lol
2016-10-18 03:59:32	Erlkoenig	or proxy types which know their target by their template arguments
2016-10-18 03:59:34	thinlizzy	RTTI on lambdas?
2016-10-18 03:59:39	AStorm	yes, why not?
2016-10-18 03:59:39	<--	spwg (~spwg@nag77-2-83-152-154-106.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-10-18 03:59:42	thinlizzy	:DDDDDDDDDDDDDDDD
2016-10-18 03:59:45	-->	moffz0r (~moffz0r@14-201-5-120.static.tpgi.com.au) has joined ##c++
2016-10-18 03:59:45	<--	MoFF (~moffz0r@14-201-5-120.static.tpgi.com.au) has quit (Read error: Connection reset by peer)
2016-10-18 03:59:54	Eelis	AStorm: because the closure type is not in any inheritance hierarchy
2016-10-18 04:00:03	-->	bzmub (~bzmub@mar13-2-82-246-223-195.fbx.proxad.net) has joined ##c++
2016-10-18 04:00:20	Erlkoenig	i have a tuple of "process variables"; each of which is either an empty proxy type or a class containing a simple built-in type
2016-10-18 04:00:21	<--	bzmub (~bzmub@mar13-2-82-246-223-195.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-10-18 04:00:34	<--	interf (~int@unaffiliated/inter) has quit (Ping timeout: 250 seconds)
2016-10-18 04:00:41	Eelis	Oxyd: code on vector<T> can permits T that either have or dont have state
2016-10-18 04:00:44	Eelis	*permit
2016-10-18 04:00:50	Eelis	*Ts
2016-10-18 04:01:05	-->	brwsr (~textual@193.108.76.86) has joined ##c++
2016-10-18 04:01:12	<--	rosten (~rosten@cpe-45-48-9-161.socal.res.rr.com) has quit (Ping timeout: 252 seconds)
2016-10-18 04:01:15	Eelis	so you may call a function with some empty things and the function might store them in a vector never knowing they are empty
2016-10-18 04:01:25	Eelis	because it's generic
2016-10-18 04:01:41	-->	Appleman1234 (~Appleman1@KD106154001160.au-net.ne.jp) has joined ##c++
2016-10-18 04:01:51	Oxyd	Sure. That's why I suggested opting-in with an attribute instead of having it work like that for all empty types.
2016-10-18 04:01:52	<--	brwsr (~textual@193.108.76.86) has quit (Client Quit)
2016-10-18 04:02:26	-->	rvq (~rvq@AAubervilliers-151-1-16-139.w83-114.abo.wanadoo.fr) has joined ##c++
2016-10-18 04:02:26	<--	jablo (~jablo@80.243.123.111) has quit (Quit: jablo)
2016-10-18 04:02:31	Erlkoenig	afk brb
2016-10-18 04:02:32	Eelis	seems way more trouble than it's worth to me
2016-10-18 04:02:40	<--	rvq (~rvq@AAubervilliers-151-1-16-139.w83-114.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-10-18 04:02:55	-->	Mgaja (~Mgaja@nag77-2-83-152-154-106.fbx.proxad.net) has joined ##c++
2016-10-18 04:03:07	-->	uniqueusername (~user@131.104.23.2) has joined ##c++
2016-10-18 04:03:09	<--	Mgaja (~Mgaja@nag77-2-83-152-154-106.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-10-18 04:03:19	<--	frib (~dynorsau@host127-144-dynamic.51-82-r.retail.telecomitalia.it) has quit (Quit: Leaving)
2016-10-18 04:03:28	<--	mandeep (~mandeep@108.61.226.28) has quit (Quit: Leaving)
2016-10-18 04:03:28	-->	Uwi (~Uwi@AAubervilliers-151-1-16-139.w83-114.abo.wanadoo.fr) has joined ##c++
2016-10-18 04:03:31	-->	aalex (~aalex@64.187.177.58) has joined ##c++
2016-10-18 04:03:43	<--	Uwi (~Uwi@AAubervilliers-151-1-16-139.w83-114.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-10-18 04:03:50	Eelis	and if the pointer arith is UB, then you basically can't pass those things to /any/ utility function, because you don't know if the utility function is going to do pointer arith
2016-10-18 04:04:13	-->	merced (~merced@unaffiliated/merced) has joined ##c++
2016-10-18 04:04:27	-->	ykkao (~ykkao@cac94-8-82-245-27-76.fbx.proxad.net) has joined ##c++
2016-10-18 04:04:42	<--	ykkao (~ykkao@cac94-8-82-245-27-76.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-10-18 04:04:44	Eelis	so it would be introducing a feature that is (1) tempting to speed hungry noobs (2) virtually impossible to use correctly (3) trivial to use incorrectly
2016-10-18 04:04:54	Eelis	hence "good luck with that" :D
2016-10-18 04:05:02	merced	wut
2016-10-18 04:05:41	-->	zpataki (~quassel@91.82.139.80.pool.invitel.hu) has joined ##c++
2016-10-18 04:05:58	-->	f3r70rr35f (~fernando@186.36.52.35) has joined ##c++
2016-10-18 04:05:58		[04:05]
2016-10-18 04:06:11	<--	yo5phz (~yo5phz___@83.103.155.5) has quit (Ping timeout: 256 seconds)
2016-10-18 04:06:36	-->	Rwo3 (~Rwo3@cac94-8-82-245-27-76.fbx.proxad.net) has joined ##c++
2016-10-18 04:06:47	Oxyd	Why, again, would you want to pass those things anywhere, though? Empty types are useful for policies passed as template arguments. You don't usually pass instances of those policy types around – you pass instances of the resulting template instantiation around, which is no longer [[empty]].
2016-10-18 04:06:48	<--	Rwo3 (~Rwo3@cac94-8-82-245-27-76.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-10-18 04:07:50	-->	Brklyn (~truthbk@38.122.226.210) has joined ##c++
2016-10-18 04:08:02	<--	uniqueusername (~user@131.104.23.2) has quit (Quit: leaving)
2016-10-18 04:08:34	Eelis	what? passing empty types around is commonplace, e.g. functors
2016-10-18 04:08:36	<--	kw01f (~kw01f@merlin.mvtec.com) has quit
2016-10-18 04:08:45	Oxyd	So don't mark them [[empty]].
2016-10-18 04:09:16	Eelis	so then the attribute doesn't even cover the important use cases
2016-10-18 04:09:16	Oxyd	Or, write the things that accept those things so that they work with [[empty]] types. That would be preferrable, in fact.
2016-10-18 04:09:21	-->	Sculptor_ (~Sculptor@cable-188-2-190-223.dynamic.sbb.rs) has joined ##c++
2016-10-18 04:09:51	Eelis	no, trying to retrofit all C++ code so that it can work with bizarro empty types on which pointer arithmetic is UB is an insane idea
2016-10-18 04:10:32	Oxyd	So don't retrofit all C++ code, obviously.
2016-10-18 04:10:50	-->	Amun_Ra (~amun-ra@retro.rocks) has joined ##c++
2016-10-18 04:12:39	thinlizzy	jesus
2016-10-18 04:12:47	-->	jcape (~jcape@2604:2000:ef4e:2a00:c724:1ec5:4a58:c31a) has joined ##c++
2016-10-18 04:13:14	<--	Elysion (~elysion@ppp121-45-81-39.bras1.adl6.internode.on.net) has quit (Read error: Connection reset by peer)
2016-10-18 04:13:16	thinlizzy	I have no idea how to define that
2016-10-18 04:13:40	Eelis	what would even be the point of making it UB instead of ill-formed? o_O
2016-10-18 04:13:44	<--	Gathis (~TheBlack@unaffiliated/gathis) has quit (Remote host closed the connection)
2016-10-18 04:13:53	-->	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has joined ##c++
2016-10-18 04:13:58	-->	mss_cyclist (~MSe@89-250-189-210.tangos.nl) has joined ##c++
2016-10-18 04:14:09	-->	hualet (~hualet@113.57.50.233) has joined ##c++
2016-10-18 04:14:12	Eelis	we have a type system to check our operations. if we decide there's a pointer type for which the pointer ops don't make sense, we can just make them not type check
2016-10-18 04:14:15	<--	serycjon (~jonas@k333stu2.felk.cvut.cz) has quit (Ping timeout: 252 seconds)
2016-10-18 04:14:16	Oxyd	Is it reasonable to make something ill-formed based on the presence of an attribute?
2016-10-18 04:14:35	Eelis	no idea what the status of attributes is
2016-10-18 04:14:53	Oxyd	So far as I know, an implementation is allowed to ignore all attributes and still be conformant.
2016-10-18 04:15:10	-->	interf (~int@unaffiliated/inter) has joined ##c++
2016-10-18 04:15:15	Eelis	then that suggests that if defined at all, it shouldn't be an attribute
2016-10-18 04:15:15	AStorm	Eelis: but said closure type (lambda) has a type name
2016-10-18 04:15:16	Oxyd	If it were ill-formed, it'd be required to diagnose it, so it wouldn't be allowed to ignore the attribute. Which sounds like a no-go to me.
2016-10-18 04:15:36	AStorm	so typeid(mylambda).name() could be useful
2016-10-18 04:15:54	-->	frib (~dynorsau@host127-144-dynamic.51-82-r.retail.telecomitalia.it) has joined ##c++
2016-10-18 04:16:03	Eelis	AStorm: that doesn't require RTTI
2016-10-18 04:16:05	Eelis	<< typeid(int)
2016-10-18 04:16:06	geordi	int
2016-10-18 04:16:10	-->	Nilesh_ (uid116340@gateway/web/irccloud.com/x-gbcjorrdsblhtqmo) has joined ##c++
2016-10-18 04:16:10	-->	hariel (~wolfcub@177.131.171.124) has joined ##c++
2016-10-18 04:16:13	Eelis	note how int does not store anything but the int data
2016-10-18 04:16:30	urdh	<< typeid([](){})
2016-10-18 04:16:30	geordi	main::{lambda()#1}
2016-10-18 04:17:24	Bigcheese	attributes are basically uselss in C++
2016-10-18 04:17:26	Eelis	RTTI is when (on typical implementations) you have to look at the vtable pointer (inside the object) at runtime
2016-10-18 04:17:30	-->	tux_ (~tux@183.202.208.233) has joined ##c++
2016-10-18 04:17:36	Bigcheese	They aren't allowed to have any semantic meaning.
2016-10-18 04:17:42	b_jonas	Bigcheese: they're not useless
2016-10-18 04:17:50	va	{ [](){ cout << typeid([](){}); }(); }
2016-10-18 04:17:51	geordi	main::{lambda()#1}::operator()() const::{lambda()#1}
2016-10-18 04:18:04	Eelis	Bigcheese: if that's the case then they couldn't change the sizeof at all either, right?
2016-10-18 04:18:09	Eelis	of anything
2016-10-18 04:18:09	b_jonas	the deprecated and the noreturn attributes are pretty useful for providing the right diagnostic, even if that's optional
2016-10-18 04:18:20	Bigcheese	Really all they can be used for is non-ub based optimization and warnings.
2016-10-18 04:18:33	<--	hualet (~hualet@113.57.50.233) has quit (Ping timeout: 256 seconds)
2016-10-18 04:18:33	Bigcheese	Eelis: correct
2016-10-18 04:18:41	Bigcheese	(as-if and all that)
2016-10-18 04:18:41	AStorm	<< auto mylambda = [](){}; typeid(mylambda)
2016-10-18 04:18:41	geordi	error: expected unqualified-id before 'typeid'
2016-10-18 04:19:00	AStorm	sorry, my geordi skills went rusty
2016-10-18 04:19:02	-->	xx (866411c3@gateway/web/freenode/ip.134.100.17.195) has joined ##c++
2016-10-18 04:19:14	AStorm	<< { auto mylambda = [](){}; cout << typeid(mylambda); }
2016-10-18 04:19:14	geordi	error: expected primary-expression before '{' token
2016-10-18 04:19:21	Eelis	!geordi syntax
2016-10-18 04:19:22	AStorm	never mind me.
2016-10-18 04:19:22	nolyc	"geordi { X } Y" is like "Y\n int main(){ X }", and "geordi << X; Y" is like "geordi { cout << X; } Y".
2016-10-18 04:19:34	AStorm	argh I forgot to remove <<
2016-10-18 04:19:36	AStorm	{ auto mylambda = [](){}; cout << typeid(mylambda); }
2016-10-18 04:19:37	geordi	main::{lambda()#1}
2016-10-18 04:19:47	AStorm	this potentially needs runtime
2016-10-18 04:19:47	Oxyd	Huh. I assumed it would be okay for an attribute to change the sizeof, since an implementation can change sizeof anyway through padding and alignment.
2016-10-18 04:19:52	<--	alhariel (~wolfcub@177.131.178.156) has quit (Ping timeout: 260 seconds)
2016-10-18 04:19:57	Bigcheese	AStorm: why?
2016-10-18 04:20:00	Bigcheese	I mean, potentially sure.
2016-10-18 04:20:11	Bigcheese	1 + 1 potentially needs a runtime library.
2016-10-18 04:20:51	Bigcheese	Oxyd: the guidance in commitee has been that you should be able to remove all attributes and have the program mean the same thing.
2016-10-18 04:21:08	Oxyd	Which you would with [[empty]]. You'd only lose the memory optimisation.
2016-10-18 04:21:08		[04:21]
2016-10-18 04:21:18	-->	snover (~Adium@unaffiliated/snover) has joined ##c++
2016-10-18 04:21:25	-->	uuah (~uuah@prz29-1-78-205-58-16.fbx.proxad.net) has joined ##c++
2016-10-18 04:21:28	Oxyd	Well, unless sizeof(T) changing counts as the program's meaning changing.
2016-10-18 04:21:28	Eelis	the ABI would also have to be aware of this
2016-10-18 04:21:46	<--	uuah (~uuah@prz29-1-78-205-58-16.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-10-18 04:22:04	-->	Omlvm (~Omlvm@prz29-1-78-205-58-16.fbx.proxad.net) has joined ##c++
2016-10-18 04:22:22	<--	Omlvm (~Omlvm@prz29-1-78-205-58-16.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-10-18 04:22:24	-->	Vincent7 (~NoIdent@80.95.29.212) has joined ##c++
2016-10-18 04:22:36	Bigcheese	yep
2016-10-18 04:23:02	Bigcheese	I think it's also that any single attribute in the program can be removed and still have the same meaning.
2016-10-18 04:23:07	Bigcheese	They are super weak.
2016-10-18 04:23:19	-->	jan64 (~jan64@agpf104.neoplus.adsl.tpnet.pl) has joined ##c++
2016-10-18 04:23:22	<--	JoshS (~jshjsh@172.56.17.42) has quit (Ping timeout: 250 seconds)
2016-10-18 04:23:41	-->	govg (~govg@unaffiliated/govg) has joined ##c++
2016-10-18 04:24:02	<--	jan64 (~jan64@agpf104.neoplus.adsl.tpnet.pl) has quit (Max SendQ exceeded)
2016-10-18 04:24:36	-->	jan64 (~jan64@agpf104.neoplus.adsl.tpnet.pl) has joined ##c++
2016-10-18 04:24:50	-->	Ricks- (Ricks@1.ipv6.aegir.superbnc.com) has joined ##c++
2016-10-18 04:24:59	<--	xx (866411c3@gateway/web/freenode/ip.134.100.17.195) has quit (Quit: Page closed)
2016-10-18 04:25:16	<--	jan64 (~jan64@agpf104.neoplus.adsl.tpnet.pl) has quit (Max SendQ exceeded)
2016-10-18 04:25:38	<--	Ricks (Ricks@1.ipv4.aegir.superbnc.com) has quit (Ping timeout: 268 seconds)
2016-10-18 04:25:40	-->	xx (866411c3@gateway/web/freenode/ip.134.100.17.195) has joined ##c++
2016-10-18 04:25:43	-->	nilg (~user@92.247.85.22) has joined ##c++
2016-10-18 04:25:46	<--	FreeBirdLjj (~freebirdl@223.65.168.113) has quit (Remote host closed the connection)
2016-10-18 04:26:23	<--	hariel (~wolfcub@177.131.171.124) has quit (Read error: Connection reset by peer)
2016-10-18 04:26:35	-->	jan64 (~jan64@adlh205.neoplus.adsl.tpnet.pl) has joined ##c++
2016-10-18 04:26:48	-->	hariel (~wolfcub@177.131.171.124) has joined ##c++
2016-10-18 04:26:51	-->	FreeBirdLjj (~freebirdl@223.65.168.113) has joined ##c++
2016-10-18 04:27:05	<--	Polymorphism (~Astoundin@unaffiliated/polymorphism) has quit (Quit: Leaving)
2016-10-18 04:27:36	-->	eduardas_m (~eduardas_@213.197.143.19) has joined ##c++
2016-10-18 04:27:47	-->	skip (~skip@c-174-56-44-218.hsd1.nm.comcast.net) has joined ##c++
2016-10-18 04:27:48	-->	anonan (~anon@eduroam-039-240.wlan.univie.ac.at) has joined ##c++
2016-10-18 04:28:01	<--	slidercrank (~slidercra@unaffiliated/slidercrank) has quit (Quit: Leaving)
2016-10-18 04:28:03	-->	Blue_Hat (~TwinKam20@104.238.45.47) has joined ##c++
2016-10-18 04:28:29	AStorm	Bigcheese: you can have a function take a lambda from different classes
2016-10-18 04:28:41	<--	skip (~skip@c-174-56-44-218.hsd1.nm.comcast.net) has left ##c++
2016-10-18 04:28:46	AStorm	which means said lambdas might have different typeid (they are not mandated to)
2016-10-18 04:29:01	<--	moffz0r (~moffz0r@14-201-5-120.static.tpgi.com.au) has quit (Ping timeout: 260 seconds)
2016-10-18 04:29:04	AStorm	which may be useful, say, for debugging where it came from
2016-10-18 04:29:09	--	Ricks- is now known as RIcks
2016-10-18 04:29:12	--	RIcks is now known as Ricks
2016-10-18 04:29:26	<--	mss_cyclist (~MSe@89-250-189-210.tangos.nl) has quit (Ping timeout: 250 seconds)
2016-10-18 04:29:38	-->	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has joined ##c++
2016-10-18 04:30:22	-->	YungRaj (~YungRaj@nat-165-91-12-75.tamulink.tamu.edu) has joined ##c++
2016-10-18 04:30:28	Eelis	AStorm: just because different lambdas have different type_infos doesn't mean they need data in their closure if their capture is empty
2016-10-18 04:31:05	-->	brwsr (~textual@193.108.76.86) has joined ##c++
2016-10-18 04:31:06	Eelis	i think you can't provide a real example where a capture-less lambda would have actual data in it
2016-10-18 04:31:10	urdh	<< typeid([a](){return a;}); int a;
2016-10-18 04:31:10	geordi	error: capture of variable 'a' with non-automatic storage duration
2016-10-18 04:31:20	urdh	:(
2016-10-18 04:31:20	<--	FreeBirdLjj (~freebirdl@223.65.168.113) has quit (Ping timeout: 250 seconds)
2016-10-18 04:31:43	-->	sssilver (~sssilver@2605:6000:ee54:b500:6db0:d0a6:6f96:a321) has joined ##c++
2016-10-18 04:32:11	Bigcheese	AStorm: sure, an implementation could do that. They don't.
2016-10-18 04:32:28	Bigcheese	You can just use the function pointer and debug info.
2016-10-18 04:33:50	<--	anonan (~anon@eduroam-039-240.wlan.univie.ac.at) has left ##c++
2016-10-18 04:34:12	<--	MrDoctor (~anirban@unaffiliated/apostasy) has quit (Ping timeout: 252 seconds)
2016-10-18 04:34:21	-->	kwayne (~anon@eduroam-039-240.wlan.univie.ac.at) has joined ##c++
2016-10-18 04:34:25	kwayne	Hi! Could someone please help me out, I'm confused about how the compiler parses expressions that I intended to be anonymous class instances: http://melpon.org/wandbox/permlink/OXw2CEuopnbEoSs0
2016-10-18 04:34:29	<--	Bellator (~Bellator@D93FF597.cm-21.dynamic.ziggo.nl) has quit (Quit: Leaving)
2016-10-18 04:34:44	-->	tadaa (~tadaaa@nat-wh-wz4-12.rz.uni-karlsruhe.de) has joined ##c++
2016-10-18 04:35:03	-->	mkramer (~Adium@c-76-30-207-152.hsd1.tx.comcast.net) has joined ##c++
2016-10-18 04:35:24	kwayne	Ultimately, I'd like to create an unnamed instance of ofstream, passing its constructor a single parameter named "path".
2016-10-18 04:35:33	<--	dminuoso_ (~dminuoso@unaffiliated/dminuoso) has quit (Ping timeout: 260 seconds)
2016-10-18 04:35:33	Eelis	kwayne: for x(y); it looks at whether x is a type or not
2016-10-18 04:36:29	Eelis	what you're running into is a rule that roughly says that if something can be parsed as a declaration, it is. if you have T(x); then it can be parsed as a declaration, so it is. write (T(x)); to make it clear that you don't want a declaration
2016-10-18 04:36:29		[04:36]
2016-10-18 04:36:52	<--	bjz_ (~bjz@104.222.140.102) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-10-18 04:37:04	<--	zpataki (~quassel@91.82.139.80.pool.invitel.hu) has quit (Ping timeout: 260 seconds)
2016-10-18 04:37:20	-->	zpataki (~quassel@adsl-164-121.globonet.hu) has joined ##c++
2016-10-18 04:37:42	urdh	or use T{x}; ?
2016-10-18 04:37:49	<--	merced (~merced@unaffiliated/merced) has left ##c++ ("WeeChat 0.4.2")
2016-10-18 04:37:58	kwayne	Eelis: So the compiler parses "x(y)" as a declaration of a variable of type "x" and name "y", with the parantheses (being superfluous) belonging syntactically to the name?
2016-10-18 04:37:58	<--	tux_ (~tux@183.202.208.233) has quit (Remote host closed the connection)
2016-10-18 04:38:17	Eelis	the parens are part of the declarator, yes
2016-10-18 04:38:28	kwayne	urdh: I guess this would be the more elegangt solution, but I assume it requires C++11 or newer.
2016-10-18 04:38:47	-->	NoIdent (~NoIdent@dslb-084-063-142-150.084.063.pools.vodafone-ip.de) has joined ##c++
2016-10-18 04:38:58	<--	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has quit (Ping timeout: 250 seconds)
2016-10-18 04:39:08	kwayne	Eelis: I see. Thank you for your swift help!
2016-10-18 04:39:08	urdh	it does, but your wandbox paste is using c++1z so I assumed that's what you're targeting
2016-10-18 04:39:31	<--	Vincent7 (~NoIdent@80.95.29.212) has quit (Ping timeout: 256 seconds)
2016-10-18 04:39:32	kwayne	urdh: That wasn't intentional, sorry for the confusion. :)
2016-10-18 04:39:34	<--	ReverseBlade (~user@213.74.212.180) has quit (Read error: Connection reset by peer)
2016-10-18 04:39:34	<--	doppel (~chatzilla@ip70-189-197-158.lv.lv.cox.net) has quit (Quit: ChatZilla 0.9.92 [Firefox 49.0.1/20160922113459])
2016-10-18 04:40:12	<--	c0le (~c0le@59.99.251.45) has quit (Quit: "This is the end.. My beautiful friend.. The end.")
2016-10-18 04:40:47	KrzaQ	{} struct Foo{ thread_local int bar; };
2016-10-18 04:40:47	geordi	error: storage class specified for 'bar'
2016-10-18 04:40:52	KrzaQ	{} struct Foo{ static thread_local int bar; };
2016-10-18 04:40:52	geordi	<no output>
2016-10-18 04:41:04	KrzaQ	Why doesn't the first compile (or why does the second)?
2016-10-18 04:41:17	-->	Zxpr1jk (~zxpr1jk@user-69-1-61-138.knology.net) has joined ##c++
2016-10-18 04:42:07	kwayne	urdh: I forgot: Thanks to you too, even though I couldn't implement your suggestion!
2016-10-18 04:43:14	Eelis	KrzaQ: a nonstatic data member is a subobject of the whole object, so it cannot have its own storage class independent of the whole object, so specifying a storage class on a nonstatic data member is nonsensical.
2016-10-18 04:43:17	-->	MrDoctor (~anirban@unaffiliated/apostasy) has joined ##c++
2016-10-18 04:43:47	KrzaQ	well, but thread_local implies static in other contexts
2016-10-18 04:43:55	-->	mss_cyclist (~MSe@89-250-189-210.tangos.nl) has joined ##c++
2016-10-18 04:44:23	-->	illerucis (~illerucis@199.201.65.132) has joined ##c++
2016-10-18 04:45:11	<--	kasper^ (~safaf@82.137.9.188) has quit (Ping timeout: 256 seconds)
2016-10-18 04:47:26	-->	dminuoso_ (~dminuoso@unaffiliated/dminuoso) has joined ##c++
2016-10-18 04:47:27	b_jonas	KrzaQ: does it? I thought there were thread_local global variables too (ones that are defined in one compilation unit and used from any other that declares it as extern thread_local)
2016-10-18 04:47:58	-->	Mike11 (~Mike@unaffiliated/mike11) has joined ##c++
2016-10-18 04:48:09	-->	syem (~s@unaffiliated/syem) has joined ##c++
2016-10-18 04:48:11	Eelis	KrzaQ: if your real question was "why doesn't thread_local imply static in class definitions while it does in function bodies", why didn't you ask that one?
2016-10-18 04:48:31	b_jonas	wait, thread_local implies static in function bodies?
2016-10-18 04:48:37	<--	voidah (~voidah@unaffiliated/voider) has quit (Remote host closed the connection)
2016-10-18 04:48:46	b_jonas	people put thread_local variable definitions in function bodies?
2016-10-18 04:48:49	b_jonas	why would anyone do that?
2016-10-18 04:49:03	KrzaQ	it does, according to this SO answer: http://stackoverflow.com/a/22794640/2456565
2016-10-18 04:49:33	urdh	b_jonas: same reason people put static variable definitions in function bodies i guess, but with thread safety
2016-10-18 04:49:53	b_jonas	ugh
2016-10-18 04:50:39	b_jonas	but a thread_local variable is much more wasteful, it shouldn't be used lightly
2016-10-18 04:50:53	-->	lompik (~lompik@2001:19f0:6800:1522:5400:ff:fe21:fd3d) has joined ##c++
2016-10-18 04:50:53	<--	voldyman (uid11639@gateway/web/irccloud.com/x-rwhjlpjtmypmdfuw) has quit (Ping timeout: 245 seconds)
2016-10-18 04:51:05	b_jonas	it has to exist for every thread, even when that function won't be called in most threads
2016-10-18 04:51:25	urdh	{ cout << f() << f() < f(); } int f() { static int i; return ++i; }
2016-10-18 04:51:25	geordi	error: no match for 'operator<' in '(& cout.ostream::operator<<(f()))->ostream::operator<<(f()) < f()' (operand types are 'ostream' and 'int')
2016-10-18 04:51:30	KrzaQ	Eelis: I wasn't sure what to ask for
2016-10-18 04:51:30		[04:51]
2016-10-18 04:51:34	urdh	b_jonas, people do all kinds of inefficient stuff
2016-10-18 04:51:58	urdh	{ cout << f() << f() << f(); } int f() { static int i; return ++i; } // fix'd
2016-10-18 04:51:59	geordi	123
2016-10-18 04:52:21	-->	ipronin (~ipronin@c-76-102-197-199.hsd1.ca.comcast.net) has joined ##c++
2016-10-18 04:52:33	<--	CEnnis91 (uid3543@gateway/web/irccloud.com/x-szgzoavngzfipyum) has quit (Ping timeout: 245 seconds)
2016-10-18 04:52:34	thinlizzy	!fact
2016-10-18 04:52:36	nolyc	A d-char-sequence shall consist of at most 16 characters.
2016-10-18 04:52:54	KrzaQ	what is a d-char-sequence
2016-10-18 04:53:11	KrzaQ	oh
2016-10-18 04:53:14	KrzaQ	Interesting
2016-10-18 04:53:17	-->	nine_milli (~nine_mill@32.211.52.104) has joined ##c++
2016-10-18 04:53:43	<--	nine_milli (~nine_mill@32.211.52.104) has left ##c++
2016-10-18 04:53:43	urdh	<< R"AAAAAAAAAAAAAAAA(hello)AAAAAAAAAAAAAAAA";
2016-10-18 04:53:44	geordi	hello
2016-10-18 04:53:50	urdh	<< R"AAAAAAAAAAAAAAAAB(hello)AAAAAAAAAAAAAAAAB";
2016-10-18 04:53:50	geordi	error: raw string delimiter longer than 16 characters
2016-10-18 04:53:52	urdh	:(
2016-10-18 04:54:02	-->	ewanshin (~ewanshin@183.101.46.30) has joined ##c++
2016-10-18 04:54:04	-->	voldyman (uid11639@gateway/web/irccloud.com/x-mumhtziuohvnnexq) has joined ##c++
2016-10-18 04:54:04	urdh	conformist compiler
2016-10-18 04:54:15	KrzaQ	geordi, use --clang
2016-10-18 04:54:16	geordi	error: raw string delimiter longer than 16 characters; use PREFIX( )PREFIX to delimit raw string
2016-10-18 04:54:24	<--	mss_cyclist (~MSe@89-250-189-210.tangos.nl) has quit (Ping timeout: 252 seconds)
2016-10-18 04:54:35	<--	reem_ (sid78397@gateway/web/irccloud.com/x-wwoaukmmsaqatciv) has quit (Ping timeout: 250 seconds)
2016-10-18 04:54:55	<--	skooch (sid3163@gateway/web/irccloud.com/x-qnrdpeebpkgxveix) has quit (Ping timeout: 258 seconds)
2016-10-18 04:55:08	urdh	!fact
2016-10-18 04:55:10	nolyc	A NullablePointer type is a pointer-like type that supports null values.
2016-10-18 04:55:26	<--	bitonic (sid61915@gateway/web/irccloud.com/x-lexopnacfvclhomy) has quit (Ping timeout: 250 seconds)
2016-10-18 04:55:29	<--	Brklyn (~truthbk@38.122.226.210) has quit (Read error: Connection reset by peer)
2016-10-18 04:55:48	<--	TMM (~hp@fsf/member/pdpc.professional.tmm) has quit (Quit: Ex-Chat)
2016-10-18 04:55:51	-->	Brklyn_ (~truthbk@38.122.226.210) has joined ##c++
2016-10-18 04:56:07	-->	ReverseBlade (~user@213.74.212.180) has joined ##c++
2016-10-18 04:56:08	AStorm	what is that, concepts?
2016-10-18 04:56:19	AStorm	so there is a pointer-like type that does not support null values?
2016-10-18 04:56:30	<--	NoIdent (~NoIdent@dslb-084-063-142-150.084.063.pools.vodafone-ip.de) has quit (Ping timeout: 265 seconds)
2016-10-18 04:56:48	ville	yes concepts/template parameters are named in CamelCase
2016-10-18 04:56:54	<--	ipronin (~ipronin@c-76-102-197-199.hsd1.ca.comcast.net) has quit (Ping timeout: 250 seconds)
2016-10-18 04:57:33	<--	jcape (~jcape@2604:2000:ef4e:2a00:c724:1ec5:4a58:c31a) has quit (Ping timeout: 245 seconds)
2016-10-18 04:58:04	<--	tjpeden (sid42254@gateway/web/irccloud.com/x-scwrthlmmkrlqbua) has quit (Ping timeout: 258 seconds)
2016-10-18 04:58:07	<--	viro (~viro@unaffiliated/viro) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-10-18 04:58:20	urdh	so basically it's anything you can compare to nullptr
2016-10-18 04:58:25	urdh	http://en.cppreference.com/w/cpp/concept/NullablePointer
2016-10-18 04:58:33	-->	CEnnis91 (uid3543@gateway/web/irccloud.com/x-ilfgygnlbqwexnle) has joined ##c++
2016-10-18 04:58:41	KrzaQ	AStorm: list<T>::iterator
2016-10-18 04:58:50	KrzaQ	!fact
2016-10-18 04:58:51	Eelis	ah yes, that reminds me to also make !fact use the newly generated quotes
2016-10-18 04:58:51	nolyc	As indicated by syntax, cv-qualifiers are a significant component in function return types.
2016-10-18 04:58:54	<--	sssilver (~sssilver@2605:6000:ee54:b500:6db0:d0a6:6f96:a321) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-10-18 04:59:10	-->	iceiceice (~chris@pool-173-61-153-221.cmdnnj.fios.verizon.net) has joined ##c++
2016-10-18 04:59:21	KrzaQ	nolyc is yours as well?
2016-10-18 04:59:27	<--	voldyman (uid11639@gateway/web/irccloud.com/x-mumhtziuohvnnexq) has quit (Ping timeout: 256 seconds)
2016-10-18 04:59:28	<--	rzeck (~robert@84-10-11-234.static.chello.pl) has quit (Remote host closed the connection)
2016-10-18 04:59:32	ville	it's PlasmaHH's
2016-10-18 04:59:56	ville	cv-qualifiers are significant in as much as they aren't ignored
2016-10-18 04:59:56	<--	Haliucinas (~Haliucina@88-119-97-225.static.zebra.lt) has quit (Read error: Connection reset by peer)
2016-10-18 04:59:57	PlasmaHH	and naked for a purpose!
2016-10-18 05:00:13	-->	moffz0r (~moffz0r@14-201-5-120.static.tpgi.com.au) has joined ##c++
2016-10-18 05:00:40	-->	mindandsky (~mindandsk@50-232-5-123-static.hfc.comcastbusiness.net) has joined ##c++
2016-10-18 05:01:29	-->	skooch (sid3163@gateway/web/irccloud.com/x-ewxldsrrtgprkcgy) has joined ##c++
2016-10-18 05:02:11	urdh	!interview
2016-10-18 05:02:12	nolyc	How do you make sense of the fact that the specifiers indicate the type, storage class or other properties of the entities being declared?
2016-10-18 05:02:17	<--	avalchev (uid190868@gateway/web/irccloud.com/x-wvciqczoegxqsmhk) has quit (Ping timeout: 258 seconds)
2016-10-18 05:02:33	<--	mehdi___ (sid15567@gateway/web/irccloud.com/x-ngrrwbvthymqjdci) has quit (Ping timeout: 245 seconds)
2016-10-18 05:02:49	<--	Awesomecase (sid56584@gateway/web/irccloud.com/x-icstwfkqfrnnmdqt) has quit (Ping timeout: 250 seconds)
2016-10-18 05:02:49	<--	roolebo_ (sid64806@gateway/web/irccloud.com/x-txsywpxrsydbuzpn) has quit (Ping timeout: 250 seconds)
2016-10-18 05:03:03	<--	xaxxon (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has quit (Quit: Leaving)
2016-10-18 05:03:14	<--	xx (866411c3@gateway/web/freenode/ip.134.100.17.195) has quit (Quit: Page closed)
2016-10-18 05:03:16	<--	CEnnis91 (uid3543@gateway/web/irccloud.com/x-ilfgygnlbqwexnle) has quit (Ping timeout: 265 seconds)
2016-10-18 05:03:20	thinlizzy	interview questions by Mojo Jojo
2016-10-18 05:03:25	-->	reem_ (sid78397@gateway/web/irccloud.com/x-jzsyuzlfkpmlpijl) has joined ##c++
2016-10-18 05:03:47	AStorm	KrzaQ: that's a Pointer?
2016-10-18 05:03:52	<--	mikhey (~mikhey@2601:985:4100:6e00:14ec:d238:753e:4477) has quit (Read error: Connection reset by peer)
2016-10-18 05:04:00	-->	xaxxon (~xaxxon@2601:602:9d00:d58b:c491:8c12:e82a:d853) has joined ##c++
2016-10-18 05:04:08	AStorm	I think that is an Iterator concept (or subconcept thereof)
2016-10-18 05:04:14	<--	unK_ (~drunK@host-81-190-235-217.dynamic.mm.pl) has quit (Ping timeout: 265 seconds)
2016-10-18 05:04:15	KrzaQ	AStorm: no. It's a pointer-like type that doesn't support null values
2016-10-18 05:04:17	-->	edr (~edr@pdpc/supporter/professional/edr) has joined ##c++
2016-10-18 05:04:18	-->	tjpeden (sid42254@gateway/web/irccloud.com/x-exwyqvvhdqcrfatn) has joined ##c++
2016-10-18 05:04:24	AStorm	no, it's an Iterator.
2016-10-18 05:04:26	KrzaQ	Iterators are pointer-like
2016-10-18 05:04:28	-->	bitonic (sid61915@gateway/web/irccloud.com/x-sbuhrmzprokapmjj) has joined ##c++
2016-10-18 05:04:33	AStorm	but are not pointers, so no
2016-10-18 05:04:44	KrzaQ	that's what the -like at the end means
2016-10-18 05:04:45	AStorm	also wtf is "pointer-like"
2016-10-18 05:04:49	urdh	"A NullablePointer type is a pointer-like type that supports null values."
2016-10-18 05:04:51	AStorm	can I do --
2016-10-18 05:05:03	AStorm	can I have a difference_type
2016-10-18 05:05:38	<--	aricz (~aricz@82.194.220.89) has quit (Quit: leaving)
2016-10-18 05:06:17	AStorm	no, iterators are not in general pointer-like
2016-10-18 05:06:21	-->	snyp (~Snyp@nas4.meghbelabroadband.in) has joined ##c++
2016-10-18 05:06:26	urdh	yes they are
2016-10-18 05:06:27	<--	iamthad (~iamthad@cpe-70-112-32-152.austin.res.rr.com) has quit (Ping timeout: 252 seconds)
2016-10-18 05:06:39	AStorm	they don't support quite a few operations pointers do
2016-10-18 05:06:39		[05:06]
2016-10-18 05:07:10	urdh	pointer-like in this context could be as nondescript as "points at stuff"
2016-10-18 05:07:21	AStorm	worthless definition is worthless then
2016-10-18 05:07:32	-->	viro (~viro@unaffiliated/viro) has joined ##c++
2016-10-18 05:07:45	urdh	NullablePointer doesn't even require an operator* or operator->
2016-10-18 05:08:05	-->	Awesomecase (sid56584@gateway/web/irccloud.com/x-yshxbswafsfvljzl) has joined ##c++
2016-10-18 05:08:19	KrzaQ	what
2016-10-18 05:08:30	 *	KrzaQ thought all iterators required op++ and op*
2016-10-18 05:08:31	<--	skweek (~skweek@68-200-146-225.res.bhn.net) has quit (Ping timeout: 256 seconds)
2016-10-18 05:08:51	AStorm	that' s not an iterator :D
2016-10-18 05:09:00	AStorm	also concepts are weird and commonly ill-defined
2016-10-18 05:09:00	-->	roolebo_ (sid64806@gateway/web/irccloud.com/x-jvykubuclzqoyiwb) has joined ##c++
2016-10-18 05:09:18	-->	phinxy (~tehhhd@unaffiliated/phinxy) has joined ##c++
2016-10-18 05:09:21	 *	KrzaQ shrugs
2016-10-18 05:09:22	urdh	it's not a concept as such
2016-10-18 05:09:30	urdh	it's a type requirement in the standard
2016-10-18 05:09:30	KrzaQ	Iterators are still pointer-like
2016-10-18 05:09:30	urdh	http://eel.is/c++draft/nullablepointer.requirements
2016-10-18 05:09:32	ville	why do you say ill-defined? just because they specify one aspect of what a "real" types have doesn't make the concept ill-defined
2016-10-18 05:09:51	AStorm	actually this one is properly defined yes
2016-10-18 05:10:02	AStorm	just the cppreference description is silly
2016-10-18 05:10:03	<--	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has quit (Quit: Leaving.)
2016-10-18 05:10:18	AStorm	"NullablePointer is an object which can be compared to std::nullptr_t objects."
2016-10-18 05:10:26	AStorm	that would be correct.
2016-10-18 05:10:35	AStorm	skip content-free "pointer-like"
2016-10-18 05:10:37	-->	pylbrecht (~pylbrecht@2a02:8109:8a40:12b4:9eff:1344:72c0:fae) has joined ##c++
2016-10-18 05:10:51	<--	dminuoso_ (~dminuoso@unaffiliated/dminuoso) has quit (Remote host closed the connection)
2016-10-18 05:10:54	-->	JoshS (~jshjsh@172.56.17.91) has joined ##c++
2016-10-18 05:11:13	-->	nacon (~nacon@50-1-124-10.dedicated.static.sonic.net) has joined ##c++
2016-10-18 05:11:13	<--	nacon (~nacon@50-1-124-10.dedicated.static.sonic.net) has quit (Changing host)
2016-10-18 05:11:13	-->	nacon (~nacon@unaffiliated/nacon) has joined ##c++
2016-10-18 05:11:22	AStorm	compared to and constructed from actually
2016-10-18 05:11:23	urdh	uh, the cppreference description is a verbatim quote from the standard
2016-10-18 05:11:28	AStorm	which is a silly quote
2016-10-18 05:11:30	S4nD3r	Hey, what am I doing wrong here https://bpaste.net/show/49237a6565e5
2016-10-18 05:11:34	-->	voldyman (uid11639@gateway/web/irccloud.com/x-cfhxmjcpgihxyvte) has joined ##c++
2016-10-18 05:11:38	urdh	almost
2016-10-18 05:11:44	AStorm	there is a whole set of requirements on NullablePointer, none of which make it especially "pointer-like"
2016-10-18 05:11:47	S4nD3r	I need to read a file and store the values into a vector of vectors
2016-10-18 05:11:48	-->	hualet (~hualet@113.57.50.233) has joined ##c++
2016-10-18 05:12:08	urdh	it even adds information, because the standard says "A NullablePointer type is a pointer-like type that supports null values", not specifying what a null value is
2016-10-18 05:12:14	urdh	(until later)
2016-10-18 05:12:22	<--	viro (~viro@unaffiliated/viro) has quit (Ping timeout: 256 seconds)
2016-10-18 05:12:23	KrzaQ	S4nD3r: you're not allocating memory for your vectors
2016-10-18 05:12:32	AStorm	yeah yeah
2016-10-18 05:12:48	KrzaQ	vector<vector<Point> > contours(1000, vector<Point>(1000)); // simplest fix, not necessarily the best way
2016-10-18 05:12:52	AStorm	it's very much not pointer-like since it does not even have operator* and operator-> defined
2016-10-18 05:13:18	-->	MrP[Home] (~Palsson@c-a46fe555.06-213-6e6b701.cust.bredbandsbolaget.se) has joined ##c++
2016-10-18 05:13:23	-->	CEnnis91 (uid3543@gateway/web/irccloud.com/x-vzowqzstnikxfkfh) has joined ##c++
2016-10-18 05:13:30	-->	mehdi___ (sid15567@gateway/web/irccloud.com/x-olsqnqotipsykfwb) has joined ##c++
2016-10-18 05:14:07	urdh	it's pointer-like in the sense that i can assign nullptr to it
2016-10-18 05:14:16	AStorm	and compare to it
2016-10-18 05:14:28	AStorm	plus it has a slew of requirements
2016-10-18 05:15:01	AStorm	NullableHandle would be a much better name
2016-10-18 05:15:16	-->	dave0x6d (uid190567@gateway/web/irccloud.com/x-klhajderdjskmuaz) has joined ##c++
2016-10-18 05:15:27	urdh	anyway, the original gripe you had was that Iterators were not pointer-like, which they are as you can see because you can do lots of pointer-like stuff to them (incrementing, dereferencing, sometimes even adding and subtracting)
2016-10-18 05:15:36	urdh	which is much more than NullablePointer does
2016-10-18 05:15:44	thinlizzy	iterators being pointer like?
2016-10-18 05:15:49	thinlizzy	it is more like the opposite
2016-10-18 05:16:19	AStorm	exactly
2016-10-18 05:16:28	AStorm	and NullablePointer is very much not a pointer
2016-10-18 05:16:41	AStorm	someone likes to confuse people
2016-10-18 05:16:44	<--	brwsr (~textual@193.108.76.86) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-10-18 05:16:57	-->	SHC (~quassel@160.202.182.128) has joined ##c++
2016-10-18 05:17:05	-->	avalchev (uid190868@gateway/web/irccloud.com/x-gmytgxkofoxvswcw) has joined ##c++
2016-10-18 05:17:06	<--	kaffeetrauma (~Thunderbi@n37.informatik.fh-dortmund.de) has quit (Quit: kaffeetrauma)
2016-10-18 05:17:08	AStorm	also you cannot construct an iterator(nullptr) by design
2016-10-18 05:17:12	-->	GenteelBen (~GenteelBe@cpc70133-lutn12-2-0-cust324.9-3.cable.virginm.net) has joined ##c++
2016-10-18 05:17:30	urdh	yes, that's why it
2016-10-18 05:17:38	urdh	why it is not a NullablePointer
2016-10-18 05:17:43	AStorm	yup
2016-10-18 05:18:11	<--	Sceorem (~Sceorem@xbn44-3-82-232-76-9.fbx.proxad.net) has quit (Quit: Leaving)
2016-10-18 05:18:28	<--	Elirips (~Elirips@242.109.22.178.ftth.as8758.net) has quit (Read error: Connection reset by peer)
2016-10-18 05:18:31	urdh	(I'm bored at work so I'm just arguing to pass time)
2016-10-18 05:18:37	thinlizzy	yup
2016-10-18 05:18:46	thinlizzy	people love to do that here
2016-10-18 05:18:55	<--	tadaa (~tadaaa@nat-wh-wz4-12.rz.uni-karlsruhe.de) has quit (Ping timeout: 252 seconds)
2016-10-18 05:20:01	urdh	interestingly, there's requirements on pointer-like types in TSv2 it seems
2016-10-18 05:20:13	urdh	http://en.cppreference.com/w/cpp/experimental/propagate_const
2016-10-18 05:20:30	-->	Mnkras (~Mnkras@concrete5/781/Mnkras) has joined ##c++
2016-10-18 05:20:44	urdh	but that's clearly a very non-standard definition of "pointer-like"
2016-10-18 05:21:07	-->	iamthad (~iamthad@2605:6000:101c:180:813f:2dc0:4a83:5614) has joined ##c++
2016-10-18 05:21:08	urdh	that also implies NullablePointer
2016-10-18 05:21:56	-->	Tectu (~Tectu@193.231.195.178.dynamic.wline.res.cust.swisscom.ch) has joined ##c++
2016-10-18 05:21:56		[05:21]
2016-10-18 05:23:12	-->	sssilver (~sssilver@38.122.48.218) has joined ##c++
2016-10-18 05:23:35	-->	FreeBirdLjj (~freebirdl@223.65.168.113) has joined ##c++
2016-10-18 05:24:02	<--	drozdziak1 (~drozdziak@do-atman.cubiware.com) has quit (Quit: WeeChat 1.5)
2016-10-18 05:24:35	-->	pmercado (~pmercado@186-104-245-4.baf.movistar.cl) has joined ##c++
2016-10-18 05:24:38	-->	jaxyeh (~jaxyeh@74.sub-70-208-84.myvzw.com) has joined ##c++
2016-10-18 05:25:06	<--	MicroCheapFx (~quassel@62.102.229.129) has quit (Read error: Connection reset by peer)
2016-10-18 05:25:08	<--	jaxyeh (~jaxyeh@74.sub-70-208-84.myvzw.com) has quit (Client Quit)
2016-10-18 05:25:40	-->	jaxyeh (~jaxyeh@74.sub-70-208-84.myvzw.com) has joined ##c++
2016-10-18 05:25:40	<--	jaxyeh (~jaxyeh@74.sub-70-208-84.myvzw.com) has quit (Client Quit)
2016-10-18 05:26:00	-->	jaxyeh (~jaxyeh@2600:1001:b102:6894:19a9:da0d:e554:79de) has joined ##c++
2016-10-18 05:26:58	-->	kasper^ (~safaf@82.137.9.188) has joined ##c++
2016-10-18 05:27:30	-->	wrkronmiller (~wrkronmil@nuthatch-319.dynamic.rpi.edu) has joined ##c++
2016-10-18 05:28:08	-->	Dohplay (~Dohplay@2601:246:4400:f10c:f48c:786e:15df:70e7) has joined ##c++
2016-10-18 05:28:23	<--	jmnk (jargonmonk@gateway/shell/blinkenshell.org/x-oqlarpvohtrfiasa) has quit (Remote host closed the connection)
2016-10-18 05:28:36	introom	hi guys. why it errs: http://ideone.com/MWmupU ?
2016-10-18 05:29:06	<--	YungRaj (~YungRaj@nat-165-91-12-75.tamulink.tamu.edu) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-10-18 05:29:39	<--	brk_ (~brk_@109.202.145.146) has quit (Ping timeout: 252 seconds)
2016-10-18 05:29:50	<--	Dohplay (~Dohplay@2601:246:4400:f10c:f48c:786e:15df:70e7) has quit (Max SendQ exceeded)
2016-10-18 05:29:54	S4nD3r	hye, this statement                 out >> contours[i][j].y >> contours[i][j].x; is not reading from the file and storing in the array
2016-10-18 05:29:55	S4nD3r	how to correct it?
2016-10-18 05:29:56	-->	Dohplay (~Dohplay@2601:246:4400:f10c:f48c:786e:15df:70e7) has joined ##c++
2016-10-18 05:30:34	<--	sirosirian (~theosiria@191.251.98.207) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-10-18 05:30:39	KrzaQ	why isn't it?
2016-10-18 05:30:52	<--	ewanshin (~ewanshin@183.101.46.30) has quit (Remote host closed the connection)
2016-10-18 05:31:14	introom	KrzaQ: because I don't know what happens. `using namespace placeholders' is find inside block scope and function scope. Why not class scope?
2016-10-18 05:31:44	introom	S4nD3r: code? btw, please name `fout' as `fin'.
2016-10-18 05:31:54	introom	s/find/fine
2016-10-18 05:32:42	S4nD3r	code is here https://bpaste.net/show/710769525cdb
2016-10-18 05:33:54	introom	S4nD3r: replace !out.eof with `while(eof)'
2016-10-18 05:34:03	-->	harold (~harold@85-238-17-190.fibertel.com.ar) has joined ##c++
2016-10-18 05:34:19	introom	sorry, while(out)
2016-10-18 05:35:20	-->	ewanshin (~ewanshin@183.101.46.30) has joined ##c++
2016-10-18 05:35:55	-->	Blondie (~Blondie@p5DDC42F9.dip0.t-ipconnect.de) has joined ##c++
2016-10-18 05:36:19	-->	maciuszek (~maciuszek@104.245.147.11) has joined ##c++
2016-10-18 05:37:05	-->	r3m1 (~rvieux@cbr40-1-78-231-127-148.fbx.proxad.net) has joined ##c++
2016-10-18 05:37:05		[05:37]
2016-10-18 05:38:20	-->	TomyLobo (~TomyLobo@2a02:8109:87c0:20c:cd1a:e561:1f2c:699b) has joined ##c++
2016-10-18 05:38:24	S4nD3r	I'll change it
2016-10-18 05:39:36	-->	Dohplay_ (~Dohplay@2601:246:4400:f10c:f48c:786e:15df:70e7) has joined ##c++
2016-10-18 05:40:03	-->	neurodrone_ (~neurodron@unaffiliated/neurodrone) has joined ##c++
2016-10-18 05:41:13	-->	jcape__ (~jcape@2604:2000:ef4e:2a00:c724:1ec5:4a58:c31a) has joined ##c++
2016-10-18 05:41:32	-->	chardan (~chardan@67-5-247-129.ptld.qwest.net) has joined ##c++
2016-10-18 05:41:49	<--	re1 (~reiser@178.220.1.2) has quit (Quit: Leaving)
2016-10-18 05:42:04	-->	ipronin (~ipronin@8.25.197.27) has joined ##c++
2016-10-18 05:42:14	r3m1	hi ! I'm using MODBUS library which defines #define OFF 0 and #define ON 1  . In my code I have a class State with an enum inspired by http://stackoverflow.com/questions/2503807/declaring-an-enum-within-a-class/2506286#2506286  which also contains ON/OFF
2016-10-18 05:42:29	r3m1	compiler is not very happy about it
2016-10-18 05:42:57	<--	jcape__ (~jcape@2604:2000:ef4e:2a00:c724:1ec5:4a58:c31a) has quit (Client Quit)
2016-10-18 05:42:58	r3m1	 error: expected identifier before numeric constant
2016-10-18 05:42:58	r3m1	 #define ON 1
2016-10-18 05:43:06	<--	Dohplay (~Dohplay@2601:246:4400:f10c:f48c:786e:15df:70e7) has quit (Ping timeout: 256 seconds)
2016-10-18 05:43:13	<--	nilg (~user@92.247.85.22) has quit (Remote host closed the connection)
2016-10-18 05:43:14	-->	seishun (~Kakera@62.85.100.180) has joined ##c++
2016-10-18 05:43:18	r3m1	in expansion of macro ‘ON’ wherever I use class::ON
2016-10-18 05:43:22	<--	somaReve1 (~amos@2400:dd01:1022:30:6af7:28ff:fe78:6901) has quit (Quit: WeeChat 1.6)
2016-10-18 05:43:27	r3m1	is there a way to get around this ?
2016-10-18 05:44:43	-->	re1 (~reiser@178.220.1.2) has joined ##c++
2016-10-18 05:44:45	-->	chardan_ (~chardan@67-5-247-129.ptld.qwest.net) has joined ##c++
2016-10-18 05:45:25	-->	jablo (~jablo@80-62-117-52-mobile.dk.customer.tdc.net) has joined ##c++
2016-10-18 05:45:56	<--	riemann (~riemann@84-10-11-234.static.chello.pl) has quit (Quit: Leaving)
2016-10-18 05:46:45	S4nD3r	here is my code. I need to read the data from the file into the vector of vectors, and then, use those data on the functions on lines 20 and 31. Can you check what am I doing wrong?
2016-10-18 05:46:55	S4nD3r	https://bpaste.net/show/3a4d2cf75974
2016-10-18 05:46:56	-->	pepper_chico (~pepper_ch@201-69-110-165.dial-up.telesp.net.br) has joined ##c++
2016-10-18 05:47:07	<--	hualet (~hualet@113.57.50.233) has quit (Remote host closed the connection)
2016-10-18 05:47:34	-->	hualet (~hualet@113.57.50.233) has joined ##c++
2016-10-18 05:47:36	KrzaQ	You don't need a 100x100 array if you're going to use 10x10 of it
2016-10-18 05:47:51	--	gener1c is now known as moo
2016-10-18 05:48:00	--	moo is now known as lol
2016-10-18 05:48:40	S4nD3r	I put 10x10 because I don't know how to get the real size of this
2016-10-18 05:49:10	-->	divno (~divno@unaffiliated/divno) has joined ##c++
2016-10-18 05:49:10	S4nD3r	the data are stored on the txt file
2016-10-18 05:50:03	S4nD3r	my coordinate.txt file is https://bpaste.net/show/004611f381a1
2016-10-18 05:50:27	<--	wrkronmiller (~wrkronmil@nuthatch-319.dynamic.rpi.edu) has quit (Quit: This computer has gone to sleep)
2016-10-18 05:50:48	<--	hatter (~hatter@h-90-120.a137.corp.bahnhof.se) has quit (Ping timeout: 260 seconds)
2016-10-18 05:50:51	-->	Vinnie_win_j (~TheVinn@pdpc/supporter/gold/thevinn) has joined ##c++
2016-10-18 05:51:15	-->	TMM (~hp@fsf/member/pdpc.professional.tmm) has joined ##c++
2016-10-18 05:51:16	-->	TMM_ (~hp@dhcp-077-248-009-229.chello.nl) has joined ##c++
2016-10-18 05:51:56	<--	Vinnie_win (~TheVinn@pdpc/supporter/gold/thevinn) has quit (Ping timeout: 250 seconds)
2016-10-18 05:52:00	<--	iamthad (~iamthad@2605:6000:101c:180:813f:2dc0:4a83:5614) has quit (Remote host closed the connection)
2016-10-18 05:52:09	<--	hualet (~hualet@113.57.50.233) has quit (Ping timeout: 252 seconds)
2016-10-18 05:52:09		[05:52]
2016-10-18 05:52:14	-->	Haliucinas (~Haliucina@data-101-117.cgates.lt) has joined ##c++
2016-10-18 05:52:14	r3m1	S4nD3r: OpenCV |o/
2016-10-18 05:52:14	<--	Haliucinas (~Haliucina@data-101-117.cgates.lt) has quit (Max SendQ exceeded)
2016-10-18 05:52:19	r3m1	what's your problem ?
2016-10-18 05:52:29	-->	u0_a76 (~u0_a76@223.166.32.26) has joined ##c++
2016-10-18 05:52:32	-->	KaiserAres (~KaiserAre@unaffiliated/kaiserares) has joined ##c++
2016-10-18 05:52:33	<--	gnidmoo (~gnidmoo@2a01:e35:2f2c:320:eefe:451c:d8c8:6e3a) has quit (Ping timeout: 260 seconds)
2016-10-18 05:52:38	-->	Haliucinas (~Haliucina@data-101-117.cgates.lt) has joined ##c++
2016-10-18 05:53:28	S4nD3r	Im working with image processing. I have an algorithm used to segment an image. I have to draw a line in the part that I want to segment. I would like to store this line (the coordinates and the content) in a txt file to be used later
2016-10-18 05:53:46	-->	brwsr (~textual@193.108.76.86) has joined ##c++
2016-10-18 05:53:51	-->	sterniste (~sstern@188.188.130.106) has joined ##c++
2016-10-18 05:54:08	S4nD3r	My point here is read the file, which I think that is storing the coordinates and pixels of my marker
2016-10-18 05:54:18	S4nD3r	using this marker, I can say that I have the same input (if I need to repeat the same mark for the same image)
2016-10-18 05:54:25	<--	brwsr (~textual@193.108.76.86) has quit (Client Quit)
2016-10-18 05:54:26	<--	zpataki (~quassel@adsl-164-121.globonet.hu) has quit (Ping timeout: 256 seconds)
2016-10-18 05:54:34	-->	zpataki (~quassel@91.83.6.218.pool.invitel.hu) has joined ##c++
2016-10-18 05:54:49	-->	brwsr (~textual@193.108.76.86) has joined ##c++
2016-10-18 05:54:56	<--	xaxxon (~xaxxon@2601:602:9d00:d58b:c491:8c12:e82a:d853) has quit (Quit: Leaving)
2016-10-18 05:54:57	thinlizzy	!give S4nD3r general
2016-10-18 05:54:59	nolyc	S4nD3r: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2016-10-18 05:55:13	<--	brwsr (~textual@193.108.76.86) has quit (Client Quit)
2016-10-18 05:55:23	S4nD3r	I have an image (gray). Then, I need to mark, using a line, the part of image that I want the algorithm segment (the segmentation is based on the similarity of pixels. The segmentation is working properly.  What I need to do, is store the mark (that line that I did) and use it again to repeat the same simulation sometimes
2016-10-18 05:55:31	-->	brk_ (~brk_@94.191.188.188.bredband.3.dk) has joined ##c++
2016-10-18 05:55:43	-->	brwsr (~textual@193.108.76.86) has joined ##c++
2016-10-18 05:55:54	S4nD3r	but if I need to repeat 10 times the same simulation on the same image?this is because I'll work with parallel computer, then I'll need to run the same simulation using sequential and parallel implementations
2016-10-18 05:56:00	<--	brwsr (~textual@193.108.76.86) has quit (Client Quit)
2016-10-18 05:56:07	thinlizzy	S4nD3r, wrong channel, dude
2016-10-18 05:56:10	r3m1	S4nD3r: just store in a 1D vector, write the number of coords as the first argument
2016-10-18 05:56:14	thinlizzy	r3m1, you too
2016-10-18 05:56:25	-->	brwsr (~textual@193.108.76.86) has joined ##c++
2016-10-18 05:56:30	r3m1	yes sorry thinlizzy.
2016-10-18 05:56:48	r3m1	the question is C++ though, but the context is image processing
2016-10-18 05:56:48	<--	brwsr (~textual@193.108.76.86) has quit (Client Quit)
2016-10-18 05:56:52	S4nD3r	ok. Let's go to opencv channel r3m1
2016-10-18 05:56:59	<--	TMM_ (~hp@dhcp-077-248-009-229.chello.nl) has quit (Quit: Ex-Chat)
2016-10-18 05:57:14	-->	brwsr (~textual@193.108.76.86) has joined ##c++
2016-10-18 05:57:20	<--	quaz0r (quaz@c-67-183-243-24.hsd1.wa.comcast.net) has quit (Ping timeout: 260 seconds)
2016-10-18 05:57:31	<--	Jackneill_ (~Jackneill@unaffiliated/jackneill) has quit (Read error: Connection reset by peer)
2016-10-18 05:57:36	<--	brwsr (~textual@193.108.76.86) has quit (Client Quit)
2016-10-18 05:57:36	<--	brk_ (~brk_@94.191.188.188.bredband.3.dk) has quit (Read error: Connection reset by peer)
2016-10-18 05:57:40	thinlizzy	yup, too many boring details. better to find a specialized channel
2016-10-18 05:57:42	<--	Amun_Ra (~amun-ra@retro.rocks) has quit (Ping timeout: 256 seconds)
2016-10-18 05:57:51	S4nD3r	0.o
2016-10-18 05:58:07	-->	brwsr (~textual@193.108.76.86) has joined ##c++
2016-10-18 05:58:16	S4nD3r	I don't agree with you thinlizzy
2016-10-18 05:58:22	thinlizzy	!give S4nD3r topic
2016-10-18 05:58:23	nolyc	S4nD3r: Welcome to ##c++. This channel is for the discussion of standard C++, including potential and future standardizations. This channel is NOT for discussion of: development platforms (OSes and other tools not directly related to C++), non-standard libraries, programs written in C++, other programming languages, a/s/l, or anything else that isn't C++.
2016-10-18 05:58:24	<--	brwsr (~textual@193.108.76.86) has quit (Client Quit)
2016-10-18 05:58:27	r3m1	S4nD3r: check your private messages
2016-10-18 05:58:29	thinlizzy	talk to the bot, then
2016-10-18 05:58:30	-->	Jackneill_ (~Jackneill@unaffiliated/jackneill) has joined ##c++
2016-10-18 05:58:43	r3m1	thinlizzy: how about my question ? :D
2016-10-18 05:58:50	-->	brwsr (~textual@193.108.76.86) has joined ##c++
2016-10-18 05:59:06	-->	iamboris (~boris2015@unaffiliated/boris2015) has joined ##c++
2016-10-18 05:59:11	<--	irco (~irco@vpn205-056.rzuser.uni-heidelberg.de) has quit (Read error: Connection reset by peer)
2016-10-18 05:59:12	<--	brwsr (~textual@193.108.76.86) has quit (Client Quit)
2016-10-18 05:59:33	<--	Haliucinas (~Haliucina@data-101-117.cgates.lt) has quit (Ping timeout: 260 seconds)
2016-10-18 05:59:34	<--	eduardas_m (~eduardas_@213.197.143.19) has quit (Quit: Leaving)
2016-10-18 05:59:38	-->	brwsr (~textual@193.108.76.86) has joined ##c++
2016-10-18 06:00:00	<--	brwsr (~textual@193.108.76.86) has quit (Client Quit)
2016-10-18 06:00:29	r3m1	kind of stuck with my enum { ON, OFF } and libmodbus #define ON/OFF .. Is this happening because of a poor coding or what ? Does the preprocessor needs to replace my ON with modbus'
2016-10-18 06:00:47	r3m1	even if I prefix them with State::ON / State::OFF ?
2016-10-18 06:00:51	<--	Circuitsoft (4b92a52b@gateway/web/freenode/ip.75.146.165.43) has quit (Ping timeout: 260 seconds)
2016-10-18 06:01:45	<--	lsk (~lsk@enucs/member/lsk) has quit (Read error: Connection reset by peer)
2016-10-18 06:01:53	-->	Amun_Ra (~amun-ra@retro.rocks) has joined ##c++
2016-10-18 06:03:10	-->	zagabar (~zagabar@unaffiliated/zagabar) has joined ##c++
2016-10-18 06:03:34	<--	u0_a76 (~u0_a76@223.166.32.26) has left ##c++
2016-10-18 06:03:39	<--	interop_madness (~interop_m@unaffiliated/interop-madness/x-8858653) has quit (Quit: Leaving)
2016-10-18 06:03:53	<--	ReverseBlade (~user@213.74.212.180) has quit (Read error: Connection reset by peer)
2016-10-18 06:04:46	<--	karakedi (~eAC53C340@unaffiliated/orphan) has quit (Ping timeout: 250 seconds)
2016-10-18 06:05:09	<--	KaiserAres (~KaiserAre@unaffiliated/kaiserares) has quit (Ping timeout: 260 seconds)
2016-10-18 06:06:16	-->	avalchev_ (~avalchev@46.238.21.2) has joined ##c++
2016-10-18 06:06:38	<--	avalchev_ (~avalchev@46.238.21.2) has quit (Client Quit)
2016-10-18 06:07:20	-->	avalchev_ (~avalchev@46.238.21.2) has joined ##c++
2016-10-18 06:07:20		[06:07]
2016-10-18 06:07:39	-->	gelignite (~gelignite@x4db53779.dyn.telefonica.de) has joined ##c++
2016-10-18 06:07:52	<--	avalchev_ (~avalchev@46.238.21.2) has left ##c++
2016-10-18 06:08:00	-->	avalchev_ (~avalchev@46.238.21.2) has joined ##c++
2016-10-18 06:08:02	<--	afiefh (~afiefh@195.110.40.242) has quit (Ping timeout: 265 seconds)
2016-10-18 06:08:22	<--	zpataki (~quassel@91.83.6.218.pool.invitel.hu) has quit (Ping timeout: 244 seconds)
2016-10-18 06:08:31	<--	zero_byte (zer0@nat/redhat/x-srivhojyympxxltc) has quit (Ping timeout: 265 seconds)
2016-10-18 06:08:44	-->	zpataki (~quassel@91.82.131.12.pool.invitel.hu) has joined ##c++
2016-10-18 06:08:59	urdh	r3m1 the preprocessor is pretty dumb, it doesn't know about namespaces and stuff
2016-10-18 06:09:07	-->	bumbar_ (~bumbar@unaffiliated/bumbar) has joined ##c++
2016-10-18 06:09:53	-->	chindy (~julian@213-240-80-10.adsl.highway.telekom.at) has joined ##c++
2016-10-18 06:09:58	Eelis	r3m1: a library defining macros namde ON and OFF sounds like pretty horrible coding, yes
2016-10-18 06:10:01	Eelis	*named
2016-10-18 06:10:04	urdh	that too
2016-10-18 06:10:42	urdh	but don't use all-caps identifiers, let macros use those names
2016-10-18 06:11:01	-->	quaz0r (quaz@c-67-183-243-24.hsd1.wa.comcast.net) has joined ##c++
2016-10-18 06:11:12	<--	chardan_ (~chardan@67-5-247-129.ptld.qwest.net) has quit (Quit: Leaving)
2016-10-18 06:11:28	-->	YungRaj (~YungRaj@nat-165-91-13-175.tamulink.tamu.edu) has joined ##c++
2016-10-18 06:11:32	urdh	i.e. use enum class State { On, Off }; instead
2016-10-18 06:11:34	<--	avalchev_ (~avalchev@46.238.21.2) has quit (Client Quit)
2016-10-18 06:11:42	-->	PocketKiller (PocketKill@codebottle.io/user/pocketkiller) has joined ##c++
2016-10-18 06:11:52	-->	EvilPenguin (~EvilPengu@bur-inet-pa-1.disney.com) has joined ##c++
2016-10-18 06:12:14	urdh	now that there's scoped enums there's no need to have dumb naming schemes for them
2016-10-18 06:13:20	urdh	(actually make them lowercase for even more stdlib-like names)
2016-10-18 06:15:39	-->	serycjon (~jonas@wced-92-216-32-147.feld.cvut.cz) has joined ##c++
2016-10-18 06:16:09	-->	omnipot (~Dawid@89-65-180-229.dynamic.chello.pl) has joined ##c++
2016-10-18 06:16:33	<--	zpataki (~quassel@91.82.131.12.pool.invitel.hu) has quit (Read error: Connection reset by peer)
2016-10-18 06:16:39	<--	di0_ (~di0_@unaffiliated/di0-/x-5053590) has quit (Ping timeout: 258 seconds)
2016-10-18 06:16:55	-->	MZPX (~quassel@91.82.131.12.pool.invitel.hu) has joined ##c++
2016-10-18 06:17:08	<--	mkramer (~Adium@c-76-30-207-152.hsd1.tx.comcast.net) has quit (Quit: Leaving.)
2016-10-18 06:18:52	<--	Amun_Ra (~amun-ra@retro.rocks) has quit (Ping timeout: 260 seconds)
2016-10-18 06:18:54	-->	sh00p (~sh00p@84-216-39-31.customers.ownit.se) has joined ##c++
2016-10-18 06:19:05	<--	tlaxkit (~Thunderbi@92.185.154.236) has quit (Quit: tlaxkit)
2016-10-18 06:20:30	<--	reveredge (~reveredge@111.119.209.221) has quit (Ping timeout: 256 seconds)
2016-10-18 06:20:46	-->	sirosirian (~theosiria@186.233.158.67) has joined ##c++
2016-10-18 06:21:01	-->	Amun_Ra (~amun-ra@retro.rocks) has joined ##c++
2016-10-18 06:21:10	<--	MZPX (~quassel@91.82.131.12.pool.invitel.hu) has quit (Read error: Connection reset by peer)
2016-10-18 06:21:30	-->	MZPX (~quassel@91.82.131.12.pool.invitel.hu) has joined ##c++
2016-10-18 06:22:27	<--	kua (~kuahara@cpe-68-201-21-196.sw.res.rr.com) has left ##c++
2016-10-18 06:22:27		[06:22]
2016-10-18 06:22:40	-->	xissburg (~xissburg@unaffiliated/xissburg) has joined ##c++
2016-10-18 06:22:45	-->	kuahara (~kuahara@cpe-68-201-21-196.sw.res.rr.com) has joined ##c++
2016-10-18 06:22:54	<--	kwayne (~anon@eduroam-039-240.wlan.univie.ac.at) has quit (Quit: leaving)
2016-10-18 06:23:47	-->	tadaa (~tadaaa@nat-wh-wz4-12.rz.uni-karlsruhe.de) has joined ##c++
2016-10-18 06:24:36	<--	rorro (~rorro@c-227-137.eduroam.liu.se) has quit (Ping timeout: 252 seconds)
2016-10-18 06:24:52	<--	Z3N1T (~Zenit@179.176.16.101.dynamic.adsl.gvt.net.br) has quit (Ping timeout: 260 seconds)
2016-10-18 06:25:14	Jackneill_	hey
2016-10-18 06:25:18	-->	brwsr (~textual@193.108.76.86) has joined ##c++
2016-10-18 06:25:25	Jackneill_	http://codepad.org/mHXR5PHj anyone has an idea about this erorr?
2016-10-18 06:25:57	megaTherion	wrong compiler
2016-10-18 06:26:09	<--	govg (~govg@unaffiliated/govg) has quit (Ping timeout: 256 seconds)
2016-10-18 06:26:16	<--	verm1n (~verm1n@209-6-236-59.c3-0.wrx-ubr1.sbo-wrx.ma.cable.rcn.com) has quit (Ping timeout: 260 seconds)
2016-10-18 06:26:32	<--	FreeBirdLjj (~freebirdl@223.65.168.113) has quit (Remote host closed the connection)
2016-10-18 06:26:38	-->	govg (~govg@unaffiliated/govg) has joined ##c++
2016-10-18 06:26:52	-->	Haliucinas (~Haliucina@data-101-117.cgates.lt) has joined ##c++
2016-10-18 06:27:31	Jackneill_	megaTherion, gcc and clang are bad, then what msvc?
2016-10-18 06:27:48	<--	marcofe (~marcofe@test-centre4-gw.estec.esa.int) has quit (Quit: Konversation terminated!)
2016-10-18 06:27:52	Jackneill_	if thats the only working compiler the makers if this lib are a joke
2016-10-18 06:27:56	megaTherion	Jackneill_: just dont compile C++ code as C code
2016-10-18 06:28:10	megaTherion	it wont work
2016-10-18 06:28:14	Jackneill_	so i have to invoke g++?
2016-10-18 06:28:17	megaTherion	indeed
2016-10-18 06:28:27	Jackneill_	i thought gcc detects automatically by extension
2016-10-18 06:28:31	Jackneill_	file ext
2016-10-18 06:28:43	megaTherion	ahh nah not really
2016-10-18 06:28:47	megaTherion	but its picky
2016-10-18 06:28:55	megaTherion	not sure if .cc satisfies gcc thoughg
2016-10-18 06:29:20	Jackneill_	i see, thanks
2016-10-18 06:30:03	<--	vuoto (~vuoto@80-71-135-9.u.parknet.dk) has quit (Read error: Connection reset by peer)
2016-10-18 06:30:10	-->	AudaciousTUX (~manjaro-k@unaffiliated/audacioustux) has joined ##c++
2016-10-18 06:30:49	-->	ReverseBlade (~user@213.74.212.180) has joined ##c++
2016-10-18 06:31:45	<--	kszatan (~kszatan@91.241.2.251) has quit (Ping timeout: 252 seconds)
2016-10-18 06:31:55	<--	deekej (deekej@nat/redhat/x-ubgnqvbextbzznzf) has quit (Remote host closed the connection)
2016-10-18 06:33:08	-->	samik (~smukherje@24.4.162.17) has joined ##c++
2016-10-18 06:33:48	<--	felixi (~mikko@a88-115-27-145.elisa-laajakaista.fi) has quit (Quit: Leaving)
2016-10-18 06:33:53	-->	reveredge (~reveredge@115.110.126.75) has joined ##c++
2016-10-18 06:33:59	-->	xarxer (~xarxer@90-230-93-77-no148.tbcn.telia.com) has joined ##c++
2016-10-18 06:34:04	thinlizzy	that is not the first time I've seen people using ALLCAPS in enum identifiers. kinda dumb, though, but more common than we would expect
2016-10-18 06:34:32	<--	jablo (~jablo@80-62-117-52-mobile.dk.customer.tdc.net) has quit (Quit: jablo)
2016-10-18 06:35:51	<--	brwsr (~textual@193.108.76.86) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-10-18 06:36:05	-->	dustyp90 (~Dustin@216.7.225.222) has joined ##c++
2016-10-18 06:36:15	-->	brwsr (~textual@193.108.76.86) has joined ##c++
2016-10-18 06:36:38	<--	brwsr (~textual@193.108.76.86) has quit (Client Quit)
2016-10-18 06:37:06	-->	brwsr (~textual@193.108.76.86) has joined ##c++
2016-10-18 06:37:26	<--	brwsr (~textual@193.108.76.86) has quit (Client Quit)
2016-10-18 06:37:55	-->	brwsr (~textual@193.108.76.86) has joined ##c++
2016-10-18 06:37:55		[06:37]
2016-10-18 06:38:08	<--	serycjon (~jonas@wced-92-216-32-147.feld.cvut.cz) has quit (Ping timeout: 252 seconds)
2016-10-18 06:38:14	<--	brwsr (~textual@193.108.76.86) has quit (Client Quit)
2016-10-18 06:38:42	-->	brwsr (~textual@193.108.76.86) has joined ##c++
2016-10-18 06:39:02	<--	brwsr (~textual@193.108.76.86) has quit (Client Quit)
2016-10-18 06:39:33	-->	brwsr (~textual@193.108.76.86) has joined ##c++
2016-10-18 06:39:38	-->	scai (~scai@p4FF0FE9A.dip0.t-ipconnect.de) has joined ##c++
2016-10-18 06:39:50	<--	brwsr (~textual@193.108.76.86) has quit (Client Quit)
2016-10-18 06:40:13	-->	brwsr (~textual@193.108.76.86) has joined ##c++
2016-10-18 06:40:38	<--	brwsr (~textual@193.108.76.86) has quit (Client Quit)
2016-10-18 06:40:54	<--	snover (~Adium@unaffiliated/snover) has quit (Quit: Leaving.)
2016-10-18 06:42:02	-->	unK_ (~drunK@host-81-190-235-217.dynamic.mm.pl) has joined ##c++
2016-10-18 06:42:28	<--	ejbs_ (~ejbs_@pc-jacobsen-damogran.informatik.tu-muenchen.de) has quit (Ping timeout: 244 seconds)
2016-10-18 06:42:46	-->	xtcc (~xtccc@185.26.174.19) has joined ##c++
2016-10-18 06:42:57	-->	Betal (~Betal@unaffiliated/betal) has joined ##c++
2016-10-18 06:45:42	-->	micros (~no@c-71-59-45-180.hsd1.ga.comcast.net) has joined ##c++
2016-10-18 06:45:44	micros	does anyone know how to post a linux user input key event for KEY_VOLDOWN/UP where the input type is EV_REL?  when i do this, no event is processed under android.  If i use EV_KEY, it works OK, but this is not suitable for a rotary knob which provides only a relative offset when its turned.
2016-10-18 06:46:03	<--	illerucis (~illerucis@199.201.65.132) has quit (Remote host closed the connection)
2016-10-18 06:48:09	<--	Haliucinas (~Haliucina@data-101-117.cgates.lt) has quit (Ping timeout: 244 seconds)
2016-10-18 06:48:23	<--	feliwir_ (Elite17837@gateway/shell/elitebnc/x-bzoetqntfxwuqedn) has quit (Ping timeout: 258 seconds)
2016-10-18 06:49:08	<--	jonge (~jonge@p5B11C93A.dip0.t-ipconnect.de) has quit (Ping timeout: 252 seconds)
2016-10-18 06:49:30	<--	rmunoz (~ricardo@37.red-217-126-176.staticip.rima-tde.net) has quit (Remote host closed the connection)
2016-10-18 06:50:13	<--	Anodl (~Anodl@213.157.2.74) has quit (Quit: Leaving.)
2016-10-18 06:50:31	<--	ReverseBlade (~user@213.74.212.180) has quit (Ping timeout: 256 seconds)
2016-10-18 06:50:47	<--	Murii (~Murii@86.125.194.251) has quit
2016-10-18 06:51:07	<--	Zunino (~Zunino@201.90.236.42) has left ##c++
2016-10-18 06:51:18	<--	Blondie (~Blondie@p5DDC42F9.dip0.t-ipconnect.de) has quit (Quit: Blondie)
2016-10-18 06:51:45	-->	Blondie (~Blondie@p5DDC42F9.dip0.t-ipconnect.de) has joined ##c++
2016-10-18 06:51:52	<--	xtcc (~xtccc@185.26.174.19) has left ##c++
2016-10-18 06:52:08	<--	sirosirian (~theosiria@186.233.158.67) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-10-18 06:52:11	<--	reveredge (~reveredge@115.110.126.75) has quit (Ping timeout: 250 seconds)
2016-10-18 06:54:06	-->	psychicist__ (~psychicis@ip127-8-212-87.adsl2.static.versatel.nl) has joined ##c++
2016-10-18 06:54:06		[06:54]
2016-10-18 06:54:12	-->	sirosirian (~theosiria@186.233.158.67) has joined ##c++
2016-10-18 06:55:06	-->	maroon (~maroon@tmo-107-51.customers.d1-online.com) has joined ##c++
2016-10-18 06:55:38	<--	Erlkoenig (~erlkoenig@gw-2s00.inf.fh-bonn-rhein-sieg.de) has quit (Ping timeout: 250 seconds)
2016-10-18 06:56:00	-->	illerucis (~illerucis@2620:10d:c091:200::7:c9ef) has joined ##c++
2016-10-18 06:56:52	-->	all_my_watts (~all_my_wa@80-110-115-188.cgn.dynamic.surfer.at) has joined ##c++
2016-10-18 06:57:09	-->	rogual (~rogual@foon.uk) has joined ##c++
2016-10-18 06:58:58	-->	izart (~izart@202.142.66.137) has joined ##c++
2016-10-18 06:59:36	S4nD3r	Please, where or who can help me with my code problems? My code is written in C++ and uses opencv library. I really need some help. Thanks
2016-10-18 06:59:46	<--	destiny (uid73933@gateway/web/irccloud.com/x-jlitxppbfpkvaehu) has quit (Quit: Connection closed for inactivity)
2016-10-18 06:59:54	<--	rockstar__ (~rockstar@cpe-72-224-119-105.nycap.res.rr.com) has quit (Remote host closed the connection)
2016-10-18 07:00:17	<--	divno (~divno@unaffiliated/divno) has quit (Quit: divno)
2016-10-18 07:00:26	<--	Blondie (~Blondie@p5DDC42F9.dip0.t-ipconnect.de) has quit (Quit: Blondie)
2016-10-18 07:01:26	-->	metachr0n (~nobody@109.201.154.250) has joined ##c++
2016-10-18 07:03:01	<--	YungRaj (~YungRaj@nat-165-91-13-175.tamulink.tamu.edu) has quit (Read error: Connection reset by peer)
2016-10-18 07:04:45	-->	LKoen (~LKoen@vbo91-1-82-238-218-67.fbx.proxad.net) has joined ##c++
2016-10-18 07:05:23	-->	feliwir (Elite17837@gateway/shell/elitebnc/x-trjohmbaajycyvxq) has joined ##c++
2016-10-18 07:06:29	-->	fahadash (uid44972@gateway/web/irccloud.com/x-vvyicjpgsiombuie) has joined ##c++
2016-10-18 07:07:26	<--	orbiter (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has quit (Read error: Connection reset by peer)
2016-10-18 07:07:30	<--	EvilPenguin (~EvilPengu@bur-inet-pa-1.disney.com) has quit (Ping timeout: 252 seconds)
2016-10-18 07:07:49	<--	mindandsky (~mindandsk@50-232-5-123-static.hfc.comcastbusiness.net) has quit (Quit: WeeChat 1.5)
2016-10-18 07:08:24	-->	reveredge (~reveredge@111.119.209.221) has joined ##c++
2016-10-18 07:08:37	-->	SteffanW (~steffanw@ip4da40774.direct-adsl.nl) has joined ##c++
2016-10-18 07:08:56	<--	ewanshin (~ewanshin@183.101.46.30) has quit (Quit: Leaving...)
2016-10-18 07:09:06	<--	Lowl3v3l (~Lowl3v3l@dslb-088-075-000-014.088.075.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2016-10-18 07:09:06		[07:09]
2016-10-18 07:09:20	-->	ReverseBlade (~user@213.74.212.180) has joined ##c++
2016-10-18 07:09:22	-->	Chhr (~Chhr@ARennes-656-1-323-31.w109-218.abo.wanadoo.fr) has joined ##c++
2016-10-18 07:09:37	<--	Chhr (~Chhr@ARennes-656-1-323-31.w109-218.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-10-18 07:09:43	-->	orbiter (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has joined ##c++
2016-10-18 07:09:51	-->	Adva (~Hyrule@2a02:810a:12c0:2600:9e3:c6db:6dc1:28dd) has joined ##c++
2016-10-18 07:09:56	<--	Brklyn_ (~truthbk@38.122.226.210) has quit (Ping timeout: 250 seconds)
2016-10-18 07:10:05	-->	Freze (~Freze@c-73-167-60-180.hsd1.ma.comcast.net) has joined ##c++
2016-10-18 07:10:56	<--	maroon (~maroon@tmo-107-51.customers.d1-online.com) has quit (Quit: Leaving)
2016-10-18 07:10:59	<--	zwliew (uid161395@gateway/web/irccloud.com/x-ipvlbzlokyqrfvwz) has quit (Quit: Connection closed for inactivity)
2016-10-18 07:11:30	<--	jaxyeh (~jaxyeh@2600:1001:b102:6894:19a9:da0d:e554:79de) has quit (Ping timeout: 256 seconds)
2016-10-18 07:11:46	-->	qoxu (~qoxu@ARennes-656-1-323-31.w109-218.abo.wanadoo.fr) has joined ##c++
2016-10-18 07:12:09	<--	qoxu (~qoxu@ARennes-656-1-323-31.w109-218.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-10-18 07:12:44	-->	afiefh (~afiefh@5.102.242.233) has joined ##c++
2016-10-18 07:12:55	-->	jmnk (jargonmonk@gateway/shell/blinkenshell.org/x-qihnfbcatvborfyd) has joined ##c++
2016-10-18 07:12:59	-->	Blondie (~Blondie@p5DDC42F9.dip0.t-ipconnect.de) has joined ##c++
2016-10-18 07:13:21	micros	and the prob is?
2016-10-18 07:13:29	<--	voldyman (uid11639@gateway/web/irccloud.com/x-cfhxmjcpgihxyvte) has quit (Quit: Connection closed for inactivity)
2016-10-18 07:13:57	-->	amatheus (~amatheus@177.79.103.84) has joined ##c++
2016-10-18 07:14:16	<--	coincoin4ever (~coincoin@178.16.163.28) has quit (Ping timeout: 250 seconds)
2016-10-18 07:14:19	<--	Blondie (~Blondie@p5DDC42F9.dip0.t-ipconnect.de) has quit (Client Quit)
2016-10-18 07:14:24	<--	GavinMagnus (~simon@194.254.61.161) has left ##c++
2016-10-18 07:14:44	<--	dustyp90 (~Dustin@216.7.225.222) has quit (Quit: Leaving)
2016-10-18 07:15:33	<--	micros (~no@c-71-59-45-180.hsd1.ga.comcast.net) has left ##c++
2016-10-18 07:16:18	<--	irrenhaus3 (~xenon@HSI-KBW-046-005-253-025.hsi8.kabel-badenwuerttemberg.de) has quit (Ping timeout: 245 seconds)
2016-10-18 07:17:01	-->	Erlkoenig (~erlkoenig@gw-2s00.inf.fh-bonn-rhein-sieg.de) has joined ##c++
2016-10-18 07:19:08	-->	Brklyn (~truthbk@38.122.226.210) has joined ##c++
2016-10-18 07:19:42	-->	irrenhaus3 (~xenon@HSI-KBW-046-005-253-025.hsi8.kabel-badenwuerttemberg.de) has joined ##c++
2016-10-18 07:20:11	<--	ipronin (~ipronin@8.25.197.27) has quit (Ping timeout: 250 seconds)
2016-10-18 07:21:53	<--	samik (~smukherje@24.4.162.17) has quit (Quit: samik)
2016-10-18 07:22:41	<--	amatheus (~amatheus@177.79.103.84) has quit (Remote host closed the connection)
2016-10-18 07:23:03	-->	ipronin (~ipronin@8.25.197.27) has joined ##c++
2016-10-18 07:23:37	<--	arpd (~arpd@wan.schoolroad.co.uk) has quit (Quit: WeeChat 1.4)
2016-10-18 07:23:39	<--	pylbrecht (~pylbrecht@2a02:8109:8a40:12b4:9eff:1344:72c0:fae) has quit (Quit: Segmentation fault (core dumped))
2016-10-18 07:24:18	<--	Nilesh_ (uid116340@gateway/web/irccloud.com/x-gbcjorrdsblhtqmo) has quit (Quit: Connection closed for inactivity)
2016-10-18 07:24:18		[07:24]
2016-10-18 07:24:58	hariel	what was the rationale for restricting the 2nd argument of static_assert to a string literal instead of an arbitrary constant expression
2016-10-18 07:25:42	-->	symm- (~symm-@86.121.114.211) has joined ##c++
2016-10-18 07:25:42	<--	MZPX (~quassel@91.82.131.12.pool.invitel.hu) has quit (Read error: Connection reset by peer)
2016-10-18 07:25:59	-->	MZPX (~quassel@91.82.131.12.pool.invitel.hu) has joined ##c++
2016-10-18 07:26:39	-->	esas (~esas@unaffiliated/esas) has joined ##c++
2016-10-18 07:27:17	<--	MZPX (~quassel@91.82.131.12.pool.invitel.hu) has quit (Read error: Connection reset by peer)
2016-10-18 07:29:48	<--	izart (~izart@202.142.66.137) has quit (Ping timeout: 260 seconds)
2016-10-18 07:29:54	<--	coco (~coco@84-74-76-240.dclient.hispeed.ch) has quit (Quit: WeeChat 1.6)
2016-10-18 07:31:46	<--	snyp (~Snyp@nas4.meghbelabroadband.in) has quit (Quit: WeeChat 1.6)
2016-10-18 07:32:20	-->	meth (~meth@unaffiliated/meth) has joined ##c++
2016-10-18 07:32:23	<--	Brklyn (~truthbk@38.122.226.210) has quit (Ping timeout: 252 seconds)
2016-10-18 07:32:37	<--	mackal (~mike@pool-96-237-144-12.bstnma.fios.verizon.net) has quit (Quit: BE VIGILANT.)
2016-10-18 07:32:40	<--	unK_ (~drunK@host-81-190-235-217.dynamic.mm.pl) has quit (Quit: KVIrc 4.3.1 Aria http://www.kvirc.net/)
2016-10-18 07:32:40	-->	EvilPenguin (~EvilPengu@bur-inet-pa-1.disney.com) has joined ##c++
2016-10-18 07:33:00	-->	Mike111 (~Mike@5.0.236.207) has joined ##c++
2016-10-18 07:33:14	-->	Brklyn (~truthbk@38.122.226.210) has joined ##c++
2016-10-18 07:33:28	<--	Cabanossi (~Cabanossi@p5DD7B861.dip0.t-ipconnect.de) has quit (*.net *.split)
2016-10-18 07:33:28	<--	brolaf (~brolaf@46.246.44.165) has quit (*.net *.split)
2016-10-18 07:33:28	<--	whiteline (~whiteline@unaffiliated/whiteline) has quit (*.net *.split)
2016-10-18 07:33:28	<--	jantje_ (~jan@mozzy.smets.cx) has quit (*.net *.split)
2016-10-18 07:33:29	<--	Chestal (~thilo@vmax.unix-ag.uni-siegen.de) has quit (*.net *.split)
2016-10-18 07:33:29	<--	wondiws (~Jasper@5ED7DF59.cm-7-8d.dynamic.ziggo.nl) has quit (*.net *.split)
2016-10-18 07:33:29	<--	i7c (cmw@unaffiliated/i7c) has quit (*.net *.split)
2016-10-18 07:33:29	<--	CustosLim3n (~CustosLim@unaffiliated/cust0slim3n) has quit (*.net *.split)
2016-10-18 07:33:29	<--	Hellosun1 (~Hellosun@moon.cse.yzu.edu.tw) has quit (*.net *.split)
2016-10-18 07:33:29	<--	Lildirt|SomeoneT (~Lildirt@lildirt.com) has quit (*.net *.split)
2016-10-18 07:33:29	<--	Lord_of_- (Elite12246@gateway/shell/elitebnc/x-chlvwcdwvtnkpiog) has quit (*.net *.split)
2016-10-18 07:33:29	<--	smspilla1 (smspillaz@motsugo.ucc.gu.uwa.edu.au) has quit (*.net *.split)
2016-10-18 07:33:29	<--	ppf_ (~pfaffe@i41pc78.ipd.uni-karlsruhe.de) has quit (*.net *.split)
2016-10-18 07:33:29	<--	jlyndon_ (sid10913@gateway/web/irccloud.com/x-vwutxkozfhhxfnfr) has quit (*.net *.split)
2016-10-18 07:33:29	<--	stryyker2 (stryyker16@about/windows/staff/stryyker) has quit (*.net *.split)
2016-10-18 07:33:29	<--	Jidoor_ (~Jidoor@unaffiliated/chilley) has quit (*.net *.split)
2016-10-18 07:33:29	<--	ski (~ski@remote11.chalmers.se) has quit (*.net *.split)
2016-10-18 07:33:29	<--	xsdg (~xsdg@sipb-vm-99.mit.edu) has quit (*.net *.split)
2016-10-18 07:33:29	<--	unreal (~unreal@unaffiliated/unreal) has quit (*.net *.split)
2016-10-18 07:33:31	<--	Moonlight-Angel (~Moonlight@eth-east-parth2-46-193-65-193.wb.wifirst.net) has quit (*.net *.split)
2016-10-18 07:33:31	<--	betheynyx (~b@45.63.97.181) has quit (*.net *.split)
2016-10-18 07:33:32	<--	AndrewAlexMac (~andrewale@185.21.218.136) has quit (*.net *.split)
2016-10-18 07:33:32	<--	imr (imr@2ProIntl/User/server-nerd/imr) has quit (*.net *.split)
2016-10-18 07:33:32	<--	termos (sid18647@gateway/web/irccloud.com/x-omtwiadcfepwtjru) has quit (*.net *.split)
2016-10-18 07:33:32	<--	heatmis3r (sid112556@gateway/web/irccloud.com/x-gydznepcgdjmdgbx) has quit (*.net *.split)
2016-10-18 07:33:32	<--	pdm0205 (sid156665@gateway/web/irccloud.com/x-mvcinqasvdtaedwd) has quit (*.net *.split)
2016-10-18 07:33:32	<--	joel135 (sid136450@gateway/web/irccloud.com/x-tgbsbxnsreohqpjc) has quit (*.net *.split)
2016-10-18 07:33:32	<--	dflurker (~dimon@metaportal.ru) has quit (*.net *.split)
2016-10-18 07:33:32	<--	justicefries (sid26447@gateway/web/irccloud.com/x-heofilpzgzaxmobb) has quit (*.net *.split)
2016-10-18 07:33:32	<--	tharuin___ (sid159926@gateway/web/irccloud.com/x-podukioihdoofizu) has quit (*.net *.split)
2016-10-18 07:33:32	<--	kilimanjaro (sid113699@gateway/web/irccloud.com/x-wttzcczbyqnrjyta) has quit (*.net *.split)
2016-10-18 07:33:32	<--	Cppg (~Cppg@host81-153-108-3.range81-153.btcentralplus.com) has quit (*.net *.split)
2016-10-18 07:33:32	<--	toxicFork (sid60962@gateway/web/irccloud.com/x-cgefcqhtnghzfvgv) has quit (*.net *.split)
2016-10-18 07:33:32	<--	q_plaz (sid153613@gateway/web/irccloud.com/x-febjvlznhjidcfov) has quit (*.net *.split)
2016-10-18 07:33:32	<--	BytesAndCoffee (~yazdmich@bytes.coffee) has quit (*.net *.split)
2016-10-18 07:33:32	<--	bolt (r00t@unaffiliated/bolt) has quit (*.net *.split)
2016-10-18 07:33:32	<--	Vulcano (~freenode@90.149.84.164) has quit (*.net *.split)
2016-10-18 07:33:32	<--	zedsdeadbaby (~null@fyodor.krmz.ovh) has quit (*.net *.split)
2016-10-18 07:33:32	<--	cruxeternus (~cruxetern@secspeed.com) has quit (*.net *.split)
2016-10-18 07:33:32	<--	zaltekk (~zaltekk@ec2-52-11-19-159.us-west-2.compute.amazonaws.com) has quit (*.net *.split)
2016-10-18 07:33:32	<--	wickedmic (~wickedmic@wickedmic.com) has quit (*.net *.split)
2016-10-18 07:33:32	<--	Zaneo (~Zaneo@45.55.2.85) has quit (*.net *.split)
2016-10-18 07:33:32	<--	dostoyevsky (~sck@n096h062.rs.de.inter.net) has quit (*.net *.split)
2016-10-18 07:33:32	<--	fschmitt (~fschmitt@ltw.loris.tv) has quit (*.net *.split)
2016-10-18 07:33:32	<--	Kasreyn (~i@unaffiliated/inquisitor) has quit (*.net *.split)
2016-10-18 07:33:32	<--	Zharf (~eclipser@xmms2/developer/Eclipser) has quit (*.net *.split)
2016-10-18 07:33:32	<--	phantomcircuit (~phantomci@192.241.205.97) has quit (*.net *.split)
2016-10-18 07:33:32	<--	gear4 (~quassel@188.166.150.103) has quit (*.net *.split)
2016-10-18 07:33:32	<--	akolar (AH3e@gateway/shell/firrre/x-unqgoamsobodrwvy) has quit (*.net *.split)
2016-10-18 07:33:32	<--	PFault (~PFault@2a01:4f8:130:14b3::2) has quit (*.net *.split)
2016-10-18 07:33:32	<--	kline (~kline@freenode/staff/enucs.kline) has quit (*.net *.split)
2016-10-18 07:33:32	<--	chrisf (~chrisf@hamb.in) has quit (*.net *.split)
2016-10-18 07:33:32	<--	Kido_SoraKi (kido@unic0rn.eu) has quit (*.net *.split)
2016-10-18 07:33:32	<--	m0shbear (~011899988@servbox.moshbear.net) has quit (*.net *.split)
2016-10-18 07:33:32	<--	ekem (~monkey@helium.nk3r.com) has quit (*.net *.split)
2016-10-18 07:33:32	<--	vishesh (~vishesh@hydrogen.twistedplane.com) has quit (*.net *.split)
2016-10-18 07:33:32	<--	jdiez (~jdiez@unaffiliated/jdiez) has quit (*.net *.split)
2016-10-18 07:33:32	<--	Chaser (~Chaser@192.241.229.182) has quit (*.net *.split)
2016-10-18 07:33:32	<--	rfw (sid22696@gateway/web/irccloud.com/x-puktqfggyohgbfru) has quit (*.net *.split)
2016-10-18 07:33:33	<--	stowelly (~stowelly@2a01:4f8:160:51eb::2) has quit (*.net *.split)
2016-10-18 07:33:33	<--	Sausage (sausage@tehsausage.com) has quit (*.net *.split)
2016-10-18 07:33:33	<--	kstolen (~kStolen@2a00:fa40:2aaa:1::539:82de) has quit (*.net *.split)
2016-10-18 07:33:33	<--	nope3000 (~nope3000@38.103.208.162) has quit (*.net *.split)
2016-10-18 07:33:34	<--	Trent (~Trent@unaffiliated/trenty) has quit (*.net *.split)
2016-10-18 07:33:34	<--	Neo (~neo@opennic/Neo) has quit (*.net *.split)
2016-10-18 07:33:34	<--	Phanes (~Phanes@unaffiliated/phanes) has quit (*.net *.split)
2016-10-18 07:33:34	<--	icedev (~icedev@0x62.de) has quit (*.net *.split)
2016-10-18 07:33:34	<--	eip` (sid27234@gateway/web/irccloud.com/x-mhatklzjvcqvpzhf) has quit (*.net *.split)
2016-10-18 07:33:34	<--	mrphantom (mrphantom@gateway/shell/kde/x-xovmfjppsypyssoy) has quit (*.net *.split)
2016-10-18 07:33:34	<--	mafrasi2 (~quassel@2a01:4f8:130:6426::2) has quit (*.net *.split)
2016-10-18 07:33:34	<--	rsully (~rsully@unaffiliated/rsully) has quit (*.net *.split)
2016-10-18 07:33:34	<--	tgy (~toogy@too.gy) has quit (*.net *.split)
2016-10-18 07:33:34	<--	tsjost (tsjost@2a01:7e00::f03c:91ff:fe56:f03c) has quit (*.net *.split)
2016-10-18 07:33:34	<--	sim642 (~simmo@unaffiliated/sim642) has quit (*.net *.split)
2016-10-18 07:33:34	<--	KiNgMaR (~ingmar@cake.irsoft.de) has quit (*.net *.split)
2016-10-18 07:33:34	<--	megaTherion (~therion@unix.io) has quit (*.net *.split)
2016-10-18 07:33:34	<--	ilteris (~ilteris@2604:a880:400:d0::935:f001) has quit (*.net *.split)
2016-10-18 07:33:34	<--	asgs (~ident@unaffiliated/l0pher) has quit (*.net *.split)
2016-10-18 07:33:34	<--	SlashLife (~slashlife@botters/slashlife) has quit (*.net *.split)
2016-10-18 07:33:34	<--	Guest70192 (~quassel@bulbasaur.sjorsgielen.nl) has quit (*.net *.split)
2016-10-18 07:33:34	<--	Hellosun (sid103121@gateway/web/irccloud.com/x-xlnknqpaspuxszwq) has quit (*.net *.split)
2016-10-18 07:33:34	<--	smokex (smokex@gateway/shell/panicbnc/x-tcauzcnxmnyoiuht) has quit (*.net *.split)
2016-10-18 07:33:34	<--	Linus (~quassel@legatus.cloud.tilaa.com) has quit (*.net *.split)
2016-10-18 07:33:34	<--	kazakuri (~kazakuri@shinjiru.me) has quit (*.net *.split)
2016-10-18 07:33:34	<--	mikroflops (~yogurt@178.174.137.46) has quit (*.net *.split)
2016-10-18 07:33:34	<--	wget (~wget@unaffiliated/wget) has quit (*.net *.split)
2016-10-18 07:33:34	<--	HeTo (henkka@battery.modeemi.fi) has quit (*.net *.split)
2016-10-18 07:33:34	<--	SPoF95 (~SpoF@2001:1620:f00:8305:16da:e9ff:fe11:2119) has quit (*.net *.split)
2016-10-18 07:33:34	<--	Cathy (~Cathy@unaffiliated/cathy) has quit (*.net *.split)
2016-10-18 07:33:34	<--	pingwindyktator (~pingwindy@pingwindyktator.tk) has quit (*.net *.split)
2016-10-18 07:33:34	<--	fold4 (~JimmyRcom@rp.eliteskills.com) has quit (*.net *.split)
2016-10-18 07:33:34	<--	sohail (sohail@unaffiliated/sohail) has quit (*.net *.split)
2016-10-18 07:33:34	<--	emlai (emil@melkinkari.cs.helsinki.fi) has quit (*.net *.split)
2016-10-18 07:33:34	<--	karalaine (~karalaine@unaffiliated/karalaine) has quit (*.net *.split)
2016-10-18 07:33:34	<--	Synergiance (syn@lsv1.synerfiles.info) has quit (*.net *.split)
2016-10-18 07:33:34	<--	Hansformer (hans@lagit.in) has quit (*.net *.split)
2016-10-18 07:33:34	<--	theanalyst (theanalyst@gateway/shell/firrre/x-xgtxsvuhxbzivsfy) has quit (*.net *.split)
2016-10-18 07:33:34	<--	tortal (tortal@unaffiliated/tortal) has quit (*.net *.split)
2016-10-18 07:33:34	-->	Zharf_ (~eclipser@durhur.fi) has joined ##c++
2016-10-18 07:33:34	-->	Narwhaal (~quassel@188.166.150.103) has joined ##c++
2016-10-18 07:33:34	-->	Sausage_ (~sausage@tehsausage.com) has joined ##c++
2016-10-18 07:33:34	-->	xsdg_ (~xsdg@sipb-vm-99.mit.edu) has joined ##c++
2016-10-18 07:33:34	-->	Trent__ (~Trent@45.55.85.111) has joined ##c++
2016-10-18 07:33:34	-->	ski_ (~ski@remote11.chalmers.se) has joined ##c++
2016-10-18 07:33:35	--	Trent__ is now known as 5EXAADMHW
2016-10-18 07:33:35	-->	ppf (~pfaffe@i41pc78.ipd.uni-karlsruhe.de) has joined ##c++
2016-10-18 07:33:35	<--	Zharf_ (~eclipser@durhur.fi) has quit (Changing host)
2016-10-18 07:33:35	-->	Zharf_ (~eclipser@xmms2/developer/Eclipser) has joined ##c++
2016-10-18 07:33:35	-->	Kasreyn_ (~i@h5ef52166.selulun.dyn.perspektivbredband.net) has joined ##c++
2016-10-18 07:33:35	-->	fschmitt (~fschmitt@ltw.loris.tv) has joined ##c++
2016-10-18 07:33:36	<--	Mike111 (~Mike@5.0.236.207) has quit (Client Quit)
2016-10-18 07:33:36	-->	emlai_ (emil@melkinkari.cs.helsinki.fi) has joined ##c++
2016-10-18 07:33:36	-->	Phanes- (Phanes@2600:3c03::f03c:91ff:fe67:c4e9) has joined ##c++
2016-10-18 07:33:36	-->	jantje (~jan@mozzy.smets.cx) has joined ##c++
2016-10-18 07:33:36	-->	yazdmich (~yazdmich@bytes.coffee) has joined ##c++
2016-10-18 07:33:36	-->	dflurker (~dimon@metaportal.ru) has joined ##c++
2016-10-18 07:33:36	-->	Cabanossi (~Cabanossi@p5DD7B861.dip0.t-ipconnect.de) has joined ##c++
2016-10-18 07:33:36	-->	dostoyevsky (~sck@n096h062.rs.de.inter.net) has joined ##c++
2016-10-18 07:33:37	-->	Nixx (~quassel@bulbasaur.sjorsgielen.nl) has joined ##c++
2016-10-18 07:33:37	-->	Chestal (~thilo@vmax.unix-ag.uni-siegen.de) has joined ##c++
2016-10-18 07:33:37	-->	smspillaz (smspillaz@motsugo.ucc.gu.uwa.edu.au) has joined ##c++
2016-10-18 07:33:37	-->	phantomcircuit (~phantomci@192.241.205.97) has joined ##c++
2016-10-18 07:33:37	-->	Zaneo|Away (~Zaneo@45.55.2.85) has joined ##c++
2016-10-18 07:33:38	-->	HeTo (henkka@battery.modeemi.fi) has joined ##c++
2016-10-18 07:33:38	-->	sohail (~sohail@li361-127.members.linode.com) has joined ##c++
2016-10-18 07:33:39	-->	Hellosun_ (~Hellosun@moon.cse.yzu.edu.tw) has joined ##c++
2016-10-18 07:33:39	-->	asgs- (~ident@2a07:440:2000:1b::1e03:80fc) has joined ##c++
2016-10-18 07:33:39	-->	vishesh (~vishesh@hydrogen.twistedplane.com) has joined ##c++
2016-10-18 07:33:41	-->	mikroflops (~yogurt@178.174.137.46) has joined ##c++
2016-10-18 07:33:42	-->	Lildirt (~Lildirt@lildirt.com) has joined ##c++
2016-10-18 07:33:42	-->	jdiez (~jdiez@unaffiliated/jdiez) has joined ##c++
2016-10-18 07:33:43	--	Zharf_ is now known as Zharf
2016-10-18 07:33:48	-->	rsully (~rsully@unaffiliated/rsully) has joined ##c++
2016-10-18 07:33:52	-->	Stryyker (stryyker16@ppp118-208-211-82.bras1.hba1.internode.on.net) has joined ##c++
2016-10-18 07:33:54	-->	wondiws (~Jasper@5ED7DF59.cm-7-8d.dynamic.ziggo.nl) has joined ##c++
2016-10-18 07:33:54	-->	ekem (~monkey@helium.nk3r.com) has joined ##c++
2016-10-18 07:33:55	<--	sohail (~sohail@li361-127.members.linode.com) has quit (Changing host)
2016-10-18 07:33:55	-->	sohail (~sohail@unaffiliated/sohail) has joined ##c++
2016-10-18 07:33:56	-->	KiNgMaR (~ingmar@2a01:4f8:130:7293::1337) has joined ##c++
2016-10-18 07:33:56	-->	tgy (~toogy@too.gy) has joined ##c++
2016-10-18 07:33:56	-->	karalaine (~karalaine@79.134.110.235) has joined ##c++
2016-10-18 07:33:56	-->	ilteris (~ilteris@2604:a880:400:d0::935:f001) has joined ##c++
2016-10-18 07:33:56	<--	Stryyker (stryyker16@ppp118-208-211-82.bras1.hba1.internode.on.net) has quit (Changing host)
2016-10-18 07:33:56	-->	Stryyker (stryyker16@about/windows/staff/stryyker) has joined ##c++
2016-10-18 07:33:56	-->	m0shbear (~011899988@205.185.118.116) has joined ##c++
2016-10-18 07:33:58	-->	wget (~wget@82.212.185.202) has joined ##c++
2016-10-18 07:33:58	-->	wickedmic (~wickedmic@wickedmic.com) has joined ##c++
2016-10-18 07:33:58	-->	SlashLife (~slashlife@botters/slashlife) has joined ##c++
2016-10-18 07:33:59	-->	Synergiance (~syn@lsv1.synerfiles.info) has joined ##c++
2016-10-18 07:34:00	--	Zaneo|Away is now known as Zaneo
2016-10-18 07:34:00	-->	PFault (~PFault@2a01:4f8:130:14b3::2) has joined ##c++
2016-10-18 07:34:00	-->	Cppg (~Cppg@host81-153-108-3.range81-153.btcentralplus.com) has joined ##c++
2016-10-18 07:34:01	-->	Chaser (~Chaser@192.241.229.182) has joined ##c++
2016-10-18 07:34:06	-->	tsjost (tsjost@2a01:7e00::f03c:91ff:fe56:f03c) has joined ##c++
2016-10-18 07:34:06	-->	SPoF95 (~SpoF@2001:1620:f00:8305:16da:e9ff:fe11:2119) has joined ##c++
2016-10-18 07:34:07	-->	smokex (smokex@gateway/shell/panicbnc/x-qhsnmurmbyfcmkod) has joined ##c++
2016-10-18 07:34:08	-->	cruxeternus (~cruxetern@secspeed.com) has joined ##c++
2016-10-18 07:34:08	-->	kazakuri (~kazakuri@shinjiru.me) has joined ##c++
2016-10-18 07:34:12	-->	Kido_SoraKi (kido@unic0rn.eu) has joined ##c++
2016-10-18 07:34:12	-->	Lord_of_Life (Elite12246@gateway/shell/elitebnc/x-ngaexaaqenvxahqe) has joined ##c++
2016-10-18 07:34:13	-->	unreal (~unreal@5.69.25.58) has joined ##c++
2016-10-18 07:34:13	-->	sim642 (~simmo@unaffiliated/sim642) has joined ##c++
2016-10-18 07:34:13	-->	stowelly (~stowelly@2a01:4f8:160:51eb::2) has joined ##c++
2016-10-18 07:34:14	-->	fold4 (~JimmyRcom@rp.eliteskills.com) has joined ##c++
2016-10-18 07:34:17	-->	CustosLimen (~CustosLim@unaffiliated/cust0slim3n) has joined ##c++
2016-10-18 07:34:18	<--	wget (~wget@82.212.185.202) has quit (Changing host)
2016-10-18 07:34:18	-->	wget (~wget@unaffiliated/wget) has joined ##c++
2016-10-18 07:34:21	--	Nixx is now known as Guest89397
2016-10-18 07:34:22	<--	unreal (~unreal@5.69.25.58) has quit (Changing host)
2016-10-18 07:34:22	-->	unreal (~unreal@unaffiliated/unreal) has joined ##c++
2016-10-18 07:34:23	-->	kstolen (~kStolen@2a00:fa40:2aaa:1::539:82de) has joined ##c++
2016-10-18 07:34:27	-->	nilof (~saolof@92-32-80-134.tn.glocalnet.net) has joined ##c++
2016-10-18 07:34:28	-->	Moonlight-Angel (~Moonlight@eth-east-parth2-46-193-65-193.wb.wifirst.net) has joined ##c++
2016-10-18 07:34:29	-->	Hansformer (hans@lagit.in) has joined ##c++
2016-10-18 07:34:29	<--	karalaine (~karalaine@79.134.110.235) has quit (Changing host)
2016-10-18 07:34:29	-->	karalaine (~karalaine@unaffiliated/karalaine) has joined ##c++
2016-10-18 07:34:30	-->	mafrasi2 (~quassel@2a01:4f8:130:6426::2) has joined ##c++
2016-10-18 07:34:35	-->	Cathy (~Cathy@unaffiliated/cathy) has joined ##c++
2016-10-18 07:34:38	<--	smokex (smokex@gateway/shell/panicbnc/x-qhsnmurmbyfcmkod) has quit (Changing host)
2016-10-18 07:34:38	-->	smokex (smokex@unaffiliated/smokex) has joined ##c++
2016-10-18 07:34:38	<--	smokex (smokex@unaffiliated/smokex) has quit (Changing host)
2016-10-18 07:34:38	-->	smokex (smokex@gateway/shell/panicbnc/x-qhsnmurmbyfcmkod) has joined ##c++
2016-10-18 07:34:38	-->	inkjetunito (~ben@x4db6e8db.dyn.telefonica.de) has joined ##c++
2016-10-18 07:34:38	<--	inkjetunito (~ben@x4db6e8db.dyn.telefonica.de) has quit (Changing host)
2016-10-18 07:34:38	-->	inkjetunito (~ben@unaffiliated/inkjetunit) has joined ##c++
2016-10-18 07:34:39	-->	brolaf (~brolaf@46.246.44.165) has joined ##c++
2016-10-18 07:34:41	-->	AndrewAlexMac (~andrewale@185.21.218.136) has joined ##c++
2016-10-18 07:34:42	-->	LinusVE (~quassel@legatus.cloud.tilaa.com) has joined ##c++
2016-10-18 07:34:44	-->	pingwindyktator (~pingwindy@pingwindyktator.tk) has joined ##c++
2016-10-18 07:34:45	-->	whiteline (~whiteline@unaffiliated/whiteline) has joined ##c++
2016-10-18 07:34:47	-->	Vulcano (~freenode@90.149.84.164) has joined ##c++
2016-10-18 07:34:50	-->	i7c (cmw@unaffiliated/i7c) has joined ##c++
2016-10-18 07:34:53	-->	bolt (r00t@unaffiliated/bolt) has joined ##c++
2016-10-18 07:34:56	<--	Asher (~Adium@c-73-106-33-32.hsd1.ga.comcast.net) has quit (Quit: Leaving.)
2016-10-18 07:35:16	-->	Asher (~Adium@c-73-106-33-32.hsd1.ga.comcast.net) has joined ##c++
2016-10-18 07:35:22	-->	icedev (~icedev@0x62.de) has joined ##c++
2016-10-18 07:35:23	-->	FIGO_ (sparrow@unaffiliated/platini) has joined ##c++
2016-10-18 07:35:23	<--	FIGO_ (sparrow@unaffiliated/platini) has left ##c++
2016-10-18 07:35:44	-->	mackal (~mike@pool-96-237-144-12.bstnma.fios.verizon.net) has joined ##c++
2016-10-18 07:35:44	<--	Mike11 (~Mike@unaffiliated/mike11) has quit (Ping timeout: 256 seconds)
2016-10-18 07:35:51	<--	navidr (uid112413@gateway/web/irccloud.com/x-fnbhybzejohegexc) has quit (Ping timeout: 256 seconds)
2016-10-18 07:35:56	<--	Awesomecase (sid56584@gateway/web/irccloud.com/x-yshxbswafsfvljzl) has quit (Ping timeout: 250 seconds)
2016-10-18 07:35:58	-->	betheynyx (~b@45.63.97.181) has joined ##c++
2016-10-18 07:36:06	<--	ghostlight (~ghostligh@ec2-54-187-97-144.us-west-2.compute.amazonaws.com) has quit (Ping timeout: 252 seconds)
2016-10-18 07:36:10	-->	junaidnaseer2 (~junaid@ip5f5bf902.dynamic.kabel-deutschland.de) has joined ##c++
2016-10-18 07:36:13	<--	sfan786_ (sid143344@gateway/web/irccloud.com/x-yfernpwnvtekndxw) has quit (Ping timeout: 250 seconds)
2016-10-18 07:36:13	<--	CARAM__ (sid27279@gateway/web/irccloud.com/x-zyfuhfwhlekldier) has quit (Ping timeout: 250 seconds)
2016-10-18 07:36:13	<--	jxv (uid190705@gateway/web/irccloud.com/x-fuvnizakomhneqhx) has quit (Ping timeout: 250 seconds)
2016-10-18 07:36:24	-->	zedsdeadbaby (~null@fyodor.krmz.ovh) has joined ##c++
2016-10-18 07:36:28	-->	Haliucinas (~Haliucina@data-101-117.cgates.lt) has joined ##c++
2016-10-18 07:36:33	-->	FIGO_ (sparrow@unaffiliated/platini) has joined ##c++
2016-10-18 07:36:33	<--	FIGO_ (sparrow@unaffiliated/platini) has left ##c++
2016-10-18 07:36:39	<--	fahadash (uid44972@gateway/web/irccloud.com/x-vvyicjpgsiombuie) has quit (Ping timeout: 250 seconds)
2016-10-18 07:36:39	<--	Bengi (sid73530@gateway/web/irccloud.com/x-hvpyamfbgkqdimbb) has quit (Ping timeout: 250 seconds)
2016-10-18 07:36:39	<--	jhill_ (sid1055@gateway/web/irccloud.com/x-ynqlobjmdxrckcdf) has quit (Ping timeout: 250 seconds)
2016-10-18 07:36:39	<--	YP-Cloud____ (sid130155@gateway/web/irccloud.com/x-tvoesxrudujmhguk) has quit (Ping timeout: 250 seconds)
2016-10-18 07:36:48	<--	ipronin (~ipronin@8.25.197.27) has quit (Ping timeout: 260 seconds)
2016-10-18 07:36:49	-->	kline (~kline@freenode/staff/enucs.kline) has joined ##c++
2016-10-18 07:36:52	<--	mehdi___ (sid15567@gateway/web/irccloud.com/x-olsqnqotipsykfwb) has quit (Ping timeout: 256 seconds)
2016-10-18 07:36:57	-->	FIGO_ (sparrow@unaffiliated/platini) has joined ##c++
2016-10-18 07:36:57	<--	FIGO_ (sparrow@unaffiliated/platini) has left ##c++
2016-10-18 07:37:04	<--	sephiap (sid14177@gateway/web/irccloud.com/x-nsyyectkkhhwgrhs) has quit (Ping timeout: 250 seconds)
2016-10-18 07:37:09	-->	tortal (tortal@unaffiliated/tortal) has joined ##c++
2016-10-18 07:37:09	-->	megaTherion (~therion@unix.io) has joined ##c++
2016-10-18 07:37:11	-->	chrisf (~chrisf@hamb.in) has joined ##c++
2016-10-18 07:37:19	-->	FIGO_ (sparrow@unaffiliated/platini) has joined ##c++
2016-10-18 07:37:19	<--	FIGO_ (sparrow@unaffiliated/platini) has left ##c++
2016-10-18 07:37:24	<--	chindy (~julian@213-240-80-10.adsl.highway.telekom.at) has quit (Remote host closed the connection)
2016-10-18 07:37:34	<--	chris64 (~chris@unaffiliated/chris64) has quit (Quit: leaving)
2016-10-18 07:38:08	<--	quaz0r (quaz@c-67-183-243-24.hsd1.wa.comcast.net) has quit (Ping timeout: 260 seconds)
2016-10-18 07:38:31	<--	de-facto (~de-facto@gateway/tor-sasl/de-facto) has quit (Remote host closed the connection)
2016-10-18 07:38:39	-->	zaltekk (~zaltekk@ec2-52-11-19-159.us-west-2.compute.amazonaws.com) has joined ##c++
2016-10-18 07:39:02	-->	imr (imr@2ProIntl/User/server-nerd/imr) has joined ##c++
2016-10-18 07:39:20	-->	de-facto (~de-facto@gateway/tor-sasl/de-facto) has joined ##c++
2016-10-18 07:39:20		[07:39]
2016-10-18 07:39:38	<--	Phlow (~Kiss@199.44.8.162) has quit
2016-10-18 07:40:20	<--	psychicist__ (~psychicis@ip127-8-212-87.adsl2.static.versatel.nl) has quit (Ping timeout: 244 seconds)
2016-10-18 07:40:35	-->	Neo (~neo@opennic/Neo) has joined ##c++
2016-10-18 07:40:49	-->	termos (sid18647@gateway/web/irccloud.com/x-gdfvxbszrmfukpep) has joined ##c++
2016-10-18 07:41:16	-->	q_plaz (sid153613@gateway/web/irccloud.com/x-outcpwtlhkaxmkkx) has joined ##c++
2016-10-18 07:41:19	-->	heatmis3r (sid112556@gateway/web/irccloud.com/x-ftyyrmpxwvaceqwz) has joined ##c++
2016-10-18 07:41:51	-->	psychicist__ (~psychicis@ip127-8-212-87.adsl2.static.versatel.nl) has joined ##c++
2016-10-18 07:41:52	-->	justicefries (sid26447@gateway/web/irccloud.com/x-qjiljaisjfhhzbco) has joined ##c++
2016-10-18 07:42:02	-->	Cohedrin (~textual@c-73-170-239-253.hsd1.ca.comcast.net) has joined ##c++
2016-10-18 07:42:04	-->	rfw (sid22696@gateway/web/irccloud.com/x-bwmolsbrgnztwrkh) has joined ##c++
2016-10-18 07:42:05	-->	eip` (sid27234@gateway/web/irccloud.com/x-ysyiygpwsycllnln) has joined ##c++
2016-10-18 07:42:30	-->	jlyndon_ (sid10913@gateway/web/irccloud.com/x-rzaguirljjjukluk) has joined ##c++
2016-10-18 07:42:38	-->	tharuin___ (sid159926@gateway/web/irccloud.com/x-itkwrpozfhwdppxi) has joined ##c++
2016-10-18 07:42:40	-->	fahadash (uid44972@gateway/web/irccloud.com/x-iqxjstevsvcleshw) has joined ##c++
2016-10-18 07:42:43	-->	CARAM__ (sid27279@gateway/web/irccloud.com/x-agvfwjblzrhjuqhu) has joined ##c++
2016-10-18 07:43:02	-->	kilimanjaro (sid113699@gateway/web/irccloud.com/x-warpqufyrdfzzyoe) has joined ##c++
2016-10-18 07:43:02	-->	jhill_ (sid1055@gateway/web/irccloud.com/x-nmtgfzyqimutcqcl) has joined ##c++
2016-10-18 07:43:25	-->	jiik (~antankh@wf124-051.ust.hk) has joined ##c++
2016-10-18 07:43:26	-->	sfan786_ (sid143344@gateway/web/irccloud.com/x-yrljqkhoqptvxqyy) has joined ##c++
2016-10-18 07:43:30	-->	YP-Cloud____ (sid130155@gateway/web/irccloud.com/x-pxflhxcbymyrwlyf) has joined ##c++
2016-10-18 07:43:44	-->	navidr (uid112413@gateway/web/irccloud.com/x-akxncuprehdqxkbn) has joined ##c++
2016-10-18 07:43:58	-->	toxicFork (sid60962@gateway/web/irccloud.com/x-jzooukyxysbyinhp) has joined ##c++
2016-10-18 07:44:14	-->	Hellosun (sid103121@gateway/web/irccloud.com/x-xuawstpyehwmhndb) has joined ##c++
2016-10-18 07:45:02	<--	rogual (~rogual@foon.uk) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-10-18 07:45:08	-->	pdm0205 (sid156665@gateway/web/irccloud.com/x-fipsweuguyuccmnm) has joined ##c++
2016-10-18 07:45:28	<--	topshell (~wew@447495.s.dedikuoti.lt) has quit (Remote host closed the connection)
2016-10-18 07:45:29	-->	sephiap (sid14177@gateway/web/irccloud.com/x-sckkremxmfreevnw) has joined ##c++
2016-10-18 07:45:39	-->	jxv (uid190705@gateway/web/irccloud.com/x-qnzgawuifrvkmder) has joined ##c++
2016-10-18 07:45:41	-->	Link (~Hyrule@2a02:810a:12c0:2600:9e3:c6db:6dc1:28dd) has joined ##c++
2016-10-18 07:45:54	-->	mrphantom (mrphantom@gateway/shell/kde/x-mukrsquqqoymmgmn) has joined ##c++
2016-10-18 07:45:57	<--	jiik (~antankh@wf124-051.ust.hk) has quit (Client Quit)
2016-10-18 07:46:17	-->	Bengi (sid73530@gateway/web/irccloud.com/x-grzfpmzuzymuzqvu) has joined ##c++
2016-10-18 07:46:36	-->	Awesomecase (sid56584@gateway/web/irccloud.com/x-mumbinxhnjbnbzjf) has joined ##c++
2016-10-18 07:46:39	-->	joel135 (sid136450@gateway/web/irccloud.com/x-yclrntaqdnxkzmjr) has joined ##c++
2016-10-18 07:46:44	-->	mehdi___ (sid15567@gateway/web/irccloud.com/x-nsbiyzitmgvaautu) has joined ##c++
2016-10-18 07:46:45	<--	Haliucinas (~Haliucina@data-101-117.cgates.lt) has quit (Quit: Leaving)
2016-10-18 07:47:01	-->	wrkronmiller (~wrkronmil@nuthatch-319.dynamic.rpi.edu) has joined ##c++
2016-10-18 07:47:13	<--	Awesomecase (sid56584@gateway/web/irccloud.com/x-mumbinxhnjbnbzjf) has quit (Excess Flood)
2016-10-18 07:47:44	-->	vralphv (~vralp@d137-186-58-40.abhsia.telus.net) has joined ##c++
2016-10-18 07:47:45	<--	ReverseBlade (~user@213.74.212.180) has quit (Ping timeout: 256 seconds)
2016-10-18 07:48:32	-->	Awesomecase (sid56584@gateway/web/irccloud.com/x-gcnhnwqpkbkxlpss) has joined ##c++
2016-10-18 07:50:26	-->	Dark_Fox (~foxd@204.14.239.53) has joined ##c++
2016-10-18 07:50:56	-->	purplex88 (~purplex88@unaffiliated/purplex88) has joined ##c++
2016-10-18 07:51:06	<--	navidr (uid112413@gateway/web/irccloud.com/x-akxncuprehdqxkbn) has quit (Quit: Connection closed for inactivity)
2016-10-18 07:52:51	<--	asgs- (~ident@2a07:440:2000:1b::1e03:80fc) has left ##c++
2016-10-18 07:53:04	-->	asgs (~ident@unaffiliated/l0pher) has joined ##c++
2016-10-18 07:54:10	-->	kadoban (~mud@unaffiliated/kadoban) has joined ##c++
2016-10-18 07:54:17	<--	zap0 (~moofy@14-201-222-143.tpgi.com.au) has quit (Quit: zap0)
2016-10-18 07:54:47	<--	tadaa (~tadaaa@nat-wh-wz4-12.rz.uni-karlsruhe.de) has quit (Remote host closed the connection)
2016-10-18 07:54:47		[07:54]
2016-10-18 07:55:04	-->	tadaa (~tadaaa@nat-wh-wz4-12.rz.uni-karlsruhe.de) has joined ##c++
2016-10-18 07:55:27	<--	fedepad (~fedepad@eduroam-88-37.zdv.uni-mainz.de) has quit (Remote host closed the connection)
2016-10-18 07:56:49	<--	AudaciousTUX (~manjaro-k@unaffiliated/audacioustux) has quit (Ping timeout: 256 seconds)
2016-10-18 07:57:58	<--	govg (~govg@unaffiliated/govg) has quit (Ping timeout: 245 seconds)
2016-10-18 07:59:14	<--	sirosirian (~theosiria@186.233.158.67) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-10-18 07:59:56	-->	sirosirian (~theosiria@186.233.157.102) has joined ##c++
2016-10-18 08:00:50	<--	S4nD3r (~Nix@2001:690:2200:9ac1:34f8:1:38c0:108c) has left ##c++ ("Leaving")
2016-10-18 08:01:20	<--	kasper^ (~safaf@82.137.9.188) has quit (Ping timeout: 250 seconds)
2016-10-18 08:06:02	<--	junaidnaseer2 (~junaid@ip5f5bf902.dynamic.kabel-deutschland.de) has quit (Read error: Connection reset by peer)
2016-10-18 08:06:53	-->	brwsr (~textual@2a02:c7d:b326:4700:60e8:3b1b:8945:8a69) has joined ##c++
2016-10-18 08:07:15	-->	kasper^ (~safaf@82.137.12.17) has joined ##c++
2016-10-18 08:07:31	-->	ReverseBlade (~user@213.74.212.180) has joined ##c++
2016-10-18 08:07:51	-->	riemann (~riemann@ip-222-209.ists.pl) has joined ##c++
2016-10-18 08:08:15	<--	rebb (~rebb3@p54B81010.dip0.t-ipconnect.de) has quit (Quit: Pong timeout)
2016-10-18 08:09:32	<--	cliluw (~cliluw@unaffiliated/cliluw) has quit (Read error: Connection reset by peer)
2016-10-18 08:10:04	-->	Malkrith (uid186536@gateway/web/irccloud.com/x-pahgtjstvjkwvpuo) has joined ##c++
2016-10-18 08:10:04		[08:10]
2016-10-18 08:10:07	<--	MrP[Home] (~Palsson@c-a46fe555.06-213-6e6b701.cust.bredbandsbolaget.se) has quit (Read error: Connection reset by peer)
2016-10-18 08:12:19	-->	LBV_User (~leonardo@186.213.159.233) has joined ##c++
2016-10-18 08:12:27	-->	cliluw (~cliluw@unaffiliated/cliluw) has joined ##c++
2016-10-18 08:12:38	-->	satbyy (~Satish_By@unaffiliated/satbyy) has joined ##c++
2016-10-18 08:14:06	hs_	hariel, because it is a debug message?
2016-10-18 08:14:08	hs_	what else would it be?
2016-10-18 08:14:26	-->	flavi0 (~anon@unaffiliated/flavi0) has joined ##c++
2016-10-18 08:15:12	<--	flavi0 (~anon@unaffiliated/flavi0) has quit (Client Quit)
2016-10-18 08:15:22	<--	hariel (~wolfcub@177.131.171.124) has quit (Ping timeout: 250 seconds)
2016-10-18 08:15:22	<--	shingshang (~shingshan@101.164.159.8) has quit (Ping timeout: 250 seconds)
2016-10-18 08:16:00	et	you could imagine wanting to give a better message, for example putting the name of template arguments in the message
2016-10-18 08:18:52	-->	ambro718 (~ambro@unaffiliated/ambro718) has joined ##c++
2016-10-18 08:19:32	-->	ghostlight (~ghostligh@ec2-54-187-97-144.us-west-2.compute.amazonaws.com) has joined ##c++
2016-10-18 08:20:39	-->	Z3N1T (~Zenit@179.176.16.101.dynamic.adsl.gvt.net.br) has joined ##c++
2016-10-18 08:20:59	-->	rorro (~rorro@94.254.51.238) has joined ##c++
2016-10-18 08:21:47	<--	bocaneri (~bocaneri@about/linux/staff/sauvin) has quit (Read error: Connection reset by peer)
2016-10-18 08:22:46	-->	dminuoso_ (~dminuoso@unaffiliated/dminuoso) has joined ##c++
2016-10-18 08:23:40	-->	gentoo_ (~gentoo@95-29-44-73.broadband.corbina.ru) has joined ##c++
2016-10-18 08:23:46	<--	Ricks (Ricks@1.ipv6.aegir.superbnc.com) has left ##c++ ("Leaving")
2016-10-18 08:24:04	<--	Xanather (~xanather@unaffiliated/xanather) has quit (Quit: Leaving)
2016-10-18 08:25:20	<--	Calinou (~quassel@unaffiliated/calinou) has quit (Ping timeout: 260 seconds)
2016-10-18 08:25:20		[08:25]
2016-10-18 08:26:16	thinlizzy	C++17 static assert will have a default message
2016-10-18 08:27:29	-->	alhariel (~wolfcub@177.55.195.132) has joined ##c++
2016-10-18 08:27:44	-->	jiik (~antankh@wf124-051.ust.hk) has joined ##c++
2016-10-18 08:29:20	<--	syem (~s@unaffiliated/syem) has quit (Quit: Lost terminal)
2016-10-18 08:29:56	<--	chardan (~chardan@67-5-247-129.ptld.qwest.net) has quit (Ping timeout: 244 seconds)
2016-10-18 08:31:13	-->	HerzogDeXtEr (~farci@i59F6D66E.versanet.de) has joined ##c++
2016-10-18 08:33:16	<--	jiik (~antankh@wf124-051.ust.hk) has quit (Remote host closed the connection)
2016-10-18 08:37:00	<--	Z3N1T (~Zenit@179.176.16.101.dynamic.adsl.gvt.net.br) has quit (Ping timeout: 260 seconds)
2016-10-18 08:37:38	<--	Dohplay_ (~Dohplay@2601:246:4400:f10c:f48c:786e:15df:70e7) has quit (Read error: Connection reset by peer)
2016-10-18 08:37:58	<--	rbern (~rbern@unaffiliated/rbern) has quit (Read error: Connection reset by peer)
2016-10-18 08:38:04	-->	Dohplay_ (~Dohplay@2601:246:4400:f10c:f48c:786e:15df:70e7) has joined ##c++
2016-10-18 08:38:55	<--	blueness (~blueness@gentoo/developer/blueness) has quit (Quit: blueness)
2016-10-18 08:39:16	<--	EvilPenguin (~EvilPengu@bur-inet-pa-1.disney.com) has quit (Ping timeout: 260 seconds)
2016-10-18 08:39:38	<--	V-ille (~ville@59ec7803.symbio.com) has quit (Ping timeout: 250 seconds)
2016-10-18 08:42:52	-->	samik (~smukherje@netops-100.sfo1.bitgravity.com) has joined ##c++
2016-10-18 08:42:52		[08:42]
2016-10-18 08:42:55	<--	afiefh (~afiefh@5.102.242.233) has quit (Read error: Connection reset by peer)
2016-10-18 08:43:24	-->	knittl (~knittl@unaffiliated/knittl) has joined ##c++
2016-10-18 08:44:09	-->	Aquazi (~Aquazi@host65-199-dynamic.32-79-r.retail.telecomitalia.it) has joined ##c++
2016-10-18 08:44:49	-->	disgrntld (~levi@12.201.194.50) has joined ##c++
2016-10-18 08:45:06	-->	ipronin (~ipronin@8.25.197.27) has joined ##c++
2016-10-18 08:45:58	-->	AudaciousTUX (~manjaro-k@unaffiliated/audacioustux) has joined ##c++
2016-10-18 08:46:41	<--	ReverseBlade (~user@213.74.212.180) has quit (Ping timeout: 256 seconds)
2016-10-18 08:48:45	-->	rbern (~rbern@unaffiliated/rbern) has joined ##c++
2016-10-18 08:48:56	-->	EvilPenguin (~EvilPengu@bur-inet-pa-1.disney.com) has joined ##c++
2016-10-18 08:49:00	<--	iceiceice (~chris@pool-173-61-153-221.cmdnnj.fios.verizon.net) has quit (Quit: Ex-Chat)
2016-10-18 08:49:18	-->	devastat0r (~devastat0@99-164-66-58.lightspeed.rcsntx.sbcglobal.net) has joined ##c++
2016-10-18 08:49:34	<--	inkjetunito (~ben@unaffiliated/inkjetunit) has quit (Quit: q)
2016-10-18 08:50:57	<--	GenteelBen (~GenteelBe@cpc70133-lutn12-2-0-cust324.9-3.cable.virginm.net) has quit
2016-10-18 08:51:21	-->	RajRajRaj (uid72176@gateway/web/irccloud.com/x-arrlvqgkizczxrud) has joined ##c++
2016-10-18 08:51:38	<--	araml (~araml@181.167.68.89) has quit (Quit: WeeChat 1.4)
2016-10-18 08:51:49	-->	Endarked (~endarked@2a01:11bf:5b1:b300:e8ee:f7b1:d82e:e7f3) has joined ##c++
2016-10-18 08:52:25	-->	tarspace (~tarspace@37.130.146.83) has joined ##c++
2016-10-18 08:53:49	<--	ubsan (~ubsan@frozen.darkfox.id.au) has quit (Ping timeout: 265 seconds)
2016-10-18 08:54:16	-->	ubsan (~ubsan@frozen.darkfox.id.au) has joined ##c++
2016-10-18 08:54:38	-->	aricz (~aricz@129.241.132.19) has joined ##c++
2016-10-18 08:55:20	-->	AnarchyAo (~andrew@8.18.217.202) has joined ##c++
2016-10-18 08:55:46	disgrntld	Hey gang, I've implemented a solution to a simple problem (Project Euler #1) in C++11 with lambdas. Is there a way to do the same (without function objects or external libraries) in C++98? Here's what I've tried (see commented line): http://pastebin.com/499xNrhg
2016-10-18 08:56:28	-->	pukapy123 (~pukapy123@79.119.77.13) has joined ##c++
2016-10-18 08:56:30	pukapy123	hello
2016-10-18 08:57:09	LBV_User	disgrntld: the lambda can be extracted as a free function
2016-10-18 08:57:10	-->	rebb (~rebb3@p54B81CBA.dip0.t-ipconnect.de) has joined ##c++
2016-10-18 08:57:11	pukapy123	is it worth learning c++? i only know python and i started with some basic c++ programs.. but is it worth learning? is it a hard language?
2016-10-18 08:57:24	LBV_User	disgrntld: the iota is c++11 onwards irrc
2016-10-18 08:57:30	Dark_Fox	pukapy123: You should learn more than just python
2016-10-18 08:57:30	LBV_User	iirc*
2016-10-18 08:57:31	disgrntld	ohh, whoops
2016-10-18 08:57:34	-->	Calinou (~quassel@unaffiliated/calinou) has joined ##c++
2016-10-18 08:57:35	Dark_Fox	Don't stop at just one language
2016-10-18 08:57:47	disgrntld	Ok, pretend I didn't use iota already!
2016-10-18 08:57:52	disgrntld	:)
2016-10-18 08:57:52		[08:57]
2016-10-18 08:58:00	pukapy123	i mean c++ seems pretty awesome .. the ideea that i can buil gui programs for windows and linux
2016-10-18 08:58:06	pukapy123	but is it hard to learn?
2016-10-18 08:58:12	pukapy123	all people say it's very very hard.. but why?
2016-10-18 08:58:35	disgrntld	also, I undertand your point about extracting as a free function, would there be a way with functional adapters and composition?
2016-10-18 08:58:39	LBV_User	disgrntld: idk if accumulate is c++11 or not, but it is just a for summing the elements
2016-10-18 08:59:05	LBV_User	in c++03/98? I don't think so
2016-10-18 08:59:13	devastat0r	Should I be using Cygwin or MSys for compiling apps like FreeTDS on Windows 10?
2016-10-18 08:59:23	disgrntld	...I'm most interested in trying to determine the extent of the adapters before the new, cool, bind and stuff in C++11
2016-10-18 08:59:31	disgrntld	ok, cool, LBV_User
2016-10-18 08:59:37	disgrntld	I didn't think so, thanks for the help
2016-10-18 08:59:51	Dark_Fox	pukapy123: Not sure this is the channel to discuss it, so you might want to move this to a private message if we're asked to, but-  C++ gives you more control over your memory and instructions, with the trade-off that you may need to write more code to do the same thing you can do in another language for less
2016-10-18 09:00:27	LBV_User	disgrntld: btw, paste to melpon or ideone next time ;)
2016-10-18 09:00:34	pukapy123	but it's easier to write gui apps than u can do let's say in python wich is a scripting language right? :p
2016-10-18 09:00:37	disgrntld	ohh, kk, will do
2016-10-18 09:00:51	<--	AnarchyAo (~andrew@8.18.217.202) has quit (Ping timeout: 256 seconds)
2016-10-18 09:00:54	Dark_Fox	I'm not sure "easy" is the most correct way to describe it
2016-10-18 09:00:57	aricz	pukapy123: #programming is your channel to go :)
2016-10-18 09:01:20	pukapy123	@aricz, tanks :D
2016-10-18 09:02:02	-->	ReverseBlade (~user@213.74.212.180) has joined ##c++
2016-10-18 09:02:08	<--	Endarked (~endarked@2a01:11bf:5b1:b300:e8ee:f7b1:d82e:e7f3) has quit (Ping timeout: 245 seconds)
2016-10-18 09:02:40	-->	blueness (~blueness@gentoo/developer/blueness) has joined ##c++
2016-10-18 09:02:50	-->	eraz (8dd532b1@gateway/web/cgi-irc/kiwiirc.com/ip.141.213.50.177) has joined ##c++
2016-10-18 09:05:49	-->	skweek (~skweek@2607:fe50:0:810b:c019:46fd:9dd6:3f90) has joined ##c++
2016-10-18 09:06:45	<--	SHC (~quassel@160.202.182.128) has quit (Remote host closed the connection)
2016-10-18 09:06:52	-->	chardan (~chardan@c-24-21-137-22.hsd1.or.comcast.net) has joined ##c++
2016-10-18 09:07:49	-->	V-ille (~ville@81-175-149-170.bb.dnainternet.fi) has joined ##c++
2016-10-18 09:09:18	<--	LKoen (~LKoen@vbo91-1-82-238-218-67.fbx.proxad.net) has quit (Quit: “It’s only logical. First you learn to talk, then you learn to think. Too bad it’s not the other way round.”)
2016-10-18 09:10:16	-->	kenden (~dsps@85.211.209.162) has joined ##c++
2016-10-18 09:12:11	<--	ipronin (~ipronin@8.25.197.27) has quit (Ping timeout: 256 seconds)
2016-10-18 09:12:21	-->	Vuks (~Vuks@unaffiliated/vuks69) has joined ##c++
2016-10-18 09:13:07	<--	Vuks (~Vuks@unaffiliated/vuks69) has quit (Client Quit)
2016-10-18 09:13:07		[09:13]
2016-10-18 09:13:46	<--	Sculptor_ (~Sculptor@cable-188-2-190-223.dynamic.sbb.rs) has quit (Changing host)
2016-10-18 09:13:47	-->	Sculptor_ (~Sculptor@trivialand/master/sculptor) has joined ##c++
2016-10-18 09:13:53	-->	Vuks (~Vuks@unaffiliated/vuks69) has joined ##c++
2016-10-18 09:15:35	<--	lompik (~lompik@2001:19f0:6800:1522:5400:ff:fe21:fd3d) has quit (Ping timeout: 256 seconds)
2016-10-18 09:16:23	-->	Ievh (~Ievh@AStrasbourg-653-1-188-198.w90-13.abo.wanadoo.fr) has joined ##c++
2016-10-18 09:16:35	<--	f3r70rr35f (~fernando@186.36.52.35) has quit (Quit: leaving)
2016-10-18 09:16:52	-->	Azusa762 (~roy@37.228.241.109) has joined ##c++
2016-10-18 09:17:45	-->	allen29 (~all@unaffiliated/allen29) has joined ##c++
2016-10-18 09:18:59	-->	pylbrecht (~pylbrecht@2a02:8109:8a40:12b4:9eff:1344:72c0:fae) has joined ##c++
2016-10-18 09:19:07	<--	Azusa762 (~roy@37.228.241.109) has quit (Remote host closed the connection)
2016-10-18 09:19:24	<--	ubsan (~ubsan@frozen.darkfox.id.au) has quit (Ping timeout: 260 seconds)
2016-10-18 09:19:30	-->	marcofe (~marcofe@31.161.52.18) has joined ##c++
2016-10-18 09:19:33	<--	ReverseBlade (~user@213.74.212.180) has quit (Ping timeout: 256 seconds)
2016-10-18 09:19:40	<--	gentoo_ (~gentoo@95-29-44-73.broadband.corbina.ru) has quit (Quit: Konversation terminated!)
2016-10-18 09:20:26	-->	KAHR-Alpha (~Alpha@AReims-652-1-18-165.w90-18.abo.wanadoo.fr) has joined ##c++
2016-10-18 09:23:10	<--	tarspace (~tarspace@37.130.146.83) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-10-18 09:23:21	-->	naraku_9333 (~quassel@unaffiliated/naraku9333) has joined ##c++
2016-10-18 09:24:10	-->	KaiserAres (~KaiserAre@unaffiliated/kaiserares) has joined ##c++
2016-10-18 09:25:18	<--	sirosirian (~theosiria@186.233.157.102) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-10-18 09:25:18	-->	ubsan (~ubsan@frozen.darkfox.id.au) has joined ##c++
2016-10-18 09:25:39	-->	tarspace (~tarspace@37.130.146.83) has joined ##c++
2016-10-18 09:26:46	-->	ipronin (~ipronin@8.25.197.27) has joined ##c++
2016-10-18 09:27:08	<--	naraku9333 (~quassel@unaffiliated/naraku9333) has quit (Ping timeout: 250 seconds)
2016-10-18 09:28:22	<--	velco (~chill@vlan-nesebar-60-155.comnet.bg) has quit (Quit: Leaving)
2016-10-18 09:28:22		[09:28]
2016-10-18 09:28:36	-->	lompik (~lompik@41.213.212.125) has joined ##c++
2016-10-18 09:29:43	-->	gnidmoo (~gnidmoo@115.44.201.77.rev.sfr.net) has joined ##c++
2016-10-18 09:30:02	-->	modlin (~quassel@93.123.41.167) has joined ##c++
2016-10-18 09:31:27	<--	ipronin (~ipronin@8.25.197.27) has quit (Ping timeout: 256 seconds)
2016-10-18 09:31:28	-->	Markow (~Markow@176.122.215.103) has joined ##c++
2016-10-18 09:31:58	-->	modlin_ (~quassel@93.123.41.167) has joined ##c++
2016-10-18 09:31:58	<--	modlin_ (~quassel@93.123.41.167) has quit (Client Quit)
2016-10-18 09:32:35	-->	nwkj86 (~nwkj86@142.66.6.51.dyn.plus.net) has joined ##c++
2016-10-18 09:32:45	-->	chindy (~julian@213-240-80-10.adsl.highway.telekom.at) has joined ##c++
2016-10-18 09:32:55	<--	blackbit (~ahuemer@unaffiliated/ahuemer) has quit (Max SendQ exceeded)
2016-10-18 09:33:32	-->	dgbsdf (67157f4e@gateway/web/freenode/ip.103.21.127.78) has joined ##c++
2016-10-18 09:33:36	<--	modlin (~quassel@93.123.41.167) has quit (Remote host closed the connection)
2016-10-18 09:34:13	<--	archheretic (~archheret@cm-84.213.214.158.getinternet.no) has quit (Ping timeout: 245 seconds)
2016-10-18 09:35:03	-->	przemkovv-bis (~przemkovv@d82-83.icpnet.pl) has joined ##c++
2016-10-18 09:35:10	-->	ipronin (~ipronin@8.25.197.27) has joined ##c++
2016-10-18 09:37:53	<--	gnidmoo (~gnidmoo@115.44.201.77.rev.sfr.net) has quit (Quit: Leave)
2016-10-18 09:38:15	<--	lompik (~lompik@41.213.212.125) has quit (Ping timeout: 256 seconds)
2016-10-18 09:38:49	<--	ubsan (~ubsan@frozen.darkfox.id.au) has quit (Ping timeout: 256 seconds)
2016-10-18 09:38:51	<--	kenden (~dsps@85.211.209.162) has quit (Quit: My computer has gone to sleep. ZZZzzz…)
2016-10-18 09:39:38	-->	blackbit (~ahuemer@unaffiliated/ahuemer) has joined ##c++
2016-10-18 09:40:35	<--	alamar (alamar@oops.kernel.de) has quit (Ping timeout: 258 seconds)
2016-10-18 09:41:16	-->	OerHeks (~OerHeks@ubuntu/member/oerheks) has joined ##c++
2016-10-18 09:41:40	-->	archheretic (~archheret@cm-84.213.214.158.getinternet.no) has joined ##c++
2016-10-18 09:41:52	<--	rorro (~rorro@94.254.51.238) has quit (Ping timeout: 250 seconds)
2016-10-18 09:42:11	-->	modlin (~quassel@93.123.41.167) has joined ##c++
2016-10-18 09:42:33	<--	jorj (~jorj@162.220.240.216) has quit (Ping timeout: 252 seconds)
2016-10-18 09:42:48	<--	SteffanW (~steffanw@ip4da40774.direct-adsl.nl) has quit (Read error: Connection reset by peer)
2016-10-18 09:42:49	-->	Noidea_ (~NoIdea@223.231.29.213) has joined ##c++
2016-10-18 09:42:56	devastat0r	Should I be using Cygwin or MSys for compiling apps like FreeTDS on Windows 10?
2016-10-18 09:43:13	<--	Ievh (~Ievh@AStrasbourg-653-1-188-198.w90-13.abo.wanadoo.fr) has quit (Read error: Connection reset by peer)
2016-10-18 09:43:26	Noidea_	why is there a red mark in #include<iostream.h> codeblocks??
2016-10-18 09:43:26		[09:43]
2016-10-18 09:43:29	-->	ubsan (~ubsan@frozen.darkfox.id.au) has joined ##c++
2016-10-18 09:43:33	m_ben	!give devastat0r general
2016-10-18 09:43:34	nolyc	devastat0r: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2016-10-18 09:43:42	-->	iwakura (~Shino@user-31-174-209-151.play-internet.pl) has joined ##c++
2016-10-18 09:43:47	TinoDidriksen	Noidea_, iostream.h is not a C++ header. iostream is.
2016-10-18 09:44:06	TinoDidriksen	Standard C++ headers don't have .h
2016-10-18 09:44:21	Noidea_	still the same red mark appears
2016-10-18 09:44:37	V-ille	some c++ headers do have .h
2016-10-18 09:44:46	TinoDidriksen	Then you're not in C++ mode. #include <iostream> will work in C++.
2016-10-18 09:45:07	Noidea_	i wrote   #include<iostream>
2016-10-18 09:45:08	Noidea_	#include<conio>
2016-10-18 09:45:09	Noidea_	int main()
2016-10-18 09:45:09	Noidea_	{
2016-10-18 09:45:09	Noidea_	clrscr();
2016-10-18 09:45:09	Noidea_	cout<<"HI WORLD";
2016-10-18 09:45:09	Noidea_	return 0;
2016-10-18 09:45:11	Noidea_	}
2016-10-18 09:45:18	TinoDidriksen	Don't paste in the channel.
2016-10-18 09:45:28	TinoDidriksen	conio.h is not a C++ header, so it has .h
2016-10-18 09:45:29	<--	joel135 (sid136450@gateway/web/irccloud.com/x-yclrntaqdnxkzmjr) has quit (Ping timeout: 252 seconds)
2016-10-18 09:45:33	Noidea_	oh ok I wont ever again
2016-10-18 09:46:00	TinoDidriksen	conio.h is not even C. It's DOS specific.
2016-10-18 09:46:07	-->	Fischmiep (~Fischmiep@46-59-255-37.lsn6.wtnet.de) has joined ##c++
2016-10-18 09:46:24	TinoDidriksen	Noidea_, I get the feeling you're following horrendous tutorials.
2016-10-18 09:46:32	TinoDidriksen	!give Noidea_ basics
2016-10-18 09:46:33	nolyc	Noidea_: Books, references, tutorials, for all levels of learning: http://isocpp.org/get-started ; https://isocpp.org/faq ; http://www.dev-hq.net/c++/ ; http://learncpp.com/ ; http://stackoverflow.com/q/388242 ; https://github.com/isocpp/CppCoreGuidelines ; http://cppreference.com/
2016-10-18 09:46:33	-->	joel135 (sid136450@gateway/web/irccloud.com/x-qivjpkvoheowbsxr) has joined ##c++
2016-10-18 09:46:41	<--	jamesaxl (~jamesaxl@176.98.129.195) has quit (Quit: Leaving)
2016-10-18 09:46:48	Noidea_	horrendous?
2016-10-18 09:46:52	-->	ReverseBlade (~user@213.74.212.180) has joined ##c++
2016-10-18 09:46:55	TinoDidriksen	Very bad.
2016-10-18 09:47:07	<--	illerucis (~illerucis@2620:10d:c091:200::7:c9ef) has quit (Remote host closed the connection)
2016-10-18 09:47:13	TinoDidriksen	Anything that tells you to use conio.h is probably 15 years out of date.
2016-10-18 09:47:28	Noidea_	so what's wrong in the program? it worked in turbo
2016-10-18 09:47:28	<--	roolebo_ (sid64806@gateway/web/irccloud.com/x-jvykubuclzqoyiwb) has quit (Ping timeout: 260 seconds)
2016-10-18 09:47:41	TinoDidriksen	Turbo C++ is 15+ years out of date.
2016-10-18 09:47:44	<--	mackal (~mike@pool-96-237-144-12.bstnma.fios.verizon.net) has quit (Quit: BE VIGILANT.)
2016-10-18 09:47:49	Noidea_	using stdio instead?
2016-10-18 09:47:50	<--	toxicFork (sid60962@gateway/web/irccloud.com/x-jzooukyxysbyinhp) has quit (Read error: Connection reset by peer)
2016-10-18 09:48:06	<--	reem_ (sid78397@gateway/web/irccloud.com/x-jzsyuzlfkpmlpijl) has quit (Ping timeout: 250 seconds)
2016-10-18 09:48:09	-->	bjz (~bjz@104.222.140.102) has joined ##c++
2016-10-18 09:48:11	eraz	Noidea_: that is a *very* old version of C++ you're using there.
2016-10-18 09:48:13	-->	toxicFork (sid60962@gateway/web/irccloud.com/x-dpailnthjmxfpmhr) has joined ##c++
2016-10-18 09:48:18	Noidea_	but why is there a red mark in iostream?
2016-10-18 09:48:33	Noidea_	so what's the new version?
2016-10-18 09:48:45	TinoDidriksen	Noidea_, check the links, get a newer IDE such as https://www.visualstudio.com/vs/community/
2016-10-18 09:48:47	<--	avalchev (uid190868@gateway/web/irccloud.com/x-gmytgxkofoxvswcw) has quit (Ping timeout: 252 seconds)
2016-10-18 09:49:08	Noidea_	I got codeblocks
2016-10-18 09:49:10	Noidea_	now
2016-10-18 09:49:19	-->	sirosirian (~theosiria@191.251.98.207) has joined ##c++
2016-10-18 09:49:29	-->	karakedi (~eAC53C340@unaffiliated/orphan) has joined ##c++
2016-10-18 09:49:35	-->	avalchev (uid190868@gateway/web/irccloud.com/x-koiaqiqlojtczfqo) has joined ##c++
2016-10-18 09:49:49	Noidea_	it says fatal error iostream no such file or directory
2016-10-18 09:49:50	-->	reem_ (sid78397@gateway/web/irccloud.com/x-bxurgkcwwyzvdrjn) has joined ##c++
2016-10-18 09:50:10	TinoDidriksen	Maybe you named the file wrong. It should have suffix .cpp or .cc to be considered C++ by most compilers.
2016-10-18 09:50:37	<--	dgbsdf (67157f4e@gateway/web/freenode/ip.103.21.127.78) has quit (Quit: Page closed)
2016-10-18 09:50:40	Noidea_	ok I remove iostream and instead used stdio and stdlib
2016-10-18 09:50:48	TinoDidriksen	Those are C.
2016-10-18 09:51:03	Noidea_	not there's an error in cout, it says undeclared!
2016-10-18 09:51:07	-->	quaz0r (quaz@c-67-183-243-24.hsd1.wa.comcast.net) has joined ##c++
2016-10-18 09:51:12	TinoDidriksen	Yes, cout is C++...
2016-10-18 09:51:13	Noidea_	oh
2016-10-18 09:51:16	TinoDidriksen	Make up your mind.
2016-10-18 09:51:25	TinoDidriksen	!give Noidea_ basics
2016-10-18 09:51:26	nolyc	Noidea_: Books, references, tutorials, for all levels of learning: http://isocpp.org/get-started ; https://isocpp.org/faq ; http://www.dev-hq.net/c++/ ; http://learncpp.com/ ; http://stackoverflow.com/q/388242 ; https://github.com/isocpp/CppCoreGuidelines ; http://cppreference.com/
2016-10-18 09:51:30	TinoDidriksen	Read, learn...
2016-10-18 09:51:38	-->	roolebo_ (sid64806@gateway/web/irccloud.com/x-vjblrxigdojtzyba) has joined ##c++
2016-10-18 09:51:42	Noidea_	so I got it, all these days I learnt nothing
2016-10-18 09:52:03	<--	Jackneill_ (~Jackneill@unaffiliated/jackneill) has quit (Remote host closed the connection)
2016-10-18 09:52:04	TinoDidriksen	If you've spent days on hello world, you're doing something extremely wrong.
2016-10-18 09:52:23	-->	julian (alamar@oops.kernel.de) has joined ##c++
2016-10-18 09:52:47	--	julian is now known as Guest69218
2016-10-18 09:53:09	Noidea_	I used the language in arduino which is nearly same as C, and it worked perfectly, can you teach me because I can't get the sites you sent
2016-10-18 09:53:45	<--	CEnnis91 (uid3543@gateway/web/irccloud.com/x-vzowqzstnikxfkfh) has quit (Ping timeout: 265 seconds)
2016-10-18 09:54:00	<--	placer14 (sid86639@gateway/web/irccloud.com/x-acioonginiziokrc) has quit (Ping timeout: 250 seconds)
2016-10-18 09:54:09	Deaod	"cant get"? View, or understand?
2016-10-18 09:54:28	-->	PlasmaHH_ (~kvirc@2001:6f8:1293:1:757c:edcc:b8c4:b402) has joined ##c++
2016-10-18 09:54:48	Noidea_	dev-hq is working now
2016-10-18 09:54:56	<--	Xeshi (~root@46.101.237.93) has quit (Ping timeout: 260 seconds)
2016-10-18 09:55:19	-->	Adbray (~Adbtay@2001:470:1f11:def:ccf1:960a:fab:ceb6) has joined ##c++
2016-10-18 09:55:28	TinoDidriksen	#arduino can help you with that platforrm. We don't teach C++ (or C) - we answer specific questions. Maybe ##C++-basic can help you.
2016-10-18 09:55:41	-->	iceiceice (~chris@pool-173-61-153-221.cmdnnj.fios.verizon.net) has joined ##c++
2016-10-18 09:55:42	<--	iceiceice (~chris@pool-173-61-153-221.cmdnnj.fios.verizon.net) has quit (Changing host)
2016-10-18 09:55:42	-->	iceiceice (~chris@unaffiliated/iceiceice) has joined ##c++
2016-10-18 09:55:45	<--	breakfast (~breakfast@217.138.28.22) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-10-18 09:55:48	megaTherion	Noidea_: gettin a book is essential
2016-10-18 09:55:52	Noidea_	what is the extenstion for C++ file .c or .cpp or .cc
2016-10-18 09:55:59	TinoDidriksen	.cpp
2016-10-18 09:56:00	megaTherion	Noidea_: Arduino isnt really any language, more like an mix up of things
2016-10-18 09:56:23	TinoDidriksen	.c is C, .cpp and .cc are both C++, but .cpp is preferred.
2016-10-18 09:56:26	Noidea_	I had a book but it taught me on turbo C++ ehich I think was my worst idea
2016-10-18 09:56:31	Moto-chan	Arduino is programmed in C++
2016-10-18 09:56:38	Moto-chan	It's not a mix of anything, it's C++, simple as.
2016-10-18 09:56:38	TinoDidriksen	Yes, Turbo C++ is ancient crap.
2016-10-18 09:56:51	-->	CEnnis91 (uid3543@gateway/web/irccloud.com/x-brsvjpftrabupemg) has joined ##c++
2016-10-18 09:56:55	megaTherion	Moto-chan: I thought there were many non-standard-C++ things in it?
2016-10-18 09:57:14	eraz	megaTherion: Turbo C++ is pre-standardization iirc
2016-10-18 09:57:25	eraz	Though it was maintained since standardization for a while.
2016-10-18 09:57:27	Moto-chan	It's not completely conformant C++, but it's more or less it, megaTherion.
2016-10-18 09:57:41	Moto-chan	Instead of a main(); you have a init() and a loop()
2016-10-18 09:57:52	Moto-chan	And there's arduino specific functions obviously.
2016-10-18 09:58:02	-->	placer14 (sid86639@gateway/web/irccloud.com/x-ltnbamfeemtwxtgn) has joined ##c++
2016-10-18 09:58:02	Moto-chan	But for the mostpart, it's C++
2016-10-18 09:59:04	Noidea_	what is this error std:: cout
2016-10-18 09:59:04		[09:59]
2016-10-18 09:59:48	-->	LebedevRI (~LebedevRI@unaffiliated/lebedevri) has joined ##c++
2016-10-18 09:59:52	TinoDidriksen	To use things in the standard library, you prefix them with std::, so cout is actually std::cout
2016-10-18 10:02:21	Noidea_	so what header should i use to avoid writing std::cout, but only cout
2016-10-18 10:02:28	TinoDidriksen	Don't do that.
2016-10-18 10:02:30	megaTherion	not a header question
2016-10-18 10:02:47	TinoDidriksen	Write the std::, it's better in the long run.
2016-10-18 10:02:56	megaTherion	Noidea_: that Turbo C++ book doesnt teach about namespaces?
2016-10-18 10:03:03	<--	LBV_User (~leonardo@186.213.159.233) has quit (Quit: done with this Instant Ramen Cup)
2016-10-18 10:03:07	Noidea_	nah
2016-10-18 10:03:09	TinoDidriksen	Namespaces didn't exist back then, afaik.
2016-10-18 10:03:14	megaTherion	oh ok
2016-10-18 10:03:19	Noidea_	its working now, added stdlib.h
2016-10-18 10:03:22	Moto-chan	Get a better book tbh
2016-10-18 10:03:27	megaTherion	absolutly
2016-10-18 10:03:27	TinoDidriksen	stdlib.h is not C++
2016-10-18 10:03:45	Noidea_	so whats stidlib alternative in C++
2016-10-18 10:03:51	Moto-chan	cstdlib
2016-10-18 10:03:52	Moto-chan	Noidea_: turbo C++ is going to harm your learning of C++ in the long run...
2016-10-18 10:03:52	Noidea_	stdlib*
2016-10-18 10:04:07	Moto-chan	!books
2016-10-18 10:04:08	nolyc	A nice C++ book guide and list can be found at http://stackoverflow.com/q/388242/1090079
2016-10-18 10:04:09	-->	fedepad (~fedepad@p4FE13C0D.dip0.t-ipconnect.de) has joined ##c++
2016-10-18 10:04:12	Moto-chan	Get one of these beginner books.
2016-10-18 10:04:41	Noidea_	Ok so, when its taught in my school will that be ok if I use the new books and instead correct the teacher?
2016-10-18 10:04:42	LebedevRI	hi. i'm trying to understand an issue, it may be because of the difference between c boolean and c++ bool? https://paste.debian.net/883441/  does this ring any bells?
2016-10-18 10:04:58	Moto-chan	Oh jesus
2016-10-18 10:05:04	megaTherion	*lool*
2016-10-18 10:05:11	Moto-chan	Turbo C++ is the recommended book by your teacher?
2016-10-18 10:05:15	-->	sze_ (~sze@103.41.132.69) has joined ##c++
2016-10-18 10:05:15	-->	Spart (~Spart@176.134.152.140) has joined ##c++
2016-10-18 10:05:19	eraz	Noidea_: is your learning of C++ under the instruction of a *teacher*?
2016-10-18 10:05:31	eraz	*learning of +15 year old C++
2016-10-18 10:05:42	megaTherion	what kind of school is that o.o
2016-10-18 10:05:43	Noidea_	yes it will be , its in our syllabus but not started yet
2016-10-18 10:05:47	TinoDidriksen	Noidea_, ah, you're Indian. It is unfortunately well known that your school system's insistence on Turbo C++ is a laughing stock to the rest of the world.
2016-10-18 10:05:53	-->	DingoSaar (~hagen@pD9E08482.dip0.t-ipconnect.de) has joined ##c++
2016-10-18 10:06:13	TinoDidriksen	File a formal complaint with the school.
2016-10-18 10:06:13	<--	meth (~meth@unaffiliated/meth) has quit (Quit: Snoochie Boochies!)
2016-10-18 10:06:17	Noidea_	so true TinoDidriksen!
2016-10-18 10:06:33	Noidea_	I will , what should I say specifically
2016-10-18 10:06:53	Noidea_	the school system is hopeless here!
2016-10-18 10:07:02	megaTherion	Noidea_: then dont learn there
2016-10-18 10:07:09	megaTherion	go abroad or learn something else
2016-10-18 10:07:17	Noidea_	I wish
2016-10-18 10:07:20	<--	Tectu (~Tectu@193.231.195.178.dynamic.wline.res.cust.swisscom.ch) has quit (Quit: Leaving)
2016-10-18 10:07:28	megaTherion	learning non-standard C++ which isnt supported anywhere isnt going to help much
2016-10-18 10:07:51	<--	Vuks (~Vuks@unaffiliated/vuks69) has quit (Ping timeout: 252 seconds)
2016-10-18 10:07:54	<--	sze (~sze@unaffiliated/sze) has quit (Ping timeout: 252 seconds)
2016-10-18 10:08:19	-->	meth (~meth@unaffiliated/meth) has joined ##c++
2016-10-18 10:08:20	Noidea_	That's why I took to arduino, it helps in developing also keeps me a bit updated, but turbo C++ and what you guys said the new one confuses me
2016-10-18 10:09:10	megaTherion	Noidea_: better learn some solid C then if they can teach that to you at least
2016-10-18 10:09:22	<--	OerHeks (~OerHeks@ubuntu/member/oerheks) has left ##c++ ("Floep")
2016-10-18 10:09:24	<--	MikeDebian (~ML@a81-84-80-8.cpe.netcabo.pt) has quit (Quit: Leaving)
2016-10-18 10:09:49	TinoDidriksen	They won't. The officially recommended curriculum is Turbo C++.
2016-10-18 10:10:04	megaTherion	then you cant learn what you learn there at all
2016-10-18 10:10:09	Noidea_	ya, how do you know that Tino?
2016-10-18 10:10:17	Noidea_	yes,mega
2016-10-18 10:10:21	<--	fedepad (~fedepad@p4FE13C0D.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-10-18 10:10:39	-->	illerucis (~illerucis@199.201.65.132) has joined ##c++
2016-10-18 10:10:40	TinoDidriksen	Noidea_, you're far from the first Indian I've tried to help. This has been a recurring nightmare for many years.
2016-10-18 10:10:55	TinoDidriksen	So I've done the research.
2016-10-18 10:11:07	Noidea_	hehe, its good to know
2016-10-18 10:11:16	-->	biglama (~Day_dream@ram31-1-82-234-77-18.fbx.proxad.net) has joined ##c++
2016-10-18 10:11:58	<--	omnipot (~Dawid@89-65-180-229.dynamic.chello.pl) has quit (Read error: Connection reset by peer)
2016-10-18 10:12:37	<--	ipronin (~ipronin@8.25.197.27) has quit (Ping timeout: 252 seconds)
2016-10-18 10:12:57	Noidea_	TinoDidriksen: you can teach me sometime,
2016-10-18 10:13:12	TinoDidriksen	Nope, I don't have time for that. See the links given.
2016-10-18 10:13:20	-->	mackal (~mike@pool-96-237-144-12.bstnma.fios.verizon.net) has joined ##c++
2016-10-18 10:13:24	Noidea_	oh okay!
2016-10-18 10:13:46	megaTherion	Noidea_: I guess nobody stops you from getting a valid book
2016-10-18 10:13:57	<--	ReverseBlade (~user@213.74.212.180) has quit (Ping timeout: 256 seconds)
2016-10-18 10:14:10	<--	pylbrecht (~pylbrecht@2a02:8109:8a40:12b4:9eff:1344:72c0:fae) has quit (Quit: Segmentation fault (core dumped))
2016-10-18 10:14:10		[10:14]
2016-10-18 10:14:37	Noidea_	yap, I agree. Can you name one, I mean only one that I can buy ,available in India
2016-10-18 10:14:46	Noidea_	yup*
2016-10-18 10:15:06	TinoDidriksen	There are plenty of free resources linked.
2016-10-18 10:15:29	Noidea_	I need a physical book
2016-10-18 10:16:07	urdh	surely this is valid c++: http://melpon.org/wandbox/permlink/PvbTrAwrgvABUdj9
2016-10-18 10:16:10	urdh	what the hell, gcc
2016-10-18 10:17:25	<--	Renari (Renari@70.44.83.23.res-cmts.bgr.ptd.net) has quit (Read error: Connection reset by peer)
2016-10-18 10:17:26	<--	scai (~scai@p4FF0FE9A.dip0.t-ipconnect.de) has left ##c++ ("[IRSSI]")
2016-10-18 10:17:39	pukapy123	is it ok to use GOTO on c++ or is a bad thing to do? :D
2016-10-18 10:18:00	megaTherion	in rare ocurrences I find goto ok, its part of the language
2016-10-18 10:18:04	TinoDidriksen	pukapy123, almost always bad. You can usually refactor for better code that doesn't use goto.
2016-10-18 10:18:04	chardan	pukapy123: It's not very useful. (In C, it's more useful.)
2016-10-18 10:18:21	-->	kaffeetrauma (~Thunderbi@85-22-37-153.ip.dokom21.de) has joined ##c++
2016-10-18 10:18:26	Noidea_	thanks,everyone for the help :-)
2016-10-18 10:18:51	<--	eraz (8dd532b1@gateway/web/cgi-irc/kiwiirc.com/ip.141.213.50.177) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-10-18 10:19:00	-->	dofidum (~dofidum@2a02:c7d:850:6700:7c2c:4210:35df:f027) has joined ##c++
2016-10-18 10:19:32	-->	nealshire (~Nealshire@unaffiliated/nealshire) has joined ##c++
2016-10-18 10:21:11	<--	Link (~Hyrule@2a02:810a:12c0:2600:9e3:c6db:6dc1:28dd) has quit (Quit: Leaving)
2016-10-18 10:21:13	<--	Adva (~Hyrule@2a02:810a:12c0:2600:9e3:c6db:6dc1:28dd) has quit (Quit: Leaving)
2016-10-18 10:21:18	-->	divno (~divno@unaffiliated/divno) has joined ##c++
2016-10-18 10:21:21	<--	Noidea_ (~NoIdea@223.231.29.213) has left ##c++ ("Leaving")
2016-10-18 10:23:49	<--	Erlkoenig (~erlkoenig@gw-2s00.inf.fh-bonn-rhein-sieg.de) has quit (Quit: Leaving.)
2016-10-18 10:24:19	-->	fedepad (~fedepad@p4FE13C0D.dip0.t-ipconnect.de) has joined ##c++
2016-10-18 10:26:28	<--	vdamewood (~vdamewood@unaffiliated/vdamewood) has quit (Quit: Life beckons.)
2016-10-18 10:26:30	<--	pukapy123 (~pukapy123@79.119.77.13) has quit (Quit: Leaving)
2016-10-18 10:26:43	<--	fahadash (uid44972@gateway/web/irccloud.com/x-iqxjstevsvcleshw) has quit (Quit: Connection closed for inactivity)
2016-10-18 10:26:46	<--	riemann (~riemann@ip-222-209.ists.pl) has quit (Quit: Leaving)
2016-10-18 10:27:09	<--	archheretic (~archheret@cm-84.213.214.158.getinternet.no) has quit (Quit: Lost terminal)
2016-10-18 10:28:34	<--	seishun (~Kakera@62.85.100.180) has quit (Ping timeout: 256 seconds)
2016-10-18 10:28:55	<--	blackbeard420 (~blackbear@dynamic-acs-24-154-171-60.zoominternet.net) has quit (Remote host closed the connection)
2016-10-18 10:30:58	<--	tarspace (~tarspace@37.130.146.83) has quit (Quit: tarspace)
2016-10-18 10:30:58		[10:30]
2016-10-18 10:31:48	<--	rendar (~rendar@host99-179-dynamic.13-79-r.retail.telecomitalia.it) has quit (Quit: Leaving)
2016-10-18 10:33:41	-->	Z3N1T (~Zenit@179.176.16.101.dynamic.adsl.gvt.net.br) has joined ##c++
2016-10-18 10:34:50	<--	jan64 (~jan64@adlh205.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 265 seconds)
2016-10-18 10:35:40	<--	redpill (~redpill@unaffiliated/redpill) has quit (Read error: Connection reset by peer)
2016-10-18 10:37:36	<--	AudaciousTUX (~manjaro-k@unaffiliated/audacioustux) has quit (Quit: Konversation terminated!)
2016-10-18 10:38:44	-->	juliy (~juliy@cable-89-16-149-45.cust.telecolumbus.net) has joined ##c++
2016-10-18 10:40:37	<--	ZeroKnight (zeroknight@dimensionzero.net) has quit (Ping timeout: 248 seconds)
2016-10-18 10:41:10	-->	drozdziak1 (~drozdziak@89-70-116-45.dynamic.chello.pl) has joined ##c++
2016-10-18 10:42:14	-->	Leovale (~Leovale@104-222-125-173.cpe.teksavvy.com) has joined ##c++
2016-10-18 10:42:19	<--	LebedevRI (~LebedevRI@unaffiliated/lebedevri) has quit (Quit: LebedevRI)
2016-10-18 10:43:18	-->	snover (~Adium@unaffiliated/snover) has joined ##c++
2016-10-18 10:43:52	-->	ZeroKnight (zeroknight@dimensionzero.net) has joined ##c++
2016-10-18 10:44:00	<--	Blue_Hat (~TwinKam20@104.238.45.47) has quit (Ping timeout: 250 seconds)
2016-10-18 10:44:38	-->	Danishman (~kvirc@62-243-156-218-static.dk.customer.tdc.net) has joined ##c++
2016-10-18 10:45:12	<--	bjz (~bjz@104.222.140.102) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-10-18 10:45:54	-->	ReverseBlade (~user@213.74.212.180) has joined ##c++
2016-10-18 10:47:24	<--	MulleDK19 (MulleDK19@unaffiliated/mulledk19) has quit (Ping timeout: 265 seconds)
2016-10-18 10:47:24		[10:47]
2016-10-18 10:50:17	-->	kilbith (4ee51c3e@gateway/web/cgi-irc/kiwiirc.com/ip.78.229.28.62) has joined ##c++
2016-10-18 10:50:18	<--	inad922 (~inad925@84-236-100-252.pool.digikabel.hu) has quit (Ping timeout: 265 seconds)
2016-10-18 10:51:43	<--	EvilPenguin (~EvilPengu@bur-inet-pa-1.disney.com) has quit (Ping timeout: 245 seconds)
2016-10-18 10:52:04	<--	wrkronmiller (~wrkronmil@nuthatch-319.dynamic.rpi.edu) has quit (Quit: Leaving)
2016-10-18 10:52:20	<--	sh00p (~sh00p@84-216-39-31.customers.ownit.se) has quit
2016-10-18 10:55:20	-->	redpill (~redpill@unaffiliated/redpill) has joined ##c++
2016-10-18 10:55:25	<--	kaffeetrauma (~Thunderbi@85-22-37-153.ip.dokom21.de) has quit (Quit: kaffeetrauma)
2016-10-18 10:56:18	<--	psychicist__ (~psychicis@ip127-8-212-87.adsl2.static.versatel.nl) has quit (Ping timeout: 252 seconds)
2016-10-18 10:56:45	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-10-18 10:56:48	-->	bjz (~bjz@104.222.140.102) has joined ##c++
2016-10-18 10:57:32	-->	vikaton (uid59278@gateway/web/irccloud.com/x-mekgolupazskdoxz) has joined ##c++
2016-10-18 10:57:46	-->	Alucards (~Thunderbi@eduD25A.kent.ac.uk) has joined ##c++
2016-10-18 10:57:46	-->	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has joined ##c++
2016-10-18 10:58:36	<--	RajRajRaj (uid72176@gateway/web/irccloud.com/x-arrlvqgkizczxrud) has quit (Quit: Connection closed for inactivity)
2016-10-18 10:59:32	<--	Spart (~Spart@176.134.152.140) has quit (Quit: Leaving)
2016-10-18 11:00:07	-->	Azusa762 (~roy@2a02:8084:26e2:a00:de85:deff:fec8:d839) has joined ##c++
2016-10-18 11:00:28	<--	skweek (~skweek@2607:fe50:0:810b:c019:46fd:9dd6:3f90) has quit (Ping timeout: 245 seconds)
2016-10-18 11:01:21	-->	Dslegend_ (~Dslegends@blk-215-99-131.eastlink.ca) has joined ##c++
2016-10-18 11:02:47	-->	skweek (~skweek@2607:fe50:0:810b:c019:46fd:9dd6:3f90) has joined ##c++
2016-10-18 11:02:47		[11:02]
2016-10-18 11:03:05	-->	xaxxon (~xaxxon@2601:602:9d00:d58b:c491:8c12:e82a:d853) has joined ##c++
2016-10-18 11:03:07	<--	GinoManWorks (~GinoMan@50-251-53-110-static.hfc.comcastbusiness.net) has quit (Quit: Leaving)
2016-10-18 11:04:00	<--	maciuszek (~maciuszek@104.245.147.11) has quit (Ping timeout: 252 seconds)
2016-10-18 11:04:00	<--	yumaokao (~yumaokao@218-161-54-18.HINET-IP.hinet.net) has quit (Ping timeout: 252 seconds)
2016-10-18 11:05:02	<--	Dslegend_ (~Dslegends@blk-215-99-131.eastlink.ca) has quit (Client Quit)
2016-10-18 11:05:15	<--	juliy (~juliy@cable-89-16-149-45.cust.telecolumbus.net) has quit (Quit: Leaving)
2016-10-18 11:06:09	<--	calincru (~calin@p22.eregie.pub.ro) has quit (Ping timeout: 252 seconds)
2016-10-18 11:06:33	<--	KAHR-Alpha (~Alpha@AReims-652-1-18-165.w90-18.abo.wanadoo.fr) has quit (Remote host closed the connection)
2016-10-18 11:07:50	<--	bjz (~bjz@104.222.140.102) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-10-18 11:09:07	-->	francis36012 (~francis@136.159.49.120) has joined ##c++
2016-10-18 11:09:30	-->	kabeero (~kabeero@unaffiliated/kabeero) has joined ##c++
2016-10-18 11:10:15	<--	kilbith (4ee51c3e@gateway/web/cgi-irc/kiwiirc.com/ip.78.229.28.62) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-10-18 11:10:25	-->	RebelCoder (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has joined ##c++
2016-10-18 11:11:00	<--	Z3N1T (~Zenit@179.176.16.101.dynamic.adsl.gvt.net.br) has quit (Ping timeout: 260 seconds)
2016-10-18 11:11:06	-->	ferdna (~ferdna@cpe-69-23-141-130.elp.res.rr.com) has joined ##c++
2016-10-18 11:11:08	-->	kenden (~dsps@85.211.209.162) has joined ##c++
2016-10-18 11:11:12	<--	purplex88 (~purplex88@unaffiliated/purplex88) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-10-18 11:12:27	<--	symm- (~symm-@86.121.114.211) has quit (Ping timeout: 250 seconds)
2016-10-18 11:12:46	<--	ReverseBlade (~user@213.74.212.180) has quit (Ping timeout: 256 seconds)
2016-10-18 11:13:17	<--	marcofe (~marcofe@31.161.52.18) has quit (Quit: Konversation terminated!)
2016-10-18 11:14:50	<--	gelignite (~gelignite@x4db53779.dyn.telefonica.de) has quit (Quit: http://bit.ly/1kso8Ta)
2016-10-18 11:15:10	<--	eip` (sid27234@gateway/web/irccloud.com/x-ysyiygpwsycllnln) has quit (Ping timeout: 256 seconds)
2016-10-18 11:15:10	<--	tjpeden (sid42254@gateway/web/irccloud.com/x-exwyqvvhdqcrfatn) has quit (Ping timeout: 256 seconds)
2016-10-18 11:15:16	<--	nolyc (~supybot@www.projectiwear.org) has quit (Remote host closed the connection)
2016-10-18 11:15:22	-->	Galik (~galik@unaffiliated/galik) has joined ##c++
2016-10-18 11:15:27	<--	tritao_ (sid143391@gateway/web/irccloud.com/x-fbvpsshtbtzpgpka) has quit (Read error: Connection reset by peer)
2016-10-18 11:15:27	<--	Alec_Wu____ (sid146390@gateway/web/irccloud.com/x-sxjakxymyslrmwtv) has quit (Read error: Connection reset by peer)
2016-10-18 11:15:29	<--	placer14 (sid86639@gateway/web/irccloud.com/x-ltnbamfeemtwxtgn) has quit (Read error: Connection reset by peer)
2016-10-18 11:15:33	-->	nolyc (~supybot@www.projectiwear.org) has joined ##c++
2016-10-18 11:15:34	-->	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has joined ##c++
2016-10-18 11:15:38	<--	szulak_ (uid162164@gateway/web/irccloud.com/x-axroahcvqzcyqkof) has quit (Read error: Connection reset by peer)
2016-10-18 11:15:42	-->	mkramer (~Adium@c-76-30-207-152.hsd1.tx.comcast.net) has joined ##c++
2016-10-18 11:16:06	-->	Alec_Wu____ (sid146390@gateway/web/irccloud.com/x-qcbxvvdxodyorkbe) has joined ##c++
2016-10-18 11:16:07	-->	tritao_ (sid143391@gateway/web/irccloud.com/x-euctqmtyibuxxcop) has joined ##c++
2016-10-18 11:16:08	-->	placer14 (sid86639@gateway/web/irccloud.com/x-ddhcchxyufcsijjs) has joined ##c++
2016-10-18 11:16:09	-->	szulak_ (uid162164@gateway/web/irccloud.com/x-hgqmozebhtrbitqm) has joined ##c++
2016-10-18 11:16:09	-->	eip` (sid27234@gateway/web/irccloud.com/x-meowvqkvfnauuylc) has joined ##c++
2016-10-18 11:16:18	<--	alem0lar- (alem0lars@0xcc.alem0lars.me) has quit (Ping timeout: 256 seconds)
2016-10-18 11:16:18	<--	Amadiro (jonathri@dalvik.ping.uio.no) has quit (Ping timeout: 256 seconds)
2016-10-18 11:16:31	-->	tjpeden (sid42254@gateway/web/irccloud.com/x-rqchbzbixqfzlgfv) has joined ##c++
2016-10-18 11:16:34	<--	dansan (~daniel@2602:304:cd72:9ed0::49) has quit (Remote host closed the connection)
2016-10-18 11:16:46	-->	Gluesticky (~nobody@unaffiliated/gluesticky) has joined ##c++
2016-10-18 11:16:47	-->	bjz (~bjz@104.222.140.102) has joined ##c++
2016-10-18 11:16:52	<--	Bloodust (~Bloodust@tinodidriksen.com) has quit (Ping timeout: 256 seconds)
2016-10-18 11:16:52	<--	Vbitz (Vbitz@2600:3c00::f03c:91ff:feae:7a98) has quit (Ping timeout: 256 seconds)
2016-10-18 11:17:01	-->	dansan (~daniel@2602:304:cd72:9ed0::49) has joined ##c++
2016-10-18 11:17:22	<--	smspillaz (smspillaz@motsugo.ucc.gu.uwa.edu.au) has quit (Ping timeout: 265 seconds)
2016-10-18 11:17:25	<--	skweek (~skweek@2607:fe50:0:810b:c019:46fd:9dd6:3f90) has quit (Ping timeout: 256 seconds)
2016-10-18 11:17:26	<--	diamaths[m] (diamathsma@gateway/shell/matrix.org/x-hognnwjxwjsdxtvo) has quit (Ping timeout: 256 seconds)
2016-10-18 11:17:26	<--	Antichrist[m] (antichrist@gateway/shell/matrix.org/x-dbqlntbvlvvsyvql) has quit (Ping timeout: 256 seconds)
2016-10-18 11:17:26	<--	Spite[m] (spitematri@gateway/shell/matrix.org/x-pwtvvaiknooupghm) has quit (Ping timeout: 256 seconds)
2016-10-18 11:17:26	<--	kikijiki[m] (kikijikima@gateway/shell/matrix.org/x-dyxbanenuorblvcz) has quit (Ping timeout: 256 seconds)
2016-10-18 11:17:27	<--	disgusting[m] (disgusting@gateway/shell/matrix.org/x-axkttdgwcgeksedp) has quit (Ping timeout: 256 seconds)
2016-10-18 11:17:29	<--	drozdziak1 (~drozdziak@89-70-116-45.dynamic.chello.pl) has quit (Quit: WeeChat 1.6)
2016-10-18 11:17:49	<--	bumbar_ (~bumbar@unaffiliated/bumbar) has quit (Quit: Leaving)
2016-10-18 11:17:49		[11:17]
2016-10-18 11:18:00	<--	Furkiepurkie (~Furkie@2001:1af8:4700:a03c:7::) has quit (Ping timeout: 256 seconds)
2016-10-18 11:18:00	<--	aviraldg (aviraldgma@gateway/shell/matrix.org/x-vwofolrptknmwfwo) has quit (Ping timeout: 256 seconds)
2016-10-18 11:18:00	<--	taylor2 (~taylor@www.axfive.net) has quit (Ping timeout: 256 seconds)
2016-10-18 11:18:00	<--	felixsch (~felixsch@unaffiliated/felixsch) has quit (Ping timeout: 256 seconds)
2016-10-18 11:18:00	<--	de-vri-es (~maarten@irc.de-vri.es) has quit (Ping timeout: 256 seconds)
2016-10-18 11:18:00	<--	lecx (lex@yuuh.pw) has quit (Ping timeout: 256 seconds)
2016-10-18 11:18:21	-->	araml (~araml@unaffiliated/araml) has joined ##c++
2016-10-18 11:18:21	-->	code_zombie (~code_zomb@136.63.230.43) has joined ##c++
2016-10-18 11:18:26	<--	xarxer (~xarxer@90-230-93-77-no148.tbcn.telia.com) has quit (Quit: Leaving)
2016-10-18 11:18:41	<--	dansan (~daniel@2602:304:cd72:9ed0::49) has quit (Excess Flood)
2016-10-18 11:19:36	-->	dansan (~daniel@2602:304:cd72:9ed0::49) has joined ##c++
2016-10-18 11:19:51	-->	lecx (lex@yuuh.pw) has joined ##c++
2016-10-18 11:19:55	-->	de-vri-es (~maarten@irc.de-vri.es) has joined ##c++
2016-10-18 11:19:58	<--	avalchev (uid190868@gateway/web/irccloud.com/x-koiaqiqlojtczfqo) has quit (Quit: Connection closed for inactivity)
2016-10-18 11:20:06	-->	Furkiepurkie (~Furkie@2001:1af8:4700:a03c:7::) has joined ##c++
2016-10-18 11:20:08	-->	diamaths[m] (diamathsma@gateway/shell/matrix.org/x-ulcjkfhwyradnyrj) has joined ##c++
2016-10-18 11:20:16	-->	mithsv (~mithsv@144-197-128-083.dynamic.caiway.nl) has joined ##c++
2016-10-18 11:20:16	-->	taylor2 (~taylor@www.axfive.net) has joined ##c++
2016-10-18 11:20:17	-->	felixsch (~felixsch@unaffiliated/felixsch) has joined ##c++
2016-10-18 11:20:18	-->	skweek (~skweek@2607:fe50:0:810b:c019:46fd:9dd6:3f90) has joined ##c++
2016-10-18 11:20:38	-->	Vbitz (Vbitz@2600:3c00::f03c:91ff:feae:7a98) has joined ##c++
2016-10-18 11:21:04	<--	szulak_ (uid162164@gateway/web/irccloud.com/x-hgqmozebhtrbitqm) has quit (Quit: Connection closed for inactivity)
2016-10-18 11:21:05	<--	zagabar (~zagabar@unaffiliated/zagabar) has quit (Quit: WeeChat 1.5)
2016-10-18 11:21:12	-->	Antichrist[m] (antichrist@gateway/shell/matrix.org/x-irkkhbejaikwegyb) has joined ##c++
2016-10-18 11:21:14	<--	dofidum (~dofidum@2a02:c7d:850:6700:7c2c:4210:35df:f027) has quit (Remote host closed the connection)
2016-10-18 11:21:14	-->	Spite[m] (spitematri@gateway/shell/matrix.org/x-ljuiyyvmeimqadrt) has joined ##c++
2016-10-18 11:21:14	-->	aviraldg (aviraldgma@gateway/shell/matrix.org/x-jcdyvoacdaiwmlhq) has joined ##c++
2016-10-18 11:21:44	<--	ghostlight (~ghostligh@ec2-54-187-97-144.us-west-2.compute.amazonaws.com) has quit (Ping timeout: 260 seconds)
2016-10-18 11:21:48	<--	irrenhaus3 (~xenon@HSI-KBW-046-005-253-025.hsi8.kabel-badenwuerttemberg.de) has quit (Quit: Lost terminal)
2016-10-18 11:22:03	-->	Bloodust (~Bloodust@tinodidriksen.com) has joined ##c++
2016-10-18 11:22:09	-->	kikijiki[m] (kikijikima@gateway/shell/matrix.org/x-hqkddahetjgbyfpy) has joined ##c++
2016-10-18 11:22:35	-->	disgusting[m] (disgusting@gateway/shell/matrix.org/x-fltwatalevjctrga) has joined ##c++
2016-10-18 11:22:41	<--	Sonderblade (~Sonderbla@h-52-183.a157.priv.bahnhof.se) has quit (Remote host closed the connection)
2016-10-18 11:22:49	-->	alem0lars (alem0lars@0xcc.alem0lars.me) has joined ##c++
2016-10-18 11:23:07	-->	EvilPenguin (~EvilPengu@bur-inet-pa-1.disney.com) has joined ##c++
2016-10-18 11:23:39	<--	prehensileNipple (~nooblet@124.197.62.6) has quit (Ping timeout: 256 seconds)
2016-10-18 11:24:10	-->	Amadiro (jonathri@dalvik.ping.uio.no) has joined ##c++
2016-10-18 11:24:17	-->	systemfault (~rcyr@unaffiliated/rcyr) has joined ##c++
2016-10-18 11:24:46	<--	Oipo (~Oipo@46.166.138.140) has quit (Quit: Leaving)
2016-10-18 11:24:53	-->	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has joined ##c++
2016-10-18 11:25:34	<--	coffee` (~coffee@169.ip-176-31-165.eu) has quit (Quit: WeeChat 1.5)
2016-10-18 11:26:35	<--	noidea (~noidea@unaffiliated/no-idea/x-0944443) has quit (Read error: Connection reset by peer)
2016-10-18 11:28:03	<--	RebelCoder (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has quit (Ping timeout: 250 seconds)
2016-10-18 11:28:27	<--	pmercado (~pmercado@186-104-245-4.baf.movistar.cl) has quit (Quit: Konversation terminated!)
2016-10-18 11:29:32	-->	ghostlight (~ghostligh@ec2-54-187-97-144.us-west-2.compute.amazonaws.com) has joined ##c++
2016-10-18 11:31:34	-->	ipronin (~ipronin@8.25.197.27) has joined ##c++
2016-10-18 11:31:35	-->	yumaokao (~yumaokao@218-161-54-18.HINET-IP.hinet.net) has joined ##c++
2016-10-18 11:33:22	<--	brwsr (~textual@2a02:c7d:b326:4700:60e8:3b1b:8945:8a69) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-10-18 11:33:22		[11:33]
2016-10-18 11:34:34	-->	voidah (~voidah@unaffiliated/voider) has joined ##c++
2016-10-18 11:36:06	-->	coffee` (~coffee@169.ip-176-31-165.eu) has joined ##c++
2016-10-18 11:37:01	-->	mandeep (~mandeep@108.61.226.21) has joined ##c++
2016-10-18 11:37:29	<--	bjz (~bjz@104.222.140.102) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-10-18 11:37:31	-->	afiefh (~afiefh@5.102.242.233) has joined ##c++
2016-10-18 11:38:00	<--	Fischmiep (~Fischmiep@46-59-255-37.lsn6.wtnet.de) has quit (Ping timeout: 260 seconds)
2016-10-18 11:38:20	<--	metachr0n (~nobody@109.201.154.250) has quit (Quit: WeeChat 1.5)
2016-10-18 11:38:28	<--	corsaere (~corsaere@unaffiliated/corsaere) has quit (Ping timeout: 260 seconds)
2016-10-18 11:39:23	<--	KaiserAres (~KaiserAre@unaffiliated/kaiserares) has quit (Quit: ..)
2016-10-18 11:40:28	<--	dminuoso_ (~dminuoso@unaffiliated/dminuoso) has quit (Ping timeout: 245 seconds)
2016-10-18 11:40:35	-->	samik_ (~smukherje@netops-105.sfo1.bitgravity.com) has joined ##c++
2016-10-18 11:40:57	<--	mkramer (~Adium@c-76-30-207-152.hsd1.tx.comcast.net) has quit (Quit: Leaving.)
2016-10-18 11:41:44	<--	samik (~smukherje@netops-100.sfo1.bitgravity.com) has quit (Ping timeout: 260 seconds)
2016-10-18 11:42:23	<--	de-facto (~de-facto@gateway/tor-sasl/de-facto) has quit (Remote host closed the connection)
2016-10-18 11:43:04	-->	de-facto (~de-facto@gateway/tor-sasl/de-facto) has joined ##c++
2016-10-18 11:43:32	<--	Freze (~Freze@c-73-167-60-180.hsd1.ma.comcast.net) has quit (Quit: Leaving)
2016-10-18 11:45:13	-->	ReverseBlade (~user@213.74.212.180) has joined ##c++
2016-10-18 11:45:45	<--	ferdna (~ferdna@cpe-69-23-141-130.elp.res.rr.com) has quit (Ping timeout: 256 seconds)
2016-10-18 11:45:53	<--	shaggycat (~quassel@95-37-215-204.dynamic.mts-nn.ru) has quit (Ping timeout: 265 seconds)
2016-10-18 11:46:41	<--	Azusa762 (~roy@2a02:8084:26e2:a00:de85:deff:fec8:d839) has quit (Ping timeout: 250 seconds)
2016-10-18 11:46:56	<--	all_my_watts (~all_my_wa@80-110-115-188.cgn.dynamic.surfer.at) has quit (Ping timeout: 260 seconds)
2016-10-18 11:47:04	-->	leeter (~leeter@unaffiliated/leeter) has joined ##c++
2016-10-18 11:47:07	meth	https://channel9.msdn.com/Shows/C9-GoingNative/Bjarne-Stroustrup-Interview-atcppcon-2016
2016-10-18 11:48:23	<--	skweek (~skweek@2607:fe50:0:810b:c019:46fd:9dd6:3f90) has quit (Ping timeout: 245 seconds)
2016-10-18 11:48:23		[11:48]
2016-10-18 11:48:54	-->	julian_ (~julian@194-166-166-146.adsl.highway.telekom.at) has joined ##c++
2016-10-18 11:50:24	-->	skweek (~skweek@2607:fe50:0:810b:c019:46fd:9dd6:3f90) has joined ##c++
2016-10-18 11:51:21	<--	Furkiepurkie (~Furkie@2001:1af8:4700:a03c:7::) has quit (Quit: Furkiepurkie)
2016-10-18 11:51:32	<--	biberu (~biberu@c-cf2d72d5.08-441-7570702.cust.bredbandsbolaget.se) has quit
2016-10-18 11:52:04	<--	biglama (~Day_dream@ram31-1-82-234-77-18.fbx.proxad.net) has quit (Quit: Lost terminal)
2016-10-18 11:52:13	-->	sn1c (~sn1c@xdsl-89-0-121-81.netcologne.de) has joined ##c++
2016-10-18 11:53:00	<--	chindy (~julian@213-240-80-10.adsl.highway.telekom.at) has quit (Ping timeout: 260 seconds)
2016-10-18 11:55:16	-->	manjaro-kde5_ (~manjaro-k@146.155.117.114) has joined ##c++
2016-10-18 11:56:12	-->	degva (~degva@190.232.18.40) has joined ##c++
2016-10-18 11:56:44	<--	aricz (~aricz@129.241.132.19) has quit (Quit: leaving)
2016-10-18 11:57:37	-->	Renari (~Renari@70.44.83.23.res-cmts.bgr.ptd.net) has joined ##c++
2016-10-18 11:58:24	-->	ferdna (~ferdna@cpe-69-23-141-130.elp.res.rr.com) has joined ##c++
2016-10-18 11:58:27	<--	Kirrahe (~kirrahe@ip51cc4257.adsl-surfen.hetnet.nl) has quit (Ping timeout: 252 seconds)
2016-10-18 11:59:15	-->	serycjon (~jonas@20.53.broadband14.iol.cz) has joined ##c++
2016-10-18 11:59:35	-->	mkramer (~Adium@c-76-30-207-152.hsd1.tx.comcast.net) has joined ##c++
2016-10-18 12:00:36	-->	fenxy (~fenxy@unaffiliated/fenxy) has joined ##c++
2016-10-18 12:00:45	<--	illerucis (~illerucis@199.201.65.132) has quit (Remote host closed the connection)
2016-10-18 12:01:25	<--	serycjon (~jonas@20.53.broadband14.iol.cz) has quit (Client Quit)
2016-10-18 12:01:39	-->	serycjon (~jonas@20.53.broadband14.iol.cz) has joined ##c++
2016-10-18 12:02:14	-->	kbdkode (~kbdkode@unaffiliated/kbdkode) has joined ##c++
2016-10-18 12:02:23	<--	manjaro-kde5_ (~manjaro-k@146.155.117.114) has quit (Quit: Konversation terminated!)
2016-10-18 12:04:21	<--	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has quit (Ping timeout: 244 seconds)
2016-10-18 12:04:21		[12:04]
2016-10-18 12:05:49	<--	kenden (~dsps@85.211.209.162) has quit (Quit: My computer has gone to sleep. ZZZzzz…)
2016-10-18 12:06:32	-->	kenden (~dsps@85.211.209.162) has joined ##c++
2016-10-18 12:06:34	<--	kenden (~dsps@85.211.209.162) has quit (Client Quit)
2016-10-18 12:08:39	thinlizzy	meth, in other words: "please try concepTS"
2016-10-18 12:08:44	-->	kenden (~dsps@85.211.209.162) has joined ##c++
2016-10-18 12:08:58	<--	kenden (~dsps@85.211.209.162) has quit (Client Quit)
2016-10-18 12:09:03	<--	julian_ (~julian@194-166-166-146.adsl.highway.telekom.at) has quit (Remote host closed the connection)
2016-10-18 12:09:07	-->	KAHR-Alpha (~Alpha@AReims-652-1-18-165.w90-18.abo.wanadoo.fr) has joined ##c++
2016-10-18 12:11:06	<--	sssilver (~sssilver@38.122.48.218) has quit (Ping timeout: 250 seconds)
2016-10-18 12:11:44	-->	hatter (~hatter@213.80.106.150) has joined ##c++
2016-10-18 12:13:24	<--	ReverseBlade (~user@213.74.212.180) has quit (Ping timeout: 256 seconds)
2016-10-18 12:14:13	<--	damme (~damme@2001:16d8:cc75::802) has quit (Ping timeout: 245 seconds)
2016-10-18 12:14:17	<--	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has quit (Ping timeout: 260 seconds)
2016-10-18 12:14:54	--	Mercury_ is now known as Mercury
2016-10-18 12:16:21	<--	chardan (~chardan@c-24-21-137-22.hsd1.or.comcast.net) has quit (Ping timeout: 256 seconds)
2016-10-18 12:17:42	<--	mkramer (~Adium@c-76-30-207-152.hsd1.tx.comcast.net) has quit (Quit: Leaving.)
2016-10-18 12:20:13	-->	nijoakim (~nijoakim@c-94-255-233-169.cust.bredband2.com) has joined ##c++
2016-10-18 12:20:13		[12:20]
2016-10-18 12:20:18	<--	nijoakim (~nijoakim@c-94-255-233-169.cust.bredband2.com) has left ##c++
2016-10-18 12:21:33	<--	sn1c (~sn1c@xdsl-89-0-121-81.netcologne.de) has quit (Quit: sn1c)
2016-10-18 12:23:13	-->	justanotheruser (~justanoth@unaffiliated/justanotheruser) has joined ##c++
2016-10-18 12:26:21	-->	zero_byte (~zer0@ip-89-103-110-138.net.upcbroadband.cz) has joined ##c++
2016-10-18 12:27:00	<--	kabeero (~kabeero@unaffiliated/kabeero) has quit (Ping timeout: 260 seconds)
2016-10-18 12:27:21	<--	PlasmaHH_ (~kvirc@2001:6f8:1293:1:757c:edcc:b8c4:b402) has quit (Ping timeout: 260 seconds)
2016-10-18 12:30:00	<--	tadaa (~tadaaa@nat-wh-wz4-12.rz.uni-karlsruhe.de) has quit
2016-10-18 12:30:18	-->	tyn (~tyn@2607:fea8:e920:463::4) has joined ##c++
2016-10-18 12:31:31	-->	Karyon (~yaaic@unaffiliated/karyon) has joined ##c++
2016-10-18 12:32:50	-->	oxygene (~fred@ALille-652-1-90-160.w2-5.abo.wanadoo.fr) has joined ##c++
2016-10-18 12:33:29	<--	oxygene (~fred@ALille-652-1-90-160.w2-5.abo.wanadoo.fr) has quit (Read error: Connection reset by peer)
2016-10-18 12:33:54	<--	JoshS (~jshjsh@172.56.17.91) has quit (Quit: Leaving)
2016-10-18 12:35:03	<--	kasper^ (~safaf@82.137.12.17) has quit (Ping timeout: 256 seconds)
2016-10-18 12:37:48	-->	ReverseBlade (~user@213.74.212.180) has joined ##c++
2016-10-18 12:37:48		[12:37]
2016-10-18 12:39:07	<--	orbiter (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has quit (Read error: Connection reset by peer)
2016-10-18 12:40:09	-->	glenfe (~glen@unaffiliated/glenfe) has joined ##c++
2016-10-18 12:41:32	-->	logan_e__ (uid164592@gateway/web/irccloud.com/x-nhwjwdjbyexjrzaq) has joined ##c++
2016-10-18 12:42:21	-->	anuxivm (~anuxi@92.185.154.236) has joined ##c++
2016-10-18 12:42:44	<--	afiefh (~afiefh@5.102.242.233) has quit (Ping timeout: 250 seconds)
2016-10-18 12:43:53	-->	rorro (~rorro@176.10.248.232) has joined ##c++
2016-10-18 12:43:55	<--	King_Hual (~failed@unaffiliated/king-hual/x-1207580) has quit (Read error: Connection reset by peer)
2016-10-18 12:44:00	<--	MrDoctor (~anirban@unaffiliated/apostasy) has quit (Ping timeout: 256 seconds)
2016-10-18 12:44:41	<--	ReverseBlade (~user@213.74.212.180) has quit (Ping timeout: 256 seconds)
2016-10-18 12:45:36	<--	TomyLobo (~TomyLobo@2a02:8109:87c0:20c:cd1a:e561:1f2c:699b) has quit (Ping timeout: 250 seconds)
2016-10-18 12:46:25	w3z	!interview
2016-10-18 12:46:26	nolyc	Did you know that before the lifetime of the reference has started or after it has ended, the behavior is undefined (see [basic.life])?
2016-10-18 12:48:28	xaxxon	yes.  now give me a job
2016-10-18 12:50:03	<--	drazil (~drazil@108.61.99.238) has quit (Ping timeout: 245 seconds)
2016-10-18 12:50:18	<--	fedepad (~fedepad@p4FE13C0D.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-10-18 12:50:48	<--	EvilPenguin (~EvilPengu@bur-inet-pa-1.disney.com) has quit (Ping timeout: 256 seconds)
2016-10-18 12:52:31	xaxxon	that command should really be renamed !trivia
2016-10-18 12:52:32	xaxxon	!trivia
2016-10-18 12:52:34	nolyc	The defaulted move and copy constructor of tuple<> shall be constexpr functions.
2016-10-18 12:53:18	V-ille	so unless I don't have a reference in my program, the behavior is undefined
2016-10-18 12:53:18		[12:53]
2016-10-18 12:53:31	V-ille	or rather unless I have
2016-10-18 12:53:33	<--	^v (pixel@me.pxtst.com) has quit (Quit: ZNC - http://znc.in)
2016-10-18 12:53:43	w3z	{} int& f(int& r,int& i){cout<<r; return i;} int i=42; int& r=f(r,i); //ub before the lifetime has started ...whats an example of after its lifetime has ended ...
2016-10-18 12:53:44	geordi	error: load of null pointer of type 'int'
2016-10-18 12:54:00	w3z	i guess it could be a member reference ...
2016-10-18 12:54:00	V-ille	and it's that particular reference, "the reference" that decides whether the behavior is undefined
2016-10-18 12:54:10	V-ille	all bugs can be fixed by finding that one reference
2016-10-18 12:54:12	V-ille	or adding it
2016-10-18 12:54:17	-->	^v (pixel@me.pxtst.com) has joined ##c++
2016-10-18 12:54:25	w3z	the god reference
2016-10-18 12:54:42	w3z	heh i sa a new blurb about the higgs bison today
2016-10-18 12:54:44	V-ille	oh, there's a very good example of an after-lifetime case
2016-10-18 12:54:46	w3z	saw
2016-10-18 12:54:55	V-ille	int& f() {int x; return x;}
2016-10-18 12:54:55	w3z	news
2016-10-18 12:55:00	<--	Acs (~Acs@host81-152-189-71.range81-152.btcentralplus.com) has quit (Ping timeout: 260 seconds)
2016-10-18 12:55:21	V-ille	higgs bison.. I think they searched for that at fermilab
2016-10-18 12:55:59	-->	chardan (~chardan@c-73-67-226-174.hsd1.or.comcast.net) has joined ##c++
2016-10-18 12:56:12	<--	iwakura (~Shino@user-31-174-209-151.play-internet.pl) has quit (Quit: Leaving)
2016-10-18 12:56:13	V-ille	https://www.fnal.gov/ecology/wildlife/site/bison_field.shtml
2016-10-18 12:58:08	w3z	weird coincidence or physicist joke ... i mean the bison was likely named earlier, but the proponent of the higgs boson was named higgs
2016-10-18 12:58:52	<--	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has quit (Ping timeout: 256 seconds)
2016-10-18 12:59:47	w3z	btw i dont think your example of past end of life of the local captures the lifetime of a reference blurb
2016-10-18 12:59:51	<--	Aquazi (~Aquazi@host65-199-dynamic.32-79-r.retail.telecomitalia.it) has quit (Quit: Leaving)
2016-10-18 13:00:09	<--	hatter (~hatter@213.80.106.150) has quit (Ping timeout: 244 seconds)
2016-10-18 13:00:43	w3z	the way i read it was use of a reference after its lifetime had ended, not binding a reference to an object whos lifetime has ended
2016-10-18 13:00:47	w3z	anyway
2016-10-18 13:02:37	-->	ReverseBlade (~user@213.74.212.180) has joined ##c++
2016-10-18 13:03:23	<--	skweek (~skweek@2607:fe50:0:810b:c019:46fd:9dd6:3f90) has quit (Ping timeout: 256 seconds)
2016-10-18 13:08:15	-->	Z3N1T (~Zenit@179.176.16.101.dynamic.adsl.gvt.net.br) has joined ##c++
2016-10-18 13:08:53	<--	ambro718 (~ambro@unaffiliated/ambro718) has quit (Ping timeout: 260 seconds)
2016-10-18 13:08:53		[13:08]
2016-10-18 13:09:16	<--	blackwolf (~blackwolf@ool-44c27f1f.dyn.optonline.net) has quit (Quit: ERC (IRC client for Emacs 24.5.1))
2016-10-18 13:12:18	<--	Karyon (~yaaic@unaffiliated/karyon) has quit (Remote host closed the connection)
2016-10-18 13:13:54	-->	PhyloGenesis (~PhyloGene@2601:602:8700:979d:84fc:8059:bc33:4dd0) has joined ##c++
2016-10-18 13:15:39	--	jinglebellz is now known as thomas
2016-10-18 13:16:10	<--	UnlikeSuika (~UnlikeSui@115.93.122.107) has quit (Ping timeout: 244 seconds)
2016-10-18 13:18:34	<--	ReverseBlade (~user@213.74.212.180) has quit (Ping timeout: 256 seconds)
2016-10-18 13:21:24	<--	a3Dman (~3Dman@unaffiliated/a3dman) has quit (Ping timeout: 256 seconds)
2016-10-18 13:22:00	<--	AustinMatherne (~AustinMat@li1047-129.members.linode.com) has quit (Remote host closed the connection)
2016-10-18 13:23:08	-->	AustinMatherne (~AustinMat@li1047-129.members.linode.com) has joined ##c++
2016-10-18 13:23:25	<--	Neomex (~Neomex@bqu61.neoplus.adsl.tpnet.pl) has quit (Quit: Leaving)
2016-10-18 13:24:22	-->	a3Dman (~3Dman@unaffiliated/a3dman) has joined ##c++
2016-10-18 13:24:22		[13:24]
2016-10-18 13:24:43	<--	bedah (~bedah@dyndsl-037-138-116-201.ewe-ip-backbone.de) has quit (Quit: quitten)
2016-10-18 13:25:03	-->	EvilPenguin (~EvilPengu@bur-inet-pa-1.disney.com) has joined ##c++
2016-10-18 13:27:17	-->	Karyon (~yaaic@unaffiliated/karyon) has joined ##c++
2016-10-18 13:28:39	<--	tc2keats (~tc2keats@gateway/tor-sasl/tc2keats) has quit (Remote host closed the connection)
2016-10-18 13:30:35	-->	verm1n (~verm1n@209-6-236-59.c3-0.wrx-ubr1.sbo-wrx.ma.cable.rcn.com) has joined ##c++
2016-10-18 13:32:51	<--	disgrntld (~levi@12.201.194.50) has quit (Quit: Leaving.)
2016-10-18 13:33:34	<--	k4rtik (~k4rtik@unaffiliated/k4rtik) has quit (Quit: Leaving)
2016-10-18 13:33:35	-->	pdtpatrick (~Patrick@199.201.64.139) has joined ##c++
2016-10-18 13:35:13	-->	josef_k (~Jeremy@210-10-222-98.mel.static-ipl.aapt.com.au) has joined ##c++
2016-10-18 13:36:41	<--	voidah (~voidah@unaffiliated/voider) has quit (Remote host closed the connection)
2016-10-18 13:36:43	-->	roko (d193902e@gateway/web/freenode/ip.209.147.144.46) has joined ##c++
2016-10-18 13:37:17	<--	justanotheruser (~justanoth@unaffiliated/justanotheruser) has quit (Quit: WeeChat 1.4)
2016-10-18 13:37:30	-->	Haruno (~Haruno@unaffiliated/haruno) has joined ##c++
2016-10-18 13:37:43	<--	samik_ (~smukherje@netops-105.sfo1.bitgravity.com) has quit (Quit: samik_)
2016-10-18 13:38:04	-->	k4rtik (~k4rtik@unaffiliated/k4rtik) has joined ##c++
2016-10-18 13:38:05	roko	My project for a particular input runs fine on my development machine but on the server it crashes with double fre or corrupt memory error? Any pointers as to how can I debug this
2016-10-18 13:38:12	<--	rebb (~rebb3@p54B81CBA.dip0.t-ipconnect.de) has quit (Quit: Pong timeout)
2016-10-18 13:38:46	baudejogos	!give roko general
2016-10-18 13:38:47	nolyc	roko: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2016-10-18 13:39:11	-->	nine_milli (~nine_mill@32.211.52.104) has joined ##c++
2016-10-18 13:40:17	nine_milli	Hi everyone my name is Brian Leroy Brice, my friends call me blb . If you’re looking for a good time call me @ 1-210-300-2559
2016-10-18 13:40:17		[13:40]
2016-10-18 13:40:36	pepper_chico	owkay
2016-10-18 13:40:41	baudejogos	oh yeah
2016-10-18 13:40:48	baudejogos	nine_milli: please tell me more about this good time?
2016-10-18 13:40:48	<--	a3Dman (~3Dman@unaffiliated/a3dman) has quit (Ping timeout: 250 seconds)
2016-10-18 13:41:06	<--	tyn (~tyn@2607:fea8:e920:463::4) has quit (Quit: Leaving)
2016-10-18 13:42:20	baudejogos	nine_milli: are u lying to us?
2016-10-18 13:42:45	<--	nine_milli (~nine_mill@32.211.52.104) has left ##c++
2016-10-18 13:42:56	<--	serycjon (~jonas@20.53.broadband14.iol.cz) has quit (Ping timeout: 256 seconds)
2016-10-18 13:43:32	<--	anuxivm (~anuxi@92.185.154.236) has left ##c++
2016-10-18 13:44:49	<--	Betal (~Betal@unaffiliated/betal) has quit (Disconnected by services)
2016-10-18 13:44:54	<--	JDevlieghere_ (~JDevliegh@jonasdevlieghere.com) has quit (Quit: ZNC - Running on jonasdevlieghere.com)
2016-10-18 13:44:58	-->	Betal (~Betal@unaffiliated/betal) has joined ##c++
2016-10-18 13:45:02	-->	Lowl3v3l (~Lowl3v3l@dslb-088-075-000-014.088.075.pools.vodafone-ip.de) has joined ##c++
2016-10-18 13:45:33	<--	phinxy (~tehhhd@unaffiliated/phinxy) has quit (Read error: Connection reset by peer)
2016-10-18 13:47:35	pepper_chico	lier
2016-10-18 13:47:48	pepper_chico	s/lier/liar/
2016-10-18 13:48:10	-->	Stimpy (~Stimpy@546B9624.cm-12-4c.dynamic.ziggo.nl) has joined ##c++
2016-10-18 13:49:05	<--	Betal (~Betal@unaffiliated/betal) has quit (Remote host closed the connection)
2016-10-18 13:49:06	m_ben	I have a (variadic) function compose(F1&& f1, F2&& f2) that returns f1(f2(xs...)) in a lambda. why is it wrong to capture f1 and f2 by reference? I'm getting a segfault: http://melpon.org/wandbox/permlink/nMypoVl1LhzHW3fj
2016-10-18 13:49:21	-->	Betal (~Betal@unaffiliated/betal) has joined ##c++
2016-10-18 13:50:14	-->	rosten (~rosten@cpe-45-48-9-161.socal.res.rr.com) has joined ##c++
2016-10-18 13:50:41	<--	Tobbi (~Tobbi@supertux/tobbi) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-10-18 13:51:18	<--	kimundi (~Kimundi@p57BC7024.dip0.t-ipconnect.de) has quit (Ping timeout: 244 seconds)
2016-10-18 13:51:31	-->	ReverseBlade (~user@213.74.212.180) has joined ##c++
2016-10-18 13:54:48	-->	hemz (8ed9c5d4@gateway/web/cgi-irc/kiwiirc.com/ip.142.217.197.212) has joined ##c++
2016-10-18 13:55:30	-->	prehensileNipple (~nooblet@124.197.62.6) has joined ##c++
2016-10-18 13:55:30		[13:55]
2016-10-18 13:56:03	<--	prehensileNipple (~nooblet@124.197.62.6) has quit (Client Quit)
2016-10-18 13:57:14	<--	rbern (~rbern@unaffiliated/rbern) has quit (Read error: Connection reset by peer)
2016-10-18 13:57:21	-->	a3Dman (~3Dman@unaffiliated/a3dman) has joined ##c++
2016-10-18 13:57:50	<--	Brklyn (~truthbk@38.122.226.210) has quit (Ping timeout: 265 seconds)
2016-10-18 13:57:53	<--	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has quit (Quit: Leaving.)
2016-10-18 13:58:32	<--	francis36012 (~francis@136.159.49.120) has quit (Ping timeout: 260 seconds)
2016-10-18 14:00:03	<--	EvilPenguin (~EvilPengu@bur-inet-pa-1.disney.com) has quit (Ping timeout: 245 seconds)
2016-10-18 14:02:00	-->	onetwothree123 (~Mutter@c-71-238-12-243.hsd1.wa.comcast.net) has joined ##c++
2016-10-18 14:02:09	-->	iterati1 (~vangelis@79.103.254.36.dsl.dyn.forthnet.gr) has joined ##c++
2016-10-18 14:02:22	-->	francis36012 (~francis@136.159.49.120) has joined ##c++
2016-10-18 14:02:54	<--	iterati (~vangelis@46.12.185.49.dsl.dyn.forthnet.gr) has quit (Ping timeout: 250 seconds)
2016-10-18 14:03:20	-->	EvilPenguin (~EvilPengu@bur-inet-pa-1.disney.com) has joined ##c++
2016-10-18 14:04:51	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit
2016-10-18 14:06:03	<--	onetwothree123 (~Mutter@c-71-238-12-243.hsd1.wa.comcast.net) has quit (Remote host closed the connection)
2016-10-18 14:06:03	<--	chardan (~chardan@c-73-67-226-174.hsd1.or.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-18 14:06:33	-->	Arlen0 (~Arlen0@38-103-219-200.alamobb.net) has joined ##c++
2016-10-18 14:06:42	<--	Arlen0 (~Arlen0@38-103-219-200.alamobb.net) has quit (Remote host closed the connection)
2016-10-18 14:06:57	<--	kolobyte (~aaa@unaffiliated/kolobyte) has quit (Ping timeout: 260 seconds)
2016-10-18 14:08:09	-->	mentoc (~wmerfalen@unaffiliated/mentoc) has joined ##c++
2016-10-18 14:08:16	-->	zwliew (uid161395@gateway/web/irccloud.com/x-spltjpvbxqqwgdpz) has joined ##c++
2016-10-18 14:08:42	-->	rbern (~rbern@unaffiliated/rbern) has joined ##c++
2016-10-18 14:10:05	<--	mentoc (~wmerfalen@unaffiliated/mentoc) has quit (Read error: Connection reset by peer)
2016-10-18 14:12:31	<--	ReverseBlade (~user@213.74.212.180) has quit (Ping timeout: 256 seconds)
2016-10-18 14:12:31		[14:12]
2016-10-18 14:15:50	-->	Brklyn (~truthbk@38.122.226.210) has joined ##c++
2016-10-18 14:18:02	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-18 14:19:10	-->	hurtletad (~filtered@5CEC365.rev.sefiber.dk) has joined ##c++
2016-10-18 14:20:03	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-18 14:20:18	-->	kolobyte (~aaa@unaffiliated/kolobyte) has joined ##c++
2016-10-18 14:22:28	w3z	because youre capturing a reference by reference ...
2016-10-18 14:22:33	<--	Alucards (~Thunderbi@eduD25A.kent.ac.uk) has quit (Ping timeout: 252 seconds)
2016-10-18 14:22:59	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-18 14:23:13	<--	xaxxon (~xaxxon@2601:602:9d00:d58b:c491:8c12:e82a:d853) has quit (Quit: Leaving)
2016-10-18 14:23:57	-->	samik (~smukherje@netops-105.sfo1.bitgravity.com) has joined ##c++
2016-10-18 14:25:01	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-18 14:25:12	pepper_chico	building up objects (lambdas) upon dead refs (ref arguments)
2016-10-18 14:26:05	<--	davidstone (~davidston@184-96-182-164.hlrn.qwest.net) has quit (Quit: Leaving)
2016-10-18 14:27:29	<--	hemz (8ed9c5d4@gateway/web/cgi-irc/kiwiirc.com/ip.142.217.197.212) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-10-18 14:27:44	w3z	it doesnt look like the objects being referenced have expired though ...hmm
2016-10-18 14:27:44		[14:27]
2016-10-18 14:28:00	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-18 14:28:15	<--	peeps (~peepsalot@cpe-173-174-74-169.austin.res.rr.com) has quit (Quit: Leaving)
2016-10-18 14:28:27	<--	Markow (~Markow@176.122.215.103) has quit (Remote host closed the connection)
2016-10-18 14:29:19	pepper_chico	yeah...
2016-10-18 14:29:39	pepper_chico	that's what I was trying to figure out as well
2016-10-18 14:29:48	<--	Brklyn (~truthbk@38.122.226.210) has quit (Ping timeout: 260 seconds)
2016-10-18 14:30:00	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-18 14:30:03	pepper_chico	but I guess that's like pushing "end-of-expression" too much
2016-10-18 14:30:43	<--	pdtpatrick (~Patrick@199.201.64.139) has quit (Remote host closed the connection)
2016-10-18 14:31:00	pepper_chico	I'm suspecting the inner subexpressions (building up lambda objects) are already end-of-expressions
2016-10-18 14:31:00	w3z	oh this guy has [](auto x){ return 100*x; }
2016-10-18 14:31:13	roko	So i get a corrupt memory error if i compile my program with g++-4.8 but not when I compile it with g++-5.4. Any idea what may be going wrong?
2016-10-18 14:31:43	<--	Gustavo6046 (~Gustavo60@unaffiliated/gustavo6046) has quit (Quit: *rooonc* *yawn* *accidentally dropping a spore* *rooonc* zZzZzZ)
2016-10-18 14:32:11	<--	Cohedrin (~textual@c-73-170-239-253.hsd1.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-10-18 14:32:13	w3z	still not the problem ...anyway you can just drop the & in &f1,&f2 btw
2016-10-18 14:32:22	-->	ReverseBlade (~user@213.74.212.180) has joined ##c++
2016-10-18 14:32:47	-->	andyhuzhill (~Thunderbi@14.23.45.178) has joined ##c++
2016-10-18 14:32:52	pepper_chico	still by value, though simpler
2016-10-18 14:32:59	m_ben	w3z: even w/o the [](auto x){ return 100*x;} I'm getting a segfault
2016-10-18 14:33:05	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-18 14:33:40	<--	degva (~degva@190.232.18.40) has quit (Ping timeout: 250 seconds)
2016-10-18 14:34:13	pepper_chico	my suspicion is that the refs can live untion end of expression, but is it non-ub to carry refs in and out like that?
2016-10-18 14:34:32	m_ben	it doesn't work with [f1,f2]
2016-10-18 14:34:34	pepper_chico	I have never looked that up
2016-10-18 14:34:38	<--	EvilPenguin (~EvilPengu@bur-inet-pa-1.disney.com) has quit (Ping timeout: 245 seconds)
2016-10-18 14:34:42	-->	SunnyD_ (~SunnyD@cpe-72-178-78-211.hot.res.rr.com) has joined ##c++
2016-10-18 14:34:47	<--	nilof (~saolof@92-32-80-134.tn.glocalnet.net) has quit (Remote host closed the connection)
2016-10-18 14:34:50	<--	re1 (~reiser@178.220.1.2) has quit (Read error: Connection reset by peer)
2016-10-18 14:35:11	-->	SwiftMatt (~Objective@130.253.27.134) has joined ##c++
2016-10-18 14:35:11	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-18 14:35:42	m_ben	strange, it works with clang, but not with gcc: http://melpon.org/wandbox/permlink/TrBPwCnrJSFnmH6u
2016-10-18 14:36:19	-->	drockwood94 (~ethan@2601:245:0:de2b::fb7f) has joined ##c++
2016-10-18 14:36:32	pepper_chico	indeed
2016-10-18 14:36:43	<--	mad_enz (~mad_enz@2607:f090:488d:2ab:f9c1:9559:d581:aa23) has quit (Ping timeout: 245 seconds)
2016-10-18 14:36:50	pepper_chico	s/untion/until/
2016-10-18 14:37:49	m_ben	and it also works if I forward the arguments into the lambdas as in [_f1=FWD(f1), _f2=FWD(f2)]
2016-10-18 14:38:04	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-18 14:38:39	-->	Cohedrin (~textual@73.93.140.194) has joined ##c++
2016-10-18 14:39:08	-->	whaletechno (~whaletech@unaffiliated/whaletechno) has joined ##c++
2016-10-18 14:39:14	<--	heiner (~heiner@dslc-082-082-226-040.pools.arcor-ip.net) has quit (Disconnected by services)
2016-10-18 14:39:24	-->	heiner (~heiner@dslb-178-005-128-118.178.005.pools.vodafone-ip.de) has joined ##c++
2016-10-18 14:39:35	-->	pdtpatrick (~Patrick@73.109.61.47) has joined ##c++
2016-10-18 14:39:39	pepper_chico	basically is this ok? {foo(foo(42));} template<class T> T &foo(T &&v) { return v;}
2016-10-18 14:39:53	pepper_chico	{foo(foo(42));} template<class T> T &foo(T &&v) { return v;}
2016-10-18 14:39:54	geordi	<no output>
2016-10-18 14:40:22	pepper_chico	compiles, but I dunno whether it's not ub
2016-10-18 14:40:22	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-18 14:40:28	<--	snover (~Adium@unaffiliated/snover) has quit (Quit: Leaving.)
2016-10-18 14:40:57	pepper_chico	I know just foo(42) is fine
2016-10-18 14:41:08	<--	cd80 (~bf3@46.166.190.185) has quit (Quit: leaving)
2016-10-18 14:41:12	-->	hualet (~hualet@118.184.15.164) has joined ##c++
2016-10-18 14:42:02	w3z	it breaks at 6
2016-10-18 14:42:11	w3z	for your composition depth
2016-10-18 14:42:33	<--	KAHR-Alpha (~Alpha@AReims-652-1-18-165.w90-18.abo.wanadoo.fr) has quit (Ping timeout: 256 seconds)
2016-10-18 14:42:59	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-18 14:42:59		[14:42]
2016-10-18 14:43:14	<--	leeter (~leeter@unaffiliated/leeter) has quit (Read error: Connection reset by peer)
2016-10-18 14:43:26	<--	Henke37 (~Henrik@81-227-16-59-no133.bredband.skanova.com) has quit (Quit: ERR_SHUTDOWN)
2016-10-18 14:43:45	m_ben	what breaks?
2016-10-18 14:43:46	w3z	hmm, even thats not true
2016-10-18 14:44:03	w3z	it wont segfault if you reduce the set of params for comp1 by 1
2016-10-18 14:44:26	-->	matiu (~matiu@unaffiliated/matiu) has joined ##c++
2016-10-18 14:44:28	m_ben	it also won't segfault if you remove f and g
2016-10-18 14:44:35	w3z	but if you create a single comp1 of 6 args, and dont create comp2 it wont seg fault
2016-10-18 14:45:01	w3z	i wont segfaut if you remove any of the elements from comp1 afaik
2016-10-18 14:45:05	<--	matiu (~matiu@unaffiliated/matiu) has quit (Client Quit)
2016-10-18 14:45:05	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-18 14:45:19	w3z	somethings happening when you compose comp1 with something else to generate comp2
2016-10-18 14:46:01	w3z	auto comp1 = compose(f1,f,f,g,f1,f2,f3,fu); //still good
2016-10-18 14:46:12	-->	Izhido (~Mutter@190.10.59.31) has joined ##c++
2016-10-18 14:46:40	w3z	but as soon as you create comp2 and f1 has at least 5  elementes it breaks
2016-10-18 14:46:53	<--	ezzieyguywuf (~wolfie@unaffiliated/ezzieyguywuf) has quit (Ping timeout: 252 seconds)
2016-10-18 14:46:54	m_ben	did you also try to call it? as in comp1(1111)
2016-10-18 14:46:59	w3z	yes
2016-10-18 14:46:59	m_ben	it still segfaults
2016-10-18 14:47:08	<--	pdtpatrick (~Patrick@73.109.61.47) has quit (Ping timeout: 265 seconds)
2016-10-18 14:47:10	<--	Izhido (~Mutter@190.10.59.31) has quit (Client Quit)
2016-10-18 14:47:27	w3z	std::cout << comp1(3) << std::endl;  604
2016-10-18 14:47:28	-->	Izhido (~Mutter@190.10.59.31) has joined ##c++
2016-10-18 14:47:34	m_ben	doesn't work when I try it
2016-10-18 14:47:42	w3z	oh i switched to clang, lets see if gcc still breaks
2016-10-18 14:48:00	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-18 14:48:08	m_ben	well, I tried it with gcc :)
2016-10-18 14:48:08	w3z	ah, yes gcc breaks with the above, clang lives on
2016-10-18 14:48:58	<--	Izhido (~Mutter@190.10.59.31) has quit (Remote host closed the connection)
2016-10-18 14:49:41	-->	Izhido (~Mutter@190.10.59.31) has joined ##c++
2016-10-18 14:52:35	-->	mad_enz (~mad_enz@2607:f090:488d:2ab:21ba:32cd:c4d1:daba) has joined ##c++
2016-10-18 14:52:42	-->	pdtpatrick (~Patrick@2620:10d:c090:180::1:3df0) has joined ##c++
2016-10-18 14:53:00	w3z	so gcc seg faults at 3
2016-10-18 14:53:44	m_ben	and doesn't compile at all with [f1,f2]
2016-10-18 14:54:09	w3z	?
2016-10-18 14:54:58	pepper_chico	the fact of not compiling with [f1, f2] isn't as interesting to discover exactly why the compilers are segfaulting, is it their problem or your coding is relying on UB
2016-10-18 14:55:23	m_ben	doesn't compile with 'return [f1,f2](auto&&... xs) { return f1(f2(FWD(xs)...)); }`
2016-10-18 14:55:36	w3z	i see, it doesnt like the fact that f and g are function references
2016-10-18 14:55:36	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-18 14:56:10	w3z	making them +f, and +g allows gcc to capture by value there
2016-10-18 14:56:51	w3z	now, just using the free functions, which obviously wont expre
2016-10-18 14:56:59	m_ben	what syntax is that +f?
2016-10-18 14:57:12	<--	rorro (~rorro@176.10.248.232) has quit (Ping timeout: 252 seconds)
2016-10-18 14:57:24	pepper_chico	a positive function xD
2016-10-18 14:57:36	w3z	we can still get the segfault
2016-10-18 14:57:37	pepper_chico	it' just makes no sense that's allowed for me
2016-10-18 14:58:07	w3z	+f is just forcing the function reference to be a pointer to function there instead
2016-10-18 14:58:07		[14:58]
2016-10-18 14:58:15	<--	iterati1 (~vangelis@79.103.254.36.dsl.dyn.forthnet.gr) has quit (Ping timeout: 265 seconds)
2016-10-18 14:58:26	-->	dj_pi (~dj@c-73-191-212-56.hsd1.mi.comcast.net) has joined ##c++
2016-10-18 14:58:33	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-18 14:59:08	<--	nacon (~nacon@unaffiliated/nacon) has quit (Quit: leaving)
2016-10-18 14:59:28	w3z	auto comp1 = compose(&f,&g,&f); instead if you prefer not to be obnoxiously abusive with your syntax :)
2016-10-18 15:00:11	w3z	anyway, thats a secondary bug ...still doesnt explain whats happening with the capture by reference, looking
2016-10-18 15:00:33	-->	fstd_ (~fstd@unaffiliated/fisted) has joined ##c++
2016-10-18 15:00:34	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-18 15:00:35	 *	pepper_chico waits
2016-10-18 15:00:44	-->	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has joined ##c++
2016-10-18 15:00:46	<--	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has quit (Max SendQ exceeded)
2016-10-18 15:00:50	<--	very_sneaky (~very_snea@c27-253-32-81.thoms4.vic.optusnet.com.au) has quit
2016-10-18 15:01:16	-->	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has joined ##c++
2016-10-18 15:01:17	<--	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has quit (Max SendQ exceeded)
2016-10-18 15:01:37	-->	alienbot (~quassel@116.6.99.222) has joined ##c++
2016-10-18 15:01:44	-->	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has joined ##c++
2016-10-18 15:01:45	<--	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has quit (Max SendQ exceeded)
2016-10-18 15:02:14	-->	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has joined ##c++
2016-10-18 15:02:15	<--	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has quit (Max SendQ exceeded)
2016-10-18 15:02:29	-->	SunnyD__ (~SunnyD@cpe-72-178-78-211.hot.res.rr.com) has joined ##c++
2016-10-18 15:02:44	-->	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has joined ##c++
2016-10-18 15:02:45	<--	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has quit (Max SendQ exceeded)
2016-10-18 15:02:57	pepper_chico	by the way, isn't it +f = function pointer conversion simplory/misleading explanation. Doesn't apply for fu, which is a function object
2016-10-18 15:03:14	-->	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has joined ##c++
2016-10-18 15:03:15	<--	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has quit (Max SendQ exceeded)
2016-10-18 15:03:30	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-18 15:04:01	<--	hurtletad (~filtered@5CEC365.rev.sefiber.dk) has quit (Quit: Leaving)
2016-10-18 15:04:48	<--	fstd (~fstd@unaffiliated/fisted) has quit (Ping timeout: 260 seconds)
2016-10-18 15:04:49	--	fstd_ is now known as fstd
2016-10-18 15:04:49	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-18 15:05:26	-->	Nilesh_ (uid116340@gateway/web/irccloud.com/x-zerzspouqspjxngr) has joined ##c++
2016-10-18 15:05:28	<--	SunnyD_ (~SunnyD@cpe-72-178-78-211.hot.res.rr.com) has quit (Ping timeout: 245 seconds)
2016-10-18 15:06:24	<--	HerzogDeXtEr (~farci@i59F6D66E.versanet.de) has quit (Read error: Connection reset by peer)
2016-10-18 15:06:42	<--	vikaton (uid59278@gateway/web/irccloud.com/x-mekgolupazskdoxz) has quit (Quit: Connection closed for inactivity)
2016-10-18 15:06:52	-->	mkramer (~Adium@c-76-30-207-152.hsd1.tx.comcast.net) has joined ##c++
2016-10-18 15:07:14	<--	iceiceice (~chris@unaffiliated/iceiceice) has quit (Quit: Ex-Chat)
2016-10-18 15:07:48	-->	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2016-10-18 15:08:29	w3z	i was only appying it to f and g
2016-10-18 15:08:32	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-18 15:08:36	<--	vitimiti (~vitimiti@unaffiliated/vitimiti) has quit (Ping timeout: 250 seconds)
2016-10-18 15:08:37	<--	shirty (~shirty@155.170-247-81.adsl-dyn.isp.belgacom.be) has quit (Ping timeout: 256 seconds)
2016-10-18 15:08:56	w3z	because m_ben pointed out that when capturing by value gcc was bitching
2016-10-18 15:09:17	<--	hualet (~hualet@118.184.15.164) has quit (Remote host closed the connection)
2016-10-18 15:09:44	-->	hualet (~hualet@118.184.15.164) has joined ##c++
2016-10-18 15:10:19	<--	ReverseBlade (~user@213.74.212.180) has quit (Ping timeout: 256 seconds)
2016-10-18 15:10:27	-->	nine_milli (~nine_mill@32.211.52.104) has joined ##c++
2016-10-18 15:10:27	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-18 15:10:47	pepper_chico	ah ok, thought it was on the captures, my bad
2016-10-18 15:11:03	nine_milli	hi everyone my name is Brian Leroy Brice call me @ 1-210-300-2559
2016-10-18 15:11:10	<--	nine_milli (~nine_mill@32.211.52.104) has left ##c++
2016-10-18 15:11:41	-->	fogbank (~foggy@88.147.42.198) has joined ##c++
2016-10-18 15:11:45	<--	Izhido (~Mutter@190.10.59.31) has quit (Remote host closed the connection)
2016-10-18 15:12:54	-->	bluezone (uid104970@gateway/web/irccloud.com/x-xbtcmdopogjhyxpg) has joined ##c++
2016-10-18 15:12:55	<--	ipronin (~ipronin@8.25.197.27) has quit (Ping timeout: 252 seconds)
2016-10-18 15:13:33	<--	thib (~Thibaut12@wikimedia/Thibaut120094) has quit (Quit: Leaving)
2016-10-18 15:13:33		[15:13]
2016-10-18 15:13:35	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-18 15:14:09	-->	samik_ (~smukherje@netops-100.sfo1.bitgravity.com) has joined ##c++
2016-10-18 15:14:25	<--	hualet (~hualet@118.184.15.164) has quit (Ping timeout: 260 seconds)
2016-10-18 15:14:48	<--	samik (~smukherje@netops-105.sfo1.bitgravity.com) has quit (Ping timeout: 252 seconds)
2016-10-18 15:14:48	w3z	how can it be this tough to deal with the ban evading idiots on irc a hundred years later ...
2016-10-18 15:15:08	baudejogos	:D
2016-10-18 15:15:28	<--	fogb (~foggy@88.147.42.198) has quit (Ping timeout: 260 seconds)
2016-10-18 15:15:36	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-18 15:17:23	-->	fogb (~foggy@88.147.42.198) has joined ##c++
2016-10-18 15:18:32	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-18 15:19:15	-->	skweek (~skweek@68-200-146-225.res.bhn.net) has joined ##c++
2016-10-18 15:19:21	sujeet	lol
2016-10-18 15:19:50	sujeet	w3z, freenode's ircd has a lot of features to do it, but noone really uses them
2016-10-18 15:20:06	-->	nine_milli (~nine_mill@32.211.52.104) has joined ##c++
2016-10-18 15:20:09	nine_milli	My name is Brian Leroy Brice from San Antonio Texas, any cute guys hit me up @ 1-210-300-2559 and ask for blb
2016-10-18 15:20:14	<--	nine_milli (~nine_mill@32.211.52.104) has left ##c++
2016-10-18 15:21:05	<--	fogbank (~foggy@88.147.42.198) has quit (Ping timeout: 256 seconds)
2016-10-18 15:22:03	m_ben	is it so hard to block his ip
2016-10-18 15:22:59	<--	pdtpatrick (~Patrick@2620:10d:c090:180::1:3df0) has quit (Ping timeout: 245 seconds)
2016-10-18 15:25:16	<--	mackal (~mike@pool-96-237-144-12.bstnma.fios.verizon.net) has quit (Quit: BE VIGILANT.)
2016-10-18 15:25:56	<--	SecondForm_Glenn (~Thunderbi@97-102-42-24.res.bhn.net) has quit (Ping timeout: 250 seconds)
2016-10-18 15:26:00	<--	SunnyD__ (~SunnyD@cpe-72-178-78-211.hot.res.rr.com) has quit (Quit: ChatZilla 0.9.90.1 [Firefox 30.0/20140605174243])
2016-10-18 15:26:41	<--	mkramer (~Adium@c-76-30-207-152.hsd1.tx.comcast.net) has quit (Quit: Leaving.)
2016-10-18 15:27:02	-->	SunnyD_ (~SunnyD@cpe-72-178-78-211.hot.res.rr.com) has joined ##c++
2016-10-18 15:27:08	<--	andyhuzhill (~Thunderbi@14.23.45.178) has quit (Ping timeout: 245 seconds)
2016-10-18 15:27:17	-->	theanalyst (theanalyst@gateway/shell/firrre/x-ffdsglackckfwnfq) has joined ##c++
2016-10-18 15:28:24	kstar	Wait, is this really ##c++?
2016-10-18 15:28:44	<--	SunnyD_ (~SunnyD@cpe-72-178-78-211.hot.res.rr.com) has left ##c++
2016-10-18 15:28:44		[15:28]
2016-10-18 15:28:55	w3z	why isnt your compose bitching about use of compose before deduction of auto ...
2016-10-18 15:29:33	w3z	<<C(f,f)(2); int f(int x){return 2*x;} template<class A,class B> decltype(auto) C(A&& a, B&& b){return [&a,&b](auto&&...x){return a(b(forward<decltype(x)>(x)...));};} template<class A,class...B> decltype(auto) C(A&& a, B&&...b){return C(forward<A>(a),forward<B>(b)...);}
2016-10-18 15:29:33	geordi	8
2016-10-18 15:29:40	w3z	<<C(f,f,f)(2); int f(int x){return 2*x;} template<class A,class B> decltype(auto) C(A&& a, B&& b){return [&a,&b](auto&&...x){return a(b(forward<decltype(x)>(x)...));};} template<class A,class...B> decltype(auto) C(A&& a, B&&...b){return C(forward<A>(a),forward<B>(b)...);}
2016-10-18 15:29:40	geordi	error: use of 'decltype(auto) C(A&&, B&& ...) [with A = int (&)(int); B = {int (&)(int), int (&)(int)}]' before deduction of 'auto'
2016-10-18 15:29:53	kstar	O_o
2016-10-18 15:30:06	pepper_chico	m_ben... thinking here, at some point, your refs start to be refs to the lambdas you create, those lambdas will die if you don't create copies won't them?
2016-10-18 15:30:43	<--	samik_ (~smukherje@netops-100.sfo1.bitgravity.com) has quit (Ping timeout: 256 seconds)
2016-10-18 15:31:01	-->	Fixi0n (~Jaac@a83-163-76-78.adsl.xs4all.nl) has joined ##c++
2016-10-18 15:31:07	-->	akolar (AH3e@gateway/shell/firrre/x-lwqfkrlbgvbdojen) has joined ##c++
2016-10-18 15:31:19	pepper_chico	the inner lambdas vanish after the assigments, and you have something with dead refs to dead lambdas
2016-10-18 15:31:31	pepper_chico	if you do copies, that won't happen
2016-10-18 15:31:33	w3z	pepper_chico: thats my thinking as well, in the above C > 3 case the binary C has created a temporary lambda
2016-10-18 15:31:49	w3z	>2
2016-10-18 15:32:32	pepper_chico	yeah, it's just ub
2016-10-18 15:32:45	w3z	i was going to demonstrate it when geordi slapped me with the auto deduction before use error
2016-10-18 15:33:00	-->	hualet (~hualet@118.184.15.164) has joined ##c++
2016-10-18 15:33:03	<--	shakalaka (~shakalaka@ec2-52-52-27-0.us-west-1.compute.amazonaws.com) has quit (Quit: bye.)
2016-10-18 15:33:12	<--	JacobJeweler (~Jaac@unaffiliated/jacobjeweler) has quit (Ping timeout: 260 seconds)
2016-10-18 15:33:20	pepper_chico	well, I did some lunch stead here :-)
2016-10-18 15:33:30	-->	vikaton (uid59278@gateway/web/irccloud.com/x-mvlumsykcnpukpra) has joined ##c++
2016-10-18 15:33:31	-->	Cohedrin_ (~textual@c-73-170-239-253.hsd1.ca.comcast.net) has joined ##c++
2016-10-18 15:33:34	pepper_chico	s/stead/instead/
2016-10-18 15:33:34	<--	Danishman (~kvirc@62-243-156-218-static.dk.customer.tdc.net) has quit (Read error: Connection reset by peer)
2016-10-18 15:33:34	-->	hyacinth^timeout (~yhyacinth@61.111.255.109) has joined ##c++
2016-10-18 15:33:39	<--	kbdkode (~kbdkode@unaffiliated/kbdkode) has quit (Read error: Connection reset by peer)
2016-10-18 15:33:50	-->	kbdkode (~kbdkode@unaffiliated/kbdkode) has joined ##c++
2016-10-18 15:34:16	-->	Danishman (~kvirc@62-243-156-218-static.dk.customer.tdc.net) has joined ##c++
2016-10-18 15:34:16	-->	shakalaka (~shakalaka@ec2-52-52-27-0.us-west-1.compute.amazonaws.com) has joined ##c++
2016-10-18 15:34:28	-->	AReverser (~dev@CPE602ad0897db5-CM602ad0897db2.cpe.net.cable.rogers.com) has joined ##c++
2016-10-18 15:34:43	<--	hyacinth (~yhyacinth@61.111.255.109) has quit (Remote host closed the connection)
2016-10-18 15:34:59	-->	re1 (~reiser@178.220.1.2) has joined ##c++
2016-10-18 15:35:36	<--	Cohedrin (~textual@73.93.140.194) has quit (Ping timeout: 260 seconds)
2016-10-18 15:36:28	k_sze[work]	c++11 doesn't define a + operator for const char* + const char*??
2016-10-18 15:37:25	pepper_chico	pointer plus pointer will point to what?
2016-10-18 15:37:45	k_sze[work]	no idea.
2016-10-18 15:37:51	<--	Lowl3v3l (~Lowl3v3l@dslb-088-075-000-014.088.075.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2016-10-18 15:37:51	pepper_chico	see
2016-10-18 15:37:55	pepper_chico	that's an issue
2016-10-18 15:38:35	<--	vinnie92_ (uid189878@gateway/web/irccloud.com/x-dpfbmmgwyycgltfj) has quit (Quit: Connection closed for inactivity)
2016-10-18 15:38:43	k_sze[work]	There's no way to define + to concatenate two strings in const char*?
2016-10-18 15:40:03	-->	loseyourmind (~loseyourm@180.168.61.170) has joined ##c++
2016-10-18 15:41:35	-->	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has joined ##c++
2016-10-18 15:41:56	pepper_chico	std::string is a better option
2016-10-18 15:42:30	pepper_chico	can't define operators over builtin types alone
2016-10-18 15:43:26	<--	loseyourmind (~loseyourm@180.168.61.170) has left ##c++
2016-10-18 15:45:33	m_ben	so and when I perfectly forward them as in [_f1=FWD(f1), ..], it will make a copy of the lambdas?
2016-10-18 15:45:33		[15:45]
2016-10-18 15:46:10	pepper_chico	m_ben: no perfect forward there, just copy
2016-10-18 15:46:10	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-18 15:46:32	<--	w41 (~w41@unaffiliated/w41) has quit (Ping timeout: 244 seconds)
2016-10-18 15:46:34	m_ben	or what is the right term? move them into the closures
2016-10-18 15:46:37	pepper_chico	FWD or just f1 will endup the same
2016-10-18 15:47:05	pepper_chico	m_ben: I mean that there just isn't any perfect forwarding there
2016-10-18 15:47:13	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-18 15:47:27	-->	Carbonflux (~Bob@75-172-112-206.tukw.qwest.net) has joined ##c++
2016-10-18 15:47:37	pepper_chico	in that expression in the lambda capture, even though you meant it to be
2016-10-18 15:48:01	m_ben	I meant move it into the lambda
2016-10-18 15:48:21	pepper_chico	with lambda captures you capture by value with _f1=, or by ref with &_f1=
2016-10-18 15:49:08	-->	voidah (~voidah@unaffiliated/voider) has joined ##c++
2016-10-18 15:49:38	pepper_chico	m_ben: you perfect forward when you pass it to something that can do the forwarding, like an T&& function param
2016-10-18 15:50:05	pepper_chico	not to a lambda captura declaration
2016-10-18 15:50:42	<--	Karyon (~yaaic@unaffiliated/karyon) has quit (Quit: sayonara)
2016-10-18 15:50:50	pepper_chico	just like you can't perfect forwarding an int to foo(int i)
2016-10-18 15:51:08	pepper_chico	it will just accept a value by copy
2016-10-18 15:51:13	-->	code_zombie_ (~code_zomb@2605:a601:aa1:5c00:39d6:75bd:f88f:507d) has joined ##c++
2016-10-18 15:51:13	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-18 15:51:57	-->	xaxxon (~xaxxon@c-50-132-6-118.hsd1.wa.comcast.net) has joined ##c++
2016-10-18 15:52:19	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-18 15:52:39	pepper_chico	think of foo(FWD(x))
2016-10-18 15:52:54	m_ben	but what do I do if I pass an object that is expensive to copy or noncopyable? shouldn't I move it into the lambda?
2016-10-18 15:53:23	<--	code_zombie (~code_zomb@136.63.230.43) has quit (Ping timeout: 256 seconds)
2016-10-18 15:53:40	-->	w41 (~w41@213.243.91.10) has joined ##c++
2016-10-18 15:53:40	<--	w41 (~w41@213.243.91.10) has quit (Changing host)
2016-10-18 15:53:40	-->	w41 (~w41@unaffiliated/w41) has joined ##c++
2016-10-18 15:53:54	-->	jason_zhang (~jason_zha@42.120.74.200) has joined ##c++
2016-10-18 15:54:01	-->	andyhuzhill (~Thunderbi@14.23.45.178) has joined ##c++
2016-10-18 15:54:42	pepper_chico	std::move in named lambda captures requires that the type is moveable type, so yeah, my bad, it's not just a copy if they are moveable
2016-10-18 15:54:58	pepper_chico	if they aren't, it's copy
2016-10-18 15:55:19	pepper_chico	but
2016-10-18 15:55:29	-->	ReverseBlade (~user@213.74.212.180) has joined ##c++
2016-10-18 15:55:31	pepper_chico	nothing to do with std::forwarding
2016-10-18 15:55:50	<--	roko (d193902e@gateway/web/freenode/ip.209.147.144.46) has quit (Ping timeout: 260 seconds)
2016-10-18 15:56:07	pepper_chico	in named lambda captures it's common to have [foo=std::move(bar)]
2016-10-18 15:56:13	pepper_chico	but not forward
2016-10-18 15:56:30	-->	GinoMan (~GinoMan@2601:41:c101:487a:d4bc:2dd5:c0d8:c926) has joined ##c++
2016-10-18 15:56:46	<--	cliluw (~cliluw@unaffiliated/cliluw) has quit (Read error: Connection reset by peer)
2016-10-18 15:59:06	-->	cliluw (~cliluw@unaffiliated/cliluw) has joined ##c++
2016-10-18 15:59:21	m_ben	why did it work w/o any issues, when I had [_f1=FWD(f1), _f2=FWD(f2)]? I'm still not understanding the whole picture
2016-10-18 15:59:21	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-18 15:59:54	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-18 16:00:33	pepper_chico	m_ben: that what you're actually creating copies of the temporary lambdas you're returning and feeding the composition
2016-10-18 16:00:33		[16:00]
2016-10-18 16:00:41	pepper_chico	s/that what/that way/
2016-10-18 16:01:14	pepper_chico	m_ben: in the end your composed lambda is built upon minor lambdas.
2016-10-18 16:01:25	pepper_chico	m_ben: that stay alive
2016-10-18 16:01:31	pepper_chico	because they are copies
2016-10-18 16:01:46	pepper_chico	when you use references alone
2016-10-18 16:01:49	m_ben	so it's the same as just [f1,f2]?
2016-10-18 16:01:52	pepper_chico	they die
2016-10-18 16:02:06	pepper_chico	m_ben: yeah w3z pointed that in the beginning
2016-10-18 16:02:32	m_ben	well but then I'm also doing copies of the other callables, right?
2016-10-18 16:02:43	pepper_chico	yes
2016-10-18 16:02:51	-->	FreeBirdLjj (~freebirdl@223.65.168.113) has joined ##c++
2016-10-18 16:03:02	m_ben	is there a way to avoid that? what if the other callables are expensive to copy?
2016-10-18 16:03:35	pepper_chico	I didn't think about that problem yet
2016-10-18 16:03:39	<--	buumi (~quassel@26.ip-51-254-211.eu) has quit (Remote host closed the connection)
2016-10-18 16:03:54	m_ben	that's why I started with the references in the first place :)
2016-10-18 16:03:56	pepper_chico	it's a good exercise you should try since you know what's the issue now
2016-10-18 16:04:22	-->	yorick_ (~yorick@ip51cd0513.speed.planet.nl) has joined ##c++
2016-10-18 16:04:22	<--	yorick_ (~yorick@ip51cd0513.speed.planet.nl) has quit (Changing host)
2016-10-18 16:04:22	-->	yorick_ (~yorick@oftn/oswg-member/yorick) has joined ##c++
2016-10-18 16:04:48	pepper_chico	well, you endup creating refs, that's fine, it's stopped being fined when they become refs to temporary lamdbas
2016-10-18 16:04:48	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-18 16:05:11	pepper_chico	s/it's stopped being fined/it stopped being fine/
2016-10-18 16:05:24	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-18 16:05:55	-->	drockwood942 (~drockwood@2601:245:0:de2b:18df:4127:717:ffef) has joined ##c++
2016-10-18 16:06:56	-->	DigiByteDev (~JT2@n218250011174.netvigator.com) has joined ##c++
2016-10-18 16:06:59	<--	yorick (~yorick@oftn/oswg-member/yorick) has quit (Ping timeout: 258 seconds)
2016-10-18 16:07:26	<--	FreeBirdLjj (~freebirdl@223.65.168.113) has quit (Ping timeout: 256 seconds)
2016-10-18 16:08:45	-->	f00mado_ (~Thunderbi@2600:8805:9980:164:d823:d1a4:6902:c3a5) has joined ##c++
2016-10-18 16:09:30	<--	dj_pi (~dj@c-73-191-212-56.hsd1.mi.comcast.net) has quit (Quit: Leaving)
2016-10-18 16:09:48	<--	pepper_chico (~pepper_ch@201-69-110-165.dial-up.telesp.net.br) has quit (Quit: WeeChat 1.6)
2016-10-18 16:10:23	<--	ReverseBlade (~user@213.74.212.180) has quit (Ping timeout: 256 seconds)
2016-10-18 16:10:41	w3z	--clang <<C(&f,&f,&f)(2); int f(int x){return 2*x;} template<class A,class B> decltype(auto) C(A&& a, B&& b){return [a,b](auto&&...x){return a(b(forward<decltype(x)>(x)...));};} template<class A,class...B> decltype(auto) C(A&& a, B&&...b){return C(forward<A>(a),C(forward<B>(b)...));}
2016-10-18 16:10:47	w3z	geordi: ^
2016-10-18 16:10:47	geordi	16
2016-10-18 16:10:57	-->	korg815 (~korg815@unaffiliated/korg815) has joined ##c++
2016-10-18 16:11:18	<--	hualet (~hualet@118.184.15.164) has quit (Remote host closed the connection)
2016-10-18 16:11:30	w3z	gcc has a strange warning about the x lambda arguments, looks like a gcc bug
2016-10-18 16:11:32	<--	Danishman (~kvirc@62-243-156-218-static.dk.customer.tdc.net) has quit (Quit: KVIrc 4.9.1 Aria http://www.kvirc.net/)
2016-10-18 16:11:48	-->	hualet (~hualet@118.184.15.164) has joined ##c++
2016-10-18 16:13:17	w3z	i started daydreaming about using fold for composition a while back, could only get to a recursive solution like the one above, even with an overloaded operator, but i didnt try very hard, might be fun
2016-10-18 16:13:54	<--	korg815 (~korg815@unaffiliated/korg815) has left ##c++ ("WeeChat 1.6")
2016-10-18 16:14:31	-->	mangolisk (~mangolisk@S0106848dc7ebaa06.vc.shawcable.net) has joined ##c++
2016-10-18 16:14:31	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-18 16:14:37	<--	DigiByteDev (~JT2@n218250011174.netvigator.com) has quit (Ping timeout: 260 seconds)
2016-10-18 16:14:53	-->	DigiByteDev (~JT2@69.167.28.1) has joined ##c++
2016-10-18 16:14:58	<--	DigiByteDev (~JT2@69.167.28.1) has quit (Client Quit)
2016-10-18 16:15:01	<--	Vinnie_win_j (~TheVinn@pdpc/supporter/gold/thevinn) has quit (Read error: Connection reset by peer)
2016-10-18 16:15:22	m_ben	w3z: is there a way to capture f by reference and copy only the temporary lambdas?
2016-10-18 16:15:35	m_ben	do you see what I mean?
2016-10-18 16:15:35		[16:15]
2016-10-18 16:15:47	-->	hualet_ (~hualet@118.184.15.164) has joined ##c++
2016-10-18 16:16:05	-->	justanotheruser (~justanoth@unaffiliated/justanotheruser) has joined ##c++
2016-10-18 16:16:37	<--	hualet (~hualet@118.184.15.164) has quit (Ping timeout: 256 seconds)
2016-10-18 16:17:04	-->	Forgo (~U_Forgo_T@unaffiliated/forgo) has joined ##c++
2016-10-18 16:17:06	w3z	ahh there it is
2016-10-18 16:17:17	<--	TikityTik (~TikityTik@162.223.44.49) has quit (Read error: Connection reset by peer)
2016-10-18 16:17:22	w3z	hold on, im folding :)
2016-10-18 16:17:44	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-18 16:17:49	m_ben	you mean with fold expressions?
2016-10-18 16:17:50	Forgo	hi. quick question: is there a single function to nicely end all threads and close application?
2016-10-18 16:19:08	Forgo	ok, never mind, got a better idea
2016-10-18 16:19:13	<--	modlin (~quassel@93.123.41.167) has quit (Ping timeout: 245 seconds)
2016-10-18 16:19:31	-->	mkramer (~Adium@c-76-30-207-152.hsd1.tx.comcast.net) has joined ##c++
2016-10-18 16:21:28	w3z	-w <<C(&f,&f,&f,[](auto x){return x*3;})(2); int f(int x){return 2*x;} template<class A,class B> auto operator+(A&& a, B&& b){return [a,b](auto&&...x){return a(b(forward<decltype(x)>(x)...));};}template<class A,class...B> auto C(A&& a, B&&...b){return forward<A>(a)+(forward<B>(b)+...);}  //only works for even - needs work, clang has the fold bug
2016-10-18 16:21:34	w3z	geordi: ^
2016-10-18 16:21:34	geordi	48
2016-10-18 16:22:12	m_ben	geordi needs a --wandbox option :)
2016-10-18 16:22:24	w3z	heh yes of course fold expressions, not laundry :)
2016-10-18 16:22:48	-->	f3r70rr35f (~fernando@186-105-73-238.baf.movistar.cl) has joined ##c++
2016-10-18 16:22:55	m_ben	lol
2016-10-18 16:23:01	<--	l2esonance (~l2esonanc@c-73-223-132-245.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-10-18 16:23:07	-->	l2esonance (~l2esonanc@c-73-223-132-245.hsd1.ca.comcast.net) has joined ##c++
2016-10-18 16:24:13	<--	hexagoxel (~hexagoxel@p200300798F1D1700021E33FFFE2231E9.dip0.t-ipconnect.de) has quit (Ping timeout: 245 seconds)
2016-10-18 16:24:34	<--	systemfault (~rcyr@unaffiliated/rcyr) has quit (Quit: Bye!)
2016-10-18 16:24:42	w3z	hmm, so anything after 2 args, will generate a temporary lambda, you want to only capture the arguments by value if theyre temporaries ...
2016-10-18 16:25:21	-->	pepper_chico (~pepper_ch@201-69-110-165.dial-up.telesp.net.br) has joined ##c++
2016-10-18 16:25:23	m_ben	yup
2016-10-18 16:25:31	w3z	i suppose you can provide another overload of your binary compose that takes T&s
2016-10-18 16:27:45	w3z	youll may have to disable the universal ref version for T& though, im not clear headed enough to say 100% without trying right now
2016-10-18 16:27:50	w3z	-ll
2016-10-18 16:28:13	w3z	ive been sick(ish) all day
2016-10-18 16:28:31	m_ben	so I will need const T&, T& and T?
2016-10-18 16:28:58	w3z	just T&& and T&
2016-10-18 16:30:10	-->	ReverseBlade (~user@213.74.212.180) has joined ##c++
2016-10-18 16:31:06	<--	mkramer (~Adium@c-76-30-207-152.hsd1.tx.comcast.net) has quit (Quit: Leaving.)
2016-10-18 16:31:06		[16:31]
2016-10-18 16:31:30	-->	hexagoxel (~hexagoxel@p4FCCC605.dip0.t-ipconnect.de) has joined ##c++
2016-10-18 16:31:45	-->	ipronin (~ipronin@96-95-197-97-static.hfc.comcastbusiness.net) has joined ##c++
2016-10-18 16:31:48	--	lol is now known as gener1c
2016-10-18 16:31:54	w3z	and variations for lhs and rhs
2016-10-18 16:32:12	w3z	if youre willing to target 17, it sounds like a good chance to use if constexpr
2016-10-18 16:32:55	<--	postsneakernet (~postsneak@c-76-111-222-223.hsd1.fl.comcast.net) has quit
2016-10-18 16:33:05	w3z	the binary compose will usually see T&,T&& but theres also the possibility of seeing T&&,T&
2016-10-18 16:33:51	<--	f3r70rr35f (~fernando@186-105-73-238.baf.movistar.cl) has quit (Quit: leaving)
2016-10-18 16:35:25	-->	samik (~smukherje@netops-100.sfo1.bitgravity.com) has joined ##c++
2016-10-18 16:36:25	-->	datahotdog (~datahotdo@118.201.77.182) has joined ##c++
2016-10-18 16:36:45	<--	jokleinn (jokleinn@unaffiliated/jokleinn) has quit (Quit: WeeChat 1.5)
2016-10-18 16:36:49	<--	SwiftMatt (~Objective@130.253.27.134) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-10-18 16:37:08	<--	datahotdog (~datahotdo@118.201.77.182) has quit (Read error: Connection reset by peer)
2016-10-18 16:37:34	-->	datahotdog (~datahotdo@118.201.77.182) has joined ##c++
2016-10-18 16:41:33	-->	jokleinn (jokleinn@unaffiliated/jokleinn) has joined ##c++
2016-10-18 16:42:32	-->	f3r70rr35f (~fernando@186-105-73-238.baf.movistar.cl) has joined ##c++
2016-10-18 16:43:23	<--	pepper_chico (~pepper_ch@201-69-110-165.dial-up.telesp.net.br) has quit (Quit: WeeChat 1.6)
2016-10-18 16:45:34	-->	xameada (~xameada@ip98-165-190-88.ph.ph.cox.net) has joined ##c++
2016-10-18 16:46:33	<--	chachasmooth (~chachasmo@unaffiliated/chachasmooth) has quit (Ping timeout: 260 seconds)
2016-10-18 16:46:33		[16:46]
2016-10-18 16:47:12	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-18 16:47:12	<--	Z3N1T (~Zenit@179.176.16.101.dynamic.adsl.gvt.net.br) has quit (Quit: Leaving)
2016-10-18 16:47:34	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-18 16:49:09	-->	chachasmooth (~chachasmo@unaffiliated/chachasmooth) has joined ##c++
2016-10-18 16:49:09	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-18 16:50:53	-->	fedepad (~fedepad@p4FE13C0D.dip0.t-ipconnect.de) has joined ##c++
2016-10-18 16:52:52	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-18 16:54:30	w3z	(forward<A>(a)+...+forward<B>(b)) works as expected if everyone is a function object/lambda, pukes if there are function pointers though
2016-10-18 16:54:48	w3z	anyway...
2016-10-18 16:55:04	-->	iceiceice (~chris@pool-173-61-153-221.cmdnnj.fios.verizon.net) has joined ##c++
2016-10-18 16:55:04	<--	iceiceice (~chris@pool-173-61-153-221.cmdnnj.fios.verizon.net) has quit (Changing host)
2016-10-18 16:55:04	-->	iceiceice (~chris@unaffiliated/iceiceice) has joined ##c++
2016-10-18 16:55:31	<--	beatdown (beatdown@chainsawed.and.strangled.net) has quit (Quit: ZNC 1.6.1 - http://znc.in)
2016-10-18 16:55:34	baudejogos	what does that do?
2016-10-18 16:55:38	<--	fedepad (~fedepad@p4FE13C0D.dip0.t-ipconnect.de) has quit (Ping timeout: 250 seconds)
2016-10-18 16:55:43	w3z	with the right set of operator+ overloads, should be able to get it working and capture by ref when needed
2016-10-18 16:55:48	baudejogos	I still don't get these fold expressions right
2016-10-18 16:56:09	baudejogos	they are quite unreadable
2016-10-18 16:56:13	m_ben	!stdref fold
2016-10-18 16:56:14	refbot	Error: No results found
2016-10-18 16:56:14	w3z	its a binary fold that generates an expression a+b+c+...
2016-10-18 16:56:18	m_ben	!stdref fold_expression
2016-10-18 16:56:19	refbot	Error: No results found
2016-10-18 16:56:20	m_ben	!stdref fold_expressions
2016-10-18 16:56:21	refbot	Error: No results found
2016-10-18 16:56:32	baudejogos	...
2016-10-18 16:56:37	w3z	http://en.cppreference.com/w/cpp/language/fold
2016-10-18 16:56:41	-->	SwiftMatt (~Objective@130.253.27.134) has joined ##c++
2016-10-18 16:56:48	baudejogos	but why a and b?
2016-10-18 16:56:59	baudejogos	why not just forward<A>(a)+... ?
2016-10-18 16:57:02	w3z	oh its in reference to the above template
2016-10-18 16:57:06	-->	zap0 (~moofy@14-201-222-143.tpgi.com.au) has joined ##c++
2016-10-18 16:57:11	w3z	thats a unary right fold
2016-10-18 16:57:17	m_ben	because he's applying an initial value
2016-10-18 16:57:30	baudejogos	is *a* the initial value?
2016-10-18 16:57:39	baudejogos	or b?
2016-10-18 16:57:52	baudejogos	what makes a fold right or left?
2016-10-18 16:58:31	w3z	X op ... right fold, we fold to the right, ... op X is a left fold we fold to the left
2016-10-18 16:58:55	baudejogos	so it depends on the context
2016-10-18 16:59:08	-->	c0le (~c0le@59.99.251.45) has joined ##c++
2016-10-18 16:59:11	w3z	X op ... op Y is a binary fold
2016-10-18 16:59:23	baudejogos	oh
2016-10-18 16:59:30	 *	baudejogos sucks
2016-10-18 16:59:53	<--	AReverser (~dev@CPE602ad0897db5-CM602ad0897db2.cpe.net.cable.rogers.com) has quit (Ping timeout: 260 seconds)
2016-10-18 17:00:02	 *	baudejogos still does not have enough cognitive tools to understand this fold. gotta read the cppref link and stop annoying with silly questions
2016-10-18 17:00:03	baudejogos	thanks
2016-10-18 17:00:04	-->	my123_ (~my123@13.85.69.239) has joined ##c++
2016-10-18 17:00:35	<--	baudejogos (~achubergs@pool-108-54-98-223.nycmny.fios.verizon.net) has quit (Quit: shame)
2016-10-18 17:01:00	w3z	you can play with them, its the easiest way to grok (after reading the description)
2016-10-18 17:01:18	m_ben	he gave up too early :\
2016-10-18 17:01:56	<--	kbdkode (~kbdkode@unaffiliated/kbdkode) has quit (Ping timeout: 260 seconds)
2016-10-18 17:01:56		[17:01]
2016-10-18 17:02:48	-->	ruoso_ (~ruoso@ruoso.xen.prgmr.com) has joined ##c++
2016-10-18 17:03:08	-->	FreeBirdLjj (~freebirdl@218.94.142.72) has joined ##c++
2016-10-18 17:03:15	-->	systemfault (~rcyr@unaffiliated/rcyr) has joined ##c++
2016-10-18 17:03:32	-->	arescorpio (~arescorpi@152.171.92.97) has joined ##c++
2016-10-18 17:03:49	<--	my123 (~my123@unaffiliated/kill--9-1/x-8776976) has quit (Ping timeout: 260 seconds)
2016-10-18 17:04:49	ruoso_	Is it possible to have the template parameter be deduced from the argument, when the type of the argument is recursively templated? Something like "template <typename A> class Foo { template <typename T> bar(typename A::template foo<T> x); }"?
2016-10-18 17:05:38	ruoso_	assuming the template argument A has a template member
2016-10-18 17:05:51	ruoso_	named foo, which takes an argument type...
2016-10-18 17:06:30	-->	kbdkode (~kbdkode@unaffiliated/kbdkode) has joined ##c++
2016-10-18 17:06:32	ruoso_	I want the compiler to deduce what T is based on the argument to the function bar
2016-10-18 17:09:11	-->	gray_ (~gray@host86-162-52-178.range86-162.btcentralplus.com) has joined ##c++
2016-10-18 17:10:01	-->	mkramer (~Adium@c-76-30-207-152.hsd1.tx.comcast.net) has joined ##c++
2016-10-18 17:10:13	<--	CoolBreeze (~CoolBreez@120.88.159.151) has quit (Ping timeout: 244 seconds)
2016-10-18 17:10:30	-->	CoolBreeze (~CoolBreez@b.06.01a8.ip4.static.sl-reverse.com) has joined ##c++
2016-10-18 17:10:54	<--	ReverseBlade (~user@213.74.212.180) has quit (Ping timeout: 256 seconds)
2016-10-18 17:11:14	<--	gray_ (~gray@host86-162-52-178.range86-162.btcentralplus.com) has left ##c++
2016-10-18 17:12:59	-->	AReverser (~dev@24.114.54.10) has joined ##c++
2016-10-18 17:13:59	-->	mindandsky (~mindandsk@2601:283:8000:4250:e89a:4294:6f0e:e9c1) has joined ##c++
2016-10-18 17:14:00	<--	francis36012 (~francis@136.159.49.120) has quit (Ping timeout: 250 seconds)
2016-10-18 17:14:10	-->	o] (~achubergs@pool-108-54-98-223.nycmny.fios.verizon.net) has joined ##c++
2016-10-18 17:14:12	<--	andyhuzhill (~Thunderbi@14.23.45.178) has quit (Remote host closed the connection)
2016-10-18 17:15:59	-->	GinoMan2440 (~GinoMan@2601:41:c101:487a:95ac:9b56:b80a:f0d6) has joined ##c++
2016-10-18 17:17:08	<--	AReverser (~dev@24.114.54.10) has quit (Ping timeout: 245 seconds)
2016-10-18 17:17:08		[17:17]
2016-10-18 17:17:09	-->	andyhuzhill (~Thunderbi@14.23.45.178) has joined ##c++
2016-10-18 17:17:11	<--	Crazylemon64 (~Crazylemo@207.62.170.215) has quit (Remote host closed the connection)
2016-10-18 17:17:19	-->	Freze (~Freze@c-73-167-60-180.hsd1.ma.comcast.net) has joined ##c++
2016-10-18 17:17:58	-->	AReverser (~dev@24.114.54.10) has joined ##c++
2016-10-18 17:17:59	<--	Freze (~Freze@c-73-167-60-180.hsd1.ma.comcast.net) has quit (Changing host)
2016-10-18 17:17:59	-->	Freze (~Freze@unaffiliated/freze) has joined ##c++
2016-10-18 17:18:12	<--	Bigcheese (~quassel@unaffiliated/bigcheese) has quit (Quit: No Ping reply in 180 seconds.)
2016-10-18 17:18:18	Freze	isin't the intel icc compiler free for academics?
2016-10-18 17:18:32	Freze	https://software.intel.com/en-us/c-compilers/ipsxe-support
2016-10-18 17:18:37	o]	w3z: I think I've got it, but that bswap example is still making my brain to fuss a little bit
2016-10-18 17:18:38	Freze	I can't seem to find a download link
2016-10-18 17:18:41	-->	shingshang (~shingshan@101.164.159.8) has joined ##c++
2016-10-18 17:18:52	o]	!give Freze general
2016-10-18 17:18:54	nolyc	Freze: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2016-10-18 17:19:05	Freze	nolyc, apologies thanks
2016-10-18 17:19:12	Freze	nolyc,
2016-10-18 17:19:13	Freze	thanks
2016-10-18 17:19:38	<--	GinoMan (~GinoMan@2601:41:c101:487a:d4bc:2dd5:c0d8:c926) has quit (Ping timeout: 245 seconds)
2016-10-18 17:19:47	-->	Bigcheese (~quassel@unaffiliated/bigcheese) has joined ##c++
2016-10-18 17:20:27	-->	pwnz0r (~pwnz0r@c-24-5-158-134.hsd1.ca.comcast.net) has joined ##c++
2016-10-18 17:20:28	<--	GinoMan2440 (~GinoMan@2601:41:c101:487a:95ac:9b56:b80a:f0d6) has quit (Ping timeout: 245 seconds)
2016-10-18 17:21:28	pwnz0r	hello. im trying to wrap my brain around the overloading convension of << and >>. If any of you do shell programming typically > is out and < is in. I was curious if theres a decent way to remember to that << is out and >> is in by convension in c++
2016-10-18 17:22:02	o]	wtf does convension mean?
2016-10-18 17:22:14	pwnz0r	convention
2016-10-18 17:22:28	o]	so C++ has nothing to do with shell programming
2016-10-18 17:22:39	o]	how can we help you? :)
2016-10-18 17:22:55	pwnz0r	Well for one you could not be grammer police on the internet... lol
2016-10-18 17:23:06	o]	!english
2016-10-18 17:23:08	nolyc	english is the only (natural) language we speak in ##C++. There are C++ channels for several other languages, try /msg alis list *C++* .
2016-10-18 17:23:10	<--	hualet_ (~hualet@118.184.15.164) has quit (Remote host closed the connection)
2016-10-18 17:23:18	pwnz0r	Ah then shame on me good sir.
2016-10-18 17:23:18	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-18 17:23:22	o]	pwnz0r: also bad grammar is pretty bad for foreign people like me
2016-10-18 17:23:38	-->	hualet (~hualet@118.184.15.164) has joined ##c++
2016-10-18 17:24:10	o]	it looks like you don't have an actual C++ question. plz let me know when you have something like that and I will be happy to help
2016-10-18 17:24:37	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-18 17:24:41	pwnz0r	Well C++ is definitely not shell you are correct there, but I was mainly pointing out that the operators are opposite. Its not a c++ question but a tip/trick question about c++ its not that hard to see is it?
2016-10-18 17:24:42	zap0	pwnz0r, << arrows point inthe directin data flows
2016-10-18 17:25:01	<--	FreeBirdLjj (~freebirdl@218.94.142.72) has quit (Remote host closed the connection)
2016-10-18 17:25:04	o]	:)
2016-10-18 17:25:07	pwnz0r	thanks!
2016-10-18 17:25:09	m_ben	w3z: that folding still doesn't work with clang
2016-10-18 17:25:10	<--	KnownSyntax (~KnownSynt@unaffiliated/knownsyntax) has quit (Remote host closed the connection)
2016-10-18 17:25:17	o]	bad bad clang
2016-10-18 17:25:38	m_ben	with the user defined operator
2016-10-18 17:25:39	-->	KnownSyntax (~KnownSynt@unaffiliated/knownsyntax) has joined ##c++
2016-10-18 17:25:55	zap0	is bad bad == good..  double negative?1?  you shoudl grammar betterer
2016-10-18 17:26:09	<--	KnownSyntax (~KnownSynt@unaffiliated/knownsyntax) has quit (Read error: Connection reset by peer)
2016-10-18 17:26:09	o]	nope. bad bad is BADDER
2016-10-18 17:26:52	<--	pwnz0r (~pwnz0r@c-24-5-158-134.hsd1.ca.comcast.net) has quit (Quit: Leaving...)
2016-10-18 17:28:13	<--	hualet (~hualet@118.184.15.164) has quit (Ping timeout: 252 seconds)
2016-10-18 17:28:42	-->	KnownSyntax (~KnownSynt@2604:2d80:cc00:c3ea:20f:feff:fefe:8945) has joined ##c++
2016-10-18 17:28:52	<--	KnownSyntax (~KnownSynt@2604:2d80:cc00:c3ea:20f:feff:fefe:8945) has quit (Changing host)
2016-10-18 17:28:52	-->	KnownSyntax (~KnownSynt@unaffiliated/knownsyntax) has joined ##c++
2016-10-18 17:29:09	<--	fogb (~foggy@88.147.42.198) has quit (Ping timeout: 256 seconds)
2016-10-18 17:31:51	-->	somaReverse (~amos@124.16.128.66) has joined ##c++
2016-10-18 17:33:57	<--	c0le (~c0le@59.99.251.45) has quit (Read error: Connection reset by peer)
2016-10-18 17:33:57		[17:33]
2016-10-18 17:34:20	w3z	its the adl bug i reported, the operator is only searched for in the arguments namespace, in the case of lambdas who knows where that is ....
2016-10-18 17:35:02	m_ben	http://melpon.org/wandbox/permlink/NllYMTpXAbLkH91T
2016-10-18 17:35:07	w3z	still not even triaged by the clang team
2016-10-18 17:37:40	<--	shingshang (~shingshan@101.164.159.8) has quit (Ping timeout: 250 seconds)
2016-10-18 17:37:43	-->	c0le (~c0le@59.99.251.45) has joined ##c++
2016-10-18 17:37:52	-->	hualet (~hualet@118.184.15.164) has joined ##c++
2016-10-18 17:38:41	o]	looks like gcc is winning again
2016-10-18 17:39:06	w3z	now, perfect opportunity to collapse them and use if constexpr and make V-ille happy :)
2016-10-18 17:39:17	-->	ReverseBlade (~user@213.74.212.180) has joined ##c++
2016-10-18 17:40:36	w3z	i dont like the variadic macro use just for your convenience, but eh, its your code
2016-10-18 17:40:56	Bigcheese	w3z: where's the bug report?
2016-10-18 17:41:09	Bigcheese	I'll go close it as NAD
2016-10-18 17:41:09	Bigcheese	:P
2016-10-18 17:41:34	m_ben	w3z: I was getting too lazy
2016-10-18 17:41:39	-->	degva (~degva@190.232.18.40) has joined ##c++
2016-10-18 17:42:29	-->	EvilPenguin (~EvilPengu@2605:e000:6189:9600:1c85:6c7b:8524:a9f7) has joined ##c++
2016-10-18 17:44:12	-->	FreeBirdLjj (~freebirdl@202.119.43.196) has joined ##c++
2016-10-18 17:44:52	-->	adempus (~adempus@ool-43529049.dyn.optonline.net) has joined ##c++
2016-10-18 17:44:53	w3z	{f<N::S,N::S>();} namespace N{ struct S{}; }  void operator+(N::S,N::S){} template<class...Ts> void f(){(Ts{}+...);} //the clang bug
2016-10-18 17:44:53	geordi	<no output>
2016-10-18 17:44:58	<--	adempus (~adempus@ool-43529049.dyn.optonline.net) has quit (Remote host closed the connection)
2016-10-18 17:45:16	w3z	operators in fold expressions are no searched for by qualified lookup, only adl
2016-10-18 17:45:29	-->	adempus (~adempus@ool-43529049.dyn.optonline.net) has joined ##c++
2016-10-18 17:46:03	w3z	bigcheese, clang has stalled on moving forward with 17 without your help :)
2016-10-18 17:46:19	-->	jorj (~jorj@162.220.240.216) has joined ##c++
2016-10-18 17:46:32	w3z	auto non type, pff, gcc got class template deduction in already :)
2016-10-18 17:46:51	Bigcheese	w3z: I blame apple.
2016-10-18 17:47:00	Bigcheese	They took everyone off to go work on swift.
2016-10-18 17:47:09	Bigcheese	So now it's just google and random people :P
2016-10-18 17:48:28	<--	xaxxon (~xaxxon@c-50-132-6-118.hsd1.wa.comcast.net) has quit (Quit: This computer has gone to sleep)
2016-10-18 17:48:28	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-18 17:48:47	w3z	did they shift people around recently, as in the last few months, lame
2016-10-18 17:48:52	Bigcheese	geordi: use --clang
2016-10-18 17:48:52	geordi	error: call to function 'operator+' that is neither visible in the template definition nor found by argument-dependent lookup
2016-10-18 17:49:06	Bigcheese	I forget how to yell at geordi.
2016-10-18 17:49:06		[17:49]
2016-10-18 17:49:07	w3z	if you put + in N itll work
2016-10-18 17:49:15	Bigcheese	w3z: na, been a while now.
2016-10-18 17:49:15	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-18 17:49:44	w3z	they were chugging along up til decomposition declarations ...then just a trickle
2016-10-18 17:49:56	m_ben	a few weeks ago I saw someone implementing a taylor expansion in swift. he called the project taylor swift :)
2016-10-18 17:50:17	 *	w3z groans
2016-10-18 17:51:05	Bigcheese	awesome.
2016-10-18 17:51:42	w3z	did you see my series expansion for e and sin last week m_ben :) lost to the inter tubes now (easily recreated)
2016-10-18 17:51:52	m_ben	no
2016-10-18 17:52:26	<--	frib (~dynorsau@host127-144-dynamic.51-82-r.retail.telecomitalia.it) has quit (Remote host closed the connection)
2016-10-18 17:52:26	w3z	but someone ^ should propose a sum prod fact pow set of compile time library additions
2016-10-18 17:52:42	<--	Malkrith (uid186536@gateway/web/irccloud.com/x-pahgtjstvjkwvpuo) has quit (Quit: Connection closed for inactivity)
2016-10-18 17:52:43	Bigcheese	or not
2016-10-18 17:53:06	w3z	and the templated lambdas should be made standard, just for coolness
2016-10-18 17:53:16	<--	hualet (~hualet@118.184.15.164) has quit (Remote host closed the connection)
2016-10-18 17:53:16	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-18 17:53:23	<--	ipronin (~ipronin@96-95-197-97-static.hfc.comcastbusiness.net) has quit (Ping timeout: 245 seconds)
2016-10-18 17:53:43	-->	hualet (~hualet@118.184.15.164) has joined ##c++
2016-10-18 17:54:16	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-18 17:54:47	Bigcheese	which syntax for them?
2016-10-18 17:55:20	w3z	<<[]<size_t...N>(index_sequence<N...>,auto f){return (...+f(N));}(make_index_sequence<9>{},[x=M_PI/4](auto n){return pow(-1,n)/tgamma(2*n+2)*pow(x,2*n+1);});
2016-10-18 17:55:20	geordi	0.707107
2016-10-18 17:55:24	w3z	theres sin
2016-10-18 17:55:35	w3z	id have to go back even further for e
2016-10-18 17:55:51	m_ben	w3z: is this what you had in mind? http://melpon.org/wandbox/permlink/kym2UeKYNF7SsCBw
2016-10-18 17:56:07	o]	euch
2016-10-18 17:56:10	w3z	yes
2016-10-18 17:56:18	<--	mindandsky (~mindandsk@2601:283:8000:4250:e89a:4294:6f0e:e9c1) has quit (Ping timeout: 245 seconds)
2016-10-18 17:56:44	m_ben	shouldn't the operator* be enabled only for callable types?
2016-10-18 17:56:56	-->	ipronin (~ipronin@8.25.196.25) has joined ##c++
2016-10-18 17:56:56	<--	Cppg (~Cppg@host81-153-108-3.range81-153.btcentralplus.com) has quit (Ping timeout: 260 seconds)
2016-10-18 17:58:09	<--	hualet (~hualet@118.184.15.164) has quit (Ping timeout: 252 seconds)
2016-10-18 17:58:09	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-18 17:58:31	w3z	that sounds reasonable
2016-10-18 17:58:50	w3z	might want to stick it in a namespace with comp
2016-10-18 17:59:36	-->	Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2016-10-18 18:00:35	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-18 18:00:36	Bigcheese	oh, variadic lambdas.
2016-10-18 18:00:41	-->	Cppg (~Cppg@host31-48-246-255.range31-48.btcentralplus.com) has joined ##c++
2016-10-18 18:00:52	<--	AReverser (~dev@24.114.54.10) has quit (Ping timeout: 252 seconds)
2016-10-18 18:00:56	w3z	what do i get for mentoring you in the dark arts, dont even get lightening from my fingers powers
2016-10-18 18:00:59	Bigcheese	C++ needs more implicit templates.
2016-10-18 18:01:05	-->	sssilver (~sssilver@2605:6000:ee54:b500:2d19:7f16:2eca:309) has joined ##c++
2016-10-18 18:01:49	w3z	the templated lambdas arent practical, but they are neat
2016-10-18 18:02:19	Bigcheese	Is that a gcc extension?
2016-10-18 18:02:33	w3z	and fwiw, variadic lambdas doesnt capture whatever you want to call them, since [](auto...){} is legal
2016-10-18 18:02:36	<--	edr (~edr@pdpc/supporter/professional/edr) has quit (Quit: Leaving)
2016-10-18 18:02:37	w3z	yeah a gcc extension
2016-10-18 18:03:02	Bigcheese	fun
2016-10-18 18:03:22	w3z	the only use ive found for them is writing interesting geordi snippets :)
2016-10-18 18:03:44	Bigcheese	That's how we should evaluate all C++ features.
2016-10-18 18:03:57	Bigcheese	How well does it interface with irc.
2016-10-18 18:04:59	w3z	i would like something i can fold directly, ie where i dont have to be templated on some parameter pack in order to fold
2016-10-18 18:04:59		[18:04]
2016-10-18 18:05:26	Bigcheese	w3z: ...tuple + ...
2016-10-18 18:06:07	<--	vralphv (~vralp@d137-186-58-40.abhsia.telus.net) has quit (Quit: Lost terminal)
2016-10-18 18:06:24	<--	KindOne (kindone@freenude/topless/kindone) has quit (Quit: https://tools.ietf.org/html/rfc1459#section-4.1.6)
2016-10-18 18:06:39	w3z	void f(){auto x=make_index_sequence<5>{}; (x+...);}
2016-10-18 18:06:40	-->	KindOne (kindone@freenude/topless/kindone) has joined ##c++
2016-10-18 18:07:03	w3z	cant fold on a tuple instance without being a template that takes the param pack the tuple is built from
2016-10-18 18:07:07	<--	ReverseBlade (~user@213.74.212.180) has quit (Ping timeout: 256 seconds)
2016-10-18 18:07:10	-->	illerucis (~illerucis@ool-18bef55c.dyn.optonline.net) has joined ##c++
2016-10-18 18:07:44	w3z	i dont know how/if it could even work ...just would be interesting
2016-10-18 18:07:48	Bigcheese	I was going to add when my irc connection rudely dropped.
2016-10-18 18:08:03	Bigcheese	There's an idea to add a ... prefix operator which returns a paramiter pack.
2016-10-18 18:08:27	-->	Markie (~Markie@unaffiliated/markie) has joined ##c++
2016-10-18 18:08:27	m_ben	I would like a built-in reverse parameter expansion
2016-10-18 18:08:37	Bigcheese	So we could add a operator ... to index_sequence.
2016-10-18 18:08:40	<--	SwiftMatt (~Objective@130.253.27.134) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-10-18 18:09:03	Bigcheese	And then (...x + ...) would work.
2016-10-18 18:09:23	-->	Neslepaks (~Neslepaks@178.61.71.85) has joined ##c++
2016-10-18 18:10:36	w3z	is it getting any support/traction?, would be neat but im not going to hold my breath
2016-10-18 18:10:46	<--	Markie (~Markie@unaffiliated/markie) has left ##c++
2016-10-18 18:12:36	Bigcheese	It hasn't been formally proposed yet.
2016-10-18 18:12:40	Bigcheese	Not sure why.
2016-10-18 18:12:56	-->	xaxxon (~xaxxon@c-50-132-6-118.hsd1.wa.comcast.net) has joined ##c++
2016-10-18 18:13:02	w3z	also an index sequence with an arbitrary start point in the std instead of forcing everyone to write a deduced displace would be worthwhile too
2016-10-18 18:13:28	w3z	along with a real type list and helper functions ...
2016-10-18 18:13:31	<--	Neslepaks (~Neslepaks@178.61.71.85) has left ##c++
2016-10-18 18:13:47	<--	xaxxon (~xaxxon@c-50-132-6-118.hsd1.wa.comcast.net) has quit (Client Quit)
2016-10-18 18:14:05	<--	PhyloGenesis (~PhyloGene@2601:602:8700:979d:84fc:8059:bc33:4dd0) has quit (Quit: Leaving)
2016-10-18 18:14:36	-->	AReverser (~dev@CPE602ad0897db5-CM602ad0897db2.cpe.net.cable.rogers.com) has joined ##c++
2016-10-18 18:14:39	w3z	typelist, index_sequence, nth, sum, prod .... would be reasonable
2016-10-18 18:14:45	w3z	contains
2016-10-18 18:15:19	m_ben	find_if, reverse, copy, copy_if, replace, replace_if
2016-10-18 18:16:54	<--	pixelate^ (~pixelate@139.192.15.107) has quit (Ping timeout: 265 seconds)
2016-10-18 18:16:57	Bigcheese	w3z: we almost had to rush to get typelist into c++17
2016-10-18 18:17:11	Bigcheese	For parallel crap.
2016-10-18 18:17:32	<--	kadoban (~mud@unaffiliated/kadoban) has quit (Quit: bye)
2016-10-18 18:17:36	m_ben	so typelist will be in c++17?
2016-10-18 18:17:52	Bigcheese	no
2016-10-18 18:18:01	Bigcheese	We ripped out the feature that needed it.
2016-10-18 18:18:09	Bigcheese	(exceptions from parallel algorithms)
2016-10-18 18:18:31	introom	why does std::forward has `remove_reference' as part of the parameters ` forward( typename std::remove_reference<T>::type&& t )'  ?
2016-10-18 18:18:32	Bigcheese	I forget exactly why it needed a typelist.
2016-10-18 18:19:03	introom	it has two overloads, `typename std::remove_reference<T>::type& t ' and `typename std::remove_reference<T>::type&& t' ?
2016-10-18 18:19:15	introom	why not std::forward(T && t)?
2016-10-18 18:19:21	introom	isn't a T&&t enough?
2016-10-18 18:20:15	Bigcheese	You can never have enough &
2016-10-18 18:20:15		[18:20]
2016-10-18 18:21:15	introom	Bigcheese: what do you mean ?
2016-10-18 18:21:15	<--	systemfault (~rcyr@unaffiliated/rcyr) has quit (Quit: Bye!)
2016-10-18 18:21:30	Bigcheese	Nothing useful.
2016-10-18 18:21:42	-->	YungRaj (~YungRaj@50-24-71-159.bcstcmtk01.res.dyn.suddenlink.net) has joined ##c++
2016-10-18 18:21:44	<--	samik (~smukherje@netops-100.sfo1.bitgravity.com) has quit (Ping timeout: 256 seconds)
2016-10-18 18:24:32	-->	thex1 (~h4x0r@2601:642:4380:85a:21b:fcff:fe8f:c5ba) has joined ##c++
2016-10-18 18:25:03	-->	SecondForm_Glenn (~Thunderbi@108.189.70.212) has joined ##c++
2016-10-18 18:26:48	<--	xameada (~xameada@ip98-165-190-88.ph.ph.cox.net) has quit (Ping timeout: 260 seconds)
2016-10-18 18:27:27	-->	crazy_pete (~peter@2602:306:32eb:40d0::49) has joined ##c++
2016-10-18 18:27:31	w3z	when will i get a parallel algorithms vendor impl to play with ....
2016-10-18 18:27:41	Bigcheese	GOOD QUESTION.
2016-10-18 18:27:51	w3z	didnt even get chained promises in to 17 ...hrumph
2016-10-18 18:27:52	Bigcheese	Apparently there are already 10!
2016-10-18 18:27:55	<--	illerucis (~illerucis@ool-18bef55c.dyn.optonline.net) has quit (Remote host closed the connection)
2016-10-18 18:28:16	Bigcheese	But not libstdc++ or libc++ have it.
2016-10-18 18:28:53	Bigcheese	For libc++ we first have to implement a whole parallel runtime.
2016-10-18 18:29:09	Bigcheese	(we don't want a low quality implementation)
2016-10-18 18:29:23	w3z	could at least throw plaveholders that fallback on seq for now
2016-10-18 18:29:46	Bigcheese	but how is that useful?
2016-10-18 18:29:54	Bigcheese	Also, par_vec will be fun.
2016-10-18 18:30:06	w3z	it allows playing with the interface or writing future proof code at the very least
2016-10-18 18:30:12	Bigcheese	Or did that get renamed to par_unseq...
2016-10-18 18:30:37	-->	SwiftMatt (~Objective@162.242.94.27) has joined ##c++
2016-10-18 18:30:54	Bigcheese	You can write it yourself. It's literally the same thing with a parallel execution policy in front.
2016-10-18 18:31:09	w3z	still par_vec afaik
2016-10-18 18:31:09	-->	Haliucinas (~Haliucina@data-101-117.cgates.lt) has joined ##c++
2016-10-18 18:32:12	w3z	parallel_unsequenced_policy is the name of the policy, hmm
2016-10-18 18:32:15	<--	xameada_ (~xameada@ip98-165-190-88.ph.ph.cox.net) has quit (Ping timeout: 252 seconds)
2016-10-18 18:32:30	w3z	execution::par_unseq{ unspecified }
2016-10-18 18:32:37	w3z	so yeah guess it got renamed
2016-10-18 18:33:01	w3z	(according to my copy of the draft anyway)
2016-10-18 18:33:01	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-18 18:33:27	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-18 18:33:36	-->	rockstar_ (~rockstar@24.169.2.81) has joined ##c++
2016-10-18 18:35:40	-->	koodi (~koodi@dsl-vntbrasgw1-54fa6e-245.dhcp.inet.fi) has joined ##c++
2016-10-18 18:35:40		[18:35]
2016-10-18 18:36:53	-->	ReverseBlade (~user@213.74.212.180) has joined ##c++
2016-10-18 18:37:39	<--	sterniste (~sstern@188.188.130.106) has quit (Quit: sterniste)
2016-10-18 18:37:43	-->	hualet (~hualet@118.184.15.164) has joined ##c++
2016-10-18 18:38:05	<--	Cabanossi (~Cabanossi@p5DD7B861.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2016-10-18 18:38:27	-->	Cabanossi (~Cabanossi@p5DD7B73E.dip0.t-ipconnect.de) has joined ##c++
2016-10-18 18:38:33	<--	rockstar_ (~rockstar@24.169.2.81) has quit (Remote host closed the connection)
2016-10-18 18:38:54	<--	f3r70rr35f (~fernando@186-105-73-238.baf.movistar.cl) has quit (Quit: leaving)
2016-10-18 18:39:11	-->	rockstar__ (~rockstar@24.169.2.81) has joined ##c++
2016-10-18 18:39:11	-->	mss_cyclist (~MSe@89-250-189-210.tangos.nl) has joined ##c++
2016-10-18 18:42:03	-->	purplex88 (~purplex88@unaffiliated/purplex88) has joined ##c++
2016-10-18 18:43:59	-->	pixelate^ (~pixelate@139.192.15.107) has joined ##c++
2016-10-18 18:44:43	<--	YungRaj (~YungRaj@50-24-71-159.bcstcmtk01.res.dyn.suddenlink.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-10-18 18:46:28	ruoso_	[6~[6~[6~[5~[6~[6~[A[B
2016-10-18 18:46:47	-->	fedepad (~fedepad@p4FE13A65.dip0.t-ipconnect.de) has joined ##c++
2016-10-18 18:47:12	-->	xaxxon (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has joined ##c++
2016-10-18 18:47:47	-->	xameada (~xameada@ip98-165-190-88.ph.ph.cox.net) has joined ##c++
2016-10-18 18:48:20	-->	mackal (~mike@pool-96-237-144-12.bstnma.fios.verizon.net) has joined ##c++
2016-10-18 18:48:55	<--	Haruno (~Haruno@unaffiliated/haruno) has quit (Ping timeout: 244 seconds)
2016-10-18 18:49:06	-->	Haruno (~Haruno@unaffiliated/haruno) has joined ##c++
2016-10-18 18:49:46	<--	karakedi (~eAC53C340@unaffiliated/orphan) has quit (Ping timeout: 250 seconds)
2016-10-18 18:52:42	-->	govg (~govg@unaffiliated/govg) has joined ##c++
2016-10-18 18:52:42		[18:52]
2016-10-18 18:53:04	-->	pied (4407a170@gateway/web/freenode/ip.68.7.161.112) has joined ##c++
2016-10-18 18:53:34	<--	SwiftMatt (~Objective@162.242.94.27) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-10-18 18:54:14	<--	govg (~govg@unaffiliated/govg) has quit (Client Quit)
2016-10-18 18:54:15	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-18 18:54:41	-->	TheSeven (~quassel@rockbox/developer/TheSeven) has joined ##c++
2016-10-18 18:55:17	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-18 18:55:30	<--	pied (4407a170@gateway/web/freenode/ip.68.7.161.112) has left ##c++
2016-10-18 18:55:38	-->	miodi (~koodi@dsl-vntbrasgw1-54fa6e-245.dhcp.inet.fi) has joined ##c++
2016-10-18 18:56:41	<--	vikaton (uid59278@gateway/web/irccloud.com/x-mvlumsykcnpukpra) has quit (Quit: Connection closed for inactivity)
2016-10-18 18:57:29	-->	GavinMagnus (~simon@12.126.124.78.rev.sfr.net) has joined ##c++
2016-10-18 18:59:12	<--	koodi (~koodi@dsl-vntbrasgw1-54fa6e-245.dhcp.inet.fi) has quit (Ping timeout: 252 seconds)
2016-10-18 18:59:14	<--	Sculptor_ (~Sculptor@trivialand/master/sculptor) has quit (Ping timeout: 244 seconds)
2016-10-18 18:59:15	w3z	!interview
2016-10-18 18:59:17	nolyc	Do you often dream about the fact that references and pointers to an element obtained while it is owned by a node_type are invalidated if the element is successfully inserted?
2016-10-18 18:59:17	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-18 18:59:33	<--	Cohedrin_ (~textual@c-73-170-239-253.hsd1.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-10-18 19:00:24	w3z	i assume thats in regards to the associative containers
2016-10-18 19:00:25	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-18 19:03:08	w3z	i dont think ive had time to play with extract or merge, so dreaming about them, not yet
2016-10-18 19:03:17	-->	JoshS (~jshjsh@172.56.38.108) has joined ##c++
2016-10-18 19:03:47	<--	ReverseBlade (~user@213.74.212.180) has quit (Ping timeout: 256 seconds)
2016-10-18 19:04:06	<--	arescorpio (~arescorpi@152.171.92.97) has quit (Quit: Leaving.)
2016-10-18 19:05:28	<--	fflam (~mdt@ip72-192-136-18.sd.sd.cox.net) has quit (Read error: Connection reset by peer)
2016-10-18 19:06:25	<--	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has quit (Quit: Leaving.)
2016-10-18 19:06:39	w3z	{map<int,int> M{{1,1}}; auto h= M.extract(M.begin()); cout<<h; M.insert(move(h));}
2016-10-18 19:06:39	geordi	error: no match for 'operator<<' in 'cout << h' (operand types are 'ostream {aka ostream}' and '_Node_handle<int, pair<const int, int>, allocator<_Rb_tree_node<pair<const int, int> > > >')
2016-10-18 19:06:51	-->	symm- (~symm-@86.121.114.211) has joined ##c++
2016-10-18 19:07:49	w3z	: {map<int,int> M{{1,1}}; auto h= M.extract(M.begin()); cout<<h.value(); M.insert(move(h));}
2016-10-18 19:07:49		[19:07]
2016-10-18 19:07:57	w3z	{map<int,int> M{{1,1}}; auto h= M.extract(M.begin()); cout<<h.value(); M.insert(move(h));}
2016-10-18 19:07:58	geordi	error: 'class _Node_handle<int, pair<const int, int>, allocator<_Rb_tree_node<pair<const int, int> > > >' has no member named 'value'
2016-10-18 19:08:12	-->	fflam (~mdt@ip72-192-136-18.sd.sd.cox.net) has joined ##c++
2016-10-18 19:08:39	-->	unK_ (~drunK@host-81-190-235-217.dynamic.mm.pl) has joined ##c++
2016-10-18 19:10:03	-->	SwiftMatt (~Objective@162.242.94.230) has joined ##c++
2016-10-18 19:11:47	w3z	should have value, key and mapped member functions ... weird
2016-10-18 19:12:29	w3z	use --clang
2016-10-18 19:12:38	w3z	geordi: use --clang
2016-10-18 19:12:38	geordi	error: no member named 'extract' in '__1::map<int, int, __1::less<int>, __1::allocator<__1::pair<const int, int> > >'
2016-10-18 19:13:26	w3z	poor libc++ getting alpped
2016-10-18 19:13:28	w3z	lapped
2016-10-18 19:13:43	-->	kasper^ (~safaf@82.137.12.17) has joined ##c++
2016-10-18 19:14:07	-->	cd80 (~bf3@gateway/vpn/privateinternetaccess/emul16) has joined ##c++
2016-10-18 19:14:17	<--	fedepad (~fedepad@p4FE13A65.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-10-18 19:15:08	-->	Cohedrin (~textual@192.77.237.205) has joined ##c++
2016-10-18 19:16:15	<--	degva (~degva@190.232.18.40) has quit (Ping timeout: 256 seconds)
2016-10-18 19:18:29	-->	ReverseBlade (~user@213.74.212.180) has joined ##c++
2016-10-18 19:19:04	<--	fluter (~fluter@fedora/fluter) has quit (Ping timeout: 250 seconds)
2016-10-18 19:20:31	-->	samik (~smukherje@24.4.162.17) has joined ##c++
2016-10-18 19:22:27	-->	MulleDK19 (MulleDK19@unaffiliated/mulledk19) has joined ##c++
2016-10-18 19:23:08	-->	hatter (~hatter@213.80.106.150) has joined ##c++
2016-10-18 19:23:08		[19:23]
2016-10-18 19:26:14	<--	Freze (~Freze@unaffiliated/freze) has quit (Quit: Leaving)
2016-10-18 19:27:12	<--	hualet (~hualet@118.184.15.164) has quit (Remote host closed the connection)
2016-10-18 19:28:02	-->	Alucards (~Thunderbi@eduD25A.kent.ac.uk) has joined ##c++
2016-10-18 19:28:03	-->	pdtpatrick (~Patrick@199.201.64.2) has joined ##c++
2016-10-18 19:28:15	-->	fluter (~fluter@fedora/fluter) has joined ##c++
2016-10-18 19:28:30	<--	SwiftMatt (~Objective@162.242.94.230) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-10-18 19:29:35	chrisf	what's the rationale for adding extract & merge ?
2016-10-18 19:29:51	ERROH	geordi's clang uses libstdc++.
2016-10-18 19:30:27	<--	Haruno (~Haruno@unaffiliated/haruno) has quit (Read error: Connection reset by peer)
2016-10-18 19:31:13	ERROH	chrisf, it allows for copy-less and move-less transfer of elements between maps.
2016-10-18 19:31:28	-->	Haruno (~Haruno@unaffiliated/haruno) has joined ##c++
2016-10-18 19:31:45	-->	govg (~govg@unaffiliated/govg) has joined ##c++
2016-10-18 19:32:08	ERROH	>extract is the only way to change a key of a map element without reallocation:
2016-10-18 19:32:13	ERROH	Oh.
2016-10-18 19:32:20	<--	rockstar__ (~rockstar@24.169.2.81) has quit (Remote host closed the connection)
2016-10-18 19:33:08	<--	andyhuzhill (~Thunderbi@14.23.45.178) has quit (Ping timeout: 256 seconds)
2016-10-18 19:34:03	-->	velco (~chill@vlan-nesebar-60-155.comnet.bg) has joined ##c++
2016-10-18 19:36:38	-->	andyhuzhill (~Thunderbi@14.23.45.178) has joined ##c++
2016-10-18 19:38:27	-->	biglama (~Day_dream@ram31-1-82-234-77-18.fbx.proxad.net) has joined ##c++
2016-10-18 19:38:27		[19:38]
2016-10-18 19:41:36	<--	CoolBreeze (~CoolBreez@b.06.01a8.ip4.static.sl-reverse.com) has quit (Ping timeout: 244 seconds)
2016-10-18 19:42:06	<--	w41 (~w41@unaffiliated/w41) has quit (Ping timeout: 252 seconds)
2016-10-18 19:42:45	-->	SwiftMatt (~Objective@162.242.94.230) has joined ##c++
2016-10-18 19:43:59	-->	kaffeetrauma (~Thunderbi@n37.informatik.fh-dortmund.de) has joined ##c++
2016-10-18 19:44:00	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-18 19:44:16	-->	shingshang (~shingshan@101.164.159.8) has joined ##c++
2016-10-18 19:45:25	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-18 19:47:28	chrisf	ERROH: ok, i see how that works.
2016-10-18 19:48:31	-->	dminuoso_ (~dminuoso@unaffiliated/dminuoso) has joined ##c++
2016-10-18 19:49:00	<--	ReverseBlade (~user@213.74.212.180) has quit (Ping timeout: 256 seconds)
2016-10-18 19:49:23	-->	w41 (~w41@213.243.91.10) has joined ##c++
2016-10-18 19:49:23	<--	w41 (~w41@213.243.91.10) has quit (Changing host)
2016-10-18 19:49:23	-->	w41 (~w41@unaffiliated/w41) has joined ##c++
2016-10-18 19:49:35	<--	sssilver (~sssilver@2605:6000:ee54:b500:2d19:7f16:2eca:309) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-10-18 19:51:07	-->	jonge (~jonge@p5B11C675.dip0.t-ipconnect.de) has joined ##c++
2016-10-18 19:51:18	-->	DigiByteDev (~JT2@n218250011174.netvigator.com) has joined ##c++
2016-10-18 19:51:54	<--	mercurytw (~mercurytw@ip174-65-165-28.sd.sd.cox.net) has quit (Read error: Connection reset by peer)
2016-10-18 19:52:18	<--	glenfe (~glen@unaffiliated/glenfe) has quit (Quit: Restart)
2016-10-18 19:52:59	<--	Zxpr1jk (~zxpr1jk@user-69-1-61-138.knology.net) has quit (Quit: Leaving)
2016-10-18 19:53:01	w3z	not anymore
2016-10-18 19:53:35	<--	Dohplay_ (~Dohplay@2601:246:4400:f10c:f48c:786e:15df:70e7) has quit (Read error: Connection reset by peer)
2016-10-18 19:53:35		[19:53]
2016-10-18 19:53:42	-->	tocka (~tocka@78-56-107-170.static.zebra.lt) has joined ##c++
2016-10-18 19:53:47	w3z	eelis switched to libc++ last week when libstdc++ implemented has_unique_object_representations
2016-10-18 19:54:32	w3z	(since clang doesnt have the intrinsic it uses)
2016-10-18 19:54:37	<--	esas (~esas@unaffiliated/esas) has quit
2016-10-18 19:56:26	-->	hualet (~hualet@118.184.15.164) has joined ##c++
2016-10-18 19:56:48	ERROH	Things change quickly around here.
2016-10-18 19:57:30	<--	yumaokao (~yumaokao@218-161-54-18.HINET-IP.hinet.net) has quit (Ping timeout: 252 seconds)
2016-10-18 19:57:33	-->	xux (~xux@unaffiliated/xux) has joined ##c++
2016-10-18 19:59:12	<--	hatter (~hatter@213.80.106.150) has quit (Ping timeout: 260 seconds)
2016-10-18 19:59:22	-->	Davidbrcz (~david@2a02:120b:2c21:6260:4eeb:42ff:feca:49af) has joined ##c++
2016-10-18 19:59:46	<--	Haliucinas (~Haliucina@data-101-117.cgates.lt) has quit (Ping timeout: 256 seconds)
2016-10-18 20:01:28	<--	hualet (~hualet@118.184.15.164) has quit (Ping timeout: 256 seconds)
2016-10-18 20:01:29	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-18 20:01:50	<--	samik (~smukherje@24.4.162.17) has quit (Quit: samik)
2016-10-18 20:02:33	-->	Sonderblade (~Sonderbla@h-52-183.a157.priv.bahnhof.se) has joined ##c++
2016-10-18 20:02:37	-->	bocaneri (~bocaneri@about/linux/staff/sauvin) has joined ##c++
2016-10-18 20:02:45	<--	pdtpatrick (~Patrick@199.201.64.2) has quit (Ping timeout: 265 seconds)
2016-10-18 20:03:39	-->	bytebuns (~datahotdo@118.201.77.182) has joined ##c++
2016-10-18 20:04:02	-->	ReverseBlade (~user@213.74.212.180) has joined ##c++
2016-10-18 20:04:06	<--	datahotdog (~datahotdo@118.201.77.182) has quit (Read error: Connection reset by peer)
2016-10-18 20:04:12	<--	somaReverse (~amos@124.16.128.66) has quit (Quit: WeeChat 1.6)
2016-10-18 20:04:23	-->	systemfault (~rcyr@unaffiliated/rcyr) has joined ##c++
2016-10-18 20:04:41	<--	bytebuns (~datahotdo@118.201.77.182) has quit (Read error: Connection reset by peer)
2016-10-18 20:05:02	-->	bytebuns (~datahotdo@118.201.77.182) has joined ##c++
2016-10-18 20:06:03	<--	bytebuns (~datahotdo@118.201.77.182) has quit (Read error: Connection reset by peer)
2016-10-18 20:06:23	-->	bytebuns (~datahotdo@118.201.77.182) has joined ##c++
2016-10-18 20:06:59	w3z	you may have missed other cool stuff:
2016-10-18 20:07:01	w3z	<<tuple{42,"wee"s,vector({1,2})}
2016-10-18 20:07:02	geordi	{42, "wee", {1, 2}}
2016-10-18 20:07:03	-->	lolek (~lolek@unaffiliated/marcin) has joined ##c++
2016-10-18 20:07:16	<--	lolek (~lolek@unaffiliated/marcin) has left ##c++
2016-10-18 20:07:27	<--	bytebuns (~datahotdo@118.201.77.182) has quit (Read error: Connection reset by peer)
2016-10-18 20:07:47	w3z	{S<42>{};} template<auto>struct S{};
2016-10-18 20:07:47	geordi	error: 'auto' parameter not permitted in this context
2016-10-18 20:07:48	-->	bytebuns (~datahotdo@118.201.77.182) has joined ##c++
2016-10-18 20:07:53	w3z	geordi: use --clang
2016-10-18 20:07:54	geordi	<no output>
2016-10-18 20:08:33	w3z	geordi: --clang {auto [x,y] = make_tuple(1,2);}
2016-10-18 20:08:33	geordi	<no output>
2016-10-18 20:08:51	<--	bytebuns (~datahotdo@118.201.77.182) has quit (Read error: Connection reset by peer)
2016-10-18 20:08:51		[20:08]
2016-10-18 20:09:12	-->	bytebuns (~datahotdo@118.201.77.182) has joined ##c++
2016-10-18 20:09:54	-->	renn0xtk9 (~max@2a00:1398:9:fb01:58db:d52c:7e9c:f727) has joined ##c++
2016-10-18 20:09:56	<--	PocketKiller (PocketKill@codebottle.io/user/pocketkiller) has quit (Quit: QUIT ->> >>| PocketKiller |<< <<- QUIT)
2016-10-18 20:09:58	-->	blaxter (~blaxter@85.251.19.65.dyn.user.ono.com) has joined ##c++
2016-10-18 20:10:09	<--	aalex (~aalex@64.187.177.58) has quit (Ping timeout: 252 seconds)
2016-10-18 20:10:12	<--	bytebuns (~datahotdo@118.201.77.182) has quit (Read error: Connection reset by peer)
2016-10-18 20:10:32	<--	DigiByteDev (~JT2@n218250011174.netvigator.com) has quit (Quit: DigiByteDev)
2016-10-18 20:10:33	-->	bytebuns (~datahotdo@118.201.77.182) has joined ##c++
2016-10-18 20:11:15	w3z	template<class T> auto f(){if constexpr(is_integral_v<T>) return 42; else return "wee";}
2016-10-18 20:11:21	w3z	<<f<int>(),f<void>(); template<class T> auto f(){if constexpr(is_integral_v<T>) return 42; else return "wee";}
2016-10-18 20:11:22	geordi	42, wee
2016-10-18 20:11:32	<--	bytebuns (~datahotdo@118.201.77.182) has quit (Read error: Connection reset by peer)
2016-10-18 20:11:49	w3z	lots of new toys
2016-10-18 20:12:16	<--	quaz0r (quaz@c-67-183-243-24.hsd1.wa.comcast.net) has quit (Ping timeout: 260 seconds)
2016-10-18 20:13:01	-->	PocketKiller (PocketKill@1.ipv6.aegir.superbnc.com) has joined ##c++
2016-10-18 20:13:16	-->	fedepad (~fedepad@eduroam-88-37.zdv.uni-mainz.de) has joined ##c++
2016-10-18 20:13:24	--	PocketKiller is now known as Guest64144
2016-10-18 20:13:24	-->	aalex (~aalex@64.187.177.58) has joined ##c++
2016-10-18 20:14:03	<--	fluter (~fluter@fedora/fluter) has quit (Ping timeout: 256 seconds)
2016-10-18 20:14:09	-->	fedepad_ (~fedepad@eduroam-88-37.zdv.uni-mainz.de) has joined ##c++
2016-10-18 20:14:12	<--	fedepad (~fedepad@eduroam-88-37.zdv.uni-mainz.de) has quit (Read error: Connection reset by peer)
2016-10-18 20:14:20	<--	Haruno (~Haruno@unaffiliated/haruno) has quit (Read error: Connection reset by peer)
2016-10-18 20:15:24	<--	Davidbrcz (~david@2a02:120b:2c21:6260:4eeb:42ff:feca:49af) has quit (Ping timeout: 250 seconds)
2016-10-18 20:15:50	<--	renn0xtk9 (~max@2a00:1398:9:fb01:58db:d52c:7e9c:f727) has quit (Ping timeout: 250 seconds)
2016-10-18 20:16:25	ERROH	I like that perl assignment.
2016-10-18 20:16:37	-->	kszatan (~kszatan@91.241.2.251) has joined ##c++
2016-10-18 20:18:11	w3z	eew, dont wreck decomposition declaration by associating it with perl :)
2016-10-18 20:18:24	<--	SecondForm_Glenn (~Thunderbi@108.189.70.212) has quit (Ping timeout: 260 seconds)
2016-10-18 20:18:34	<--	CEnnis91 (uid3543@gateway/web/irccloud.com/x-brsvjpftrabupemg) has quit (Quit: Connection closed for inactivity)
2016-10-18 20:18:47	xaxxon	w3z, perl is a perfectly good language.   bad programmers can write bad code in any language.   They just happen to prefer perl
2016-10-18 20:19:37	w3z	geordi: --clang {auto [x,y] =S{};} struct S{int i{},j{};};
2016-10-18 20:19:38	geordi	<no output>
2016-10-18 20:19:58	w3z	perfectly cromulent
2016-10-18 20:20:49	w3z	ill save my perl diatribe for another day though
2016-10-18 20:21:41	-->	samik (~smukherje@24.4.162.17) has joined ##c++
2016-10-18 20:22:32	-->	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has joined ##c++
2016-10-18 20:24:02	-->	Xeshi (~root@46.101.237.93) has joined ##c++
2016-10-18 20:24:02		[20:24]
2016-10-18 20:25:02	-->	Elirips (~Elirips@242.109.22.178.ftth.as8758.net) has joined ##c++
2016-10-18 20:25:08	<--	xux (~xux@unaffiliated/xux) has quit (Quit: xux)
2016-10-18 20:25:09	<--	mkramer (~Adium@c-76-30-207-152.hsd1.tx.comcast.net) has quit (Quit: Leaving.)
2016-10-18 20:25:13	<--	dminuoso_ (~dminuoso@unaffiliated/dminuoso) has quit (Ping timeout: 260 seconds)
2016-10-18 20:25:51	-->	dminuoso_ (~dminuoso@unaffiliated/dminuoso) has joined ##c++
2016-10-18 20:25:55	-->	quaz0r (quaz@c-67-183-243-24.hsd1.wa.comcast.net) has joined ##c++
2016-10-18 20:27:27	<--	jason_zhang (~jason_zha@42.120.74.200) has quit
2016-10-18 20:28:57	-->	Vuks (~Vuks@unaffiliated/vuks69) has joined ##c++
2016-10-18 20:29:23	-->	KAHR-Alpha (~Alpha@AReims-652-1-18-165.w90-18.abo.wanadoo.fr) has joined ##c++
2016-10-18 20:29:58	Sonderblade	suppose you have: void do_fun(Iterator& iter) { if (blah) blah->do_blah(); iter(); if (blah) blah->do_blah2(); }
2016-10-18 20:30:15	-->	Davidbrcz (~david@107.181.137.134) has joined ##c++
2016-10-18 20:30:15	Sonderblade	and you call it: do_fun([&](){ whatever(); });
2016-10-18 20:30:49	Sonderblade	will that be as efficient/generate the same code as if you wrote: if (blah) blah->do_blah(); whatever(); if (blah) blah->do_blah2(); ?
2016-10-18 20:31:05	-->	rmunoz (~ricardo@37.red-217-126-176.staticip.rima-tde.net) has joined ##c++
2016-10-18 20:31:26	<--	Leovale (~Leovale@104-222-125-173.cpe.teksavvy.com) has quit (Read error: Connection reset by peer)
2016-10-18 20:31:52	Sonderblade	i think it should be but who knows
2016-10-18 20:32:28	<--	Synthbread (~Synthead@c-67-182-139-37.hsd1.wa.comcast.net) has quit (Ping timeout: 250 seconds)
2016-10-18 20:32:47	<--	GavinMagnus (~simon@12.126.124.78.rev.sfr.net) has left ##c++
2016-10-18 20:34:03	urdh	why does your iterator have an operator()?
2016-10-18 20:34:17	-->	J_W_ (~jiewang@183.62.9.178) has joined ##c++
2016-10-18 20:34:42	-->	seishun (~Kakera@62.85.100.180) has joined ##c++
2016-10-18 20:37:40	dyreshark	Sonderblade: assuming your compiler inlines Iterator::operator(), yeah. if not, you'll have an extra non-virtual function call.
2016-10-18 20:38:03	Sonderblade	do_fun() has template <typename Iterator>, i thought that was implied
2016-10-18 20:38:25	<--	jonge (~jonge@p5B11C675.dip0.t-ipconnect.de) has quit (Ping timeout: 256 seconds)
2016-10-18 20:38:43	-->	Sceorem (~Sceorem@xbn44-3-82-232-76-9.fbx.proxad.net) has joined ##c++
2016-10-18 20:39:04	-->	shaggycat (~quassel@95-37-215-204.dynamic.mts-nn.ru) has joined ##c++
2016-10-18 20:39:04		[20:39]
2016-10-18 20:39:12	urdh	well yes but the name doesn't make sense because you don't use it as an iterator
2016-10-18 20:39:17	<--	ferdna (~ferdna@cpe-69-23-141-130.elp.res.rr.com) has quit (Quit: Leaving)
2016-10-18 20:39:18	urdh	you use it as a functor
2016-10-18 20:39:18	<--	nwkj86 (~nwkj86@142.66.6.51.dyn.plus.net) has quit (Remote host closed the connection)
2016-10-18 20:39:44	-->	nwkj86 (~nwkj86@142.66.6.51.dyn.plus.net) has joined ##c++
2016-10-18 20:40:10	-->	Markow (~Markow@176.122.215.103) has joined ##c++
2016-10-18 20:40:40	urdh	anyway check the assembly if it's hot code and you've profiled it and so on
2016-10-18 20:40:44	Sonderblade	you're right. mea culpa
2016-10-18 20:41:08	urdh	with clang it looks like it does what you expect for a simple example: https://godbolt.org/g/kcmWmk
2016-10-18 20:41:49	<--	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has quit (Ping timeout: 256 seconds)
2016-10-18 20:42:17	-->	AquaL1te (~AquaL1te@unaffiliated/aqual1te) has joined ##c++
2016-10-18 20:43:58	-->	biberu (~biberu@c-cf2d72d5.08-441-7570702.cust.bredbandsbolaget.se) has joined ##c++
2016-10-18 20:44:16	<--	thex1 (~h4x0r@2601:642:4380:85a:21b:fcff:fe8f:c5ba) has left ##c++
2016-10-18 20:44:23	introom	hi.
2016-10-18 20:44:34	introom	under what scenario will this forward used?
2016-10-18 20:44:36	introom	template <class T> constexpr T&& forward(remove_reference_t<T>&& t) noexcept;
2016-10-18 20:44:55	introom	I thought for most cases, forwarding is done for lvalue, not rvalue.
2016-10-18 20:45:25	<--	nullfxn (~nullFxn@107-147-108-164.res.bhn.net) has quit (Ping timeout: 248 seconds)
2016-10-18 20:46:04	-->	Haliucinas (~Haliucina@88-119-97-225.static.zebra.lt) has joined ##c++
2016-10-18 20:46:07	Sonderblade	urdh: clang is very good, but i wonder if vs is as good
2016-10-18 20:46:39	-->	nullfxn (~nullFxn@107-147-108-164.res.bhn.net) has joined ##c++
2016-10-18 20:46:49	velco	not even close
2016-10-18 20:47:05	-->	rendar (~rendar@host68-137-dynamic.59-82-r.retail.telecomitalia.it) has joined ##c++
2016-10-18 20:47:12	<--	samik (~smukherje@24.4.162.17) has quit (Quit: samik)
2016-10-18 20:47:44	urdh	Sonderblade: can't help you there, sorry
2016-10-18 20:48:11	et	introom: forward is used if you have a forwarding/universal reference, which can bind to both lvalues and rvalues
2016-10-18 20:48:11	<--	dminuoso_ (~dminuoso@unaffiliated/dminuoso) has quit (Remote host closed the connection)
2016-10-18 20:48:24	k_sze[work]	I want to confirm if I understand basic_ostream's operator<<.
2016-10-18 20:49:16	introom	et: but inside that wrapper function with universal reference, all the parameters to be forwarded are (as usual) lvalues.
2016-10-18 20:49:28	k_sze[work]	When I'm just inserting some std::string, cstring, or numeric values to an ofstream, I'm basically using overloads 1 to 7, right? http://en.cppreference.com/w/cpp/io/basic_ostream/operator_ltlt
2016-10-18 20:49:35	introom	so any use-case that the overload for remove_reference_t<T>&& t will be used ?
2016-10-18 20:50:13	k_sze[work]	overload 8 doesn't come into play in those cases, correct?
2016-10-18 20:50:50	-->	nostoi (~nostoi@211.red-83-55-242.dynamicip.rima-tde.net) has joined ##c++
2016-10-18 20:50:56	urdh	k_sze[work], I can't see how you'd get an std::string or char* through overloads 1-7
2016-10-18 20:50:59	<--	adempus (~adempus@ool-43529049.dyn.optonline.net) has quit (Quit: Leaving)
2016-10-18 20:51:03	<--	meth (~meth@unaffiliated/meth) has quit (Quit: Snoochie Boochies!)
2016-10-18 20:51:34	urdh	<< (void*)&foo; int foo; // the void* overload prints a pointer value IIRC
2016-10-18 20:51:34	geordi	0x5d0c84
2016-10-18 20:51:59	k_sze[work]	hmm, right
2016-10-18 20:52:16	<--	biglama (~Day_dream@ram31-1-82-234-77-18.fbx.proxad.net) has quit (Remote host closed the connection)
2016-10-18 20:52:35	-->	afiefh (afiefh@nat/ibm/x-nfuojsdsnaiadaaq) has joined ##c++
2016-10-18 20:52:49	urdh	the std::string overload is in <string>: http://en.cppreference.com/w/cpp/string/basic_string/operator_ltltgtgt
2016-10-18 20:54:31	<--	whaletechno (~whaletech@unaffiliated/whaletechno) has quit (Quit: ha det bra)
2016-10-18 20:54:31		[20:54]
2016-10-18 20:54:32	-->	dminuoso_ (~dminuoso@unaffiliated/dminuoso) has joined ##c++
2016-10-18 20:56:43	urdh	and your char* overloads are free functions as opposed to member functions: http://en.cppreference.com/w/cpp/io/basic_ostream/operator_ltlt2
2016-10-18 20:56:53	k_sze[work]	oh god...
2016-10-18 20:57:15	-->	eduardas_m (~eduardas_@213.197.143.19) has joined ##c++
2016-10-18 20:57:31	<--	Davidbrcz (~david@107.181.137.134) has quit (Quit: Leaving)
2016-10-18 20:57:41	-->	corsaere (~corsaere@unaffiliated/corsaere) has joined ##c++
2016-10-18 20:58:05	-->	destiny (uid73933@gateway/web/irccloud.com/x-iupafutzmohhdsbd) has joined ##c++
2016-10-18 20:58:26	-->	Davidbrcz (~david@2a02:120b:2c21:6260:4eeb:42ff:feca:49af) has joined ##c++
2016-10-18 20:58:37	k_sze[work]	But then what happens to failbit and badbit for those char* and std::string overloads?
2016-10-18 20:58:47	<--	Betal (~Betal@unaffiliated/betal) has quit (Remote host closed the connection)
2016-10-18 20:59:02	k_sze[work]	They don't seem to make any mention.
2016-10-18 20:59:10	<--	nealshire (~Nealshire@unaffiliated/nealshire) has quit (Quit: Leaving)
2016-10-18 20:59:11	-->	meth (~meth@unaffiliated/meth) has joined ##c++
2016-10-18 21:00:10	urdh	failbit isn't set for the integer overloads either as far as I can tell
2016-10-18 21:00:29	urdh	how do you fail to output a string anyway?
2016-10-18 21:01:11	k_sze[work]	urdh: if I write to a file over NFS on Linux and the volume disappears?
2016-10-18 21:01:19	k_sze[work]	Or if the disk fills up?
2016-10-18 21:01:30	urdh	"If the end of file condition was encountered during output (put().failed() == true), sets ios::badbit."
2016-10-18 21:01:41	k_sze[work]	yes, I saw that part.
2016-10-18 21:02:02	-->	aricz (~aricz@82.194.220.89) has joined ##c++
2016-10-18 21:02:16	k_sze[work]	Though it's not clear whether a file that disappears this way results in end of file.
2016-10-18 21:02:20	<--	aricz (~aricz@82.194.220.89) has left ##c++
2016-10-18 21:02:30	-->	aricz (~aricz@82.194.220.89) has joined ##c++
2016-10-18 21:02:56	urdh	true, but that's really none of basic_ostream's business
2016-10-18 21:02:57	k_sze[work]	This is possibly platform-specific.
2016-10-18 21:03:16	urdh	probably basic_ofstream or basic_filebuf has something on that
2016-10-18 21:03:49	<--	FreeBirdLjj (~freebirdl@202.119.43.196) has quit (Remote host closed the connection)
2016-10-18 21:04:37	-->	calincru (~calin@141.85.227.225) has joined ##c++
2016-10-18 21:05:30	<--	ipronin (~ipronin@8.25.196.25) has quit (Ping timeout: 256 seconds)
2016-10-18 21:06:27	-->	calincru_ (~calin@141.85.227.225) has joined ##c++
2016-10-18 21:07:15	-->	yumaokao (~yumaokao@218-161-54-18.HINET-IP.hinet.net) has joined ##c++
2016-10-18 21:07:56	-->	jackhum (uid97400@gateway/web/irccloud.com/x-xmvnvznuwoihmexd) has joined ##c++
2016-10-18 21:08:05	-->	calincru__ (~calin@141.85.227.229) has joined ##c++
2016-10-18 21:08:21	<--	mangolisk (~mangolisk@S0106848dc7ebaa06.vc.shawcable.net) has quit (Read error: Connection reset by peer)
2016-10-18 21:09:08	k_sze[work]	If I understand correctly, it *will* be an eof condition, regardless of platform. http://en.cppreference.com/w/cpp/io/basic_streambuf/sputn
2016-10-18 21:09:27	<--	calincru (~calin@141.85.227.225) has quit (Ping timeout: 265 seconds)
2016-10-18 21:09:28	<--	calincru__ (~calin@141.85.227.229) has quit (Read error: Connection reset by peer)
2016-10-18 21:09:37	-->	calincru__ (~calin@141.85.227.229) has joined ##c++
2016-10-18 21:09:37		[21:09]
2016-10-18 21:09:49	-->	eduardas_ (~eduardas_@213.197.143.19) has joined ##c++
2016-10-18 21:10:00	k_sze[work]	Because ofstream is backed by basic_filebuf, and the only way for sputn/xsputn to fail is by getting Traits::eof() from sputc.
2016-10-18 21:10:12	<--	eduardas_m (~eduardas_@213.197.143.19) has quit (Ping timeout: 260 seconds)
2016-10-18 21:10:36	<--	symm- (~symm-@86.121.114.211) has quit (Ping timeout: 260 seconds)
2016-10-18 21:11:08	-->	zagabar (~zagabar@unaffiliated/zagabar) has joined ##c++
2016-10-18 21:11:53	<--	calincru_ (~calin@141.85.227.225) has quit (Ping timeout: 260 seconds)
2016-10-18 21:12:25	<--	EvilPenguin (~EvilPengu@2605:e000:6189:9600:1c85:6c7b:8524:a9f7) has quit (Ping timeout: 256 seconds)
2016-10-18 21:14:46	<--	aalex (~aalex@64.187.177.58) has quit (Ping timeout: 265 seconds)
2016-10-18 21:17:51	-->	FreeBirdLjj (~freebirdl@202.119.43.196) has joined ##c++
2016-10-18 21:18:09	-->	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has joined ##c++
2016-10-18 21:18:26	-->	jablo (~jablo@80.243.123.111) has joined ##c++
2016-10-18 21:18:33	-->	Jiwan1 (~jeangu@212.247.124.2) has joined ##c++
2016-10-18 21:18:34	<--	calincru__ (~calin@141.85.227.229) has quit (Quit: Konversation terminated!)
2016-10-18 21:19:22	-->	calincru__ (~calin@141.85.227.229) has joined ##c++
2016-10-18 21:20:34	<--	Jiwan (~jeangu@212.247.124.2) has quit (Ping timeout: 265 seconds)
2016-10-18 21:21:00	-->	serycjon (~jonas@wced-92-216-32-147.feld.cvut.cz) has joined ##c++
2016-10-18 21:21:55	-->	shirty (~shirty@155.170-247-81.adsl-dyn.isp.belgacom.be) has joined ##c++
2016-10-18 21:22:34	k_sze[work]	Anyhow, if we put all of the underlying OS and std lib implementation aside, what's the sure way to check if my stream insertion has succeeded? Just do `if (outfile << "foobar")`?
2016-10-18 21:22:44	<--	ville (~ville@176-93-21-30.bb.dnainternet.fi) has quit (Ping timeout: 250 seconds)
2016-10-18 21:22:51	-->	Acs (~Acs@host81-152-189-71.range81-152.btcentralplus.com) has joined ##c++
2016-10-18 21:22:59	<--	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has quit (Ping timeout: 245 seconds)
2016-10-18 21:24:16	-->	omnipot (~Dawid@eop137.internetdsl.tpnet.pl) has joined ##c++
2016-10-18 21:24:54	<--	Acs (~Acs@host81-152-189-71.range81-152.btcentralplus.com) has quit (Client Quit)
2016-10-18 21:24:54		[21:24]
2016-10-18 21:24:56	-->	MicroCheapFx (~quassel@62.102.229.129) has joined ##c++
2016-10-18 21:24:56	-->	yo5phz (~yo5phz___@89.137.124.138) has joined ##c++
2016-10-18 21:25:30	<--	serycjon (~jonas@wced-92-216-32-147.feld.cvut.cz) has quit (Ping timeout: 252 seconds)
2016-10-18 21:27:32	urdh	i guess
2016-10-18 21:28:24	-->	jan64 (~jan64@adlh205.neoplus.adsl.tpnet.pl) has joined ##c++
2016-10-18 21:28:58	<--	Jiwan1 (~jeangu@212.247.124.2) has quit (Quit: Leaving.)
2016-10-18 21:29:20	<--	rmunoz (~ricardo@37.red-217-126-176.staticip.rima-tde.net) has quit (Ping timeout: 260 seconds)
2016-10-18 21:29:33	-->	Jiwan (~jeangu@212.247.124.2) has joined ##c++
2016-10-18 21:29:40	-->	hatter (~hatter@h-90-120.a137.corp.bahnhof.se) has joined ##c++
2016-10-18 21:31:09	<--	zap0 (~moofy@14-201-222-143.tpgi.com.au) has quit (Quit: zap0)
2016-10-18 21:32:03	-->	GavinMagnus (~simon@194.254.61.161) has joined ##c++
2016-10-18 21:32:28	<--	KAHR-Alpha (~Alpha@AReims-652-1-18-165.w90-18.abo.wanadoo.fr) has quit (Remote host closed the connection)
2016-10-18 21:34:13	<--	govg (~govg@unaffiliated/govg) has quit (Ping timeout: 245 seconds)
2016-10-18 21:34:29	-->	Xanather (~xanather@unaffiliated/xanather) has joined ##c++
2016-10-18 21:35:39	-->	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has joined ##c++
2016-10-18 21:36:59	-->	benkant (~benkant@vpn-tokyo-161-202-65-52.hosts.getcloakvpn.com) has joined ##c++
2016-10-18 21:37:21	-->	marcofe (~marcofe@test-centre4-gw.estec.esa.int) has joined ##c++
2016-10-18 21:38:06	-->	rriemann (~rriemann@dhcp-67-135.ixxi.ens-lyon.fr) has joined ##c++
2016-10-18 21:38:18	-->	interop_madness (~interop_m@unaffiliated/interop-madness/x-8858653) has joined ##c++
2016-10-18 21:38:20	<--	benkant_ (~benkant@vpn-tokyo-161-202-65-52.hosts.getcloakvpn.com) has quit (Ping timeout: 250 seconds)
2016-10-18 21:38:27	<--	o] (~achubergs@pool-108-54-98-223.nycmny.fios.verizon.net) has quit (Read error: Connection reset by peer)
2016-10-18 21:39:01	<--	jokleinn (jokleinn@unaffiliated/jokleinn) has quit (Remote host closed the connection)
2016-10-18 21:39:09	-->	tarspace (~tarspace@213.143.60.112) has joined ##c++
2016-10-18 21:39:18	-->	jokleinn (jokleinn@unaffiliated/jokleinn) has joined ##c++
2016-10-18 21:39:41	-->	o] (~achubergs@pool-108-54-98-223.nycmny.fios.verizon.net) has joined ##c++
2016-10-18 21:39:48	-->	lsk (~lsk@enucs/member/lsk) has joined ##c++
2016-10-18 21:40:04	<--	seishun (~Kakera@62.85.100.180) has quit (Ping timeout: 256 seconds)
2016-10-18 21:40:04		[21:40]
2016-10-18 21:40:13	-->	serycjon (~jonas@k333stu2.felk.cvut.cz) has joined ##c++
2016-10-18 21:40:31	<--	SwiftMatt (~Objective@162.242.94.230) has quit (Read error: Connection reset by peer)
2016-10-18 21:40:57	-->	szulak_ (uid162164@gateway/web/irccloud.com/x-efdvsiudokzleipj) has joined ##c++
2016-10-18 21:40:57	<--	ddboline (~quassel@pool-72-80-130-28.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-10-18 21:41:41	-->	Synthbread (~Synthead@c-67-182-139-37.hsd1.wa.comcast.net) has joined ##c++
2016-10-18 21:42:25	<--	edman007 (~edman007@pdpc/supporter/active/edman007) has quit (Ping timeout: 260 seconds)
2016-10-18 21:42:44	<--	crazy_pete (~peter@2602:306:32eb:40d0::49) has quit (Quit: Leaving)
2016-10-18 21:43:09	-->	ddboline (~quassel@pool-72-80-130-28.nycmny.fios.verizon.net) has joined ##c++
2016-10-18 21:44:17	<--	TMM (~hp@fsf/member/pdpc.professional.tmm) has quit (Quit: Ex-Chat)
2016-10-18 21:45:03	<--	drockwood942 (~drockwood@2601:245:0:de2b:18df:4127:717:ffef) has quit (Read error: Connection reset by peer)
2016-10-18 21:46:30	-->	naraku9333 (~quassel@unaffiliated/naraku9333) has joined ##c++
2016-10-18 21:47:38	<--	jan64 (~jan64@adlh205.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 265 seconds)
2016-10-18 21:49:16	-->	edman007 (~edman007@pdpc/supporter/active/edman007) has joined ##c++
2016-10-18 21:49:26	<--	naraku_9333 (~quassel@unaffiliated/naraku9333) has quit (Ping timeout: 250 seconds)
2016-10-18 21:50:03	<--	Synthbread (~Synthead@c-67-182-139-37.hsd1.wa.comcast.net) has quit (Ping timeout: 245 seconds)
2016-10-18 21:50:56	sim642	Does forward_list have a way of concatenating two forward_lists into one?
2016-10-18 21:51:04	-->	matkatmu_ (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-10-18 21:51:09	<--	FreeBirdLjj (~freebirdl@202.119.43.196) has quit (Remote host closed the connection)
2016-10-18 21:51:58	-->	brk_ (~brk_@109.202.145.146) has joined ##c++
2016-10-18 21:52:08	-->	rzeck (~robert@84-10-11-234.static.chello.pl) has joined ##c++
2016-10-18 21:52:25	<--	Jiwan (~jeangu@212.247.124.2) has quit (Quit: Leaving.)
2016-10-18 21:52:28	<--	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has quit (Ping timeout: 265 seconds)
2016-10-18 21:52:33	-->	Alucards1 (~Thunderbi@eduD25A.kent.ac.uk) has joined ##c++
2016-10-18 21:52:37	-->	Jiwan (~jeangu@212.247.124.2) has joined ##c++
2016-10-18 21:53:10	-->	viggirl (~viggirl@183.94.21.113) has joined ##c++
2016-10-18 21:53:44	-->	FreeBirdLjj (~freebirdl@218.94.142.72) has joined ##c++
2016-10-18 21:53:59	-->	DImez (DImez@203-213-19-16.tpgi.com.au) has joined ##c++
2016-10-18 21:54:21	<--	Alucards (~Thunderbi@eduD25A.kent.ac.uk) has quit (Ping timeout: 260 seconds)
2016-10-18 21:55:37	urdh	!stdref forward_list
2016-10-18 21:55:37		[21:55]
2016-10-18 21:55:38	refbot	std::forward_list: http://en.cppreference.com/w/cpp/container/forward_list
2016-10-18 21:55:53	urdh	sim642, forward_list::merge or forward_list::splice_after
2016-10-18 21:56:06	k_sze[work]	Hmm, I didn't know I don't have to manual close ofstreams. http://en.cppreference.com/w/cpp/io/basic_ofstream/close
2016-10-18 21:56:50	k_sze[work]	But I wonder what happens if do ofstream.open() multiple times without it ever going out of scope.
2016-10-18 21:58:24	<--	Jiwan (~jeangu@212.247.124.2) has quit (Quit: Leaving.)
2016-10-18 21:59:01	urdh	k_sze[work], std::basic_filebuf::open says "If the associated file was already open, returns a null pointer right away." which indicates a failure
2016-10-18 21:59:04	urdh	so i guess don't do it :)
2016-10-18 21:59:18	-->	Jiwan (~jeangu@212.247.124.2) has joined ##c++
2016-10-18 21:59:20	k_sze[work]	right. :)
2016-10-18 22:00:34	urdh	man, the whole streams api is annoying
2016-10-18 22:00:36	<--	nostoi (~nostoi@211.red-83-55-242.dynamicip.rima-tde.net) has quit (Quit: Verlassend)
2016-10-18 22:00:55	-->	iterati (~vangelis@79.103.254.36.dsl.dyn.forthnet.gr) has joined ##c++
2016-10-18 22:01:25	k_sze[work]	Yes.
2016-10-18 22:01:36	<--	przemkovv-bis (~przemkovv@d82-83.icpnet.pl) has quit (Ping timeout: 256 seconds)
2016-10-18 22:02:12	<--	tgrkzus (~tgrkzus@60-242-7-87.static.tpgi.com.au) has quit (Quit: bye)
2016-10-18 22:03:04	-->	ipronin (~ipronin@96-95-197-97-static.hfc.comcastbusiness.net) has joined ##c++
2016-10-18 22:04:41	<--	DImez (DImez@203-213-19-16.tpgi.com.au) has quit (Remote host closed the connection)
2016-10-18 22:04:41	-->	kenden (~dsps@85.211.209.162) has joined ##c++
2016-10-18 22:05:05	-->	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has joined ##c++
2016-10-18 22:05:16	-->	DImez (DImez@203-213-19-16.tpgi.com.au) has joined ##c++
2016-10-18 22:05:31	<--	dave0x6d (uid190567@gateway/web/irccloud.com/x-klhajderdjskmuaz) has quit (Quit: Connection closed for inactivity)
2016-10-18 22:07:19	-->	gnidmoo (~gnidmoo@2a01:e35:2f2c:320:eefe:451c:d8c8:6e3a) has joined ##c++
2016-10-18 22:07:56	<--	ipronin (~ipronin@96-95-197-97-static.hfc.comcastbusiness.net) has quit (Ping timeout: 265 seconds)
2016-10-18 22:08:03	sim642	urdh, merge doesn't concatenate, it merges; splice_after is O(n) for some crazy reason
2016-10-18 22:08:06	k_sze[work]	(actually, if you think the streams api is annoying, you should take a look at the ffmpeg api)
2016-10-18 22:08:15	<--	DImez (DImez@203-213-19-16.tpgi.com.au) has quit (Remote host closed the connection)
2016-10-18 22:08:16	-->	riemann (~riemann@84-10-11-234.static.chello.pl) has joined ##c++
2016-10-18 22:08:18	k_sze[work]	the ffmpeg api is an absolute clustefuck
2016-10-18 22:10:05	<--	tarspace (~tarspace@213.143.60.112) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-10-18 22:10:29	<--	velco (~chill@vlan-nesebar-60-155.comnet.bg) has quit (Quit: Leaving...)
2016-10-18 22:10:33	-->	DImez (DImez@203-213-19-16.tpgi.com.au) has joined ##c++
2016-10-18 22:11:17	urdh	lots of APIs are clusterfucks :)
2016-10-18 22:11:17		[22:11]
2016-10-18 22:11:52	urdh	sim642, so make a copy and then merge if that's what you're after
2016-10-18 22:11:59	-->	SwiftMatt (~Objective@162.242.94.230) has joined ##c++
2016-10-18 22:12:10	dminuoso_	geordi: template<typename T, typename std::enable_if_t<std::is_function<std::remove_pointer_t<T>>::value, int> = 0 > void f(T t) {} void g() {} int main() { f(&g); }
2016-10-18 22:12:10	geordi	<no output>
2016-10-18 22:12:18	dminuoso_	Why do I not have to prepend a typename before each of those nested templates?
2016-10-18 22:12:21	dminuoso_	Are they not all dependent types?
2016-10-18 22:13:03	-->	tarspace (~tarspace@213.143.60.112) has joined ##c++
2016-10-18 22:13:11	<--	DImez (DImez@203-213-19-16.tpgi.com.au) has quit (Read error: Connection reset by peer)
2016-10-18 22:14:41	-->	brwsr (~textual@138.68.157.193) has joined ##c++
2016-10-18 22:14:59	<--	xaxxon (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has quit (Quit: Leaving)
2016-10-18 22:15:36	<--	viggirl (~viggirl@183.94.21.113) has left ##c++
2016-10-18 22:15:39	<--	tarspace (~tarspace@213.143.60.112) has quit (Client Quit)
2016-10-18 22:15:39	<--	brwsr (~textual@138.68.157.193) has quit (Client Quit)
2016-10-18 22:15:39	-->	viggirl (~viggirl@183.94.21.113) has joined ##c++
2016-10-18 22:15:42	-->	Dumblez0r (~Dumblez0r@77.72.50.150) has joined ##c++
2016-10-18 22:16:02	-->	Kirrahe (~kirrahe@ip51cc4257.adsl-surfen.hetnet.nl) has joined ##c++
2016-10-18 22:16:03	-->	breakfast (~breakfast@217.138.28.22) has joined ##c++
2016-10-18 22:16:11	sim642	urdh, I wouldn't want to copy for an operation which is theoretically O(1)
2016-10-18 22:16:20	sim642	just pointing around a single pointer
2016-10-18 22:17:09	<--	viggirl (~viggirl@183.94.21.113) has quit (Remote host closed the connection)
2016-10-18 22:18:14	<--	zagabar (~zagabar@unaffiliated/zagabar) has quit (Quit: WeeChat 1.5)
2016-10-18 22:18:29	urdh	right, I though merge did that but apparently it does sorting as well
2016-10-18 22:19:14	<--	Goplat (~goplat@reactos/developer/Goplat) has quit (Remote host closed the connection)
2016-10-18 22:19:19	-->	fluter (~fluter@fedora/fluter) has joined ##c++
2016-10-18 22:20:05	-->	cybex_ (~cybex_@154.69.136.192) has joined ##c++
2016-10-18 22:20:12	--	irc: disconnected from server
2016-10-18 23:55:20	-->	alyptik (~alyptik@unaffiliated/alyptik) has joined ##c++
2016-10-18 23:55:20		[23:55]
2016-10-18 23:55:20	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || https://isocpp.org/faq || pastes: http://melpon.org/wandbox"
2016-10-18 23:55:20	--	Topic set by V-ille (~ville@81-175-149-170.bb.dnainternet.fi) on Fri, 18 Sep 2015 07:13:01
2016-10-18 23:55:20	--	Channel ##c++: 964 nicks (0 ops, 0 voices, 964 normals)
2016-10-18 23:55:20	***	Buffer Playback...
2016-10-18 23:55:20	destiny	[08:30:51] it's the target of boost right ? [08:30:51]
2016-10-18 23:55:20	urdh	[08:30:52] pulling in boost for just a tribool is horrible [08:30:52]
2016-10-18 23:55:20	destiny	[08:31:03] oh ? [08:31:03]
2016-10-18 23:55:20	TinoDidriksen	[08:31:20] No it isn't, just use Boost. [08:31:20]
2016-10-18 23:55:20	destiny	[08:31:24] ok :) [08:31:24]
2016-10-18 23:55:20	urdh	[08:31:47] if you're just using the tribool, pulling in boost which is freakin' huge is probably not the best solution [08:31:47]
2016-10-18 23:55:20	urdh	[08:31:58] unless you're using boost for other stuff as well [08:31:58]
2016-10-18 23:55:20	urdh	[08:32:11] (for some definition of "best") [08:32:11]
2016-10-18 23:55:20	destiny	[08:32:13] yes for vector stuff like that [08:32:13]
2016-10-18 23:55:20	destiny	[08:32:28] anyway still better than our "local type" provided by some ugly middleware in our app [08:32:28]
2016-10-18 23:55:20	guest100	[09:00:16] Can we use enum class enumerators as cases in switch statement?? [09:00:16]
2016-10-18 23:55:20	Eelis	[09:00:33] sure [09:00:33]
2016-10-18 23:55:20	urdh	[09:01:20] that's the whole point [09:01:20]
2016-10-18 23:55:20	AStorm	[09:05:25] here's a fun question: what's the recommended way to default initialize struct fields? just adding braces involves removing aggregate initialization, how can I get that behavior back easily? [09:05:25]
2016-10-18 23:55:20	AStorm	[09:06:20] is there some sort of syntax for default list initialization constructor? [09:06:20]
2016-10-18 23:55:20	AStorm	[09:08:42] I see this part about "no default member initializers" has been changed in C++14 [09:08:42]
2016-10-18 23:55:20	AStorm	[09:08:52] hmm, it seems that piece of code was C++11 [09:08:52]
2016-10-18 23:55:20	AStorm	[09:08:57] time to change some flags. [09:08:57]
2016-10-18 23:55:20	AStorm	[09:10:22] hmm, it seems I've hit a bug in gcc 4.9? [09:10:22]
2016-10-18 23:55:20	AStorm	[09:14:02] hmm, might be enum class members interfering [09:14:02]
2016-10-18 23:55:20	Drzacek	[09:15:24] Hi [09:15:24]
2016-10-18 23:55:20	Drzacek	[09:15:34] I can't define structs as volatile? [09:15:34]
2016-10-18 23:55:20	va	[09:15:56] what good would that do [09:15:56]
2016-10-18 23:55:20	va	[09:16:26] geordi: { struct z { int f; }; volatile struct z x; } [09:16:26]
2016-10-18 23:55:20	geordi	[09:16:26] <no output> [09:16:26]
2016-10-18 23:55:20	AStorm	[09:17:25] http://melpon.org/wandbox/permlink/5uaVh0pFDVooRxQR <- GCC 4.9 bug, yes? (GCC 5.1 and clang 3.8 accept it in C++14 mode, GCC 4.9 rejects in C++1y) [09:17:25]
2016-10-18 23:55:20	Drzacek	[09:17:52] geordi: { typedef volatile struct { int f; }mystruct; } [09:17:52]
2016-10-18 23:55:20	geordi	[09:17:53] <no output> [09:17:53]
2016-10-18 23:55:20	urdh	[09:18:18] I would presume that c++14 support is incomplete if you use c++1y [09:18:18]
2016-10-18 23:55:20	AStorm	[09:18:34] urdh: allegedly GCC 4.9 supports this part of C++14 [09:18:34]
2016-10-18 23:55:20	AStorm	[09:18:42] probably the status page is lying [09:18:42]
2016-10-18 23:55:20	urdh	[09:18:45] so calling it a "bug" would be arguably incorrect [09:18:45]
2016-10-18 23:55:20	urdh	[09:18:51] probably that, then [09:18:51]
2016-10-18 23:55:20	AStorm	[09:18:54] no, never mind [09:18:54]
2016-10-18 23:55:20	AStorm	[09:19:09] it explicitly says 5 in Member initializers and aggregates [09:19:09]
2016-10-18 23:55:20	urdh	[09:19:18] there you go :) [09:19:18]
2016-10-18 23:55:20	AStorm	[09:19:21] ok, so how can I emulate this behavior with the ancient C++11 compiler? [09:19:21]
2016-10-18 23:55:20	AStorm	[09:19:35] need what constructors? [09:19:35]
2016-10-18 23:55:20	AStorm	[09:21:02] probably default move, copy and plain constructor; and an initializer_list constructor [09:21:02]
2016-10-18 23:55:20	AStorm	[09:21:40] or is it a constructor with all the fields I need? (yuck but ok) [09:21:40]
2016-10-18 23:55:20	AStorm	[09:29:50] hmm, the latter. it is not fun, pity I get to live with this old compiler. [09:29:50]
2016-10-18 23:55:20	AStorm	[09:31:17] this involves making a simple struct implement all rule of 7 [09:31:17]
2016-10-18 23:55:20	AStorm	[09:31:24] (fortunately default) [09:31:24]
2016-10-18 23:55:20	lloda	[09:31:42] the lack of int/complex ops in std::complex is a major pain in the ass :-/ [09:31:42]
2016-10-18 23:55:20	bumbar	[09:36:09] why do i have to type template when calling a template member function in a function to which i pass the parameter? eg: void f(const Objec& o) { o.template call<int>(); } [09:36:09]
2016-10-18 23:55:20	systemfault	[09:39:43] bumbar: Is Object a tmplate parameter? [09:39:43]
2016-10-18 23:55:20	bumbar	[09:39:56] yes [09:39:56]
2016-10-18 23:55:20	systemfault	[09:43:14] Then it's normal, Object::call is a dependent name and you need template to disambiguate that <> are not the < or > operators [09:43:14]
2016-10-18 23:55:20	systemfault	[09:43:18] bumbar: http://en.cppreference.com/w/cpp/language/dependent_name#The_template_disambiguator_for_dependent_names [09:43:18]
2016-10-18 23:55:20	bumbar	[09:48:28] systemfault, thanks [09:48:28]
2016-10-18 23:55:20	***	Playback Complete.
2016-10-18 23:55:51	--	Channel created on Fri, 14 Sep 2001 17:15:35
2016-10-18 23:58:01	-->	karab44 (~karab44@unaffiliated/karab44) has joined ##c++
2016-10-18 23:59:01	-->	zero_byte (zer0@nat/redhat/x-lmuotrjgdvhdhvsm) has joined ##c++
2016-10-18 23:59:43	-->	zlck (~koodi@dsl-vntbrasgw1-54fa6e-245.dhcp.inet.fi) has joined ##c++
2016-10-19 00:00:00	<--	alienbot (~quassel@116.6.99.222) has quit (Remote host closed the connection)
2016-10-19 00:00:33	<--	DigiByteDev (~JT2@31.6.45.41) has quit (Quit: DigiByteDev)
2016-10-19 00:00:38	<--	Davidbrcz (~david@2a02:120b:2c21:6260:4eeb:42ff:feca:49af) has quit (Quit: Leaving)
2016-10-19 00:00:49	-->	StyxAlso (~markg@118.102.104.245) has joined ##c++
2016-10-19 00:01:59	<--	J_W_ (~jiewang@183.62.9.178) has quit (Quit: Leaving)
2016-10-19 00:02:34	-->	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has joined ##c++
2016-10-19 00:03:15	-->	bjz (~bjz@14-201-215-168.tpgi.com.au) has joined ##c++
2016-10-19 00:03:21	<--	miodi (~koodi@dsl-vntbrasgw1-54fa6e-245.dhcp.inet.fi) has quit (Ping timeout: 252 seconds)
2016-10-19 00:06:39	<--	Forgo (~U_Forgo_T@unaffiliated/forgo) has quit (Ping timeout: 252 seconds)
2016-10-19 00:07:19	<--	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has quit (Ping timeout: 265 seconds)
2016-10-19 00:13:00		[00:07]
2016-10-19 00:14:04	<--	edwinjarvis (~oldschool@unaffiliated/edwinjarvis) has quit (Ping timeout: 260 seconds)
2016-10-19 00:20:00		[00:14]
2016-10-19 00:20:04	-->	edwinjarvis (~oldschool@unaffiliated/edwinjarvis) has joined ##c++
2016-10-19 00:21:44	dminuoso_	geordi: template< typename T, typename fn_ptr_t, fn_ptr_t fn_ptr > void f() {} template< typename T, typename Return, typename... Params, Return (*fn_ptr)( Params... ) > void f< T, Return (*)( Params... ), fn_ptr >() {}
2016-10-19 00:21:44	geordi	error: non-class, non-variable partial specialization 'f<T, Return (*)(Params ...), fn_ptr>' is not allowed
2016-10-19 00:21:48	dminuoso_	Why is that?
2016-10-19 00:21:51	-->	Neomex (~Neomex@abfy156.neoplus.adsl.tpnet.pl) has joined ##c++
2016-10-19 00:21:51	-->	irco (~irco@vpn205-021.rzuser.uni-heidelberg.de) has joined ##c++
2016-10-19 00:24:48	<--	sanct (~sanct@212.35.67.11) has quit (Ping timeout: 252 seconds)
2016-10-19 00:25:03	-->	sanct (~sanct@212.35.67.11) has joined ##c++
2016-10-19 00:25:05	<--	nilg (~user@92.247.176.162) has quit (Ping timeout: 260 seconds)
2016-10-19 00:25:29	<--	interf (~int@unaffiliated/inter) has quit (Ping timeout: 252 seconds)
2016-10-19 00:25:30	dminuoso_	I mean I understand the error message, is there a reason beyond "because the standard says so" ?
2016-10-19 00:26:29	<--	k_sze[work] (~Kira@unaffiliated/kira) has quit (Read error: Connection reset by peer)
2016-10-19 00:26:50	-->	k_sze[work] (~Kira@unaffiliated/kira) has joined ##c++
2016-10-19 00:27:07	-->	orbiter (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has joined ##c++
2016-10-19 00:28:32	<--	Cohedrin (~textual@192.77.237.205) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-10-19 00:28:34	-->	sn1c_ (~sn1c@96-063.vpn.rwth-aachen.de) has joined ##c++
2016-10-19 00:41:18	-->	alyptik (~alyptik@unaffiliated/alyptik) has joined ##c++
2016-10-19 00:41:18		[00:41]
2016-10-19 00:41:18	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || https://isocpp.org/faq || pastes: http://melpon.org/wandbox"
2016-10-19 00:41:18	--	Topic set by V-ille (~ville@81-175-149-170.bb.dnainternet.fi) on Fri, 18 Sep 2015 07:13:01
2016-10-19 00:41:18	--	Channel ##c++: 963 nicks (0 ops, 0 voices, 963 normals)
2016-10-19 00:41:18	***	Buffer Playback...
2016-10-19 00:41:18	urdh	[08:31:47] if you're just using the tribool, pulling in boost which is freakin' huge is probably not the best solution [08:31:47]
2016-10-19 00:41:18	urdh	[08:31:58] unless you're using boost for other stuff as well [08:31:58]
2016-10-19 00:41:18	urdh	[08:32:11] (for some definition of "best") [08:32:11]
2016-10-19 00:41:18	destiny	[08:32:13] yes for vector stuff like that [08:32:13]
2016-10-19 00:41:18	destiny	[08:32:28] anyway still better than our "local type" provided by some ugly middleware in our app [08:32:28]
2016-10-19 00:41:18	guest100	[09:00:16] Can we use enum class enumerators as cases in switch statement?? [09:00:16]
2016-10-19 00:41:18	Eelis	[09:00:33] sure [09:00:33]
2016-10-19 00:41:18	urdh	[09:01:20] that's the whole point [09:01:20]
2016-10-19 00:41:18	AStorm	[09:05:25] here's a fun question: what's the recommended way to default initialize struct fields? just adding braces involves removing aggregate initialization, how can I get that behavior back easily? [09:05:25]
2016-10-19 00:41:18	AStorm	[09:06:20] is there some sort of syntax for default list initialization constructor? [09:06:20]
2016-10-19 00:41:18	AStorm	[09:08:42] I see this part about "no default member initializers" has been changed in C++14 [09:08:42]
2016-10-19 00:41:18	AStorm	[09:08:52] hmm, it seems that piece of code was C++11 [09:08:52]
2016-10-19 00:41:18	AStorm	[09:08:57] time to change some flags. [09:08:57]
2016-10-19 00:41:18	AStorm	[09:10:22] hmm, it seems I've hit a bug in gcc 4.9? [09:10:22]
2016-10-19 00:41:18	AStorm	[09:14:02] hmm, might be enum class members interfering [09:14:02]
2016-10-19 00:41:18	Drzacek	[09:15:24] Hi [09:15:24]
2016-10-19 00:41:18	Drzacek	[09:15:34] I can't define structs as volatile? [09:15:34]
2016-10-19 00:41:18	va	[09:15:56] what good would that do [09:15:56]
2016-10-19 00:41:18	va	[09:16:26] geordi: { struct z { int f; }; volatile struct z x; } [09:16:26]
2016-10-19 00:41:18	geordi	[09:16:26] <no output> [09:16:26]
2016-10-19 00:41:18	AStorm	[09:17:25] http://melpon.org/wandbox/permlink/5uaVh0pFDVooRxQR <- GCC 4.9 bug, yes? (GCC 5.1 and clang 3.8 accept it in C++14 mode, GCC 4.9 rejects in C++1y) [09:17:25]
2016-10-19 00:41:18	Drzacek	[09:17:52] geordi: { typedef volatile struct { int f; }mystruct; } [09:17:52]
2016-10-19 00:41:18	geordi	[09:17:53] <no output> [09:17:53]
2016-10-19 00:41:18	urdh	[09:18:18] I would presume that c++14 support is incomplete if you use c++1y [09:18:18]
2016-10-19 00:41:18	AStorm	[09:18:34] urdh: allegedly GCC 4.9 supports this part of C++14 [09:18:34]
2016-10-19 00:41:18	AStorm	[09:18:42] probably the status page is lying [09:18:42]
2016-10-19 00:41:18	urdh	[09:18:45] so calling it a "bug" would be arguably incorrect [09:18:45]
2016-10-19 00:41:18	urdh	[09:18:51] probably that, then [09:18:51]
2016-10-19 00:41:18	AStorm	[09:18:54] no, never mind [09:18:54]
2016-10-19 00:41:18	AStorm	[09:19:09] it explicitly says 5 in Member initializers and aggregates [09:19:09]
2016-10-19 00:41:18	urdh	[09:19:18] there you go :) [09:19:18]
2016-10-19 00:41:18	AStorm	[09:19:21] ok, so how can I emulate this behavior with the ancient C++11 compiler? [09:19:21]
2016-10-19 00:41:18	AStorm	[09:19:35] need what constructors? [09:19:35]
2016-10-19 00:41:18	AStorm	[09:21:02] probably default move, copy and plain constructor; and an initializer_list constructor [09:21:02]
2016-10-19 00:41:18	AStorm	[09:21:40] or is it a constructor with all the fields I need? (yuck but ok) [09:21:40]
2016-10-19 00:41:18	AStorm	[09:29:50] hmm, the latter. it is not fun, pity I get to live with this old compiler. [09:29:50]
2016-10-19 00:41:18	AStorm	[09:31:17] this involves making a simple struct implement all rule of 7 [09:31:17]
2016-10-19 00:41:18	AStorm	[09:31:24] (fortunately default) [09:31:24]
2016-10-19 00:41:18	lloda	[09:31:42] the lack of int/complex ops in std::complex is a major pain in the ass :-/ [09:31:42]
2016-10-19 00:41:18	bumbar	[09:36:09] why do i have to type template when calling a template member function in a function to which i pass the parameter? eg: void f(const Objec& o) { o.template call<int>(); } [09:36:09]
2016-10-19 00:41:19	systemfault	[09:39:43] bumbar: Is Object a tmplate parameter? [09:39:43]
2016-10-19 00:41:19	bumbar	[09:39:56] yes [09:39:56]
2016-10-19 00:41:19	systemfault	[09:43:14] Then it's normal, Object::call is a dependent name and you need template to disambiguate that <> are not the < or > operators [09:43:14]
2016-10-19 00:41:19	systemfault	[09:43:18] bumbar: http://en.cppreference.com/w/cpp/language/dependent_name#The_template_disambiguator_for_dependent_names [09:43:18]
2016-10-19 00:41:19	bumbar	[09:48:28] systemfault, thanks [09:48:28]
2016-10-19 00:41:19	dminuoso_	[10:21:44] geordi: template< typename T, typename fn_ptr_t, fn_ptr_t fn_ptr > void f() {} template< typename T, typename Return, typename... Params, Return (*fn_ptr)( Params... ) > void f< T, Return (*)( Params... ), fn_ptr >() {} [10:21:44]
2016-10-19 00:41:19	geordi	[10:21:44] error: non-class, non-variable partial specialization 'f<T, Return (*)(Params ...), fn_ptr>' is not allowed [10:21:44]
2016-10-19 00:41:19	dminuoso_	[10:21:48] Why is that? [10:21:48]
2016-10-19 00:41:19	dminuoso_	[10:25:30] I mean I understand the error message, is there a reason beyond "because the standard says so" ? [10:25:30]
2016-10-19 00:41:19	KrzaQ	[10:30:02] is it possible to make a pair or tuple use less<> instead of operator<? [10:30:02]
2016-10-19 00:41:19	***	Playback Complete.
2016-10-19 00:41:33	--	Channel created on Fri, 14 Sep 2001 17:15:35
2016-10-19 00:44:14	<--	hatter (~hatter@c-5eeaaac6-74736162.cust.telenor.se) has quit (Ping timeout: 256 seconds)
2016-10-19 00:44:26	<--	breakfast (~breakfast@217.138.28.22) has quit (Client Quit)
2016-10-19 00:46:05	<--	Azusa762 (~roy@2a02:8084:26e2:a00:de85:deff:fec8:d839) has quit (Ping timeout: 260 seconds)
2016-10-19 00:46:08	-->	oftc_ftw (~oftc_ftw@unaffiliated/oftc-ftw/x-3443471) has joined ##c++
2016-10-19 00:46:33	-->	di0_ (~di0_@unaffiliated/di0-/x-5053590) has joined ##c++
2016-10-19 00:46:48	<--	hyacinth^timeout (~yhyacinth@61.111.255.109) has quit (Quit: Leaving)
2016-10-19 00:50:50	<--	orbiter (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has quit (Read error: Connection reset by peer)
2016-10-19 00:50:59	-->	orbiter (~UNIX2@178.27.248.117) has joined ##c++
2016-10-19 00:53:12	-->	breakfast (~breakfast@217.138.28.22) has joined ##c++
2016-10-19 00:53:54	-->	tux_ (~tux@183.202.209.59) has joined ##c++
2016-10-19 00:54:53	<--	tocka (~tocka@78-56-107-170.static.zebra.lt) has quit (Read error: Connection reset by peer)
2016-10-19 00:57:35	<--	a3Dman (~3Dman@unaffiliated/a3dman) has quit (Ping timeout: 265 seconds)
2016-10-19 00:57:35		[00:57]
2016-10-19 00:58:10	-->	hatter (~hatter@c-5eeaaac9-74736162.cust.telenor.se) has joined ##c++
2016-10-19 00:59:46	-->	slidercrank (~slidercra@unaffiliated/slidercrank) has joined ##c++
2016-10-19 01:00:54	-->	benkant (~benkant@node-u0.pool-101-108.dynamic.totbb.net) has joined ##c++
2016-10-19 01:01:29	<--	benkant_ (~benkant@vpn-tokyo-161-202-65-52.hosts.getcloakvpn.com) has quit (Ping timeout: 260 seconds)
2016-10-19 01:02:12	<--	calincru__ (~calin@141.85.227.229) has quit (Ping timeout: 252 seconds)
2016-10-19 01:02:21	<--	KaliLinuxGR (~alexandro@unaffiliated/kalilinuxgr) has quit (Remote host closed the connection)
2016-10-19 01:02:33	<--	breakfast (~breakfast@217.138.28.22) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-10-19 01:03:01	-->	Neslepaks (~Neslepaks@178.61.71.85) has joined ##c++
2016-10-19 01:03:58	<--	Neslepaks (~Neslepaks@178.61.71.85) has left ##c++
2016-10-19 01:04:34	<--	tux_ (~tux@183.202.209.59) has quit (Quit: Leaving)
2016-10-19 01:06:26	<--	StyxAlso (~markg@118.102.104.245) has quit (Quit: StyxAlso)
2016-10-19 01:07:41	-->	FreeBirdLjj (~freebirdl@223.65.168.113) has joined ##c++
2016-10-19 01:08:01	<--	Aidan (Aidan@203-213-19-16.tpgi.com.au) has quit (Ping timeout: 260 seconds)
2016-10-19 01:08:34	-->	a3Dman (~3Dman@unaffiliated/a3dman) has joined ##c++
2016-10-19 01:09:24	<--	Gluesticky (~nobody@unaffiliated/gluesticky) has quit (Quit: This is the end. Goodbye cruel world!)
2016-10-19 01:11:45	<--	FreeBirdLjj (~freebirdl@223.65.168.113) has quit (Ping timeout: 244 seconds)
2016-10-19 01:12:07	<--	Drzacek (~Drzacek@dslb-092-073-027-158.092.073.pools.vodafone-ip.de) has left ##c++ ("Leaving")
2016-10-19 01:13:15	<--	DingoSaar (~hagen@pD9E08482.dip0.t-ipconnect.de) has quit (Ping timeout: 256 seconds)
2016-10-19 01:13:15		[01:13]
2016-10-19 01:13:25	-->	rriemann_ (~rriemann@141.20.213.89) has joined ##c++
2016-10-19 01:13:32	<--	rriemann (~rriemann@dhcp-67-135.ixxi.ens-lyon.fr) has quit (Ping timeout: 252 seconds)
2016-10-19 01:14:40	-->	hrehf (~s@x5f7266ea.dyn.telefonica.de) has joined ##c++
2016-10-19 01:14:44	<--	hrehf (~s@x5f7266ea.dyn.telefonica.de) has quit (Client Quit)
2016-10-19 01:15:35	-->	hrehf (~s@x5f7266ea.dyn.telefonica.de) has joined ##c++
2016-10-19 01:17:34	<--	eduardas_ (~eduardas_@213.197.143.19) has quit (Quit: Leaving)
2016-10-19 01:20:43	<--	blueness (~blueness@gentoo/developer/blueness) has quit (Quit: blueness)
2016-10-19 01:21:24	-->	inad922 (~inad925@84-236-100-252.pool.digikabel.hu) has joined ##c++
2016-10-19 01:23:39	<--	Carbonflux (~Bob@75-172-112-206.tukw.qwest.net) has quit (Quit: Leaving)
2016-10-19 01:24:04	-->	MaBunny (~Peter@45.250.59.160) has joined ##c++
2016-10-19 01:24:26	<--	MaBunny (~Peter@45.250.59.160) has quit (Max SendQ exceeded)
2016-10-19 01:24:45	-->	MaBunny (~Peter@45.250.59.160) has joined ##c++
2016-10-19 01:25:03	<--	diod (~diod@unaffiliated/diod) has quit (Ping timeout: 245 seconds)
2016-10-19 01:25:50	-->	AudaciousTUX (~manjaro-k@103.219.232.15) has joined ##c++
2016-10-19 01:25:50	<--	AudaciousTUX (~manjaro-k@103.219.232.15) has quit (Changing host)
2016-10-19 01:25:51	-->	AudaciousTUX (~manjaro-k@unaffiliated/audacioustux) has joined ##c++
2016-10-19 01:26:58	-->	diod (~diod@21.166-245-81.adsl-dyn.isp.belgacom.be) has joined ##c++
2016-10-19 01:26:59	<--	diod (~diod@21.166-245-81.adsl-dyn.isp.belgacom.be) has quit (Changing host)
2016-10-19 01:26:59	-->	diod (~diod@unaffiliated/diod) has joined ##c++
2016-10-19 01:30:22	-->	tadaa (~tadaaa@nat-wh-wz4-12.rz.uni-karlsruhe.de) has joined ##c++
2016-10-19 01:30:22		[01:30]
2016-10-19 01:30:53	-->	SpaceDanceCJ (~Sasha@178.121.167.119) has joined ##c++
2016-10-19 01:31:08	-->	Davidbrcz (~david@2a02:120b:2c21:6260:4eeb:42ff:feca:49af) has joined ##c++
2016-10-19 01:33:32	<--	hatter (~hatter@c-5eeaaac9-74736162.cust.telenor.se) has quit (Ping timeout: 256 seconds)
2016-10-19 01:33:37	<--	Davidbrcz (~david@2a02:120b:2c21:6260:4eeb:42ff:feca:49af) has quit (Client Quit)
2016-10-19 01:33:43	-->	zzoo (~username@unaffiliated/zzoo) has joined ##c++
2016-10-19 01:34:08	-->	degva (~degva@190.232.18.40) has joined ##c++
2016-10-19 01:36:09	w3z	not a great error message, since partial specializations arent allowed there at all
2016-10-19 01:36:30	w3z	should be easy enough to understand why its an error even if it were allowed though
2016-10-19 01:36:47	w3z	{} template<int n> void f(){} template<int n> void f<n+1>(){}
2016-10-19 01:36:47	geordi	error: non-class, non-variable partial specialization 'f<(n + 1)>' is not allowed
2016-10-19 01:37:36	w3z	no, theres no way to force tuple/pair to use less<> ...
2016-10-19 01:37:46	<--	riemann (~riemann@84-10-11-234.static.chello.pl) has quit (Quit: Leaving)
2016-10-19 01:37:49	-->	eduardas_m (~eduardas_@213.197.143.19) has joined ##c++
2016-10-19 01:38:04	Eelis	that's still not a great example, because partial specialization with n+1 is not even allowed for classes
2016-10-19 01:38:16	<--	eduardas_m (~eduardas_@213.197.143.19) has quit (Remote host closed the connection)
2016-10-19 01:38:32	<--	jonge (~jonge@p5B11C675.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2016-10-19 01:38:45	<--	diod (~diod@unaffiliated/diod) has quit (Ping timeout: 256 seconds)
2016-10-19 01:38:58	w3z	that was the point, his partial specialization (if it were allowed) would be analagous
2016-10-19 01:39:06	-->	Forgo (~U_Forgo_T@unaffiliated/forgo) has joined ##c++
2016-10-19 01:39:11	-->	diod (~diod@2a02:a03f:2c96:8700:21b:21ff:fe12:d0b7) has joined ##c++
2016-10-19 01:39:12	<--	diod (~diod@2a02:a03f:2c96:8700:21b:21ff:fe12:d0b7) has quit (Changing host)
2016-10-19 01:39:12	-->	diod (~diod@unaffiliated/diod) has joined ##c++
2016-10-19 01:39:32	<--	Forgo (~U_Forgo_T@unaffiliated/forgo) has left ##c++
2016-10-19 01:39:49	-->	eduardas_m (~eduardas_@213.197.143.19) has joined ##c++
2016-10-19 01:39:59	Eelis	but it's irrelevant because the main issue is that partial specializations of functions is not allowed at all, the nicest demonstration of which is with a partial specialization that /would/ be allowed for classes
2016-10-19 01:40:27	-->	sivteck (~sivteck@unaffiliated/sivteck) has joined ##c++
2016-10-19 01:40:28	Eelis	*function templates
2016-10-19 01:40:37	-->	josef__k (~jeremy@220-244-178-179.tpgi.com.au) has joined ##c++
2016-10-19 01:41:08	w3z	i retract my point :)
2016-10-19 01:41:28	w3z	{} template< typename T, typename fn_ptr_t, fn_ptr_t fn_ptr > struct S{}; template< typename T, typename Return, typename... Params, Return (*fn_ptr)( Params... ) > struct S< T, Return (*)( Params... ), fn_ptr >{}; //allowed nonsense
2016-10-19 01:41:29	geordi	<no output>
2016-10-19 01:44:37	Eelis	dminuoso_: i don't think anyone ever actually proposed partial specialization of function templates
2016-10-19 01:45:04	Eelis	i vaguely recall that it got confusing when combined with overloading, but confusion hasn't stopped us before
2016-10-19 01:45:16	dminuoso_	Eelis: Fair enough. I mean it seems like I can get the same effect by just placing the function as a static member function of an otherwise empty class and make that class a template classi nstead.
2016-10-19 01:45:23	Eelis	yep
2016-10-19 01:45:23		[01:45]
2016-10-19 01:45:48	<--	skweek (~skweek@68-200-146-225.res.bhn.net) has quit (Ping timeout: 252 seconds)
2016-10-19 01:46:02	<--	diod (~diod@unaffiliated/diod) has quit (Ping timeout: 250 seconds)
2016-10-19 01:46:16	dminuoso_	So this looks more like an oversight or lack of interest (possibly because overloading already solves most problems?) than something that would be hard to solve.
2016-10-19 01:46:51	-->	riemann (~riemann@84-10-11-234.static.chello.pl) has joined ##c++
2016-10-19 01:47:02	Eelis	i'm not sure how you arrived at that conclusion
2016-10-19 01:47:08	-->	hatter (~hatter@c-5eea25e2-74736162.cust.telenor.se) has joined ##c++
2016-10-19 01:47:19	Eelis	maybe nobody proposed it because everybody that looked into it concluded that it would be hard to do right
2016-10-19 01:48:29	dminuoso_	I just assumed that if there was such obvious complexity issues, you might have pointed that out already. :)
2016-10-19 01:48:34	dminuoso_	You can take that as a compliment if you like.
2016-10-19 01:49:08	-->	DingoSaar (~hagen@pD9E09004.dip0.t-ipconnect.de) has joined ##c++
2016-10-19 01:49:17	Eelis	it's obvious to anyone who has ever looked at the templates chapter in the standard that there is massive humongous complexity already there, and integrating a whole new kind of partial specialization is going to be an extremely delicate undertaking
2016-10-19 01:50:11	-->	TikityTik (~TikityTik@162.223.44.49) has joined ##c++
2016-10-19 01:50:40	-->	oddRaven (~Ravenous@ip4da2344f.direct-adsl.nl) has joined ##c++
2016-10-19 01:51:15	Eelis	it's not a matter of writing "btw function templates can be partially specialized too" somewhere
2016-10-19 01:52:08	oddRaven	I want a switch like ternary for code like this:  http://stackoverflow.com/questions/1917718/are-multiple-conditional-operators-in-this-situation-a-good-idea,    the 'arg' variable would only be referred to once just like with a switch
2016-10-19 01:52:29	-->	jamesaxl (~jamesaxl@176.98.129.195) has joined ##c++
2016-10-19 01:52:40	-->	hz1 (~username@93-58-130-35.ip158.fastwebnet.it) has joined ##c++
2016-10-19 01:52:52	Eelis	and i want a pony
2016-10-19 01:53:36	oddRaven	discuss
2016-10-19 01:53:45	Eelis	!emh
2016-10-19 01:53:46	nolyc	Please state the nature of the C++ emergency.
2016-10-19 01:53:50	-->	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has joined ##c++
2016-10-19 01:53:54	systemfault	oddRaven: You could possibly use a self-executing lambda and a switch
2016-10-19 01:54:11	<--	MicroCheapFx (~quassel@62.102.229.129) has quit (Read error: Connection reset by peer)
2016-10-19 01:54:17	-->	dances-with-cats (~brandon@client-75-102-124-70.mobility.psu.edu) has joined ##c++
2016-10-19 01:54:52	<--	hualet (~hualet@183.94.113.153) has quit (Remote host closed the connection)
2016-10-19 01:55:01	Eelis	why would it have to be self-executing?
2016-10-19 01:55:04	<--	hz (~username@unaffiliated/hz) has quit (Ping timeout: 256 seconds)
2016-10-19 01:55:10	oddRaven	systemfault, yes that's a nice alternative :)
2016-10-19 01:55:19	-->	hualet (~hualet@183.94.113.153) has joined ##c++
2016-10-19 01:55:22	<--	araml (~araml@unaffiliated/araml) has quit (Quit: WeeChat 1.0.1)
2016-10-19 01:55:35	oddRaven	but wait I'd still be using a switch
2016-10-19 01:56:06	<--	sivteck (~sivteck@unaffiliated/sivteck) has quit (Quit: Leaving)
2016-10-19 01:56:08	systemfault	Eelis: So initialization can be used, no?
2016-10-19 01:57:05	Eelis	what?  [](char x){switch(x){case 'B':return bus;}}(f())
2016-10-19 01:57:14	Eelis	initializes x just fine, no need for recursion
2016-10-19 01:57:53	-->	MicroCheapFx (~quassel@62.102.229.129) has joined ##c++
2016-10-19 01:57:55	-->	Lillia7 (~lillia7@d3079310.t-net.ne.jp) has joined ##c++
2016-10-19 01:58:18	<--	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has quit (Ping timeout: 252 seconds)
2016-10-19 01:58:19	systemfault	The () at the end self-executes the lambda, no?
2016-10-19 01:58:34	Eelis	no, it's the surrounding function executing the lambda
2016-10-19 01:58:40	Eelis	self-execution would be recursion
2016-10-19 01:59:01	systemfault	Ok, I didn't use your terminology, I'm wrong.
2016-10-19 01:59:23	Eelis	it's not "my terminology". this is what recursion means
2016-10-19 01:59:57	<--	hualet (~hualet@183.94.113.153) has quit (Ping timeout: 252 seconds)
2016-10-19 02:00:00	<--	ski_ (~ski@remote11.chalmers.se) has left ##c++
2016-10-19 02:00:17	-->	cybex_ (~cybex_@154.69.136.192) has joined ##c++
2016-10-19 02:00:26	oddRaven	http://pastebin.com/raw/p1xrbUyn,  the spacing messed up a little
2016-10-19 02:00:26		[02:00]
2016-10-19 02:00:32	-->	ski (~ski@remote11.chalmers.se) has joined ##c++
2016-10-19 02:01:05	-->	santa_claus (~santa_cla@84-10-11-234.static.chello.pl) has joined ##c++
2016-10-19 02:01:09	oddRaven	I know the {} don't make any sense, but just for example
2016-10-19 02:01:18	cybex_	hi all, could you guys please take a look at this issue I am having : it is regarding a QMYSQL error :driver not loaded-> http://stackoverflow.com/questions/40130698/qt-5-7-mysql-driver-not-loaded
2016-10-19 02:01:18	Eelis	you can keep describing the pony you want after you've already been told the closest thing you can get.
2016-10-19 02:01:25	rafalcpp	Eelis: what kind of pony in particular?
2016-10-19 02:02:00	rafalcpp	I bet a standard one
2016-10-19 02:02:19	Eelis	ponyTS
2016-10-19 02:02:29	<--	santa_claus (~santa_cla@84-10-11-234.static.chello.pl) has quit (Client Quit)
2016-10-19 02:02:33	oddRaven	Eelis, is this channel not about discussing the C++ standard?
2016-10-19 02:02:42	Eelis	it sure is
2016-10-19 02:02:44	<--	zero_byte (zer0@nat/redhat/x-lmuotrjgdvhdhvsm) has quit (Ping timeout: 260 seconds)
2016-10-19 02:03:06	-->	moo (~THALL@194.218.229.29) has joined ##c++
2016-10-19 02:03:17	dminuoso_	Eelis: Oh absolutely. I once dared to read a paragraph in section 14 - in response I lost about 7% of my brain mass to a massive surge..
2016-10-19 02:03:22	<--	hz1 (~username@93-58-130-35.ip158.fastwebnet.it) has quit (Ping timeout: 250 seconds)
2016-10-19 02:03:28	<--	AudaciousTUX (~manjaro-k@unaffiliated/audacioustux) has quit (Quit: Konversation terminated!)
2016-10-19 02:04:11	dminuoso_	Jokes aside, I suppose what you are saying is that the only way to get an answer is to attend to the next ISO meeting and just ask the folks.
2016-10-19 02:04:25	dminuoso_	A definite answer at least.
2016-10-19 02:04:57	Eelis	oh, sutter has some sections on it in one of his books. stroustrup maybe too
2016-10-19 02:05:01	Eelis	it's not an unknown issue or anything
2016-10-19 02:05:04	Eelis	i just don't remember the rationale
2016-10-19 02:05:58	Eelis	but even if you get a rationale from some people about why /they/ haven't proposed it, that doesn't tell you why potential others haven't
2016-10-19 02:06:32	<--	matrixa1 (~THALL@194.218.229.29) has quit (Ping timeout: 260 seconds)
2016-10-19 02:07:33	Eelis	and there are also restrictions and limitations that have perfectly reasonable rationales at one time but are still lifted later on
2016-10-19 02:07:38	oddRaven	I will see if I can go to a meeting
2016-10-19 02:07:40	-->	Blue_Hat (~TwinKam20@167.160.116.35) has joined ##c++
2016-10-19 02:08:09	Eelis	for example, having to write > > when closing template argument lists
2016-10-19 02:08:37	<--	Neomex (~Neomex@abfy156.neoplus.adsl.tpnet.pl) has quit (Quit: Leaving)
2016-10-19 02:08:42	--	MaBunny is now known as OtakuSenpai
2016-10-19 02:08:52	Eelis	(or parameter lists, etc)
2016-10-19 02:09:57	-->	Davidbrcz (~david@2a02:120b:2c21:6260:4eeb:42ff:feca:49af) has joined ##c++
2016-10-19 02:10:13	rafalcpp	maybe they should had invented new type of brackets for use in template<>. Say d[ ]b . Example would be: mathfoo d[0.0]b x;
2016-10-19 02:11:11	dminuoso_	Eelis: Sutter has to say the following to say about partial function specializations: "For one thing, you can't partially specialize them -- pretty much just because the language says you can't." with a note stating that there is discussion in the committee about potentially allowing function template partial specialization.
2016-10-19 02:11:33	dminuoso_	Though the relationship between overloading and specialization is an interesting read in the document Im looking at.
2016-10-19 02:11:40	rafalcpp	or like   playlist O_o; musicplayer jazzbox d[O_o]b;
2016-10-19 02:11:52	Eelis	"just because the language says you can't" that's sloppy writing and poor logic, but then again it's only sutter
2016-10-19 02:12:25	w3z	if it hasnt happened by now, i dont imagine it ever will
2016-10-19 02:12:45	<--	Vuks (~Vuks@unaffiliated/vuks69) has quit (Ping timeout: 256 seconds)
2016-10-19 02:13:53	Eelis	"just because the language says you can't"  read: "i can't be arsed to research this book properly"
2016-10-19 02:14:17	<--	Davidbrcz (~david@2a02:120b:2c21:6260:4eeb:42ff:feca:49af) has quit (Ping timeout: 260 seconds)
2016-10-19 02:14:20	<--	MicroCheapFx (~quassel@62.102.229.129) has quit (Ping timeout: 256 seconds)
2016-10-19 02:14:38	-->	diod (~diod@109.133.46.102) has joined ##c++
2016-10-19 02:14:39	<--	diod (~diod@109.133.46.102) has quit (Changing host)
2016-10-19 02:14:39	-->	diod (~diod@unaffiliated/diod) has joined ##c++
2016-10-19 02:15:05	-->	skweek (~skweek@2607:fe50:0:810b:7975:f3ec:7a:80fb) has joined ##c++
2016-10-19 02:16:17	-->	zero_byte (zer0@nat/redhat/x-loydxtagfxoxtser) has joined ##c++
2016-10-19 02:16:17		[02:16]
2016-10-19 02:16:39	<--	rriemann_ (~rriemann@141.20.213.89) has quit (Read error: Connection reset by peer)
2016-10-19 02:17:35	Eelis	oddRaven: btw, someone has proposed your pony: http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0095r1.html see figure 3
2016-10-19 02:17:39	dminuoso_	Eelis: Well the article makes use of some interesting terminology, such as describing the set of rules to select the best matching and most specialized function base template as "fairly arcane".
2016-10-19 02:17:46	-->	rriemann_ (~rriemann@dhcp-67-135.ixxi.ens-lyon.fr) has joined ##c++
2016-10-19 02:18:02	dminuoso_	But then again I should not expect too much from web blog articles.
2016-10-19 02:18:24	w3z	rge language variants syntax rubs me the wrong way
2016-10-19 02:18:25	Eelis	if it's only an article, there's a chance the same content appears in expanded form in one of his books
2016-10-19 02:18:26	w3z	the
2016-10-19 02:18:30	Eelis	his books are mostly compilations of his articles
2016-10-19 02:18:34	Eelis	in expanded form
2016-10-19 02:18:57	dminuoso_	Are they worth a read in your opinion?
2016-10-19 02:19:01	-->	vdamewood (~vdamewood@unaffiliated/vdamewood) has joined ##c++
2016-10-19 02:19:02	Eelis	absolutely
2016-10-19 02:19:22	Eelis	depending on how much you already know, of course
2016-10-19 02:19:24	-->	Murii (~Murii@86.125.194.251) has joined ##c++
2016-10-19 02:19:35	-->	MicroCheapFx (~quassel@62.102.229.129) has joined ##c++
2016-10-19 02:20:07	w3z	has he updated exceptional/more exceptional?
2016-10-19 02:20:09	Eelis	Exceptional C++ is my "second book" recommendation
2016-10-19 02:20:21	-->	Elysion (~elysion@ppp121-45-81-39.bras1.adl6.internode.on.net) has joined ##c++
2016-10-19 02:20:32	--	Murii is now known as mure
2016-10-19 02:20:43	Eelis	not that i know of. but i don't know any other book that makes the points about exception safety as clearly
2016-10-19 02:21:02	Eelis	and those are absolutely critical and easily missed after reading only a single book
2016-10-19 02:21:05	<--	josef__k (~jeremy@220-244-178-179.tpgi.com.au) has quit (Read error: No route to host)
2016-10-19 02:21:05	-->	breakfast (~breakfast@217.138.28.22) has joined ##c++
2016-10-19 02:21:13	<--	mure (~Murii@86.125.194.251) has quit (Client Quit)
2016-10-19 02:21:14	-->	josef__k (~jeremy@220-244-178-179.tpgi.com.au) has joined ##c++
2016-10-19 02:21:30	-->	mure (~Murii@86.125.194.251) has joined ##c++
2016-10-19 02:22:07	w3z	whats your first book recommendation, presumably tcpl, and not meyers
2016-10-19 02:22:34	Eelis	either TC++PL or maybe the good Primer one
2016-10-19 02:23:18	<--	zwf (~Thunderbi@modemcable076.238-20-96.mc.videotron.ca) has quit (Quit: zwf)
2016-10-19 02:23:45	Eelis	but TC++PL needs to be recommended with an accompanying "don't be scared off by the introductory 'tour' chapters, you're not expected to understand the code there" warning
2016-10-19 02:24:13	-->	zwf (~Thunderbi@modemcable076.238-20-96.mc.videotron.ca) has joined ##c++
2016-10-19 02:24:37	Eelis	Primer is probably more accessible
2016-10-19 02:24:57	w3z	you dont like koenig and moo? (accelerated c++)
2016-10-19 02:25:00	-->	SecondForm_Glenn (~Thunderbi@108.189.70.212) has joined ##c++
2016-10-19 02:25:06	Eelis	nah, i don't believe in that approach at all
2016-10-19 02:25:16	oddRaven	Eelis, cool, is it rejected or is it still being proposed?
2016-10-19 02:25:36	Eelis	oddRaven: no idea if it's even been discussed yet
2016-10-19 02:26:14	<--	MicroCheapFx (~quassel@62.102.229.129) has quit (Ping timeout: 256 seconds)
2016-10-19 02:26:22	w3z	an updated jossutis std lib book would be a good beginner/intermediate 2nd book
2016-10-19 02:26:36	w3z	he has a new template book due soon
2016-10-19 02:26:40	<--	govg (~govg@unaffiliated/govg) has quit (Ping timeout: 244 seconds)
2016-10-19 02:27:05	Eelis	hmm, must be weird writing a template book while concepts feel so close
2016-10-19 02:27:44	-->	Gathis (~TheBlack@unaffiliated/gathis) has joined ##c++
2016-10-19 02:27:46	Eelis	presumably he has lengthy chapters on the finer art of enable_if void_t hackery
2016-10-19 02:27:54	Eelis	all of which will be moot come concepts
2016-10-19 02:29:33	w3z	his first template book with vandervoorde(sp) was pretty practical, not as out there as mcd (which it was a contemporary of), so probably not
2016-10-19 02:29:54	w3z	it covered up to crtp
2016-10-19 02:29:54	<--	degva (~degva@190.232.18.40) has quit (Ping timeout: 265 seconds)
2016-10-19 02:30:05	Eelis	well, the problem with enable_if is that it's so practical they actually put it in the stdlib :p
2016-10-19 02:30:25	Eelis	i was so *facepalm* when they did that
2016-10-19 02:31:11	w3z	why do you say concepts feels so close? has all of bjarnes griping forced them to reopen consideration for 17?
2016-10-19 02:31:19	-->	serycjon (~jonas@wced-145-218-32-147.feld.cvut.cz) has joined ##c++
2016-10-19 02:31:19		[02:31]
2016-10-19 02:31:37	<--	zzoo (~username@unaffiliated/zzoo) has quit (Quit: leaving)
2016-10-19 02:31:57	Eelis	not close to 17, but close to the WP, if bjarne can get others on board with the big feature dump into the WP after 17 is tagged
2016-10-19 02:32:14	-->	degva (~degva@190.232.18.40) has joined ##c++
2016-10-19 02:33:23	Eelis	i.e. no more postponing modules, concepts, networking, ...
2016-10-19 02:33:47	Eelis	into the WP they should go, get all the eyeballs on it
2016-10-19 02:35:05	-->	Gustavo6046 (~Gustavo60@unaffiliated/gustavo6046) has joined ##c++
2016-10-19 02:35:24	-->	King_Hual` (~failed@94.26.28.68) has joined ##c++
2016-10-19 02:36:09	-->	r3m11 (~rvieux@LStLambert-658-1-90-52.w217-128.abo.wanadoo.fr) has joined ##c++
2016-10-19 02:37:28	<--	zlck (~koodi@dsl-vntbrasgw1-54fa6e-245.dhcp.inet.fi) has quit (Quit: Leaving)
2016-10-19 02:37:37	<--	King_Hual (~failed@unaffiliated/king-hual/x-1207580) has quit (Ping timeout: 260 seconds)
2016-10-19 02:38:58	<--	hatter (~hatter@c-5eea25e2-74736162.cust.telenor.se) has quit (Ping timeout: 252 seconds)
2016-10-19 02:39:04	<--	r3m1 (~rvieux@cbr40-1-78-231-127-148.fbx.proxad.net) has quit (Ping timeout: 250 seconds)
2016-10-19 02:39:16	-->	MicroCheapFx (~quassel@62.102.229.129) has joined ##c++
2016-10-19 02:39:44	<--	SpaceDanceCJ (~Sasha@178.121.167.119) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-10-19 02:40:38	<--	dances-with-cats (~brandon@client-75-102-124-70.mobility.psu.edu) has quit (Quit: leaving)
2016-10-19 02:40:42	-->	modlin (~quassel@93.123.41.167) has joined ##c++
2016-10-19 02:40:48	-->	dminuoso1 (~dminuoso@unaffiliated/dminuoso) has joined ##c++
2016-10-19 02:41:11	<--	degva (~degva@190.232.18.40) has quit (Remote host closed the connection)
2016-10-19 02:41:18	-->	fedepad_ (~fedepad@eduroam-88-37.zdv.uni-mainz.de) has joined ##c++
2016-10-19 02:41:57	<--	danieli (~duniel@213.52.4.149) has quit (Ping timeout: 250 seconds)
2016-10-19 02:43:43	<--	dminuoso_ (~dminuoso@unaffiliated/dminuoso) has quit (Ping timeout: 244 seconds)
2016-10-19 02:43:44	<--	Haliucinas (~Haliucina@88-119-97-225.static.zebra.lt) has quit (Ping timeout: 252 seconds)
2016-10-19 02:43:50	<--	fedepad (~fedepad@padua-macbookworkpaderb.zdv.uni-mainz.de) has quit (Ping timeout: 250 seconds)
2016-10-19 02:44:05	<--	Meeh (~meeeeeeh@meeh.sigterm.no) has quit (Read error: Connection reset by peer)
2016-10-19 02:44:08	-->	Meeh_ (~meeeeeeh@meeh.sigterm.no) has joined ##c++
2016-10-19 02:44:16	<--	Sonderblade (~Sonderbla@h-52-183.a157.priv.bahnhof.se) has quit (Ping timeout: 260 seconds)
2016-10-19 02:44:19	-->	Haliucinas (~Haliucina@88-119-97-225.static.zebra.lt) has joined ##c++
2016-10-19 02:44:33	w3z	!interview
2016-10-19 02:44:35	nolyc	Did you know that all of the string types, containers (except array), string buffers and string streams, and match_results are parameterized in terms of allocators?
2016-10-19 02:44:52	hs_	 
2016-10-19 02:44:58	-->	danieli (~duniel@213.52.4.149) has joined ##c++
2016-10-19 02:45:16	hs_	the more you know
2016-10-19 02:45:18	<--	Green (uid722@gateway/web/irccloud.com/x-dndmuwvejwwmjlib) has quit (Read error: Connection reset by peer)
2016-10-19 02:45:37	-->	Green (uid722@gateway/web/irccloud.com/x-mxdhanwvtbwxtetj) has joined ##c++
2016-10-19 02:46:06	-->	Sonderblade (~Sonderbla@h-52-183.a157.priv.bahnhof.se) has joined ##c++
2016-10-19 02:46:08	<--	karab44 (~karab44@unaffiliated/karab44) has quit
2016-10-19 02:46:18	<--	irco (~irco@vpn205-021.rzuser.uni-heidelberg.de) has quit (Ping timeout: 244 seconds)
2016-10-19 02:46:29	<--	V-ille (~ville@81-175-149-170.bb.dnainternet.fi) has quit (Ping timeout: 260 seconds)
2016-10-19 02:46:29		[02:46]
2016-10-19 02:46:50	w3z	whats going to happen with the polymorphic allocator versions of all the containers
2016-10-19 02:47:15	w3z	theyre going to live side by side in the pmr namespace
2016-10-19 02:47:28	<--	jamesaxl (~jamesaxl@176.98.129.195) has quit (Remote host closed the connection)
2016-10-19 02:47:29	w3z	or moved to std with alternate names ...
2016-10-19 02:49:37	w3z	oh maybe polymorphic_allocator didnt make the cut
2016-10-19 02:49:58	hs_	cppref thinks it did
2016-10-19 02:50:35	hs_	I haven't looked at this at all
2016-10-19 02:50:42	w3z	it did, i see it in my draft
2016-10-19 02:50:48	w3z	strange that search didnt find it
2016-10-19 02:51:23	-->	MrDoctor (~anirban@unaffiliated/apostasy) has joined ##c++
2016-10-19 02:51:23	w3z	so yeah std::pmr::string
2016-10-19 02:51:28	w3z	etc
2016-10-19 02:52:34	Eelis	would that be a typedef for basic_string with a polymorphic_allocator?
2016-10-19 02:52:35	-->	jamesaxl (~jamesaxl@176.98.129.195) has joined ##c++
2016-10-19 02:52:35	w3z	{pmr::string s;}
2016-10-19 02:52:35	geordi	error: 'pmr' has not been declared
2016-10-19 02:52:42	<--	snakefoil (~snakefoil@unaffiliated/snakefoil) has quit (Quit: ZNC 1.6.3 - http://znc.in)
2016-10-19 02:52:42	--	Guest69218 is now known as alamar
2016-10-19 02:53:02	-->	snakefoil (~snakefoil@unaffiliated/snakefoil) has joined ##c++
2016-10-19 02:53:15	w3z	yes
2016-10-19 02:54:25	<--	josef__k (~jeremy@220-244-178-179.tpgi.com.au) has quit (Ping timeout: 260 seconds)
2016-10-19 02:54:39	w3z	they apparently dont get there own literal suffix
2016-10-19 02:54:52	w3z	or at least not according to my draft
2016-10-19 02:54:56	-->	breakfaster (~breakfast@217.138.28.22) has joined ##c++
2016-10-19 02:55:23	Eelis	geordi: experimental::pmr::polymorphic_allocator<char> x;
2016-10-19 02:55:23	geordi	Success
2016-10-19 02:55:38	<--	breakfaster (~breakfast@217.138.28.22) has quit (Max SendQ exceeded)
2016-10-19 02:56:27	Eelis	<< sizeof(string), sizeof(basic_string<char, char_traits<char>, experimental::pmr::polymorphic_allocator<char>>)
2016-10-19 02:56:27	geordi	32, 40
2016-10-19 02:56:28	<--	sanct (~sanct@212.35.67.11) has quit (Ping timeout: 260 seconds)
2016-10-19 02:56:54	Eelis	i see
2016-10-19 02:57:09	-->	sanct (~sanct@212.35.67.11) has joined ##c++
2016-10-19 02:57:24	<--	breakfast (~breakfast@217.138.28.22) has quit (Ping timeout: 256 seconds)
2016-10-19 02:57:58	<--	dv (~quassel@62.178.118.86) has quit (Ping timeout: 245 seconds)
2016-10-19 02:58:24	-->	dv (~quassel@62-178-118-86.cable.dynamic.surfer.at) has joined ##c++
2016-10-19 02:59:39	-->	MicroCheapFx_ (~quassel@62.102.229.129) has joined ##c++
2016-10-19 03:00:11	-->	Vuks (~Vuks@unaffiliated/vuks69) has joined ##c++
2016-10-19 03:00:11	destiny	guys
2016-10-19 03:00:21	-->	calincru__ (~calin@141.85.227.229) has joined ##c++
2016-10-19 03:00:25	destiny	you put the open brace on same line or line after, for if for etc... all the blocks
2016-10-19 03:00:29	w3z	one of the interview questions got me to play with map::extract earlier, i was mistaken node_handle does not have value for maps it has mapped, value is only for sets apparently
2016-10-19 03:00:52	w3z	thats your idea of a c++ question?
2016-10-19 03:01:03	-->	Freze (~Freze@dhcp-18-189-124-12.dyn.mit.edu) has joined ##c++
2016-10-19 03:01:14	urdh	destiny, nobody cares, just pick a style and stick to it
2016-10-19 03:01:17	Eelis	destiny: there's a bunch of different conventions you can use and it's just personal preference
2016-10-19 03:01:24	destiny	ok
2016-10-19 03:01:47	w3z	put it on the line before, to be proactive
2016-10-19 03:01:47		[03:01]
2016-10-19 03:01:54	SlashLife	How do exceptions and constexpr fit together? Looking at http://www.eelis.net/c++draft/time.point.nonmember#4 - I wonder why it isn't noexcept, but I also wonder how that fits together with being constexpr.
2016-10-19 03:01:56	<--	MicroCheapFx (~quassel@62.102.229.129) has quit (Ping timeout: 256 seconds)
2016-10-19 03:02:33	-->	de-facto (~de-facto@gateway/tor-sasl/de-facto) has joined ##c++
2016-10-19 03:02:42	-->	gagbo_ (~gagbo@unaffiliated/gagbo) has joined ##c++
2016-10-19 03:02:44	<--	sanct (~sanct@212.35.67.11) has quit (Ping timeout: 250 seconds)
2016-10-19 03:02:50	--	yorick_ is now known as yorick
2016-10-19 03:03:11	<--	gagbo (~gagbo@unaffiliated/gagbo) has quit (Quit: Konversation terminated!)
2016-10-19 03:03:26	-->	thib (~Thibaut12@wikimedia/Thibaut120094) has joined ##c++
2016-10-19 03:03:27	Eelis	<< noexcept(f()); constexpr void f(){}
2016-10-19 03:03:28	geordi	true
2016-10-19 03:03:29	hs_	SlashLife, if a constexpr function is evaluated as a constant expression then it is treated as noexcept
2016-10-19 03:03:32	-->	sanct (~sanct@212.35.67.11) has joined ##c++
2016-10-19 03:04:06	-->	jefcolbi (~Thunderbi@free-02.protectednetgroup.com) has joined ##c++
2016-10-19 03:04:13	hs_	{ constexpr int j = 0; int k = 1; cout << noexcept(blah(j)),noexcept(blah(k)); } constexpr int blah(int i) { return i; }
2016-10-19 03:04:14	geordi	true, false
2016-10-19 03:04:23	<--	jefcolbi (~Thunderbi@free-02.protectednetgroup.com) has quit (Remote host closed the connection)
2016-10-19 03:04:35	SlashLife	Okay, so could it throw ... I guess that answers it, thanks.
2016-10-19 03:04:57	-->	riemann_ (~riemann@84-10-11-234.static.chello.pl) has joined ##c++
2016-10-19 03:05:27	<--	riemann (~riemann@84-10-11-234.static.chello.pl) has quit (Read error: Connection reset by peer)
2016-10-19 03:05:33	<--	calincru__ (~calin@141.85.227.229) has quit (Quit: Konversation terminated!)
2016-10-19 03:05:37	rafalcpp	hm are you using polymorphic_allocator in new code in a library, for public methods that take std containers?
2016-10-19 03:05:38	Eelis	geordi: constexpr void f(){ thow 3; }
2016-10-19 03:05:38	geordi	error: 'thow' was not declared in this scope
2016-10-19 03:05:42	Eelis	geordi, use throw
2016-10-19 03:05:42	geordi	error: expression '<throw-expression>' is not a constant expression
2016-10-19 03:05:43	<--	omnipot (~Dawid@eop137.internetdsl.tpnet.pl) has quit (Ping timeout: 252 seconds)
2016-10-19 03:05:57	<--	shaggycat (~quassel@95-37-215-204.dynamic.mts-nn.ru) has quit (Ping timeout: 252 seconds)
2016-10-19 03:06:30	<--	Vuks (~Vuks@unaffiliated/vuks69) has quit (Ping timeout: 252 seconds)
2016-10-19 03:06:42	-->	Davidbrcz (~david@2a02:120b:2c21:6260:4eeb:42ff:feca:49af) has joined ##c++
2016-10-19 03:06:54	-->	shaggycat (~quassel@95-37-215-204.dynamic.mts-nn.ru) has joined ##c++
2016-10-19 03:07:16	rafalcpp	for code aimed at C++14, is this a good idea to make new libraries to take polymorphic_allocator containers (in places where speed is not critical)?
2016-10-19 03:07:30	-->	MikeDebian (~ML@a81-84-80-8.cpe.netcabo.pt) has joined ##c++
2016-10-19 03:07:31	-->	tux_ (~tux@183.202.209.59) has joined ##c++
2016-10-19 03:07:42	-->	hualet (~hualet@183.94.113.153) has joined ##c++
2016-10-19 03:08:20	hs_	{ constexpr int j = 0; constexpr int k = 1; cout << noexcept(blah(j)),noexcept(blah(k)); } constexpr int blah(int i) { return i > 0 ? i : throw 0; } // another interesting case
2016-10-19 03:08:21	geordi	false, true
2016-10-19 03:08:26	-->	Appleman1234_ (~Appleman1@KD106154015144.au-net.ne.jp) has joined ##c++
2016-10-19 03:08:54	-->	V-ille (~ville@59ec7803.symbio.com) has joined ##c++
2016-10-19 03:08:59	SlashLife	Interesting indeed. I just tried it with calls:
2016-10-19 03:09:01	SlashLife	geordi: constexpr int f(int x) { if (x < 2) throw 42; else return x+1; } constexpr int a=f(25);
2016-10-19 03:09:01	geordi	Success
2016-10-19 03:09:02	<--	Mnkras (~Mnkras@concrete5/781/Mnkras) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-10-19 03:09:02	<--	sanct (~sanct@212.35.67.11) has quit (Ping timeout: 244 seconds)
2016-10-19 03:09:06	SlashLife	geordi: replace 25 with -15
2016-10-19 03:09:06	geordi	error: expression '<throw-expression>' is not a constant expression
2016-10-19 03:09:09	hs_	semi-clunky way to check if it is evaluated as a constant expression..
2016-10-19 03:09:11	-->	erbse (~test@unaffiliated/erbse) has joined ##c++
2016-10-19 03:09:23	-->	sanct (~sanct@212.35.67.11) has joined ##c++
2016-10-19 03:10:01	-->	CEnnis91 (uid3543@gateway/web/irccloud.com/x-pzepbjdceuxeturk) has joined ##c++
2016-10-19 03:10:31	<--	drabard (systemd-ti@host-213-5-210-87.wtvk.pl) has quit (Quit: No Ping reply in 180 seconds.)
2016-10-19 03:10:56	<--	Appleman1234 (~Appleman1@KD106154001160.au-net.ne.jp) has quit (Ping timeout: 260 seconds)
2016-10-19 03:10:59	<--	rosten (~rosten@cpe-45-48-9-161.socal.res.rr.com) has quit (Ping timeout: 265 seconds)
2016-10-19 03:11:09	<--	modlin (~quassel@93.123.41.167) has quit (Read error: Connection reset by peer)
2016-10-19 03:11:13	--	Appleman1234_ is now known as Appleman1234
2016-10-19 03:11:25	-->	Ir1s (6881c446@gateway/web/cgi-irc/kiwiirc.com/ip.104.129.196.70) has joined ##c++
2016-10-19 03:11:37	-->	drabard (systemd-ti@host-213-5-210-87.wtvk.pl) has joined ##c++
2016-10-19 03:13:37	SlashLife	Bit sad; I have a function for timing other function calls, which sets up an RAII timer and then just forwards the call. If I could rule out any exceptions being thrown from the timer (which only consists of a ref init, copy init of a timepoint, timepoint-timepoint, copy assignemnt of the resulting duration and two calls to clock_type::now(), which actually is noexcept for standard clocks),
2016-10-19 03:13:55	SlashLife	I could give the same noexcept guarantee as the original function. Which is just a minor detail, but would be a nice touch.
2016-10-19 03:14:05	-->	metabulation (~THALL@194.218.229.29) has joined ##c++
2016-10-19 03:14:12	<--	moo (~THALL@194.218.229.29) has quit (Ping timeout: 260 seconds)
2016-10-19 03:15:18	hs_	what isn't noexcept there?
2016-10-19 03:16:41	<--	my123_ (~my123@13.85.69.239) has quit (Changing host)
2016-10-19 03:16:41	-->	my123_ (~my123@unaffiliated/kill--9-1/x-8776976) has joined ##c++
2016-10-19 03:17:37	SlashLife	Well, for example the time_point::op-(time_point) linked above. I'm not running this in a constexpr context, and as it isn't mandated noexcept, it might actually throw (although I see no reasonable scenario in which it would).
2016-10-19 03:17:37		[03:17]
2016-10-19 03:17:57	-->	edr (~edr@pdpc/supporter/professional/edr) has joined ##c++
2016-10-19 03:19:18	-->	HUHUOYUN (~HUHUOYUN@59.174.123.232) has joined ##c++
2016-10-19 03:19:22	-->	hy__ (~HUHUOYUN@59.174.123.232) has joined ##c++
2016-10-19 03:20:16	hs_	you could return both time points instead
2016-10-19 03:20:34	hs_	if there is in fact some potential problem there..
2016-10-19 03:20:40	SlashLife	Mhh. I could upgrade the requirement from the Clock concept to the TrivialClock concept, which mandates no exceptions being thrown, though: http://www.eelis.net/c++draft/time#clock.req-4
2016-10-19 03:21:18	<--	skweek (~skweek@2607:fe50:0:810b:7975:f3ec:7a:80fb) has quit (Ping timeout: 245 seconds)
2016-10-19 03:21:30	<--	riemann_ (~riemann@84-10-11-234.static.chello.pl) has quit (Ping timeout: 252 seconds)
2016-10-19 03:21:51	<--	oddRaven (~Ravenous@ip4da2344f.direct-adsl.nl) has quit (Quit: :tiuQ)
2016-10-19 03:22:18	--	yazdmich is now known as BytesAndCoffee
2016-10-19 03:22:53	-->	magnicida (~raskolnik@p2003008C2F21FC55A9733EE1C3006A66.dip0.t-ipconnect.de) has joined ##c++
2016-10-19 03:23:00	-->	k299 (~chatzilla@219.85.195.201) has joined ##c++
2016-10-19 03:24:27	w3z	sounds like wasted effort/work - just assume that any rep type used isnt going to throw ...
2016-10-19 03:25:42	-->	Aquazi (~Aquazi@host65-199-dynamic.32-79-r.retail.telecomitalia.it) has joined ##c++
2016-10-19 03:28:01	w3z	if somehow you end up with a timed function that has a noexcept(true) specifier and duration does throw ...youll get a terminate
2016-10-19 03:28:47	w3z	!interview
2016-10-19 03:28:49	nolyc	Were you surprised when you first learned that is_bind_expression can be used to detect function objects generated by bind?
2016-10-19 03:29:19	urdh	!fact
2016-10-19 03:29:20	Eelis	hmm, this /is/ when i first learned that, and i /am/ surprised!
2016-10-19 03:29:20	nolyc	A linkage-specification shall occur only in namespace scope.
2016-10-19 03:29:24	w3z	i wasnt aware of is_bind_expresion, pretty useless though
2016-10-19 03:29:50	Eelis	yeah i wonder how they argued for that one
2016-10-19 03:30:03	-->	skweek (~skweek@2607:fe50:0:810b:7975:f3ec:7a:80fb) has joined ##c++
2016-10-19 03:30:41	w3z	the result of bind is implementation defined iirc, so i guess they wanted to bubble up some way to identify the type eh
2016-10-19 03:30:55	Eelis	yeah but what could possibly be a legit use of this
2016-10-19 03:31:23	Eelis	oooh i know!!! i can make a geordi printer for bind expressions now :D
2016-10-19 03:31:42	Eelis	<< bind(f); void f(){}
2016-10-19 03:31:42	geordi	error: no match for 'operator<<' in 'cout << bind(_Func&&, _BoundArgs&& ...) [with _Func = void (&)(); _BoundArgs = {}; _Bind_helper<__is_socketlike<_Func>::value, _Func, _BoundArgs ...>::type = _Bind<void (*())()>]()' (operand types are 'ostream {aka ostream}' and '_Bind_helper<false, void (&)()>::type {aka _Bind<void (*())()>}')
2016-10-19 03:31:45	Eelis	soon there will be a match, geordi
2016-10-19 03:31:59	Eelis	thanks to !interview
2016-10-19 03:32:05	urdh	just have it print "don't use std::bind"
2016-10-19 03:32:07	w3z	heh, youll have to look inside _Bind which you arent supposed to know about :)
2016-10-19 03:32:21	Eelis	no no, it'll just say "<bind expression>"
2016-10-19 03:32:35	-->	xtheosirian (~theosiria@189.26.89.80.dynamic.adsl.gvt.net.br) has joined ##c++
2016-10-19 03:32:41	Eelis	maybe there's some traits to get the signature?
2016-10-19 03:32:41		[03:32]
2016-10-19 03:33:02	w3z	is_socketlike hmm, wonder why thats in there
2016-10-19 03:33:40	<--	dinfuehr (~dinfuehr@188-23-187-80.adsl.highway.telekom.at) has quit (Ping timeout: 256 seconds)
2016-10-19 03:33:54	-->	Karyon (~yaaic@unaffiliated/karyon) has joined ##c++
2016-10-19 03:34:10	urdh	w3z, https://github.com/gcc-mirror/gcc/blob/master/libstdc%2B%2B-v3/include/std/functional#L1195-L1197
2016-10-19 03:34:14	-->	dinfuehr (~dinfuehr@188-23-150-184.adsl.highway.telekom.at) has joined ##c++
2016-10-19 03:35:07	Eelis	<< "hurray: " << bind(f); void f(){}    template<class T>enable_if_t<is_bind_expression_v<T>, ostream>&operator<<(ostream&o,T const &){return o<<"<bind expression>";}
2016-10-19 03:35:08	geordi	hurray: <bind expression>
2016-10-19 03:35:23	<--	sirosirian (~theosiria@191.251.98.207) has quit (Ping timeout: 244 seconds)
2016-10-19 03:35:34	Eelis	is there is_lambda?
2016-10-19 03:36:15	-->	riemann_ (~riemann@84-10-11-234.static.chello.pl) has joined ##c++
2016-10-19 03:36:30	-->	kilbith (4ee51c3e@gateway/web/cgi-irc/kiwiirc.com/ip.78.229.28.62) has joined ##c++
2016-10-19 03:36:35	interop_madness	assume the following function:  decode(string input, string& output);  people often would use it like this: decode(foo, foo);   said function recently changed to decode(const string& input, string& output);  is there a way to make calls like decode(foo, foo) (i.e. both parameters supplied by the same variable) break at compile-time?
2016-10-19 03:37:19	w3z	dont think so, theres a is_placeholder though
2016-10-19 03:37:29	-->	mofeing_ (~mofeing@13.red-81-45-139.staticip.rima-tde.net) has joined ##c++
2016-10-19 03:38:59	SlashLife	Shouldn't is_lambda be quite trivial to implement (for the implementer)? Could inherit all lamdba types from some undocumented base type and check whether it is a base. Nothing virtual required.
2016-10-19 03:39:05	urdh	interop_madness, make it a sane API instead?
2016-10-19 03:39:12	-->	Mnkras (~Mnkras@concrete5/781/Mnkras) has joined ##c++
2016-10-19 03:39:19	Eelis	SlashLife: of course
2016-10-19 03:39:35	<--	kaffeetrauma (~Thunderbi@n37.informatik.fh-dortmund.de) has quit (Quit: kaffeetrauma)
2016-10-19 03:39:41	SlashLife	interop_madness: That depends on decode().
2016-10-19 03:40:31	interop_madness	urdh, decode(const string& input, string& output) is a sane API. the return value is used for something else.
2016-10-19 03:40:33	<--	cybex_ (~cybex_@154.69.136.192) has quit (Ping timeout: 244 seconds)
2016-10-19 03:40:53	SlashLife	interop_madness: For the sake of exception safety, I'd always work on an internal string, then at the end when I'm done std::swap my working string with output.
2016-10-19 03:41:00	urdh	that depends on your definition of "sane"
2016-10-19 03:41:07	SlashLife	When doing it this way, nothing bad can happen.
2016-10-19 03:41:19	urdh	it could just as easily be e.g. std::pair<int, string> decode(cosnt string&)
2016-10-19 03:41:40	SlashLife	Well - your input string will be gone ... but that's what you ordered me to do.
2016-10-19 03:42:41	<--	Ir1s (6881c446@gateway/web/cgi-irc/kiwiirc.com/ip.104.129.196.70) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-10-19 03:43:03	-->	Ir1s (6881c454@gateway/web/cgi-irc/kiwiirc.com/ip.104.129.196.84) has joined ##c++
2016-10-19 03:43:22	hs_	SlashLife is saying go back to decode(string,string&)
2016-10-19 03:43:55	hs_	but yeah return the decoded string
2016-10-19 03:44:11	-->	sn1c_ (~sn1c@xdsl-89-0-120-4.netcologne.de) has joined ##c++
2016-10-19 03:44:17	SlashLife	hs_: Not really. If he orders me to write over his input string, his input string will still be gone. :P
2016-10-19 03:45:01	interop_madness	yeah i mean with the new API, it's pretty much the problem of the caller to copy strings to temp variables
2016-10-19 03:45:11	SlashLife	And generically I'll need an empty string as the starting point for storing the decoded data, so having an actual copy of the input string rather than a const-ref isn't of any advantage.
2016-10-19 03:45:13	hs_	with decode(string input,string& output), input is a local
2016-10-19 03:45:17	urdh	that's a bad thing
2016-10-19 03:45:22	interop_madness	my problem is isolating such cases that already exist
2016-10-19 03:45:34	<--	sn1c (~sn1c@xdsl-89-0-120-4.netcologne.de) has quit (Read error: Connection reset by peer)
2016-10-19 03:45:39	hs_	ohh nm SlashLife
2016-10-19 03:45:43	SlashLife	hs_: I'd have a local copy for (not of) output to decode to, before switching it out in the end.
2016-10-19 03:46:42	-->	kadoban (~mud@unaffiliated/kadoban) has joined ##c++
2016-10-19 03:47:19	SlashLife	interop_madness: Well, on the assembly side it is the responsibility of the caller, yes. On the C++ side, with a const string & the temporary variable will be created automatically, if necessary.
2016-10-19 03:47:33	hs_	interop_madness, just use a temporary inside the function?
2016-10-19 03:47:37	SlashLife	You may want to go for a string_view in C++17.
2016-10-19 03:47:56	SlashLife	^ what hs_ said.
2016-10-19 03:47:56		[03:47]
2016-10-19 03:48:32	SlashLife	void decode(const std::string &in, std::string &out) { std::string decoded; /* decode in to decoded here */ std::swap(decoded, out); }
2016-10-19 03:48:40	<--	AReverser (~dev@CPE602ad0897db5-CM602ad0897db2.cpe.net.cable.rogers.com) has quit (Ping timeout: 260 seconds)
2016-10-19 03:49:55	SlashLife	That way you'll not destroy your input stream until you're finished with your work. And if any exception is thrown while attempting to decode, the output (and thus your input) will be unchanged.
2016-10-19 03:50:27	<--	mofeing_ (~mofeing@13.red-81-45-139.staticip.rima-tde.net) has left ##c++
2016-10-19 03:51:22	<--	kilbith (4ee51c3e@gateway/web/cgi-irc/kiwiirc.com/ip.78.229.28.62) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-10-19 03:51:55	-->	luke_penn (~luke_penn@147.162.229.154) has joined ##c++
2016-10-19 03:52:41	SlashLife	interop_madness: ... thereby not only fixing your problem, but at the same time implementing the strong exception guarantee: https://en.wikipedia.org/wiki/Exception_safety
2016-10-19 03:52:42	hs_	(return the string..)
2016-10-19 03:52:49	hs_	(return it......)
2016-10-19 03:52:56	SlashLife	(you know you want to...)
2016-10-19 03:53:40	SlashLife	And yes, returning the string would be the sensible thing to do. If you want to overwrite your encoded thing with the decoded one, message = decode(message); is much more natural than decode(message, message).
2016-10-19 03:54:04	urdh	interop_madness: to be clear, my objection to the API is that in != out unneccesarily narrows the contract and means the caller has to do a bunch of extra work (copying, since in == out seems to be a common case) that you could just as well do inside decode()
2016-10-19 03:54:06	-->	modlin (~quassel@93.123.41.167) has joined ##c++
2016-10-19 03:54:13	SlashLife	I'll just silently assume that you require the return value for something else that makes more sense semantically - even though I can't think of anything in this context.
2016-10-19 03:54:18	hs_	geordi, --clang { auto [s,i,f,c] = gimme("blah"); cout << s,i,f,c; } auto gimme(string const& s) { return make_tuple(s,1,0.0f,'a'); } // soon
2016-10-19 03:54:19	geordi	blah, 1, 0, a
2016-10-19 03:54:22	urdh	unless of course you could write decode() to actually work in-place, but that'll be difficult with strings likely
2016-10-19 03:54:42	interop_madness	SlashLife, but on a higher level, would you, given decode(string input, string& output), change the API to decode(const string& input, string& output) and ensure that the old usage with both parameters passed as the same variable still works, or would you, given cases of said usage, not touch it at all?
2016-10-19 03:54:59	-->	cybex_ (~cybex_@154.69.136.192) has joined ##c++
2016-10-19 03:55:30	interop_madness	urdh, yeah that's how i see it as well. i would consider it a bug if the new API broke with the old use
2016-10-19 03:56:20	SlashLife	interop_madness: I'd actually go and refactor the places that use the two parameter thing. I'd take input as a const&, not as a value. And if you really really can't get to all the places that use this two parameter style, then you can still write a wrapper: inline void decode(const string &in, string &out) { out = decode(in); }
2016-10-19 03:56:29	urdh	it's not just "the old use", it's the fact that the precondition in != out has to be documented and followed even though it is a completely unnececsary precondition
2016-10-19 03:56:44	interop_madness	SlashLife, the return value is used for error handling. it is technical debt. no feasible way to change it, sadly.
2016-10-19 03:57:21	-->	Vuks (~Vuks@unaffiliated/vuks69) has joined ##c++
2016-10-19 03:57:34	SlashLife	Okay, then change that to exceptions, refactor as many places as possible and do some exception to error code translation in the two parameter wrapper.
2016-10-19 03:57:47	-->	vuoto (~vuoto@80-71-135-9.u.parknet.dk) has joined ##c++
2016-10-19 03:58:27	-->	kortiak (uid192268@gateway/web/irccloud.com/x-zwsfdgbjjauftcbz) has joined ##c++
2016-10-19 03:58:36	-->	Tit1t (c362557e@gateway/web/freenode/ip.195.98.85.126) has joined ##c++
2016-10-19 03:58:51	<--	kortiak (uid192268@gateway/web/irccloud.com/x-zwsfdgbjjauftcbz) has left ##c++
2016-10-19 03:59:13	-->	Tachyon_ (~Thunderbi@95.76.184.120) has joined ##c++
2016-10-19 03:59:36	w3z	<<tuple{"hs_, where have you been, you missed all kinds of new toys we can now play with "s,vector({42})}
2016-10-19 03:59:38	geordi	{"hs_, where have you been, you missed all kinds of new toys we can now play with ", {42}}
2016-10-19 03:59:55	SlashLife	And do yourself a favor: Don't go lazy on this. It may be very tempting to just create one new exception that gets the error code: struct my_exception { int error; }; ... int decode(const &in, &out) { try { out=decode(in); return 0; } catch(my_exception &e) { return e.error; } }
2016-10-19 04:00:01	SlashLife	Don't do that.
2016-10-19 04:00:18	<--	Ir1s (6881c454@gateway/web/cgi-irc/kiwiirc.com/ip.104.129.196.84) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-10-19 04:00:23	-->	jan64 (~jan64@adlh205.neoplus.adsl.tpnet.pl) has joined ##c++
2016-10-19 04:00:38	hs_	w3z, are you saying that I can almost get rid of so many stupid make_functions?
2016-10-19 04:00:39	SlashLife	Exceptions carry their semantic through their type, not their data. You should ideally not require any data on your exception at all, except for the purpose of aiding your debugging.
2016-10-19 04:00:52	<--	zero_byte (zer0@nat/redhat/x-loydxtagfxoxtser) has quit (Ping timeout: 260 seconds)
2016-10-19 04:00:54	urdh	I am not comfortable with the exceptions-for-control-flow approach this is getting to
2016-10-19 04:01:00	w3z	almost :)
2016-10-19 04:01:10	-->	Diyar (c362557e@gateway/web/freenode/ip.195.98.85.126) has joined ##c++
2016-10-19 04:01:13	w3z	you may have to throw in some explicit guides instead
2016-10-19 04:01:13	-->	Ir1s (6881c446@gateway/web/cgi-irc/kiwiirc.com/ip.104.129.196.70) has joined ##c++
2016-10-19 04:01:22	<--	w41 (~w41@unaffiliated/w41) has quit (Read error: Connection reset by peer)
2016-10-19 04:01:26	<--	Tit1t (c362557e@gateway/web/freenode/ip.195.98.85.126) has quit (Client Quit)
2016-10-19 04:01:35	Diyar	Newbie question about if and else if, in this simple http://pastebin.com/LS1K1DPw I am trying the result show based the message I want but it's not working , could please mention what I forget?
2016-10-19 04:01:43	<--	psychicist__ (~psychicis@ip127-8-212-87.adsl2.static.versatel.nl) has quit (Ping timeout: 245 seconds)
2016-10-19 04:02:12	<--	Mnkras (~Mnkras@concrete5/781/Mnkras) has quit (Read error: Connection reset by peer)
2016-10-19 04:02:21	w3z	clang also has non type auto to play with, not as interesting imo
2016-10-19 04:02:32	sim642	Diyar, you probably want && (and) not || (or)
2016-10-19 04:02:47	-->	Mnkras (~Mnkras@concrete5/781/Mnkras) has joined ##c++
2016-10-19 04:03:04	<--	Haliucinas (~Haliucina@88-119-97-225.static.zebra.lt) has quit (Quit: Leaving)
2016-10-19 04:03:04		[04:03]
2016-10-19 04:03:07	Diyar	I put || just to give one of value one or zero
2016-10-19 04:03:11	sim642	Diyar, also in "(num_1 == 0) , (num_2 == 0)", the "," is quite likely not what you want even though it compiles
2016-10-19 04:03:16	urdh	Diyar, you also probably don't want the comma operator there in the first expression
2016-10-19 04:03:29	-->	rabioli (~rabioli@198.209.10.232) has joined ##c++
2016-10-19 04:03:40	Diyar	urdh: not first
2016-10-19 04:03:43	SlashLife	Diyar: You're saying on line 20: "if C1 is 1 *OR* C2 is 1, then ..."
2016-10-19 04:03:45	-->	samik (~smukherje@24.4.162.17) has joined ##c++
2016-10-19 04:03:50	Diyar	be with each one I want
2016-10-19 04:04:15	sim642	replace that , and || with && and it'll work
2016-10-19 04:04:33	sim642	even the text you cout in every case suggests AND not OR
2016-10-19 04:04:52	-->	calincru__ (~calin@141.85.227.229) has joined ##c++
2016-10-19 04:05:01	urdh	Diyar, start compiling with -Wall because I'm pretty sure any compiler would tell you about the comma operator
2016-10-19 04:05:03	Diyar	sim642: the message just first one show to me, that not correct
2016-10-19 04:05:21	SlashLife	urdh: Not so sure about that. Especially with the extra parentheses.
2016-10-19 04:05:31	-->	karab44 (~karab44@unaffiliated/karab44) has joined ##c++
2016-10-19 04:05:38	sim642	Diyar, yes, I just told you how to fix it
2016-10-19 04:05:48	-->	Euston (~r1@138.37.176.116) has joined ##c++
2016-10-19 04:05:57	urdh	SlashLife, clang 3.8 does at least: http://melpon.org/wandbox/permlink/gU8szSQiibydQ1GN
2016-10-19 04:06:12	Diyar	sim642: I did ||, but here is I want message be show based the value
2016-10-19 04:06:36	sim642	Diyar, and I said multiple times already, use &&
2016-10-19 04:06:48	Diyar	for example cin 1 and 0 will show me the message for first operation 0 and 0
2016-10-19 04:07:06	<--	Euston (~r1@138.37.176.116) has quit (Client Quit)
2016-10-19 04:07:07	Diyar	sim642: oh sorry wait
2016-10-19 04:07:13	urdh	christ
2016-10-19 04:07:15	urdh	!basic
2016-10-19 04:07:16	nolyc	Please ask your question in ##C++-basic, as it involves the fundamental basics of the language.
2016-10-19 04:07:45	Diyar	not worked
2016-10-19 04:07:58	-->	Anodl1 (~Anodl@p2003007A2F489700A5F01FAFFF38C4BB.dip0.t-ipconnect.de) has joined ##c++
2016-10-19 04:08:02	-->	modlin_ (~quassel@93.123.41.167) has joined ##c++
2016-10-19 04:08:07	<--	modlin_ (~quassel@93.123.41.167) has quit (Remote host closed the connection)
2016-10-19 04:08:18	-->	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has joined ##c++
2016-10-19 04:08:36	<--	Anodl (~Anodl@p2003007A2F310400A5F01FAFFF38C4BB.dip0.t-ipconnect.de) has quit (Ping timeout: 250 seconds)
2016-10-19 04:08:46	SlashLife	nolyc: warning
2016-10-19 04:08:47	nolyc	warning: Don't ignore warnings! See also: !-Wall
2016-10-19 04:08:51	SlashLife	!-Wall
2016-10-19 04:08:52	nolyc	-Wall is is only -Wsome; it leaves out many warnings. To really get a lot of warnings, you should use '-Wall -Wextra -Wpedantic -Wconversion -std=c++14 -O2'
2016-10-19 04:09:14	<--	themba (~themba@163.172.157.192) has left ##c++
2016-10-19 04:09:52	SlashLife	urdh: Nothing on G++: https://godbolt.org/g/8nBa4d
2016-10-19 04:10:08	-->	illerucis (~illerucis@2620:10d:c091:200::b:7c6) has joined ##c++
2016-10-19 04:10:30	SlashLife	If you remove the parentheses around num_1==..., though: 4 : warning: left operand of comma operator has no effect [-Wunused-value]
2016-10-19 04:10:40	Diyar	SlashLife: I mention in begging of my message my question is newbi and not need for any warning
2016-10-19 04:10:51	urdh	lol -O2
2016-10-19 04:11:00	urdh	also known to GCC as "don't optimize"
2016-10-19 04:11:18	Diyar	sim642: I changed http://pastebin.com/55jw6xva <
2016-10-19 04:11:19	SlashLife	Diyar: It is exactly need for warnings. :P Compilers are good at warning you if you seemingly attempt to do stupid things.
2016-10-19 04:11:26	urdh	anyway fair point but that just shows Clang wins this round of QoI
2016-10-19 04:11:29	-->	pmercado (~pmercado@186-104-211-56.baf.movistar.cl) has joined ##c++
2016-10-19 04:11:32	sim642	Diyar, you didn't change the , in the first if
2016-10-19 04:11:57	Diyar	SlashLife: it's not stupid , if I am stupid that mean you too stupid because when you born in world you was not knoww how to walk
2016-10-19 04:12:19	urdh	how are you going to know that you're writing bad C++ if you don't have warnings enabled?
2016-10-19 04:12:26	Diyar	sim642: thanks , now is worked
2016-10-19 04:12:29	Diyar	Good work
2016-10-19 04:12:35	systemfault	CLang has -Weverything which is crazy :/
2016-10-19 04:12:39	SlashLife	if ((num1==0), (num2==0)) means: "So, if ... actually I want you to compare num1 to 0 first. Okay, now that we've done that: Ignore the result of that comparison ... instead please check if num2 is 0, and if that is true then do the following: ...
2016-10-19 04:13:03	-->	zero_byte (zer0@nat/redhat/x-skdjtdzajdfejsvq) has joined ##c++
2016-10-19 04:13:24	-->	Phlow (~Kiss@199.44.8.162) has joined ##c++
2016-10-19 04:13:40	-->	govg (~govg@unaffiliated/govg) has joined ##c++
2016-10-19 04:14:02	SlashLife	And if you write that as: if (num1==0, num2==0), then the compiler notices and asks back: "Uhh ... you wanted me to compare num1 to 0 ... okay, I did that ... but now you want me to throw away the result? Why? This doesn't do anything. So why do we do this in the first place? Please check if this is what you really want to do."
2016-10-19 04:14:13	<--	serycjon (~jonas@wced-145-218-32-147.feld.cvut.cz) has quit (Ping timeout: 260 seconds)
2016-10-19 04:14:38	<--	damme (~damme@2001:16d8:cc75::802) has quit (Ping timeout: 245 seconds)
2016-10-19 04:14:47	-->	koodi (~koodi@dsl-vntbrasgw1-54fa6e-245.dhcp.inet.fi) has joined ##c++
2016-10-19 04:15:25	introom	hi
2016-10-19 04:15:39	introom	sort(first, end)
2016-10-19 04:15:45	<--	Tachyon_ (~Thunderbi@95.76.184.120) has quit (Quit: Tachyon_)
2016-10-19 04:15:55	SlashLife	Diyar: I didn't say that you were stupid. But that comparison in that piece of the code is stupid, because you put unnecessary effort into doing something that doesn't have any effect. And your compiler will notice that and call you out on it: "This doesn't even do anything. So why are we doing it?"
2016-10-19 04:15:58	introom	what if I pass `first' as some_vector.end() ?
2016-10-19 04:16:11	urdh	introom, nothing
2016-10-19 04:16:16	va	introom: whaddaya think
2016-10-19 04:16:25	SlashLife	Diyar: And the compiler is -almost- right: It's just that it's not the comparison that is wrong, it's the "," between the two comparisons.
2016-10-19 04:16:46	SlashLife	Diyar: And this is by no means an insult. Stupid things happen. And compilers are quite good at catching a lot of them.
2016-10-19 04:16:47	introom	didn't find in the draft what should happen regarding this, though gcc indeed does nothing to this .
2016-10-19 04:17:32	urdh	<< find(v.end(), v.end()); vector<string> v{"introom"};
2016-10-19 04:17:32	geordi	error: no matching function for call to 'find(vector<string >::iterator, vector<string >::iterator)'
2016-10-19 04:17:36	urdh	meh
2016-10-19 04:18:01	urdh	anyway, std::find searches in [first, last), and [end, end) is the empty set
2016-10-19 04:18:07	SlashLife	Diyar: See https://godbolt.org/g/mrrtda - there is the warning on the right side. A warning by the compiler isn't a threat. It's just telling you that you did something which is generally okay, but likely to be wrong, and that you check whether what you did is really what you *wanted* to do.
2016-10-19 04:18:07		[04:18]
2016-10-19 04:18:09	urdh	in which your element is not present
2016-10-19 04:18:25	-->	maciuszek (~maciuszek@TOROON0949W-LP130-01-1242512157.dsl.bell.ca) has joined ##c++
2016-10-19 04:18:29	SlashLife	Diyar: ... which in this case it is not, so the compiler just told you about a bug in your program.
2016-10-19 04:19:20	w3z	find needs a value ...
2016-10-19 04:19:24	SlashLife	Diyar: And once again: This is *NOT* *me* warning you about your questions on this channel, this is just me telling you about a warning *your compiler* gives you to help you fix your program.
2016-10-19 04:19:42	urdh	yeah sorry w3z, i'm not on top of my game today
2016-10-19 04:19:44	w3z	he asked for sort, which of course says the same thing wrt the iterator range
2016-10-19 04:19:49	-->	uipxr (~uipxr@mar13-2-82-246-223-195.fbx.proxad.net) has joined ##c++
2016-10-19 04:20:11	urdh	i should get off IRC now :(
2016-10-19 04:20:22	urdh	things are not going well
2016-10-19 04:20:33	introom	I am more interested in the draft as to where it says [end, end) is a valid range.
2016-10-19 04:20:39	<--	uipxr (~uipxr@mar13-2-82-246-223-195.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-10-19 04:21:08	-->	dikie (~dikie@mar13-2-82-246-223-195.fbx.proxad.net) has joined ##c++
2016-10-19 04:21:25	SlashLife	Diyar: And especially as a newbie: Listen to your compiler. It almost certainly knows your code better than you do.
2016-10-19 04:21:33	<--	dikie (~dikie@mar13-2-82-246-223-195.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-10-19 04:21:37	Diyar	SlashLife: the life have two option to choose, waste the time and earn the time, and your msg = waste time
2016-10-19 04:21:40	sim642	introom, why wouldn't it be valid?
2016-10-19 04:21:44	Diyar	sim642: thanks again
2016-10-19 04:21:46	Diyar	bye
2016-10-19 04:21:52	<--	Diyar (c362557e@gateway/web/freenode/ip.195.98.85.126) has quit (Quit: Page closed)
2016-10-19 04:21:55	-->	miodi (~koodi@dsl-vntbrasgw1-54fa6e-245.dhcp.inet.fi) has joined ##c++
2016-10-19 04:22:04	SlashLife	What a charming fellow. :)
2016-10-19 04:22:06	-->	lmlej (~lmlej@ARennes-656-1-235-178.w2-14.abo.wanadoo.fr) has joined ##c++
2016-10-19 04:22:07	urdh	introom, it's not so much that it says its valid as it is that it doesn't say that it's not valid
2016-10-19 04:22:22	<--	lmlej (~lmlej@ARennes-656-1-235-178.w2-14.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-10-19 04:22:34	w3z	theres no hand holding in the standard .... end is one past the last element of the controlled sequence .... the interval x,x is empty ...
2016-10-19 04:22:37	<--	kasper^ (~safaf@82.137.12.17) has quit (Ping timeout: 260 seconds)
2016-10-19 04:22:47	<--	k299 (~chatzilla@219.85.195.201) has quit (Quit: ChatZilla 0.9.92 [Firefox 49.0/20160919213721])
2016-10-19 04:22:48	<--	afiefh (afiefh@nat/ibm/x-nfuojsdsnaiadaaq) has quit (Ping timeout: 260 seconds)
2016-10-19 04:22:56	w3z	there was no dereference
2016-10-19 04:23:05	w3z	and both the iterators are valid
2016-10-19 04:23:11	-->	rmunoz (~ricardo@217.124.142.50) has joined ##c++
2016-10-19 04:23:16	-->	inDigiNeous (~sakari@80-69-172-83.fi-hel1.host.upcloud.com) has joined ##c++
2016-10-19 04:23:33	-->	uvs (~uvs@ARennes-656-1-235-178.w2-14.abo.wanadoo.fr) has joined ##c++
2016-10-19 04:23:48	<--	koodi (~koodi@dsl-vntbrasgw1-54fa6e-245.dhcp.inet.fi) has quit (Ping timeout: 245 seconds)
2016-10-19 04:23:50	<--	uvs (~uvs@ARennes-656-1-235-178.w2-14.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-10-19 04:24:01	-->	chris64 (~chris@unaffiliated/chris64) has joined ##c++
2016-10-19 04:24:06	-->	Gzxhn (~Gzxhn@AAubervilliers-151-1-16-139.w83-114.abo.wanadoo.fr) has joined ##c++
2016-10-19 04:24:07	introom	w3z: so as long as first <= last ?
2016-10-19 04:24:10	<--	jablo (~jablo@80.243.123.111) has quit (Quit: jablo)
2016-10-19 04:24:16	introom	first > last is a sure error.
2016-10-19 04:24:28	<--	Gzxhn (~Gzxhn@AAubervilliers-151-1-16-139.w83-114.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-10-19 04:24:29	w3z	thats what [first,last) means
2016-10-19 04:24:38	chaiomanot	ew
2016-10-19 04:24:44	SlashLife	urdh: Btw.: I disagree on the point that clang wins this round of QoI.
2016-10-19 04:25:02	<--	aricz (~aricz@82.194.220.89) has quit (Quit: leaving)
2016-10-19 04:25:19	urdh	SlashLife: why? It caught an error GCC didn't catch, that's better in my book.
2016-10-19 04:25:20	SlashLife	g++ warns about it just as well; it's the extra pair of parentheses that turns off the warning by signaling "I really mean that."
2016-10-19 04:25:21	-->	Vmj (~Vmj@AAubervilliers-151-1-16-139.w83-114.abo.wanadoo.fr) has joined ##c++
2016-10-19 04:25:27	chris64	;3Chello
2016-10-19 04:26:14	SlashLife	With every warning there should be an in-code way to turn it off for a particular instance. And a pair of (otherwise unnecessary) parentheses is a good option for that imo.
2016-10-19 04:26:20	introom	well.. just because of the [,) notation so I asked this question, as seemingly allowing `=' is ab-normal. but anyway, = is ok. and no need to challenge it.
2016-10-19 04:26:29	<--	govg (~govg@unaffiliated/govg) has quit (Ping timeout: 256 seconds)
2016-10-19 04:26:31	urdh	SlashLife, I think that implicit way of disabling a warning makes sense for if(a = b), but I don't agree with GCC doing it in this case
2016-10-19 04:26:48	-->	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has joined ##c++
2016-10-19 04:26:48	<--	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has quit (Max SendQ exceeded)
2016-10-19 04:26:54	-->	nilg (~user@92.247.176.162) has joined ##c++
2016-10-19 04:26:55	chris64	I'm troubling to extend a parameter pack by another type. Is there a nice approach to achieve this? Right know I don't get my attempt right. It's here: http://melpon.org/wandbox/permlink/Wg4CRcOr84tZdvNy
2016-10-19 04:26:58	urdh	because wrapping equality checks is much more common, even if unneccesary
2016-10-19 04:27:08	-->	jan64_ (~jan64@afip46.neoplus.adsl.tpnet.pl) has joined ##c++
2016-10-19 04:27:17	chris64	something like Type<Args..., A>
2016-10-19 04:27:17	-->	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has joined ##c++
2016-10-19 04:27:18	<--	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has quit (Max SendQ exceeded)
2016-10-19 04:27:32	SlashLife	Could be a generic snippet where op== might have side effects (as if ... but making special rules for == would just make everything unnecessarily complicated)
2016-10-19 04:27:42	-->	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has joined ##c++
2016-10-19 04:28:08	<--	nilg (~user@92.247.176.162) has quit (Read error: Connection reset by peer)
2016-10-19 04:29:25	-->	omnipot (~Dawid@89-65-180-229.dynamic.chello.pl) has joined ##c++
2016-10-19 04:29:33	chris64	so what I tried is to call a function expand<T<A, B, C>>() and try to match the parameter pack A, B, C in the template < > definition
2016-10-19 04:29:46	<--	jan64 (~jan64@adlh205.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 265 seconds)
2016-10-19 04:30:33	<--	Alucards1 (~Thunderbi@eduD25A.kent.ac.uk) has quit (Ping timeout: 260 seconds)
2016-10-19 04:30:36	chris64	using the function definition expand()(T<A, B, C>) it's easy because I can match a template <typename... Args> on the type T<Args...> but what if this is not in place?
2016-10-19 04:31:07	<--	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has quit (Client Quit)
2016-10-19 04:32:14	<--	bjz_ (~bjz@104.222.140.105) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-10-19 04:32:51	-->	bjz (~bjz@104.222.140.105) has joined ##c++
2016-10-19 04:32:59	<--	vuoto (~vuoto@80-71-135-9.u.parknet.dk) has quit (Remote host closed the connection)
2016-10-19 04:33:06	-->	damme (~damme@2001:16d8:cc75::802) has joined ##c++
2016-10-19 04:33:23	-->	sssilver (~sssilver@2605:6000:ee54:b500:a132:d19b:c256:6855) has joined ##c++
2016-10-19 04:33:23		[04:33]
2016-10-19 04:33:57	<--	dminuoso1 (~dminuoso@unaffiliated/dminuoso) has quit (Ping timeout: 252 seconds)
2016-10-19 04:35:55	<--	Davidbrcz (~david@2a02:120b:2c21:6260:4eeb:42ff:feca:49af) has quit (Ping timeout: 250 seconds)
2016-10-19 04:36:01	<--	maciuszek (~maciuszek@TOROON0949W-LP130-01-1242512157.dsl.bell.ca) has quit (Ping timeout: 256 seconds)
2016-10-19 04:41:18	-->	Anticom (~quassel@217.6.33.234) has joined ##c++
2016-10-19 04:41:18	-->	FreeBirdLjj (~freebirdl@183.206.164.229) has joined ##c++
2016-10-19 04:41:18	SlashLife	Btw.: If I have a template <typename Func, typename... Args> is there anything in the stdlib that would help me get the return type of Func(Args...)?
2016-10-19 04:41:18	SlashLife	For now I've written my own template<typename Func, typename... Args> using return_type_of = decltype(std::declval<Func>()(std::declval<Args>()...)); - but it feels like there should be something predefined.
2016-10-19 04:41:18	-->	introx (~introx@80-123-43-244.adsl.highway.telekom.at) has joined ##c++
2016-10-19 04:41:18	<--	introx (~introx@80-123-43-244.adsl.highway.telekom.at) has quit (Max SendQ exceeded)
2016-10-19 04:41:18	-->	introx_ (~introx@80-123-43-244.adsl.highway.telekom.at) has joined ##c++
2016-10-19 04:41:18	w3z	result_of ...
2016-10-19 04:41:18	<--	Mnkras (~Mnkras@concrete5/781/Mnkras) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-10-19 04:41:18	<--	HUHUOYUN (~HUHUOYUN@59.174.123.232) has quit (Ping timeout: 256 seconds)
2016-10-19 04:41:18	<--	hy__ (~HUHUOYUN@59.174.123.232) has quit (Ping timeout: 260 seconds)
2016-10-19 04:41:18	hs_	SlashLife, ^ that's what result_of is for
2016-10-19 04:41:19	<--	sssilver (~sssilver@2605:6000:ee54:b500:a132:d19b:c256:6855) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-10-19 04:41:19	-->	pdtpatrick (~Patrick@199.201.64.2) has joined ##c++
2016-10-19 04:41:19	-->	maciuszek (~maciuszek@TOROON0949W-LP130-01-1242512157.dsl.bell.ca) has joined ##c++
2016-10-19 04:41:19	-->	Mnkras (~Mnkras@concrete5/781/Mnkras) has joined ##c++
2016-10-19 04:41:19	SlashLife	Yep. Thanks. >_> I feel dumb now ... but somehow glad that my gut feeling wasn't wrong.
2016-10-19 04:42:01	-->	serycjon (~jonas@wced-230-216-32-147.feld.cvut.cz) has joined ##c++
2016-10-19 04:42:06	<--	Mnkras (~Mnkras@concrete5/781/Mnkras) has quit (Client Quit)
2016-10-19 04:42:12	-->	GinoManWorks (~GinoMan@50-251-53-110-static.hfc.comcastbusiness.net) has joined ##c++
2016-10-19 04:42:12	-->	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has joined ##c++
2016-10-19 04:42:22	<--	Gathis (~TheBlack@unaffiliated/gathis) has quit (Remote host closed the connection)
2016-10-19 04:42:33	<--	FreeBirdLjj (~freebirdl@183.206.164.229) has quit (Ping timeout: 244 seconds)
2016-10-19 04:42:42	w3z	its just a convenience, you can do it yourself with decltype
2016-10-19 04:42:50	w3z	but its clearer
2016-10-19 04:43:46	w3z	your impl looks like it may be broken though
2016-10-19 04:43:52	SlashLife	As I did ... but yes, it is clearer to use a helper (which is why I wrote one after being unable to find result_of, despite only using it once in this program), and the decltype(...) above is quite a mouthful to put as a return type of a function.
2016-10-19 04:44:09	-->	rtkt (~rtkt@194.230.159.95) has joined ##c++
2016-10-19 04:44:09	w3z	declval<Args>() is always going to return a reference
2016-10-19 04:44:51	SlashLife	Because Args is variadic?
2016-10-19 04:45:01	w3z	because thats what declval does
2016-10-19 04:45:20	SlashLife	Oh, because it always adds a reference. :O
2016-10-19 04:46:03	-->	mofeing (~mofeing@7.red-83-34-155.dynamicip.rima-tde.net) has joined ##c++
2016-10-19 04:46:36	<--	yumaokao (~yumaokao@218-161-54-18.HINET-IP.hinet.net) has quit (Ping timeout: 252 seconds)
2016-10-19 04:46:56	-->	Tachyon_ (~Thunderbi@95.76.184.120) has joined ##c++
2016-10-19 04:47:03	<--	drozdziak1 (~drozdziak@do-atman.cubiware.com) has quit (Quit: WeeChat 1.5)
2016-10-19 04:48:45	<--	cybex_ (~cybex_@154.69.136.192) has quit (Ping timeout: 252 seconds)
2016-10-19 04:48:45		[04:48]
2016-10-19 04:49:13	<--	manuels (~manuelsch@p20030072AF6BC2001EEA2F3E8805DBF5.dip0.t-ipconnect.de) has quit (Ping timeout: 245 seconds)
2016-10-19 04:49:34	<--	tux_ (~tux@183.202.209.59) has quit (Quit: Leaving)
2016-10-19 04:49:38	<--	bjz (~bjz@104.222.140.105) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-10-19 04:49:54	chris64	Is it possible to get the parameter pack of a type without matching the parameter type using a templated function argument SomeType<Args...>?
2016-10-19 04:50:01	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-19 04:50:25	chris64	s/parameter type/base type/
2016-10-19 04:51:00	chris64	the reason behind this is that I would like to extend a variant type by another type
2016-10-19 04:52:03	chris64	adding a type D to boost::variant<A, B, C> :-)
2016-10-19 04:52:12	w3z	extending a type like variant is pretty simple
2016-10-19 04:52:12	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-19 04:52:17	-->	dminuoso_ (~dminuoso@unaffiliated/dminuoso) has joined ##c++
2016-10-19 04:52:17	<--	hualet (~hualet@183.94.113.153) has quit (Remote host closed the connection)
2016-10-19 04:52:18	chris64	-> boost::variant<A, B, C, D>
2016-10-19 04:52:22	<--	mofeing (~mofeing@7.red-83-34-155.dynamicip.rima-tde.net) has left ##c++
2016-10-19 04:52:33	--	Tachyon_ is now known as LetItSnow
2016-10-19 04:52:35	-->	dave0x6d (uid190567@gateway/web/irccloud.com/x-ekpguifnlevykrrr) has joined ##c++
2016-10-19 04:52:40	<--	mss_cyclist (~MSe@89-250-189-210.tangos.nl) has quit (Ping timeout: 260 seconds)
2016-10-19 04:52:51	chris64	w3z: sure if you can match boost::variant<Args...> using a function argument. but what if I want to do it with out?
2016-10-19 04:53:19	the_2nd	thoughts on this type-level flagging? https://github.com/I3ck/FlaggedT
2016-10-19 04:53:34	chris64	having some thing like template <template <typename> typename T>
2016-10-19 04:53:41	<--	inad922 (~inad925@84-236-100-252.pool.digikabel.hu) has quit (Ping timeout: 250 seconds)
2016-10-19 04:53:54	<--	AquaL1te (~AquaL1te@unaffiliated/aqual1te) has quit (Quit: leaving)
2016-10-19 04:54:04	chris64	w3z: with the inner typename being the parameter pack?
2016-10-19 04:54:10	<--	systemfault (~rcyr@unaffiliated/rcyr) has quit (Quit: Bye!)
2016-10-19 04:54:41	-->	MrP[Home] (~Palsson@c-a46fe555.06-213-6e6b701.cust.bredbandsbolaget.se) has joined ##c++
2016-10-19 04:55:06	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-19 04:55:28	chris64	I really do not see it, sorry :-(
2016-10-19 04:55:33	<--	Karyon (~yaaic@unaffiliated/karyon) has quit (Remote host closed the connection)
2016-10-19 04:56:27	<--	sanct (~sanct@212.35.67.11) has quit (Ping timeout: 250 seconds)
2016-10-19 04:56:29	chris64	I'm pretty sure I do not need boost::mpl, boost::hana or bridgand for this
2016-10-19 04:56:32	w3z	<<TYPE<V2>; template<class B,template<class...A>class TL, class...A> TL<A...,B> f(TL<A...>); template<class T,class B> using U=decltype(f<B>(T{})); using V1=variant<int>; using V2=U<V1,short>;
2016-10-19 04:56:33	geordi	variant<int, short>
2016-10-19 04:57:11	chris64	hu that template <class... A> class TL works? :-x
2016-10-19 04:57:15	-->	sanct (~sanct@212.35.67.11) has joined ##c++
2016-10-19 04:57:25	<--	eduardas_m (~eduardas_@213.197.143.19) has quit (Quit: Leaving)
2016-10-19 04:57:35	w3z	the same technique can be applied to other variadic typelist like templates
2016-10-19 04:57:48	SlashLife	w3z: Okay, it may be incomplete; g++ differentiates for member object pointers and member function pointers, but otherwise they are using essentially the same implementation: static __success_type<decltype(std::declval<_Fn>()(std::declval<_Args>()...))> _S_test(int);, lateron getting the decltype of _S_test(0)
2016-10-19 04:58:46	<--	rzeck (~robert@84-10-11-234.static.chello.pl) has quit (Remote host closed the connection)
2016-10-19 04:58:54	-->	Zxpr1jk (~zxpr1jk@user-69-1-61-138.knology.net) has joined ##c++
2016-10-19 04:58:56	-->	mindandsky (~mindandsk@50-232-5-123-static.hfc.comcastbusiness.net) has joined ##c++
2016-10-19 05:01:17	<--	riemann_ (~riemann@84-10-11-234.static.chello.pl) has quit (Quit: Leaving)
2016-10-19 05:01:19	chris64	w3z: ok, so it doesn't work without the function argument
2016-10-19 05:01:39	-->	Karyon (~yaaic@unaffiliated/karyon) has joined ##c++
2016-10-19 05:01:49	chris64	ie. having template<class B, template <class...A> class TL, class...A> TL<A...,B> f();
2016-10-19 05:02:20	w3z	you would have to provide all the arguments yourself
2016-10-19 05:02:33	w3z	the argument for f allows for deduction
2016-10-19 05:02:52	w3z	you can get the same effect other ways, but thats the simplest
2016-10-19 05:02:53	<--	Dumblez0r (~Dumblez0r@77.72.50.150) has quit (Quit: Leaving)
2016-10-19 05:03:09	<--	Vmj (~Vmj@AAubervilliers-151-1-16-139.w83-114.abo.wanadoo.fr) has quit (Remote host closed the connection)
2016-10-19 05:03:17	chris64	ok
2016-10-19 05:03:31	-->	uhy (~uhy@cac94-8-82-245-27-76.fbx.proxad.net) has joined ##c++
2016-10-19 05:03:44	w3z	note its just a function declaration, youre not actually calling the function
2016-10-19 05:03:57	w3z	its only used in an unevaluated context
2016-10-19 05:03:57		[05:03]
2016-10-19 05:04:12	-->	snover (~Adium@unaffiliated/snover) has joined ##c++
2016-10-19 05:04:16	<--	uhy (~uhy@cac94-8-82-245-27-76.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-10-19 05:04:38	-->	yoe (~yoe@cac94-8-82-245-27-76.fbx.proxad.net) has joined ##c++
2016-10-19 05:04:42	<--	Karyon (~yaaic@unaffiliated/karyon) has quit (Remote host closed the connection)
2016-10-19 05:04:58	<--	yoe (~yoe@cac94-8-82-245-27-76.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-10-19 05:05:05	w3z	(for the purposes of type deduction, at some point ill play with class template type deduction to get the same effect)
2016-10-19 05:05:12	-->	xxd (~xxd@AAubervilliers-151-1-16-139.w83-114.abo.wanadoo.fr) has joined ##c++
2016-10-19 05:05:29	<--	xxd (~xxd@AAubervilliers-151-1-16-139.w83-114.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-10-19 05:05:37	rafalcpp	which lib would you use to read, and to create JSON?
2016-10-19 05:05:38	--	rafalcpp is now known as rafalcpp_
2016-10-19 05:05:56	-->	cybex_ (~cybex_@154.69.136.192) has joined ##c++
2016-10-19 05:06:11	w3z	!give rafalcpp_ general
2016-10-19 05:06:12	LetItSnow	!general
2016-10-19 05:06:13	nolyc	rafalcpp_: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2016-10-19 05:06:14	nolyc	##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2016-10-19 05:06:27	chris64	w3z: I think this is what I tried to do. having `using` definitions only
2016-10-19 05:06:48	<--	dminuoso_ (~dminuoso@unaffiliated/dminuoso) has quit (Remote host closed the connection)
2016-10-19 05:07:07	chris64	w3z: http://melpon.org/wandbox/permlink/6k0KkUMvD2XEzVbZ
2016-10-19 05:07:17	<--	skweek (~skweek@2607:fe50:0:810b:7975:f3ec:7a:80fb) has quit (Ping timeout: 256 seconds)
2016-10-19 05:07:20	-->	Munnu (~timo@91-158-145-247.elisa-laajakaista.fi) has joined ##c++
2016-10-19 05:07:27	<--	dpower (uid103540@gateway/web/irccloud.com/x-ydqhhasqgavvjakw) has quit (Read error: Connection reset by peer)
2016-10-19 05:07:31	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has left ##c++
2016-10-19 05:07:35	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-19 05:07:49	chris64	prog.cc:7:37: note:   expected a class template, got 'boost::variant<int>'
2016-10-19 05:07:51	chris64	>.>
2016-10-19 05:07:53	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has left ##c++
2016-10-19 05:08:03	chris64	is that no class template?
2016-10-19 05:08:06	-->	mentoc (~wmerfalen@unaffiliated/mentoc) has joined ##c++
2016-10-19 05:08:24	-->	araml (~araml@unaffiliated/araml) has joined ##c++
2016-10-19 05:08:25	-->	dpower (uid103540@gateway/web/irccloud.com/x-fpvfmlnkqwvvzeva) has joined ##c++
2016-10-19 05:08:35	-->	mkramer (~Adium@c-76-30-207-152.hsd1.tx.comcast.net) has joined ##c++
2016-10-19 05:08:52	-->	Endarked (~endarked@2a01:11bf:5b1:b300:1816:ec23:5d2e:9288) has joined ##c++
2016-10-19 05:08:58	mentoc	C++ is such a giant complex language. I don't know if I'll ever know it all... and c++17 is coming up soon!
2016-10-19 05:08:59	w3z	it wants the template template type, variant
2016-10-19 05:09:09	TinoDidriksen	You don't need to know it all.
2016-10-19 05:09:26	<--	pdtpatrick (~Patrick@199.201.64.2) has quit (Ping timeout: 256 seconds)
2016-10-19 05:09:40	mentoc	How much of the language is actually used in professional computing?
2016-10-19 05:09:46	w3z	not a specialization of the template, variant<int>
2016-10-19 05:09:59	-->	datahotdog (~datahotdo@bb220-255-165-81.singnet.com.sg) has joined ##c++
2016-10-19 05:10:24	TinoDidriksen	Every part of the language is used if you aggregate projects. No single project uses it all.
2016-10-19 05:10:31	<--	kbdkode (~kbdkode@unaffiliated/kbdkode) has quit (Quit:      see ya    )
2016-10-19 05:10:36	-->	Oipo (~Oipo@gateway/vpn/privateinternetaccess/oipo) has joined ##c++
2016-10-19 05:10:42	w3z	anyway, youre just throwing stuff at the wall to see what sticks :) just use the example i gave you above, itll sink in eventually
2016-10-19 05:10:49	<--	Lillia7 (~lillia7@d3079310.t-net.ne.jp) has quit (Quit: Leaving...)
2016-10-19 05:10:56	chris64	w3z: variant<int> does not match template <typename ...A> typename TL?
2016-10-19 05:11:07	w3z	no
2016-10-19 05:11:13	chris64	why?
2016-10-19 05:11:29	w3z	because its not a template anymore, its a class
2016-10-19 05:11:41	mentoc	I turn to a random page in Bjarne's c++11 book and everytime I learn something new
2016-10-19 05:11:42	<--	OtakuSenpai (~Peter@45.250.59.160) has quit (Ping timeout: 256 seconds)
2016-10-19 05:12:07	mentoc	I seem to never open to a random page and go "Oh I know that already"
2016-10-19 05:12:23	w3z	{} template<template<class> class> struct S{}; template<class> struct T{}; S<T> s;
2016-10-19 05:12:27	geordi	<no output>
2016-10-19 05:12:30	<--	Pent (~pant@S01061c1b689d60c9.cg.shawcable.net) has quit (Read error: Connection reset by peer)
2016-10-19 05:12:45	w3z	S<T<int>> would not match
2016-10-19 05:13:17	-->	yumaokao (~yumaokao@218-161-54-18.HINET-IP.hinet.net) has joined ##c++
2016-10-19 05:13:42	<--	magnicida (~raskolnik@p2003008C2F21FC55A9733EE1C3006A66.dip0.t-ipconnect.de) has quit (Read error: Connection reset by peer)
2016-10-19 05:13:45	mentoc	If I wanted to store a callback function, I guess Lambda would be the correct term, could I use std::function<> ?
2016-10-19 05:14:04	<--	xtheosirian (~theosiria@189.26.89.80.dynamic.adsl.gvt.net.br) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-10-19 05:14:06	mentoc	private: std::function<int,(int)> m_func; ???
2016-10-19 05:14:07	-->	magnicida (~raskolnik@p2003008C2F21FC55A9733EE1C3006A66.dip0.t-ipconnect.de) has joined ##c++
2016-10-19 05:14:45	chris64	mh
2016-10-19 05:14:45	<--	Elysion (~elysion@ppp121-45-81-39.bras1.adl6.internode.on.net) has quit
2016-10-19 05:15:00	<--	sanct (~sanct@212.35.67.11) has quit (Ping timeout: 260 seconds)
2016-10-19 05:15:17	-->	sanct (~sanct@212.35.67.11) has joined ##c++
2016-10-19 05:16:31	-->	lompik (~lompik@2001:19f0:6800:1522:5400:ff:fe21:fd3d) has joined ##c++
2016-10-19 05:17:08	-->	Sculptor (~Sculptor@cable-188-2-190-223.dynamic.sbb.rs) has joined ##c++
2016-10-19 05:17:29	<--	datahotdog (~datahotdo@bb220-255-165-81.singnet.com.sg) has quit (Ping timeout: 256 seconds)
2016-10-19 05:17:33	<--	Sceorem (~Sceorem@xbn44-3-82-232-76-9.fbx.proxad.net) has quit (Read error: Connection reset by peer)
2016-10-19 05:17:37	<--	Markow (~Markow@176.122.215.103) has quit (Remote host closed the connection)
2016-10-19 05:17:49	-->	Pent (~pant@S01061c1b689d60c9.cg.shawcable.net) has joined ##c++
2016-10-19 05:18:36	-->	Davidbrcz (~david@2a02:120b:2c21:6260:4eeb:42ff:feca:49af) has joined ##c++
2016-10-19 05:19:05	<--	Galik (~galik@unaffiliated/galik) has quit (Read error: Connection reset by peer)
2016-10-19 05:19:05		[05:19]
2016-10-19 05:19:08	<--	de-facto (~de-facto@gateway/tor-sasl/de-facto) has quit (Remote host closed the connection)
2016-10-19 05:19:33	-->	Galik (~galik@unaffiliated/galik) has joined ##c++
2016-10-19 05:19:42	chris64	mentoc: lambdas that capture variables have unique type, so either you turn the struct/class/function in a template or you take the lambda using the std::function wrapper
2016-10-19 05:20:11	-->	de-facto (~de-facto@gateway/tor-sasl/de-facto) has joined ##c++
2016-10-19 05:20:16	chris64	lambdas that do not capture anything can be passed as a function pointer
2016-10-19 05:20:18	chris64	as far as I know
2016-10-19 05:20:55	<--	Endarked (~endarked@2a01:11bf:5b1:b300:1816:ec23:5d2e:9288) has quit (Quit: WeeChat 1.5)
2016-10-19 05:22:12	-->	syem (~s@unaffiliated/syem) has joined ##c++
2016-10-19 05:24:23	-->	LKoen (~LKoen@2a01:e35:2eed:a430:692b:7777:a04:76cd) has joined ##c++
2016-10-19 05:24:41	<--	Sculptor (~Sculptor@cable-188-2-190-223.dynamic.sbb.rs) has quit (Changing host)
2016-10-19 05:24:41	-->	Sculptor (~Sculptor@trivialand/master/sculptor) has joined ##c++
2016-10-19 05:24:57	-->	sh00p (~sh00p@84.216.39.31) has joined ##c++
2016-10-19 05:25:57	--	miodi is now known as koodi
2016-10-19 05:26:53	<--	mentoc (~wmerfalen@unaffiliated/mentoc) has quit (Read error: Connection reset by peer)
2016-10-19 05:26:55	-->	archita (uid192338@gateway/web/irccloud.com/x-jfrfrvrckskjlaju) has joined ##c++
2016-10-19 05:27:01	-->	tarspace (~tarspace@37.130.146.83) has joined ##c++
2016-10-19 05:30:06	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-19 05:30:17	<--	Davidbrcz (~david@2a02:120b:2c21:6260:4eeb:42ff:feca:49af) has quit (Ping timeout: 260 seconds)
2016-10-19 05:30:29	<--	luke_penn (~luke_penn@147.162.229.154) has quit (Ping timeout: 260 seconds)
2016-10-19 05:32:41	<--	matkatmu_ (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Read error: Connection reset by peer)
2016-10-19 05:33:01	Sculptor	mars landing in 8min http://bit.ly/marslndng
2016-10-19 05:34:00	<--	geordi (~geordi@v.eelis.net) has quit (Remote host closed the connection)
2016-10-19 05:34:14	-->	geordi (~geordi@v.eelis.net) has joined ##c++
2016-10-19 05:34:14		[05:34]
2016-10-19 05:34:27	-->	somaReverse (~amos@180.167.37.126) has joined ##c++
2016-10-19 05:35:00	-->	Malkrith (uid186536@gateway/web/irccloud.com/x-tzamaygfylvtcpag) has joined ##c++
2016-10-19 05:35:12	-->	KaiserAres (~KaiserAre@unaffiliated/kaiserares) has joined ##c++
2016-10-19 05:35:58	-->	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has joined ##c++
2016-10-19 05:36:02	zamN	O BABBY
2016-10-19 05:36:19	-->	GenteelBen (~GenteelBe@cpc70133-lutn12-2-0-cust324.9-3.cable.virginm.net) has joined ##c++
2016-10-19 05:36:42	-->	shino_ (~Shino@user-31-174-209-151.play-internet.pl) has joined ##c++
2016-10-19 05:36:49	<--	chris64 (~chris@unaffiliated/chris64) has quit (Ping timeout: 260 seconds)
2016-10-19 05:37:01	<--	samik (~smukherje@24.4.162.17) has quit (Quit: samik)
2016-10-19 05:37:29	<--	shino_ (~Shino@user-31-174-209-151.play-internet.pl) has left ##c++
2016-10-19 05:37:55	-->	slavanap (~slavanap@5.145.247.18) has joined ##c++
2016-10-19 05:38:02	-->	abyx (~abyx@104.192.216.35) has joined ##c++
2016-10-19 05:38:18	-->	iwakura (~Shino@user-31-174-209-151.play-internet.pl) has joined ##c++
2016-10-19 05:38:52	-->	seishun (~Kakera@62.85.100.180) has joined ##c++
2016-10-19 05:39:03	-->	kot9ika (~kot9ika@217.118.64.52) has joined ##c++
2016-10-19 05:40:06	Eelis	there, gave geordi op<< overloads for optional/variant/unique_ptr/shared_ptr
2016-10-19 05:40:07	<--	MicroCheapFx_ (~quassel@62.102.229.129) has quit (Read error: Connection reset by peer)
2016-10-19 05:41:27	<--	Cppg (~Cppg@host31-48-246-255.range31-48.btcentralplus.com) has quit (Ping timeout: 244 seconds)
2016-10-19 05:41:43	Eelis	!interview
2016-10-19 05:41:45	nolyc	When does it matter that the string literal of a #line directive, if present, shall be a character string literal?
2016-10-19 05:42:05	Eelis	hmm, good question
2016-10-19 05:42:09	-->	lolek (~lolek@unaffiliated/marcin) has joined ##c++
2016-10-19 05:42:45	-->	xux (~xux@unaffiliated/xux) has joined ##c++
2016-10-19 05:42:47	Eelis	i don't even know what "character string literal" means. i thought we had character literals and string literals
2016-10-19 05:43:09	-->	Dentych (~Dentych@0x3e2c879d.mobile.telia.dk) has joined ##c++
2016-10-19 05:43:18	Eelis	"A character string literal is a string-literal with no prefix." hm i see
2016-10-19 05:44:16	Eelis	hm, so you can't say   #line 3 u8"fakefile"
2016-10-19 05:44:20	<--	Dentych (~Dentych@0x3e2c879d.mobile.telia.dk) has quit (Changing host)
2016-10-19 05:44:20	-->	Dentych (~Dentych@unaffiliated/dentych) has joined ##c++
2016-10-19 05:44:38	Eelis	guess that implies that the source file character encoding is assumed to be the source character encoding or something along those lines?
2016-10-19 05:44:49	Eelis	*source filename
2016-10-19 05:45:00	-->	alienbot (~quassel@183.60.162.100) has joined ##c++
2016-10-19 05:45:04	-->	ipronin (~ipronin@8.25.197.27) has joined ##c++
2016-10-19 05:45:27	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-10-19 05:45:46	<--	lolek (~lolek@unaffiliated/marcin) has left ##c++
2016-10-19 05:46:04	Dentych	Hey. I'm having trouble with boost Signals2. I have 2 classes. Class A has the signal, class B tries to connect to the signal on A. Thereafter, A will call the signal, and a method on B should be called. It all "works", i.e. no compiler errors, but the signal never seems to reach the method in class B. Any links for StackOverflow or guides on how to implement Signals2 as members of a class somewhere?
2016-10-19 05:46:43	-->	maro (~maro@213162068231.public.t-mobile.at) has joined ##c++
2016-10-19 05:47:08	-->	martin-wohli[m] (martin-woh@gateway/shell/matrix.org/x-tposwnywcunkfoli) has joined ##c++
2016-10-19 05:47:31	-->	Rialynn (~Rialynn@unaffiliated/rialynn) has joined ##c++
2016-10-19 05:47:38	-->	Cppg (~Cppg@host31-48-246-255.range31-48.btcentralplus.com) has joined ##c++
2016-10-19 05:47:59	<--	illerucis (~illerucis@2620:10d:c091:200::b:7c6) has quit (Remote host closed the connection)
2016-10-19 05:48:51	-->	moonlessnight (~moonlessn@Sansfil-Securise-Etudiants-Poly-248-62.polymtl.ca) has joined ##c++
2016-10-19 05:49:18	-->	govg (~govg@unaffiliated/govg) has joined ##c++
2016-10-19 05:49:18		[05:49]
2016-10-19 05:49:25	ville	!give Dentych general
2016-10-19 05:49:27	nolyc	Dentych: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2016-10-19 05:49:30	<--	erbse (~test@unaffiliated/erbse) has left ##c++
2016-10-19 05:49:51	<--	alienbot (~quassel@183.60.162.100) has quit (Ping timeout: 252 seconds)
2016-10-19 05:50:17	ville	Dentych: and before you do, prepare a simple test case that shows you having 2 classes, creating instances and connecting
2016-10-19 05:50:38	-->	dminuoso_ (~dminuoso@unaffiliated/dminuoso) has joined ##c++
2016-10-19 05:51:15	-->	Neomex (~Neomex@dua237.neoplus.adsl.tpnet.pl) has joined ##c++
2016-10-19 05:51:15	-->	hatter (~hatter@94.234.37.226) has joined ##c++
2016-10-19 05:51:16	-->	Tectu (~Tectu@193.231.195.178.dynamic.wline.res.cust.swisscom.ch) has joined ##c++
2016-10-19 05:51:45	<--	gnidmoo (~gnidmoo@2a01:e35:2f2c:320:eefe:451c:d8c8:6e3a) has quit (Ping timeout: 260 seconds)
2016-10-19 05:51:48	w3z	does that mean __FILE__ for a unicode filename will break
2016-10-19 05:52:05	<--	bmf1 (~bmf1@216.252.94.149) has quit (Ping timeout: 248 seconds)
2016-10-19 05:52:32	w3z	err nm, #line, and its too boring to look up for __FILE :)
2016-10-19 05:52:40	-->	hualet (~hualet@183.94.113.153) has joined ##c++
2016-10-19 05:53:19	Eelis	<< __FILE__; \ #line 3 "#line and __FILE__ are related"
2016-10-19 05:53:20	geordi	#line and __FILE__ are related
2016-10-19 05:53:39	Eelis	not sure what would break though. probably just a bunch of "the mappings are implementation defined"
2016-10-19 05:54:43	-->	rebb (~rebb3@p54B8162C.dip0.t-ipconnect.de) has joined ##c++
2016-10-19 05:55:30	Eelis	wonder if you can store arbitrary preprocessor data structures in __FILE__ using #line
2016-10-19 05:55:37	-->	scai (~scai@p4FF0E86A.dip0.t-ipconnect.de) has joined ##c++
2016-10-19 05:56:01	<--	magnicida (~raskolnik@p2003008C2F21FC55A9733EE1C3006A66.dip0.t-ipconnect.de) has quit (Ping timeout: 256 seconds)
2016-10-19 05:56:06	<--	Elirips (~Elirips@242.109.22.178.ftth.as8758.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2016-10-19 05:56:17	<--	KaiserAres (~KaiserAre@unaffiliated/kaiserares) has quit (Quit: .)
2016-10-19 05:56:18	w3z	...sigh...guess ill check, im bored
2016-10-19 05:56:23	Eelis	geordi: #define X "yadayada" \ #line 1 X \ int main(){cout<<__FILE__;}
2016-10-19 05:56:24	geordi	yadayada
2016-10-19 05:56:25	<--	calincru__ (~calin@141.85.227.229) has quit (Ping timeout: 260 seconds)
2016-10-19 05:56:27	Eelis	so far so good
2016-10-19 05:56:31	<--	TikityTik (~TikityTik@162.223.44.49) has quit (Read error: Connection reset by peer)
2016-10-19 05:56:36	thinlizzy	hehehe
2016-10-19 05:56:42	-->	KaiserAres (~KaiserAre@unaffiliated/kaiserares) has joined ##c++
2016-10-19 05:57:01	<--	TMM (~hp@fsf/member/pdpc.professional.tmm) has quit (Quit: Ex-Chat)
2016-10-19 05:57:21	<--	hualet (~hualet@183.94.113.153) has quit (Ping timeout: 260 seconds)
2016-10-19 05:57:22	<--	unK_ (~drunK@host-81-190-235-217.dynamic.mm.pl) has quit (Ping timeout: 250 seconds)
2016-10-19 05:57:31	w3z	so ∞∞.cpp printed ./∞∞.cpp for __FILE__
2016-10-19 05:57:50	thinlizzy	double infinity
2016-10-19 05:57:53	-->	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has joined ##c++
2016-10-19 05:58:25	-->	AudaciousTUX (~manjaro-k@103.219.232.15) has joined ##c++
2016-10-19 05:58:26	<--	AudaciousTUX (~manjaro-k@103.219.232.15) has quit (Changing host)
2016-10-19 05:58:26	-->	AudaciousTUX (~manjaro-k@unaffiliated/audacioustux) has joined ##c++
2016-10-19 05:58:41	w3z	which presumably is not in the basic source character set
2016-10-19 05:59:37	Eelis	just because it's a string-literal without prefix doesn't mean it has to contain only basic source characters
2016-10-19 05:59:44	Eelis	unless you want it to be uber portable, of course
2016-10-19 06:00:06	Eelis	<< "∞" // this is fine and dandy if we promise we checked the gcc manual to verify the implementation-defined mappings are as we want them
2016-10-19 06:00:07	geordi	∞
2016-10-19 06:00:18	-->	kaleid0 (~kaleid0@88.sub-174-219-3.myvzw.com) has joined ##c++
2016-10-19 06:00:44	<--	hatter (~hatter@94.234.37.226) has quit (Ping timeout: 260 seconds)
2016-10-19 06:01:00	<--	rendar (~rendar@host68-137-dynamic.59-82-r.retail.telecomitalia.it) has quit (Ping timeout: 252 seconds)
2016-10-19 06:01:00	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-19 06:01:42	<--	moonlessnight (~moonlessn@Sansfil-Securise-Etudiants-Poly-248-62.polymtl.ca) has quit (Quit: Leaving)
2016-10-19 06:02:07	-->	inkjetunito (~ben@x4e30892d.dyn.telefonica.de) has joined ##c++
2016-10-19 06:02:07	<--	inkjetunito (~ben@x4e30892d.dyn.telefonica.de) has quit (Changing host)
2016-10-19 06:02:07	-->	inkjetunito (~ben@unaffiliated/inkjetunit) has joined ##c++
2016-10-19 06:02:09	<--	blaxter (~blaxter@85.251.19.65.dyn.user.ono.com) has quit (Quit: foo)
2016-10-19 06:02:11	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-19 06:02:37	Eelis	(that is, the "∞" part of that. getting the ∞ output also requires tinkering with the locale, which geordi secretly does)
2016-10-19 06:02:47	<--	lsk (~lsk@enucs/member/lsk) has quit (Read error: Connection reset by peer)
2016-10-19 06:03:01	<--	maro (~maro@213162068231.public.t-mobile.at) has quit (Quit: Leaving)
2016-10-19 06:03:55	-->	hatter (~hatter@94.234.37.226) has joined ##c++
2016-10-19 06:04:21	w3z	anyway, lets move on to a not so humdrum interview question
2016-10-19 06:04:21		[06:04]
2016-10-19 06:04:27	w3z	no whammies!
2016-10-19 06:04:32	w3z	!interview
2016-10-19 06:04:33	nolyc	Do you often dream about the fact that a template, a template explicit specialization, and a class template partial specialization shall not have C linkage?
2016-10-19 06:04:45	<--	devcoffee (~devcoffee@j236733.servers.jiffybox.net) has quit (Quit: ZNC 1.6.2+deb2+trusty0 - http://znc.in)
2016-10-19 06:04:51	<--	sigtrm (quassel@quassel.woboq.de) has quit (Remote host closed the connection)
2016-10-19 06:04:56	<--	VolkA (~quassel@j236733.servers.jiffybox.net) has quit (Read error: Connection reset by peer)
2016-10-19 06:05:06	Eelis	maybe C people dream about scary templates with C linkage coming to eat them bwuhaha
2016-10-19 06:05:25	w3z	have you seen there silly generic macros ...
2016-10-19 06:05:31	<--	araml (~araml@unaffiliated/araml) has quit (Quit: WeeChat 1.4)
2016-10-19 06:05:33	Eelis	yep
2016-10-19 06:05:52	w3z	i dont understand why they didnt just adopt template functions ...they obviously want them
2016-10-19 06:06:08	w3z	s/there/their/
2016-10-19 06:06:10	-->	xtheosirian (~theosiria@186.233.157.102) has joined ##c++
2016-10-19 06:06:30	Eelis	in my experience C people don't have good arguments against most C++ features, but this topic is kind of beating a dead horse in ##c++
2016-10-19 06:06:59	<--	Rialynn (~Rialynn@unaffiliated/rialynn) has quit (Quit: ZZZzzz…)
2016-10-19 06:07:04	-->	dusted (~dusted@77.68.146.149) has joined ##c++
2016-10-19 06:07:28	Eelis	nolyc clearly cares about the C people though, and that's fine ^_^
2016-10-19 06:07:29	w3z	k, someone elses turn to spin
2016-10-19 06:07:31	Eelis	!interview
2016-10-19 06:07:33	nolyc	How do you make sense of the fact that a declarator can specify an initial value for the identifier being declared?
2016-10-19 06:08:05	Eelis	well, we can make slightly more sense of it now that it's not needlessly forbidden in places
2016-10-19 06:08:13	<--	Flaeme (sid36625@gateway/web/irccloud.com/x-zxmhcdcyxbxlhmkt) has quit (Remote host closed the connection)
2016-10-19 06:08:32	-->	Flaeme (sid36625@gateway/web/irccloud.com/x-inxdavqmcpqhyuqq) has joined ##c++
2016-10-19 06:08:42	-->	araml (~araml@unaffiliated/araml) has joined ##c++
2016-10-19 06:08:56	Eelis	the rules for where to put the initializer are still hella confusing to new people though
2016-10-19 06:09:03	Eelis	interactions with constexpr and odr
2016-10-19 06:09:04	<--	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has quit (Ping timeout: 256 seconds)
2016-10-19 06:09:20	Eelis	etc, gets complex
2016-10-19 06:09:37	<--	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has quit (Ping timeout: 256 seconds)
2016-10-19 06:09:40	Eelis	not sure if inline variables help at all
2016-10-19 06:09:50	-->	chris64 (~chris@unaffiliated/chris64) has joined ##c++
2016-10-19 06:10:04	w3z	wrt to intial values?
2016-10-19 06:10:16	Eelis	yes, in making things simpler
2016-10-19 06:10:36	<--	reveredge (~reveredge@111.119.209.221) has quit (Ping timeout: 260 seconds)
2016-10-19 06:10:50	Eelis	but that's probably because i've not used them in anger yet
2016-10-19 06:11:27	w3z	if anything, they make it more complicated
2016-10-19 06:11:36	<--	rbern (~rbern@unaffiliated/rbern) has quit (Read error: Connection reset by peer)
2016-10-19 06:11:44	w3z	every occurence has to be token for token identical
2016-10-19 06:11:54	-->	irrenhaus3 (~xenon@HSI-KBW-046-005-253-025.hsi8.kabel-badenwuerttemberg.de) has joined ##c++
2016-10-19 06:11:55	<--	deekej (deekej@nat/redhat/x-nerjvllplxqdpdvq) has quit (Remote host closed the connection)
2016-10-19 06:12:00	-->	Azusa762 (~roy@37.228.243.119) has joined ##c++
2016-10-19 06:12:08	w3z	so if a compiler were super anal ...a space could be a problem
2016-10-19 06:12:36	thinlizzy	anal DP
2016-10-19 06:12:52	w3z	--clang {} inline int i = 0; \\ inline int i  = 0;
2016-10-19 06:12:57	w3z	geordi: ^
2016-10-19 06:12:57	geordi	<no output>
2016-10-19 06:13:32	-->	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has joined ##c++
2016-10-19 06:13:34	w3z	itll even let you say whacky stuff like inline extern iirc
2016-10-19 06:13:35	<--	voidah (~voidah@unaffiliated/voider) has quit (Read error: Connection reset by peer)
2016-10-19 06:13:45	<--	marcofe (~marcofe@test-centre4-gw.estec.esa.int) has quit (Quit: Konversation terminated!)
2016-10-19 06:13:53	w3z	geordi: --clang {} extern inline int;
2016-10-19 06:13:53	geordi	error: 'inline' can only appear on functions and non-local variables
2016-10-19 06:14:03	w3z	good
2016-10-19 06:14:14	<--	tarspace (~tarspace@37.130.146.83) has quit (Quit: tarspace)
2016-10-19 06:14:26	-->	rendar (~rendar@host86-181-dynamic.251-95-r.retail.telecomitalia.it) has joined ##c++
2016-10-19 06:14:27	w3z	the error message is wrong, but at least its an error
2016-10-19 06:14:52	<--	rmunoz (~ricardo@217.124.142.50) has quit (Remote host closed the connection)
2016-10-19 06:15:40	-->	voidah (~voidah@unaffiliated/voider) has joined ##c++
2016-10-19 06:15:41	-->	francis36012 (~francis@136.159.49.122) has joined ##c++
2016-10-19 06:15:45	<--	yo5phz (~yo5phz___@89.137.124.138) has quit (Ping timeout: 256 seconds)
2016-10-19 06:15:50	<--	dusted (~dusted@77.68.146.149) has quit (Quit: Leaving)
2016-10-19 06:16:08	Eelis	well, one thing they're supposed to simplify is cases where you need to make a .cpp just to provide definitions of some static data members
2016-10-19 06:16:08	w3z	oh does gcc have inline vars now
2016-10-19 06:16:28	w3z	{} inline int i=42;
2016-10-19 06:16:28	geordi	<no output>
2016-10-19 06:16:31	w3z	yay
2016-10-19 06:16:40	-->	nacon (~nacon@unaffiliated/nacon) has joined ##c++
2016-10-19 06:17:04	Eelis	but yeah, to be able to understand and use inline variables just means more stuff to learn
2016-10-19 06:17:17	w3z	thatll be nice for header only libs
2016-10-19 06:17:26	<--	interop_madness (~interop_m@unaffiliated/interop-madness/x-8858653) has quit (Quit: Leaving)
2016-10-19 06:18:27	-->	EvilPenguin (~EvilPengu@bur-inet-pa-2.disney.com) has joined ##c++
2016-10-19 06:18:32	<--	anunnaki (~chris@unaffiliated/anunnaki) has quit (Remote host closed the connection)
2016-10-19 06:18:34	w3z	still can form the semi-sensical static inline
2016-10-19 06:19:14	-->	ambro718 (~ambro@unaffiliated/ambro718) has joined ##c++
2016-10-19 06:19:25	w3z	{} thread_local inline int i;
2016-10-19 06:19:25		[06:19]
2016-10-19 06:19:26	geordi	<no output>
2016-10-19 06:19:35	thinlizzy	what is the difference of an inline variable and a constexpr variable?
2016-10-19 06:19:37	w3z	now ...what does that mean
2016-10-19 06:20:14	w3z	inline variables are inline, every occurence has the same address, and you can change their value ...unlike constexpr
2016-10-19 06:20:31	-->	sphenxes01 (~sphenxes@81-5-251-73.hdsl.highway.telekom.at) has joined ##c++
2016-10-19 06:20:49	thinlizzy	so inline variables are the same as extern variables?
2016-10-19 06:20:53	w3z	{i++;} inline int i=42;
2016-10-19 06:20:54	geordi	<no output>
2016-10-19 06:21:01	w3z	no, theyre a definition
2016-10-19 06:21:16	-->	blackwind_123 (~IceChat9@117.192.159.222) has joined ##c++
2016-10-19 06:21:22	thinlizzy	" every occurence has the same address, and you can change their value" --> that also applies to extern variables
2016-10-19 06:21:24	-->	rbern (~rbern@unaffiliated/rbern) has joined ##c++
2016-10-19 06:22:11	thinlizzy	can I conclude that if I never change their value, they will get INLINED? :)
2016-10-19 06:22:29	TinoDidriksen	No, use constexpr for that.
2016-10-19 06:22:33	thinlizzy	:(
2016-10-19 06:22:41	thinlizzy	so I still don't see what an inline variable buys me
2016-10-19 06:22:56	TinoDidriksen	It's a way to define global variables in headers.
2016-10-19 06:23:03	TinoDidriksen	You couldn't do that before.
2016-10-19 06:23:09	thinlizzy	ah! they are a shorthand for extern :DDD
2016-10-19 06:23:11	w3z	every TU that uses them contains a definition, and you wont get odr errors
2016-10-19 06:23:12	thinlizzy	loved it. thanks!
2016-10-19 06:23:28	Eelis	poor lizzy doesn't grok decl!=def, methinks
2016-10-19 06:23:44	thinlizzy	Eelis, poor lizzy likes practical usable answers
2016-10-19 06:23:45	-->	reveredge (~reveredge@115.110.126.75) has joined ##c++
2016-10-19 06:23:46	<--	chris64 (~chris@unaffiliated/chris64) has quit (Quit: leaving)
2016-10-19 06:23:48	<--	sphenxes (~sphenxes@192-164-150-200.hdsl.highway.telekom.at) has quit (Ping timeout: 250 seconds)
2016-10-19 06:23:49	<--	sphenxes02 (~sphenxes@192-164-150-200.hdsl.highway.telekom.at) has quit (Ping timeout: 244 seconds)
2016-10-19 06:24:01	-->	UnlikeSuika_mobi (~UnlikeSui@115.93.122.107) has joined ##c++
2016-10-19 06:24:07	Eelis	thinlizzy: you mean like "<Eelis> well, one thing they're supposed to simplify is cases where you need to make a .cpp just to provide definitions of some static data members" ?
2016-10-19 06:24:36	thinlizzy	now I see it, thanks to TinoDidriksen answer
2016-10-19 06:24:40	-->	sphenxes (~sphenxes@81-5-251-73.hdsl.highway.telekom.at) has joined ##c++
2016-10-19 06:24:44	w3z	hah
2016-10-19 06:24:46	<--	Sausage_ (~sausage@tehsausage.com) has quit (Quit: Goodbye)
2016-10-19 06:24:53	-->	Sausage (~sausage@tehsausage.com) has joined ##c++
2016-10-19 06:25:01	Eelis	glad a rereading of TinoDidriksen made you see that it's not a shorthand for extern.
2016-10-19 06:25:18	thinlizzy	it is an upgrade of extern :)
2016-10-19 06:25:21	-->	user` (~user@183.50.225.164) has joined ##c++
2016-10-19 06:25:46	-->	bumbar_ (~bumbar@unaffiliated/bumbar) has joined ##c++
2016-10-19 06:25:47	thinlizzy	extern was always a stupid thing. thank god these inline variables are taking place now
2016-10-19 06:25:48	<--	vishesh (~vishesh@hydrogen.twistedplane.com) has quit (Quit: WeeChat 1.4)
2016-10-19 06:26:01	 *	Eelis facepalms
2016-10-19 06:26:09	<--	user` (~user@183.50.225.164) has quit (Remote host closed the connection)
2016-10-19 06:26:26	Eelis	extern is not stupid. it has loads of use cases not covered by inline variables
2016-10-19 06:26:34	thinlizzy	tell me six
2016-10-19 06:26:45	<--	blackwind_123 (~IceChat9@117.192.159.222) has quit (Ping timeout: 260 seconds)
2016-10-19 06:26:45	<--	sanct (~sanct@212.35.67.11) has quit (Ping timeout: 260 seconds)
2016-10-19 06:26:56	Eelis	separate compilation is still useful and you don't want to put everything in headers
2016-10-19 06:27:23	thinlizzy	don't seem like loads, but I will take them. thanks
2016-10-19 06:27:28	-->	sanct (~sanct@212.35.67.11) has joined ##c++
2016-10-19 06:28:08	Eelis	you are seriously misguided if you think separate compilation doesn't qualify as loads of use cases
2016-10-19 06:28:19	Eelis	but i already concluded that earlier.
2016-10-19 06:28:23	<--	dflurker (~dimon@metaportal.ru) has quit (Read error: Connection reset by peer)
2016-10-19 06:28:28	-->	kasper^ (~safaf@82.137.12.17) has joined ##c++
2016-10-19 06:29:09	<--	brwsr (~textual@139.59.174.106) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-10-19 06:29:28	<--	inkjetunito (~ben@unaffiliated/inkjetunit) has quit (Quit: q)
2016-10-19 06:29:37	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-19 06:30:08	-->	iceiceice (~chris@pool-173-61-153-221.cmdnnj.fios.verizon.net) has joined ##c++
2016-10-19 06:30:41	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-19 06:30:52	-->	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has joined ##c++
2016-10-19 06:31:04	<--	Vuks (~Vuks@unaffiliated/vuks69) has quit (Ping timeout: 260 seconds)
2016-10-19 06:31:39	<--	rtkt (~rtkt@194.230.159.95) has quit (Ping timeout: 252 seconds)
2016-10-19 06:31:59	-->	roentgen (~roentgen@unaffiliated/roentgen) has joined ##c++
2016-10-19 06:33:03	-->	Enhex (~Enhex@77.138.252.82) has joined ##c++
2016-10-19 06:33:46	-->	dh1tw (~dh1tw@236.red-88-16-49.dynamicip.rima-tde.net) has joined ##c++
2016-10-19 06:34:12	-->	tax (~tax@cpe-72-182-55-97.austin.res.rr.com) has joined ##c++
2016-10-19 06:34:13	<--	MikeDebian (~ML@a81-84-80-8.cpe.netcabo.pt) has quit (Ping timeout: 260 seconds)
2016-10-19 06:34:44	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-19 06:34:44		[06:34]
2016-10-19 06:35:30	<--	KaiserAres (~KaiserAre@unaffiliated/kaiserares) has quit (Ping timeout: 250 seconds)
2016-10-19 06:35:43	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-19 06:35:51	<--	koodi (~koodi@dsl-vntbrasgw1-54fa6e-245.dhcp.inet.fi) has quit (Quit: Leaving)
2016-10-19 06:35:53	-->	shangul (~shangul@5.233.129.138) has joined ##c++
2016-10-19 06:36:27	-->	dflurker (~dimon@metaportal.ru) has joined ##c++
2016-10-19 06:36:37	<--	Xanather (~xanather@unaffiliated/xanather) has quit (Quit: Leaving)
2016-10-19 06:38:24	<--	seishun (~Kakera@62.85.100.180) has quit (Ping timeout: 256 seconds)
2016-10-19 06:39:29	w3z	<<V; extern vector<int> V; \\ vector<int> f(){return {1,2,3,4};} vector<int> V=f();
2016-10-19 06:39:31	geordi	{1, 2, 3, 4}
2016-10-19 06:39:51	<--	MulleDK19 (MulleDK19@unaffiliated/mulledk19) has quit
2016-10-19 06:40:19	-->	irco (~irco@HSI-KBW-134-3-111-4.hsi14.kabel-badenwuerttemberg.de) has joined ##c++
2016-10-19 06:41:06	-->	pdtpatrick (~Patrick@2620:10d:c090:200::e:fe51) has joined ##c++
2016-10-19 06:41:21	w3z	awesome kernel_task just decided to jump to 240% cpu usage
2016-10-19 06:42:05	kstar	Also: this is cool -- I didn't know you could iterate over initializer lists:
2016-10-19 06:42:25	kstar	{ for( auto e : {1,3,5,7,9} ) std::cout << e << " "; }
2016-10-19 06:42:26	geordi	1 3 5 7 9
2016-10-19 06:42:50	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-19 06:42:56	-->	AudaciousTUX- (~manjaro-k@103.219.232.15) has joined ##c++
2016-10-19 06:43:44	<--	abyx (~abyx@104.192.216.35) has quit (Quit: This computer has gone to sleep)
2016-10-19 06:44:02	-->	Streusel (~Anonymous@unaffiliated/streusel) has joined ##c++
2016-10-19 06:44:10	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-19 06:45:01	-->	Streusel_ (~Anonymous@209.87.29.242) has joined ##c++
2016-10-19 06:45:04	w3z	f-ing ridiculous, some tyrant that took credit for everything dies and suddenly the quality of their products goes to shit, rebooting like im running windows
2016-10-19 06:45:12	<--	Azusa762 (~roy@37.228.243.119) has quit (Ping timeout: 250 seconds)
2016-10-19 06:45:16	<--	Streusel (~Anonymous@unaffiliated/streusel) has quit (Disconnected by services)
2016-10-19 06:45:47	<--	AudaciousTUX (~manjaro-k@unaffiliated/audacioustux) has quit (Ping timeout: 256 seconds)
2016-10-19 06:45:59	<--	Streusel_ (~Anonymous@209.87.29.242) has quit (Client Quit)
2016-10-19 06:46:02	<--	w3z (~w3z@173-169-121-88.res.bhn.net) has quit (Quit: w3z)
2016-10-19 06:46:24	-->	Streusel (~Anonymous@unaffiliated/streusel) has joined ##c++
2016-10-19 06:46:27	<--	zero_byte (zer0@nat/redhat/x-skdjtdzajdfejsvq) has quit (Ping timeout: 252 seconds)
2016-10-19 06:46:33	Eelis	you may be looking for ##c++-social
2016-10-19 06:46:43	kstar	LOL
2016-10-19 06:47:03	-->	SteffanW (~steffanw@ip4da40774.direct-adsl.nl) has joined ##c++
2016-10-19 06:47:06	-->	riemann (~riemann@ip-222-209.ists.pl) has joined ##c++
2016-10-19 06:47:52	-->	Henke37 (~Henrik@81-227-16-59-no133.bredband.skanova.com) has joined ##c++
2016-10-19 06:48:39	<--	solrize (solrize@unaffiliated/solrize) has quit (Ping timeout: 258 seconds)
2016-10-19 06:48:44	-->	MulleDK19 (MulleDK19@unaffiliated/mulledk19) has joined ##c++
2016-10-19 06:49:20	<--	Henke37 (~Henrik@81-227-16-59-no133.bredband.skanova.com) has quit (Read error: Connection reset by peer)
2016-10-19 06:50:30	-->	skweek (~skweek@68-200-146-225.res.bhn.net) has joined ##c++
2016-10-19 06:50:30		[06:50]
2016-10-19 06:50:46	<--	mkramer (~Adium@c-76-30-207-152.hsd1.tx.comcast.net) has quit (Quit: Leaving.)
2016-10-19 06:51:30	<--	Khaotic (~Khaotic@unaffiliated/khaotic) has quit (Max SendQ exceeded)
2016-10-19 06:51:38	-->	Khaotic (Khaotic@unaffiliated/khaotic) has joined ##c++
2016-10-19 06:52:33	<--	karab44 (~karab44@unaffiliated/karab44) has quit
2016-10-19 06:52:57	-->	Cranite (~Cranite@cpc95696-derb16-2-0-cust528.8-3.cable.virginm.net) has joined ##c++
2016-10-19 06:53:34	<--	Anticom (~quassel@217.6.33.234) has quit (Remote host closed the connection)
2016-10-19 06:53:58	-->	hualet (~hualet@183.94.113.153) has joined ##c++
2016-10-19 06:54:59	-->	seishun (~Kakera@62.85.100.180) has joined ##c++
2016-10-19 06:55:16	<--	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has quit (Quit: Leaving.)
2016-10-19 06:55:58	-->	unK_ (~drunK@host-81-190-235-217.dynamic.mm.pl) has joined ##c++
2016-10-19 06:56:03	-->	sgflt (~sgflt@p54B21E80.dip0.t-ipconnect.de) has joined ##c++
2016-10-19 06:57:06	-->	Mnkras (~Mnkras@concrete5/781/Mnkras) has joined ##c++
2016-10-19 06:57:19	<--	dflurker (~dimon@metaportal.ru) has quit (Remote host closed the connection)
2016-10-19 06:58:21	<--	serycjon (~jonas@wced-230-216-32-147.feld.cvut.cz) has quit (Ping timeout: 256 seconds)
2016-10-19 06:58:29	-->	mkramer (~Adium@c-76-30-207-152.hsd1.tx.comcast.net) has joined ##c++
2016-10-19 06:58:36	<--	hualet (~hualet@183.94.113.153) has quit (Ping timeout: 260 seconds)
2016-10-19 06:59:02	-->	w3z (~w3z@173-169-121-88.res.bhn.net) has joined ##c++
2016-10-19 07:00:56	-->	zero_byte (~zer0@ip-89-103-110-138.net.upcbroadband.cz) has joined ##c++
2016-10-19 07:01:22	w3z	that was obnoxious, even a reboot didnt help, had to just wait out whatever hidden process was spinning the cpu to 200% ... anyway, off-topic
2016-10-19 07:03:05	w3z	!interview
2016-10-19 07:03:06	nolyc	Were you surprised when you first learned that a handler of type ``array of T'' or function type T is adjusted to be of type ``pointer to T''?
2016-10-19 07:04:55	w3z	ah missing context, exception handler
2016-10-19 07:04:59	-->	jstein_ (~quassel@gentoo/developer/jstein) has joined ##c++
2016-10-19 07:05:36	<--	riemann (~riemann@ip-222-209.ists.pl) has quit (Ping timeout: 256 seconds)
2016-10-19 07:05:36		[07:05]
2016-10-19 07:05:40	-->	dflurker (~dimon@metaportal.ru) has joined ##c++
2016-10-19 07:05:53	<--	lmat (~lmat@c-68-50-32-125.hsd1.in.comcast.net) has quit (Ping timeout: 268 seconds)
2016-10-19 07:07:03	--	jstein_ is now known as jstein
2016-10-19 07:07:08	-->	lmat (~lmat@c-68-50-32-125.hsd1.in.comcast.net) has joined ##c++
2016-10-19 07:08:22	w3z	{try{throw f;} catch(void e()){cout<<TYPE<decltype(e)>;};} void f(){}
2016-10-19 07:08:23	geordi	void (*)()
2016-10-19 07:08:34	-->	KaiserAres (~KaiserAre@unaffiliated/kaiserares) has joined ##c++
2016-10-19 07:09:00	w3z	im surprised that catch a function is even allowed
2016-10-19 07:09:47	<--	destiny (uid73933@gateway/web/irccloud.com/x-iupafutzmohhdsbd) has quit (Quit: Connection closed for inactivity)
2016-10-19 07:09:47	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-19 07:09:49	<--	EvilPenguin (~EvilPengu@bur-inet-pa-2.disney.com) has quit (Ping timeout: 244 seconds)
2016-10-19 07:10:09	-->	peepsalot (~peepsalot@cpe-173-174-74-169.austin.res.rr.com) has joined ##c++
2016-10-19 07:10:50	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-19 07:10:54	<--	shangul (~shangul@5.233.129.138) has quit (Quit: visit my channel: #shangul)
2016-10-19 07:12:43	-->	SwiftMatt (~Objective@162.242.95.104) has joined ##c++
2016-10-19 07:13:58	-->	esas (~esas@unaffiliated/esas) has joined ##c++
2016-10-19 07:15:18	<--	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has quit (Read error: Connection reset by peer)
2016-10-19 07:15:20	<--	Dentych (~Dentych@unaffiliated/dentych) has quit (Read error: Connection reset by peer)
2016-10-19 07:15:59	-->	all_my_watts (~all_my_wa@80-110-115-188.cgn.dynamic.surfer.at) has joined ##c++
2016-10-19 07:16:01	-->	Dumblez0r (~Dumblez0r@x1-6-00-21-70-04-d3-38.cpe.webspeed.dk) has joined ##c++
2016-10-19 07:16:13	<--	Streusel (~Anonymous@unaffiliated/streusel) has quit (Quit: Computer has gone to sleep.)
2016-10-19 07:16:13	<--	SwiftMatt (~Objective@162.242.95.104) has quit (Client Quit)
2016-10-19 07:16:40	<--	Dumblez0r (~Dumblez0r@x1-6-00-21-70-04-d3-38.cpe.webspeed.dk) has quit (Read error: Connection reset by peer)
2016-10-19 07:16:52	<--	Spec-Chum (~Russ@90.254.167.18) has quit (Quit: Leaving)
2016-10-19 07:17:15	<--	AudaciousTUX- (~manjaro-k@103.219.232.15) has quit (Quit: Konversation terminated!)
2016-10-19 07:17:23	-->	biglama (~Day_dream@ram31-1-82-234-77-18.fbx.proxad.net) has joined ##c++
2016-10-19 07:17:31	-->	Neslepaks (~Neslepaks@178.61.71.85) has joined ##c++
2016-10-19 07:18:11	-->	fogbank (~foggy@88.147.42.198) has joined ##c++
2016-10-19 07:18:17	AStorm	w3z: catching and throwing anything is allowed
2016-10-19 07:18:23	<--	DopeMeston (~DopeMesto@gateway/tor-sasl/dopemeston) has quit (Remote host closed the connection)
2016-10-19 07:18:24	<--	de-facto (~de-facto@gateway/tor-sasl/de-facto) has quit (Remote host closed the connection)
2016-10-19 07:19:14	-->	de-facto (~de-facto@gateway/tor-sasl/de-facto) has joined ##c++
2016-10-19 07:19:15	-->	DopeMeston (~DopeMesto@gateway/tor-sasl/dopemeston) has joined ##c++
2016-10-19 07:19:16	V-ille	it's consistent with parameters
2016-10-19 07:19:25	-->	Dumblez0r (~Dumblez0r@x1-6-00-21-70-04-d3-38.cpe.webspeed.dk) has joined ##c++
2016-10-19 07:19:31	AStorm	yep
2016-10-19 07:19:41	<--	Neslepaks (~Neslepaks@178.61.71.85) has left ##c++
2016-10-19 07:19:54	AStorm	it's also dumb as all hell (as is throwing random junk that is not derived from std::exception)
2016-10-19 07:20:11	V-ille	not every exception should derive from std::exception
2016-10-19 07:20:13	AStorm	but, since C++ does not assume standard library exists...
2016-10-19 07:20:40	V-ille	geordi: void f(){} void g(void e()) {cout<<TYPE<decltype(e)>;} int main() {g(f);} // w3z, I mean this
2016-10-19 07:20:40		[07:20]
2016-10-19 07:20:41	geordi	void (*)()
2016-10-19 07:20:54	V-ille	and that baggage probably comes from C
2016-10-19 07:20:56	AStorm	anyway, it's one of those "dumb interview questions"
2016-10-19 07:21:05	AStorm	no, this baggage is fresh in C++
2016-10-19 07:21:20	Eelis	speaking of dumb interview questions...
2016-10-19 07:21:21	Eelis	!interview
2016-10-19 07:21:22	nolyc	Did you know that the destructor for a block-scope object with static or thread storage duration will be executed if and only if it was constructed?
2016-10-19 07:21:33	-->	Henke37 (~Henrik@81-227-16-59-no133.bredband.skanova.com) has joined ##c++
2016-10-19 07:21:35	V-ille	I doubt the automagic function decay in the parameter is fresh
2016-10-19 07:21:43	AStorm	this one is easy, it's how ye olde singletons work
2016-10-19 07:21:46	<--	kaleid0 (~kaleid0@88.sub-174-219-3.myvzw.com) has quit (Remote host closed the connection)
2016-10-19 07:22:08	AStorm	sane since C++11
2016-10-19 07:22:14	V-ille	yes, I knew that, because the destructor for anything will be called only if it was constructed
2016-10-19 07:22:23	-->	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has joined ##c++
2016-10-19 07:22:42	AStorm	not in general... you can call destructors yourself (e.g. if placement new is involved)
2016-10-19 07:22:44	<--	zero_byte (~zer0@ip-89-103-110-138.net.upcbroadband.cz) has quit (Ping timeout: 250 seconds)
2016-10-19 07:23:04	<--	Dumblez0r (~Dumblez0r@x1-6-00-21-70-04-d3-38.cpe.webspeed.dk) has quit (Client Quit)
2016-10-19 07:23:07	-->	Tyilo (~Tyilo@563471b2.rev.stofanet.dk) has joined ##c++
2016-10-19 07:23:09	AStorm	that is the true interview question (as anything involving placement new which is ugly)
2016-10-19 07:23:12	V-ille	that's not what the question means, nor is it what I'm talking about
2016-10-19 07:23:29	-->	zeus_ (~zeus@wsip-72-206-72-194.sd.sd.cox.net) has joined ##c++
2016-10-19 07:23:30	V-ille	what, "did you know that if you call a destructor, you call a destructor?"
2016-10-19 07:23:50	AStorm	no, the question is "When a destructor is not called?"
2016-10-19 07:23:51	V-ille	so what I said is still true in general, despite your hallucinations
2016-10-19 07:24:15	-->	riemann (~riemann@ip-222-88.ists.pl) has joined ##c++
2016-10-19 07:24:54	AStorm	it's not, I actually showed you that you can construct an object that will not be destroyed
2016-10-19 07:24:55	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-19 07:24:58	AStorm	unless you do so manually
2016-10-19 07:25:09	AStorm	hurray for placement new T_T
2016-10-19 07:25:17	V-ille	even so, the destructor will not be called unless the object was constructed
2016-10-19 07:25:37	<--	sn1c_ (~sn1c@xdsl-89-0-120-4.netcologne.de) has quit (Quit: sn1c_)
2016-10-19 07:25:44	AStorm	you can try to delete[] an uninitialized array
2016-10-19 07:25:47	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-19 07:25:56	V-ille	that doesn't call destructors
2016-10-19 07:26:02	AStorm	then the destructor will be called on non-constructed object (because UB; but of course nukes may fire)
2016-10-19 07:26:14	V-ille	in other words, the destructor is not called
2016-10-19 07:26:21	AStorm	it *may* be called, because UB
2016-10-19 07:26:27	AStorm	compilers typically call them.
2016-10-19 07:26:57	V-ille	yes, so the destructor is not called, since it's UB
2016-10-19 07:27:12	AStorm	it MAY be called, just like your computer may explode or catch fire
2016-10-19 07:27:35	V-ille	and, again, from the point of the language specification, the destructor is not called
2016-10-19 07:27:38	AStorm	it is common to see a crash in the destructor of an object when actually an uninitialized array is deleted.
2016-10-19 07:28:02	V-ille	whereas an initialized block-scope static or thread-local will be destroyed as per the language rules, which is what the question was all about
2016-10-19 07:28:29	-->	mibr0_ (~mibr0@90-231-160-241-no158.tbcn.telia.com) has joined ##c++
2016-10-19 07:28:29	-->	mibr0 (~mibr0@90-231-160-241-no158.tbcn.telia.com) has joined ##c++
2016-10-19 07:28:45	<--	mibr0_ (~mibr0@90-231-160-241-no158.tbcn.telia.com) has quit (Remote host closed the connection)
2016-10-19 07:28:46	AStorm	yes, but your statement was far too sweeping and in real life is not true.
2016-10-19 07:28:50	<--	mibr0 (~mibr0@90-231-160-241-no158.tbcn.telia.com) has quit (Remote host closed the connection)
2016-10-19 07:28:58	-->	arpd (~arpd@wan.schoolroad.co.uk) has joined ##c++
2016-10-19 07:29:01	AStorm	what is not constructed may also be destroyed.
2016-10-19 07:29:09	-->	mibr0 (~mibr0@90-231-160-241-no158.tbcn.telia.com) has joined ##c++
2016-10-19 07:29:11	AStorm	(in case of UB)
2016-10-19 07:29:19	V-ille	that statement is 100% correct as far as C++ is concerned, so feel free to continue complaining about it
2016-10-19 07:29:41	AStorm	^
2016-10-19 07:29:41	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-19 07:29:43	-->	Spookah_ (8a286dca@gateway/web/freenode/ip.138.40.109.202) has joined ##c++
2016-10-19 07:29:46	AStorm	UB is part of C++, deal with it
2016-10-19 07:30:44	<--	zeus_ (~zeus@wsip-72-206-72-194.sd.sd.cox.net) has quit
2016-10-19 07:30:49	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-19 07:30:59	<--	zwliew (uid161395@gateway/web/irccloud.com/x-spltjpvbxqqwgdpz) has quit (Quit: Connection closed for inactivity)
2016-10-19 07:31:15	-->	llal (48ce48c2@gateway/web/freenode/ip.72.206.72.194) has joined ##c++
2016-10-19 07:31:17	<--	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has quit (Ping timeout: 248 seconds)
2016-10-19 07:32:31	w3z	countering with anything is possible in UB land, unicorns can fly out my butt is not the way to deal with interview questions, unless they specifically ask what can happen after UB
2016-10-19 07:32:39	w3z	interview fail
2016-10-19 07:33:12	AStorm	the interview trap would give you output of a debugger and ask you what might have happened
2016-10-19 07:33:22	AStorm	and that would be a good interview question
2016-10-19 07:33:40	V-ille	yes, many people explain how the interview could've been better after they fail the interview
2016-10-19 07:33:48	w3z	decay of function to pointer is obviously not new, allowing a catch of a function by value is silly bananas
2016-10-19 07:34:01	-->	aalex (~aalex@64.187.177.58) has joined ##c++
2016-10-19 07:34:08	AStorm	allowing a catch by value period is silly
2016-10-19 07:34:17	AStorm	it should have been deprecated long ago
2016-10-19 07:34:52	V-ille	there are valid users of it, so deprecating it would be quite silly as well
2016-10-19 07:35:01	-->	sssilver (~sssilver@38.122.48.218) has joined ##c++
2016-10-19 07:35:07	-->	Dentych (~Dentych@192.38.33.11) has joined ##c++
2016-10-19 07:35:11	<--	reveredge (~reveredge@115.110.126.75) has quit (Ping timeout: 256 seconds)
2016-10-19 07:35:21	AStorm	valid that cannot be served better with other tools?
2016-10-19 07:35:31	AStorm	I'd need an actual good example
2016-10-19 07:35:56	V-ille	I'd need proof that it isn't used in valid programs before deprecating it
2016-10-19 07:35:56		[07:35]
2016-10-19 07:36:13	V-ille	or that there is somehow a superior alternative, which deprecation should provide
2016-10-19 07:36:17	AStorm	it's probably used in some valid programs in dusty corners
2016-10-19 07:36:19	-->	EvilPenguin (~EvilPengu@bur-inet-pa-2.disney.com) has joined ##c++
2016-10-19 07:36:59	AStorm	so "it may be used" is not a good argument to keep a feature like that
2016-10-19 07:37:21	w3z	thats the rationale for lots of c++ features
2016-10-19 07:37:30	V-ille	we don't need any arguments to keep features, the onus is on the one who proposes a change to make his case
2016-10-19 07:37:34	w3z	for the most part c++98 still compiles
2016-10-19 07:37:40	<--	mindandsky (~mindandsk@50-232-5-123-static.hfc.comcastbusiness.net) has quit (Quit: WeeChat 1.5)
2016-10-19 07:38:09	AStorm	the whole trouble is that it a) makes compiler much more complex b) complicates catch c) prevents optimization when only types are caught
2016-10-19 07:38:29	V-ille	citation needed
2016-10-19 07:38:35	AStorm	(as in, catch(std::exception const&) <- no variable
2016-10-19 07:39:04	-->	dwrngr (~user@96-89-42-188-static.hfc.comcastbusiness.net) has joined ##c++
2016-10-19 07:39:45	<--	kot9ika (~kot9ika@217.118.64.52) has quit (Quit: Leaving)
2016-10-19 07:40:31	<--	T`aZ (~TaZ@ip-83-101-33-57.customer.schedom-europe.net) has quit (Remote host closed the connection)
2016-10-19 07:40:44	w3z	at this point you would either be shuffled off to the next guy or the interview would be cut short :)
2016-10-19 07:40:47	-->	serycjon (~jonas@20.53.broadband14.iol.cz) has joined ##c++
2016-10-19 07:40:53	w3z	anyway
2016-10-19 07:40:56	w3z	!interview
2016-10-19 07:40:58	nolyc	When does it matter that more than one form of copy assignment operator may be declared for a class?
2016-10-19 07:41:29	w3z	hmm when we can copy from multiple types ...?
2016-10-19 07:41:36	V-ille	no
2016-10-19 07:41:40	AStorm	by that they mean with non-const ref? or when you have multiple types
2016-10-19 07:41:48	V-ille	it matters when you default a copy assignment
2016-10-19 07:42:03	AStorm	then it does too indeed
2016-10-19 07:42:16	AStorm	dusty corner cases happen otherwise :D
2016-10-19 07:42:19	<--	LKoen (~LKoen@2a01:e35:2eed:a430:692b:7777:a04:76cd) has quit (Quit: “It’s only logical. First you learn to talk, then you learn to think. Too bad it’s not the other way round.”)
2016-10-19 07:42:26	<--	hatter (~hatter@94.234.37.226) has quit (Ping timeout: 256 seconds)
2016-10-19 07:42:43	-->	Alina-malina (~Alina-mal@37.157.216.129) has joined ##c++
2016-10-19 07:43:12	AStorm	bonus points for noexcept and virtual inheritance
2016-10-19 07:43:28	<--	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has quit (Ping timeout: 260 seconds)
2016-10-19 07:43:30	-->	inad922 (~inad925@84-236-100-252.pool.digikabel.hu) has joined ##c++
2016-10-19 07:43:39	<--	Enhex (~Enhex@77.138.252.82) has quit (Ping timeout: 252 seconds)
2016-10-19 07:43:50	-->	logan_e__ (uid164592@gateway/web/irccloud.com/x-dioxieecsfqdqkrr) has joined ##c++
2016-10-19 07:44:31	<--	coincoin4ever (~coincoin@178.16.163.28) has quit (Quit: WeeChat 1.6)
2016-10-19 07:44:31	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-19 07:44:34	-->	T`aZ (~TaZ@ip-83-101-33-57.customer.schedom-europe.net) has joined ##c++
2016-10-19 07:44:50	-->	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has joined ##c++
2016-10-19 07:46:04	-->	snyp (~Snyp@150.129.132.54) has joined ##c++
2016-10-19 07:46:06	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-19 07:47:18	-->	narann (~narann@2a01:e34:ee2e:4830:c906:ae68:c644:2f60) has joined ##c++
2016-10-19 07:47:37	<--	Dentych (~Dentych@192.38.33.11) has quit (Changing host)
2016-10-19 07:47:37	-->	Dentych (~Dentych@unaffiliated/dentych) has joined ##c++
2016-10-19 07:50:10	-->	Rialynn (~Rialynn@unaffiliated/rialynn) has joined ##c++
2016-10-19 07:50:56	-->	reveredge (~reveredge@111.119.209.221) has joined ##c++
2016-10-19 07:50:56		[07:50]
2016-10-19 07:50:58	<--	llal (48ce48c2@gateway/web/freenode/ip.72.206.72.194) has quit (Quit: Page closed)
2016-10-19 07:51:15	AStorm	!interview
2016-10-19 07:51:16	nolyc	Were you surprised when you first learned that a virtual function declared in one class can be declared a friend in another class?
2016-10-19 07:52:01	AStorm	meh, it has more of a zing in an actual interview
2016-10-19 07:52:23	thinlizzy	you failed, AStorm
2016-10-19 07:52:26	thinlizzy	!next
2016-10-19 07:52:27	nolyc	Another satisfied customer, next!
2016-10-19 07:53:08	<--	mure (~Murii@86.125.194.251) has quit
2016-10-19 07:53:29	AStorm	thinlizzy: the bot actually lies, it's not possible in C++, you can use an idiom to do something like that.
2016-10-19 07:55:03	<--	DopeMeston (~DopeMesto@gateway/tor-sasl/dopemeston) has quit (Remote host closed the connection)
2016-10-19 07:55:22	-->	DopeMeston (~DopeMesto@gateway/tor-sasl/dopemeston) has joined ##c++
2016-10-19 07:55:52	-->	SwiftMatt (~Objective@162.242.95.104) has joined ##c++
2016-10-19 07:56:03	-->	illerucis (~illerucis@2620:10d:c091:200::b:3cd6) has joined ##c++
2016-10-19 07:56:37	V-ille	the bot doesn't lie
2016-10-19 07:56:52	<--	slavanap (~slavanap@5.145.247.18) has quit (Quit: Leaving)
2016-10-19 07:57:00	AStorm	yes? and which virtual will be called? :D
2016-10-19 07:57:10	AStorm	you will have friended a function
2016-10-19 07:57:36	V-ille	so what?
2016-10-19 07:58:01	V-ille	we still know what definition is the friend
2016-10-19 07:58:20	-->	blueness (~blueness@gentoo/developer/blueness) has joined ##c++
2016-10-19 07:58:49	<--	voidah (~voidah@unaffiliated/voider) has quit (Remote host closed the connection)
2016-10-19 07:58:51	V-ille	so, the bot doesn't lie, the bot is correct
2016-10-19 07:59:16	AStorm	write an example, there are at least 3 corner cases where this will produce vastly counterintuitive results
2016-10-19 07:59:38	-->	xarxer (~xarxer@90-230-93-77-no148.tbcn.telia.com) has joined ##c++
2016-10-19 08:00:02	<--	pdtpatrick (~Patrick@2620:10d:c090:200::e:fe51) has quit (Remote host closed the connection)
2016-10-19 08:00:59	<--	sgflt (~sgflt@p54B21E80.dip0.t-ipconnect.de) has quit (Quit: sgflt)
2016-10-19 08:01:06	<--	the_2nd (~the_2nd@2a02:8070:4584:9e00::1) has quit (Quit: Leaving)
2016-10-19 08:01:25	V-ille	geordi: struct X {virtual void f();};  struct Y {friend void X::f(); private: Y() = default;}; void X::f() {Y y;} // AStorm, there you go
2016-10-19 08:01:26	geordi	Success
2016-10-19 08:01:26	-->	Livecodingtv_Ale (~chatzilla@178.220.47.17) has joined ##c++
2016-10-19 08:01:32	-->	symm- (~symm-@86.121.114.211) has joined ##c++
2016-10-19 08:01:52	AStorm	add inheritance, see if virtual actually means anything
2016-10-19 08:02:07	V-ille	I know it doesn't matter for what the friend is
2016-10-19 08:02:25	V-ille	overrides of X::f are not friends
2016-10-19 08:02:29	AStorm	indeed
2016-10-19 08:02:30	-->	corebob (~corebob@cm-84.213.41.214.getinternet.no) has joined ##c++
2016-10-19 08:02:43	V-ille	that wasn't the question
2016-10-19 08:02:54	V-ille	and nobody sane assumes that overrides would be friends
2016-10-19 08:02:57	w3z	arguing with the language of the bots questions is senseless ...theyre direct quotes from the standard
2016-10-19 08:03:00	AStorm	you're not friending a virtual member at all
2016-10-19 08:03:06	AStorm	you're friending this exact member.
2016-10-19 08:03:21	AStorm	there's nothing virtual involved.
2016-10-19 08:03:21	<--	LetItSnow (~Thunderbi@95.76.184.120) has quit (Quit: LetItSnow)
2016-10-19 08:03:23	V-ille	so? we are still declaring a virtual function a friend.
2016-10-19 08:04:32	V-ille	just because c++ doesn't have these imaginary virtual friends doesn't mean that the bot's question isn't correct, it is
2016-10-19 08:04:51	-->	chardan_ (~chardan@c-71-236-165-80.hsd1.or.comcast.net) has joined ##c++
2016-10-19 08:04:52	-->	chardan (~chardan@c-71-236-165-80.hsd1.or.comcast.net) has joined ##c++
2016-10-19 08:04:52	<--	interf (~int@unaffiliated/inter) has quit (Quit: Goodbye cruel world)
2016-10-19 08:05:12	w3z	{f([]{});} void f(void()){return void();} //such voidy-nonsense ...
2016-10-19 08:05:13	geordi	<no output>
2016-10-19 08:06:08	V-ille	{static_cast<void>(f([]{}));} void f(void()){return void();} // let's add some more voidity
2016-10-19 08:06:08		[08:06]
2016-10-19 08:06:09	geordi	<no output>
2016-10-19 08:06:18	<--	harold (~harold@85-238-17-190.fibertel.com.ar) has quit (Ping timeout: 245 seconds)
2016-10-19 08:06:29	AStorm	V-ille: both answers are true if answered vaguely
2016-10-19 08:06:39	AStorm	which makes it a super crud question
2016-10-19 08:06:47	<--	Freze (~Freze@dhcp-18-189-124-12.dyn.mit.edu) has quit (Ping timeout: 265 seconds)
2016-10-19 08:06:51	V-ille	ah, the interviewee is again claiming that his incorrect answer was correct
2016-10-19 08:06:57	<--	KaiserAres (~KaiserAre@unaffiliated/kaiserares) has quit (Ping timeout: 250 seconds)
2016-10-19 08:07:05	-->	pdtpatrick1 (~Patrick@2620:10d:c090:200::f:eab6) has joined ##c++
2016-10-19 08:07:07	V-ille	I doubt he'll pass the interview
2016-10-19 08:07:13	Jupelius	!interview
2016-10-19 08:07:14	nolyc	Did you know that the d-char-sequence serves as a delimiter?
2016-10-19 08:07:25	AStorm	I doubt an interviewer understands the question he asked :D
2016-10-19 08:07:30	<--	benkant (~benkant@node-u0.pool-101-108.dynamic.totbb.net) has quit (Ping timeout: 256 seconds)
2016-10-19 08:07:31	Jupelius	...no
2016-10-19 08:07:33	Jupelius	I still don't
2016-10-19 08:07:43	-->	harold (~harold@190.19.190.67) has joined ##c++
2016-10-19 08:07:43	V-ille	that's why it's called d-char
2016-10-19 08:07:49	AStorm	d-char-sequence is a fun hidden silly thing in C++
2016-10-19 08:08:06	AStorm	it's known probably to standard committee and boost authors
2016-10-19 08:08:14	AStorm	(or whoever dug deep enough)
2016-10-19 08:08:29	AStorm	(and reached Balrog)
2016-10-19 08:08:41	V-ille	well, considering that you fail at the interview questions, we perhaps shouldn't listen to you
2016-10-19 08:09:00	-->	benkant (~benkant@5c.71.5177.ip4.static.sl-reverse.com) has joined ##c++
2016-10-19 08:09:05	<--	chardan (~chardan@c-71-236-165-80.hsd1.or.comcast.net) has quit (Ping timeout: 256 seconds)
2016-10-19 08:09:06	AStorm	yes? here's a real interview question: What is a d-char-sequence typically used for?
2016-10-19 08:09:12	AStorm	no vague answers.
2016-10-19 08:09:15	V-ille	also, I reached Balrog, but he didn't live to tell the tale
2016-10-19 08:09:18	AStorm	:D
2016-10-19 08:09:34	Jupelius	Here's a better question: What is a d-char-sequence?
2016-10-19 08:09:51	w3z	that one came up yesterday, are we starting to repeat already ....there are 2500 of them or so
2016-10-19 08:10:14	-->	pdtpatrick (~Patrick@2620:10d:c090:200::e:7d66) has joined ##c++
2016-10-19 08:10:22	velco	Balrog is not a proper name; it's species; should be "a balrog".
2016-10-19 08:10:34	<--	Dentych (~Dentych@unaffiliated/dentych) has quit (Ping timeout: 250 seconds)
2016-10-19 08:10:43	Jupelius	You can still name a balrog though
2016-10-19 08:10:52	Jupelius	Maybe this was called Balrog
2016-10-19 08:11:00	V-ille	well, at that point I didn't know there was more than one of them
2016-10-19 08:11:09	V-ille	and in that particular case there weren't
2016-10-19 08:11:27	<--	pdtpatrick1 (~Patrick@2620:10d:c090:200::f:eab6) has quit (Ping timeout: 256 seconds)
2016-10-19 08:11:45	<--	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has quit (Ping timeout: 252 seconds)
2016-10-19 08:11:46	-->	chardan (~chardan@c-71-236-165-80.hsd1.or.comcast.net) has joined ##c++
2016-10-19 08:12:21	AStorm	these things are found in the same place recursive macros are found
2016-10-19 08:12:27	velco	His name was "Durin's Bane" ... but enough from me and apologies ;)
2016-10-19 08:12:29	T`aZ	AStorm: easy, it's eiter a d-char , or a d-char-sequence followed by a d-char
2016-10-19 08:12:56	AStorm	the followup is "what is a d-char"
2016-10-19 08:12:58	AStorm	:D
2016-10-19 08:13:09	Jupelius	I tried googling it and I still don't know
2016-10-19 08:13:26	<--	TheSeven (~quassel@rockbox/developer/TheSeven) has quit (Read error: Connection reset by peer)
2016-10-19 08:13:35	Jupelius	And I don't have the standard on this machine
2016-10-19 08:13:39	<--	snover (~Adium@unaffiliated/snover) has quit (Quit: Leaving.)
2016-10-19 08:13:41	V-ille	Durin's Bane is not a name
2016-10-19 08:13:56	-->	snover (~Adium@unaffiliated/snover) has joined ##c++
2016-10-19 08:14:05	-->	hooo (~allplayer@195-230-46-96.adsl.highway.telekom.at) has joined ##c++
2016-10-19 08:14:06	hooo	can i run an application compiled with libc on an OS that doesnt have libc, (alpinelinux)?
2016-10-19 08:14:09	z16	Jupelius: http://eel.is/c++draft/lex.literal#lex.string
2016-10-19 08:14:09	Latexi95	Balrog is a proper noun so it's written with capital B
2016-10-19 08:14:14	AStorm	hooo: static linking.
2016-10-19 08:14:15	<--	chardan (~chardan@c-71-236-165-80.hsd1.or.comcast.net) has quit (Client Quit)
2016-10-19 08:14:22	--	chardan_ is now known as chardan
2016-10-19 08:14:38	z16	Specifically... http://eel.is/c++draft/lex.string#nt:d-char-sequence
2016-10-19 08:14:39	<--	pdtpatrick (~Patrick@2620:10d:c090:200::e:7d66) has quit (Ping timeout: 245 seconds)
2016-10-19 08:14:39	AStorm	that said, certain libc cannot be fully statically linked
2016-10-19 08:14:57	-->	Cohedrin (~textual@c-73-170-239-253.hsd1.ca.comcast.net) has joined ##c++
2016-10-19 08:15:15	w3z	oy vay, weve degenerated to silmarillion talk ...
2016-10-19 08:15:36	<--	sssilver (~sssilver@38.122.48.218) has quit (Ping timeout: 252 seconds)
2016-10-19 08:16:15	V-ille	yeah, it's a funny story, tolkien had been drinking for multiple days and written random crap on various notes, then the mailman came in and asked "what's this?"
2016-10-19 08:16:27	<--	shingshang (~shingshan@101.164.159.8) has quit (Ping timeout: 244 seconds)
2016-10-19 08:16:30	-->	samik (~smukherje@netops-100.sfo1.bitgravity.com) has joined ##c++
2016-10-19 08:16:33	V-ille	tolkien then blabbered incoherent gibberish: "silmarillion"
2016-10-19 08:17:02	V-ille	that's why there's no sense in any of it
2016-10-19 08:17:08	<--	serycjon (~jonas@20.53.broadband14.iol.cz) has quit (Quit: Leaving.)
2016-10-19 08:17:19	KrzaQ	geordi --clang { cout << x; } int x = x;
2016-10-19 08:17:20	geordi	0
2016-10-19 08:17:23	Jupelius	It's just repeats names and years
2016-10-19 08:17:37	-->	serycjon (~jonas@20.53.broadband14.iol.cz) has joined ##c++
2016-10-19 08:17:46	<--	rriemann_ (~rriemann@dhcp-67-135.ixxi.ens-lyon.fr) has quit (Ping timeout: 250 seconds)
2016-10-19 08:17:50	-->	shubhnik_ (~shubhnik@125.62.97.74) has joined ##c++
2016-10-19 08:17:50	<--	unK_ (~drunK@host-81-190-235-217.dynamic.mm.pl) has quit (Quit: KVIrc 4.3.1 Aria http://www.kvirc.net/)
2016-10-19 08:17:51	Jupelius	Or probably does not even repeat them
2016-10-19 08:17:58	-->	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has joined ##c++
2016-10-19 08:18:01	-->	sssilver (~sssilver@38.122.48.218) has joined ##c++
2016-10-19 08:18:04	Latexi95	It's like the Bible
2016-10-19 08:18:05	AStorm	KrzaQ: it might so happen that you should see the warnings
2016-10-19 08:18:06	V-ille	I don't recommend finding out
2016-10-19 08:18:12	-->	pdtpatrick (~Patrick@73.109.63.127) has joined ##c++
2016-10-19 08:18:14	KrzaQ	is that UB for static variables?
2016-10-19 08:18:23	V-ille	no
2016-10-19 08:18:27	AStorm	no
2016-10-19 08:18:34	<--	Alina-malina (~Alina-mal@37.157.216.129) has quit (Changing host)
2016-10-19 08:18:35	-->	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has joined ##c++
2016-10-19 08:18:47	V-ille	it gets zero-initialized before its own value is written to it
2016-10-19 08:18:48	KrzaQ	AStorm: geordi has most sane warnings enabled afaict
2016-10-19 08:18:58	KrzaQ	okay, thanks V-ille :)
2016-10-19 08:19:06	<--	pdtpatrick (~Patrick@73.109.63.127) has quit (Read error: Connection reset by peer)
2016-10-19 08:19:06	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-19 08:19:30	AStorm	can we dump the AST out of geordi making that statement alive? :)
2016-10-19 08:19:32	-->	pdtpatrick (~Patrick@73.109.63.127) has joined ##c++
2016-10-19 08:19:52	KrzaQ	prod eel.is for that ;)
2016-10-19 08:19:52	-->	disgrntld (~levi@12.228.157.10) has joined ##c++
2016-10-19 08:20:05	<--	somaReverse (~amos@180.167.37.126) has quit (Quit: WeeChat 1.6)
2016-10-19 08:20:07	<--	rbern (~rbern@unaffiliated/rbern) has quit (Read error: Connection reset by peer)
2016-10-19 08:20:18	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-19 08:20:39	T`aZ	AStorm: i see that there are a lot more *-char-sequence defined
2016-10-19 08:20:45	-->	AReverser (~dev@24.114.68.43) has joined ##c++
2016-10-19 08:21:09	AStorm	indeed, and they're all as obtuse as actual C++ lexing rules
2016-10-19 08:21:09		[08:21]
2016-10-19 08:21:24	AStorm	(granted, those have become cleaner since C++98)
2016-10-19 08:21:36	Jupelius	geordi: { cout << x; } int x = x + 1;
2016-10-19 08:21:37	geordi	1
2016-10-19 08:22:16	Jupelius	Good way to obfuscate zero initialization
2016-10-19 08:22:42	AStorm	not that good
2016-10-19 08:22:45	<--	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has quit (Ping timeout: 252 seconds)
2016-10-19 08:22:57	w3z	{} int x=*"";
2016-10-19 08:22:58	geordi	<no output>
2016-10-19 08:22:59	-->	oddRaven (~Ravenous@ip4da2344f.direct-adsl.nl) has joined ##c++
2016-10-19 08:23:18	AStorm	I think you wanted to print this out :)
2016-10-19 08:23:41	<--	pdtpatrick (~Patrick@73.109.63.127) has quit (Ping timeout: 244 seconds)
2016-10-19 08:23:41	<--	bocaneri (~bocaneri@about/linux/staff/sauvin) has quit (Read error: Connection reset by peer)
2016-10-19 08:23:47	w3z	nah, i know what itll print
2016-10-19 08:23:49	AStorm	(btw it's "some pointer")
2016-10-19 08:24:11	Jupelius	It doesn't even give warnings
2016-10-19 08:24:17	w3z	why would it?
2016-10-19 08:24:19	AStorm	it's valid \0
2016-10-19 08:24:27	Jupelius	No I mean the int x = x
2016-10-19 08:24:35	w3z	why would it again?
2016-10-19 08:24:35	AStorm	why would it? it is valid code
2016-10-19 08:24:58	-->	MikeDebian (~ML@a81-84-80-8.cpe.netcabo.pt) has joined ##c++
2016-10-19 08:25:03	AStorm	it might be interesting to make it constexpr
2016-10-19 08:25:07	w3z	you want to cry about no warnings ...
2016-10-19 08:25:14	w3z	{} int& r=r;
2016-10-19 08:25:15	geordi	<no output>
2016-10-19 08:25:15	KrzaQ	valid may be a tad of a stretch
2016-10-19 08:25:30	AStorm	w3z: now that is more tricky :D
2016-10-19 08:25:34	Jupelius	geordi: { cout << a << b; } int a; int b = a;
2016-10-19 08:25:35	geordi	00
2016-10-19 08:25:36	urdh	are we going to have this discussion again?
2016-10-19 08:25:58	KrzaQ	well-defined vs correct/valid? :P
2016-10-19 08:26:00	urdh	I thought we did the whole pointless assignment thing last week
2016-10-19 08:26:17	T`aZ	how come this is not UB ?
2016-10-19 08:26:19	urdh	<< (("foo"s + "bar"s) = "baz"s);
2016-10-19 08:26:19	Jupelius	Sorry, I wasn't here then and I have logging off
2016-10-19 08:26:20	geordi	baz
2016-10-19 08:26:25	AStorm	{ cout << r; } int& r = r;
2016-10-19 08:26:26	geordi	error: load of null pointer of type 'int'
2016-10-19 08:26:30	AStorm	yep.
2016-10-19 08:26:32	urdh	##c++ moves in circles :)
2016-10-19 08:26:38	KrzaQ	oh, sorry, urdh. Saw this question on SO and came here to confirm if I understand the situation correctly
2016-10-19 08:26:38	thinlizzy	it is a spiral
2016-10-19 08:26:45	Jupelius	urdh: IRC does
2016-10-19 08:26:58	urdh	KrzaQ no problem, I love a good argument ;)
2016-10-19 08:27:07	thinlizzy	うずまき
2016-10-19 08:27:42	<--	shubhnik_ (~shubhnik@125.62.97.74) has quit (Ping timeout: 252 seconds)
2016-10-19 08:27:45	AStorm	I wonder though why standard allows default initialization for references
2016-10-19 08:27:46	w3z	geordi: --clang {} struct うずまき{};
2016-10-19 08:27:47	geordi	<no output>
2016-10-19 08:27:59	AStorm	w3z: fresh from C++14?
2016-10-19 08:28:03	-->	hariel (~wolfcub@177.131.178.154) has joined ##c++
2016-10-19 08:28:03	<--	V-ille (~ville@59ec7803.symbio.com) has quit (Ping timeout: 265 seconds)
2016-10-19 08:28:12	KrzaQ	geordi --clang {} int& r = r;
2016-10-19 08:28:13	geordi	warning: reference 'r' is not yet bound to a value when used within its own initialization
2016-10-19 08:28:17	KrzaQ	huh
2016-10-19 08:28:19	-->	Uioa2 (~Uioa2@AStrasbourg-653-1-188-198.w90-13.abo.wanadoo.fr) has joined ##c++
2016-10-19 08:28:25	KrzaQ	just a warning, now this is interesting
2016-10-19 08:28:33	KrzaQ	and I vaguely recall w3z mentioning it before
2016-10-19 08:28:41	-->	psychicist__ (~psychicis@ip127-8-212-87.adsl2.static.versatel.nl) has joined ##c++
2016-10-19 08:28:44	AStorm	yes, this is because it is too tricky to actually make it an error
2016-10-19 08:28:58	-->	abyx (~abyx@104.192.216.35) has joined ##c++
2016-10-19 08:29:15	AStorm	(specifically finding out if r has been bound is hard)
2016-10-19 08:29:18	-->	tc2keats (~tc2keats@gateway/tor-sasl/tc2keats) has joined ##c++
2016-10-19 08:29:19	Jupelius	I want to find that in the standard
2016-10-19 08:29:24	thinlizzy	search for it
2016-10-19 08:29:29	thinlizzy	!give Jupelius draft
2016-10-19 08:29:31	nolyc	Jupelius: http://open-std.org/JTC1/SC22/WG21/docs/papers/2016/n4606.pdf (see sidebar at http://isocpp.org for latest version), or http://eel.is/c++draft (html), or http://github.com/cplusplus/draft (LaTeX sources)
2016-10-19 08:29:36	<--	kasper^ (~safaf@82.137.12.17) has quit (Ping timeout: 260 seconds)
2016-10-19 08:29:56	Jupelius	Thanks
2016-10-19 08:29:59	<--	serycjon (~jonas@20.53.broadband14.iol.cz) has quit (Quit: Leaving.)
2016-10-19 08:30:14	w3z	{} class T*T; //youll find this beautiful nonsense in the standard
2016-10-19 08:30:15	geordi	<no output>
2016-10-19 08:30:21	<--	AReverser (~dev@24.114.68.43) has quit (Ping timeout: 250 seconds)
2016-10-19 08:30:33	-->	rbern (~rbern@unaffiliated/rbern) has joined ##c++
2016-10-19 08:30:37	-->	willy23123 (~willy2312@51-171-151-33-dynamic.agg2.lky.bge-rtd.eircom.net) has joined ##c++
2016-10-19 08:30:38	-->	serycjon (~jonas@20.53.broadband14.iol.cz) has joined ##c++
2016-10-19 08:31:02	w3z	anyway, this does all feel like a rerun now
2016-10-19 08:31:28	<--	alhariel (~wolfcub@177.55.195.132) has quit (Ping timeout: 260 seconds)
2016-10-19 08:31:35	urdh	<< 💩.🗣();  struct 🗜{ std::string 🗣() { return "😑"; } }; 🗜 💩;
2016-10-19 08:31:35	geordi	error: stray '\360' in program
2016-10-19 08:31:39	urdh	aww
2016-10-19 08:31:44	T`aZ	somebody should do a faq/wiki with these reruns
2016-10-19 08:31:46	-->	Leovale (~Leovale@104-222-125-173.cpe.teksavvy.com) has joined ##c++
2016-10-19 08:32:05	urdh	geordi: use --clang
2016-10-19 08:32:06	geordi	😑
2016-10-19 08:32:10	-->	Karyon (~yaaic@unaffiliated/karyon) has joined ##c++
2016-10-19 08:32:29	urdh	gcc spoiling all the fun with its poor unicode support
2016-10-19 08:32:37	-->	KAHR-Alpha (~Alpha@AReims-652-1-18-165.w90-18.abo.wanadoo.fr) has joined ##c++
2016-10-19 08:32:37	-->	hz (~username@unaffiliated/hz) has joined ##c++
2016-10-19 08:33:55	<--	sssilver (~sssilver@38.122.48.218) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-10-19 08:34:55	AStorm	which version of gcc does this instance of geordi use?
2016-10-19 08:35:07	Minnozz	geordi: --version
2016-10-19 08:35:08	geordi	GCC 7.0.0 20161016 (experimental)
2016-10-19 08:35:40	AStorm	and uses std=c++1z?
2016-10-19 08:35:42	<--	sphenxes01 (~sphenxes@81-5-251-73.hdsl.highway.telekom.at) has quit (Ping timeout: 256 seconds)
2016-10-19 08:36:17	thinlizzy	std=c++1💩
2016-10-19 08:36:17		[08:36]
2016-10-19 08:36:38	<--	snover (~Adium@unaffiliated/snover) has quit (Quit: Leaving.)
2016-10-19 08:37:28	AStorm	XD
2016-10-19 08:37:36	<--	ipronin (~ipronin@8.25.197.27) has quit (Ping timeout: 252 seconds)
2016-10-19 08:37:37	-->	sphenxes01 (~sphenxes@81-5-251-73.hdsl.highway.telekom.at) has joined ##c++
2016-10-19 08:38:02	AStorm	afair gcc has something called -finput-charset
2016-10-19 08:38:18	<--	Rialynn (~Rialynn@unaffiliated/rialynn) has quit (Quit: ZZZzzz…)
2016-10-19 08:38:30	Minnozz	https://github.com/Eelis/geordi/blob/master/compile-config
2016-10-19 08:38:41	<--	brk_ (~brk_@109.202.145.146) has quit (Quit: Leaving)
2016-10-19 08:38:53	-->	Adva (~Hyrule@2a02:810a:12c0:2600:58cb:cc76:f08:d470) has joined ##c++
2016-10-19 08:38:58	<--	sphenxes01 (~sphenxes@81-5-251-73.hdsl.highway.telekom.at) has quit (Max SendQ exceeded)
2016-10-19 08:39:32	AStorm	interesting, is that emoji from some newer version of unicode?
2016-10-19 08:39:52	AStorm	(because my browser just displays an unknown character)
2016-10-19 08:39:59	-->	sphenxes01 (~sphenxes@81-5-251-73.hdsl.highway.telekom.at) has joined ##c++
2016-10-19 08:39:59	-->	voldyman (uid11639@gateway/web/irccloud.com/x-nzsxtlnvnpinopze) has joined ##c++
2016-10-19 08:40:51	AStorm	yups, this is from unicode v6
2016-10-19 08:41:02	AStorm	emojis breaking poo left and right
2016-10-19 08:42:09	Jupelius	I see no emojis :(
2016-10-19 08:43:01	potatoe	I'm trying to parse some data over the wire (binary), and this is the description of what I have to parse: A 4-byte enumerated type beginning at zero (an unsigned long). In binary, the enumerated value is output. In ASCII or Abbreviated ASCII, the enumeration label is spelled out. I can read the 4 bytes over the wire fine, but how do I assemble it into this type?
2016-10-19 08:43:01	<--	lompik (~lompik@2001:19f0:6800:1522:5400:ff:fe21:fd3d) has quit (Ping timeout: 260 seconds)
2016-10-19 08:43:10	-->	shubh15 (~shubhnik@210.56.98.74) has joined ##c++
2016-10-19 08:43:25	-->	KaiserAres (~KaiserAre@unaffiliated/kaiserares) has joined ##c++
2016-10-19 08:43:41	AStorm	potatoe: parsing random binary is AI-complete
2016-10-19 08:44:00	AStorm	and enums are additionally tricky unless explicitly sized
2016-10-19 08:44:18	potatoe	AStorm it is explicitly sized as 4 bytes
2016-10-19 08:44:34	AStorm	as in enum foo : uint32_t?
2016-10-19 08:44:56	AStorm	oh and then you get to deal with endianness
2016-10-19 08:45:02	AStorm	just so you know :)
2016-10-19 08:45:12	potatoe	you could say that, in my datasheet it just says, 4 binary bytes, and that description of the enum
2016-10-19 08:45:15	<--	willy23123 (~willy2312@51-171-151-33-dynamic.agg2.lky.bge-rtd.eircom.net) has quit (Quit: Colloquy for iPhone - http://colloquy.mobi)
2016-10-19 08:45:31	<--	mackal (~mike@pool-96-237-144-12.bstnma.fios.verizon.net) has quit (Quit: BE VIGILANT.)
2016-10-19 08:45:32	potatoe	so right now I've the 4 bytes parsed into a vector<uint8_t>
2016-10-19 08:45:52	AStorm	congratulations, could've just used uint32_t
2016-10-19 08:46:08	<--	syem (~s@unaffiliated/syem) has quit (Quit: Lost terminal)
2016-10-19 08:46:43	thinlizzy	!next
2016-10-19 08:46:44	nolyc	Another satisfied customer, next!
2016-10-19 08:46:48	AStorm	to convert it back to enum, you get to run a bunch of comparisons and provide a declaration of that enum
2016-10-19 08:47:01	potatoe	AStorm I parsed it that way because I do need to parse individual bytes otherwise (as in the rest of the frame)
2016-10-19 08:47:15	AStorm	with any added number of checks
2016-10-19 08:47:18	urdh	also don't read uint32_t:s directly from the wire
2016-10-19 08:47:21	thinlizzy	potatoe, if endianess is not an issue, do a reinterpret_cast
2016-10-19 08:47:38	AStorm	urdh: hehe that's perfectly safe, unlike reading floats from the wire ;)
2016-10-19 08:47:39	urdh	no, don't
2016-10-19 08:47:40	<--	corsaere (~corsaere@unaffiliated/corsaere) has quit (Ping timeout: 250 seconds)
2016-10-19 08:47:51	urdh	mind the endianess
2016-10-19 08:47:55	thinlizzy	yum! wire
2016-10-19 08:47:58	AStorm	yes, and we have swab
2016-10-19 08:47:58	urdh	and be explicit about what you're doing
2016-10-19 08:47:59	-->	doppel (~chatzilla@ip70-189-197-158.lv.lv.cox.net) has joined ##c++
2016-10-19 08:48:14	urdh	just bit-shift, it's not that hard or expensive or anything
2016-10-19 08:48:16	<--	pmercado (~pmercado@186-104-211-56.baf.movistar.cl) has quit (Ping timeout: 250 seconds)
2016-10-19 08:48:44	thinlizzy	uint32_t number; stream.read(reinterpret_cast<char *>(&number),sizeof(number)); // it is safe. works on my machine
2016-10-19 08:48:45	AStorm	why bit shift when it's in standard library and probably more correct than any number of endianness detecting ifdefs?
2016-10-19 08:48:48	-->	ipronin (~ipronin@8.25.197.27) has joined ##c++
2016-10-19 08:49:08	-->	blackwind_123 (~IceChat9@117.192.138.190) has joined ##c++
2016-10-19 08:50:04	potatoe	hm well I mean, I can bitshift it explicitly and form my uint32_t of course, but my question about the enum stands
2016-10-19 08:50:15	KrzaQ	Heh, some of the newbie code that compiles is most baffling
2016-10-19 08:50:20	urdh	thinlizzy: good for you, now go talk to a different-endian machine, or read some network-endian data or whatever
2016-10-19 08:50:27	-->	zagabar (~zagabar@unaffiliated/zagabar) has joined ##c++
2016-10-19 08:50:32	urdh	AStorm "in standard library"?
2016-10-19 08:50:33	KrzaQ	{ try{}catch(std::bad_alloc()){} }
2016-10-19 08:50:34	geordi	<no output>
2016-10-19 08:50:35	-->	V-ille (~ville@81-175-149-170.bb.dnainternet.fi) has joined ##c++
2016-10-19 08:50:53	urdh	(I'm assuming you know the endianness of your input, in which case bit-shifting is perfectly obvious)
2016-10-19 08:50:53	-->	lizzy (~whytrytof@dslb-092-078-190-062.092.078.pools.vodafone-ip.de) has joined ##c++
2016-10-19 08:51:09	potatoe	urdh I do (or atleast my datasheet does know yeah)
2016-10-19 08:51:18	thinlizzy	char buf[N]; stream.read(buf,N); uint32_t number = unpack(buf);  // ok ok urdh
2016-10-19 08:51:18		[08:51]
2016-10-19 08:51:36	thinlizzy	coding unpack is pretty easy
2016-10-19 08:51:44	--	my123_ is now known as my123
2016-10-19 08:51:45	thinlizzy	just jiggle with bitshifts :)
2016-10-19 08:52:21	AStorm	urdh: actually not in standard library, because C++ is "portable" :D
2016-10-19 08:52:27	urdh	my face will soon have a close encounter with my desk, thinlizzy
2016-10-19 08:52:32	AStorm	no macros are mandated
2016-10-19 08:52:46	AStorm	it all gets interesting when cross compilation gets involved
2016-10-19 08:52:50	thinlizzy	urdh, I am right
2016-10-19 08:52:57	<--	de-facto (~de-facto@gateway/tor-sasl/de-facto) has quit (Read error: Connection reset by peer)
2016-10-19 08:52:57	<--	DopeMeston (~DopeMesto@gateway/tor-sasl/dopemeston) has quit (Read error: Connection reset by peer)
2016-10-19 08:52:57	<--	tc2keats (~tc2keats@gateway/tor-sasl/tc2keats) has quit (Read error: Connection reset by peer)
2016-10-19 08:52:58	thinlizzy	endianess is a solved problem
2016-10-19 08:53:04	AStorm	however, certain compilers do define __BIG_ENDIAN__ and __LITTLE_ENDIAN__ for the target
2016-10-19 08:53:05	thinlizzy	what is wrong with my last example?
2016-10-19 08:53:07	urdh	thinlizzy, you are also repeating what I tried to communicate
2016-10-19 08:53:10	thinlizzy	ok
2016-10-19 08:53:12	thinlizzy	so we agree
2016-10-19 08:53:13	thinlizzy	!next
2016-10-19 08:53:14	nolyc	Another satisfied customer, next!
2016-10-19 08:53:23	-->	vuoto (~vuoto@80-71-135-9.u.parknet.dk) has joined ##c++
2016-10-19 08:53:42	urdh	your last example is fine because it no longer involves reinterpret_cast :)
2016-10-19 08:53:50	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-19 08:53:53	urdh	AStorm i don't get your point
2016-10-19 08:53:54	thinlizzy	unpack() can do that if IT WANTS
2016-10-19 08:54:05	AStorm	urdh: you cannot know the endianness of your target platform portably
2016-10-19 08:54:15	thinlizzy	fuck the portability
2016-10-19 08:54:15	AStorm	because it's not in standard C++ since times immemorial
2016-10-19 08:54:16	urdh	AStorm, that does not matter
2016-10-19 08:54:17	-->	tc2keats (~tc2keats@gateway/tor-sasl/tc2keats) has joined ##c++
2016-10-19 08:54:17	thinlizzy	throw ifdefs
2016-10-19 08:54:18	<--	Nilesh_ (uid116340@gateway/web/irccloud.com/x-zerzspouqspjxngr) has quit (Quit: Connection closed for inactivity)
2016-10-19 08:54:19	thinlizzy	and that is it
2016-10-19 08:54:23	AStorm	ifdefs on what?
2016-10-19 08:54:27	<--	lizzy (~whytrytof@dslb-092-078-190-062.092.078.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2016-10-19 08:54:27	urdh	if you do it with bit shifts
2016-10-19 08:54:27	thinlizzy	on your ass
2016-10-19 08:54:29	AStorm	there's no macro
2016-10-19 08:54:46	-->	de-facto (~de-facto@gateway/tor-sasl/de-facto) has joined ##c++
2016-10-19 08:54:48	-->	sssilver (~sssilver@38.122.48.218) has joined ##c++
2016-10-19 08:54:52	AStorm	they added feature detection macros but forgot to add endianness macros
2016-10-19 08:54:58	AStorm	dumb, dumb, dumb.
2016-10-19 08:54:59	<--	Uioa2 (~Uioa2@AStrasbourg-653-1-188-198.w90-13.abo.wanadoo.fr) has quit (Remote host closed the connection)
2016-10-19 08:55:04	urdh	{ uint32_t stuff = a[0] << 24 | a[1] << 16 | a[2] << 8 | a[3]; cout << stuff; } uint8_t a[4] = {12, 34, 56, 78 }; // AStorm: reading big-endian, regardless of machine endianness
2016-10-19 08:55:04	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-19 08:55:05	geordi	203569230
2016-10-19 08:55:22	AStorm	urdh: no.
2016-10-19 08:55:35	thinlizzy	:D
2016-10-19 08:55:53	potatoe	so I have parsed my 4 bytes into a uint32_t but I still have no idea how to make this into an enum
2016-10-19 08:56:01	thinlizzy	AStorm is very eloquent
2016-10-19 08:56:05	<--	SteffanW (~steffanw@ip4da40774.direct-adsl.nl) has quit (Read error: Connection reset by peer)
2016-10-19 08:56:08	thinlizzy	---> no <---
2016-10-19 08:56:08	urdh	right
2016-10-19 08:56:15	potatoe	because im getting a pretty big number and my datasheet has only binary 0-20 for the enum
2016-10-19 08:56:19	potatoe	what am I missing?
2016-10-19 08:56:21	V-ille	there's a proposal for a standard facility that deals with endianness
2016-10-19 08:56:30	thinlizzy	potatoe, enum? just cast to it
2016-10-19 08:56:53	urdh	lol
2016-10-19 08:56:55	potatoe	so declare an enum with the 0-20 indexes and then cast my uint32_t to it?
2016-10-19 08:57:01	thinlizzy	yes
2016-10-19 08:57:07	thinlizzy	horray
2016-10-19 08:57:09	w3z	ntohl is too exotic?
2016-10-19 08:57:09	thinlizzy	\o/
2016-10-19 08:57:19	potatoe	trying that now, thanks
2016-10-19 08:57:26	-->	gelignite (~gelignite@x4e3147f4.dyn.telefonica.de) has joined ##c++
2016-10-19 08:57:34	V-ille	the proposed facility just tells what the endianness is, nothing more
2016-10-19 08:57:48	thinlizzy	don't forget make your enum class to use uint32_t as its underlying type
2016-10-19 08:57:49	urdh	w3z, ntohl is posix, this is ##c++ ;)
2016-10-19 08:57:51	V-ille	ntohl is not available on non-posix platforms so it doesn't help squat
2016-10-19 08:58:27	-->	DopeMeston (~DopeMesto@gateway/tor-sasl/dopemeston) has joined ##c++
2016-10-19 08:58:33	urdh	so anyway AStorm i would enjoy hearing a more elaborative response than "no"
2016-10-19 08:58:43	<--	purplex88 (~purplex88@unaffiliated/purplex88) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-10-19 08:58:51	w3z	the proposal is just going to give the endianess indicator but not provide the simple transforms, eh
2016-10-19 08:58:59	w3z	why stop there
2016-10-19 08:59:16	potatoe	thinlizzy how do I do that btw?
2016-10-19 09:00:08	w3z	hopefully the networking ts covers all this plus a wire format for the floating point types etc
2016-10-19 09:00:14	V-ille	nobody said things need to stop there
2016-10-19 09:00:28	<--	oddRaven (~Ravenous@ip4da2344f.direct-adsl.nl) has quit (Ping timeout: 245 seconds)
2016-10-19 09:00:29	V-ille	the networking ts doesn't specify any wire formats
2016-10-19 09:00:32	-->	shangul (~shangul@5.233.129.138) has joined ##c++
2016-10-19 09:00:38	w3z	hrumph
2016-10-19 09:00:40	thinlizzy	enum class Blah : uint32_t { a,b,c,sdaf,dasf,df,dsf,sd,... };
2016-10-19 09:01:02	-->	oddRaven (~Ravenous@ip4da2344f.direct-adsl.nl) has joined ##c++
2016-10-19 09:01:21	potatoe	thanks
2016-10-19 09:01:31	w3z	why cant we have nice things
2016-10-19 09:01:36	KrzaQ	{ cout << is_big_endian(); } constexpr bool is_big_endian(){ uint16_t val = 0x0100; return *(char*)(&val); }
2016-10-19 09:01:37	geordi	false
2016-10-19 09:01:50	KrzaQ	isn't this portable pretty much everywhere with CHAR_BIT = 8?
2016-10-19 09:02:55	w3z	yes
2016-10-19 09:03:02	urdh	looks to me like the actual condition is sizeof(uint16_t) == 2, not CHAR_BIT == 8
2016-10-19 09:03:36	<--	orbiter (~UNIX2@178.27.248.117) has quit (Quit: Backen ist Liebe, Braten ist Leidenschaft, Dampfgaren ist Gleichgültigkeit, Dünsten ist Haß.)
2016-10-19 09:03:40	KrzaQ	both, actually
2016-10-19 09:03:45	urdh	or none
2016-10-19 09:03:54	KrzaQ	mhm
2016-10-19 09:04:11	KrzaQ	then you'd have to init it differently for an abstract sizeof2_t
2016-10-19 09:04:48	urdh	yes
2016-10-19 09:05:01	-->	orbiter (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has joined ##c++
2016-10-19 09:05:23	<--	hrnz (hrnz@unaffiliated/hrnz) has quit (Quit: WeeChat 1.6)
2016-10-19 09:05:28	urdh	{ cout << is_big_endian(); } constexpr bool is_big_endian(){ unsigned short val = 0x0001; return !(*(char*)(&val)); } // safer?
2016-10-19 09:05:29	geordi	false
2016-10-19 09:05:37	-->	hrnz (hrnz@unaffiliated/hrnz) has joined ##c++
2016-10-19 09:06:08	KrzaQ	{ cout << is_big_endian(); } constexpr bool is_big_endian(){ using sizeof2_t = uint16_t; sizeof2_t val = 1 << CHAR_BIT; return *(char*)(&val); }
2016-10-19 09:06:09	geordi	false
2016-10-19 09:06:34	<--	shubh15 (~shubhnik@210.56.98.74) has quit (Ping timeout: 244 seconds)
2016-10-19 09:06:34		[09:06]
2016-10-19 09:07:05	-->	Lenore (b84a0f22@gateway/web/freenode/ip.184.74.15.34) has joined ##c++
2016-10-19 09:07:13	<--	dh1tw (~dh1tw@236.red-88-16-49.dynamicip.rima-tde.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-10-19 09:07:37	V-ille	w3z: you can have nice things, just do the work
2016-10-19 09:07:56	-->	maro (~maro@213162068231.public.t-mobile.at) has joined ##c++
2016-10-19 09:07:59	-->	dustyp90 (~Dustin@216.7.225.222) has joined ##c++
2016-10-19 09:08:06	<--	maro (~maro@213162068231.public.t-mobile.at) has quit (Client Quit)
2016-10-19 09:08:46	-->	JacobJeweler (~Jaac@unaffiliated/jacobjeweler) has joined ##c++
2016-10-19 09:08:54	-->	mofeing (~mofeing@7.red-83-34-155.dynamicip.rima-tde.net) has joined ##c++
2016-10-19 09:09:15	-->	kisielk (~kisielk@66.51.141.58) has joined ##c++
2016-10-19 09:09:21	<--	tc2keats (~tc2keats@gateway/tor-sasl/tc2keats) has quit (Remote host closed the connection)
2016-10-19 09:09:42	kisielk	Is anyone here quite knowledgable about ld linker scripts, and VMA / LMA in particular?
2016-10-19 09:09:43	<--	Karyon (~yaaic@unaffiliated/karyon) has quit (Remote host closed the connection)
2016-10-19 09:09:45	<--	de-facto (~de-facto@gateway/tor-sasl/de-facto) has quit (Quit: See you around.)
2016-10-19 09:10:01	V-ille	kisielk: try ##workingset
2016-10-19 09:10:07	-->	de-facto (~de-facto@gateway/tor-sasl/de-facto) has joined ##c++
2016-10-19 09:10:21	kisielk	V-ille: hm ok, never heard of that channel
2016-10-19 09:10:34	thinlizzy	!give kisielk alis
2016-10-19 09:10:36	nolyc	kisielk: alis is a freenode service bot designed to help find channels on freenode instead of asking in other channels that aren't meant to be your gateway into freenode (like ##c++). /msg alis help list to get started.
2016-10-19 09:10:42	<--	Fixi0n (~Jaac@a83-163-76-78.adsl.xs4all.nl) has quit (Ping timeout: 244 seconds)
2016-10-19 09:11:19	<--	mofeing (~mofeing@7.red-83-34-155.dynamicip.rima-tde.net) has left ##c++
2016-10-19 09:11:21	-->	Diyar (~Diyar@unaffiliated/diyar) has joined ##c++
2016-10-19 09:11:44	-->	Cleroth (uid185040@gateway/web/irccloud.com/x-enszsqguzmbberjw) has joined ##c++
2016-10-19 09:11:57	-->	TomyLobo (~TomyLobo@2a02:8109:87c0:20c:fde7:3bd1:8ca7:2baf) has joined ##c++
2016-10-19 09:12:15	<--	riemann (~riemann@ip-222-88.ists.pl) has quit (Quit: Leaving)
2016-10-19 09:12:39	<--	velco (~chill@vlan-nesebar-60-155.comnet.bg) has quit (Quit: Leaving)
2016-10-19 09:14:13	<--	reveredge (~reveredge@111.119.209.221) has quit (Ping timeout: 245 seconds)
2016-10-19 09:14:22	<--	Hello71 (~Hello71@wikipedia/Hello71) has quit (Quit: Bye.)
2016-10-19 09:14:24	<--	iceiceice (~chris@pool-173-61-153-221.cmdnnj.fios.verizon.net) has quit (Quit: Ex-Chat)
2016-10-19 09:14:39	-->	Hello71 (~Hello71@wikipedia/Hello71) has joined ##c++
2016-10-19 09:15:10	Diyar	Question: I have make Random Generator Number be 0 or 1 , and I tried with this:#1 srand(unsigned)time(0)); #2 myRandNum = rand()%(1-0)+0; and the result just Zero, why I didn't get One?!!
2016-10-19 09:15:54	hz	lol
2016-10-19 09:16:19	Lenore	lol took me a sec to see it...  feel daft for not seeing it immediately.
2016-10-19 09:16:20	Diyar	I mean one time supposed to show 1 and maybe next execute be 0
2016-10-19 09:16:38	hz	rand() % N, to get values in [0; N)
2016-10-19 09:17:12	Lenore	that approach to generating random values is statistically biased for N!=2^m
2016-10-19 09:17:27	-->	Streusel (~Anonymous@unaffiliated/streusel) has joined ##c++
2016-10-19 09:17:29	<--	Tectu (~Tectu@193.231.195.178.dynamic.wline.res.cust.swisscom.ch) has quit (Quit: Leaving)
2016-10-19 09:17:31	<--	EvilPenguin (~EvilPengu@bur-inet-pa-2.disney.com) has quit (Ping timeout: 252 seconds)
2016-10-19 09:17:51	thinlizzy	Diyar, open cppreference.com and look for <random> header
2016-10-19 09:18:20	Diyar	thinlizzy, so that actually what I did from there
2016-10-19 09:18:26	thinlizzy	rand() and srand() suck. you will have better results with uniform_int_distribution
2016-10-19 09:18:29	thinlizzy	nope
2016-10-19 09:18:34	thinlizzy	open the right header
2016-10-19 09:18:40	Diyar	but the numbers was 2010 and -100
2016-10-19 09:18:42	thinlizzy	zzz
2016-10-19 09:19:12	xarxer	Diyar, Your #1 line is wrong
2016-10-19 09:19:16	Diyar	thinlizzy, I do not know how to use uniform_int_distribution
2016-10-19 09:19:26	xarxer	srand(unsigned)time(0)) is missing a paren
2016-10-19 09:19:37	xarxer	Two open, three closing
2016-10-19 09:19:38	thinlizzy	Diyar, look at that page. there are examples there
2016-10-19 09:20:05	urdh	all of the lines are wrong ;)
2016-10-19 09:20:07	Diyar	xarxer, > srand((unsigned)time(0)); <
2016-10-19 09:20:25	xarxer	urdh, Yeah, but that's a different story :)
2016-10-19 09:21:01	urdh	anyway
2016-10-19 09:21:08	urdh	!stdref bernoulli_distribution
2016-10-19 09:21:10	refbot	std::bernoulli_distribution: http://en.cppreference.com/w/cpp/numeric/random/bernoulli_distribution
2016-10-19 09:21:15	-->	pukapy123 (~pukapy123@79.119.77.13) has joined ##c++
2016-10-19 09:21:27	-->	Enhex (~Enhex@77.138.252.82) has joined ##c++
2016-10-19 09:21:31	<--	Spookah_ (8a286dca@gateway/web/freenode/ip.138.40.109.202) has quit (Quit: Page closed)
2016-10-19 09:22:02	pukapy123	hello, i'm using codelite to run my c++ code.. but when i hit build and run it pop's up a ugly ass looking windows with the output of the script.. can't it open like the terminal and print the output there?
2016-10-19 09:22:02		[09:22]
2016-10-19 09:22:26	-->	a3f (~a3f@unaffiliated/a3f) has joined ##c++
2016-10-19 09:22:41	-->	marcofe (~marcofe@31.161.52.18) has joined ##c++
2016-10-19 09:22:48	Diyar	urdh, xarxer I'm beginner so excuse me how imagine the story
2016-10-19 09:22:48	thinlizzy	!give pukapy123 general
2016-10-19 09:22:50	nolyc	pukapy123: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2016-10-19 09:23:14	pukapy123	well where should i go then :(
2016-10-19 09:23:15	-->	dofidum (~dofidum@2a02:c7d:850:6700:e894:b8ab:25bd:b84f) has joined ##c++
2016-10-19 09:23:22	thinlizzy	go to hell
2016-10-19 09:23:26	pukapy123	tnx :(
2016-10-19 09:23:39	urdh	thinlizzy is absolutely the nicest person in ##c++
2016-10-19 09:25:25	-->	riemann (~riemann@ip-222-88.ists.pl) has joined ##c++
2016-10-19 09:26:32	<--	oddRaven (~Ravenous@ip4da2344f.direct-adsl.nl) has quit (Ping timeout: 265 seconds)
2016-10-19 09:26:41	Diyar	thinlizzy, what's " <> " this mean?!!
2016-10-19 09:26:46	xarxer	Diyar, Yeah I'm not blaming you :)
2016-10-19 09:26:53	<--	araml (~araml@unaffiliated/araml) has quit (Quit: WeeChat 1.4)
2016-10-19 09:26:53	thinlizzy	!give Diyar book
2016-10-19 09:26:55	nolyc	Diyar: A nice C++ book guide and list can be found at http://stackoverflow.com/q/388242/1090079
2016-10-19 09:27:15	-->	araml (~araml@unaffiliated/araml) has joined ##c++
2016-10-19 09:27:22	Diyar	thinlizzy, it's included in the example with your preferred!!
2016-10-19 09:27:28	-->	Azusa762 (~roy@37.228.243.52) has joined ##c++
2016-10-19 09:27:34	thinlizzy	omg! omg!
2016-10-19 09:27:44	 *	Lenore facepalms.
2016-10-19 09:27:47	urdh	oh god
2016-10-19 09:27:50	Diyar	  std::uniform_int_distribution<> dis(1, 6); <
2016-10-19 09:27:56	TinoDidriksen	pukapy123, ask ##C++-general
2016-10-19 09:27:56	<--	araml (~araml@unaffiliated/araml) has quit (Client Quit)
2016-10-19 09:28:01	urdh	doesn't enable warnings, doesn't know what a template is
2016-10-19 09:28:15	-->	reveredge (~reveredge@115.110.126.75) has joined ##c++
2016-10-19 09:28:21	urdh	I'll repeat what I said earlier today
2016-10-19 09:28:21	thinlizzy	you skip the books, you waste time, Diyar
2016-10-19 09:28:25	urdh	!give Diyar basic
2016-10-19 09:28:25	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-19 09:28:26	nolyc	Diyar: Please ask your question in ##C++-basic, as it involves the fundamental basics of the language.
2016-10-19 09:28:46	doppel	templates are the stencils of c++ programming.
2016-10-19 09:28:48	Diyar	urdh, not need to repeat
2016-10-19 09:28:59	urdh	but you won't listen :(
2016-10-19 09:29:02	thinlizzy	ofc there is a need! you can't even follow a single C++ example
2016-10-19 09:29:27	thinlizzy	you must be the joy of your teachers
2016-10-19 09:29:37	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-19 09:29:49	M-ou-se	{ std::mt19937 randgen(std::random_device{}()); std::bernoulli_distribution dist(0.5); for (int i = 0; i < 20; ++i) cout << dist(randgen) << ' '; }
2016-10-19 09:29:49	Lenore	the longer i spend in this channel, the more i understand why it's so hostile.
2016-10-19 09:29:49	geordi	false true false false true true false false true true false false false false false true true false false true
2016-10-19 09:30:09	<--	KaiserAres (~KaiserAre@unaffiliated/kaiserares) has quit (Ping timeout: 250 seconds)
2016-10-19 09:30:15	thinlizzy	Lenore, time in the right places incur on continuous learning and enlightenment :)
2016-10-19 09:30:23	-->	mazeto (~maz@177.81.215.97) has joined ##c++
2016-10-19 09:30:32	Diyar	thinlizzy, I actually we study this book; https://goo.gl/IP3yVg
2016-10-19 09:31:09	<--	mazeto (~maz@177.81.215.97) has left ##c++
2016-10-19 09:31:37	thinlizzy	C++Ostrich
2016-10-19 09:31:48	w3z	im always shocked how much more tolerant of ... people here are than i am
2016-10-19 09:32:06	Diyar	urdh, I'm listening very clear for that when I write any question I mention what about so if you think silly or stupid question so please as you genius tell me how I supposed to do it or not need lap lap alp. because lap lap not help and not steps also is nothing
2016-10-19 09:32:15	w3z	not thinlizzy :) but some of the regulars
2016-10-19 09:32:15	thinlizzy	lol. that guy
2016-10-19 09:32:17	Lenore	technically, that's an emu, not an ostrich...  but that's really off-topic now ;)
2016-10-19 09:32:18	thinlizzy	!grab Diyar
2016-10-19 09:32:19	nolyc	By your command.
2016-10-19 09:32:32	<--	shangul (~shangul@5.233.129.138) has quit (Quit: visit my channel: #shangul)
2016-10-19 09:33:04	doppel	that would be a great book.  if i understood russian.
2016-10-19 09:33:05	urdh	Diyar I told you earlier today that enabling warnings will help you catch bugs, and you responded with "I don't need warnings, I'm a beginner"
2016-10-19 09:33:18	Lenore	O_o
2016-10-19 09:33:22	urdh	even though we explicitly pointed out that the bug you had would have been caught by a warning
2016-10-19 09:33:24	thinlizzy	aww I missed that gem
2016-10-19 09:33:44	thinlizzy	you are a shame for the russians, Diyar
2016-10-19 09:33:48	M-ou-se	Diyar: note that there is also ##C++-basic, which is more friendly towards beginners.
2016-10-19 09:33:56	thinlizzy	they still do wonderful things with their ZX Spectrum clones
2016-10-19 09:34:04	-->	manuels (~manuelsch@p20030072AF6BC2001EEA2F3E8805DBF5.dip0.t-ipconnect.de) has joined ##c++
2016-10-19 09:34:05	Diyar	urdh, could you ignore the message you do not like it, because waste time not necessary
2016-10-19 09:34:11	thinlizzy	:DDDDDDDDDDDD
2016-10-19 09:34:17	Diyar	M-ou-se, there is not
2016-10-19 09:34:18	thinlizzy	he is scolding you, urdh
2016-10-19 09:34:35	urdh	Diyar you should stop writing shitty C++ code if wasting time is not necessary
2016-10-19 09:34:41	M-ou-se	Diyar: /join ##C++-basic
2016-10-19 09:34:44	thinlizzy	I am LOLing at work :D
2016-10-19 09:34:57	urdh	 ¯\_(ツ)_/¯
2016-10-19 09:35:05	Diyar	thinlizzy, I'm here for C++ not for my personal issue , but to be inform RU is not my native language!!
2016-10-19 09:35:22	thinlizzy	oh phew. the russians aren't so tarnished by you, then :)
2016-10-19 09:35:39	<--	illerucis (~illerucis@2620:10d:c091:200::b:3cd6) has quit (Remote host closed the connection)
2016-10-19 09:36:13	-->	illerucis (~illerucis@2620:10d:c091:200::b:3cd6) has joined ##c++
2016-10-19 09:36:24	Diyar	M-ou-se, damn before it's not no one there, and now it's fine . thanks
2016-10-19 09:36:32	<--	ipronin (~ipronin@8.25.197.27) has quit (Ping timeout: 244 seconds)
2016-10-19 09:36:36	<--	illerucis (~illerucis@2620:10d:c091:200::b:3cd6) has quit (Read error: Connection reset by peer)
2016-10-19 09:37:01	urdh	rejoice!
2016-10-19 09:37:06	thinlizzy	!next
2016-10-19 09:37:06		[09:37]
2016-10-19 09:37:07	nolyc	Another satisfied customer, next!
2016-10-19 09:37:11	<--	mibr0 (~mibr0@90-231-160-241-no158.tbcn.telia.com) has quit (Quit: Leaving)
2016-10-19 09:37:56	Lenore	lol
2016-10-19 09:38:03	urdh	!next2
2016-10-19 09:38:04	nolyc	Another dissatisfied customer, next!
2016-10-19 09:38:06	-->	andrzejku (~andrzejku@90-156-117-46.internetia.net.pl) has joined ##c++
2016-10-19 09:38:10	urdh	more appropriate, I'd say
2016-10-19 09:38:15	Lenore	i didn't know about that one :)
2016-10-19 09:38:24	<--	fedepad_ (~fedepad@eduroam-88-37.zdv.uni-mainz.de) has quit (Remote host closed the connection)
2016-10-19 09:38:31	urdh	although i feel like i'm more dissatisfied than i am
2016-10-19 09:38:37	urdh	uh, he is
2016-10-19 09:38:38	-->	illerucis (~illerucis@2620:10d:c091:200::b:3cd6) has joined ##c++
2016-10-19 09:38:44	thinlizzy	you aren't the customer
2016-10-19 09:38:57	urdh	i know :(
2016-10-19 09:39:12	Lenore	http://melpon.org/wandbox/permlink/3n80DBsRCrqsiSYx this might be obvious, but I thought it's a rather neat use for concepts.
2016-10-19 09:39:16	<--	doppel (~chatzilla@ip70-189-197-158.lv.lv.cox.net) has quit (Quit: ChatZilla 0.9.92 [Firefox 49.0.1/20160922113459])
2016-10-19 09:39:55	Lenore	ignore how pointless the array class is...  it's about passing a templated number of arguments to a function, which i've found difficult without concepts.
2016-10-19 09:40:00	-->	shubh15 (~shubhnik@210.56.98.74) has joined ##c++
2016-10-19 09:40:03	-->	AudaciousTUX (~manjaro-k@unaffiliated/audacioustux) has joined ##c++
2016-10-19 09:40:14	Lenore	the best i'd discovered was static_assert, which causes a compile error rather than a substitution failure.
2016-10-19 09:40:37	thinlizzy	no sfinae with static_assert
2016-10-19 09:40:43	M-ou-se	Lenore: it still quite different from a constructor like ExampleArray(int, int, int, int, int)
2016-10-19 09:41:04	M-ou-se	Lenore: your constructor takes any type for all the arguments, and then tries to (implicitly) convert them
2016-10-19 09:41:07	Lenore	thinlizzy: exactly.
2016-10-19 09:41:11	thinlizzy	ask the implementors to do a static_sfinae :D
2016-10-19 09:41:27	Lenore	M-ou-se: right...  i admit that's a problem.
2016-10-19 09:41:30	thinlizzy	oh wait! there is already if constexpr
2016-10-19 09:41:35	-->	Spec-Chum (~Russ@90.254.167.18) has joined ##c++
2016-10-19 09:41:41	Lenore	thinlizzy: you can't if constexpr a function body itself.
2016-10-19 09:41:47	thinlizzy	:( yeah
2016-10-19 09:41:56	thinlizzy	let's use D
2016-10-19 09:42:00	Lenore	the idea here is that the constructor only appears for exactly N parameters.
2016-10-19 09:43:29	<--	shubh15 (~shubhnik@210.56.98.74) has quit (Read error: Connection reset by peer)
2016-10-19 09:43:40	Lenore	actually, i wonder
2016-10-19 09:43:51	M-ou-se	Lenore: this is how you get a real (int, int, int, int, int) constructor, for my_vector<5>: http://melpon.org/wandbox/permlink/gKJ4vWZtonko8JuP
2016-10-19 09:44:31	M-ou-se	it's not pretty
2016-10-19 09:44:41	M-ou-se	but i haven't found an easier way
2016-10-19 09:44:56	-->	mac_ified (~mac_ified@66.192.139.82) has joined ##c++
2016-10-19 09:45:06	<--	Jesin (~Jesin@pool-96-231-49-118.washdc.fios.verizon.net) has quit (Quit: Leaving)
2016-10-19 09:45:07	<--	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has quit (Quit: deeb)
2016-10-19 09:45:26	-->	sblumentritt (~sebastian@2a02:8070:6198:1200::1c) has joined ##c++
2016-10-19 09:45:34	<--	Lowl3v3l (~Lowl3v3l@dslb-088-075-000-014.088.075.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2016-10-19 09:46:00	-->	vralphv (~vralp@d137-186-58-40.abhsia.telus.net) has joined ##c++
2016-10-19 09:46:02	<--	sblumentritt (~sebastian@2a02:8070:6198:1200::1c) has quit (Client Quit)
2016-10-19 09:46:05	<--	yeticry (~yeticry@114.96.214.72) has quit (Ping timeout: 256 seconds)
2016-10-19 09:46:48	-->	ipronin (~ipronin@8.25.197.27) has joined ##c++
2016-10-19 09:47:10	Lenore	i found an easier way, i think, but it managed to ice gcc.
2016-10-19 09:47:20	<--	xux (~xux@unaffiliated/xux) has quit (Quit: xux)
2016-10-19 09:47:28	<--	AudaciousTUX (~manjaro-k@unaffiliated/audacioustux) has quit (Ping timeout: 250 seconds)
2016-10-19 09:47:38	Lenore	http://melpon.org/wandbox/permlink/XpH7Ec8ytuzQsc8h i think this is defined, but it triggers an ICE.
2016-10-19 09:47:41	-->	Jesin (~Jesin@96.231.49.118) has joined ##c++
2016-10-19 09:48:13	-->	yeticry (~yeticry@114.96.213.103) has joined ##c++
2016-10-19 09:48:34	M-ou-se	Lenore: it's not quite the same. you have a constructor that takes any number of any type, and then checks if it was int. it'll fail if you pass things like char or float, even though those would implicitly convert for a real (int, int, int, int, int) constructor.
2016-10-19 09:48:47	-->	vikaton (uid59278@gateway/web/irccloud.com/x-optnxunrtkqemwho) has joined ##c++
2016-10-19 09:48:56	-->	CaptainPi (~edx@dslb-188-099-192-006.188.099.pools.vodafone-ip.de) has joined ##c++
2016-10-19 09:48:58	Lenore	err... no
2016-10-19 09:49:07	Lenore	those are concept requirements...
2016-10-19 09:49:23	Lenore	if they're not met, the constructor doesn't match
2016-10-19 09:49:24	-->	RoKenn (~RoKenn@2001:a61:2275:b501:4431:333c:9113:1521) has joined ##c++
2016-10-19 09:49:36	M-ou-se	sure, but then (char, float, int, int, int) wouldn't match
2016-10-19 09:49:45	M-ou-se	it would match for a real (int, int, int, int, int) constructor
2016-10-19 09:49:49	-->	shub15 (~shubhnik@210.56.98.74) has joined ##c++
2016-10-19 09:49:50	Lenore	no, that's true.  that just requires a better concept, though
2016-10-19 09:50:01	M-ou-se	you can't fix it for all cases.
2016-10-19 09:50:05	<--	mac_ified (~mac_ified@66.192.139.82) has left ##c++
2016-10-19 09:50:14	<--	francis36012 (~francis@136.159.49.122) has quit (Ping timeout: 250 seconds)
2016-10-19 09:50:19	Lenore	it's true that it won't invoke a user-defined conversion to int
2016-10-19 09:50:24	Lenore	wait, yes it will
2016-10-19 09:50:54	<--	Ir1s (6881c446@gateway/web/cgi-irc/kiwiirc.com/ip.104.129.196.70) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-10-19 09:50:54	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-19 09:51:29	<--	MikeDebian (~ML@a81-84-80-8.cpe.netcabo.pt) has quit (Quit: Leaving)
2016-10-19 09:51:44	<--	ipronin (~ipronin@8.25.197.27) has quit (Ping timeout: 260 seconds)
2016-10-19 09:51:59	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-19 09:52:46	<--	seishun (~Kakera@62.85.100.180) has quit (Ping timeout: 256 seconds)
2016-10-19 09:52:46		[09:52]
2016-10-19 09:53:00	<--	dofidum (~dofidum@2a02:c7d:850:6700:e894:b8ab:25bd:b84f) has quit (Quit: Leaving)
2016-10-19 09:53:06	-->	sh4wn (~sh4wn@gigabit164.ricardis.openfiber.nl) has joined ##c++
2016-10-19 09:53:20	-->	StyxAlso (~markg@118.102.104.245) has joined ##c++
2016-10-19 09:53:28	<--	xtheosirian (~theosiria@186.233.157.102) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-10-19 09:54:06	<--	reveredge (~reveredge@115.110.126.75) has quit (Ping timeout: 244 seconds)
2016-10-19 09:54:55	<--	SwiftMatt (~Objective@162.242.95.104) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-10-19 09:55:09	<--	coco (~coco@84-74-76-240.dclient.hispeed.ch) has quit (Quit: WeeChat 1.6)
2016-10-19 09:55:55	-->	pepper_chico (~pepper_ch@179.98.127.103) has joined ##c++
2016-10-19 09:56:02	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-19 09:57:05	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-19 09:57:52	-->	Tachyon_ (~Thunderbi@95.76.184.120) has joined ##c++
2016-10-19 09:59:16	-->	SwiftMatt (~Objective@162.242.95.104) has joined ##c++
2016-10-19 10:00:01	-->	HerzogDeXtEr (~farci@i59F6B2A5.versanet.de) has joined ##c++
2016-10-19 10:00:03	-->	dofidum (~dofidum@2a02:c7d:850:6700:e894:b8ab:25bd:b84f) has joined ##c++
2016-10-19 10:00:33	-->	KaliLinuxGR (~alexandro@unaffiliated/kalilinuxgr) has joined ##c++
2016-10-19 10:01:30	-->	kbdkode (~kbdkode@unaffiliated/kbdkode) has joined ##c++
2016-10-19 10:01:31	<--	bazrush (~bazrush@149.152.238.178.in-addr.arpa) has quit (Read error: Connection reset by peer)
2016-10-19 10:01:43	-->	bazrush (~bazrush@149.152.238.178.in-addr.arpa) has joined ##c++
2016-10-19 10:01:45	<--	shub15 (~shubhnik@210.56.98.74) has quit (Ping timeout: 252 seconds)
2016-10-19 10:01:46	<--	omnipot (~Dawid@89-65-180-229.dynamic.chello.pl) has quit (Read error: Connection reset by peer)
2016-10-19 10:01:58	-->	solrize (solrize@unaffiliated/solrize) has joined ##c++
2016-10-19 10:03:11	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-19 10:04:10	<--	Tachyon_ (~Thunderbi@95.76.184.120) has quit (Quit: Tachyon_)
2016-10-19 10:04:19	<--	Anodl1 (~Anodl@p2003007A2F489700A5F01FAFFF38C4BB.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2016-10-19 10:04:34	-->	Anodl (~Anodl@p2003007A2F489700A5F01FAFFF38C4BB.dip0.t-ipconnect.de) has joined ##c++
2016-10-19 10:04:43	Lenore	http://melpon.org/wandbox/permlink/LEZCxPHhWZjhSLcd this is much, much closer.
2016-10-19 10:04:48	<--	mkramer (~Adium@c-76-30-207-152.hsd1.tx.comcast.net) has quit (Quit: Leaving.)
2016-10-19 10:05:14	Eelis	w3z: ooh, i came across this: "bind uses is_bind_expression to detect subexpressions"
2016-10-19 10:05:34	<--	de-facto (~de-facto@gateway/tor-sasl/de-facto) has quit (Ping timeout: 245 seconds)
2016-10-19 10:05:50	<--	vuoto (~vuoto@80-71-135-9.u.parknet.dk) has quit (Quit: Lost terminal)
2016-10-19 10:06:26	-->	Anodl1 (~Anodl@p57B25373.dip0.t-ipconnect.de) has joined ##c++
2016-10-19 10:06:28	-->	ipronin (~ipronin@8.25.197.27) has joined ##c++
2016-10-19 10:06:38	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-19 10:06:39	<--	inad922 (~inad925@84-236-100-252.pool.digikabel.hu) has quit (Ping timeout: 252 seconds)
2016-10-19 10:06:55	-->	tarspace (~tarspace@37.130.146.83) has joined ##c++
2016-10-19 10:07:47	w3z	i saw that, so i guess it special cases when you bind a _Bind
2016-10-19 10:07:47		[10:07]
2016-10-19 10:07:49	Diyar	thinlizzy, I have done with srand, but I was interesting with your suggestion about uniform_int_distribution , in the result it's show me with both > 0 1 < why?!
2016-10-19 10:08:42	<--	Anodl (~Anodl@p2003007A2F489700A5F01FAFFF38C4BB.dip0.t-ipconnect.de) has quit (Ping timeout: 250 seconds)
2016-10-19 10:09:38	<--	rendar (~rendar@host86-181-dynamic.251-95-r.retail.telecomitalia.it) has quit (Quit: Leaving)
2016-10-19 10:10:09	-->	fedepad (~fedepad@p4FE13A65.dip0.t-ipconnect.de) has joined ##c++
2016-10-19 10:10:09	<--	DopeMeston (~DopeMesto@gateway/tor-sasl/dopemeston) has quit (Ping timeout: 245 seconds)
2016-10-19 10:10:38	-->	reveredge (~reveredge@111.119.209.221) has joined ##c++
2016-10-19 10:12:07	<--	Anodl1 (~Anodl@p57B25373.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2016-10-19 10:12:44	<--	ipronin (~ipronin@8.25.197.27) has quit (Ping timeout: 260 seconds)
2016-10-19 10:12:53	<--	pukapy123 (~pukapy123@79.119.77.13) has quit (Remote host closed the connection)
2016-10-19 10:13:05	<--	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has quit (Quit: WeeChat 1.6)
2016-10-19 10:13:22	-->	DopeMeston (~DopeMesto@gateway/tor-sasl/dopemeston) has joined ##c++
2016-10-19 10:13:31	-->	seishun (~Kakera@87.110.166.176) has joined ##c++
2016-10-19 10:13:54	-->	Fixi0n (~Jaac@a83-163-76-78.adsl.xs4all.nl) has joined ##c++
2016-10-19 10:14:10	-->	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has joined ##c++
2016-10-19 10:14:38	<--	andrzejku (~andrzejku@90-156-117-46.internetia.net.pl) has quit (Remote host closed the connection)
2016-10-19 10:15:22	-->	snover (~Adium@unaffiliated/snover) has joined ##c++
2016-10-19 10:16:18	<--	arpd (~arpd@wan.schoolroad.co.uk) has quit (Quit: WeeChat 1.4)
2016-10-19 10:17:00	<--	JacobJeweler (~Jaac@unaffiliated/jacobjeweler) has quit (Ping timeout: 260 seconds)
2016-10-19 10:18:08	<--	Streusel (~Anonymous@unaffiliated/streusel) has quit (Quit: Computer has gone to sleep.)
2016-10-19 10:18:40	<--	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has quit (Ping timeout: 250 seconds)
2016-10-19 10:19:08	<--	scai (~scai@p4FF0E86A.dip0.t-ipconnect.de) has left ##c++ ("[IRSSI]")
2016-10-19 10:21:02	-->	de-facto (~de-facto@gateway/tor-sasl/de-facto) has joined ##c++
2016-10-19 10:23:29	<--	blueness (~blueness@gentoo/developer/blueness) has quit (Quit: blueness)
2016-10-19 10:23:29		[10:23]
2016-10-19 10:24:22	-->	willy23123 (~willy2312@51-171-151-33-dynamic.agg2.lky.bge-rtd.eircom.net) has joined ##c++
2016-10-19 10:24:35	-->	Anodl (~Anodl@p57B25373.dip0.t-ipconnect.de) has joined ##c++
2016-10-19 10:25:04	-->	chindy (~julian@194-166-166-146.adsl.highway.telekom.at) has joined ##c++
2016-10-19 10:26:17	-->	araml (~araml@unaffiliated/araml) has joined ##c++
2016-10-19 10:27:43	-->	rtkt (~rtkt@2a02:1205:c6bd:7df0:81f4:ec43:739d:42d5) has joined ##c++
2016-10-19 10:29:47	<--	RoKenn (~RoKenn@2001:a61:2275:b501:4431:333c:9113:1521) has quit (Quit: NSA proxy service interrupted)
2016-10-19 10:30:15	-->	ipronin (~ipronin@8.25.197.27) has joined ##c++
2016-10-19 10:30:43	<--	Spec-Chum (~Russ@90.254.167.18) has quit (Quit: Leaving)
2016-10-19 10:31:21	<--	sh4wn (~sh4wn@gigabit164.ricardis.openfiber.nl) has quit (Quit: sh4wn)
2016-10-19 10:32:00	<--	seishun (~Kakera@87.110.166.176) has quit (Ping timeout: 252 seconds)
2016-10-19 10:33:55	ppf	are the fixed width integer types actually standardized?
2016-10-19 10:34:00	ppf	or is that an implementation thing
2016-10-19 10:34:18	-->	xtheosirian (~theosiria@189.26.89.80.dynamic.adsl.gvt.net.br) has joined ##c++
2016-10-19 10:34:43	V-ille	they are optional
2016-10-19 10:35:16	<--	ipronin (~ipronin@8.25.197.27) has quit (Ping timeout: 256 seconds)
2016-10-19 10:35:49	ppf	alright, thx
2016-10-19 10:36:19	-->	neurrowcat (~neurrowca@h-152-251.a163.priv.bahnhof.se) has joined ##c++
2016-10-19 10:37:21	M-ou-se	ppf: a platform with 16 bit chars simply wouldn't have uint8_t, for example
2016-10-19 10:37:49	<--	br14_ (rick@lostbuthappy.net) has left ##c++
2016-10-19 10:37:49	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-19 10:37:58	ppf	M-ou-se: yeah makes sense
2016-10-19 10:38:01	<--	cliluw (~cliluw@unaffiliated/cliluw) has quit (Ping timeout: 244 seconds)
2016-10-19 10:38:03	<--	rtkt (~rtkt@2a02:1205:c6bd:7df0:81f4:ec43:739d:42d5) has quit (Quit: Leaving)
2016-10-19 10:38:09	-->	ipronin (~ipronin@8.25.197.27) has joined ##c++
2016-10-19 10:38:20	-->	rtkt (~rtkt@2a02:1205:c6bd:7df0:81f4:ec43:739d:42d5) has joined ##c++
2016-10-19 10:38:34	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-19 10:38:34		[10:38]
2016-10-19 10:39:12	-->	hatter (~hatter@94.234.35.228) has joined ##c++
2016-10-19 10:39:21	<--	Stimpy (~Stimpy@546B9624.cm-12-4c.dynamic.ziggo.nl) has quit (Read error: Connection reset by peer)
2016-10-19 10:41:35	V-ille	or a platform where the machine word is 24 or 48 bits with no instruction set to handle smaller pieces ;)
2016-10-19 10:41:48	<--	bumbar_ (~bumbar@unaffiliated/bumbar) has quit (Quit: Leaving)
2016-10-19 10:42:02	-->	TMM (~hp@fsf/member/pdpc.professional.tmm) has joined ##c++
2016-10-19 10:42:07	<--	Enhex (~Enhex@77.138.252.82) has quit (Quit: Leaving)
2016-10-19 10:43:52	-->	EvilPenguin (~EvilPengu@bur-inet-pa-2.disney.com) has joined ##c++
2016-10-19 10:44:56	-->	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has joined ##c++
2016-10-19 10:45:02	<--	Gustavo6046 (~Gustavo60@unaffiliated/gustavo6046) has quit (Ping timeout: 256 seconds)
2016-10-19 10:45:31	--	tadaa is now known as peak
2016-10-19 10:45:44	--	peak is now known as tadaa
2016-10-19 10:46:34	-->	sarsar (a9e90aa2@gateway/web/freenode/ip.169.233.10.162) has joined ##c++
2016-10-19 10:46:36	-->	Karyon (~yaaic@unaffiliated/karyon) has joined ##c++
2016-10-19 10:48:23	-->	RajRajRaj (uid72176@gateway/web/irccloud.com/x-icugciihfvhhbfqt) has joined ##c++
2016-10-19 10:48:48	<--	EvilPenguin (~EvilPengu@bur-inet-pa-2.disney.com) has quit (Ping timeout: 245 seconds)
2016-10-19 10:49:11	<--	reveredge (~reveredge@111.119.209.221) has quit (Ping timeout: 252 seconds)
2016-10-19 10:49:12	<--	sarsar (a9e90aa2@gateway/web/freenode/ip.169.233.10.162) has left ##c++
2016-10-19 10:51:26	-->	Vinnie_win (~TheVinn@pdpc/supporter/gold/thevinn) has joined ##c++
2016-10-19 10:52:00	-->	henner365 (50c6661b@gateway/web/freenode/ip.80.198.102.27) has joined ##c++
2016-10-19 10:52:23	-->	bjz (~bjz@14-201-215-168.tpgi.com.au) has joined ##c++
2016-10-19 10:53:13	-->	reveredge (~reveredge@111.119.209.221) has joined ##c++
2016-10-19 10:53:33	<--	badone (badone@nat/redhat/x-ntoncqgixqdskaoj) has quit (Quit: k?thxbyebyenow)
2016-10-19 10:53:34	<--	introx_ (~introx@80-123-43-244.adsl.highway.telekom.at) has quit (Quit: Leaving)
2016-10-19 10:53:34		[10:53]
2016-10-19 10:53:52	<--	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has quit (Remote host closed the connection)
2016-10-19 10:54:22	-->	sarsar (a9e90aa2@gateway/web/freenode/ip.169.233.10.162) has joined ##c++
2016-10-19 10:54:38	sarsar	Given this problem https://i.imgur.com/8RkkDtf.png would an AVL be over kill? Or would an array be fine?
2016-10-19 10:55:00	-->	jlee (~JonLee@pool-173-68-167-224.nycmny.fios.verizon.net) has joined ##c++
2016-10-19 10:55:04	-->	RebelCoder (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has joined ##c++
2016-10-19 10:55:36	-->	meth (~meth@unaffiliated/meth) has joined ##c++
2016-10-19 10:56:11	urdh	again with these stlib-free environments
2016-10-19 10:56:16	-->	EvilPenguin (~EvilPengu@bur-inet-pa-2.disney.com) has joined ##c++
2016-10-19 10:56:16	<--	rebb (~rebb3@p54B8162C.dip0.t-ipconnect.de) has quit (Quit: Pong timeout)
2016-10-19 10:56:42	urdh	i don't know where professors get all these imaginary non-conforming "embedded" c++ implementations
2016-10-19 10:57:10	Moto-chan	Lol
2016-10-19 10:57:18	Moto-chan	You obviously never worked on embedded before :)
2016-10-19 10:57:31	Moto-chan	There's quite a bit of non-conformance, and most of them don't even come with C compilers, just C++.
2016-10-19 10:57:34	<--	GavinMagnus (~simon@194.254.61.161) has left ##c++
2016-10-19 10:57:42	Moto-chan	Sorry, swap C and C++ there
2016-10-19 10:57:56	urdh	i do work with embedded
2016-10-19 10:58:22	urdh	but the thing is, C++ without stdlib is simply not conforming C++
2016-10-19 10:58:27	thinlizzy	lol
2016-10-19 10:58:29	thinlizzy	why not?
2016-10-19 10:58:37	<--	RajRajRaj (uid72176@gateway/web/irccloud.com/x-icugciihfvhhbfqt) has quit
2016-10-19 10:58:40	thinlizzy	even a kernel can be done with proper C++
2016-10-19 10:58:42	Moto-chan	Most of the stdlib is actually optional to my understanding
2016-10-19 10:58:45	Lenore	isn't that just called a freestanding implementation?
2016-10-19 10:58:56	<--	MrDoctor (~anirban@unaffiliated/apostasy) has quit (Ping timeout: 260 seconds)
2016-10-19 10:58:59	urdh	s/conforming/useful/
2016-10-19 10:59:05	thinlizzy	useful = YMMV
2016-10-19 10:59:07	thinlizzy	!next
2016-10-19 10:59:08	nolyc	Another satisfied customer, next!
2016-10-19 10:59:11	urdh	lol
2016-10-19 10:59:14	dwrngr	well it beats C if you want simple OO
2016-10-19 10:59:25	thinlizzy	yeah! why wasting time with argumentation?
2016-10-19 10:59:30	-->	Alucards (~Thunderbi@eduD3CA.kent.ac.uk) has joined ##c++
2016-10-19 10:59:48	<--	noidea (~noidea@unaffiliated/no-idea/x-0944443) has quit (Read error: Connection reset by peer)
2016-10-19 11:00:22	<--	Zxpr1jk (~zxpr1jk@user-69-1-61-138.knology.net) has quit (Quit: Leaving)
2016-10-19 11:00:27	Lenore	http://eel.is/c++draft/intro.compliance#7
2016-10-19 11:00:43	urdh	yes yes, point proven
2016-10-19 11:00:44	urdh	moving on
2016-10-19 11:01:01	chrisf	urdh: you'd need to look at the statistics to justify anything other than a 256 byte array here.
2016-10-19 11:01:04	<--	szulak_ (uid162164@gateway/web/irccloud.com/x-efdvsiudokzleipj) has quit (Quit: Connection closed for inactivity)
2016-10-19 11:01:04	<--	biglama (~Day_dream@ram31-1-82-234-77-18.fbx.proxad.net) has quit (Remote host closed the connection)
2016-10-19 11:01:23	urdh	chrisf stdlib has those: std::array<uint8_t, 256>
2016-10-19 11:01:39	-->	Stimpy (~Stimpy@546B9624.cm-12-4c.dynamic.ziggo.nl) has joined ##c++
2016-10-19 11:01:57	chrisf	i mean your actual question
2016-10-19 11:02:01	urdh	which was what I was going to tell sarsar before I accidentally derailed the whole discussion by triggering Moto-chan
2016-10-19 11:02:05	<--	KaliLinuxGR (~alexandro@unaffiliated/kalilinuxgr) has quit (Ping timeout: 260 seconds)
2016-10-19 11:02:11	chrisf	oh, sarsar originally asked
2016-10-19 11:02:13	chrisf	sorry :)
2016-10-19 11:02:15	urdh	glad to see I'm not the only one paying attention :)
2016-10-19 11:02:21	urdh	*not paying attention
2016-10-19 11:02:52	-->	Jaca777 (Jaca777@quimby.meetandspeak.com) has joined ##c++
2016-10-19 11:03:01	chrisf	sarsar: ^.
2016-10-19 11:03:42	-->	kabeero (~kabeero@unaffiliated/kabeero) has joined ##c++
2016-10-19 11:04:20	<--	Munnu (~timo@91-158-145-247.elisa-laajakaista.fi) has quit (Quit: Follow the white rabbit. Compile the desert of the real. 139.)
2016-10-19 11:04:45	-->	Betal (~Betal@unaffiliated/betal) has joined ##c++
2016-10-19 11:05:02	<--	henner365 (50c6661b@gateway/web/freenode/ip.80.198.102.27) has quit
2016-10-19 11:05:16	-->	mountpoint (~mountpoin@95-29-44-73.broadband.corbina.ru) has joined ##c++
2016-10-19 11:05:19	<--	dustyp90 (~Dustin@216.7.225.222) has quit (Remote host closed the connection)
2016-10-19 11:05:36	<--	tarspace (~tarspace@37.130.146.83) has quit (Quit: tarspace)
2016-10-19 11:05:48	-->	Gustavo6046 (~Gustavo60@unaffiliated/gustavo6046) has joined ##c++
2016-10-19 11:05:54	Moto-chan	urdh: TRIGGURD!
2016-10-19 11:05:59	<--	Phibonacci (~quassel@151.80.175.201) has quit (Read error: Connection reset by peer)
2016-10-19 11:06:23	-->	nf7 (~nf7@S0106b4750e693ac2.vc.shawcable.net) has joined ##c++
2016-10-19 11:06:38	<--	xarxer (~xarxer@90-230-93-77-no148.tbcn.telia.com) has quit (Quit: Leaving)
2016-10-19 11:06:38	<--	nf7 (~nf7@S0106b4750e693ac2.vc.shawcable.net) has left ##c++
2016-10-19 11:06:53	<--	divno (~divno@unaffiliated/divno) has quit (Remote host closed the connection)
2016-10-19 11:07:34	<--	Karyon (~yaaic@unaffiliated/karyon) has quit (Read error: Connection reset by peer)
2016-10-19 11:08:21	-->	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has joined ##c++
2016-10-19 11:12:39	-->	sgflt (~sgflt@p54B21E80.dip0.t-ipconnect.de) has joined ##c++
2016-10-19 11:12:39		[11:12]
2016-10-19 11:12:39	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-19 11:13:04	-->	doppel (~chatzilla@ip70-189-197-158.lv.lv.cox.net) has joined ##c++
2016-10-19 11:13:15	<--	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has quit (Ping timeout: 252 seconds)
2016-10-19 11:13:16	-->	blackbeard420 (~blackbear@dynamic-acs-24-154-171-60.zoominternet.net) has joined ##c++
2016-10-19 11:13:43	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-19 11:15:08	-->	shub15 (~shubhnik@210.56.96.100) has joined ##c++
2016-10-19 11:15:21	<--	Cleroth (uid185040@gateway/web/irccloud.com/x-enszsqguzmbberjw) has quit (Quit: Connection closed for inactivity)
2016-10-19 11:17:03	<--	willy23123 (~willy2312@51-171-151-33-dynamic.agg2.lky.bge-rtd.eircom.net) has quit (Quit: Colloquy for iPhone - http://colloquy.mobi)
2016-10-19 11:17:28	-->	KaliLinuxGR (~alexandro@unaffiliated/kalilinuxgr) has joined ##c++
2016-10-19 11:17:42	-->	xtristan (~Adium@unaffiliated/xtristan) has joined ##c++
2016-10-19 11:18:07	<--	xtristan (~Adium@unaffiliated/xtristan) has left ##c++
2016-10-19 11:18:46	-->	ferdna (~ferdna@cpe-69-23-141-130.elp.res.rr.com) has joined ##c++
2016-10-19 11:20:07	<--	Blue_Hat (~TwinKam20@167.160.116.35) has quit (Ping timeout: 265 seconds)
2016-10-19 11:20:19	<--	vdamewood (~vdamewood@unaffiliated/vdamewood) has quit (Quit: Life beckons.)
2016-10-19 11:22:22	<--	rtkt (~rtkt@2a02:1205:c6bd:7df0:81f4:ec43:739d:42d5) has quit (Ping timeout: 250 seconds)
2016-10-19 11:22:48	<--	thinlizzy (bauruzinho@nat/google/x-mojaogifbraagwej) has quit (Ping timeout: 250 seconds)
2016-10-19 11:23:02	<--	dofidum (~dofidum@2a02:c7d:850:6700:e894:b8ab:25bd:b84f) has quit (Remote host closed the connection)
2016-10-19 11:23:02	-->	TikityTik (~TikityTik@162.223.44.49) has joined ##c++
2016-10-19 11:23:50	-->	AndChat335225 (~AndChat33@172.56.2.185) has joined ##c++
2016-10-19 11:23:54	<--	symm- (~symm-@86.121.114.211) has quit (Quit: Leaving...)
2016-10-19 11:24:10	<--	Anodl (~Anodl@p57B25373.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2016-10-19 11:24:21	-->	KaiserAres (~KaiserAre@unaffiliated/kaiserares) has joined ##c++
2016-10-19 11:24:36	<--	KaiserAres (~KaiserAre@unaffiliated/kaiserares) has quit (Client Quit)
2016-10-19 11:24:53	-->	KaiserAres (~KaiserAre@unaffiliated/kaiserares) has joined ##c++
2016-10-19 11:26:55	-->	YungRaj (~YungRaj@50-24-71-159.bcstcmtk01.res.dyn.suddenlink.net) has joined ##c++
2016-10-19 11:27:11	<--	sh00p (~sh00p@84.216.39.31) has quit
2016-10-19 11:27:58	<--	meth (~meth@unaffiliated/meth) has quit (Quit: Snoochie Boochies!)
2016-10-19 11:27:58		[11:27]
2016-10-19 11:28:52	<--	RebelCoder (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has quit (Ping timeout: 250 seconds)
2016-10-19 11:29:27	-->	juliyx (~juliy@cable-86-56-0-54.cust.telecolumbus.net) has joined ##c++
2016-10-19 11:29:34	<--	marcofe (~marcofe@31.161.52.18) has quit (Quit: Konversation terminated!)
2016-10-19 11:30:15	-->	juliy (~juliy@cable-86-56-0-54.cust.telecolumbus.net) has joined ##c++
2016-10-19 11:30:20	<--	juliy (~juliy@cable-86-56-0-54.cust.telecolumbus.net) has quit (Client Quit)
2016-10-19 11:32:11	<--	Tobbi (~Tobbi@supertux/tobbi) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-10-19 11:32:59	-->	cpp3 (969cd3f6@gateway/web/freenode/ip.150.156.211.246) has joined ##c++
2016-10-19 11:33:48	<--	cpp3 (969cd3f6@gateway/web/freenode/ip.150.156.211.246) has quit (Client Quit)
2016-10-19 11:34:43	<--	rabioli (~rabioli@198.209.10.232) has quit (Quit: Leaving)
2016-10-19 11:34:48	-->	Brklyn (~truthbk@12.11.109.225) has joined ##c++
2016-10-19 11:35:09	-->	thinlizzy (bauruzinho@nat/google/x-twkxvgogtmxwbjof) has joined ##c++
2016-10-19 11:35:49	-->	Tobbi (~Tobbi@supertux/tobbi) has joined ##c++
2016-10-19 11:36:01	<--	jmnk (jargonmonk@gateway/shell/blinkenshell.org/x-qihnfbcatvborfyd) has quit (Remote host closed the connection)
2016-10-19 11:36:09	-->	przemkovv-bis (~przemkovv@d82-83.icpnet.pl) has joined ##c++
2016-10-19 11:38:19	disgrntld	Hey guys, so if back_inserter works to create iterator-like objects where assignments have been overloaded to instead result in push_backs, it seems like if the inequality operator was also overloaded to always report true, I could use them to simulate arbitrarily long ranges (http://melpon.org/wandbox/permlink/usGjADEOuzfhVy3W). Is this the best way to emulate a `generate_until`?
2016-10-19 11:38:40	-->	meth (~meth@unaffiliated/meth) has joined ##c++
2016-10-19 11:38:58	-->	KindOne_ (kindone@freenude/topless/kindone) has joined ##c++
2016-10-19 11:38:59	<--	irco (~irco@HSI-KBW-134-3-111-4.hsi14.kabel-badenwuerttemberg.de) has quit (Ping timeout: 244 seconds)
2016-10-19 11:39:06	<--	zagabar (~zagabar@unaffiliated/zagabar) has quit (Quit: WeeChat 1.5)
2016-10-19 11:39:13	disgrntld	I guess it would be cleaner to just write the generate_until algorithm as opposed to trying to make some new iterator abstraction-thingie
2016-10-19 11:39:14	-->	Suchorski (regex@unaffiliated/suchorski) has joined ##c++
2016-10-19 11:39:20	<--	riemann (~riemann@ip-222-88.ists.pl) has quit (Quit: Leaving)
2016-10-19 11:40:02	disgrntld	I just had a gut feeling it might be useful in other range manipulation algorithms
2016-10-19 11:40:03	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-19 11:40:09	<--	TomyLobo (~TomyLobo@2a02:8109:87c0:20c:fde7:3bd1:8ca7:2baf) has quit (Ping timeout: 250 seconds)
2016-10-19 11:40:48	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-19 11:41:26	<--	MulleDK19 (MulleDK19@unaffiliated/mulledk19) has quit (Ping timeout: 250 seconds)
2016-10-19 11:41:41	<--	meth (~meth@unaffiliated/meth) has quit (Client Quit)
2016-10-19 11:41:45	<--	Cranite (~Cranite@cpc95696-derb16-2-0-cust528.8-3.cable.virginm.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-10-19 11:42:21	<--	KindOne (kindone@freenude/topless/kindone) has quit (Ping timeout: 265 seconds)
2016-10-19 11:43:25	-->	anuxivm (~anuxi@92.185.154.236) has joined ##c++
2016-10-19 11:43:25		[11:43]
2016-10-19 11:43:49	<--	bjz (~bjz@14-201-215-168.tpgi.com.au) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-10-19 11:44:02	<--	illerucis (~illerucis@2620:10d:c091:200::b:3cd6) has quit (Remote host closed the connection)
2016-10-19 11:44:37	-->	illerucis (~illerucis@2620:10d:c091:200::b:3cd6) has joined ##c++
2016-10-19 11:45:15	-->	KindOne (kindone@freenude/topless/kindone) has joined ##c++
2016-10-19 11:45:47	-->	mkramer (~Adium@c-76-30-207-152.hsd1.tx.comcast.net) has joined ##c++
2016-10-19 11:46:13	<--	KindOne_ (kindone@freenude/topless/kindone) has quit (Ping timeout: 244 seconds)
2016-10-19 11:46:29	-->	bjz (~bjz@14-201-215-168.tpgi.com.au) has joined ##c++
2016-10-19 11:47:39	-->	KindOne_ (kindone@freenude/topless/kindone) has joined ##c++
2016-10-19 11:48:13	SlashLife	disgrntld: I'd rather wrap that insert_iterator to be able to count - or make a pair of fibonacci generating iterators and use std::copy to an insert_iterator.
2016-10-19 11:48:48	<--	illerucis (~illerucis@2620:10d:c091:200::b:3cd6) has quit (Ping timeout: 245 seconds)
2016-10-19 11:48:52	-->	julian_ (~julian@62-47-198-224.adsl.highway.telekom.at) has joined ##c++
2016-10-19 11:49:10	SlashLife	Oh, you could actually use std::copy_n instead of an iterator pair.
2016-10-19 11:49:18	<--	bjz (~bjz@14-201-215-168.tpgi.com.au) has quit (Client Quit)
2016-10-19 11:49:41	-->	AndChat|335225 (~AndChat33@2600:8807:c145:3c00:d825:507b:6571:22d0) has joined ##c++
2016-10-19 11:49:57	<--	KindOne (kindone@freenude/topless/kindone) has quit (Ping timeout: 240 seconds)
2016-10-19 11:50:53	<--	Oipo (~Oipo@gateway/vpn/privateinternetaccess/oipo) has quit (Quit: Leaving)
2016-10-19 11:50:57	-->	pulkit_ (uid186196@gateway/web/irccloud.com/x-glhszyregtbcytsq) has joined ##c++
2016-10-19 11:51:50	<--	AndChat335225 (~AndChat33@172.56.2.185) has quit (Ping timeout: 250 seconds)
2016-10-19 11:52:03	--	KindOne_ is now known as KindOne
2016-10-19 11:52:29	<--	chindy (~julian@194-166-166-146.adsl.highway.telekom.at) has quit (Ping timeout: 260 seconds)
2016-10-19 11:53:01	disgrntld	ok, lemme compare and contrast
2016-10-19 11:53:25	disgrntld	this is just me relearning C++ and knocking off cruft in my knowledge
2016-10-19 11:53:33	disgrntld	cool feedback Slashlife, thanks
2016-10-19 11:54:00	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-19 11:54:47	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-19 11:55:50	-->	AndChat335225 (~AndChat33@172.56.28.31) has joined ##c++
2016-10-19 11:56:16	-->	Karyon (~yaaic@unaffiliated/karyon) has joined ##c++
2016-10-19 11:56:17	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-19 11:58:04	<--	dminuoso_ (~dminuoso@unaffiliated/dminuoso) has quit (Ping timeout: 250 seconds)
2016-10-19 11:58:54	<--	irrenhaus3 (~xenon@HSI-KBW-046-005-253-025.hsi8.kabel-badenwuerttemberg.de) has quit (Quit: Lost terminal)
2016-10-19 11:58:54		[11:58]
2016-10-19 11:59:08	<--	all_my_watts (~all_my_wa@80-110-115-188.cgn.dynamic.surfer.at) has quit (Ping timeout: 244 seconds)
2016-10-19 11:59:13	<--	AndChat|335225 (~AndChat33@2600:8807:c145:3c00:d825:507b:6571:22d0) has quit (Ping timeout: 245 seconds)
2016-10-19 11:59:48	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-19 12:01:19	<--	JoshS (~jshjsh@172.56.38.108) has quit (Quit: Leaving)
2016-10-19 12:01:21	<--	gelignite (~gelignite@x4e3147f4.dyn.telefonica.de) has quit (Quit: http://bit.ly/1kso8Ta)
2016-10-19 12:01:43	-->	iceiceice (~chris@ip-64-134-98-88.public.wayport.net) has joined ##c++
2016-10-19 12:01:43	<--	iceiceice (~chris@ip-64-134-98-88.public.wayport.net) has quit (Changing host)
2016-10-19 12:01:43	-->	iceiceice (~chris@unaffiliated/iceiceice) has joined ##c++
2016-10-19 12:02:32	-->	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has joined ##c++
2016-10-19 12:02:38	-->	fahadash (uid44972@gateway/web/irccloud.com/x-kcvmhnrwgmnpaoxb) has joined ##c++
2016-10-19 12:03:55	-->	interf (~int@unaffiliated/inter) has joined ##c++
2016-10-19 12:04:08	<--	EricWF (~EricWF@S0106bcd1653002b9.cg.shawcable.net) has quit (Read error: Connection reset by peer)
2016-10-19 12:04:34	-->	GavinMagnus (~simon@37.168.43.140) has joined ##c++
2016-10-19 12:05:23	<--	a3Dman (~3Dman@unaffiliated/a3dman) has quit (Ping timeout: 256 seconds)
2016-10-19 12:06:19	-->	pdtpatrick (~Patrick@2620:10d:c090:200::e:d4d3) has joined ##c++
2016-10-19 12:06:20	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-19 12:06:23	-->	symm- (~symm-@86.121.114.211) has joined ##c++
2016-10-19 12:06:38	-->	rosten (~rosten@cpe-45-48-9-161.socal.res.rr.com) has joined ##c++
2016-10-19 12:07:10	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-19 12:07:38	<--	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has quit (Ping timeout: 256 seconds)
2016-10-19 12:08:05	<--	maciuszek (~maciuszek@TOROON0949W-LP130-01-1242512157.dsl.bell.ca) has quit (Quit: Leaving)
2016-10-19 12:08:34	-->	a3Dman (~3Dman@unaffiliated/a3dman) has joined ##c++
2016-10-19 12:08:39	<--	symm- (~symm-@86.121.114.211) has quit (Client Quit)
2016-10-19 12:09:42	-->	symm- (~symm-@86.121.114.211) has joined ##c++
2016-10-19 12:10:11	<--	gagbo_ (~gagbo@unaffiliated/gagbo) has quit (Quit: I'm out !)
2016-10-19 12:10:28	<--	damme (~damme@2001:16d8:cc75::802) has quit (Ping timeout: 245 seconds)
2016-10-19 12:11:21	<--	julian_ (~julian@62-47-198-224.adsl.highway.telekom.at) has quit (Remote host closed the connection)
2016-10-19 12:13:38	-->	MikeDebian (~ML@2001:8a0:7748:ca01:665a:4ff:fe68:8dc9) has joined ##c++
2016-10-19 12:14:22	<--	norotartagen (~norotarta@71-89-76-184.dhcp.bycy.mi.charter.com) has quit (Remote host closed the connection)
2016-10-19 12:14:22		[12:14]
2016-10-19 12:14:46	<--	pulkit_ (uid186196@gateway/web/irccloud.com/x-glhszyregtbcytsq) has quit
2016-10-19 12:15:03	<--	rosten (~rosten@cpe-45-48-9-161.socal.res.rr.com) has quit (Ping timeout: 245 seconds)
2016-10-19 12:15:13	<--	sssilver (~sssilver@38.122.48.218) has quit (Ping timeout: 265 seconds)
2016-10-19 12:15:25	-->	pulkit_ (sid186196@gateway/web/irccloud.com/x-fpwjmtzmobofyjpc) has joined ##c++
2016-10-19 12:15:40	<--	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has quit (Ping timeout: 244 seconds)
2016-10-19 12:15:44	<--	a3f (~a3f@unaffiliated/a3f) has quit (Quit: Zzzzz..)
2016-10-19 12:15:56	<--	Azusa762 (~roy@37.228.243.52) has quit (Ping timeout: 260 seconds)
2016-10-19 12:16:27	<--	psychicist__ (~psychicis@ip127-8-212-87.adsl2.static.versatel.nl) has quit (Ping timeout: 252 seconds)
2016-10-19 12:16:52	<--	iwakura (~Shino@user-31-174-209-151.play-internet.pl) has quit (Quit: Leaving)
2016-10-19 12:16:57	-->	rosten (~rosten@cpe-45-48-9-161.socal.res.rr.com) has joined ##c++
2016-10-19 12:17:09	-->	norotartagen (~norotarta@71-89-76-184.dhcp.bycy.mi.charter.com) has joined ##c++
2016-10-19 12:17:50	<--	Kirrahe (~kirrahe@ip51cc4257.adsl-surfen.hetnet.nl) has quit (Ping timeout: 250 seconds)
2016-10-19 12:18:02	<--	GavinMagnus (~simon@37.168.43.140) has left ##c++
2016-10-19 12:18:44	<--	KaliLinuxGR (~alexandro@unaffiliated/kalilinuxgr) has quit (Quit: Keep Hacking)
2016-10-19 12:19:10	-->	KaliLinuxGR (~alexandro@unaffiliated/kalilinuxgr) has joined ##c++
2016-10-19 12:19:37	-->	EricWF (~EricWF@S0106bcd1653002b9.cg.shawcable.net) has joined ##c++
2016-10-19 12:22:47	-->	meth (~meth@unaffiliated/meth) has joined ##c++
2016-10-19 12:22:59	<--	rosten (~rosten@cpe-45-48-9-161.socal.res.rr.com) has quit (Ping timeout: 260 seconds)
2016-10-19 12:23:28	-->	glenfe (~glen@ool-18b8d08e.dyn.optonline.net) has joined ##c++
2016-10-19 12:23:28	<--	glenfe (~glen@ool-18b8d08e.dyn.optonline.net) has quit (Changing host)
2016-10-19 12:23:28	-->	glenfe (~glen@unaffiliated/glenfe) has joined ##c++
2016-10-19 12:23:58	-->	systemfault (~rcyr@unaffiliated/rcyr) has joined ##c++
2016-10-19 12:24:39	-->	code_zombie (~code_zomb@136.63.230.43) has joined ##c++
2016-10-19 12:26:14	<--	biberu (~biberu@c-cf2d72d5.08-441-7570702.cust.bredbandsbolaget.se) has quit
2016-10-19 12:27:02	-->	blueness (~blueness@gentoo/developer/blueness) has joined ##c++
2016-10-19 12:27:40	<--	AndChat335225 (~AndChat33@172.56.28.31) has quit (Ping timeout: 260 seconds)
2016-10-19 12:27:42	-->	Smirnov (~Smirnov@about/csharp/ms/clrjit/smirnov) has joined ##c++
2016-10-19 12:27:57	-->	scm (a5e6e173@gateway/web/freenode/ip.165.230.225.115) has joined ##c++
2016-10-19 12:28:07	Smirnov	after you return from std::call_once is it guaranteed that that Callable has already finished executing (e.g. if another thread was *actually* executing it) ?
2016-10-19 12:28:32	<--	doppel (~chatzilla@ip70-189-197-158.lv.lv.cox.net) has quit (Quit: ChatZilla 0.9.92 [Firefox 49.0.1/20160922113459])
2016-10-19 12:28:36	<--	fogbank (~foggy@88.147.42.198) has quit (Ping timeout: 256 seconds)
2016-10-19 12:28:38	Smirnov	I think that's what "No invocation in the group returns before the abovementioned execution of the selected function is completed successfully, that is, doesn't exit via an exception." is saying but just wanted to double check
2016-10-19 12:28:43	<--	T`aZ (~TaZ@ip-83-101-33-57.customer.schedom-europe.net) has quit (Ping timeout: 256 seconds)
2016-10-19 12:29:57	-->	Lenore_ (b84a0f22@gateway/web/freenode/ip.184.74.15.34) has joined ##c++
2016-10-19 12:29:57		[12:29]
2016-10-19 12:30:14	-->	T`aZ (~TaZ@ip-83-101-33-57.customer.schedom-europe.net) has joined ##c++
2016-10-19 12:33:05	<--	Lenore (b84a0f22@gateway/web/freenode/ip.184.74.15.34) has quit (Ping timeout: 260 seconds)
2016-10-19 12:33:44	<--	neurrowcat (~neurrowca@h-152-251.a163.priv.bahnhof.se) has quit (Quit: Deebidappidoodah!)
2016-10-19 12:34:40	<--	MrP[Home] (~Palsson@c-a46fe555.06-213-6e6b701.cust.bredbandsbolaget.se) has quit (Read error: Connection reset by peer)
2016-10-19 12:35:58	-->	cliluw (~cliluw@unaffiliated/cliluw) has joined ##c++
2016-10-19 12:36:36	-->	skirmisha (~skirmisha@213.16.62.70) has joined ##c++
2016-10-19 12:36:41	skirmisha	hi
2016-10-19 12:37:03	<--	scm (a5e6e173@gateway/web/freenode/ip.165.230.225.115) has quit (Quit: Page closed)
2016-10-19 12:38:24	--	Lenore_ is now known as Lenore
2016-10-19 12:38:29	skirmisha	i have simple question, what is break doing in the code? it is going to next code or?
2016-10-19 12:39:51	<--	manuels (~manuelsch@p20030072AF6BC2001EEA2F3E8805DBF5.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-10-19 12:40:21	<--	Brklyn (~truthbk@12.11.109.225) has quit (Ping timeout: 265 seconds)
2016-10-19 12:42:23	<--	snyp (~Snyp@150.129.132.54) has quit (Quit: WeeChat 1.6)
2016-10-19 12:42:26	<--	fedepad (~fedepad@p4FE13A65.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-10-19 12:42:34	-->	zero_byte (~zer0@ip-89-103-110-138.net.upcbroadband.cz) has joined ##c++
2016-10-19 12:42:50	<--	skirmisha (~skirmisha@213.16.62.70) has quit (Quit: Leaving)
2016-10-19 12:42:57	<--	Tyilo (~Tyilo@563471b2.rev.stofanet.dk) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-10-19 12:43:44	<--	shaggycat (~quassel@95-37-215-204.dynamic.mts-nn.ru) has quit (Ping timeout: 265 seconds)
2016-10-19 12:46:31	<--	ambro718 (~ambro@unaffiliated/ambro718) has quit (Ping timeout: 252 seconds)
2016-10-19 12:46:31		[12:46]
2016-10-19 12:48:10	<--	kabeero (~kabeero@unaffiliated/kabeero) has quit (Ping timeout: 250 seconds)
2016-10-19 12:48:11	SlashLife	Smirnov: That's how I'd understand it as well: http://www.eelis.net/c++draft/thread.once.callonce#3
2016-10-19 12:48:29	<--	anuxivm (~anuxi@92.185.154.236) has quit (Ping timeout: 260 seconds)
2016-10-19 12:50:12	SlashLife	If you return (not throw), then that will be the last (and likely first) active execution; all others will be passive executions - which synchronize with the last active execution.
2016-10-19 12:50:33	<--	sanct (~sanct@212.35.67.11) has quit (Ping timeout: 252 seconds)
2016-10-19 12:51:00	<--	kimundi (~Kimundi@p57BC6529.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2016-10-19 12:51:17	-->	sanct (~sanct@212.35.67.11) has joined ##c++
2016-10-19 12:54:09	-->	dminuoso_ (~dminuoso@unaffiliated/dminuoso) has joined ##c++
2016-10-19 12:54:12	<--	jlee (~JonLee@pool-173-68-167-224.nycmny.fios.verizon.net) has quit (Ping timeout: 260 seconds)
2016-10-19 12:54:42	-->	pikaroo- (~pikaroo@23.92.93.231) has joined ##c++
2016-10-19 12:54:50	-->	zwliew (uid161395@gateway/web/irccloud.com/x-gsumxydfbhvvqgvm) has joined ##c++
2016-10-19 12:55:05	-->	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has joined ##c++
2016-10-19 12:55:32	<--	sanct (~sanct@212.35.67.11) has quit (Ping timeout: 250 seconds)
2016-10-19 12:56:09	-->	sanct (~sanct@212.35.67.11) has joined ##c++
2016-10-19 12:56:40	-->	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has joined ##c++
2016-10-19 12:57:58	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-19 12:58:28	-->	Elysion (~elysion@ppp121-45-81-39.bras1.adl6.internode.on.net) has joined ##c++
2016-10-19 12:58:50	<--	juliyx (~juliy@cable-86-56-0-54.cust.telecolumbus.net) has quit (Quit: Leaving)
2016-10-19 12:59:03	-->	hualet (~hualet@183.94.122.192) has joined ##c++
2016-10-19 12:59:43	-->	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has joined ##c++
2016-10-19 12:59:46	<--	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has quit (Ping timeout: 256 seconds)
2016-10-19 12:59:47	<--	dminuoso_ (~dminuoso@unaffiliated/dminuoso) has quit (Ping timeout: 256 seconds)
2016-10-19 13:00:18	<--	mkramer (~Adium@c-76-30-207-152.hsd1.tx.comcast.net) has quit (Quit: Leaving.)
2016-10-19 13:01:20	<--	kisielk (~kisielk@66.51.141.58) has quit (Remote host closed the connection)
2016-10-19 13:01:36	<--	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has quit (Ping timeout: 252 seconds)
2016-10-19 13:01:36		[13:01]
2016-10-19 13:03:15	<--	hualet (~hualet@183.94.122.192) has quit (Ping timeout: 252 seconds)
2016-10-19 13:03:23	-->	juliy (~juliy@cable-86-56-0-54.cust.telecolumbus.net) has joined ##c++
2016-10-19 13:03:36	-->	rosten (~rosten@cpe-45-48-9-161.socal.res.rr.com) has joined ##c++
2016-10-19 13:04:14	<--	aalex (~aalex@64.187.177.58) has quit (Ping timeout: 244 seconds)
2016-10-19 13:05:38	-->	anuxivm (~anuxi@92.185.154.236) has joined ##c++
2016-10-19 13:05:45	<--	anuxivm (~anuxi@92.185.154.236) has quit (Max SendQ exceeded)
2016-10-19 13:06:10	<--	Jaca777 (Jaca777@quimby.meetandspeak.com) has left ##c++
2016-10-19 13:06:40	<--	pdtpatrick (~Patrick@2620:10d:c090:200::e:d4d3) has quit (Remote host closed the connection)
2016-10-19 13:07:10	-->	arpd (~arpd@wan.schoolroad.co.uk) has joined ##c++
2016-10-19 13:07:46	<--	rbern (~rbern@unaffiliated/rbern) has quit (Read error: Connection reset by peer)
2016-10-19 13:08:32	-->	aalex (~aalex@64.187.177.58) has joined ##c++
2016-10-19 13:08:36	-->	whytrytofly (~whytrytof@dslb-092-078-190-062.092.078.pools.vodafone-ip.de) has joined ##c++
2016-10-19 13:08:42	<--	phinxy (~tehhhd@unaffiliated/phinxy) has quit (Quit: Leaving)
2016-10-19 13:08:55	<--	Neomex (~Neomex@dua237.neoplus.adsl.tpnet.pl) has quit (Quit: Leaving)
2016-10-19 13:11:49	<--	nwkj86 (~nwkj86@142.66.6.51.dyn.plus.net) has quit (Ping timeout: 260 seconds)
2016-10-19 13:14:44	-->	UnripeSuica_mobi (~UnlikeSui@223.62.188.12) has joined ##c++
2016-10-19 13:16:34	<--	symm- (~symm-@86.121.114.211) has quit (Quit: Leaving...)
2016-10-19 13:16:40	<--	UnlikeSuika_mobi (~UnlikeSui@115.93.122.107) has quit (Ping timeout: 260 seconds)
2016-10-19 13:16:40		[13:16]
2016-10-19 13:17:28	<--	King_Hual` (~failed@94.26.28.68) has quit (Read error: Connection reset by peer)
2016-10-19 13:17:54	-->	rbern (~rbern@unaffiliated/rbern) has joined ##c++
2016-10-19 13:18:05	<--	whytrytofly (~whytrytof@dslb-092-078-190-062.092.078.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2016-10-19 13:18:29	<--	UnlikeSuika (~UnlikeSui@115.93.122.107) has quit (Ping timeout: 256 seconds)
2016-10-19 13:18:35	<--	CEnnis91 (uid3543@gateway/web/irccloud.com/x-pzepbjdceuxeturk) has quit (Quit: Connection closed for inactivity)
2016-10-19 13:20:13	<--	Adva (~Hyrule@2a02:810a:12c0:2600:58cb:cc76:f08:d470) has quit (Read error: Connection reset by peer)
2016-10-19 13:21:07	<--	sgflt (~sgflt@p54B21E80.dip0.t-ipconnect.de) has quit (Quit: sgflt)
2016-10-19 13:22:37	<--	abyx (~abyx@104.192.216.35) has quit (Quit: This computer has gone to sleep)
2016-10-19 13:24:52	-->	plp (~plp@58.65.211.130.bc.googleusercontent.com) has joined ##c++
2016-10-19 13:26:16	<--	jan64_ (~jan64@afip46.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 265 seconds)
2016-10-19 13:27:59	-->	cybex_1 (~cybex_@8ta-151-98-47.telkomadsl.co.za) has joined ##c++
2016-10-19 13:30:35	<--	cybex_ (~cybex_@154.69.136.192) has quit (Ping timeout: 244 seconds)
2016-10-19 13:33:32	<--	UnripeSuica_mobi (~UnlikeSui@223.62.188.12) has quit (Quit: RIP)
2016-10-19 13:33:32		[13:33]
2016-10-19 13:35:37	-->	spew (~ben@73.110.34.138) has joined ##c++
2016-10-19 13:35:38	-->	bjz (~bjz@14-201-215-168.tpgi.com.au) has joined ##c++
2016-10-19 13:35:39	<--	sanct (~sanct@212.35.67.11) has quit (Ping timeout: 252 seconds)
2016-10-19 13:35:57	<--	iceiceice (~chris@unaffiliated/iceiceice) has quit (Quit: Ex-Chat)
2016-10-19 13:36:32	-->	Haruno (~Haruno@unaffiliated/haruno) has joined ##c++
2016-10-19 13:36:39	-->	sanct (~sanct@212.35.67.11) has joined ##c++
2016-10-19 13:38:14	<--	corebob (~corebob@cm-84.213.41.214.getinternet.no) has quit (Quit: WeeChat 1.6)
2016-10-19 13:38:24	<--	bjz (~bjz@14-201-215-168.tpgi.com.au) has quit (Client Quit)
2016-10-19 13:39:43	-->	Tfuo (~Tfuo@prz29-1-78-205-58-16.fbx.proxad.net) has joined ##c++
2016-10-19 13:40:27	-->	kisielk (~kisielk@S010690b134fc82a2.vc.shawcable.net) has joined ##c++
2016-10-19 13:41:51	<--	disgrntld (~levi@12.228.157.10) has quit (Quit: Leaving.)
2016-10-19 13:42:40	-->	mackal (~mike@pool-96-237-144-12.bstnma.fios.verizon.net) has joined ##c++
2016-10-19 13:43:59	<--	thib (~Thibaut12@wikimedia/Thibaut120094) has quit (Quit: Leaving)
2016-10-19 13:45:09	-->	whytrytofly (~whytrytof@dslb-092-078-190-062.092.078.pools.vodafone-ip.de) has joined ##c++
2016-10-19 13:45:21	<--	Tfuo (~Tfuo@prz29-1-78-205-58-16.fbx.proxad.net) has quit (Remote host closed the connection)
2016-10-19 13:45:58	<--	ville (~ville@37-136-95-219.rev.dnainternet.fi) has quit (Ping timeout: 250 seconds)
2016-10-19 13:50:49	-->	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has joined ##c++
2016-10-19 13:50:49		[13:50]
2016-10-19 13:51:04	<--	serycjon (~jonas@20.53.broadband14.iol.cz) has quit (Ping timeout: 252 seconds)
2016-10-19 13:51:56	<--	spew (~ben@73.110.34.138) has quit (Read error: Connection reset by peer)
2016-10-19 13:51:57	<--	pepper_chico (~pepper_ch@179.98.127.103) has quit (Read error: Connection reset by peer)
2016-10-19 13:52:17	<--	shirty (~shirty@155.170-247-81.adsl-dyn.isp.belgacom.be) has quit (Ping timeout: 244 seconds)
2016-10-19 13:52:28	-->	pepper_chico (~pepper_ch@201-13-104-12.dsl.telesp.net.br) has joined ##c++
2016-10-19 13:52:46	-->	CEnnis91 (uid3543@gateway/web/irccloud.com/x-tujlbfuqnmaifack) has joined ##c++
2016-10-19 13:54:14	-->	arescorpio (~arescorpi@178-205-17-190.fibertel.com.ar) has joined ##c++
2016-10-19 13:55:17	-->	dminuoso_ (~dminuoso@unaffiliated/dminuoso) has joined ##c++
2016-10-19 13:55:27	<--	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has quit (Ping timeout: 252 seconds)
2016-10-19 13:56:18	-->	anunnaki (~chris@unaffiliated/anunnaki) has joined ##c++
2016-10-19 13:58:29	<--	anunnaki (~chris@unaffiliated/anunnaki) has quit (Client Quit)
2016-10-19 13:58:43	<--	GenteelBen (~GenteelBe@cpc70133-lutn12-2-0-cust324.9-3.cable.virginm.net) has quit
2016-10-19 13:59:23	-->	wolfdrop (~thepack@97-102-93-225.res.bhn.net) has joined ##c++
2016-10-19 14:00:17	<--	dminuoso_ (~dminuoso@unaffiliated/dminuoso) has quit (Ping timeout: 250 seconds)
2016-10-19 14:00:46	<--	wolfdrop (~thepack@97-102-93-225.res.bhn.net) has left ##c++
2016-10-19 14:01:52	-->	hualet (~hualet@183.94.122.192) has joined ##c++
2016-10-19 14:04:15	-->	bjz (~bjz@14-201-215-168.tpgi.com.au) has joined ##c++
2016-10-19 14:04:55	-->	Dohplay (~Dohplay@2601:246:4400:f10c:f1a1:a1d:7811:38c8) has joined ##c++
2016-10-19 14:05:08	<--	sanct (~sanct@212.35.67.11) has quit (Ping timeout: 260 seconds)
2016-10-19 14:05:21	<--	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has quit (Ping timeout: 252 seconds)
2016-10-19 14:06:28	<--	hualet (~hualet@183.94.122.192) has quit (Ping timeout: 252 seconds)
2016-10-19 14:06:28		[14:06]
2016-10-19 14:06:35	-->	zia (~zia@prz29-1-78-205-58-16.fbx.proxad.net) has joined ##c++
2016-10-19 14:06:53	<--	zia (~zia@prz29-1-78-205-58-16.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-10-19 14:07:08	-->	Coka (~Coka@prz29-1-78-205-58-16.fbx.proxad.net) has joined ##c++
2016-10-19 14:07:09	<--	mentoc (~wmerfalen@c-174-52-118-55.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-19 14:08:51	<--	YungRaj (~YungRaj@50-24-71-159.bcstcmtk01.res.dyn.suddenlink.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-10-19 14:09:18	-->	chowmeined (~chowmeine@unaffiliated/chowmeined) has joined ##c++
2016-10-19 14:09:22	-->	Alina-malina (~Alina-mal@37.157.216.159) has joined ##c++
2016-10-19 14:09:42	<--	narann (~narann@2a01:e34:ee2e:4830:c906:ae68:c644:2f60) has quit (Quit: Leaving)
2016-10-19 14:10:04	<--	Coka (~Coka@prz29-1-78-205-58-16.fbx.proxad.net) has quit (Remote host closed the connection)
2016-10-19 14:10:26	-->	tertu (~tertu@143.44.78.185) has joined ##c++
2016-10-19 14:11:07	tertu	generally, if i have a const int, the compiler will just put that in as a literal wherever it's used, right?
2016-10-19 14:11:32	--	irc: disconnected from server
