2016-10-08 11:30:33	-->	RoadrunnerWMC (~Roadrunne@104.236.106.247) has joined #python
2016-10-08 11:30:46	Moppy	_habnabit: What's the objection to [:] anyway? It's actually the recommended method in the Python docs.
2016-10-08 11:30:55	<--	magellanicloud (~magellani@2a02:810b:c540:1a1c:99cc:3251:fc09:1fb1) has quit (Quit: Leaving)
2016-10-08 11:31:01	_habnabit	Moppy, it's unreadable, and doesn't ensure you get a list
2016-10-08 11:31:04	<--	kre10s__ (~kreios@191.13.247.1) has quit (Ping timeout: 260 seconds)
2016-10-08 11:31:08	<--	Aberts10 (~brian@pool-108-36-193-69.phlapa.fios.verizon.net) has quit (Quit: Leaving)
2016-10-08 11:31:25	Moppy	_habnabit: When would you not get a list?
2016-10-08 11:31:25	<--	Quitta (~quitta@ptr-2hj4tbxfk5ckqbxthzjphsdel.ip6.access.telenet.be) has quit (Ping timeout: 260 seconds)
2016-10-08 11:31:45	Moppy	(Assuming you started with one)
2016-10-08 11:31:46	_habnabit	Moppy, try [:] on a tuple
2016-10-08 11:31:48	Jinxed-	_habnabit, I don't get your code [list(row) for row in oldlist
2016-10-08 11:31:56	_habnabit	Jinxed-, what part is confusing?
2016-10-08 11:32:07	<--	iiie (~iiie@unaffiliated/iiie) has quit (Quit: iiie)
2016-10-08 11:32:08	Jinxed-	is list the name of my copied list?
2016-10-08 11:32:08	Moppy	_habnabit: Right but that's not a list to start with.
2016-10-08 11:32:15	_habnabit	Jinxed-, no
2016-10-08 11:32:19	_habnabit	Jinxed-, it's the list builtin
2016-10-08 11:32:27	<--	inquistor (~samurai@c-67-175-180-110.hsd1.il.comcast.net) has quit (Read error: Connection reset by peer)
2016-10-08 11:32:32	_habnabit	Moppy, yep. so it doesn't ensure you get a list
2016-10-08 11:32:37	-->	sycal (~si@cpc96786-rdng27-2-0-cust86.15-3.cable.virginm.net) has joined #python
2016-10-08 11:32:59	Moppy	_habnabit: I accept your argument that you find it unreadable. As for the other, that seems a different question.
2016-10-08 11:33:01	Jinxed-	is row a special keyword or normal variable
2016-10-08 11:33:11	b0nn	normal variable
2016-10-08 11:33:33	_habnabit	Moppy, okay. if you def f(x): and want a shallow-copied list, list(x) will give you a list
2016-10-08 11:33:36	<--	ilushka (~ilushka@dsl212-143-41-238.bb.netvision.net.il) has quit (Quit: Leaving)
2016-10-08 11:33:39	_habnabit	Moppy, x[:] won't necessarily
2016-10-08 11:33:46	Vexis	kre10s__, https://paste.pound-python.org/show/a9A3Gpa3xhZZz8jTTi0D/
2016-10-08 11:34:22	Jinxed-	would it be newlist = []; newlist.append(list(row)) for row in oldlist ?
2016-10-08 11:34:35	_habnabit	Jinxed-, that's one thing you could do, but that's not what i said to do
2016-10-08 11:34:37	average	why are you using arrays.. ick..
2016-10-08 11:34:45	average	or lists..
2016-10-08 11:34:48	average	use a monad..
2016-10-08 11:34:49	-->	Pavo (~brockback@75.76.202.108) has joined #python
2016-10-08 11:35:04	ieee	I have a C library that communicates by printing to stdout, and I cannot change that, I need to capture said output
2016-10-08 11:35:05	ieee	the internet suggests using a tempfile and switching the file descriptor, which works, but causes a ton of disk read/writes, because my /tmp is on disk
2016-10-08 11:35:05	ieee	I tried setting up a pipe, but, as I read after I write, I hit linux's 64kb limit and everything deadlocks
2016-10-08 11:35:05	ieee	ah, I'm using ctypes, in case it's relevant, I inherited this wrapper
2016-10-08 11:35:05	ieee	in case someone wants to see the relevant snippet: https://stackoverflow.com/questions/39925919/python-communicate-with-c-library-via-ctypes-and-a-pipe , even SO has no idea
2016-10-08 11:35:05	ieee	I have the distinct impression I'm approaching this problem the wrong way, this mess can't be "the python way"
2016-10-08 11:35:05	ieee	AFAI understand, the only way I can get the C stdout is to switch the file descriptor with something I can then capture
2016-10-08 11:35:06	ieee	and these things are just tempfiles or pipes, because C has to be able to see them
2016-10-08 11:35:06	Moppy	_habnabit: Yes but the question is how to copy a list, not how to turn some sequence into a list. If you want to turn an arbitrary sequence into a list, then I agree that list(x) is better.
2016-10-08 11:35:11	average	i'm jk btw
2016-10-08 11:35:13	ieee	sorry for the wall of text
2016-10-08 11:35:18	<--	jordanl (~jordan@unaffiliated/jordanl) has quit (Ping timeout: 250 seconds)
2016-10-08 11:35:43	_habnabit	ieee, run it in a subprocess and read from its stdout
2016-10-08 11:35:46	average	ieee: walls of text are for mailing lists
2016-10-08 11:35:46	multiproc	Jinxed-: there’s also deepcopy in the copy module
2016-10-08 11:35:52	_habnabit	multiproc, plz no
2016-10-08 11:36:14	_habnabit	Jinxed-, the copy module is not a good solution because it doesn't have any control over granularity
2016-10-08 11:36:35	_habnabit	Jinxed-, what i suggested, though, is a list comprehension
2016-10-08 11:37:00	<--	cyborg-one (~cyborg-on@37.203.21.77) has quit (Quit: cyborg-one)
2016-10-08 11:37:06	-->	snebel (~snebel@185.23.44.56) has joined #python
2016-10-08 11:37:21	ieee	_habnabit: it's a library, how do I run it in a subprocess in a reasonable way?
2016-10-08 11:37:25	<--	ironfroggy (~ironfrogg@python/site-packages/ironfroggy) has quit (Read error: Connection reset by peer)
2016-10-08 11:37:28	<--	bolovanos (~bolovanos@91.201.22.5) has quit (Ping timeout: 244 seconds)
2016-10-08 11:37:40	<--	mmxx_th (~mmxx_th@177.86.241.113) has quit (Ping timeout: 260 seconds)
2016-10-08 11:37:56	ieee	average: I'm sorry, but as far as ML usually go, I'll never get an answer
2016-10-08 11:38:09	_habnabit	ieee, i don't know how much state it has, or how you specify its inputs
2016-10-08 11:38:10	multiproc	sure, but if they’re just trying to get a quick result for nested lists it isn’t really a problem. if it’s always going to be a 2x2 matrix, Jinxed-, then yeah go for the list comp
2016-10-08 11:38:12	-->	Cavedude (~Cavedude@unaffiliated/cavedude) has joined #python
2016-10-08 11:38:25	<--	Muppens1 (~Thunderbi@h-79-115.a163.priv.bahnhof.se) has quit (Ping timeout: 260 seconds)
2016-10-08 11:38:28	<--	raijin (~raijin@unaffiliated/raijin) has quit (Quit: No Ping reply in 180 seconds.)
2016-10-08 11:38:39	_habnabit	multiproc, it provides a false sense of correctness
2016-10-08 11:38:40	-->	adesor (~adesor@182.64.13.69) has joined #python
2016-10-08 11:38:41	<--	Karyon (~yaaic@unaffiliated/karyon) has quit (Remote host closed the connection)
2016-10-08 11:38:42	mandeep	ieee: 6 hours again?
2016-10-08 11:38:51	-->	Muppens1 (~Thunderbi@h-79-115.a163.priv.bahnhof.se) has joined #python
2016-10-08 11:38:51	average	ieee: why not?
2016-10-08 11:39:02	vlt	vlt: If you use sum = 0 as a variable don’t act so surprised later when sum() throws weird errors! >.<
2016-10-08 11:39:07	<--	maybBot (~maybBot@107.19.128.64) has quit (Remote host closed the connection)
2016-10-08 11:39:07	<--	torhu (~chatzilla@cm-84.211.98.19.getinternet.no) has quit (Quit: ChatZilla 0.9.92 [Firefox 49.0.1/20160922113459])
2016-10-08 11:39:15	ieee	mandeep: yep, that concludes the waking cycle of the western world, last time I ask
2016-10-08 11:39:24	mandeep	ieee: just poking fun
2016-10-08 11:39:29	average	ieee: why are you in a rush?
2016-10-08 11:39:56	-->	raijin (~raijin@unaffiliated/raijin) has joined #python
2016-10-08 11:39:58	ieee	average: I'm not in a rush, but I'll forget every detail of this thing if I don't finish it shortly
