2016-09-15 19:35:23	-->	alyptik_ (~alyptik@cpe-76-173-133-37.hawaii.res.rr.com) has joined ##c++
2016-09-15 19:35:23		[19:35]
2016-09-15 19:35:23	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || https://isocpp.org/faq || pastes: http://melpon.org/wandbox"
2016-09-15 19:35:23	--	Topic set by V-ille (~ville@81-175-149-170.bb.dnainternet.fi) on Fri, 18 Sep 2015 07:13:01
2016-09-15 19:35:23	--	Channel ##c++: 930 nicks (0 ops, 0 voices, 930 normals)
2016-09-15 19:35:27	--	Channel created on Fri, 14 Sep 2001 17:15:35
2016-09-15 19:36:18	-->	mackal (~mike@pool-96-237-144-12.bstnma.fios.verizon.net) has joined ##c++
2016-09-15 19:37:23	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-15 19:37:49	-->	jshjsh (~jshjsh@172.56.17.55) has joined ##c++
2016-09-15 19:38:19	<--	JoshS (~jshjsh@172.56.17.55) has quit (Disconnected by services)
2016-09-15 19:38:23	--	jshjsh is now known as JoshS
2016-09-15 19:39:20	-->	KindOne (kindone@freenude/topless/kindone) has joined ##c++
2016-09-15 19:39:22	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-15 19:42:02	-->	asc232 (~Keith@179.38.232.249) has joined ##c++
2016-09-15 19:42:19	<--	daniel-s (~daniel-s@bla31-1-82-241-231-138.fbx.proxad.net) has quit (Quit: Konversation terminated!)
2016-09-15 19:42:30	<--	asc232 (~Keith@179.38.232.249) has quit (Read error: Connection reset by peer)
2016-09-15 19:42:32	-->	daniel-s (~daniel-s@bla31-1-82-241-231-138.fbx.proxad.net) has joined ##c++
2016-09-15 19:43:18	<--	somaReverse (~amos@2400:dd01:1022:30:6af7:28ff:fe78:6901) has quit (Quit: WeeChat 1.5)
2016-09-15 19:44:16	<--	arescorpio (~arescorpi@75-226-114-200.fibertel.com.ar) has quit (Excess Flood)
2016-09-15 19:46:29	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-15 19:46:39	<--	zap0 (~moofy@14-201-222-143.tpgi.com.au) has quit (Quit: zap0)
2016-09-15 19:48:32	<--	w3z (~w3z@173-169-121-88.res.bhn.net) has quit (Quit: w3z)
2016-09-15 19:48:40	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-15 19:49:44	-->	w3z (~w3z@173-169-121-88.res.bhn.net) has joined ##c++
2016-09-15 19:49:55	-->	jeromelanteri (~jeromelan@cm-119-76-54-163.revip17.asianet.co.th) has joined ##c++
2016-09-15 19:51:32	-->	delicado (~delicado@112.198.102.83) has joined ##c++
2016-09-15 19:51:32		[19:51]
2016-09-15 19:51:56	-->	elnormous (~elnormous@91.105.17.158) has joined ##c++
2016-09-15 19:52:02	<--	Tempesta (~Tempesta@unaffiliated/tempesta) has quit (Quit: AdiIRC is updating to v2.5 Beta Build (2016/09/16-1) 32 Bit)
2016-09-15 19:52:15	-->	FreeBirdLjj (~freebirdl@112.20.80.222) has joined ##c++
2016-09-15 19:52:31	-->	Tempesta (~Tempesta@unaffiliated/tempesta) has joined ##c++
2016-09-15 19:52:58	-->	thorongil (~thorongil@119.82.78.210) has joined ##c++
2016-09-15 19:54:31	-->	Paradisee (~quassel@93.55.93.68) has joined ##c++
2016-09-15 19:54:57	<--	alyptik_ (~alyptik@cpe-76-173-133-37.hawaii.res.rr.com) has left ##c++
2016-09-15 19:54:58	--	irc: disconnected from server
2016-09-15 20:00:00		[19:54]
2016-09-15 20:02:00	--	irc: disconnected from server
2016-09-15 20:02:31	-->	alyptik (~alyptik@cpe-76-173-133-37.hawaii.res.rr.com) has joined ##c++
2016-09-15 20:02:31		[20:02]
2016-09-15 20:02:32	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || https://isocpp.org/faq || pastes: http://melpon.org/wandbox"
2016-09-15 20:02:32	--	Topic set by V-ille (~ville@81-175-149-170.bb.dnainternet.fi) on Fri, 18 Sep 2015 07:13:01
2016-09-15 20:02:32	--	Channel ##c++: 935 nicks (0 ops, 0 voices, 935 normals)
2016-09-15 20:02:33	<--	hoshi (~hoshi@aayn177.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 240 seconds)
2016-09-15 20:03:15	--	Channel created on Fri, 14 Sep 2001 17:15:35
2016-09-15 20:04:32	-->	jamesaxl (~jamesaxl@176.98.129.195) has joined ##c++
2016-09-15 20:04:34	-->	nwkj86 (~nwkj86@31.216.57.170) has joined ##c++
2016-09-15 20:05:30	-->	hoshi (~hoshi@dru12.neoplus.adsl.tpnet.pl) has joined ##c++
2016-09-15 20:05:46	-->	SibTiger|Noteboo (~Nicholas@199-96-206-87.fidnet.com) has joined ##c++
2016-09-15 20:06:13	-->	LordDagothur (~Dagothur@2607:fea8:921f:fc1a:2118:9c94:9dcf:b3e7) has joined ##c++
2016-09-15 20:07:35	<--	mwehner (~martin@li910-8.members.linode.com) has quit (Ping timeout: 260 seconds)
2016-09-15 20:09:08	-->	somaReverse (~amos@2400:dd01:1022:30:6af7:28ff:fe78:6901) has joined ##c++
2016-09-15 20:10:24	<--	atod (~atod@cpe-74-73-129-35.nyc.res.rr.com) has quit (Ping timeout: 244 seconds)
2016-09-15 20:10:44	<--	Drathnix (~Drathnix@unaffiliated/drathnix) has quit (Ping timeout: 244 seconds)
2016-09-15 20:11:43	-->	kw01f (~kw01f@merlin.mvtec.com) has joined ##c++
2016-09-15 20:12:04	-->	vuoto (~vuoto@80-71-135-9.u.parknet.dk) has joined ##c++
2016-09-15 20:12:32	<--	delicado (~delicado@112.198.102.83) has quit
2016-09-15 20:13:24	-->	casscode (~quassel@169-0-91-62.ip.afrihost.co.za) has joined ##c++
2016-09-15 20:19:00		[20:13]
2016-09-15 20:19:11	-->	rd4455 (~rd45@cpe-108-185-89-248.socal.res.rr.com) has joined ##c++
2016-09-15 20:20:38	-->	Vuks (~Vuks@unaffiliated/vuks69) has joined ##c++
2016-09-15 20:21:39	-->	Drathnix (~Drathnix@unaffiliated/drathnix) has joined ##c++
2016-09-15 20:23:21	-->	AquaL1te (~AquaL1te@unaffiliated/aqual1te) has joined ##c++
2016-09-15 20:23:55	<--	Valdaris (~Gabe@75-170-43-116.eugn.qwest.net) has quit (Ping timeout: 260 seconds)
2016-09-15 20:24:25	-->	root (~root@p57A9BEEE.dip0.t-ipconnect.de) has joined ##c++
2016-09-15 20:24:43	--	root is now known as Guest36884
2016-09-15 20:26:39	<--	rd4455 (~rd45@cpe-108-185-89-248.socal.res.rr.com) has quit (Read error: Connection reset by peer)
2016-09-15 20:27:42	-->	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has joined ##c++
2016-09-15 20:29:32	-->	KAHR-Alpha (~Alpha@AReims-652-1-76-199.w86-192.abo.wanadoo.fr) has joined ##c++
2016-09-15 20:30:34	-->	rendar (~I@host224-58-dynamic.49-79-r.retail.telecomitalia.it) has joined ##c++
2016-09-15 20:31:32	-->	rmunoz (~ricardo@217.124.142.50) has joined ##c++
2016-09-15 20:33:15	<--	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has quit (Ping timeout: 265 seconds)
2016-09-15 20:34:27	-->	mwehner (~martin@li910-8.members.linode.com) has joined ##c++
2016-09-15 20:34:27		[20:34]
2016-09-15 20:34:30	-->	GrayArea (~GrayArea@cpc73846-dals21-2-0-cust384.20-2.cable.virginm.net) has joined ##c++
2016-09-15 20:40:00		[20:34]
2016-09-15 20:41:02	-->	jackhum (uid97400@gateway/web/irccloud.com/x-ufsoxkmnluunjhnd) has joined ##c++
2016-09-15 20:43:27	w3z	{[](auto...){}();}
2016-09-15 20:43:27	geordi	error: no match for call to '(main(int, char**)::<lambda(auto:2, ...)>) ()'
2016-09-15 20:43:32	w3z	geordi: use --clang
2016-09-15 20:43:32	geordi	<no output>
2016-09-15 20:44:27	<--	JayKaye (~Jay@c27-253-116-193.carlnfd2.nsw.optusnet.com.au) has quit (Ping timeout: 272 seconds)
2016-09-15 20:45:47	-->	ambro718 (~ambro@unaffiliated/ambro718) has joined ##c++
2016-09-15 20:46:49	-->	Munnu (~timo@91-158-145-247.elisa-laajakaista.fi) has joined ##c++
2016-09-15 20:46:52	<--	shams (~shams@124.40.246.86) has quit (Quit: Leaving)
2016-09-15 20:47:36	<--	vuoto (~vuoto@80-71-135-9.u.parknet.dk) has quit (Remote host closed the connection)
2016-09-15 20:48:04	-->	eduardas_m (~eduardas_@213.197.143.19) has joined ##c++
2016-09-15 20:48:33	<--	degva (~degva@190.232.18.40) has quit (Ping timeout: 240 seconds)
2016-09-15 20:49:39	<--	Ropeney (~Ropeney@tank.mindvision.com.au) has quit (Ping timeout: 248 seconds)
2016-09-15 20:49:56	<--	jonasschnelli (~jonasschn@2a01:4f8:200:7025::2) has quit (Changing host)
2016-09-15 20:49:56	-->	jonasschnelli (~jonasschn@unaffiliated/jonasschnelli) has joined ##c++
2016-09-15 20:50:47	<--	Ben2560 (~quassel@137.154.197.63) has quit (Ping timeout: 272 seconds)
2016-09-15 20:51:05	-->	rriemann (~rriemann@dhcp-67-135.ixxi.ens-lyon.fr) has joined ##c++
2016-09-15 20:51:10	<--	thorongil (~thorongil@119.82.78.210) has quit (Remote host closed the connection)
2016-09-15 20:51:12	-->	Sceorem (~Sceorem@xbn44-3-82-232-76-9.fbx.proxad.net) has joined ##c++
2016-09-15 20:51:19	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-15 20:51:47	<--	GrayArea (~GrayArea@cpc73846-dals21-2-0-cust384.20-2.cable.virginm.net) has quit (Ping timeout: 248 seconds)
2016-09-15 20:52:21	-->	xnavor (~xnavor@vbg-gw.proceranetworks.com) has joined ##c++
2016-09-15 20:52:31	-->	rd4455 (~rd45@cpe-108-185-89-248.socal.res.rr.com) has joined ##c++
2016-09-15 20:52:39	-->	Anodl (~Anodl@p5B0BCE27.dip0.t-ipconnect.de) has joined ##c++
2016-09-15 20:52:44	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-15 20:54:54	-->	coincoin4ever (~coincoin@178.16.163.28) has joined ##c++
2016-09-15 20:55:42	-->	hatter (~hatter@h-90-120.a137.corp.bahnhof.se) has joined ##c++
2016-09-15 20:55:42		[20:55]
2016-09-15 20:56:50	-->	Palsson (~Palsson@pc-193-235-91-227.norrkoping.se) has joined ##c++
2016-09-15 20:58:27	-->	elnormous (~elnormous@91.105.17.158) has joined ##c++
2016-09-15 20:59:18	<--	coderwork (~coderwork@unaffiliated/coderwork) has quit (Ping timeout: 264 seconds)
2016-09-15 21:00:11	-->	lolek (~lolek@ip-91-244-230-76.simant.pl) has joined ##c++
2016-09-15 21:00:14	<--	lolek (~lolek@ip-91-244-230-76.simant.pl) has quit (Changing host)
2016-09-15 21:00:14	-->	lolek (~lolek@unaffiliated/marcin) has joined ##c++
2016-09-15 21:00:22	-->	bkboggy (~bkboggy@cpe-172-250-147-60.socal.res.rr.com) has joined ##c++
2016-09-15 21:00:41	<--	lolek (~lolek@unaffiliated/marcin) has left ##c++
2016-09-15 21:00:52	-->	GrayArea (kvirc@178.208.166.75) has joined ##c++
2016-09-15 21:02:23	-->	jablo (~jablo@80.243.123.111) has joined ##c++
2016-09-15 21:02:39	<--	elnormous (~elnormous@91.105.17.158) has quit (Ping timeout: 250 seconds)
2016-09-15 21:02:46	<--	roissy__ (~roissy@176.233.53.57) has quit (Quit: Leaving)
2016-09-15 21:03:52	-->	michaf_ (~quassel@ip-178-203-233-210.hsi10.unitymediagroup.de) has joined ##c++
2016-09-15 21:04:17	-->	Kimundi_ (~Kimundi@p57BC68FB.dip0.t-ipconnect.de) has joined ##c++
2016-09-15 21:04:24	<--	Anodl (~Anodl@p5B0BCE27.dip0.t-ipconnect.de) has quit (Ping timeout: 276 seconds)
2016-09-15 21:04:59	-->	rimdeker (~rimdeker@unaffiliated/rimdeker) has joined ##c++
2016-09-15 21:06:05	<--	SibTiger|Noteboo (~Nicholas@199-96-206-87.fidnet.com) has quit (Quit: All work and no play, makes Tiger a dull boy.  ALlwOrk and noPlaY ,makes tigera Dullbo y.  AllWorK andno plaY,mak esTiger a dull B oy.)
2016-09-15 21:06:48	<--	michaf_ (~quassel@ip-178-203-233-210.hsi10.unitymediagroup.de) has quit (Read error: Connection reset by peer)
2016-09-15 21:07:02	-->	michaf_ (~quassel@ip-178-203-233-210.hsi10.unitymediagroup.de) has joined ##c++
2016-09-15 21:08:51	<--	michaf_ (~quassel@ip-178-203-233-210.hsi10.unitymediagroup.de) has quit (Remote host closed the connection)
2016-09-15 21:08:54	<--	ambro718 (~ambro@unaffiliated/ambro718) has quit (Ping timeout: 264 seconds)
2016-09-15 21:10:18	cbreak	int considered harmful: https://arstechnica.co.uk/security/2016/09/signal-bug-attackers-tamper-encrypted-messages-patch (even in java, in C++ this would have been MUCH worse)
2016-09-15 21:10:37	-->	biberu (~biberu@c-cf2d72d5.08-441-7570702.cust.bredbandsbolaget.se) has joined ##c++
2016-09-15 21:10:57	<--	ftop_ (~ftop@ppp121-45-223-27.lns20.cbr1.internode.on.net) has quit (Ping timeout: 265 seconds)
2016-09-15 21:10:57		[21:10]
2016-09-15 21:13:59	-->	atod (~atod@cpe-74-73-129-35.nyc.res.rr.com) has joined ##c++
2016-09-15 21:14:55	<--	nwkj86 (~nwkj86@31.216.57.170) has quit (Ping timeout: 250 seconds)
2016-09-15 21:14:56	-->	Stanley00 (~Stanley_0@unaffiliated/stanley00) has joined ##c++
2016-09-15 21:15:17	-->	marcofe (~marcofe@test-centre4-gw.estec.esa.int) has joined ##c++
2016-09-15 21:15:24	-->	sh4z (lml@c49-177-189-168.chirn2.vic.optusnet.com.au) has joined ##c++
2016-09-15 21:15:24	<--	sh4z (lml@c49-177-189-168.chirn2.vic.optusnet.com.au) has quit (Changing host)
2016-09-15 21:15:24	-->	sh4z (lml@unaffiliated/sh4z) has joined ##c++
2016-09-15 21:17:44	<--	CEnnis91 (uid3543@gateway/web/irccloud.com/x-lqeyzwdjskbpxbtc) has quit (Quit: Connection closed for inactivity)
2016-09-15 21:18:39	<--	atod (~atod@cpe-74-73-129-35.nyc.res.rr.com) has quit (Ping timeout: 272 seconds)
2016-09-15 21:19:37	-->	SteffanW (~steffanw@ip4da40774.direct-adsl.nl) has joined ##c++
2016-09-15 21:20:02	w3z	someone somehwere cast a 64 bit integer to a 32 bit integer, boring and ot
2016-09-15 21:20:56	cbreak	The topic is: don't use int :)
2016-09-15 21:21:19	w3z	i like that they had to retract their click-bait nation-state sponsored hack for some reason
2016-09-15 21:21:21	cbreak	all the C++ keyword types are bad
2016-09-15 21:21:27	cbreak	but int is particularly dangerous
2016-09-15 21:21:52	-->	SparrowBG (~sparrow@213.130.72.122) has joined ##c++
2016-09-15 21:21:58	cbreak	and the java people were dumb enough to copy them :(
2016-09-15 21:22:03	-->	seru76 (~seru76@77.89.191.179) has joined ##c++
2016-09-15 21:22:05	-->	GavinMagnus (~Simon@37.160.104.77) has joined ##c++
2016-09-15 21:22:12	cbreak	(at least they left some of the more stupid issues behind)
2016-09-15 21:22:44	<--	GavinMagnus (~Simon@37.160.104.77) has quit (Client Quit)
2016-09-15 21:23:09	<--	SteffanW (~steffanw@ip4da40774.direct-adsl.nl) has quit (Read error: Connection reset by peer)
2016-09-15 21:23:23	-->	SteffanW (~steffanw@ip4da40774.direct-adsl.nl) has joined ##c++
2016-09-15 21:23:31	<--	KAHR-Alpha (~Alpha@AReims-652-1-76-199.w86-192.abo.wanadoo.fr) has quit (Ping timeout: 265 seconds)
2016-09-15 21:23:48	-->	szulak (uid162164@gateway/web/irccloud.com/x-bvtzqsovehdqysmu) has joined ##c++
2016-09-15 21:23:55	-->	Andlon (~Andlon@2a02:908:691:bd1c:30b1:5e47:65a8:2834) has joined ##c++
2016-09-15 21:24:10	<--	Andlon (~Andlon@2a02:908:691:bd1c:30b1:5e47:65a8:2834) has left ##c++
2016-09-15 21:24:19	-->	AndreasL (~Andlon@2a02:908:691:bd1c:30b1:5e47:65a8:2834) has joined ##c++
2016-09-15 21:24:28	-->	velco (~chill@vlan-185-78-38-153.comnet.bg) has joined ##c++
2016-09-15 21:24:43	ville	like having unsigned ones
2016-09-15 21:24:58	AndreasL	Are there any gotchas with writing binary data to stdout?
2016-09-15 21:25:05	<--	SteffanW (~steffanw@ip4da40774.direct-adsl.nl) has quit (Read error: Connection reset by peer)
2016-09-15 21:25:13	cbreak	ville: no, that was one of the problems they have
2016-09-15 21:25:18	-->	SteffanW (~steffanw@ip4da40774.direct-adsl.nl) has joined ##c++
2016-09-15 21:25:31	cbreak	ville: their overflows are not UB, so they have less problems with them
2016-09-15 21:25:41	cbreak	ville: and their int are 32bit, so at least the size is clear
2016-09-15 21:25:56	cbreak	C++ has implementation defined sizes and UB on over / underflow
2016-09-15 21:26:23	<--	rimdeker (~rimdeker@unaffiliated/rimdeker) has quit (Remote host closed the connection)
2016-09-15 21:26:23		[21:26]
2016-09-15 21:26:40	cbreak	in java, you have to use weird special-case functions for unsigned arithmetic, while this works via the type system in C++, so here C++ wins, but it's a small victory considering the eagerness of C++'s type system to implicitly convert between signed and unsigned...
2016-09-15 21:26:57	cbreak	AndreasL: yes.
2016-09-15 21:26:59	<--	calincru (~calin@c-73-231-85-3.hsd1.ca.comcast.net) has quit (Ping timeout: 248 seconds)
2016-09-15 21:27:13	w3z	...theres an explicit cast to a narrower integer type on one of the operands of a - ...
2016-09-15 21:27:27	AndreasL	cbreak, could you please elaborate?
2016-09-15 21:27:47	<--	chardan (~chardan@c-73-157-202-190.hsd1.or.comcast.net) has quit (Ping timeout: 265 seconds)
2016-09-15 21:28:08	w3z	even if they had properly used unsigned, its in error - not sure why youre tarrinh int
2016-09-15 21:28:26	cbreak	w3z: as I said above: they should not use int
2016-09-15 21:28:28	-->	Miroboru (~myrvoll@88.95.165.75) has joined ##c++
2016-09-15 21:28:29	AndreasL	For context, I'm writing a small library for numerical computation. I want to write some (integration) tests, but to do so I need to analyze the output of the algorithm to determine expected values. Hence, I was thinking of simply piping output from a simple binary to either a file or directly into Python, where I can visualize it
2016-09-15 21:28:34	--	irc: disconnected from server
2016-09-15 21:31:07	-->	alyptik (~alyptik@cpe-76-173-133-37.hawaii.res.rr.com) has joined ##c++
2016-09-15 21:31:07		[21:31]
2016-09-15 21:31:07	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || https://isocpp.org/faq || pastes: http://melpon.org/wandbox"
2016-09-15 21:31:07	--	Topic set by V-ille (~ville@81-175-149-170.bb.dnainternet.fi) on Fri, 18 Sep 2015 07:13:01
2016-09-15 21:31:07	--	Channel ##c++: 953 nicks (0 ops, 0 voices, 953 normals)
2016-09-15 21:31:07	***	Buffer Playback...
2016-09-15 21:31:07	*buffextras	[21:28:50] AnarchyAo!~andrew@dhcp.1lakeside.web-pass.com quit with message: [Quit: ircN 8.00 for mIRC (20100904) - www.ircN.org]
2016-09-15 21:31:07	*buffextras	[21:29:17] khlorghaal!~quassel@76-202-65-254.lightspeed.brbnca.sbcglobal.net quit with message: [Ping timeout: 264 seconds]
2016-09-15 21:31:07	cbreak	[21:29:49] AndreasL: main problem is that standard output might be consumed by a terminal, and might be used all over your code for logging, your program has to be quite clear that it spits out binary, and you, as well as all libraries you use, have to be explicit in not using stdout for anything else (i.e. use cerr for logging)
2016-09-15 21:31:07	cbreak	[21:30:29] also, I don't know if cout on windows does \n -> \r\n conversion
2016-09-15 21:31:07	cbreak	[21:30:42] I'd hope not, but microsoft's stupidity can be boundless
2016-09-15 21:31:07	ville	[21:31:01] having signed and unsgined was a silly distinction. having unchecked and checked integer types would have been a better one. because presumably you could make the checked one generic so you define the bounds and the operation that occurs at the bounds for checking.
2016-09-15 21:31:07	***	Playback Complete.
2016-09-15 21:31:13	--	Channel created on Fri, 14 Sep 2001 17:15:35
2016-09-15 21:32:21	cbreak	having signed and unsigned is useful
2016-09-15 21:32:35	ville	not at all really
2016-09-15 21:32:35	cbreak	they use the same number of bits, but can represent different semantic ranges
2016-09-15 21:32:36	-->	tocka (~tocka@78-56-107-170.static.zebra.lt) has joined ##c++
2016-09-15 21:32:59	Soap__	ville: how do you represent all 64 bits of a pointer then?
2016-09-15 21:33:10	cbreak	underlying hardware works very well with the two representations, and have some special casing for either
2016-09-15 21:33:24	Soap__	C++ is not java, we dont need the nannystate crap
2016-09-15 21:34:00	AndreasL	cbreak, yeah, that's some very good points. I'm trying to find a way that lets me avoid writing shoddy Python bindings all over the place
2016-09-15 21:34:09	cbreak	and especially for sizes, as in this case, negative numbers are 100% worthless, and even potentially harmful
2016-09-15 21:34:26	<--	chrisg_ (~chrisg@host86-142-34-130.range86-142.btcentralplus.com) has quit (Ping timeout: 244 seconds)
2016-09-15 21:34:27	ville	it seems like both of you don't realize the checked type with definable bounds and bounds operations is a generalization of an unsigned type..
2016-09-15 21:34:40	cbreak	ville: no, it's a specialization
2016-09-15 21:34:41	Soap__	ville: how do you do that in hardware?
2016-09-15 21:35:08	cbreak	ville: not even a real one, since it trades well defined modulo arithmetic for the runtime overhead of overflow checking
2016-09-15 21:35:10	ville	it's a generalization and an unsigned 32bit integer with overfload is specislixation
2016-09-15 21:35:24	ville	cbreak: who said anything about runtime checking
2016-09-15 21:35:29	cbreak	ville: you
2016-09-15 21:35:29	ville	you people suck today
2016-09-15 21:35:37	Soap__	C++ is a baremetal language, not some fancy pythonesque runtime thing that hold your hand
2016-09-15 21:35:47	ville	i didn't say _anything_ about runtime. i double dare you to find where i said it
2016-09-15 21:35:56	cbreak	ville: you said it again
2016-09-15 21:36:25	ville	really close getting kicked
2016-09-15 21:36:30	cbreak	don't worry
2016-09-15 21:37:18	cbreak	boost::multiprecision has implementation of checked integers
2016-09-15 21:37:24	-->	interop_madness (~interop_m@unaffiliated/interop-madness/x-8858653) has joined ##c++
2016-09-15 21:37:33	cbreak	if you really want the, you can have them
2016-09-15 21:37:35	-->	n0body (aa94d79d@gateway/web/freenode/ip.170.148.215.157) has joined ##c++
2016-09-15 21:37:40	cbreak	they have somewhat defineable bounds
2016-09-15 21:37:46	-->	chrisg_ (~chrisg@host86-142-34-130.range86-142.btcentralplus.com) has joined ##c++
2016-09-15 21:37:55	cbreak	but they are either unsigned, or sign magnitude
2016-09-15 21:38:30	<--	nealshire (~Nealshire@unaffiliated/nealshire) has quit (Ping timeout: 265 seconds)
2016-09-15 21:38:31	cbreak	and, obviously, there is runtime overhead in the checking it does
2016-09-15 21:38:48	cbreak	(after all, the checked integers throw exceptions on over / underflow)
2016-09-15 21:38:50	-->	Daxwax (~Daxwax@218.155.9.46.customer.cdi.no) has joined ##c++
2016-09-15 21:39:05	-->	Beetny (~Beetny@14-202-48-200.tpgi.com.au) has joined ##c++
2016-09-15 21:39:07	-->	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has joined ##c++
2016-09-15 21:40:18	<--	code_zombie (~code_zomb@136.63.230.43) has quit (Quit: Leaving)
2016-09-15 21:41:07	<--	cbot (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Quit: Leaving)
2016-09-15 21:42:10	cbreak	hmm... I wonder if the C++ signed integer fans are actually fans of twos complement, or don't really care about the representation.
2016-09-15 21:42:22	<--	alyptik (~alyptik@cpe-76-173-133-37.hawaii.res.rr.com) has left ##c++
2016-09-15 21:42:24	-->	alyptik (~alyptik@cloak-d1v.g3v.mk14vj.IP) has joined ##c++
2016-09-15 21:42:24	--	Channel ##c++: 1 nick (1 op, 0 halfops, 0 voices, 0 normals)
2016-09-15 21:42:46	<--	alyptik (~alyptik@cloak-d1v.g3v.mk14vj.IP) has left ##c++
2016-09-15 21:42:46	-->	alyptik (~alyptik@cpe-76-173-133-37.hawaii.res.rr.com) has joined ##c++
2016-09-15 21:42:46	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || https://isocpp.org/faq || pastes: http://melpon.org/wandbox"
2016-09-15 21:42:46	--	Topic set by V-ille (~ville@81-175-149-170.bb.dnainternet.fi) on Fri, 18 Sep 2015 07:13:01
2016-09-15 21:42:46	--	Channel ##c++: 956 nicks (0 ops, 0 voices, 956 normals)
2016-09-15 21:42:56	--	Channel created on Fri, 14 Sep 2001 17:15:35
2016-09-15 21:43:28	--	Mode ##c++ [+CPcflnpt #overflow 1024]
2016-09-15 21:43:28	--	Channel created on Fri, 14 Sep 2001 17:15:35
2016-09-15 21:43:49	<--	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has quit (Ping timeout: 265 seconds)
2016-09-15 21:45:09	-->	riemann (~riemann@84-10-11-234.static.chello.pl) has joined ##c++
2016-09-15 21:46:41	<--	Crazylemon64 (~Crazylemo@c-98-237-179-255.hsd1.wa.comcast.net) has quit (Ping timeout: 240 seconds)
2016-09-15 21:46:41		[21:46]
2016-09-15 21:46:46	-->	Jiwan (~jeangu@212.247.124.2) has joined ##c++
2016-09-15 21:46:54	-->	Ascender (~CoolRever@cpe-98-27-211-128.neo.res.rr.com) has joined ##c++
2016-09-15 21:47:12	-->	Xanather (~xanather@unaffiliated/xanather) has joined ##c++
2016-09-15 21:48:07	-->	ftop (~ftop@ppp121-45-223-27.lns20.cbr1.internode.on.net) has joined ##c++
2016-09-15 21:48:36	ville	projecting what some library implementation is able to do is completely irrelevant to what a language backed type would do, even if it was presented to the user as just another template
2016-09-15 21:49:31	cbreak	what would the user get from a checked integer?
2016-09-15 21:49:39	cbreak	an integer that throws an exception instead of overflowing?
2016-09-15 21:49:44	-->	magnicida (~raskolnik@ip5b4135a6.dynamic.kabel-deutschland.de) has joined ##c++
2016-09-15 21:50:07	cbreak	or an integer that would give a compile error instead of overflowing, if possible, and otherwise, if the value is known only at runtime... just overflow?
2016-09-15 21:50:10	<--	SteffanW (~steffanw@ip4da40774.direct-adsl.nl) has quit (Read error: Connection reset by peer)
2016-09-15 21:50:57	<--	mangolisk (~mangolisk@S0106848dc7ebaa06.vc.shawcable.net) has quit (Read error: Connection reset by peer)
2016-09-15 21:51:06	-->	drozdziak1 (~drozdziak@do-atman.cubiware.com) has joined ##c++
2016-09-15 21:51:11	<--	alyptik (~alyptik@cpe-76-173-133-37.hawaii.res.rr.com) has left ##c++
2016-09-15 21:51:13	--	irc: disconnected from server
2016-09-15 21:51:31	-->	alyptik (~alyptik@cpe-76-173-133-37.hawaii.res.rr.com) has joined ##c++
2016-09-15 21:51:31		[21:51]
2016-09-15 21:51:31	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || https://isocpp.org/faq || pastes: http://melpon.org/wandbox"
2016-09-15 21:51:31	--	Topic set by V-ille (~ville@81-175-149-170.bb.dnainternet.fi) on Fri, 18 Sep 2015 07:13:01
2016-09-15 21:51:32	--	Channel ##c++: 959 nicks (0 ops, 0 voices, 959 normals)
2016-09-15 21:51:32	***	Buffer Playback...
2016-09-15 21:51:32	*buffextras	[21:51:20] alyptik!~alyptik@cpe-76-173-133-37.hawaii.res.rr.com joined
2016-09-15 21:51:32	*buffextras	[21:51:25] Server set mode: +CPcnptlf 1024 #overflow
2016-09-15 21:51:32	***	Playback Complete.
2016-09-15 21:51:39	--	Channel created on Fri, 14 Sep 2001 17:15:35
2016-09-15 21:51:59	Ascender	anyone in here any decent with C?
2016-09-15 21:52:12	Ascender	got a very simple (I'm sure) issue that I'm just not figuring out
2016-09-15 21:52:41	cbreak	Ascender: have you considered C++? C is just an inferior shadow, stuck in the past.
2016-09-15 21:53:13	<--	dardevelin (~dardeveli@unaffiliated/dardevelin) has quit (Ping timeout: 244 seconds)
2016-09-15 21:53:13	<--	casscode (~quassel@169-0-91-62.ip.afrihost.co.za) has quit (Remote host closed the connection)
2016-09-15 21:53:45	-->	casscode (~quassel@169-0-91-62.ip.afrihost.co.za) has joined ##c++
2016-09-15 21:53:45	-->	lorenzo64 (~lorenzo__@5.144.190.80) has joined ##c++
2016-09-15 21:54:00	-->	elnormou_ (~elnormous@gateway.evolutiongaming.com) has joined ##c++
2016-09-15 21:54:08	Ascender	Well, considering Linux kernel and many other things are still built from it, I wouldn't consider it inferior or useless
2016-09-15 21:54:39	Ascender	But practically speaking, it's for a class...and I'm finding it useful as a beginner programmer learning low level concepts
2016-09-15 21:55:48	Ascender	about as close to assembly as you can get and branching off from it seems like a good launch pad. I started with Python and it's been wild noticing how much Python "did automatically" as opposed to C lol
2016-09-15 21:56:13	cbreak	Ascender: still, consider C++
2016-09-15 21:56:27	Ascender	So I'm sort of enjoying the forced education in a way, knowing the more bottom level concepts that "easier" languages tend to just do automatically
2016-09-15 21:56:44	cbreak	C++ can be as low level as C, but it offers high level features even many other high level languages lack.
2016-09-15 21:56:49	Ascender	yeah I've heard
2016-09-15 21:57:15	Ascender	I'm not discounting learning it or moving onto it...I've dabbled and it doesn't seem like that will be a monumental transition
2016-09-15 21:57:27	Ascender	But since my class is in C, may as well dive in and move on from it later
2016-09-15 21:58:12	Ascender	https://codeshare.io/kZ0RQ
2016-09-15 21:58:21	ville	aa<0, 255, wrap, wrap> x; and now operations on x would compile down to arithmetic operations on the hardware's native type representing values in that range. aa<-30, 14, undefined, undefined> the ranges there merely control the minimum size of the underlying storage. and finally aa<-128, 127, saturate, exception>> would saturate on underflow and throw an exception on overflow. something like that
2016-09-15 21:58:30	Ascender	For whatever unholy reason, that's showing any number I type when prompted as 0.000 blah
2016-09-15 21:58:53	Ascender	and I just don't see what I've done wrong to possibly cause that
2016-09-15 21:58:54	cbreak	ville: so it wouldn't be a checked type
2016-09-15 21:59:01	cbreak	ville: it'd be a generic type that can be checked, or not
2016-09-15 21:59:06	-->	Sasasu (~li@180.212.140.16) has joined ##c++
2016-09-15 21:59:13	ville	cbreak: yes it would be. the type of check can be a noop
2016-09-15 21:59:39	cbreak	the noop checking one sounds like size_t
2016-09-15 22:00:51	<--	w3z (~w3z@173-169-121-88.res.bhn.net) has quit (Read error: Connection reset by peer)
2016-09-15 22:01:04	-->	w3z (~w3z@173-169-121-88.res.bhn.net) has joined ##c++
2016-09-15 22:02:09	-->	Lowl3v3l (~Lowl3v3l@ipservice-092-208-080-178.092.208.pools.vodafone-ip.de) has joined ##c++
2016-09-15 22:03:01	ville	of course had c++ gone that route people would complain that it's too fuzzy what underlying type and assembly gets generated. if you define 0,255 range but there's no 8 bit type and so on
2016-09-15 22:03:19	urdh	!give Ascender focus
2016-09-15 22:03:20	nolyc	Ascender: ##c++ focuses on C++. Discuss offtopic things elsewhere; ##c++-general or ##c++-social
2016-09-15 22:03:25	urdh	C is not C++
2016-09-15 22:03:37	<--	plusone (~plusone@176.24.26.166) has quit (Ping timeout: 272 seconds)
2016-09-15 22:03:44	<--	Goplat (~goplat@reactos/developer/Goplat) has quit (Remote host closed the connection)
2016-09-15 22:04:34	Ascender	C isn't C++?? Oh wow, thanks for the tip
2016-09-15 22:05:10	Ascender	Sorry, just not easy to sniff through channels with a letter "C" for any relevance to find people that may possibly help
2016-09-15 22:05:20	cbreak	ville: precision is good.
2016-09-15 22:05:32	cbreak	ville: uint8_t is better than unsigned char because of precision
2016-09-15 22:05:36	cbreak	more precision wouldn't be bad.
2016-09-15 22:05:43	urdh	Ascender: uh, try ##C?
2016-09-15 22:05:53	<--	dinfuehr (~dinfuehr@194-166-246-219.adsl.highway.telekom.at) has quit (Ping timeout: 240 seconds)
2016-09-15 22:05:57	cbreak	but there likely would have to be typedefs for "optimal-in-hardware" types
2016-09-15 22:05:59	Ascender	ah perfect, thanks
2016-09-15 22:06:13	<--	bkboggy (~bkboggy@cpe-172-250-147-60.socal.res.rr.com) has quit (Quit: Leaving)
2016-09-15 22:06:21	Ascender	Sorry to clutter your channel with my off-topicness...keep up the good channel moderating work lol
2016-09-15 22:06:23	ville	yes it would be the same as the current system just packaged bit differently as far as sizes go
2016-09-15 22:06:29	<--	Ascender (~CoolRever@cpe-98-27-211-128.neo.res.rr.com) has left ##c++
2016-09-15 22:07:50	-->	m_ben (~m_ben@unaffiliated/m-ben/x-5917362) has joined ##c++
2016-09-15 22:07:50		[22:07]
2016-09-15 22:08:34	-->	dinfuehr (~dinfuehr@88-117-112-165.adsl.highway.telekom.at) has joined ##c++
2016-09-15 22:08:47	-->	nikki93 (~nikki93@2601:645:8104:cb10:cb9:d267:e465:7594) has joined ##c++
2016-09-15 22:09:57	<--	przemkovv-bis (~przemkovv@d83-37.icpnet.pl) has quit (Ping timeout: 272 seconds)
2016-09-15 22:10:03	-->	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2016-09-15 22:10:11	-->	tlaxkit (~hexchat@92.185.154.236) has joined ##c++
2016-09-15 22:10:25	-->	froggey (~froggey@unaffiliated/froggey) has joined ##c++
2016-09-15 22:11:52	-->	Lingo (~Lingo@195.81.148.254) has joined ##c++
2016-09-15 22:12:03	<--	nacon (~nacon@unaffiliated/nacon) has quit (Quit: leaving)
2016-09-15 22:13:45	<--	nikki93 (~nikki93@2601:645:8104:cb10:cb9:d267:e465:7594) has quit (Ping timeout: 272 seconds)
2016-09-15 22:14:22	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-15 22:14:27	<--	Stanley00 (~Stanley_0@unaffiliated/stanley00) has quit (Quit: Happy weekend :3)
2016-09-15 22:14:27	-->	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has joined ##c++
2016-09-15 22:15:26	-->	dangerousdave (~dangerous@78.156.71.46) has joined ##c++
2016-09-15 22:15:41	-->	suvirb (uid16371@gateway/web/irccloud.com/x-syjvnacmmacoikls) has joined ##c++
2016-09-15 22:16:26	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-15 22:19:24	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-15 22:19:40	-->	nikki93 (~nikki93@2601:645:8104:cb10:7458:85be:20f1:46a6) has joined ##c++
2016-09-15 22:21:36	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-15 22:22:32	-->	bjz (~bjz@pa49-199-192-123.pa.vic.optusnet.com.au) has joined ##c++
2016-09-15 22:23:53	<--	zwliew (uid161395@gateway/web/irccloud.com/x-dnbvnwmxnxhpofvb) has quit (Quit: Connection closed for inactivity)
2016-09-15 22:23:53		[22:23]
2016-09-15 22:25:13	<--	CoolBreeze (~CoolBreez@87-228-34.netrunf.cytanet.com.cy) has quit (Read error: Connection reset by peer)
2016-09-15 22:25:26	-->	CoolBreeze (~CoolBreez@87-228-34.netrunf.cytanet.com.cy) has joined ##c++
2016-09-15 22:25:48	<--	w3z (~w3z@173-169-121-88.res.bhn.net) has quit (Ping timeout: 272 seconds)
2016-09-15 22:26:14	<--	TMM (~hp@fsf/member/pdpc.professional.tmm) has quit (Quit: Ex-Chat)
2016-09-15 22:26:44	-->	Burgundy (~burgundy@86.121.178.118) has joined ##c++
2016-09-15 22:27:32	-->	arbv (~arbv@unaffiliated/arbv) has joined ##c++
2016-09-15 22:28:11	-->	w3z (~w3z@173-169-121-88.res.bhn.net) has joined ##c++
2016-09-15 22:28:34	<--	wget (~wget@unaffiliated/wget) has quit (Ping timeout: 240 seconds)
2016-09-15 22:29:40	-->	xaxxon (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has joined ##c++
2016-09-15 22:30:00	--	rZr is now known as RzR
2016-09-15 22:30:54	<--	rmunoz (~ricardo@217.124.142.50) has quit (Ping timeout: 244 seconds)
2016-09-15 22:31:58	<--	mad_enz (~mad_enz@2607:f090:488d:8d:68ed:2e51:a9a2:c105) has quit (Ping timeout: 255 seconds)
2016-09-15 22:32:18	<--	SibTiger (~Nicholas@199-96-206-87.fidnet.com) has quit (Ping timeout: 244 seconds)
2016-09-15 22:34:45	<--	dangerousdave (~dangerous@78.156.71.46) has quit (Ping timeout: 276 seconds)
2016-09-15 22:35:33	<--	DEElekgolo (~DEElekgol@2602:30a:2e0e:a7a0:65d1:58dd:5efd:a70b) has quit (Read error: Connection reset by peer)
2016-09-15 22:36:54	-->	Kirrahe (~kirrahe@ip51cc4257.adsl-surfen.hetnet.nl) has joined ##c++
2016-09-15 22:37:41	<--	bjz (~bjz@pa49-199-192-123.pa.vic.optusnet.com.au) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-15 22:38:22	-->	rmunoz (~ricardo@217.124.142.50) has joined ##c++
2016-09-15 22:38:27	<--	rmunoz (~ricardo@217.124.142.50) has quit (Client Quit)
2016-09-15 22:38:43	-->	rmunoz (~ricardo@217.124.142.50) has joined ##c++
2016-09-15 22:39:04	<--	lyindArk (~jzeiger@mail.talpidae.net) has quit (Remote host closed the connection)
2016-09-15 22:39:04		[22:39]
2016-09-15 22:39:22	-->	xarxer (~xarxer@194.218.229.29) has joined ##c++
2016-09-15 22:43:05	-->	SHC_ (~quassel@45.249.248.221) has joined ##c++
2016-09-15 22:43:53	-->	SHC__ (~quassel@45.249.248.221) has joined ##c++
2016-09-15 22:43:57	-->	oxbb5c (~Thunderbi@78.160.97.225) has joined ##c++
2016-09-15 22:46:10	-->	psychicist__ (~psychicis@wlan-145-94-175-128.wlan.tudelft.nl) has joined ##c++
2016-09-15 22:46:27	<--	SHC (~quassel@45.249.248.221) has quit (Ping timeout: 248 seconds)
2016-09-15 22:47:45	<--	SHC_ (~quassel@45.249.248.221) has quit (Ping timeout: 276 seconds)
2016-09-15 22:48:05	-->	spindle (~spindle@27-33-39-55.static.tpgi.com.au) has joined ##c++
2016-09-15 22:51:44	-->	dangerousdave (~dangerous@78.156.71.46) has joined ##c++
2016-09-15 22:54:13	-->	bx2 (~bx2@46.140.123.246) has joined ##c++
2016-09-15 22:54:13		[22:54]
2016-09-15 22:54:13	<--	xaxxon (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has quit (Quit: This computer has gone to sleep)
2016-09-15 22:54:27	-->	bjz (~bjz@14-201-215-168.tpgi.com.au) has joined ##c++
2016-09-15 22:54:29	-->	xaxxon (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has joined ##c++
2016-09-15 22:54:52	-->	SHC (~quassel@45.249.248.221) has joined ##c++
2016-09-15 22:55:14	<--	SHC (~quassel@45.249.248.221) has quit (Remote host closed the connection)
2016-09-15 22:55:37	-->	SunnyD (~SunnyD@cpe-72-178-78-211.hot.res.rr.com) has joined ##c++
2016-09-15 22:55:44	-->	blaxter (~blaxter@37.228.195.64) has joined ##c++
2016-09-15 22:56:58	-->	wget (~wget@unaffiliated/wget) has joined ##c++
2016-09-15 22:57:00	-->	SteffanW (~steffanw@ip4da40774.direct-adsl.nl) has joined ##c++
2016-09-15 22:58:11	<--	SHC__ (~quassel@45.249.248.221) has quit (Ping timeout: 248 seconds)
2016-09-15 23:00:30	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-15 23:02:16	<--	oxbb5c (~Thunderbi@78.160.97.225) has quit (Ping timeout: 244 seconds)
2016-09-15 23:02:48	-->	oxbb5c (~Thunderbi@78.160.97.225) has joined ##c++
2016-09-15 23:02:56	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-15 23:03:24	-->	Anticom (~quassel@217.6.33.234) has joined ##c++
2016-09-15 23:03:28	<--	SteffanW (~steffanw@ip4da40774.direct-adsl.nl) has quit (Read error: Connection reset by peer)
2016-09-15 23:04:22	<--	LordDagothur (~Dagothur@2607:fea8:921f:fc1a:2118:9c94:9dcf:b3e7) has quit (Ping timeout: 255 seconds)
2016-09-15 23:04:43	-->	Anodl (~Anodl@p2003007A2F39A20071365DB1478509EF.dip0.t-ipconnect.de) has joined ##c++
2016-09-15 23:04:50	-->	pandaant (~batman@149.201.240.93) has joined ##c++
2016-09-15 23:05:19	<--	hatter (~hatter@h-90-120.a137.corp.bahnhof.se) has quit (Read error: Connection timed out)
2016-09-15 23:07:19	-->	StyxAlso (~markg@235.129.220.203.dial.dynamic.acc01-oliv-alb.comindico.com.au) has joined ##c++
2016-09-15 23:07:20	<--	logan_e_ (uid164592@gateway/web/irccloud.com/x-xxjaxspzsgawemoo) has quit (Quit: Connection closed for inactivity)
2016-09-15 23:09:46	-->	zwliew (uid161395@gateway/web/irccloud.com/x-wnhzgsmenqqfsfmx) has joined ##c++
2016-09-15 23:09:46		[23:09]
2016-09-15 23:09:46	<--	SM0TVI (~sm0tvi@unaffiliated/sm0tvi) has quit (Read error: Connection reset by peer)
2016-09-15 23:11:53	<--	pandaant (~batman@149.201.240.93) has quit (Ping timeout: 240 seconds)
2016-09-15 23:12:23	<--	regedit (uid150526@gateway/web/irccloud.com/x-qvigdhgovbkbdnii) has quit (Quit: Connection closed for inactivity)
2016-09-15 23:12:50	-->	ibouvousaime (~ibouvousa@41.83.32.179) has joined ##c++
2016-09-15 23:13:52	-->	pandaant (~batman@149.201.240.93) has joined ##c++
2016-09-15 23:15:39	<--	EricWF (~EricWF@S0106bcd1653002b9.cg.shawcable.net) has quit (Read error: Connection reset by peer)
2016-09-15 23:18:43	<--	nikki93 (~nikki93@2601:645:8104:cb10:7458:85be:20f1:46a6) has quit (Remote host closed the connection)
2016-09-15 23:19:32	-->	SM0TVI (~sm0tvi@unaffiliated/sm0tvi) has joined ##c++
2016-09-15 23:19:34	w3z	{} using V=variant<int>; map<size_t,V> M{{0,0}};
2016-09-15 23:19:35	geordi	<no output>
2016-09-15 23:19:37	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-15 23:19:41	w3z	{} using V=variant<int>; unordered_map<size_t,V> M{{0,0}};
2016-09-15 23:19:42	geordi	error: symbol `.Lubsan_type3' is already defined
2016-09-15 23:19:48	-->	TMM (~hp@fsf/member/pdpc.professional.tmm) has joined ##c++
2016-09-15 23:19:48	-->	sophia7 (~sophia7@unaffiliated/sophia7) has joined ##c++
2016-09-15 23:19:48	w3z	geordi: use --clang
2016-09-15 23:19:48	geordi	error: unknown type name 'variant'
2016-09-15 23:20:08	w3z	{} using V=variant<int>; unordered_map<size_t,V> M{{0,V{0}}};
2016-09-15 23:20:11	geordi	error: symbol `.Lubsan_type3' is already defined
2016-09-15 23:20:22	w3z	geordi: use --clang
2016-09-15 23:20:22	geordi	error: unknown type name 'variant'
2016-09-15 23:20:22	-->	rafalcpp (~racalcppp@84-10-11-234.static.chello.pl) has joined ##c++
2016-09-15 23:20:52	w3z	that looks like a bug ...
2016-09-15 23:21:45	w3z	wheres EricWF and V-ille
2016-09-15 23:22:03	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-15 23:22:31	-->	bazrush (~bazrush@149.152.238.178.in-addr.arpa) has joined ##c++
2016-09-15 23:22:34	-->	EricWF (~EricWF@S0106bcd1653002b9.cg.shawcable.net) has joined ##c++
2016-09-15 23:24:17	-->	Gathis (~TheBlack@unaffiliated/gathis) has joined ##c++
2016-09-15 23:24:37	-->	Henke37 (~Henrik@81-227-16-59-no133.bredband.skanova.com) has joined ##c++
2016-09-15 23:24:43	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-15 23:25:34	w3z	even simpler,
2016-09-15 23:25:34		[23:25]
2016-09-15 23:25:38	w3z	{} using VR=variant<int>; vector<VR> V{{0}};
2016-09-15 23:25:38	-->	vicenteH (~user@195.235.96.150) has joined ##c++
2016-09-15 23:25:38	geordi	<no output>
2016-09-15 23:25:43	w3z	geordi: use --clang
2016-09-15 23:25:43	geordi	error: unknown type name 'variant'
2016-09-15 23:26:30	<--	kadoban (~mud@unaffiliated/kadoban) has quit (Quit: bye)
2016-09-15 23:26:35	<--	Gathis (~TheBlack@unaffiliated/gathis) has quit (Remote host closed the connection)
2016-09-15 23:26:42	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-15 23:27:39	<--	skweek (~skweek@68-200-146-225.res.bhn.net) has quit (Ping timeout: 265 seconds)
2016-09-15 23:27:43	-->	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has joined ##c++
2016-09-15 23:28:40	w3z	hmm maybe its a geordi issue actually
2016-09-15 23:28:50	w3z	it errors for variant, any and optional
2016-09-15 23:29:22	w3z	geordi: --clang vector<any> V{{0},{"wee"}};
2016-09-15 23:29:22	geordi	error: use of undeclared identifier 'any'
2016-09-15 23:31:10	-->	nacon (~nacon@p5785494F.dip0.t-ipconnect.de) has joined ##c++
2016-09-15 23:31:10	<--	nacon (~nacon@p5785494F.dip0.t-ipconnect.de) has quit (Changing host)
2016-09-15 23:31:10	-->	nacon (~nacon@unaffiliated/nacon) has joined ##c++
2016-09-15 23:32:12	pragma-	you spout so much geordi bullshit in here that I don't think anybody even pays attention to you any more.
2016-09-15 23:32:18	-->	flavi0 (~anon@unaffiliated/flavi0) has joined ##c++
2016-09-15 23:32:18	<--	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has quit (Ping timeout: 264 seconds)
2016-09-15 23:32:54	<--	gioerr (~gioerr@athedsl-4535808.home.otenet.gr) has quit (Ping timeout: 264 seconds)
2016-09-15 23:33:29	w3z	youre a dummy, its not bullshit, theyre compiler bugs, or in this case a library bug, or geordi bug
2016-09-15 23:33:47	pragma-	It's kind of hard to take note of anything interesting when 90% of it is a flood of uninteresting testing.
2016-09-15 23:33:51	V-ille	w3z: yes?
2016-09-15 23:34:10	<--	bjz (~bjz@14-201-215-168.tpgi.com.au) has quit (Read error: Connection reset by peer)
2016-09-15 23:34:17	pragma-	You should start /msging geordi.
2016-09-15 23:34:51	w3z	V-ille: above, geordi bitches when any or variant are used in a container using clang
2016-09-15 23:35:00	-->	UnlikeSuika (~UnlikeSui@117.123.105.126) has joined ##c++
2016-09-15 23:35:08	V-ille	perhaps because the version geordi uses doesn't implement them?
2016-09-15 23:35:25	w3z	it does implement them
2016-09-15 23:35:26	V-ille	geordi: --clang --version
2016-09-15 23:35:27	geordi	Clang 4.0.0 (trunk 279141)
2016-09-15 23:35:43	w3z	{} variant<int> V{0};
2016-09-15 23:35:44	geordi	<no output>
2016-09-15 23:35:49	w3z	geordi: use --clang
2016-09-15 23:35:49	geordi	error: unknown type name 'variant'
2016-09-15 23:35:50	-->	bjz_ (~bjz@14-201-215-168.tpgi.com.au) has joined ##c++
2016-09-15 23:36:00	w3z	err, wth, they were there the other day
2016-09-15 23:36:06	V-ille	w3z: really? http://melpon.org/wandbox/permlink/tzMfAe3lhLgK02br
2016-09-15 23:36:32	<--	bjz_ (~bjz@14-201-215-168.tpgi.com.au) has quit (Read error: Connection reset by peer)
2016-09-15 23:36:42	-->	Borkr (~Borkr@83.243.155.126) has joined ##c++
2016-09-15 23:36:54	-->	bushido_ (~bushido@unaffiliated/bursihido) has joined ##c++
2016-09-15 23:37:08	-->	bjz (~bjz@14-201-215-168.tpgi.com.au) has joined ##c++
2016-09-15 23:37:17	w3z	argh, now i feel like a dummy, just like pragma-
2016-09-15 23:37:51	-->	blackbird1 (~blackbird@197.1.218.71) has joined ##c++
2016-09-15 23:38:08	EricWF	Libc++ doesn't have optional or variant.
2016-09-15 23:38:10	<--	ibouvousaime (~ibouvousa@41.83.32.179) has quit (Ping timeout: 260 seconds)
2016-09-15 23:38:25	EricWF	If that's what is being discussed here. I only have 5 minutes chat history.
2016-09-15 23:39:07	w3z	i fooled myself switching between gcc and clang, my mistake :(
2016-09-15 23:39:15	EricWF	We have full implementations that are *almost* ready to go. I just need time to finish reviewing them.
2016-09-15 23:39:29	EricWF	Give me 10 days. Then they'll be in trunk.
2016-09-15 23:40:04	<--	dmiles (dmiles@c-24-20-102-245.hsd1.wa.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-15 23:40:21	EricWF	V-ille: The melpon maintain has weirdly patched libc++: http://melpon.org/wandbox/permlink/24XS2VBM3bT7OFSx
2016-09-15 23:40:31	EricWF	We don't have an optional header.
2016-09-15 23:41:20	V-ille	yes, we've noticed that before
2016-09-15 23:41:20		[23:41]
2016-09-15 23:42:04	EricWF	Right. Just pointing out that <variant> might also magically appear.
2016-09-15 23:42:26	V-ille	it doesn't
2016-09-15 23:42:43	V-ille	and it doesn't magically appear from libstdc++, which already has it
2016-09-15 23:42:59	V-ille	so optional seems to appear, but variant doesn't seem to
2016-09-15 23:43:59	<--	oxbb5c (~Thunderbi@78.160.97.225) has quit (Ping timeout: 250 seconds)
2016-09-15 23:44:09	w3z	i confused myself switch to clang using geordi on a snippet that brought up the sanitizer message and forgot to verify they were there at all
2016-09-15 23:44:14	w3z	ing
2016-09-15 23:44:34	<--	psychicist__ (~psychicis@wlan-145-94-175-128.wlan.tudelft.nl) has quit (Ping timeout: 240 seconds)
2016-09-15 23:45:31	-->	EricWF_ (~EricwF@S0106bcd1653002b9.cg.shawcable.net) has joined ##c++
2016-09-15 23:46:08	w3z	if either of you want a gcc bug to file ...
2016-09-15 23:46:09	w3z	{[](auto...){}();}
2016-09-15 23:46:10	geordi	error: no match for call to '(main(int, char**)::<lambda(auto:2, ...)>) ()'
2016-09-15 23:46:21	-->	jshjsh (~jshjsh@172.56.17.55) has joined ##c++
2016-09-15 23:46:30	w3z	no clang bugs, to bother you with today
2016-09-15 23:46:47	<--	Markow (~Markow@176.122.215.103) has quit (Remote host closed the connection)
2016-09-15 23:47:09	<--	rd4455 (~rd45@cpe-108-185-89-248.socal.res.rr.com) has quit (Quit: Leaving)
2016-09-15 23:47:45	<--	EricWF (~EricWF@S0106bcd1653002b9.cg.shawcable.net) has quit (Read error: Connection reset by peer)
2016-09-15 23:47:46	--	EricWF_ is now known as EricWF
2016-09-15 23:47:53	<--	Guest36884 (~root@p57A9BEEE.dip0.t-ipconnect.de) has quit (Quit: WeeChat 1.4)
2016-09-15 23:48:06	w3z	oh, other than the explicit detsructor call of a scalar
2016-09-15 23:49:06	w3z	geordi: --clang {using I=int; int a; a.~I();}
2016-09-15 23:49:07	geordi	<no output>
2016-09-15 23:49:14	w3z	geordi: --clang {using I=int; int a; a.~int();}
2016-09-15 23:49:15	geordi	error: expected a class name after '~' to name a destructor
2016-09-15 23:49:15	<--	JoshS (~jshjsh@172.56.17.55) has quit (Ping timeout: 260 seconds)
2016-09-15 23:49:20	<--	EricWF (~EricwF@S0106bcd1653002b9.cg.shawcable.net) has quit (Disconnected by services)
2016-09-15 23:49:23	<--	zero_byte (~zer0@ip-89-103-110-138.net.upcbroadband.cz) has quit (Ping timeout: 272 seconds)
2016-09-15 23:49:27	-->	Guest44053 (~eric@S0106bcd1653002b9.cg.shawcable.net) has joined ##c++
2016-09-15 23:49:40	<--	Guest44053 (~eric@S0106bcd1653002b9.cg.shawcable.net) has left ##c++
2016-09-15 23:49:41	-->	dmiles (dmiles@c-24-20-102-245.hsd1.wa.comcast.net) has joined ##c++
2016-09-15 23:49:54	-->	EricWF (~eric@S0106bcd1653002b9.cg.shawcable.net) has joined ##c++
2016-09-15 23:50:16	-->	elsevero (~elsevero@79.119.56.193) has joined ##c++
2016-09-15 23:50:45	V-ille	w3z: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=77616
2016-09-15 23:50:53	-->	seishun (~Kakera@62.85.7.128) has joined ##c++
2016-09-15 23:51:58	w3z	thank you, i should register myself, but eh, ill do it next time :)
2016-09-15 23:52:58	EricWF	V-ille: What's the difference in linkage between a function template definition and an inline function.
2016-09-15 23:53:05	EricWF	s/./?
2016-09-15 23:53:08	V-ille	I don't know squat about linkage
2016-09-15 23:53:31	pragma-	Nonsense. If the bug turns out to actually be something stupid, V-ille will look like the idiot instead of you. This is clearly the right approach.
2016-09-15 23:54:23	V-ille	I have no problems looking like an idiot when I report bugs.
2016-09-15 23:55:08	V-ille	I'd rather look like an idiot and report bugs than not report bugs out of some irrational fear of looking like an idiot.
2016-09-15 23:55:40	<--	oftc_ftw (~oftc_ftw@unaffiliated/oftc-ftw/x-3443471) has quit (Remote host closed the connection)
2016-09-15 23:56:01	EricWF	Both can have definitions in multiple TU's, so I'm wondering what the effect of adding inline to a template.
2016-09-15 23:56:02	pragma-	Unless you look like an idiot more often than not and people just say "Oh, it's V-ille again.  /dev/null it."
2016-09-15 23:56:16	w3z	also, theres conflicting behavior between compilers and/or std evidence for the snippets, its not nonsense...
2016-09-15 23:56:21	EricWF	Other that maybe a *slight* optimization hint.
2016-09-15 23:56:21		[23:56]
2016-09-15 23:56:27	EricWF	s/that/than
2016-09-15 23:57:07	-->	plusone (~plusone@176.24.26.166) has joined ##c++
2016-09-15 23:58:06	V-ille	pragma-: there's no reason to expect that, as all my bug reports thus far have been valid
2016-09-15 23:58:19	w3z	the ~int() one, both compilers error on, unless going through an alias, the standard claims the type name can be used directly but only gives the alias case as an example
2016-09-15 23:58:46	pragma-	V-ille: No, not for you. But for someone else.
2016-09-15 23:58:50	 *	pragma- points at them.
2016-09-15 23:59:28	-->	aindros (~jacknife@93-57-35-194.ip162.fastwebnet.it) has joined ##c++
2016-09-15 23:59:46	-->	Immune_ (~Immune@173.55.30.110) has joined ##c++
2016-09-15 23:59:53	<--	iterati (~vangelis@79.103.173.87.dsl.dyn.forthnet.gr) has quit (Ping timeout: 250 seconds)
2016-09-16 00:00:42	-->	King_Hual (~failed@unaffiliated/king-hual/x-1207580) has joined ##c++
2016-09-16 00:00:59	<--	elnormou_ (~elnormous@gateway.evolutiongaming.com) has quit (Remote host closed the connection)
2016-09-16 00:01:03	-->	iterati (~vangelis@79.103.220.226.dsl.dyn.forthnet.gr) has joined ##c++
2016-09-16 00:01:13	<--	iterati (~vangelis@79.103.220.226.dsl.dyn.forthnet.gr) has quit (Max SendQ exceeded)
2016-09-16 00:01:30	<--	Immune (~Immune@173.55.30.110) has quit (Ping timeout: 260 seconds)
2016-09-16 00:02:23	-->	elnormous (~elnormous@gateway.evolutiongaming.com) has joined ##c++
2016-09-16 00:03:17	w3z	heres another one from this morning pragma can pretend is legal
2016-09-16 00:03:21	w3z	{} int&r=r; //bad gcc
2016-09-16 00:03:22	geordi	<no output>
2016-09-16 00:07:07	<--	elnormous (~elnormous@gateway.evolutiongaming.com) has quit (Ping timeout: 272 seconds)
2016-09-16 00:07:42	<--	Akimb (~Akimb@88-119-138-154.static.zebra.lt) has quit (Ping timeout: 276 seconds)
2016-09-16 00:07:47	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-16 00:08:06	<--	Borkr (~Borkr@83.243.155.126) has quit (Remote host closed the connection)
2016-09-16 00:09:18	flux	w3z, r=42; segfaults :(
2016-09-16 00:09:56	-->	ZexZee (~ZexZee@77-110-193-116.inet.signal.no) has joined ##c++
2016-09-16 00:10:06	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-16 00:10:46	w3z	you seem surprised :)
2016-09-16 00:10:51	-->	ibouvousaime (~ibouvousa@41.83.32.179) has joined ##c++
2016-09-16 00:11:20	izalove	hey
2016-09-16 00:11:29	flux	well I'm not, but I would have preferred to have been surprised ;)
2016-09-16 00:11:29		[00:11]
2016-09-16 00:11:34	SlashLife	w3z: What would that even ... :O
2016-09-16 00:11:38	izalove	if i have a function that takes two std::strings
2016-09-16 00:11:43	izalove	and returns one
2016-09-16 00:11:49	izalove	what am i passing?
2016-09-16 00:11:52	izalove	pointers?
2016-09-16 00:11:58	 *	pragma- stares at izalove.
2016-09-16 00:12:04	izalove	stare elsewhere
2016-09-16 00:12:04	Adrinael	Is this a riddle
2016-09-16 00:12:06	izalove	no
2016-09-16 00:12:07	SlashLife	I think I may not want to know. I'd assume this would be the way to get an uninitialized reference, by initializing the reference to its own uninitialized "value".
2016-09-16 00:12:09	izalove	it's a noob question
2016-09-16 00:12:23	Adrinael	Pass by value
2016-09-16 00:12:28	izalove	ok
2016-09-16 00:13:04	izalove	std::string merge(std::string a, std::string b) { return a + b; }
2016-09-16 00:13:10	izalove	merge(merge("foo", "bar"), merge("baz", "bat"))         <- how does this not leak?
2016-09-16 00:13:35	SlashLife	izalove: Hello! You may want to join us over at ##c++-basic :)
2016-09-16 00:13:43	izalove	what is this channel for?
2016-09-16 00:14:07	ZexZee	Magic
2016-09-16 00:14:18	Eelis	it's for people who read enough in their textbook that we don't have to spoonfeed them
2016-09-16 00:14:48	izalove	i don't have a c++ textbook
2016-09-16 00:14:59	Eelis	then it seems we have diagnosed the problem
2016-09-16 00:15:12	Adrinael	!guess
2016-09-16 00:15:27	Adrinael	!headache
2016-09-16 00:15:28	nolyc	The specialization codecvt<char16_t, char, mbstate_t> converts between the UTF-16 and UTF-8 encoding forms, and the specialization codecvt <char32_t, char, mbstate_t> converts between the UTF-32 and UTF-8 encoding forms.
2016-09-16 00:16:09	<--	kw01f (~kw01f@merlin.mvtec.com) has quit (Remote host closed the connection)
2016-09-16 00:16:40	Eelis	hm, that space there is a bug in the standard it seems. i'll send a fix
2016-09-16 00:16:41	-->	kw01f (~kw01f@merlin.mvtec.com) has joined ##c++
2016-09-16 00:16:51	Eelis	("codecvt <char32_t,")
2016-09-16 00:17:18	Eelis	we need consistently formatted headaches
2016-09-16 00:18:06	Adrinael	Damn right.
2016-09-16 00:19:07	<--	sh4z (lml@unaffiliated/sh4z) has quit (Remote host closed the connection)
2016-09-16 00:19:07	<--	c0le (~c0le@59.99.251.45) has quit (Read error: Connection reset by peer)
2016-09-16 00:19:49	-->	Furkiepurkie (~Furkie@2001:1af8:4700:a03c:7::) has joined ##c++
2016-09-16 00:20:57	<--	kw01f (~kw01f@merlin.mvtec.com) has quit (Ping timeout: 244 seconds)
2016-09-16 00:21:41	w3z	SlashLife: its nonsense that gcc allows, its not intended to be meaningful, it was a result of an incomplete variable name change that made me notice it
2016-09-16 00:23:25	-->	c0le (~c0le@59.99.251.45) has joined ##c++
2016-09-16 00:24:09	-->	vitimiti (~vitimiti@unaffiliated/vitimiti) has joined ##c++
2016-09-16 00:24:30	-->	Akimb (~Akimb@88-119-138-154.static.zebra.lt) has joined ##c++
2016-09-16 00:25:04	-->	DoITCreative (~amethyst@151.21.203.175) has joined ##c++
2016-09-16 00:26:50	SlashLife	w3z: Yeah, I was just trying to grasp it semantically. And it just doesn't make sense, because an int& is supposed to point to an int, not another int&, but there is no int in the whole picture. So not only is it nonsensical, it is semantically impossible.
2016-09-16 00:26:50		[00:26]
2016-09-16 00:27:07	SlashLife	So I decided to rather look at it from the technical POV of the implementation. :)
2016-09-16 00:27:31	<--	robogoat (~robogoat@69.61.8.90) has quit (Ping timeout: 244 seconds)
2016-09-16 00:27:31	<--	MalRD (~MalRD@50-87-176-177.unifiedlayer.com) has quit (Ping timeout: 244 seconds)
2016-09-16 00:27:54	<--	Miroboru (~myrvoll@88.95.165.75) has quit (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
2016-09-16 00:30:36	SlashLife	"Here! HERE!! I'm a reference! Let me point to an int. I wanna point to an int!!" - "There is no int." - "What do you mean there is no int?" - "There doesn't exist any int to point at." - "Ohhh. That' ba... wait, what is this?" *sees mirror* "That's another reference to an int! I'll just point to the same int he is!" - "THERE. IS. NO. INT!" - "But that's a reference. And it's pointing to an int.
2016-09-16 00:30:45	SlashLife	And now I point to the same int. So shut up!"
2016-09-16 00:30:58	-->	gagbo (~gagbo@unaffiliated/gagbo) has joined ##c++
2016-09-16 00:31:16	-->	MalRD (~MalRD@50-87-176-177.unifiedlayer.com) has joined ##c++
2016-09-16 00:32:17	-->	deekej (deekej@nat/redhat/x-fizmanqhyhlgdrao) has joined ##c++
2016-09-16 00:33:47	-->	pickyaxe (~pickyaxe@50.132.139.77.rev.sfr.net) has joined ##c++
2016-09-16 00:36:25	<--	EricWF (~eric@S0106bcd1653002b9.cg.shawcable.net) has quit (Ping timeout: 248 seconds)
2016-09-16 00:36:53	<--	Palsson (~Palsson@pc-193-235-91-227.norrkoping.se) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-09-16 00:36:54	<--	Gluesticky (~nobody@unaffiliated/gluesticky) has quit (Quit: This is the end. Goodbye cruel world!)
2016-09-16 00:38:15	pickyaxe	hello. when mixing C++11's in-class initialization with constructor initialization lists, is it guaranteed that class members will be initialized in order of declaration?
2016-09-16 00:38:18	-->	bergesenha (~harald@21.90-149-192.nextgentel.com) has joined ##c++
2016-09-16 00:38:51	pickyaxe	(as if all of the initialization was done in the initialization list)
2016-09-16 00:39:07	bergesenha	clear
2016-09-16 00:39:44	Eelis	pickyaxe: yes, there is no way to deviate from that order
2016-09-16 00:40:23	-->	irrenhaus4 (~xenon@HSI-KBW-046-005-253-022.hsi8.kabel-badenwuerttemberg.de) has joined ##c++
2016-09-16 00:40:25	<--	Anticom (~quassel@217.6.33.234) has quit (Read error: Connection reset by peer)
2016-09-16 00:40:30	pickyaxe	thanks, that's great
2016-09-16 00:40:52	<--	irrenhaus3 (~xenon@HSI-KBW-046-005-253-022.hsi8.kabel-badenwuerttemberg.de) has quit (Read error: Connection reset by peer)
2016-09-16 00:41:20	-->	glad (~quassel@dynamic-vpdn-93-125-62-88.telecom.by) has joined ##c++
2016-09-16 00:42:33	<--	Vinnie_win (~TheVinn@pdpc/supporter/gold/thevinn) has quit (Read error: Connection reset by peer)
2016-09-16 00:42:33		[00:42]
2016-09-16 00:43:14	-->	elnormous (~elnormous@gateway.evolutiongaming.com) has joined ##c++
2016-09-16 00:43:22	<--	Xanather (~xanather@unaffiliated/xanather) has quit (Quit: Leaving)
2016-09-16 00:45:23	<--	daniel-s (~daniel-s@bla31-1-82-241-231-138.fbx.proxad.net) has quit (Ping timeout: 248 seconds)
2016-09-16 00:45:31	<--	kaffeetrauma (~Thunderbi@2a03:2260:300a:1000:7dbf:c9d4:2e92:7b5a) has quit (Quit: kaffeetrauma)
2016-09-16 00:46:23	<--	Gentle (~tier@quassel/contributors/gentle) has quit (Ping timeout: 250 seconds)
2016-09-16 00:46:23	-->	ahnost (494df763@gateway/web/freenode/ip.73.77.247.99) has joined ##c++
2016-09-16 00:46:30	ahnost	hello?
2016-09-16 00:46:55	Adrinael	!emh
2016-09-16 00:46:56	nolyc	Please state the nature of the C++ emergency.
2016-09-16 00:47:38	ahnost	whats a good way to learn C++
2016-09-16 00:47:55	Eelis	!book
2016-09-16 00:47:55	urdh	!give ahnost book
2016-09-16 00:47:56	nolyc	A nice C++ book guide and list can be found at http://stackoverflow.com/q/388242/1090079
2016-09-16 00:47:57	nolyc	ahnost: A nice C++ book guide and list can be found at http://stackoverflow.com/q/388242/1090079
2016-09-16 00:48:09	urdh	also,
2016-09-16 00:48:11	urdh	!basic
2016-09-16 00:48:13	nolyc	Please ask your question in ##C++-basic, as it involves the fundamental basics of the language.
2016-09-16 00:48:22	urdh	in case of questions
2016-09-16 00:48:26	Eelis	nonsense
2016-09-16 00:48:42	urdh	well, depends on what the question is
2016-09-16 00:48:43	ahnost	thanks
2016-09-16 00:48:44	Eelis	if he starts reading a book and has questions about the stuff he reads, this channel is just fine
2016-09-16 00:48:59	-->	EricWF (~EricWF@S0106bcd1653002b9.cg.shawcable.net) has joined ##c++
2016-09-16 00:49:46	ahnost	what about ide's?
2016-09-16 00:50:05	-->	Enhex (~Enhex@82.252.138.77.rev.sfr.net) has joined ##c++
2016-09-16 00:50:13	Eelis	some people like em, some not. make up your own mind
2016-09-16 00:50:21	<--	Betal (~Betal@unaffiliated/betal) has quit (Remote host closed the connection)
2016-09-16 00:50:28	<--	seishun (~Kakera@62.85.7.128) has quit (Disconnected by services)
2016-09-16 00:50:35	-->	seishun (~Kakera@81.198.217.17) has joined ##c++
2016-09-16 00:50:40	cbreak	avoid visual studio, it's bad at C++
2016-09-16 00:50:42	-->	Gentle (~tier@quassel/contributors/gentle) has joined ##c++
2016-09-16 00:50:58	cbreak	(Of course, the compiler is to blame for this mostly)
2016-09-16 00:51:08	-->	Zex (~ZexZee@77-110-193-116.inet.signal.no) has joined ##c++
2016-09-16 00:51:13	n0body	cbreak: visual studio 2008 should be fine and is still available
2016-09-16 00:51:24	<--	casscode (~quassel@169-0-91-62.ip.afrihost.co.za) has quit (Remote host closed the connection)
2016-09-16 00:51:38	Eelis	n0body: don't recommend 8-year old compilers here please, thanks
2016-09-16 00:51:41	cbreak	n0body: nope, it's even worse than the current ones
2016-09-16 00:52:19	-->	kw01f (~kw01f@merlin.mvtec.com) has joined ##c++
2016-09-16 00:52:28	<--	ZexZee (~ZexZee@77-110-193-116.inet.signal.no) has quit (Ping timeout: 244 seconds)
2016-09-16 00:52:44	-->	swnc (~swnc@port-92-204-104-62.dynamic.qsc.de) has joined ##c++
2016-09-16 00:52:57	-->	casscode (~quassel@169-0-91-62.ip.afrihost.co.za) has joined ##c++
2016-09-16 00:53:15	<--	DoITCreative (~amethyst@151.21.203.175) has quit (Quit: leaving)
2016-09-16 00:53:28	<--	blaxter (~blaxter@37.228.195.64) has quit (Quit: foo)
2016-09-16 00:53:29	<--	lorenzo64 (~lorenzo__@5.144.190.80) has quit (Ping timeout: 248 seconds)
2016-09-16 00:54:12	<--	ahnost (494df763@gateway/web/freenode/ip.73.77.247.99) has quit (Ping timeout: 240 seconds)
2016-09-16 00:54:37	<--	Zex (~ZexZee@77-110-193-116.inet.signal.no) has quit (Client Quit)
2016-09-16 00:55:27	-->	psychicist__ (~psychicis@wlan-145-94-143-186.wlan.tudelft.nl) has joined ##c++
2016-09-16 00:55:33	<--	Paradisee (~quassel@93.55.93.68) has quit (Remote host closed the connection)
2016-09-16 00:56:02	n0body	Eelis: cbreak I assume you are talking based on experience...
2016-09-16 00:56:17	n0body	*ironic*
2016-09-16 00:56:34	cbreak	of course I am.
2016-09-16 00:57:07	n0body	bad experience doesn't count
2016-09-16 00:57:34	Eelis	you're not making enough sense for me to determine if you're trying to make a point
2016-09-16 00:57:34		[00:57]
2016-09-16 00:58:57	<--	V-ille (~ville@81-175-149-170.bb.dnainternet.fi) has quit (Ping timeout: 250 seconds)
2016-09-16 00:59:31	-->	Gluesticky (~IceChat9@unaffiliated/gluesticky) has joined ##c++
2016-09-16 01:01:01	<--	Carbonflux (~Bob@75-172-112-206.tukw.qwest.net) has quit (Quit: Leaving)
2016-09-16 01:01:03	<--	iceiceice (~chris@pool-71-172-187-9.nwrknj.east.verizon.net) has quit (Ping timeout: 240 seconds)
2016-09-16 01:02:33	<--	aindros (~jacknife@93-57-35-194.ip162.fastwebnet.it) has quit (Read error: No route to host)
2016-09-16 01:03:28	-->	Anticom_ (~quassel@217.6.33.234) has joined ##c++
2016-09-16 01:04:38	-->	TomTheDragon (~tom@cpe-24-167-144-157.triad.res.rr.com) has joined ##c++
2016-09-16 01:04:57	-->	Xanather (~xanather@unaffiliated/xanather) has joined ##c++
2016-09-16 01:05:00	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-16 01:05:02	w3z	looks like an oblique attack suggestng hes twiddled more widgets than you, or a suggestion that youre full of iron
2016-09-16 01:05:28	Adrinael	!grab w3z
2016-09-16 01:05:28	nolyc	By your command.
2016-09-16 01:05:29	<--	bjz (~bjz@14-201-215-168.tpgi.com.au) has quit (Ping timeout: 240 seconds)
2016-09-16 01:05:42	-->	bjz_ (~bjz@104.222.140.110) has joined ##c++
2016-09-16 01:07:31	<--	Lomex (~lomex@213.61.34.42) has quit (Remote host closed the connection)
2016-09-16 01:07:40	<--	SunnyD (~SunnyD@cpe-72-178-78-211.hot.res.rr.com) has quit (Quit: ChatZilla 0.9.90.1 [Firefox 30.0/20140605174243])
2016-09-16 01:07:58	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-16 01:08:18	<--	blackbird1 (~blackbird@197.1.218.71) has quit (Quit: Leaving)
2016-09-16 01:10:01	-->	zipace (~anon@unaffiliated/zipace) has joined ##c++
2016-09-16 01:10:51	<--	Anodl (~Anodl@p2003007A2F39A20071365DB1478509EF.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2016-09-16 01:11:05	-->	Anodl (~Anodl@p2003007A2F39A20071365DB1478509EF.dip0.t-ipconnect.de) has joined ##c++
2016-09-16 01:12:10	-->	lorenzo64 (~lorenzo__@5.144.190.80) has joined ##c++
2016-09-16 01:12:10	<--	lorenzo64 (~lorenzo__@5.144.190.80) has quit (Client Quit)
2016-09-16 01:12:29	-->	rimdeker (~rimdeker@unaffiliated/rimdeker) has joined ##c++
2016-09-16 01:13:37	<--	MK (~MK@2602:252:d6e:a9b0:b9d2:83ad:8b74:6569) has quit (Ping timeout: 272 seconds)
2016-09-16 01:13:37		[01:13]
2016-09-16 01:13:42	-->	Anodl1 (~Anodl@p2003007A2F39A200F9A70E401F8C6ABF.dip0.t-ipconnect.de) has joined ##c++
2016-09-16 01:13:47	<--	voidah (~voidah@unaffiliated/voider) has quit (Remote host closed the connection)
2016-09-16 01:14:48	-->	CuriousErnestBro (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has joined ##c++
2016-09-16 01:15:25	<--	Anodl (~Anodl@p2003007A2F39A20071365DB1478509EF.dip0.t-ipconnect.de) has quit (Ping timeout: 250 seconds)
2016-09-16 01:16:12	-->	di0_ (~di0_@unaffiliated/di0-/x-5053590) has joined ##c++
2016-09-16 01:16:48	<--	StyxAlso (~markg@235.129.220.203.dial.dynamic.acc01-oliv-alb.comindico.com.au) has quit (Quit: StyxAlso)
2016-09-16 01:16:58	-->	iterati (~vangelis@79.103.112.83.dsl.dyn.forthnet.gr) has joined ##c++
2016-09-16 01:18:31	<--	spindle (~spindle@27-33-39-55.static.tpgi.com.au) has quit (Remote host closed the connection)
2016-09-16 01:19:55	-->	Lomex (~lomex@213.61.34.42) has joined ##c++
2016-09-16 01:19:56	-->	daniel-s (~daniel-s@bla31-1-82-241-231-138.fbx.proxad.net) has joined ##c++
2016-09-16 01:21:05	<--	nilg (~user@77.70.2.229) has quit (Remote host closed the connection)
2016-09-16 01:21:22	-->	MrP[Home] (~Palsson@c-a46fe555.06-213-6e6b701.cust.bredbandsbolaget.se) has joined ##c++
2016-09-16 01:21:24	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-16 01:22:33	-->	hgboron37 (~hgboron37@71.89.138.162) has joined ##c++
2016-09-16 01:22:39	-->	DingoSaar (~hagen@pD9E09435.dip0.t-ipconnect.de) has joined ##c++
2016-09-16 01:25:06	<--	Lomex (~lomex@213.61.34.42) has quit (Ping timeout: 265 seconds)
2016-09-16 01:25:22	-->	nilg (~user@77.70.2.229) has joined ##c++
2016-09-16 01:25:28	-->	Vingador (~quassel@191.248.248.39) has joined ##c++
2016-09-16 01:26:59	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-16 01:27:00	-->	MK (~MK@2602:252:d6e:a9b0:300f:389e:be31:c02f) has joined ##c++
2016-09-16 01:27:28	-->	fahadash (uid44972@gateway/web/irccloud.com/x-dscjtmuuxvbgrhns) has joined ##c++
2016-09-16 01:27:34	<--	bx2 (~bx2@46.140.123.246) has quit (Remote host closed the connection)
2016-09-16 01:28:07	<--	Xanather (~xanather@unaffiliated/xanather) has quit (Quit: Leaving)
2016-09-16 01:28:44	-->	metachr0n (~nobody@78.1.broadband13.iol.cz) has joined ##c++
2016-09-16 01:28:44		[01:28]
2016-09-16 01:29:03	-->	chardan (~chardan@c-73-157-202-190.hsd1.or.comcast.net) has joined ##c++
2016-09-16 01:34:10	-->	nilg` (~user@77.70.2.229) has joined ##c++
2016-09-16 01:34:11	-->	seg_violation (w718ELFbq5@2a00:d0c0:200:0:b9:1a:9c36:340) has joined ##c++
2016-09-16 01:34:19	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-16 01:34:31	-->	xCrypto (~xCrypto@drmons0544w-142177154202.dhcp-dynamic.FibreOp.ns.bellaliant.net) has joined ##c++
2016-09-16 01:34:51	-->	unK_ (~drunK@dynamic-78-8-102-22.ssp.dialog.net.pl) has joined ##c++
2016-09-16 01:35:10	-->	k299 (~chatzilla@219.85.156.204) has joined ##c++
2016-09-16 01:35:24	<--	LightYagami_ (~CanIHazMe@122-57-236-244.jetstream.xtra.co.nz) has quit (Changing host)
2016-09-16 01:35:24	-->	LightYagami_ (~CanIHazMe@unaffiliated/canihazmemecats) has joined ##c++
2016-09-16 01:35:35	--	LightYagami_ is now known as TombRaider
2016-09-16 01:36:33	--	TombRaider is now known as WombRaider
2016-09-16 01:36:40	--	WombRaider is now known as IAmKira
2016-09-16 01:36:59	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-16 01:37:43	<--	kauder (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has quit (Quit: Backen ist Liebe, Braten ist Leidenschaft, Dampfgaren ist Gleichgültigkeit, Dünsten ist Haß.)
2016-09-16 01:38:14	<--	GinoMan (~GinoMan@2601:41:c101:487a:bdf2:4df2:b7cc:5ddb) has quit (Ping timeout: 265 seconds)
2016-09-16 01:41:55	<--	Galik (~galik@unaffiliated/galik) has quit (Ping timeout: 248 seconds)
2016-09-16 01:42:27	-->	SpaceDanceCJ (~Sasha@37.45.163.65) has joined ##c++
2016-09-16 01:43:05	<--	Jesin (~Jesin@cpe-static-comfortsuitesbeth-rtr.cmts.sm.ptd.net) has quit (Ping timeout: 240 seconds)
2016-09-16 01:43:06	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-16 01:43:21	<--	pickyaxe (~pickyaxe@50.132.139.77.rev.sfr.net) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2016-09-16 01:44:14	-->	pylbrecht (~pylbrecht@2a02:8109:8a00:c34:a298:2f87:9d79:bdd6) has joined ##c++
2016-09-16 01:44:14		[01:44]
2016-09-16 01:44:39	<--	psychicist__ (~psychicis@wlan-145-94-143-186.wlan.tudelft.nl) has quit (Ping timeout: 244 seconds)
2016-09-16 01:46:06	-->	f10 (~flo@2001:470:52af:1:79ca:e294:48d0:1603) has joined ##c++
2016-09-16 01:46:15	-->	f10_ (~flo@2001:470:52af:1:5d2e:56eb:4f99:38e8) has joined ##c++
2016-09-16 01:46:32	-->	V-ille (~ville@59ec7803.symbio.com) has joined ##c++
2016-09-16 01:47:02	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-16 01:47:25	-->	Lomex (~lomex@213.61.34.42) has joined ##c++
2016-09-16 01:47:50	-->	Borkr (~Borkr@83.243.155.126) has joined ##c++
2016-09-16 01:49:02	-->	psychicist__ (~psychicis@wlan-145-94-143-186.wlan.tudelft.nl) has joined ##c++
2016-09-16 01:49:07	<--	budre (~brnme@118-92-1-30.dsl.dyn.ihug.co.nz) has quit (Quit: Leaving)
2016-09-16 01:49:26	-->	neurodrone (~neurodron@unaffiliated/neurodrone) has joined ##c++
2016-09-16 01:50:36	<--	seishun (~Kakera@81.198.217.17) has quit (Disconnected by services)
2016-09-16 01:50:42	-->	seishun (~Kakera@62.85.7.128) has joined ##c++
2016-09-16 01:52:07	<--	Sceorem (~Sceorem@xbn44-3-82-232-76-9.fbx.proxad.net) has quit (Ping timeout: 250 seconds)
2016-09-16 01:52:43	-->	Sceorem (~Sceorem@xbn44-3-82-232-76-9.fbx.proxad.net) has joined ##c++
2016-09-16 01:54:04	-->	symm- (~symm-@86.127.152.32) has joined ##c++
2016-09-16 01:54:51	<--	plusone (~plusone@176.24.26.166) has quit (Ping timeout: 250 seconds)
2016-09-16 01:55:25	<--	CuriousErnestBro (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has quit (Remote host closed the connection)
2016-09-16 01:55:30	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-16 01:57:06	ibouvousaime	what is the difference between return(result) and return result ?
2016-09-16 01:57:11	-->	Betal (~Betal@unaffiliated/betal) has joined ##c++
2016-09-16 01:57:26	-->	elh9 (~elh9___@203.161.96.76.static.amnet.net.au) has joined ##c++
2016-09-16 01:58:20	dv-	none
2016-09-16 01:59:16	-->	CuriousErnestBro (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has joined ##c++
2016-09-16 01:59:16		[01:59]
2016-09-16 01:59:38	ibouvousaime	ohh okay dv-
2016-09-16 01:59:48	<--	paule32 (~jens@2a00:c1a0:8503:ae00:224:81ff:fe12:72e5) has quit (Read error: Connection reset by peer)
2016-09-16 02:00:11	EricWF	I think there is a pedantic difference but I know of no practical one.
2016-09-16 02:00:41	TinoDidriksen	Pretty sure there isn't even a pedantic one.
2016-09-16 02:01:26	EricWF	'(result)' is a parenthesized expression. 'result' is an id expression.
2016-09-16 02:01:41	EricWF	At least I think those are the technical terms.
2016-09-16 02:01:58	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-16 02:02:04	<--	elh9 (~elh9___@203.161.96.76.static.amnet.net.au) has quit (Ping timeout: 244 seconds)
2016-09-16 02:02:15	-->	LBV_User (~leonardo@177.132.222.215) has joined ##c++
2016-09-16 02:02:30	-->	magnicida1 (~raskolnik@ip5b4135a6.dynamic.kabel-deutschland.de) has joined ##c++
2016-09-16 02:03:06	TinoDidriksen	Sure, but can you even construct a case where it would make a semantic or mechanic difference?
2016-09-16 02:03:24	V-ille	not for return
2016-09-16 02:03:37	V-ille	but for decltype, yes
2016-09-16 02:03:40	EricWF	V-ille++ 2x
2016-09-16 02:03:55	TinoDidriksen	I know of decltype's difference, but return was the subject here.
2016-09-16 02:04:17	V-ille	well, we can put a decltype into the return :)
2016-09-16 02:04:36	-->	regedit (uid150526@gateway/web/irccloud.com/x-ctpewksixwmjuqvl) has joined ##c++
2016-09-16 02:05:02	<--	araml (~araml@unaffiliated/araml) has quit (Quit: WeeChat 1.0.1)
2016-09-16 02:05:16	<--	magnicida (~raskolnik@ip5b4135a6.dynamic.kabel-deutschland.de) has quit (Ping timeout: 255 seconds)
2016-09-16 02:07:30	-->	Guest13 (~textual@ppp-171-96-181-45.revip8.asianet.co.th) has joined ##c++
2016-09-16 02:07:40	 *	EricWF said the difference was pedantic.
2016-09-16 02:08:48	<--	swatti (~memory@194.88.49.178) has quit (Remote host closed the connection)
2016-09-16 02:09:03	<--	xarxer (~xarxer@194.218.229.29) has quit (Quit: Leaving)
2016-09-16 02:09:23	-->	bx2 (~bx2@46.140.123.246) has joined ##c++
2016-09-16 02:10:17	kline	this might be a question better asked elsewhere, but im looking at learning to profile better, and im wondering if 1) im interpreting the following results correctly and 2) how i can increase performance. running a simple monte carlo pi approximation is SLOW (10m slow for 1e9 samples). the code is at http://paste.debian.net/825333/ and the call graph with timings is at https://pulham.info/static/img/no_flags.png
2016-09-16 02:10:28	-->	mad_enz (~mad_enz@CPE00508b114c3e-CM00fc8d50aef0.cpe.net.fido.ca) has joined ##c++
2016-09-16 02:10:56	kline	i basically think the rng is basically dog slow, and im wondering what better one from http://www.cplusplus.com/reference/random/ to use rather than the default
2016-09-16 02:11:16	-->	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has joined ##c++
2016-09-16 02:11:36	urdh	kline, one immediate optimization there is to omit the call to sqrt()
2016-09-16 02:11:48	<--	k299 (~chatzilla@219.85.156.204) has quit (Quit: ChatZilla 0.9.92 [Firefox 48.0/20160728204513])
2016-09-16 02:11:50	kline	urdh, sure, i can remove it outright, there are a bunch of little things
2016-09-16 02:12:06	-->	Galik (~galik@unaffiliated/galik) has joined ##c++
2016-09-16 02:12:09	kline	but it looks like about 7.5m cpu time is spent in the rng
2016-09-16 02:12:23	-->	saolof (~saolof@92-32-80-134.tn.glocalnet.net) has joined ##c++
2016-09-16 02:12:43	<--	Anticom_ (~quassel@217.6.33.234) has quit (Remote host closed the connection)
2016-09-16 02:12:45	kline	squaring both sides of 1 <= sqrt(x^2 + y^2) seems a bit minor, hence the profiling :)
2016-09-16 02:12:51	urdh	sure
2016-09-16 02:14:31	urdh	you could try using mt19937 instead of the default random engine if you think it'll help
2016-09-16 02:14:31		[02:14]
2016-09-16 02:14:44	-->	fender0107401 (~fender010@115.171.119.148) has joined ##c++
2016-09-16 02:14:52	urdh	Google tells me that should be the quickest one: https://github.com/s9w/articles/blob/master/perf%20cpp%20random.md
2016-09-16 02:15:31	Oxyd	geordi: tracked::B foo() { tracked::B b; return b; } int main() { tracked::B b; b = foo(); }
2016-09-16 02:15:32	<--	ezzieyguywuf (~wolfie@unaffiliated/ezzieyguywuf) has quit (Read error: Connection reset by peer)
2016-09-16 02:15:32	geordi	B0* B1* B1=>B0 B1~ B0~
2016-09-16 02:15:36	Oxyd	geordi: tracked::B foo() { tracked::B b; return (b); } int main() { tracked::B b; b = foo(); }
2016-09-16 02:15:37	geordi	B0* B1* B1=>B2* B1~ B2=>B0 B2~ B0~
2016-09-16 02:15:40	Oxyd	Interesting.
2016-09-16 02:15:51	-->	ezzieyguywuf (~wolfie@unaffiliated/ezzieyguywuf) has joined ##c++
2016-09-16 02:16:26	urdh	kline, and if you're feeling less scientific you could replace uniform_int_distribution with a simple modulo, but that's very hacky
2016-09-16 02:16:31	ville	and then look what a compiler that isn't told to elide ctors does
2016-09-16 02:16:42	ville	err is told
2016-09-16 02:16:56	Oxyd	Well, geordi should be told to elide ctors.
2016-09-16 02:17:08	ville	it is specifically told not to
2016-09-16 02:17:16	Oxyd	geordi: tracked::B foo() { tracked::B b; return b; } int main() { tracked::B b = foo(); } // It happily elides here.
2016-09-16 02:17:17	geordi	B0* B0~
2016-09-16 02:17:31	kline	urdh, it just needs to be a uniform distribution, it doesnt need to be crypto-grade random, so i might just do that
2016-09-16 02:17:57	cbreak	why bother?
2016-09-16 02:18:02	cbreak	uniform int distribution is better.
2016-09-16 02:18:15	kline	its just sad to see 10m run time compared to fractions of a second with rust ( http://sprunge.us/gQFK )
2016-09-16 02:18:53	cbreak	kline: and you think the problem is uniform_int_distribution?
2016-09-16 02:18:54	urdh	kline, you'll get a skew anyway so you should figure out if that makes your simulation less accurate
2016-09-16 02:18:59	kline	cbreak, no
2016-09-16 02:19:41	kline	cbreak, https://pulham.info/static/img/no_flags.png suggests about 75% of the runtime is in the generator, with about 25% in the distribution, and a tiny fraction in business logic
2016-09-16 02:20:09	cbreak	kline: compiling optimized?
2016-09-16 02:20:12	kline	(with gcc -O3 it goes from ~10m to ~18s, but thats still way way to slow and it means i cant profile)
2016-09-16 02:20:39	Oxyd	Uh… Are you seriously talking about performance of an unoptimised build?
2016-09-16 02:20:55	ville	Oxyd: the new wording guarantees elision now?
2016-09-16 02:20:56	kline	Oxyd, im mainly interested in profiling
2016-09-16 02:21:08	kline	Oxyd, rather than absolute performance
2016-09-16 02:21:19	Eelis	o_O
2016-09-16 02:21:30	kline	but im curious why this does run so slow
2016-09-16 02:21:45	flux	there are tools other than gprof for profiling. perf is pretty nice. valgrind might tell you about cache locality issues.
2016-09-16 02:21:51	kline	even with -O3 its taking far longer than it intuitively should - similar rust code runs in fractions of the time
2016-09-16 02:21:51	cbreak	kline: profiling with anything below -O2 is braindead
2016-09-16 02:21:52	<--	psychicist__ (~psychicis@wlan-145-94-143-186.wlan.tudelft.nl) has quit (Quit: Lost terminal)
2016-09-16 02:21:53	Oxyd	ville: What new wording?
2016-09-16 02:22:10	cbreak	kline: because the profiling on unoptimized code is worthless
2016-09-16 02:22:27	ville	Oxyd: pretty sure 14, or 17 will, include some new wording about guaranteeing elision
2016-09-16 02:22:32	kline	cbreak, cool, maybe im just doing it wrong with the profiler, since with -g -pg and -O3, i get this as my profiler output: https://pulham.info/static/img/flags.png
2016-09-16 02:22:51	cbreak	kline: well, get a better profiler :)
2016-09-16 02:22:59	Oxyd	ville: Oh yeah, I seem to vaguely remember something like that too.
2016-09-16 02:23:00	kline	im happy to take suggestions
2016-09-16 02:23:02	cbreak	kline: on mac os x, you can use instruments for example
2016-09-16 02:23:11	kline	using linux and windows just now
2016-09-16 02:23:16	flux	kline, "perf" on linux
2016-09-16 02:23:24	cbreak	it gives per-line output. Of course quite unreliable with all the optimizations compilers can do, but more than yours :)
2016-09-16 02:23:26	ville	Oxyd: well your recollection is as good as mine then
2016-09-16 02:23:29	flux	though I suppose these tools aren't very helpful in finding what happens inside your function
2016-09-16 02:23:55	flux	kline, valgrind's callgrind + kcachegrind is a pretty nice combo
2016-09-16 02:24:09	w3z	http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0135r1.html
2016-09-16 02:24:50	Eelis	could be a lib issue. the <random> stuff (and the libstdc++ implementation) have a bunch of performance problems
2016-09-16 02:25:07	flux	if so, profiler should tell
2016-09-16 02:25:08	-->	shams (~shams@124.40.246.86) has joined ##c++
2016-09-16 02:25:11	kline	Eelis, casual reports from peers say it goes to 0.27s on windows
2016-09-16 02:25:15	kline	but i havent seen that build
2016-09-16 02:25:38	Eelis	i haven't read the discussion, no idea what .27 means to you
2016-09-16 02:25:43	<--	jackhum (uid97400@gateway/web/irccloud.com/x-ufsoxkmnluunjhnd) has quit (Quit: Connection closed for inactivity)
2016-09-16 02:25:44	-->	satirev (~Satirev@177.163.77.65) has joined ##c++
2016-09-16 02:25:54	kline	with -O3, it takes 18s
2016-09-16 02:26:18	kline	(... on linux). similar/identical code takes 0.27 on windows
2016-09-16 02:26:31	Eelis	i don't trust your numbers
2016-09-16 02:26:43	kline	i dont trust the windows numbers, no
2016-09-16 02:27:05	Eelis	i don't trust your numbers either, since you seemed quite happy to benchmark non-optimized code
2016-09-16 02:27:13	<--	suvirb (uid16371@gateway/web/irccloud.com/x-syjvnacmmacoikls) has quit (Quit: Connection closed for inactivity)
2016-09-16 02:27:19	Eelis	who knows what other ways you're screwing up.
2016-09-16 02:27:24	Eelis	offtopic in any case
2016-09-16 02:27:34	<--	Kimundi_ (~Kimundi@p57BC68FB.dip0.t-ipconnect.de) has quit (Ping timeout: 240 seconds)
2016-09-16 02:27:39	w3z	i definitely dont trust that your rust is outperforming equivalent c++
2016-09-16 02:27:48	kline	same, somethings really fucky
2016-09-16 02:28:03	Eelis	w3z: i can sure trust that part, since they could've just avoided making the mistakes in <random>
2016-09-16 02:28:20	kline	but the code is linked above and has been built with `g++ -std=c++11 -pg -g -O3 -DITERATIONS=1e9 main.cpp` and also without -O3
2016-09-16 02:28:33	kline	( http://paste.debian.net/825333/ )
2016-09-16 02:28:49	-->	psychicist__ (~psychicis@wlan-145-94-143-186.wlan.tudelft.nl) has joined ##c++
2016-09-16 02:28:57	Eelis	!stdcpp gcc
2016-09-16 02:28:57	nolyc	Standard C++ has no notion of `gcc', so you must be talking about some specific OS- or library API (or tool), which is beyond the scope of this channel (which focuses on standard C++).
2016-09-16 02:29:16	kline	nolyc, i did say earlier its quite possible im in the wrong place :)
2016-09-16 02:29:27	kline	oh, Eelis, even
2016-09-16 02:29:39	kline	##workingset might be more useful, but still
2016-09-16 02:29:39		[02:29]
2016-09-16 02:29:45	<--	elsevero (~elsevero@79.119.56.193) has quit (Quit: elsevero)
2016-09-16 02:30:08	<--	di0_ (~di0_@unaffiliated/di0-/x-5053590) has quit (Remote host closed the connection)
2016-09-16 02:30:31	<--	neurodrone (~neurodron@unaffiliated/neurodrone) has quit (Quit: neurodrone)
2016-09-16 02:30:44	urdh	w3z, kline, is the rust code equivalent though? I mean, the C++ code does more than just rand() % some_number
2016-09-16 02:31:01	urdh	what does the rust code do?
2016-09-16 02:31:09	w3z	i know  random is a pet peeve of yours, but i thought that was more to do with the specification and api than wrt the prng implementations in libc++/libstdc++
2016-09-16 02:31:14	kline	urdh, http://sprunge.us/BjGc
2016-09-16 02:31:31	<--	LBV_User (~leonardo@177.132.222.215) has quit (Ping timeout: 272 seconds)
2016-09-16 02:31:45	Eelis	w3z: no, like i said, the libstdc++ implementation has severe performance issues
2016-09-16 02:31:47	kline	it looks close enough to my eye
2016-09-16 02:32:59	Eelis	w3z: e.g. if you shuffle() a sequence, libstdc++ will typically throw away half the randomly generated bits
2016-09-16 02:33:26	urdh	I'm not good enough with rust, but to me it looks like it's using some kind of rand(), not e.g. mt19937
2016-09-16 02:33:29	urdh	I mean what is rand::StdRng?
2016-09-16 02:33:35	kline	no idea, i dont know rust
2016-09-16 02:33:39	<--	rendar (~I@host224-58-dynamic.49-79-r.retail.telecomitalia.it) has quit (Ping timeout: 248 seconds)
2016-09-16 02:34:04	kline	but this goes back to my original question of "if my understanding of the profile is right and random is just really slow, whats a better rand source for some casual sampling stuff"
2016-09-16 02:34:11	<--	rimdeker (~rimdeker@unaffiliated/rimdeker) has quit (Read error: Connection reset by peer)
2016-09-16 02:34:16	urdh	so it could be doing something completely different then
2016-09-16 02:34:17	-->	Ipe_ (~Ipe@a91-156-244-1.elisa-laajakaista.fi) has joined ##c++
2016-09-16 02:34:34	<--	bjz_ (~bjz@104.222.140.110) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-16 02:35:01	<--	n0body (aa94d79d@gateway/web/freenode/ip.170.148.215.157) has left ##c++
2016-09-16 02:35:01	-->	bjz (~bjz@104.222.140.110) has joined ##c++
2016-09-16 02:35:20	bjz	kline: https://doc.rust-lang.org/rand/rand/struct.StdRng.html
2016-09-16 02:35:21	<--	fender0107401 (~fender010@115.171.119.148) has quit (Ping timeout: 248 seconds)
2016-09-16 02:36:01	-->	LBV_User (~leonardo@189.58.233.125.dynamic.adsl.gvt.net.br) has joined ##c++
2016-09-16 02:36:23	w3z	is it some poorly implemented variation of fisher-yates, nm, im willing to take your word for it and dont really want to dig through it :)
2016-09-16 02:36:23	<--	rmunoz (~ricardo@217.124.142.50) has quit (Quit: leaving)
2016-09-16 02:36:42	kline	heh
2016-09-16 02:37:14	w3z	eelis, not, you kline, youre off-topic, and im definitely not going to dig through rust code
2016-09-16 02:38:08	<--	xaxxon (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has quit (Quit: This computer has gone to sleep)
2016-09-16 02:38:37	<--	jrolland-work (~jeff@155.92.176.224) has quit (Ping timeout: 250 seconds)
2016-09-16 02:38:38	bjz	kline: I would say head over to #rust an get info on the implementation - there are a number of algorithms in the std
2016-09-16 02:38:42	kline	ok, in any case, thanks guys. ill look for faster random sources
2016-09-16 02:39:04	bjz	well, rand
2016-09-16 02:39:14	kline	from cstdlib ?
2016-09-16 02:39:58	bjz	no, rust's rand crate - you'd need to be comparing like for like with the cpp std I'd assume
2016-09-16 02:40:03	<--	dangerousdave (~dangerous@78.156.71.46) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-09-16 02:40:06	-->	elh9 (~elh9___@110-175-114-60.tpgi.com.au) has joined ##c++
2016-09-16 02:40:13	<--	kolobyte (~aaa@unaffiliated/kolobyte) has quit (Ping timeout: 250 seconds)
2016-09-16 02:40:31	kline	yeah, likewise its hard to compare linux and windows random properties
2016-09-16 02:40:42	-->	dangerousdave (~dangerous@78.156.71.46) has joined ##c++
2016-09-16 02:40:57	<--	tcsc (sid721@gateway/web/mozilla/x-pxbxsigvmyewhyqs) has quit (Read error: Connection reset by peer)
2016-09-16 02:41:42	bjz	the method of the underlying rng could be significant - you'd get more crossover in C++/rust folk in irc.mozilla.org if you'd like to know more
2016-09-16 02:41:54	kline	thanks
2016-09-16 02:41:58	bjz	:)
2016-09-16 02:42:27	bjz	at the end of the day, they should be in the same ballpark
2016-09-16 02:42:28	-->	hk238 (~kvirc@unaffiliated/hk238) has joined ##c++
2016-09-16 02:44:37	-->	kolobyte (~aaa@23.94.98.192) has joined ##c++
2016-09-16 02:44:37	<--	kolobyte (~aaa@23.94.98.192) has quit (Changing host)
2016-09-16 02:44:37	-->	kolobyte (~aaa@unaffiliated/kolobyte) has joined ##c++
2016-09-16 02:44:50	<--	shams (~shams@124.40.246.86) has quit (Quit: Leaving)
2016-09-16 02:44:50		[02:44]
2016-09-16 02:45:21	-->	tabrez (~tabrez@124.40.246.86) has joined ##c++
2016-09-16 02:46:03	-->	blackbeard420 (~blackbear@dynamic-acs-24-154-82-158.zoominternet.net) has joined ##c++
2016-09-16 02:46:34	-->	zap0 (~moofy@14-201-222-143.tpgi.com.au) has joined ##c++
2016-09-16 02:48:12	-->	fender0107401 (~fender010@106.37.108.190) has joined ##c++
2016-09-16 02:48:26	-->	wolfcub (~henrique_@177.131.178.169) has joined ##c++
2016-09-16 02:48:27	<--	FireRogue (~fireRogue@213.57.109.136) has quit (Ping timeout: 250 seconds)
2016-09-16 02:49:30	<--	Beetny (~Beetny@14-202-48-200.tpgi.com.au) has quit (Ping timeout: 260 seconds)
2016-09-16 02:49:52	cbreak	I'd expect C++ to be faster, if the code is doing comparable things
2016-09-16 02:52:18	-->	rimdeker (~rimdeker@unaffiliated/rimdeker) has joined ##c++
2016-09-16 02:52:35	RokerHRO	oO
2016-09-16 02:53:07	-->	ph88 (~h88@145.131.171.178) has joined ##c++
2016-09-16 02:53:12	-->	Nomenclatura (~turtle@189.205.98.239) has joined ##c++
2016-09-16 02:53:57	ph88	how can i get the type of a variable when it's templated ? I mean the resolved type so that i don't have to trace it back manually over several files. Also is there an editor which can do this?
2016-09-16 02:54:01	<--	psychicist__ (~psychicis@wlan-145-94-143-186.wlan.tudelft.nl) has quit (Ping timeout: 248 seconds)
2016-09-16 02:54:15	LBV_User	does stdlib has any helper for sorting a vector of pairs by it's second element? like std::second_less ?
2016-09-16 02:54:24	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-16 02:54:35	cbreak	ph88: as a programmer or as code?
2016-09-16 02:54:36	-->	psychicist__ (~psychicis@wlan-145-94-143-186.wlan.tudelft.nl) has joined ##c++
2016-09-16 02:54:56	-->	voidah (~voidah@unaffiliated/voider) has joined ##c++
2016-09-16 02:55:15	cbreak	template parameters are not actually available until instantiated
2016-09-16 02:55:34	-->	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has joined ##c++
2016-09-16 02:56:07	w3z	{vector<pair<int,int>> V; sort(begin(V),end(V),[](auto a,auto b){return a.second<b.second;});}
2016-09-16 02:56:08	geordi	<no output>
2016-09-16 02:56:15	w3z	you want a helper to simplify that ...
2016-09-16 02:56:46	<--	pandaant (~batman@149.201.240.93) has quit (Remote host closed the connection)
2016-09-16 02:56:49	LBV_User	std::sort(v.begin(), v.end(), std::second_less);
2016-09-16 02:56:51	-->	KindOne_ (kindone@freenude/topless/kindone) has joined ##c++
2016-09-16 02:56:59	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-16 02:57:12	LBV_User	I know it is a simple code, I just get myself making it over and over...
2016-09-16 02:57:24	LBV_User	I should do some version of it...
2016-09-16 02:57:35	-->	Arlen0 (~Arlen0@38-103-219-200.alamobb.net) has joined ##c++
2016-09-16 02:57:49	<--	Arlen0 (~Arlen0@38-103-219-200.alamobb.net) has quit (Remote host closed the connection)
2016-09-16 02:58:53	-->	KindOne- (kindone@freenude/topless/kindone) has joined ##c++
2016-09-16 02:59:03	<--	KindOne (kindone@freenude/topless/kindone) has quit (Ping timeout: 244 seconds)
2016-09-16 02:59:36	-->	riksteri (~SpaceDino@62.102.148.156) has joined ##c++
2016-09-16 02:59:53	-->	jaafar (~quassel@76-218-204-163.lightspeed.sntcca.sbcglobal.net) has joined ##c++
2016-09-16 02:59:53		[02:59]
2016-09-16 02:59:55	-->	rendar (~I@host125-183-dynamic.46-79-r.retail.telecomitalia.it) has joined ##c++
2016-09-16 03:00:22	-->	Amaranthus (~Amaranth@ubuntu/member/Amaranth) has joined ##c++
2016-09-16 03:01:23	<--	Amaranth (~Amaranth@ubuntu/member/Amaranth) has quit (Ping timeout: 248 seconds)
2016-09-16 03:01:53	<--	KindOne_ (kindone@freenude/topless/kindone) has quit (Ping timeout: 240 seconds)
2016-09-16 03:02:23	<--	voidah (~voidah@unaffiliated/voider) has quit (Read error: Connection reset by peer)
2016-09-16 03:02:51	-->	tcsc (sid721@gateway/web/mozilla/x-owkpsojxrjijzruq) has joined ##c++
2016-09-16 03:02:57	-->	lolek (~lolek@unaffiliated/marcin) has joined ##c++
2016-09-16 03:03:00	<--	lolek (~lolek@unaffiliated/marcin) has left ##c++
2016-09-16 03:03:12	--	KindOne- is now known as KindOne
2016-09-16 03:05:29	<--	metachr0n (~nobody@78.1.broadband13.iol.cz) has quit (Quit: WeeChat 1.5)
2016-09-16 03:06:42	-->	Valdaris (~Gabe@75-170-43-116.eugn.qwest.net) has joined ##c++
2016-09-16 03:07:03	-->	SteffanW (~steffanw@ip4da40774.direct-adsl.nl) has joined ##c++
2016-09-16 03:07:08	ph88	cbreak, as programmer ... but the template parameters are build from constants so it should be available by static analyses
2016-09-16 03:07:27	<--	tlaxkit (~hexchat@92.185.154.236) has quit (Quit: ¡Adiós!)
2016-09-16 03:07:27	cbreak	ph88: only if the template is instantiated
2016-09-16 03:07:40	-->	Haruno (~Haruno@unaffiliated/haruno) has joined ##c++
2016-09-16 03:07:46	cbreak	ph88: i.e. when looking at std::swap, the type parameter could be int, float, ..., depending on what you swap in your code
2016-09-16 03:07:52	-->	araml (~araml@unaffiliated/araml) has joined ##c++
2016-09-16 03:07:57	ph88	well is there something that can instantiate the template and then give me the type back of a variable ?
2016-09-16 03:08:03	cbreak	that's why good compilers always show you where a template is instantiated from when they display template errors
2016-09-16 03:08:05	-->	KindOne_ (kindone@freenude/topless/kindone) has joined ##c++
2016-09-16 03:08:10	<--	fender0107401 (~fender010@106.37.108.190) has quit (Quit: WeeChat 1.0.1)
2016-09-16 03:08:22	ph88	i just want code hints in my editor about variables
2016-09-16 03:08:44	cbreak	they don't have any particular type
2016-09-16 03:08:54	cbreak	(until you instantiate them)
2016-09-16 03:09:03	cbreak	and that instantiation is after you write the template
2016-09-16 03:09:17	cbreak	you can get to the types when you have compile errors
2016-09-16 03:09:18	-->	coderwork (~coderwork@unaffiliated/coderwork) has joined ##c++
2016-09-16 03:09:23	cbreak	the compiler will probably tell them to you
2016-09-16 03:09:37	cbreak	but you only get such compile errors on instantiation
2016-09-16 03:10:47	<--	KindOne (kindone@freenude/topless/kindone) has quit (Ping timeout: 272 seconds)
2016-09-16 03:10:48	cbreak	template<typename X> X f() { X x = X(); return x; /* here, x would have the type int or float, depending on where you look at */ } f<int>(); f<float>();
2016-09-16 03:11:51	-->	tadaa (~tadaaa@nat-wh-wz4-12.rz.uni-karlsruhe.de) has joined ##c++
2016-09-16 03:12:08	-->	atod (~atod@cpe-74-73-129-35.nyc.res.rr.com) has joined ##c++
2016-09-16 03:12:25	--	KindOne_ is now known as KindOne
2016-09-16 03:12:50	<--	Valdaris (~Gabe@75-170-43-116.eugn.qwest.net) has quit (Ping timeout: 260 seconds)
2016-09-16 03:13:51	<--	Akimb (~Akimb@88-119-138-154.static.zebra.lt) has quit (Read error: Connection reset by peer)
2016-09-16 03:15:57	<--	vitimiti (~vitimiti@unaffiliated/vitimiti) has quit (Ping timeout: 244 seconds)
2016-09-16 03:15:57		[03:15]
2016-09-16 03:16:06	-->	FireRogue (~fireRogue@213.57.109.136) has joined ##c++
2016-09-16 03:17:07	-->	esas (~esas@unaffiliated/esas) has joined ##c++
2016-09-16 03:18:10	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-16 03:19:26	<--	magnicida1 (~raskolnik@ip5b4135a6.dynamic.kabel-deutschland.de) has quit (Read error: Connection reset by peer)
2016-09-16 03:19:41	ph88	cbreak, the template is already written in code .. and also where it's used is also written ..
2016-09-16 03:21:38	<--	KindOne (kindone@freenude/topless/kindone) has quit (Ping timeout: 244 seconds)
2016-09-16 03:21:39	rafalcpp	!give Hello71 stdcpp
2016-09-16 03:21:39	nolyc	Hello71: (stdcpp <an calias, 1 argument>) -- CAlias for "echo Standard C++ has no notion of `$1', so you must be talking about some specific OS- or library API (or tool), which is beyond the scope of this channel (which focuses on standard C++).".
2016-09-16 03:21:54	Hello71	but you didn't use !tell
2016-09-16 03:21:56	Hello71	so
2016-09-16 03:22:00	Hello71	I don't see your point
2016-09-16 03:22:02	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-16 03:22:04	<--	casscode (~quassel@169-0-91-62.ip.afrihost.co.za) has quit (Ping timeout: 240 seconds)
2016-09-16 03:26:49	-->	zmack (~zmack@pool-72-74-144-215.bstnma.fios.verizon.net) has joined ##c++
2016-09-16 03:26:51	-->	asc232 (~Keith@179.38.232.249) has joined ##c++
2016-09-16 03:27:20	-->	ropeney (~ropeney@CPE-58-170-196-106.lns2.lon.bigpond.net.au) has joined ##c++
2016-09-16 03:27:32	<--	kw01f (~kw01f@merlin.mvtec.com) has quit
2016-09-16 03:29:55	<--	plee (~kurt@89.10.219.180) has quit (Read error: Connection reset by peer)
2016-09-16 03:30:40	-->	plee (~kurt@89.10.219.180) has joined ##c++
2016-09-16 03:30:54	-->	Mike11 (~Mike@unaffiliated/mike11) has joined ##c++
2016-09-16 03:33:33	-->	ElectricSheep (~esheep_zn@c-71-225-69-61.hsd1.pa.comcast.net) has joined ##c++
2016-09-16 03:33:33		[03:33]
2016-09-16 03:34:31	-->	CEnnis91 (uid3543@gateway/web/irccloud.com/x-yiyvrgpvhmfhxmsh) has joined ##c++
2016-09-16 03:35:14	<--	velco (~chill@vlan-185-78-38-153.comnet.bg) has quit (Quit: Leaving...)
2016-09-16 03:36:49	-->	rriemann_ (~rriemann@dhcp-183-78.ens-lyon.fr) has joined ##c++
2016-09-16 03:37:08	<--	rriemann (~rriemann@dhcp-67-135.ixxi.ens-lyon.fr) has quit (Ping timeout: 265 seconds)
2016-09-16 03:37:16	<--	nilg (~user@77.70.2.229) has quit (Remote host closed the connection)
2016-09-16 03:37:17	-->	Elirips (~Elirips@193.135.165.208) has joined ##c++
2016-09-16 03:38:04	-->	Snopandan (~Snopandan@c-6b4272d5.019-189-6e6b701.cust.bredbandsbolaget.se) has joined ##c++
2016-09-16 03:38:12	<--	Snopandan (~Snopandan@c-6b4272d5.019-189-6e6b701.cust.bredbandsbolaget.se) has quit (Client Quit)
2016-09-16 03:38:40	-->	Snopandan (~Snopandan@c-6b4272d5.019-189-6e6b701.cust.bredbandsbolaget.se) has joined ##c++
2016-09-16 03:38:42	<--	dangerousdave (~dangerous@78.156.71.46) has quit (Read error: Connection reset by peer)
2016-09-16 03:39:05	-->	velco (~chill@vlan-185-78-38-153.comnet.bg) has joined ##c++
2016-09-16 03:40:26	<--	Gluesticky (~IceChat9@unaffiliated/gluesticky) has quit (Quit: This is the end. Goodbye cruel world!)
2016-09-16 03:41:25	<--	ibouvousaime (~ibouvousa@41.83.32.179) has quit (Ping timeout: 244 seconds)
2016-09-16 03:44:48	<--	Vuks (~Vuks@unaffiliated/vuks69) has quit (Ping timeout: 276 seconds)
2016-09-16 03:46:00	-->	Kimundi_ (~Kimundi@p57BC68FB.dip0.t-ipconnect.de) has joined ##c++
2016-09-16 03:46:06	<--	Snopandan (~Snopandan@c-6b4272d5.019-189-6e6b701.cust.bredbandsbolaget.se) has quit (Quit: leaving)
2016-09-16 03:46:46	<--	bergesenha (~harald@21.90-149-192.nextgentel.com) has quit (Quit: leaving)
2016-09-16 03:47:37	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-16 03:48:09	<--	Vingador (~quassel@191.248.248.39) has quit (Remote host closed the connection)
2016-09-16 03:48:47	-->	plusone (~plusone@176.24.26.166) has joined ##c++
2016-09-16 03:48:47		[03:48]
2016-09-16 03:50:36	-->	Snopandan (~Snopandan@c-6b4272d5.019-189-6e6b701.cust.bredbandsbolaget.se) has joined ##c++
2016-09-16 03:52:36	<--	asc232 (~Keith@179.38.232.249) has quit (Remote host closed the connection)
2016-09-16 03:53:18	-->	everamzah (~james@cpe-198-255-184-0.maine.res.rr.com) has joined ##c++
2016-09-16 03:54:32	-->	Valdaris (~Gabe@75-170-43-116.eugn.qwest.net) has joined ##c++
2016-09-16 03:54:52	-->	jrolland-work (~jeff@155.92.176.224) has joined ##c++
2016-09-16 03:56:00	<--	Snopandan (~Snopandan@c-6b4272d5.019-189-6e6b701.cust.bredbandsbolaget.se) has quit (Quit: leaving)
2016-09-16 03:57:00	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-16 03:57:06	w3z	btw, in response to someones question about getting a tuple member via a runtime index
2016-09-16 03:57:29	w3z	http://melpon.org/wandbox/permlink/RcrmKDRkEX8MyGEY
2016-09-16 03:57:35	w3z	bored "fun"
2016-09-16 03:57:40	<--	SpaceDanceCJ (~Sasha@37.45.163.65) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-09-16 03:57:58	w3z	better than a switch, eh
2016-09-16 03:58:08	-->	voidah (~voidah@unaffiliated/voider) has joined ##c++
2016-09-16 03:58:10	-->	JohnDough (~JohnDough@unaffiliated/audiofile) has joined ##c++
2016-09-16 03:58:18	thinlizzy	checking
2016-09-16 03:58:27	-->	snover (~Adium@unaffiliated/snover) has joined ##c++
2016-09-16 03:58:46	thinlizzy	<variant>
2016-09-16 03:58:53	<--	interop_madness (~interop_m@unaffiliated/interop-madness/x-8858653) has quit (Quit: Leaving)
2016-09-16 03:58:53	w3z	and of course the tuple elements need to be convertible to a common type
2016-09-16 03:58:54	thinlizzy	is that a thing already?
2016-09-16 03:59:14	w3z	its a 17 thing, in gcc atm, not in clang yet
2016-09-16 03:59:21	w3z	(also in boost)
2016-09-16 03:59:27	<--	AndreasL (~Andlon@2a02:908:691:bd1c:30b1:5e47:65a8:2834) has quit (Remote host closed the connection)
2016-09-16 03:59:37	thinlizzy	so you map indices to a variant that holds integral constants
2016-09-16 03:59:41	-->	SibTiger (~Nicholas@199-96-206-87.fidnet.com) has joined ##c++
2016-09-16 03:59:56	<--	coderwork (~coderwork@unaffiliated/coderwork) has left ##c++ ("Leaving")
2016-09-16 03:59:57	-->	Brklyn (~truthbk@38.122.226.210) has joined ##c++
2016-09-16 04:00:01	thinlizzy	then the integral constants can be used in DAT TUPLE
2016-09-16 04:00:03	<--	LBV_User (~leonardo@189.58.233.125.dynamic.adsl.gvt.net.br) has quit (Ping timeout: 244 seconds)
2016-09-16 04:00:07	thinlizzy	yuck
2016-09-16 04:00:19	thinlizzy	that is what I call abuse
2016-09-16 04:00:20	thinlizzy	but fun
2016-09-16 04:00:21	thinlizzy	:
2016-09-16 04:00:23	thinlizzy	:-)
2016-09-16 04:01:10	w3z	its friday, and i dont want to do "real" work, so ... :)
2016-09-16 04:01:37	-->	asc232 (~Keith@179.38.232.249) has joined ##c++
2016-09-16 04:02:00	JohnDough	Some kind soul here pointed me to a list of good C++ books the last time I was here. Does someone here have the link?
2016-09-16 04:03:09	snover	!books
2016-09-16 04:03:11	nolyc	A nice C++ book guide and list can be found at http://stackoverflow.com/q/388242/1090079
2016-09-16 04:03:27	TinoDidriksen	!give JohnDough basics
2016-09-16 04:03:28	nolyc	JohnDough: Books, references, tutorials, for all levels of learning: http://isocpp.org/get-started ; https://isocpp.org/faq ; http://www.dev-hq.net/c++/ ; http://learncpp.com/ ; http://stackoverflow.com/q/388242 ; https://github.com/isocpp/CppCoreGuidelines ; http://cppreference.com/
2016-09-16 04:04:31	<--	pylbrecht (~pylbrecht@2a02:8109:8a00:c34:a298:2f87:9d79:bdd6) has quit (Quit: Segmentation fault (core dumped))
2016-09-16 04:04:31		[04:04]
2016-09-16 04:04:43	-->	drpantoss (~drpantoss@62.128.218.68) has joined ##c++
2016-09-16 04:04:53	-->	nacitar (~nacitar@unaffiliated/nacitar) has joined ##c++
2016-09-16 04:05:04	JohnDough	Thanks, TinoDidriksen
2016-09-16 04:05:07	-->	skweek (~skweek@68-200-146-225.res.bhn.net) has joined ##c++
2016-09-16 04:05:19	<--	marcofe (~marcofe@test-centre4-gw.estec.esa.int) has quit (Quit: Konversation terminated!)
2016-09-16 04:06:40	<--	jablo (~jablo@80.243.123.111) has quit (Quit: jablo)
2016-09-16 04:06:42	-->	SecondForm_Glenn (~Thunderbi@108.189.70.212) has joined ##c++
2016-09-16 04:07:15	<--	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has quit (Quit: This computer has gone to sleep)
2016-09-16 04:07:50	-->	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has joined ##c++
2016-09-16 04:08:27	-->	strelox (~user@p200300754F28E90074287F8A07C0708B.dip0.t-ipconnect.de) has joined ##c++
2016-09-16 04:09:07	<--	Borkr (~Borkr@83.243.155.126) has quit (Ping timeout: 248 seconds)
2016-09-16 04:10:24	-->	xaxxon (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has joined ##c++
2016-09-16 04:13:18	<--	deekej (deekej@nat/redhat/x-fizmanqhyhlgdrao) has quit (Remote host closed the connection)
2016-09-16 04:15:36	w3z	even simpler, cout<<visit([&t](auto a){return get<a>(t);},m[i]); didnt realize i could use the integral_constant object directly, but of course it has a constexpr conversion function
2016-09-16 04:15:50	-->	snyp (~Snyp@150.129.132.221) has joined ##c++
2016-09-16 04:16:00	<--	DingoSaar (~hagen@pD9E09435.dip0.t-ipconnect.de) has quit (Read error: Connection reset by peer)
2016-09-16 04:16:31	-->	elnormou_ (~elnormous@gateway.evolutiongaming.com) has joined ##c++
2016-09-16 04:16:39	-->	krypton_ (~krypton_@185.128.42.24) has joined ##c++
2016-09-16 04:16:49	-->	kw01f (~kw01f@pD9FB19AA.dip0.t-ipconnect.de) has joined ##c++
2016-09-16 04:17:24	<--	elnormou_ (~elnormous@gateway.evolutiongaming.com) has quit (Read error: Connection reset by peer)
2016-09-16 04:19:48	-->	Nitrodev (~Nitrodev@85-23-77-207.bb.dnainternet.fi) has joined ##c++
2016-09-16 04:19:48		[04:19]
2016-09-16 04:19:53	<--	skweek (~skweek@68-200-146-225.res.bhn.net) has quit (Ping timeout: 248 seconds)
2016-09-16 04:20:33	<--	elnormous (~elnormous@gateway.evolutiongaming.com) has quit (Ping timeout: 265 seconds)
2016-09-16 04:20:47	<--	Haruno (~Haruno@unaffiliated/haruno) has quit (Remote host closed the connection)
2016-09-16 04:22:10	<--	zmack (~zmack@pool-72-74-144-215.bstnma.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-16 04:22:47	-->	vitimiti (~vitimiti@unaffiliated/vitimiti) has joined ##c++
2016-09-16 04:23:30	<--	nierob (~JNowacki@185.55.107.82) has quit (Quit: Konversation terminated!)
2016-09-16 04:23:37	<--	JohnDough (~JohnDough@unaffiliated/audiofile) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-09-16 04:24:52	-->	Guest53825 (~rudy@23-119-234-66.lightspeed.jcvlfl.sbcglobal.net) has joined ##c++
2016-09-16 04:25:36	Circuitsoft	Is there a way to test whether an std::thread is still running, or if it has finished?
2016-09-16 04:28:19	<--	AquaL1te (~AquaL1te@unaffiliated/aqual1te) has quit (Quit: leaving)
2016-09-16 04:28:25	<--	atod (~atod@cpe-74-73-129-35.nyc.res.rr.com) has quit (Ping timeout: 248 seconds)
2016-09-16 04:29:58	<--	Jiwan (~jeangu@212.247.124.2) has quit (Remote host closed the connection)
2016-09-16 04:30:23	cbreak	Circuitsoft: ask if it is joinable. If it is, it is running or was running
2016-09-16 04:30:38	<--	krypton_ (~krypton_@185.128.42.24) has quit (Quit: Mutter: http://www.mutterirc.com)
2016-09-16 04:30:39	cbreak	Circuitsoft: if it is joinable, you can try a join with timeout. If you get a timeout, it is still running
2016-09-16 04:30:42	<--	mss_cyclist (~MSe@89-250-189-210.tangos.nl) has quit (Ping timeout: 265 seconds)
2016-09-16 04:31:34	-->	Sevinz (~Dave@207.253.34.195) has joined ##c++
2016-09-16 04:32:42	<--	Sevinz (~Dave@207.253.34.195) has left ##c++
2016-09-16 04:33:28	-->	Lingo_ (~Lingo@80.244.93.61) has joined ##c++
2016-09-16 04:33:36	-->	ph88_ (~h88@095-097-065-054.static.chello.nl) has joined ##c++
2016-09-16 04:35:05	SlashLife	Alternatively give the thread some variable that it will set just before it finishes.
2016-09-16 04:35:05		[04:35]
2016-09-16 04:35:26	<--	Lingo_ (~Lingo@80.244.93.61) has quit (Remote host closed the connection)
2016-09-16 04:36:00	-->	Lingo_ (~Lingo@195.81.148.254) has joined ##c++
2016-09-16 04:36:04	Circuitsoft	So, if I want a class to contain a thread (And I'm okay with the thread starting at class instantiation), and I want another member function in the class to run as the thread, can the thread be a direct member of the class, or does it need to be a shared_ptr or something like that?
2016-09-16 04:36:33	<--	Lingo (~Lingo@195.81.148.254) has quit (Ping timeout: 244 seconds)
2016-09-16 04:36:35	SlashLife	It can be a direct member, but note that this will make the class noncopyable.
2016-09-16 04:36:40	<--	forgottenone (~forgotten@195.142.43.212) has quit (Quit: Konversation terminated!)
2016-09-16 04:36:54	Circuitsoft	I've made the class explicitly non-copyable. That's okay with me.
2016-09-16 04:36:59	SlashLife	And you likely should refrain from carelessly moving it as well.
2016-09-16 04:37:08	Circuitsoft	I've also made it non-moveable.
2016-09-16 04:37:09	<--	voidah (~voidah@unaffiliated/voider) has quit (Remote host closed the connection)
2016-09-16 04:37:27	Circuitsoft	But, I'm getting the error: "'run' is not a type" where run() is the function to run in the thread.
2016-09-16 04:37:27	<--	ph88 (~h88@145.131.171.178) has quit (Ping timeout: 276 seconds)
2016-09-16 04:37:43	-->	forgottenone (~forgotten@195.142.43.212) has joined ##c++
2016-09-16 04:37:56	Circuitsoft	std::thread this_task_driver(run); is in my class definition.
2016-09-16 04:38:11	cbreak	Circuitsoft: that makes no sense
2016-09-16 04:38:26	cbreak	Circuitsoft: you'll have to give the function you want the thread to run at thread initialization
2016-09-16 04:38:45	<--	Sasasu (~li@180.212.140.16) has quit (Quit: WeeChat 1.5)
2016-09-16 04:38:57	-->	Sasasu (~li@180.212.140.16) has joined ##c++
2016-09-16 04:39:11	Circuitsoft	Isn't initialization declared at class level for non-pointer, non-reference types?
2016-09-16 04:39:19	cbreak	no
2016-09-16 04:39:33	cbreak	it is done in the constructor
2016-09-16 04:39:36	w3z	if youre spawning and joining per task ....consider using async instead
2016-09-16 04:39:49	cbreak	(you can set defaults by in-class initialization, but for this it makes little sense)
2016-09-16 04:40:27	cbreak	Circuitsoft: the run function must be in scope obviously
2016-09-16 04:40:28	-->	Tachyon_ (~Thunderbi@95.76.184.120) has joined ##c++
2016-09-16 04:40:29	Circuitsoft	w3z: I'm using async elsewhere, but this thread returns no result to the caller.
2016-09-16 04:41:57	w3z	asyncs dont need to return a value, a future<void> lets you wait on it etc for synchronization purposes, and if your impl uses an underlying thread pool you dont eat the cost of thread startup shutdown each time
2016-09-16 04:42:34	Circuitsoft	These tasks are long-running (hours).
2016-09-16 04:42:38	-->	ambro718 (~ambro@unaffiliated/ambro718) has joined ##c++
2016-09-16 04:42:57	w3z	in that case ,threads probably are the way to go
2016-09-16 04:42:57	-->	MulleDK19 (MulleDK19@unaffiliated/mulledk19) has joined ##c++
2016-09-16 04:43:26	Circuitsoft	They drive other tasks, using async() that can run for a few ms each, that call blocking ioctl()s that need to be queued.
2016-09-16 04:43:29	-->	Poulay_Brayzay (~nahalay_p@217.167.1.65) has joined ##c++
2016-09-16 04:44:21	-->	mfc_ (~mfc@unaffiliated/mfc) has joined ##c++
2016-09-16 04:45:00	<--	ghostlight (~ghostligh@ec2-54-187-97-144.us-west-2.compute.amazonaws.com) has quit (Ping timeout: 244 seconds)
2016-09-16 04:46:15	<--	chasmo77 (~chas77@158.183-62-69.ftth.swbr.surewest.net) has quit (Ping timeout: 265 seconds)
2016-09-16 04:46:34	<--	mfc (~mfc@unaffiliated/mfc) has quit (Ping timeout: 240 seconds)
2016-09-16 04:46:46	w3z	struct S{thread t; void f(){} S():t{&S::f,this}{}};, but <- has problems, fwiw
2016-09-16 04:47:39	w3z	namely f may be started before the constructor finishes, which means this points at a potentially partially constructed object
2016-09-16 04:47:44	-->	elnormous (~elnormous@91.105.17.158) has joined ##c++
2016-09-16 04:47:45	<--	elnormous (~elnormous@91.105.17.158) has quit (Remote host closed the connection)
2016-09-16 04:47:52	-->	elnormous (~elnormous@91.105.17.158) has joined ##c++
2016-09-16 04:49:09	Circuitsoft	So, do I declare the thread in my class with no constructor args, then in the constructor do: my_thread_var = std::move(std::thread{my_func})?
2016-09-16 04:49:33	Circuitsoft	Is that the purpose of the thread = move operator?
2016-09-16 04:49:46	<--	glad (~quassel@dynamic-vpdn-93-125-62-88.telecom.by) has quit (Remote host closed the connection)
2016-09-16 04:50:36	-->	magnicida (~raskolnik@2a02:8109:8c80:231:ea39:dfff:fe4d:275b) has joined ##c++
2016-09-16 04:50:36		[04:50]
2016-09-16 04:51:58	<--	mfc_ (~mfc@unaffiliated/mfc) has quit (Read error: Connection reset by peer)
2016-09-16 04:52:30	<--	scs (~joseph@82.20.74.94) has quit (Quit: leaving)
2016-09-16 04:52:47	-->	ghostlight (~ghostligh@ec2-54-187-97-144.us-west-2.compute.amazonaws.com) has joined ##c++
2016-09-16 04:53:34	-->	Alucard_ (4eb1034b@gateway/web/freenode/ip.78.177.3.75) has joined ##c++
2016-09-16 04:53:45	Alucard_	Hey
2016-09-16 04:53:47	Alucard_	Hello
2016-09-16 04:55:21	<--	Nomenclatura (~turtle@189.205.98.239) has quit (Ping timeout: 265 seconds)
2016-09-16 04:55:30	Alucard_	I am writing a sound player
2016-09-16 04:55:40	Alucard_	I want to play wav player by reading the file myself
2016-09-16 04:55:59	Alucard_	What do you suggest?
2016-09-16 04:56:36	<--	drpantoss (~drpantoss@62.128.218.68) has quit (Quit: Leaving)
2016-09-16 04:56:53	-->	dwrngr (~user@96-89-42-188-static.hfc.comcastbusiness.net) has joined ##c++
2016-09-16 04:57:03	-->	KNRO (~quassel@94.187.209.247) has joined ##c++
2016-09-16 04:57:16	-->	Sculptor (~Sculptor@cable-24-135-26-151.dynamic.sbb.rs) has joined ##c++
2016-09-16 04:57:43	SlashLife	Circuitsoft: That may solve the construction order problems within the same type, but note that when deriving from this class, the base constructor will finish (and thus the thread start) before the members of the derived classes are initialized.
2016-09-16 04:57:51	urdh	!give Alucard_ general
2016-09-16 04:57:52	nolyc	Alucard_: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2016-09-16 04:58:15	<--	psychicist__ (~psychicis@wlan-145-94-143-186.wlan.tudelft.nl) has quit (Ping timeout: 265 seconds)
2016-09-16 04:58:28	<--	Alucard_ (4eb1034b@gateway/web/freenode/ip.78.177.3.75) has left ##c++
2016-09-16 04:59:53	SlashLife	If this is a concern, you could circumvent it by doubling all constructors: protected S(no_thread_start, ...) to delegate to by the public ctors: S(...): S(no_thread_start(), ...) { start_thread(); }
2016-09-16 05:00:35	<--	riemann (~riemann@84-10-11-234.static.chello.pl) has quit (Quit: Leaving)
2016-09-16 05:00:42	SlashLife	That way derived classes can use the protected ctors to prevent the thread from starting until they are fully constructed.
2016-09-16 05:01:37	<--	rriemann_ (~rriemann@dhcp-183-78.ens-lyon.fr) has quit (Ping timeout: 250 seconds)
2016-09-16 05:02:18	Circuitsoft	SlashLife: I don't intend to derive from this class. Also, I added a start() method that actually constructs the thread.
2016-09-16 05:04:17	<--	Guest13 (~textual@ppp-171-96-181-45.revip8.asianet.co.th) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-16 05:04:31	-->	Vinnie_win (~TheVinn@pdpc/supporter/gold/thevinn) has joined ##c++
2016-09-16 05:05:37	-->	SHC (~quassel@45.249.248.221) has joined ##c++
2016-09-16 05:05:37		[05:05]
2016-09-16 05:05:39	<--	forgottenone (~forgotten@195.142.43.212) has quit (Quit: Konversation terminated!)
2016-09-16 05:05:54	-->	systemfault (~rcyr@unaffiliated/rcyr) has joined ##c++
2016-09-16 05:06:39	<--	eduardas_m (~eduardas_@213.197.143.19) has quit (Quit: Leaving)
2016-09-16 05:07:09	<--	UnlikeSuika (~UnlikeSui@117.123.105.126) has quit (Read error: Connection reset by peer)
2016-09-16 05:07:12	<--	Furkiepurkie (~Furkie@2001:1af8:4700:a03c:7::) has quit (Quit: leaving)
2016-09-16 05:08:31	Circuitsoft	Does std::map<K, T> require T to be copyable or moveable?
2016-09-16 05:08:55	<--	ropeney (~ropeney@CPE-58-170-196-106.lns2.lon.bigpond.net.au) has quit (Remote host closed the connection)
2016-09-16 05:08:59	-->	oxygene (~fred@ALille-652-1-121-58.w2-5.abo.wanadoo.fr) has joined ##c++
2016-09-16 05:09:32	<--	c0le (~c0le@59.99.251.45) has quit (Quit: "This is the end.. My beautiful friend.. The end.")
2016-09-16 05:10:00	-->	avernon (~A_Vernon@2610:130:104:300:2446:2d03:bc8a:8146) has joined ##c++
2016-09-16 05:10:16	-->	ropeney (~ropeney@CPE-58-170-196-106.lns2.lon.bigpond.net.au) has joined ##c++
2016-09-16 05:10:54	<--	hk238 (~kvirc@unaffiliated/hk238) has quit (Read error: Connection reset by peer)
2016-09-16 05:11:00	<--	MulleDK19 (MulleDK19@unaffiliated/mulledk19) has quit
2016-09-16 05:11:21	-->	occamsblazer (~occamsbla@131.228.197.41) has joined ##c++
2016-09-16 05:12:21	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-16 05:12:26	urdh	!give Circuitsoft stdref map
2016-09-16 05:12:29	-->	MulleDK19 (MulleDK19@unaffiliated/mulledk19) has joined ##c++
2016-09-16 05:12:46	urdh	meh, nolyc broke the google
2016-09-16 05:13:16	thinlizzy	yeah! stdref was a great factoid, rip it
2016-09-16 05:13:26	<--	Lingo_ (~Lingo@195.81.148.254) has quit (Quit: Be back later ...)
2016-09-16 05:13:29	Circuitsoft	Reading: http://en.cppreference.com/w/cpp/container/map - not completely helpful answering that question.
2016-09-16 05:13:31	<--	asc232 (~Keith@179.38.232.249) has quit (Remote host closed the connection)
2016-09-16 05:13:33	thinlizzy	Circuitsoft, please check cppreference.com before asking such questions
2016-09-16 05:13:41	thinlizzy	the answer is there
2016-09-16 05:13:52	urdh	Circuitsoft, check the concepts it implements
2016-09-16 05:13:53	thinlizzy	it tells you what is required from the types
2016-09-16 05:13:59	thinlizzy	learn to read
2016-09-16 05:14:01	-->	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has joined ##c++
2016-09-16 05:14:01	-->	Lingo_ (~Lingo@80.244.93.61) has joined ##c++
2016-09-16 05:14:05	-->	HerzogDeXtEr (~farci@i59F6C2C.versanet.de) has joined ##c++
2016-09-16 05:14:06	urdh	e.g. Container says T is Erasable
2016-09-16 05:14:25	Circuitsoft	I see what's required of K, but not of T.
2016-09-16 05:14:59	Circuitsoft	Ah, Container. I was looking at the AllocatorAwareContainer, etc.
2016-09-16 05:15:03	Circuitsoft	Hadn't looked at base Container yet.
2016-09-16 05:15:04	thinlizzy	!next
2016-09-16 05:15:05	nolyc	Another satisfied customer, next!
2016-09-16 05:15:07	-->	Hastouki (~nenchev@CPEbc4dfb9f9443-CMbc4dfb9f9440.cpe.net.cable.rogers.com) has joined ##c++
2016-09-16 05:15:28	-->	p4trix (~p4trix@71.red-79-145-250.dynamicip.rima-tde.net) has joined ##c++
2016-09-16 05:15:42	V-ille	no, map as such doesn't require T to be copyable or movable
2016-09-16 05:15:46	V-ille	{ map<int, mutex> m; m.try_emplace(42);}
2016-09-16 05:15:47	geordi	<no output>
2016-09-16 05:16:33	Circuitsoft	Okay, then I'm still getting an error message that I don't understand, and making a minimal test case is proving tricky.
2016-09-16 05:16:41	thinlizzy	no testcase, no help
2016-09-16 05:16:44	-->	hk238 (~kvirc@unaffiliated/hk238) has joined ##c++
2016-09-16 05:17:14	<--	ppf_ (~pfaffe@i41pc78.ipd.uni-karlsruhe.de) has quit (Remote host closed the connection)
2016-09-16 05:17:22	-->	ibouvousaime (~ibouvousa@41.83.32.179) has joined ##c++
2016-09-16 05:17:57	<--	tocka (~tocka@78-56-107-170.static.zebra.lt) has quit
2016-09-16 05:18:12	<--	Sceorem (~Sceorem@xbn44-3-82-232-76-9.fbx.proxad.net) has quit (Read error: Connection reset by peer)
2016-09-16 05:18:33	<--	Lingo_ (~Lingo@80.244.93.61) has quit (Ping timeout: 244 seconds)
2016-09-16 05:18:57	-->	Nomenclatura (~turtle@189.205.98.239) has joined ##c++
2016-09-16 05:19:59	<--	Guest53825 (~rudy@23-119-234-66.lightspeed.jcvlfl.sbcglobal.net) has quit (Quit: Leaving)
2016-09-16 05:20:31	<--	xnavor (~xnavor@vbg-gw.proceranetworks.com) has quit (Ping timeout: 265 seconds)
2016-09-16 05:20:50	-->	rudy_ (~rudy@23-119-234-66.lightspeed.jcvlfl.sbcglobal.net) has joined ##c++
2016-09-16 05:20:50		[05:20]
2016-09-16 05:21:14	--	rudy_ is now known as Guest86236
2016-09-16 05:22:08	<--	snyp (~Snyp@150.129.132.221) has quit (Quit: Leaving)
2016-09-16 05:22:37	-->	Lingo_ (~Lingo@client188-197.wireless.umu.se) has joined ##c++
2016-09-16 05:24:16	Circuitsoft	Is there an easy non-copyable-non-movable object I can use in a testcase on geordi?
2016-09-16 05:24:27	V-ille	yes, mutex
2016-09-16 05:25:01	-->	stomper_ (~stomper_@146.95.76.142) has joined ##c++
2016-09-16 05:25:32	<--	Elirips (~Elirips@193.135.165.208) has quit (Quit: KVIrc 4.9.1 Aria http://www.kvirc.net/)
2016-09-16 05:26:49	<--	Lingo_ (~Lingo@client188-197.wireless.umu.se) has quit (Ping timeout: 244 seconds)
2016-09-16 05:27:21	-->	syem (~s@unaffiliated/syem) has joined ##c++
2016-09-16 05:28:37	-->	Gabe (~Gabe@75-170-43-116.eugn.qwest.net) has joined ##c++
2016-09-16 05:31:51	<--	everamzah (~james@cpe-198-255-184-0.maine.res.rr.com) has quit (Quit: WeeChat 1.5)
2016-09-16 05:32:15	<--	Valdaris (~Gabe@75-170-43-116.eugn.qwest.net) has quit (Ping timeout: 260 seconds)
2016-09-16 05:32:42	-->	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has joined ##c++
2016-09-16 05:33:39	-->	mfc (~mfc@unaffiliated/mfc) has joined ##c++
2016-09-16 05:34:00	<--	zipace (~anon@unaffiliated/zipace) has quit (Quit: Leaving)
2016-09-16 05:34:35	<--	saolof (~saolof@92-32-80-134.tn.glocalnet.net) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-09-16 05:35:54	<--	stomper_ (~stomper_@146.95.76.142) has quit (Quit: Bye!)
2016-09-16 05:35:54		[05:35]
2016-09-16 05:38:01	-->	illerucis (~illerucis@199.201.65.132) has joined ##c++
2016-09-16 05:38:44	<--	Ipe_ (~Ipe@a91-156-244-1.elisa-laajakaista.fi) has quit (Quit: Konversation terminated!)
2016-09-16 05:39:24	<--	Hastouki (~nenchev@CPEbc4dfb9f9443-CMbc4dfb9f9440.cpe.net.cable.rogers.com) has quit (Quit: WeeChat 1.5)
2016-09-16 05:39:54	-->	Lingo_ (~Lingo@h-128-85.a258.priv.bahnhof.se) has joined ##c++
2016-09-16 05:40:29	-->	djcb (~user@204.77.216.10) has joined ##c++
2016-09-16 05:41:16	-->	LordDagothur (~Dagothur@2607:fea8:921f:fc1a:2118:9c94:9dcf:b3e7) has joined ##c++
2016-09-16 05:41:23	-->	stomper_ (~stomper_@146.95.76.142) has joined ##c++
2016-09-16 05:41:49	-->	zagabar (~zagabar@unaffiliated/zagabar) has joined ##c++
2016-09-16 05:41:55	<--	ibouvousaime (~ibouvousa@41.83.32.179) has quit (Read error: Connection reset by peer)
2016-09-16 05:42:07	-->	ignatiz- (50c1d51a@gateway/web/freenode/ip.80.193.213.26) has joined ##c++
2016-09-16 05:42:32	<--	stomper_ (~stomper_@146.95.76.142) has quit (Client Quit)
2016-09-16 05:42:49	<--	Sasasu (~li@180.212.140.16) has quit (Quit: WeeChat 1.5)
2016-09-16 05:42:53	-->	mfc_ (~mfc@unaffiliated/mfc) has joined ##c++
2016-09-16 05:42:57	-->	Ipe_ (~Ipe@a91-156-244-1.elisa-laajakaista.fi) has joined ##c++
2016-09-16 05:43:05	<--	KNRO (~quassel@94.187.209.247) has quit (Remote host closed the connection)
2016-09-16 05:43:45	<--	plusone (~plusone@176.24.26.166) has quit (Ping timeout: 276 seconds)
2016-09-16 05:44:41	<--	Lingo_ (~Lingo@h-128-85.a258.priv.bahnhof.se) has quit (Ping timeout: 272 seconds)
2016-09-16 05:45:07	<--	arbv (~arbv@unaffiliated/arbv) has quit (Ping timeout: 248 seconds)
2016-09-16 05:45:37	<--	mfc (~mfc@unaffiliated/mfc) has quit (Ping timeout: 265 seconds)
2016-09-16 05:45:58	<--	jorj (~jorj@162.220.240.216) has quit (Ping timeout: 244 seconds)
2016-09-16 05:47:31	<--	ville (~ville@188-67-45-77.bb.dnainternet.fi) has quit (Ping timeout: 244 seconds)
2016-09-16 05:48:07	<--	Ipe_ (~Ipe@a91-156-244-1.elisa-laajakaista.fi) has quit (Quit: Konversation terminated!)
2016-09-16 05:48:43	-->	phinxy (~tehhhd@unaffiliated/phinxy) has joined ##c++
2016-09-16 05:49:08	<--	Lomex (~lomex@213.61.34.42) has quit (Remote host closed the connection)
2016-09-16 05:49:25	Circuitsoft	{struct C{int &a; C(int &b):a(b){} C(C &o)=delete;}; map<string,C> a; int b=0; auto x = a.emplace(piecewise_construct, forward_as_tuple("abc"), forward_as_tuple(b)); cout << x.first->first;}
2016-09-16 05:49:26	geordi	error: 'constexpr pair<_T1, _T2>::pair(const pair<_T1, _T2>&) [with _T1 = const string; _T2 = main(int, char**)::C]' declared to take const reference, but implicit declaration would take non-const
2016-09-16 05:49:31	Circuitsoft	There's my error.
2016-09-16 05:49:57	thinlizzy	!not a testcase
2016-09-16 05:49:58	nolyc	Stop! A testcase must 0) be short (<=50 lines) 1) be self-contained and 2) reproduce the problem. Don't paste another link here until: I) you've pasted your testcase to http://coliru.stacked-crooked.com II) there are no irrelevant compile errors and III) it reproduces the problem. See the testcase checklist at http://eel.is/c++/testcase/
2016-09-16 05:50:23	<--	reveredge (~reveredge@111.119.209.221) has quit (Quit: Leaving)
2016-09-16 05:50:51	-->	venmx (~pactadmin@macaronicheese.phys.susx.ac.uk) has joined ##c++
2016-09-16 05:50:58	-->	allen29 (~all@unaffiliated/allen29) has joined ##c++
2016-09-16 05:50:58		[05:50]
2016-09-16 05:51:16	Circuitsoft	Well, it's an error that I can't find the source of. It shows up when C is non-copyable, but I thought map <K, T> didn't require T to be copyable.
2016-09-16 05:51:20	-->	Lomex (~lomex@213.61.34.42) has joined ##c++
2016-09-16 05:51:25	w3z	btw, V-ille return x; and return (x); is meaningful for decltype(auto) functions (unfortunately)
2016-09-16 05:51:47	w3z	(unless thats changed for 17 and im not aware of it)
2016-09-16 05:52:01	V-ille	ah, indeed
2016-09-16 05:52:04	<--	Nomenclatura (~turtle@189.205.98.239) has quit (Remote host closed the connection)
2016-09-16 05:52:41	-->	asc232 (~Keith@179.38.232.249) has joined ##c++
2016-09-16 05:52:58	thinlizzy	{struct C{int &a; C(int &b):a(b){} C(C &o)=delete;}; map<string,C> a; int b=0; auto x = a.emplace(piecewise_construct, "abc",b); cout << x.first->first;}
2016-09-16 05:52:58	geordi	Same error.
2016-09-16 05:53:18	thinlizzy	{struct C{int &a; C(int &b):a(b){} C(C &o)=delete;}; map<string,C> a; int b=0; auto x = a.emplace(piecewise_construct, "abc",ref(b)); cout << x.first->first;}
2016-09-16 05:53:18	geordi	Still same error.
2016-09-16 05:53:23	thinlizzy	beats me :)
2016-09-16 05:53:28	-->	reveredge (~reveredge@111.119.209.221) has joined ##c++
2016-09-16 05:53:38	thinlizzy	{struct C{int &a; C(int &b):a(b){} C(C &o)=delete;}; map<string,C> a; int b=0; auto x = a.emplace(piecewise_construct, "abc",cref(b)); cout << x.first->first;}
2016-09-16 05:53:38	geordi	Again, same error.
2016-09-16 05:53:39	<--	drozdziak1 (~drozdziak@do-atman.cubiware.com) has quit (Quit: WeeChat 1.5)
2016-09-16 05:53:42	Circuitsoft	Removing C(C&o)=delete; makes the error not happen.
2016-09-16 05:53:51	w3z	the other weird ()s vs no ()s language oddity, name-lookup, but i cant think of a way to mix that in to a return statement
2016-09-16 05:54:34	Circuitsoft	{struct C{C(){} C(C &o)=delete;}; map<string,C> a; auto x = a.emplace(piecewise_construct, forward_as_tuple("abc"), forward_as_tuple()); cout << x.first->first;}
2016-09-16 05:54:35	geordi	Same error.
2016-09-16 05:54:48	thinlizzy	forward as tuple is just adding noise
2016-09-16 05:54:57	<--	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has quit (Quit: This computer has gone to sleep)
2016-09-16 05:55:18	Circuitsoft	True, but it's the only way to call that version of emplace()
2016-09-16 05:55:23	-->	SHC_ (~quassel@45.249.248.221) has joined ##c++
2016-09-16 05:56:14	Circuitsoft	http://en.cppreference.com/w/cpp/utility/pair/pair - #6
2016-09-16 05:56:31	Circuitsoft	"This is the only non-default constructor that can be used to create a pair of non-copyable non-movable types."
2016-09-16 05:56:33	thinlizzy	{ map<string,int> x; x.emplace(piecewise_construct,"argh",1); }
2016-09-16 05:56:34	geordi	error: no matching function for call to 'pair<const string, int>::pair(const piecewise_construct_t&, const char [5], int)'
2016-09-16 05:56:40	<--	SHC (~quassel@45.249.248.221) has quit (Disconnected by services)
2016-09-16 05:56:40	thinlizzy	aha
2016-09-16 05:56:42	--	SHC_ is now known as SHC
2016-09-16 05:56:49	thinlizzy	{struct C{int &a; C(int &b):a(b){} C(C &o)=delete;}; map<string,C> a; int b=0; auto x = a.emplace(piecewise_construct, "abc"_s,cref(b)); cout << x.first->first;}
2016-09-16 05:56:49	geordi	error: unable to find string literal operator 'operator""_s' with 'const char [4]', 'long unsigned int' arguments
2016-09-16 05:56:50	V-ille	C(C &o)=delete; is a fucked up copy constructor
2016-09-16 05:56:56	thinlizzy	{struct C{int &a; C(int &b):a(b){} C(C &o)=delete;}; map<string,C> a; int b=0; auto x = a.emplace(piecewise_construct, "abc"s,cref(b)); cout << x.first->first;}
2016-09-16 05:56:56	geordi	error: 'constexpr pair<_T1, _T2>::pair(const pair<_T1, _T2>&) [with _T1 = const string; _T2 = main(int, char**)::C]' declared to take const reference, but implicit declaration would take non-const
2016-09-16 05:57:15	-->	przemkovv-bis (~przemkovv@d83-37.icpnet.pl) has joined ##c++
2016-09-16 05:57:16	Circuitsoft	V-ille: That's a copy constructor for a non-copyable object.
2016-09-16 05:57:22	V-ille	no it's not
2016-09-16 05:57:25	thinlizzy	heh, you are missing const
2016-09-16 05:57:37	Circuitsoft	Yes, but where?
2016-09-16 05:57:38	V-ille	geordi: replace C & with const C&
2016-09-16 05:57:39	geordi	error: no matching function for call to 'pair<const string, main(int, char**)::C>::pair(const piecewise_construct_t&, string, reference_wrapper<const int>)'
2016-09-16 05:57:43	V-ille	ffs
2016-09-16 05:57:49	V-ille	{struct C{C(){} C(const C &o)=delete;}; map<string,C> a; auto x = a.emplace(piecewise_construct, forward_as_tuple("abc"), forward_as_tuple()); cout << x.first->first;}
2016-09-16 05:57:50	geordi	abc
2016-09-16 05:57:54	thinlizzy	\o/
2016-09-16 05:58:01	<--	kw01f (~kw01f@pD9FB19AA.dip0.t-ipconnect.de) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-09-16 05:58:02	thinlizzy	I did not see the lack of const. nice one V-ille
2016-09-16 05:58:38	w3z	{struct C{int &a; C(int &b):a(b){} C(const C &o)=delete;}; map<string,C> a; int b=0; auto x = a.emplace("abc"s,b); cout << x.first->first;}
2016-09-16 05:58:39	geordi	abc
2016-09-16 05:58:46	Circuitsoft	Got it. Thank you so much!
2016-09-16 05:59:43	Circuitsoft	I've gotten a few compile errors along the lines of "... is invalid. Did you mean ...?". That might be pretty handy for not-quite-correct copy constructors.
2016-09-16 05:59:50	<--	systemfault (~rcyr@unaffiliated/rcyr) has quit (Quit: Bye!)
2016-09-16 05:59:54	w3z	{f(S{});} struct S{friend void f(S){}};
2016-09-16 05:59:55	geordi	<no output>
2016-09-16 05:59:58	<--	araml (~araml@unaffiliated/araml) has quit (Quit: WeeChat 1.4)
2016-09-16 06:00:00	thinlizzy	you mess up with C++, C++ messes up with you
2016-09-16 06:00:03	w3z	{(f)(S{});} struct S{friend void f(S){}};
2016-09-16 06:00:03	geordi	error: 'f' was not declared in this scope
2016-09-16 06:00:30	w3z	that ()s oddity, but how to work it in to a return statement
2016-09-16 06:01:46	w3z	: {(f)(S{});} struct S{friend void f(S){}}; void f(S); // for clarification, (f) makes f an expression independent of the call, so no ADL
2016-09-16 06:01:47	-->	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has joined ##c++
2016-09-16 06:02:12	<--	magnicida (~raskolnik@2a02:8109:8c80:231:ea39:dfff:fe4d:275b) has quit (Read error: Connection reset by peer)
2016-09-16 06:02:13	<--	SteffanW (~steffanw@ip4da40774.direct-adsl.nl) has quit (Read error: Connection reset by peer)
2016-09-16 06:02:21	w3z	and no geordi all of a sudden, hes my irc buddy, who else will i talk to :(
2016-09-16 06:02:44	w3z	ah the :
2016-09-16 06:02:44	Circuitsoft	{ cout << "Hi!" << endl;}
2016-09-16 06:02:45	geordi	Hi!
2016-09-16 06:02:46	thinlizzy	this is major tom to ground control...
2016-09-16 06:02:56	w3z	{(f)(S{});} struct S{friend void f(S){}}; void f(S);
2016-09-16 06:02:56	geordi	<no output>
2016-09-16 06:03:15	<--	seishun (~Kakera@62.85.7.128) has quit (Ping timeout: 276 seconds)
2016-09-16 06:03:55	-->	alexmh (~alex@c-67-166-124-41.hsd1.ut.comcast.net) has joined ##c++
2016-09-16 06:04:36	-->	mfc (~mfc@unaffiliated/mfc) has joined ##c++
2016-09-16 06:04:42	<--	jshjsh (~jshjsh@172.56.17.55) has quit (Ping timeout: 264 seconds)
2016-09-16 06:06:34	<--	Betal (~Betal@unaffiliated/betal) has quit (Remote host closed the connection)
2016-09-16 06:06:34		[06:06]
2016-09-16 06:06:42	<--	ignatiz- (50c1d51a@gateway/web/freenode/ip.80.193.213.26) has quit (Quit: Page closed)
2016-09-16 06:07:29	<--	ERROH (mama@unaffiliated/almathea) has quit (Ping timeout: 240 seconds)
2016-09-16 06:07:29	<--	mfc_ (~mfc@unaffiliated/mfc) has quit (Ping timeout: 272 seconds)
2016-09-16 06:08:56	<--	daniel-s (~daniel-s@bla31-1-82-241-231-138.fbx.proxad.net) has quit (Remote host closed the connection)
2016-09-16 06:09:30	-->	ville (~ville@87-93-153-31.bb.dnainternet.fi) has joined ##c++
2016-09-16 06:10:26	<--	seru76 (~seru76@77.89.191.179) has quit (Quit: Leaving)
2016-09-16 06:11:15	-->	SHC_ (~quassel@45.249.248.221) has joined ##c++
2016-09-16 06:11:20	<--	SHC_ (~quassel@45.249.248.221) has quit (Read error: Connection reset by peer)
2016-09-16 06:12:13	-->	InfoTest (~Thunderbi@tgn.188.54.5.dts.mg) has joined ##c++
2016-09-16 06:12:21	<--	Poulay_Brayzay (~nahalay_p@217.167.1.65) has quit
2016-09-16 06:13:35	-->	quickbrownfox (~henrique_@177.131.178.169) has joined ##c++
2016-09-16 06:14:27	<--	SHC (~quassel@45.249.248.221) has quit (Ping timeout: 248 seconds)
2016-09-16 06:14:52	-->	iceiceice (~chris@pool-71-172-187-9.nwrknj.east.verizon.net) has joined ##c++
2016-09-16 06:15:05	<--	vicenteH (~user@195.235.96.150) has quit (Ping timeout: 248 seconds)
2016-09-16 06:16:51	-->	Lingo_ (~Lingo@h-128-85.a258.priv.bahnhof.se) has joined ##c++
2016-09-16 06:17:27	<--	wolfcub (~henrique_@177.131.178.169) has quit (Ping timeout: 244 seconds)
2016-09-16 06:20:17	<--	unK_ (~drunK@dynamic-78-8-102-22.ssp.dialog.net.pl) has quit (Quit: KVIrc 4.3.1 Aria http://www.kvirc.net/)
2016-09-16 06:21:00	<--	phlpp (~Philipp@rihanna.cb.uni-bonn.de) has quit (Quit: Leaving)
2016-09-16 06:21:16	-->	nealshire (~Nealshire@unaffiliated/nealshire) has joined ##c++
2016-09-16 06:21:18	<--	MrP[Home] (~Palsson@c-a46fe555.06-213-6e6b701.cust.bredbandsbolaget.se) has quit (Read error: Connection reset by peer)
2016-09-16 06:21:32	-->	ERROH (mama@unaffiliated/almathea) has joined ##c++
2016-09-16 06:23:04	<--	brendel (~brice@LAubervilliers-656-1-215-246.w217-128.abo.wanadoo.fr) has quit (Ping timeout: 240 seconds)
2016-09-16 06:23:04		[06:23]
2016-09-16 06:23:08	<--	secondwtq (~ftlight_n@118.193.168.40) has quit (Ping timeout: 244 seconds)
2016-09-16 06:23:42	-->	mfc_ (~mfc@unaffiliated/mfc) has joined ##c++
2016-09-16 06:23:48	emilsp	ayyy, so I can't get a return value from a thread, can I ?
2016-09-16 06:24:03	-->	ecsel (~ecsel@198.8.80.219) has joined ##c++
2016-09-16 06:24:23	-->	Leovale (~Leovale@104-247-242-34.cpe.teksavvy.com) has joined ##c++
2016-09-16 06:25:45	<--	mfc (~mfc@unaffiliated/mfc) has quit (Ping timeout: 244 seconds)
2016-09-16 06:25:47	-->	Vuks (~Vuks@unaffiliated/vuks69) has joined ##c++
2016-09-16 06:26:32	<--	venmx (~pactadmin@macaronicheese.phys.susx.ac.uk) has quit (Quit: leaving)
2016-09-16 06:26:55	ville	umm...
2016-09-16 06:27:08	-->	SpaceDanceCJ (~Sasha@37.45.163.65) has joined ##c++
2016-09-16 06:27:13	ville	i guess no is a safe answer here
2016-09-16 06:27:18	<--	satirev (~Satirev@177.163.77.65) has quit (Ping timeout: 244 seconds)
2016-09-16 06:27:53	-->	secondwtq (~ftlight_n@118.193.168.40) has joined ##c++
2016-09-16 06:27:56	emilsp	well, std::async probably is what I'm looking for anyway
2016-09-16 06:29:18	-->	wrs20 (~wrs202@mapc-4044.bath.ac.uk) has joined ##c++
2016-09-16 06:29:37	<--	Mike11 (~Mike@unaffiliated/mike11) has quit (Quit: Leaving.)
2016-09-16 06:30:05	-->	seishun (~Kakera@62.85.7.128) has joined ##c++
2016-09-16 06:30:11	<--	Sculptor (~Sculptor@cable-24-135-26-151.dynamic.sbb.rs) has quit (Read error: Connection reset by peer)
2016-09-16 06:30:29	-->	xnavor (~xnavor@78-70-4-240-no171.business.telia.com) has joined ##c++
2016-09-16 06:30:30	<--	elnormous (~elnormous@91.105.17.158) has quit (Remote host closed the connection)
2016-09-16 06:30:33	-->	Sculptor (~Sculptor@cable-24-135-26-151.dynamic.sbb.rs) has joined ##c++
2016-09-16 06:30:36	-->	code_zombie (~code_zomb@2605:a601:aa1:5c00:d96:ef14:3e95:f0f6) has joined ##c++
2016-09-16 06:31:10	<--	Lord_of_Life (Elite12246@gateway/shell/elitebnc/x-iwcejbwahsvyuikb) has quit (Excess Flood)
2016-09-16 06:31:16	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-16 06:31:38	-->	kw01f (~kw01f@pD9FB19AA.dip0.t-ipconnect.de) has joined ##c++
2016-09-16 06:34:37	<--	coincoin4ever (~coincoin@178.16.163.28) has quit (Quit: \_o< 1.5)
2016-09-16 06:34:58	-->	satirev (~Satirev@177.163.77.65) has joined ##c++
2016-09-16 06:35:01	<--	satirev (~Satirev@177.163.77.65) has quit (Max SendQ exceeded)
2016-09-16 06:35:08	-->	Lord_of_Life (Elite12246@gateway/shell/elitebnc/x-vxsgkmdvkdommozn) has joined ##c++
2016-09-16 06:35:29	-->	satirev (~Satirev@177.163.77.65) has joined ##c++
2016-09-16 06:35:48	-->	pavshn (~pavshn@ppp95-165-153-84.pppoe.spdop.ru) has joined ##c++
2016-09-16 06:36:06	<--	satirev (~Satirev@177.163.77.65) has quit (Max SendQ exceeded)
2016-09-16 06:36:26	-->	Gathis (~TheBlack@unaffiliated/gathis) has joined ##c++
2016-09-16 06:37:39	-->	Albori (~Albori@67-43-240-110.fidnet.com) has joined ##c++
2016-09-16 06:37:51	<--	mfc_ (~mfc@unaffiliated/mfc) has quit (Read error: Connection reset by peer)
2016-09-16 06:38:08	<--	p4trix (~p4trix@71.red-79-145-250.dynamicip.rima-tde.net) has quit (Quit: Leaving)
2016-09-16 06:38:08		[06:38]
2016-09-16 06:38:22	<--	Gathis (~TheBlack@unaffiliated/gathis) has quit (Remote host closed the connection)
2016-09-16 06:38:22	-->	mfc_ (~mfc@unaffiliated/mfc) has joined ##c++
2016-09-16 06:38:35	-->	Betal (~Betal@unaffiliated/betal) has joined ##c++
2016-09-16 06:39:03	<--	occamsblazer (~occamsbla@131.228.197.41) has quit (Read error: Connection reset by peer)
2016-09-16 06:39:41	-->	occamsblazer (~occamsbla@131.228.197.41) has joined ##c++
2016-09-16 06:41:21	-->	Melite (~Melite@218.51.34.198) has joined ##c++
2016-09-16 06:41:34	<--	iceiceice (~chris@pool-71-172-187-9.nwrknj.east.verizon.net) has quit (Ping timeout: 240 seconds)
2016-09-16 06:42:40	<--	Cppg2 (~Cppg@host109-149-152-50.range109-149.btcentralplus.com) has quit (Ping timeout: 265 seconds)
2016-09-16 06:44:33	-->	SwiftMatt (~Objective@162.242.94.208) has joined ##c++
2016-09-16 06:45:41	<--	Lingo_ (~Lingo@h-128-85.a258.priv.bahnhof.se) has quit (Quit: Be back later ...)
2016-09-16 06:46:13	-->	Lingo_ (~Lingo@h-128-85.a258.priv.bahnhof.se) has joined ##c++
2016-09-16 06:46:13	-->	Vingador (~quassel@191.248.248.39) has joined ##c++
2016-09-16 06:46:32	-->	mfc (~mfc@unaffiliated/mfc) has joined ##c++
2016-09-16 06:47:57	-->	ibouvousaime (~ibouvousa@41.83.32.179) has joined ##c++
2016-09-16 06:48:03	-->	Borkr (~Borkr@83.243.155.126) has joined ##c++
2016-09-16 06:48:27	-->	iceiceice (~chris@pool-71-172-187-9.nwrknj.east.verizon.net) has joined ##c++
2016-09-16 06:49:45	-->	Gathis (~TheBlack@unaffiliated/gathis) has joined ##c++
2016-09-16 06:49:55	<--	mfc_ (~mfc@unaffiliated/mfc) has quit (Ping timeout: 272 seconds)
2016-09-16 06:50:43	<--	Lingo_ (~Lingo@h-128-85.a258.priv.bahnhof.se) has quit (Ping timeout: 248 seconds)
2016-09-16 06:51:38	-->	TheSeven (~quassel@rockbox/developer/TheSeven) has joined ##c++
2016-09-16 06:52:01	-->	harha_ (harha_@y55.ip4.netikka.fi) has joined ##c++
2016-09-16 06:52:55	<--	oxygene (~fred@ALille-652-1-121-58.w2-5.abo.wanadoo.fr) has quit (Quit: Quitte)
2016-09-16 06:53:14	<--	ville (~ville@87-93-153-31.bb.dnainternet.fi) has quit (Quit: kernel)
2016-09-16 06:53:14		[06:53]
2016-09-16 06:54:06	-->	iZ6S82 (dufijmic@bitcoinshell.mooo.com) has joined ##c++
2016-09-16 06:55:11	<--	avernon (~A_Vernon@2610:130:104:300:2446:2d03:bc8a:8146) has left ##c++
2016-09-16 06:55:15	-->	Z1M (~Z1M@207.206.227.4) has joined ##c++
2016-09-16 06:57:32	<--	Z1M (~Z1M@207.206.227.4) has left ##c++
2016-09-16 06:57:38	-->	ted_ (~tehhhd@78-68-207-219-no225.tbcn.telia.com) has joined ##c++
2016-09-16 06:58:38	<--	V-ille (~ville@59ec7803.symbio.com) has quit (Ping timeout: 244 seconds)
2016-09-16 06:59:07	<--	phinxy (~tehhhd@unaffiliated/phinxy) has quit (Ping timeout: 255 seconds)
2016-09-16 06:59:07	-->	Crazylemon64 (~Crazylemo@c-98-237-179-255.hsd1.wa.comcast.net) has joined ##c++
2016-09-16 07:00:43	<--	iZ6S82 (dufijmic@bitcoinshell.mooo.com) has quit (Quit: iZ6S82)
2016-09-16 07:02:21	-->	dedgrant (~dedgrant@192-40-237-82.dedicated.allstream.net) has joined ##c++
2016-09-16 07:02:43	-->	bumbar (~bumbar@unaffiliated/bumbar) has joined ##c++
2016-09-16 07:02:48	<--	Lomex (~lomex@213.61.34.42) has quit (Remote host closed the connection)
2016-09-16 07:03:02	-->	mfc_ (~mfc@unaffiliated/mfc) has joined ##c++
2016-09-16 07:03:21	-->	ghsk (~dmitri@public-241-239.nat.utoronto.ca) has joined ##c++
2016-09-16 07:04:10	-->	chasmo77 (~chas77@158.183-62-69.ftth.swbr.surewest.net) has joined ##c++
2016-09-16 07:04:53	<--	mfc (~mfc@unaffiliated/mfc) has quit (Ping timeout: 265 seconds)
2016-09-16 07:04:58	-->	forgottenone (~forgotten@195.142.43.212) has joined ##c++
2016-09-16 07:06:35	-->	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has joined ##c++
2016-09-16 07:10:33	-->	snyp (~Snyp@150.129.132.221) has joined ##c++
2016-09-16 07:10:33		[07:10]
2016-09-16 07:10:34	<--	TMM (~hp@fsf/member/pdpc.professional.tmm) has quit (Quit: Ex-Chat)
2016-09-16 07:10:44	-->	RebelCoder (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has joined ##c++
2016-09-16 07:12:10	<--	LordDagothur (~Dagothur@2607:fea8:921f:fc1a:2118:9c94:9dcf:b3e7) has quit (Ping timeout: 255 seconds)
2016-09-16 07:12:47	-->	Lomex (~lomex@213.61.34.42) has joined ##c++
2016-09-16 07:13:58	-->	sedeki (~textual@unaffiliated/sedeki) has joined ##c++
2016-09-16 07:14:24	-->	Adva (~Hyrule@2a02:810a:12c0:5068:bc1a:dc4e:c88f:dc55) has joined ##c++
2016-09-16 07:15:06	<--	rbern (~rbern@unaffiliated/rbern) has quit (Read error: Connection reset by peer)
2016-09-16 07:17:38	-->	liquidstone (~liquidsto@92.55.92.232) has joined ##c++
2016-09-16 07:17:39	<--	roentgen (~roentgen@unaffiliated/roentgen) has quit (Quit: WeeChat 1.5)
2016-09-16 07:17:46	-->	rorro (~rorro@c-227-189.eduroam.liu.se) has joined ##c++
2016-09-16 07:17:50	<--	Lomex (~lomex@213.61.34.42) has quit (Ping timeout: 260 seconds)
2016-09-16 07:17:52	-->	EvilPeng1 (~EvilPengu@2605:e000:6189:9600:2dc7:8760:25ad:7035) has joined ##c++
2016-09-16 07:19:07	-->	V-ille (~ville@81-175-149-170.bb.dnainternet.fi) has joined ##c++
2016-09-16 07:19:20	<--	rorro (~rorro@c-227-189.eduroam.liu.se) has quit (Client Quit)
2016-09-16 07:20:00	<--	Borkr (~Borkr@83.243.155.126) has quit (Remote host closed the connection)
2016-09-16 07:20:11	<--	reveredge (~reveredge@111.119.209.221) has quit (Quit: Leaving)
2016-09-16 07:21:00	-->	Z1M (~Z1M@207.206.227.4) has joined ##c++
2016-09-16 07:21:10	<--	ZMatt2 (~ZMatt2@host116-147-dynamic.61-82-r.retail.telecomitalia.it) has quit (Ping timeout: 255 seconds)
2016-09-16 07:21:10	-->	phinxy (~tehhhd@unaffiliated/phinxy) has joined ##c++
2016-09-16 07:21:19	<--	phinxy (~tehhhd@unaffiliated/phinxy) has quit (Read error: Connection reset by peer)
2016-09-16 07:21:38	<--	ted_ (~tehhhd@78-68-207-219-no225.tbcn.telia.com) has quit (Read error: Connection reset by peer)
2016-09-16 07:22:26	<--	SpaceDanceCJ (~Sasha@37.45.163.65) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-09-16 07:22:48	-->	reveredge (~reveredge@111.119.209.221) has joined ##c++
2016-09-16 07:23:41	-->	Miroboru (~myrvoll@88.95.165.75) has joined ##c++
2016-09-16 07:23:44	<--	djcb (~user@204.77.216.10) has quit (Remote host closed the connection)
2016-09-16 07:24:36	-->	rbern (~rbern@unaffiliated/rbern) has joined ##c++
2016-09-16 07:24:40	<--	illerucis (~illerucis@199.201.65.132) has quit (Read error: Connection reset by peer)
2016-09-16 07:25:17	-->	illerucis (~illerucis@199.201.65.132) has joined ##c++
2016-09-16 07:25:29	<--	Z1M (~Z1M@207.206.227.4) has quit (Ping timeout: 250 seconds)
2016-09-16 07:26:30	<--	fahadash (uid44972@gateway/web/irccloud.com/x-dscjtmuuxvbgrhns) has quit (Quit: Connection closed for inactivity)
2016-09-16 07:26:30		[07:26]
2016-09-16 07:28:24	-->	salamanderrake_ (~quassel@v-216-52-148-169.unman-vds.premium-chicago.nfoservers.com) has joined ##c++
2016-09-16 07:30:12	-->	roentgen (~roentgen@2a02:2f0a:b04a:9900:8c67:d509:54bd:6929) has joined ##c++
2016-09-16 07:30:14	<--	roentgen (~roentgen@2a02:2f0a:b04a:9900:8c67:d509:54bd:6929) has quit (Changing host)
2016-09-16 07:30:14	-->	roentgen (~roentgen@unaffiliated/roentgen) has joined ##c++
2016-09-16 07:30:49	<--	Guest86236 (~rudy@23-119-234-66.lightspeed.jcvlfl.sbcglobal.net) has quit (Quit: Leaving)
2016-09-16 07:30:53	-->	elnormous (~elnormous@91.105.17.158) has joined ##c++
2016-09-16 07:31:39	<--	salamanderrake (~quassel@v-216-52-148-169.unman-vds.premium-chicago.nfoservers.com) has quit (Ping timeout: 276 seconds)
2016-09-16 07:34:14	-->	SteffanW (~steffanw@ip4da40774.direct-adsl.nl) has joined ##c++
2016-09-16 07:34:42	<--	Vingador (~quassel@191.248.248.39) has quit (Remote host closed the connection)
2016-09-16 07:35:30	<--	elnormous (~elnormous@91.105.17.158) has quit (Ping timeout: 244 seconds)
2016-09-16 07:36:04	<--	iceiceice (~chris@pool-71-172-187-9.nwrknj.east.verizon.net) has quit (Ping timeout: 240 seconds)
2016-09-16 07:38:05	<--	hoshi (~hoshi@dru12.neoplus.adsl.tpnet.pl) has quit (Read error: Connection reset by peer)
2016-09-16 07:38:17	<--	salamanderrake_ (~quassel@v-216-52-148-169.unman-vds.premium-chicago.nfoservers.com) has quit (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
2016-09-16 07:39:06	<--	plee (~kurt@89.10.219.180) has quit (Read error: Connection reset by peer)
2016-09-16 07:39:24	-->	squelch (~squelch@169.235.217.0) has joined ##c++
2016-09-16 07:39:37	-->	plee (~kurt@89.10.219.180) has joined ##c++
2016-09-16 07:40:02	-->	LKoen (~LKoen@2a01:e35:2eed:a430:a0d3:7df0:64aa:3a61) has joined ##c++
2016-09-16 07:40:07	<--	Miroboru (~myrvoll@88.95.165.75) has quit (Ping timeout: 244 seconds)
2016-09-16 07:40:19	<--	RedOrangeZ (~RedOrange@c-73-30-227-113.hsd1.pa.comcast.net) has quit (Ping timeout: 248 seconds)
2016-09-16 07:40:30	<--	illerucis (~illerucis@199.201.65.132) has quit (Read error: Connection reset by peer)
2016-09-16 07:40:32	-->	hoshi (~hoshi@dru12.neoplus.adsl.tpnet.pl) has joined ##c++
2016-09-16 07:40:34	-->	salamanderrake (~quassel@v-216-52-148-169.unman-vds.premium-chicago.nfoservers.com) has joined ##c++
2016-09-16 07:40:39	-->	antipsychiatry (50f68c19@gateway/web/cgi-irc/kiwiirc.com/ip.80.246.140.25) has joined ##c++
2016-09-16 07:41:04	-->	illerucis (~illerucis@2620:10d:c091:200::8:2b1) has joined ##c++
2016-09-16 07:42:01	<--	antipsychiatry (50f68c19@gateway/web/cgi-irc/kiwiirc.com/ip.80.246.140.25) has quit (Client Quit)
2016-09-16 07:42:01		[07:42]
2016-09-16 07:42:26	<--	blueness (~blueness@gentoo/developer/blueness) has quit (Quit: blueness)
2016-09-16 07:44:04	-->	RedOrangeZ (~RedOrange@c-73-30-227-113.hsd1.pa.comcast.net) has joined ##c++
2016-09-16 07:45:37	-->	TheLoneMilkMan (1827617a@gateway/web/freenode/ip.24.39.97.122) has joined ##c++
2016-09-16 07:45:49	<--	reveredge (~reveredge@111.119.209.221) has quit (Quit: Leaving)
2016-09-16 07:45:55	-->	mfc (~mfc@unaffiliated/mfc) has joined ##c++
2016-09-16 07:46:12	<--	ghsk (~dmitri@public-241-239.nat.utoronto.ca) has quit (Quit: leaving)
2016-09-16 07:46:41	-->	plusone (~plusone@176.24.26.166) has joined ##c++
2016-09-16 07:47:13	<--	flavi0 (~anon@unaffiliated/flavi0) has quit (Quit: leaving)
2016-09-16 07:48:05	<--	hk238 (~kvirc@unaffiliated/hk238) has quit (Quit: http://www.kvirc.net/ 4.9.2 Aria)
2016-09-16 07:48:25	<--	mfc_ (~mfc@unaffiliated/mfc) has quit (Ping timeout: 244 seconds)
2016-09-16 07:48:31	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-16 07:49:23	<--	tabrez (~tabrez@124.40.246.86) has quit (Ping timeout: 265 seconds)
2016-09-16 07:50:50	-->	tabrez (~tabrez@124.40.246.86) has joined ##c++
2016-09-16 07:51:50	-->	reveredge (~reveredge@111.119.209.221) has joined ##c++
2016-09-16 07:51:55	<--	reveredge (~reveredge@111.119.209.221) has quit (Read error: Connection reset by peer)
2016-09-16 07:52:05	-->	AkaiSora (~quassel@197.17.56.194) has joined ##c++
2016-09-16 07:52:21	<--	SparrowBG (~sparrow@213.130.72.122) has quit (Quit: Leaving.)
2016-09-16 07:52:25	Circuitsoft	So, I'm getting a segfault on std::thread(&decltype(*this)::run, this). Is there a better way to have thread call a member function?
2016-09-16 07:52:48	-->	reveredge (~reveredge@111.119.209.221) has joined ##c++
2016-09-16 07:53:17	Circuitsoft	I tried renaming the function to operator() and just starting std::thread(std::ref(*this)), but that has more other errors, seemingly related to this not being a copyable type.
2016-09-16 07:54:26	-->	TMM (~hp@fsf/member/pdpc.professional.tmm) has joined ##c++
2016-09-16 07:54:34	<--	snyp (~Snyp@150.129.132.221) has quit (Ping timeout: 240 seconds)
2016-09-16 07:56:01	-->	bsdbeard (~none@unaffiliated/bsdbeard) has joined ##c++
2016-09-16 07:56:16	-->	paule32 (~jens@p4FFC5577.dip0.t-ipconnect.de) has joined ##c++
2016-09-16 07:56:22	paule32	hello
2016-09-16 07:56:37	-->	mfc_ (~mfc@unaffiliated/mfc) has joined ##c++
2016-09-16 07:56:46	paule32	i need your help: i get error message "no match..."
2016-09-16 07:56:47	paule32	https://paste.fedoraproject.org/429067/40484731/
2016-09-16 07:56:55	paule32	line 109
2016-09-16 07:57:49	et	{ X Circuitsoft; Circuitsoft.x(); } struct X { void run() { cout << "Hello world"; } void x() { std::thread t([this]{this->run();}); t.join(); } };
2016-09-16 07:57:49		[07:57]
2016-09-16 07:57:50	geordi	Hello world
2016-09-16 07:57:59	<--	reveredge (~reveredge@111.119.209.221) has quit (Ping timeout: 250 seconds)
2016-09-16 07:58:04	<--	ibouvousaime (~ibouvousa@41.83.32.179) has quit (Ping timeout: 255 seconds)
2016-09-16 07:58:10	-->	snyp (~Snyp@150.129.132.145) has joined ##c++
2016-09-16 07:59:25	-->	Cppg (~Cppg@host109-149-152-50.range109-149.btcentralplus.com) has joined ##c++
2016-09-16 07:59:37	<--	RoBo_V (~robo@124.253.13.133) has quit (Ping timeout: 248 seconds)
2016-09-16 07:59:47	bsdbeard	paule32, unique ptr constructor takes 1 argument, not 3 ... you want make_unique
2016-09-16 08:00:03	-->	z8z (~x@ac230029.ppp.asahi-net.or.jp) has joined ##c++
2016-09-16 08:00:13	<--	mfc (~mfc@unaffiliated/mfc) has quit (Ping timeout: 272 seconds)
2016-09-16 08:00:22	-->	RoBo_V (~robo@124.253.0.11) has joined ##c++
2016-09-16 08:00:33	-->	Miroboru (~myrvoll@88.95.165.75) has joined ##c++
2016-09-16 08:00:38	-->	salamanderrake_ (~quassel@v-216-52-148-169.unman-vds.premium-chicago.nfoservers.com) has joined ##c++
2016-09-16 08:00:44	bsdbeard	speaking of unique_ptrs... why cant you assign a vector an initializer list with objects that can only be moved (not copied)? Shouldnt it move everything in the initializer list anyway
2016-09-16 08:00:53	et	Circuitsoft: std::thread(something); is always an error as you don't detach or join the thread
2016-09-16 08:01:31	-->	DEElekgolo (~DEElekgol@2602:30a:2e0e:a7a0:59b9:d3f7:73cb:cff8) has joined ##c++
2016-09-16 08:02:27	-->	blueness (~blueness@gentoo/developer/blueness) has joined ##c++
2016-09-16 08:02:28	w3z	theyre const
2016-09-16 08:02:53	Circuitsoft	ed: My issue was fixed by your suggestion of the inline function to thread.
2016-09-16 08:03:00	Circuitsoft	Capturing this.
2016-09-16 08:03:10	-->	logan_e_ (uid164592@gateway/web/irccloud.com/x-ezijoyhjaigrxzge) has joined ##c++
2016-09-16 08:03:58	bsdbeard	{vector<dontcopyme> v = {dontcopyme()};} struct dontcopyme {dontcopyme() = default; dontcopyme(dontcopyme&&) = default;};
2016-09-16 08:03:59	geordi	error: use of deleted function 'constexpr dontcopyme::dontcopyme(const dontcopyme&)'
2016-09-16 08:04:01	<--	salamanderrake (~quassel@v-216-52-148-169.unman-vds.premium-chicago.nfoservers.com) has quit (Ping timeout: 272 seconds)
2016-09-16 08:04:16	bsdbeard	I mean, it seems reasonable that should work ^, you can use emplace_back() just fine
2016-09-16 08:04:21	bsdbeard	oh well
2016-09-16 08:04:26	w3z	{initializer_list<int> L{0}; cout<<TYPE(*begin(L));}
2016-09-16 08:04:27	geordi	lvalue int const
2016-09-16 08:04:29	bsdbeard	:(
2016-09-16 08:04:55	paule32	bsdbeard: can you give me a snippet - thx
2016-09-16 08:05:18	bsdbeard	paule32, a snippet of what? just use make_unique<your long-ass class here> (2.12,varA,varB);
2016-09-16 08:05:54	w3z	a nippet to add to his collection of snippets that constitute his homework
2016-09-16 08:06:00	w3z	s
2016-09-16 08:06:02	bsdbeard	thats homework?
2016-09-16 08:06:11	bsdbeard	it looks terrible
2016-09-16 08:06:15	bsdbeard	whatever is going on there
2016-09-16 08:06:16	w3z	its the same ~20 lines for 3 days
2016-09-16 08:06:42	Tachyon_	is any history for this channel ? like, somewhere where is logged everything by a bot ?
2016-09-16 08:07:03	w3z	no, this channel elects not to be logged
2016-09-16 08:07:40	Tachyon_	I have a question I put few days ago but I had to leave and I couldn't see if anyone gave me an answer
2016-09-16 08:07:41	w3z	btw, i wrote up a quick runtime tuple lookup in answer to your question yesterday bsdbeard
2016-09-16 08:08:03	bsdbeard	w3z, oh, I think SlashLife made one too and put it on github?
2016-09-16 08:08:13	-->	iceiceice (~chris@pool-71-172-187-9.nwrknj.east.verizon.net) has joined ##c++
2016-09-16 08:08:27	w3z	i doubt its as nifty keen as mine
2016-09-16 08:08:46	bsdbeard	well you can't say that and not share it! ;-)
2016-09-16 08:09:17	bsdbeard	the wisdom of nine thousand standardese statements combined into one c++ expression!
2016-09-16 08:10:19	w3z	looking in the history ..
2016-09-16 08:10:43	-->	reveredge (~reveredge@111.119.209.221) has joined ##c++
2016-09-16 08:10:59	w3z	http://melpon.org/wandbox/permlink/RcrmKDRkEX8MyGEY
2016-09-16 08:11:15	<--	blueness (~blueness@gentoo/developer/blueness) has quit (Quit: blueness)
2016-09-16 08:11:27	<--	zap0 (~moofy@14-201-222-143.tpgi.com.au) has quit (Quit: zap0)
2016-09-16 08:11:50	-->	rudy_ (~rudy@23-119-234-66.lightspeed.jcvlfl.sbcglobal.net) has joined ##c++
2016-09-16 08:11:59	w3z	or simpler, http://melpon.org/wandbox/permlink/VfkVEjIM5k5uciBI
2016-09-16 08:12:15	--	rudy_ is now known as Guest58292
2016-09-16 08:13:24	<--	mfc_ (~mfc@unaffiliated/mfc) has quit (Read error: Connection reset by peer)
2016-09-16 08:13:24		[08:13]
2016-09-16 08:13:40	bsdbeard	hmm so a is treated as contexpr?
2016-09-16 08:13:45	bsdbeard	i didnt even know thats possible
2016-09-16 08:14:12	Circuitsoft	So, now I'm getting an std::bad_alloc, but it doesn't happen under gdb.
2016-09-16 08:14:19	w3z	its an integral_constant, it has a constexpr conversion function
2016-09-16 08:14:57	<--	salamanderrake_ (~quassel@v-216-52-148-169.unman-vds.premium-chicago.nfoservers.com) has quit (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
2016-09-16 08:14:57	bsdbeard	the one SlashLife was working on was very different, it was a generic way to return a compatible type for a pair<T, V> (so that the function would return the lowest common denominator of T and V)
2016-09-16 08:15:24	-->	salamanderrake (~quassel@v-216-52-148-169.unman-vds.premium-chicago.nfoservers.com) has joined ##c++
2016-09-16 08:15:25	<--	EvilPeng1 (~EvilPengu@2605:e000:6189:9600:2dc7:8760:25ad:7035) has quit (Quit: WeeChat 1.0.1)
2016-09-16 08:15:39	-->	EvilPenguin (~EvilPengu@2605:e000:6189:9600:2dc7:8760:25ad:7035) has joined ##c++
2016-09-16 08:15:40	bsdbeard	so, e.g. int, int returns int. base*, derived* returns base*, int,char returns int, etc.
2016-09-16 08:15:49	<--	megaTherion_ (~therion@unix.io) has left ##c++
2016-09-16 08:16:03	-->	megaTherion (~therion@unix.io) has joined ##c++
2016-09-16 08:16:51	-->	blueness (~blueness@gentoo/developer/blueness) has joined ##c++
2016-09-16 08:16:51	w3z	thats a different problem, the one i linked just simply assumes that the elements of the tuple have a common representation they can all be converted to
2016-09-16 08:17:24	bsdbeard	yeah i got it, the second example was more easily understandable
2016-09-16 08:17:35	-->	wanderman (~wanderman@unaffiliated/wanderman) has joined ##c++
2016-09-16 08:18:27	<--	hoshi (~hoshi@dru12.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 276 seconds)
2016-09-16 08:18:54	w3z	obviously, i wouldnt recommend using it, more of a modern c++ wankery/neato tour
2016-09-16 08:19:38	<--	nacon (~nacon@unaffiliated/nacon) has quit (Quit: leaving)
2016-09-16 08:20:21	-->	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has joined ##c++
2016-09-16 08:22:21	<--	blueness (~blueness@gentoo/developer/blueness) has quit (Quit: blueness)
2016-09-16 08:23:26	bsdbeard	I havent really used C++ in 2 years and just finally got back to it, is this really the right way to do an operator=(thing) for a resource managing class? http://termbin.com/mdqu , assuming i have a copy constructor, move constructor and destructor
2016-09-16 08:24:21	w3z	for a simple copy assignment, eh, sure
2016-09-16 08:25:10	bsdbeard	someting just doesnt feel right, but im not sure what
2016-09-16 08:25:15	-->	hoshi (~hoshi@acgf133.neoplus.adsl.tpnet.pl) has joined ##c++
2016-09-16 08:25:21	w3z	whether its the best way depends on the cost of constructing node_cache, but if its that simple, its fine
2016-09-16 08:25:40	bsdbeard	the cost is high, but its very rare so it doesnt matter
2016-09-16 08:25:45	-->	blueness (~blueness@gentoo/developer/blueness) has joined ##c++
2016-09-16 08:26:24	--	unreal_ is now known as unreal
2016-09-16 08:26:39	w3z	um, in that case, youre incurring the construction of a temporary, instead of simply taking the rhs by const& and assigning the rhs members
2016-09-16 08:26:42	bsdbeard	i guess if the speed was a big issue i'd need both a operator=(thing&&) and operator=(const thing&) right?
2016-09-16 08:26:51	w3z	and youll likely want move assignment as well
2016-09-16 08:26:52	--	unreal is now known as unrael
2016-09-16 08:26:57	--	unrael is now known as unreal
2016-09-16 08:27:09	bsdbeard	right, thats what i was asking in the last question
2016-09-16 08:27:19	w3z	and as soon as you take rhs by & or && youll need to check against self assignment
2016-09-16 08:27:41	bsdbeard	it seems its better to have one to reduce code complexity if constructing a new node cache isnt a big issue
2016-09-16 08:27:51	bsdbeard	that is one operator=()
2016-09-16 08:28:14	-->	karstensrage (~karstensr@unaffiliated/karstensrage) has joined ##c++
2016-09-16 08:28:14	-->	phinxy (~tehhhd@unaffiliated/phinxy) has joined ##c++
2016-09-16 08:28:15	<--	phinxy (~tehhhd@unaffiliated/phinxy) has quit (Max SendQ exceeded)
2016-09-16 08:28:43	<--	ecsel (~ecsel@198.8.80.219) has quit (Ping timeout: 244 seconds)
2016-09-16 08:28:43		[08:28]
2016-09-16 08:29:19	bsdbeard	does that make sense?
2016-09-16 08:29:51	w3z	why do you need a non default impl
2016-09-16 08:30:16	bsdbeard	non default operator=() ? because if i have defined the constructors so operator= is deleted isnt it?
2016-09-16 08:30:42	V-ille	what?
2016-09-16 08:31:17	<--	forgottenone (~forgotten@195.142.43.212) has quit (Quit: Konversation terminated!)
2016-09-16 08:31:19	bsdbeard	if i define a copy ctor/move ctor the default copy assignment operator is removed isnt it?
2016-09-16 08:31:31	w3z	you need to revisit your rule of 0/3/5
2016-09-16 08:31:37	-->	slavanap (~slavanap@5.145.251.251) has joined ##c++
2016-09-16 08:31:39	V-ille	a copy constructor doesn't cause a copy assignment to be deleted
2016-09-16 08:32:00	-->	wnklmnn (~pascal@p4FEF7DA5.dip0.t-ipconnect.de) has joined ##c++
2016-09-16 08:32:28	-->	elnormous (~elnormous@91.105.17.158) has joined ##c++
2016-09-16 08:32:35	-->	LordDagothur (~Dagothur@2607:fea8:921f:fc1a:2118:9c94:9dcf:b3e7) has joined ##c++
2016-09-16 08:32:36	bsdbeard	i have a move ctor/copy ctor/destructor, all 3 of these are non trivial and manage resources, what happens if i dont manually define a assignment operator? I thought the code wouldnt work... I'll go try in geordi
2016-09-16 08:32:52	w3z	{S a,b; a=b;} struct S{S(){}};
2016-09-16 08:32:53	geordi	<no output>
2016-09-16 08:33:01	V-ille	well a copy ctor or a move ctor suppresses a move operator
2016-09-16 08:33:09	V-ille	and then a move ctor deletes a copy operator
2016-09-16 08:33:22	<--	wds0 (~wds@cpe-72-227-132-127.nyc.res.rr.com) has quit (Ping timeout: 265 seconds)
2016-09-16 08:33:28	-->	Vingador (~quassel@191.248.248.39) has joined ##c++
2016-09-16 08:33:38	bsdbeard	{S a,b; a=b;} struct S{S(){} S(const S&){} S(S&&){}};
2016-09-16 08:33:38	geordi	error: use of deleted function 'constexpr S& S::operator=(const S&)'
2016-09-16 08:33:52	bsdbeard	well... so i dont understand w3z's question "w3z: why do you need a non default impl"
2016-09-16 08:33:52	-->	forgottenone (~forgotten@195.142.43.212) has joined ##c++
2016-09-16 08:33:53	<--	zwliew (uid161395@gateway/web/irccloud.com/x-wnhzgsmenqqfsfmx) has quit (Quit: Connection closed for inactivity)
2016-09-16 08:33:56	V-ille	a copy ctor alone does not delete a copy assignment
2016-09-16 08:34:00	bsdbeard	this is why i need the non default impl... the code wont work otherwise
2016-09-16 08:34:21	V-ille	you don't need a non-default impl
2016-09-16 08:35:12	V-ille	necessarily, that is
2016-09-16 08:35:19	V-ille	a =default might well work
2016-09-16 08:35:29	bsdbeard	im reading this http://en.cppreference.com/w/cpp/language/move_assignment to make sure i get it right
2016-09-16 08:36:28	bsdbeard	in that link, if they changed the move assignment to A& operator=(A&& other) = default; would the code work the same?
2016-09-16 08:36:33	w3z	i didnt know what you had implemented or why, when i asked :) i still dont, other than now youve said you have non trivial constructors copy constructors and move constructors :)
2016-09-16 08:36:57	bsdbeard	actually I'll go try and compile it
2016-09-16 08:36:58	V-ille	the triviality or lack of it doesn't matter
2016-09-16 08:36:59	<--	elnormous (~elnormous@91.105.17.158) has quit (Ping timeout: 250 seconds)
2016-09-16 08:37:12	-->	CAPITANOOO (~CAPITANOO@host122-156-static.117-2-b.business.telecomitalia.it) has joined ##c++
2016-09-16 08:37:31	bsdbeard	wow
2016-09-16 08:37:38	bsdbeard	the code on cppreference triggered by static analyzer
2016-09-16 08:37:40	V-ille	the rules are based on whether the other special members are user-declared, not on whether they are user-provided
2016-09-16 08:37:46	<--	blueness (~blueness@gentoo/developer/blueness) has quit (Quit: blueness)
2016-09-16 08:37:54	bsdbeard	==1118==AddressSanitizer CHECK failedASan init calls itself!
2016-09-16 08:38:27	<--	Xunie (~xunie@unaffiliated/xunie) has quit (Read error: Connection reset by peer)
2016-09-16 08:38:38	w3z	V-ille: thats true, but it has bearing on whether he can use a default
2016-09-16 08:39:08	<--	CoolBreeze (~CoolBreez@87-228-34.netrunf.cytanet.com.cy) has quit (Read error: Connection reset by peer)
2016-09-16 08:39:10	-->	Xunie (~xunie@unaffiliated/xunie) has joined ##c++
2016-09-16 08:39:15	w3z	if hes doing something special in his move constructor, move assignment default probably isnt an option either
2016-09-16 08:39:21	-->	CoolBreeze (~CoolBreez@87-228-34.netrunf.cytanet.com.cy) has joined ##c++
2016-09-16 08:39:23	V-ille	maybe
2016-09-16 08:39:34	V-ille	!give bsdbeard testcase
2016-09-16 08:39:36	nolyc	bsdbeard: A testcase is the _least_ amount of code that replicates your problem, paste it to http://coliru.stacked-crooked.com and give us the link. Do _not_ paste code to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
2016-09-16 08:39:50	bsdbeard	?
2016-09-16 08:39:57	-->	blueness (~blueness@gentoo/developer/blueness) has joined ##c++
2016-09-16 08:40:13	V-ille	we have no idea what code you have, and what causes such an asan failure
2016-09-16 08:40:25	bsdbeard	its from the cppreference.com link http://en.cppreference.com/w/cpp/language/move_assignment
2016-09-16 08:40:30	bsdbeard	the example code block
2016-09-16 08:40:31	V-ille	so unless you're going to show us testcases, this "discussion" is borderline pointless
2016-09-16 08:40:40	bsdbeard	its not really relevant
2016-09-16 08:40:51	V-ille	well, then shut the fuck up if it's not relevant
2016-09-16 08:40:54	bsdbeard	i just tried to compile it to see if i can default the move assign
2016-09-16 08:41:41	bsdbeard	I have no idea why you even brought this up
2016-09-16 08:42:07	bsdbeard	w3z, can you elaborate about move assignment not being the best option if I have a move constructor?
2016-09-16 08:42:11	V-ille	perhaps we should say the same about your problem for which you've shown zero testcases
2016-09-16 08:42:21	bsdbeard	what problem? I never said I have a problem
2016-09-16 08:42:29	bsdbeard	I asked what the best practices are
2016-09-16 08:43:37	V-ille	Ok. The best practices are to write special member functions idiomatically and correctly.
2016-09-16 08:44:24	-->	oftc_ftw (~oftc_ftw@unaffiliated/oftc-ftw/x-3443471) has joined ##c++
2016-09-16 08:44:24		[08:44]
2016-09-16 08:44:36	-->	de-facto (~de-facto@unaffiliated/de-facto) has joined ##c++
2016-09-16 08:44:50	<--	swnc (~swnc@port-92-204-104-62.dynamic.qsc.de) has quit (Remote host closed the connection)
2016-09-16 08:45:59	<--	reveredge (~reveredge@111.119.209.221) has quit (Ping timeout: 265 seconds)
2016-09-16 08:46:44	<--	velco (~chill@vlan-185-78-38-153.comnet.bg) has quit (Quit: Leaving)
2016-09-16 08:46:55	-->	reveredge (~reveredge@111.119.209.221) has joined ##c++
2016-09-16 08:47:06	<--	Defaultti (defaultti@lakka.kapsi.fi) has quit (Quit: Quitting.)
2016-09-16 08:47:16	-->	k_j (~no@151.42.78.158) has joined ##c++
2016-09-16 08:47:17	k_j	hi
2016-09-16 08:48:09	<--	jamesaxl (~jamesaxl@176.98.129.195) has quit (Read error: Connection reset by peer)
2016-09-16 08:48:22	-->	flavi0 (~anon@unaffiliated/flavi0) has joined ##c++
2016-09-16 08:48:38	-->	jamesaxl (~jamesaxl@176.98.129.195) has joined ##c++
2016-09-16 08:48:48	<--	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has quit (Ping timeout: 265 seconds)
2016-09-16 08:49:05	V-ille	!hi
2016-09-16 08:49:06	nolyc	Hi and welcome to ##C++! This channel is for the discussion of standard C++. For algorithms, libraries, platforms and tools, go to ##C++-general. Beginner questions might get more appropriate responses in ##C++-basic.
2016-09-16 08:49:47	-->	Defaultti (defaultti@lakka.kapsi.fi) has joined ##c++
2016-09-16 08:50:18	<--	tadaa (~tadaaa@nat-wh-wz4-12.rz.uni-karlsruhe.de) has quit
2016-09-16 08:50:34	k_j	I have a design problem. I have two classes which happen to have one member function each one with the same signature and implementation. how can I elegantly  refactor the common code to have it one place? I prefer not to use a free function
2016-09-16 08:51:10	<--	hoshi (~hoshi@acgf133.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 255 seconds)
2016-09-16 08:51:12	k_j	(a free function would also need extra arguments for the data members it would act on)
2016-09-16 08:51:47	<--	plusone (~plusone@176.24.26.166) has quit (Ping timeout: 244 seconds)
2016-09-16 08:52:26	-->	RedOrangeZ2 (~RedOrange@c-73-30-227-113.hsd1.pa.comcast.net) has joined ##c++
2016-09-16 08:52:48	-->	kasper^ (~safaf@82.137.15.2) has joined ##c++
2016-09-16 08:53:05	<--	RedOrangeZ (~RedOrange@c-73-30-227-113.hsd1.pa.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-16 08:53:17	-->	Markow (~Markow@176.122.215.103) has joined ##c++
2016-09-16 08:54:02	-->	Ynrzo (~Ynrzo@ARennes-656-1-194-31.w2-2.abo.wanadoo.fr) has joined ##c++
2016-09-16 08:54:19	<--	Ynrzo (~Ynrzo@ARennes-656-1-194-31.w2-2.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-16 08:55:16	<--	Anodl1 (~Anodl@p2003007A2F39A200F9A70E401F8C6ABF.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2016-09-16 08:55:40	-->	hoshi (~hoshi@acgf133.neoplus.adsl.tpnet.pl) has joined ##c++
2016-09-16 08:55:42	<--	syem (~s@unaffiliated/syem) has quit (Quit: Lost terminal)
2016-09-16 08:55:48	-->	Anodl (~Anodl@p2003007A2F39A200F9A70E401F8C6ABF.dip0.t-ipconnect.de) has joined ##c++
2016-09-16 08:56:13	<--	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has quit (Quit: WeeChat 1.5)
2016-09-16 08:56:35	-->	Ial (~Ial@ARennes-656-1-194-31.w2-2.abo.wanadoo.fr) has joined ##c++
2016-09-16 08:56:39	<--	blueness (~blueness@gentoo/developer/blueness) has quit (Quit: blueness)
2016-09-16 08:56:45	<--	jamesaxl (~jamesaxl@176.98.129.195) has quit (Read error: No route to host)
2016-09-16 08:56:55	<--	Ial (~Ial@ARennes-656-1-194-31.w2-2.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-16 08:57:20	-->	jamesaxl (~jamesaxl@176.98.129.195) has joined ##c++
2016-09-16 08:57:51	-->	Upxd (~Upxd@mar13-2-82-246-223-195.fbx.proxad.net) has joined ##c++
2016-09-16 08:58:13	<--	Upxd (~Upxd@mar13-2-82-246-223-195.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-16 08:58:41	-->	pmn (~pmn@mar13-2-82-246-223-195.fbx.proxad.net) has joined ##c++
2016-09-16 08:58:47	-->	skweek (~skweek@68-200-146-225.res.bhn.net) has joined ##c++
2016-09-16 08:58:51	<--	RedOrangeZ2 (~RedOrange@c-73-30-227-113.hsd1.pa.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-16 08:58:57	-->	blueness (~blueness@gentoo/developer/blueness) has joined ##c++
2016-09-16 08:59:02	<--	dv_ (~quassel@62.178.118.86) has quit (Ping timeout: 265 seconds)
2016-09-16 08:59:03	<--	pmn (~pmn@mar13-2-82-246-223-195.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-16 08:59:05	<--	blueness (~blueness@gentoo/developer/blueness) has quit (Client Quit)
2016-09-16 08:59:07	-->	dv__ (~quassel@62.178.118.86) has joined ##c++
2016-09-16 08:59:12	<--	tax (~tax@cpe-72-182-55-97.austin.res.rr.com) has quit (Remote host closed the connection)
2016-09-16 08:59:29	-->	Veuo (~Veuo@nag77-2-83-152-154-106.fbx.proxad.net) has joined ##c++
2016-09-16 08:59:29		[08:59]
2016-09-16 08:59:36	-->	tax (~tax@cpe-72-182-55-97.austin.res.rr.com) has joined ##c++
2016-09-16 08:59:48	<--	Veuo (~Veuo@nag77-2-83-152-154-106.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-16 08:59:48	w3z	i didnt say that, i said if you have a user defined move constructor, then a default move assignment is probably not what you want
2016-09-16 09:00:03	-->	Jxv (~Jxv@nag77-2-83-152-154-106.fbx.proxad.net) has joined ##c++
2016-09-16 09:00:05	-->	RedOrangeZ (~RedOrange@c-73-30-227-113.hsd1.pa.comcast.net) has joined ##c++
2016-09-16 09:00:19	bsdbeard	I'm writing a minimal testcase of the thing now just to clarify something (didnt quite understand from the cppreference page)
2016-09-16 09:00:23	<--	Jxv (~Jxv@nag77-2-83-152-154-106.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-16 09:00:23	<--	kasper^ (~safaf@82.137.15.2) has quit (Ping timeout: 272 seconds)
2016-09-16 09:00:46	-->	kasper^ (~safaf@82.137.11.215) has joined ##c++
2016-09-16 09:01:47	-->	blueness (~blueness@gentoo/developer/blueness) has joined ##c++
2016-09-16 09:02:43	<--	RedOrangeZ (~RedOrange@c-73-30-227-113.hsd1.pa.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-16 09:03:54	<--	Munnu (~timo@91-158-145-247.elisa-laajakaista.fi) has quit (Quit: Follow the white rabbit. Compile the desert of the real. 3301.)
2016-09-16 09:04:12	<--	xaxxon (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has quit (Quit: This computer has gone to sleep)
2016-09-16 09:04:46	-->	popret (~a@unaffiliated/popret) has joined ##c++
2016-09-16 09:04:48	ubsan	err
2016-09-16 09:04:51	ubsan	not an oxyoron
2016-09-16 09:05:06	-->	RedOrangeZ2 (~RedOrange@c-73-30-227-113.hsd1.pa.comcast.net) has joined ##c++
2016-09-16 09:05:07	ubsan	what's that called when you say something twice
2016-09-16 09:05:43	-->	dgarnold (~dga@c-73-90-67-117.hsd1.ca.comcast.net) has joined ##c++
2016-09-16 09:05:47	ubsan	oh, nvm
2016-09-16 09:05:57	bsdbeard	ubsan, tautology?
2016-09-16 09:06:02	ubsan	bsdbeard: probably that
2016-09-16 09:06:03	<--	elh9 (~elh9___@110-175-114-60.tpgi.com.au) has quit (Ping timeout: 240 seconds)
2016-09-16 09:06:18	<--	asc232 (~Keith@179.38.232.249) has quit (Remote host closed the connection)
2016-09-16 09:06:44	ubsan	I really like the Foo &operator=(Foo other) { swap(*this, other); return *this; }
2016-09-16 09:06:48	ubsan	patter
2016-09-16 09:06:48	ubsan	n
2016-09-16 09:06:49	-->	wds (~wds@cpe-72-227-132-127.nyc.res.rr.com) has joined ##c++
2016-09-16 09:07:13	-->	cbot (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2016-09-16 09:07:24	ubsan	it basically means you only have to write a copy-constructor and a swap
2016-09-16 09:08:53	-->	Vinnie_win_f (vinnie.fal@pdpc/supporter/gold/thevinn) has joined ##c++
2016-09-16 09:09:40	bsdbeard	if you swap*this, other) wont you get a stack overflow
2016-09-16 09:09:48	bsdbeard	since std::swap uses move
2016-09-16 09:09:57	bsdbeard	so it will call itself recursively...
2016-09-16 09:10:00	ubsan	bsdbeard: swap
2016-09-16 09:10:03	ubsan	not std::swap
2016-09-16 09:10:05	ubsan	:)
2016-09-16 09:10:09	bsdbeard	oh
2016-09-16 09:10:23	ubsan	(friend void swap(Foo &lhs, Foo &rhs) { ... })
2016-09-16 09:10:26	<--	RedOrangeZ2 (~RedOrange@c-73-30-227-113.hsd1.pa.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-16 09:10:35	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Read error: Connection reset by peer)
2016-09-16 09:11:15	bsdbeard	http://melpon.org/wandbox/permlink/JtGA6aghUVtYFmXt
2016-09-16 09:11:16	<--	SteffanW (~steffanw@ip4da40774.direct-adsl.nl) has quit (Read error: Connection reset by peer)
2016-09-16 09:11:19	<--	Melite (~Melite@218.51.34.198) has quit (Quit: Leaving)
2016-09-16 09:11:43	bsdbeard	what I don't fully understand, in that minimal example, if I remove the operator=(node_cache) and replace it with operator=(node_cache) = default; will the program be the same?
2016-09-16 09:12:21	ubsan	I... don't know...
2016-09-16 09:12:25	<--	Vinnie_win (~TheVinn@pdpc/supporter/gold/thevinn) has quit (Ping timeout: 272 seconds)
2016-09-16 09:12:27	ubsan	I'm bad at knowing defaults in C++
2016-09-16 09:12:33	-->	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has joined ##c++
2016-09-16 09:12:35	ubsan	I should read that part of the std
2016-09-16 09:12:41	ubsan	ping w3z
2016-09-16 09:12:42	ubsan	gtg
2016-09-16 09:12:43	bsdbeard	i read the cppreference page on the default move ctor but im still not sure
2016-09-16 09:14:13	w3z	theyre not going to be the same because of the way you implemented your copy constructor, the temporary youre swapping from only has a copy of type
2016-09-16 09:14:19	w3z	and not the other two members
2016-09-16 09:14:37	-->	RedOrangeZ (~RedOrange@c-73-30-227-113.hsd1.pa.comcast.net) has joined ##c++
2016-09-16 09:14:37		[09:14]
2016-09-16 09:14:40	w3z	which are default constructed instead of copied in your copy cctr
2016-09-16 09:14:55	-->	sim590 (~sim590@cable-192.222.223.163.electronicbox.net) has joined ##c++
2016-09-16 09:15:37	sim590	I have two class functions which differ by their constness and their return value. How do I explicitly call one or the other?
2016-09-16 09:17:36	bsdbeard	{s t; t.f(); const_cast<const s&>(t).f();} struct s{void f() const {BARK;} int f() {BARK; return 0;}};
2016-09-16 09:17:37	geordi	s::f() s::f() const
2016-09-16 09:17:39	<--	RedOrangeZ (~RedOrange@c-73-30-227-113.hsd1.pa.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-16 09:17:40	bsdbeard	sim590, like that you mean?
2016-09-16 09:18:35	-->	RedOrangeZ (~RedOrange@c-73-30-227-113.hsd1.pa.comcast.net) has joined ##c++
2016-09-16 09:18:35	<--	karab44 (~karab44@unaffiliated/karab44) has quit (Quit: Bye bye! o/)
2016-09-16 09:20:18	-->	Faylite (~Faylite@gateway/vpn/privateinternetaccess/faylite) has joined ##c++
2016-09-16 09:22:30	-->	fahadash (uid44972@gateway/web/irccloud.com/x-irjpnqiglgltitot) has joined ##c++
2016-09-16 09:23:48	w3z	bsdbeard: to understand whats happening, add a simple resource, (not worrying about safety or best practices for the moment wrt resource management) like: struct S{int* ptr; S():ptr(new int){} ~S(){delete ptr;}}; the default copy constructor would do a shallow copy of ptr, leading to double destruction the default assignment operator would lead to double destruction etc
2016-09-16 09:23:53	<--	CuriousErnestBro (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has quit (Ping timeout: 248 seconds)
2016-09-16 09:24:08	-->	iik (~IIK@staticline-31-183-46-227.toya.net.pl) has joined ##c++
2016-09-16 09:24:23	sim590	bsdbeard: x::f() and y::f() const
2016-09-16 09:24:55	bsdbeard	w3z, yes i just wrote some simple pseudo tests and i understand it now
2016-09-16 09:26:01	bsdbeard	when is it appropriate to use the operator=(thing&&) = default; operator=(thing&) = default; then? when your class manages no resources (all the variables manage themselves)?
2016-09-16 09:27:05	bsdbeard	sim590, x::f() and y::f() are different classes with a function f...
2016-09-16 09:27:28	bsdbeard	sim590, you shouldnt have a problem explicitly calling either, am I missing something?
2016-09-16 09:28:01	w3z	yes and all your members are move and copy assignable
2016-09-16 09:28:22	-->	systemfault (~rcyr@unaffiliated/rcyr) has joined ##c++
2016-09-16 09:34:00		[09:28]
2016-09-16 09:44:26	--	irc: disconnected from server
2016-09-16 10:39:14	-->	alyptik (~alyptik@cpe-76-173-133-37.hawaii.res.rr.com) has joined ##c++
2016-09-16 10:39:14		[10:39]
2016-09-16 10:39:14	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || https://isocpp.org/faq || pastes: http://melpon.org/wandbox"
2016-09-16 10:39:14	--	Topic set by V-ille (~ville@81-175-149-170.bb.dnainternet.fi) on Fri, 18 Sep 2015 07:13:01
2016-09-16 10:39:14	--	Channel ##c++: 990 nicks (0 ops, 0 voices, 990 normals)
2016-09-16 10:39:14	***	Buffer Playback...
2016-09-16 10:39:14	*buffextras	[20:31:05] alyptik!~alyptik@cpe-76-173-133-37.hawaii.res.rr.com joined [20:31:05]
2016-09-16 10:39:14	*buffextras	[20:31:06] Server set mode: +CPcnptlf 1024 #overflow [20:31:06]
2016-09-16 10:39:14	*buffextras	[20:33:34] KindOne!kindone@freenude/topless/kindone joined [20:33:34]
2016-09-16 10:39:14	*buffextras	[20:33:35] gioerr!~gioerr@athedsl-4535808.home.otenet.gr joined [20:33:35]
2016-09-16 10:39:14	*buffextras	[20:34:27] elnormous!~elnormous@91.105.17.158 joined [20:34:27]
2016-09-16 10:39:14	*buffextras	[20:34:43] kasper^!~safaf@82.137.11.215 quit with message: [Ping timeout: 248 seconds] [20:34:43]
2016-09-16 10:39:14	*buffextras	[20:35:01] nwkj86!~nwkj86@144.66.6.51.dyn.plus.net joined [20:35:01]
2016-09-16 10:39:14	*buffextras	[20:36:06] skweek!~skweek@68-200-146-225.res.bhn.net quit with message: [Ping timeout: 265 seconds] [20:36:06]
2016-09-16 10:39:14	*buffextras	[20:36:40] JoshS!~jshjsh@172.56.17.55 joined [20:36:40]
2016-09-16 10:39:14	*buffextras	[20:38:03] LKoen!~LKoen@2a01:e35:2eed:a430:a0d3:7df0:64aa:3a61 quit with message: [Quit: “It’s only logical. First you learn to talk, then you learn to think. Too bad it’s not the other way round.”] [20:38:03]
2016-09-16 10:39:14	*buffextras	[20:38:54] jshjsh!~jshjsh@172.56.17.55 quit with message: [Ping timeout: 264 seconds] [20:38:54]
2016-09-16 10:39:14	*buffextras	[20:39:05] elnormous!~elnormous@91.105.17.158 quit with message: [Ping timeout: 248 seconds] [20:39:05]
2016-09-16 10:39:14	***	Playback Complete.
2016-09-16 10:39:17	-->	corebob (~corebob@cm-84.213.41.214.getinternet.no) has joined ##c++
2016-09-16 10:39:17	-->	testt (~allplayer@193-154-226-76.adsl.highway.telekom.at) has joined ##c++
2016-09-16 10:39:21	--	Channel created on Fri, 14 Sep 2001 17:15:35
2016-09-16 10:40:33	-->	wasutton3 (~wasutton3@c-50-180-86-14.hsd1.ga.comcast.net) has joined ##c++
2016-09-16 10:40:58	<--	DEElekgolo (~DEElekgol@2602:30a:2e0e:a7a0:59b9:d3f7:73cb:cff8) has quit (Ping timeout: 255 seconds)
2016-09-16 10:41:56	<--	Vuks (~Vuks@unaffiliated/vuks69) has quit (Ping timeout: 265 seconds)
2016-09-16 10:43:06	<--	dwrngr (~user@96-89-42-188-static.hfc.comcastbusiness.net) has quit (Remote host closed the connection)
2016-09-16 10:43:45	<--	Polymorphism (~Astoundin@unaffiliated/polymorphism) has quit (Ping timeout: 260 seconds)
2016-09-16 10:44:13	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-16 10:45:34	-->	plusone (~plusone@176.24.26.166) has joined ##c++
2016-09-16 10:46:42	<--	Ahmeds (b2a582ff@gateway/web/freenode/ip.178.165.130.255) has quit (Ping timeout: 240 seconds)
2016-09-16 10:47:20	<--	logan_e_ (uid164592@gateway/web/irccloud.com/x-ezijoyhjaigrxzge) has quit (Quit: Connection closed for inactivity)
2016-09-16 10:49:46	-->	atod (~atod@cpe-74-73-129-35.nyc.res.rr.com) has joined ##c++
2016-09-16 10:52:03	<--	CuriousErnestBro (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has quit (Ping timeout: 240 seconds)
2016-09-16 10:52:24	<--	TheLoneMilkMan (1827617a@gateway/web/freenode/ip.24.39.97.122) has quit (Quit: Page closed)
2016-09-16 10:52:25	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-16 10:54:17	-->	DEElekgolo (~DEElekgol@2602:30a:2e0e:a7a0:59b9:d3f7:73cb:cff8) has joined ##c++
2016-09-16 10:54:17		[10:54]
2016-09-16 10:54:30	<--	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has quit (Quit: deeb)
2016-09-16 10:57:21	-->	Polymorphism (~Astoundin@unaffiliated/polymorphism) has joined ##c++
2016-09-16 10:57:27	<--	AkaiSora (~quassel@197.17.56.194) has quit (Ping timeout: 265 seconds)
2016-09-16 10:58:07	<--	neunon (~neunon@unaffiliated/neunon) has quit (Quit: ZNC - http://znc.in)
2016-09-16 10:59:27	<--	liquidstone (~liquidsto@92.55.92.232) has quit (Quit: Nettalk6 - www.ntalk.de)
2016-09-16 11:01:00	<--	Anodl (~Anodl@p2003007A2F39A200F9A70E401F8C6ABF.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2016-09-16 11:01:18	-->	neunon (~neunon@unaffiliated/neunon) has joined ##c++
2016-09-16 11:01:45	<--	blackbeard420 (~blackbear@dynamic-acs-24-154-82-158.zoominternet.net) has quit (Quit: Lost terminal)
2016-09-16 11:03:12	-->	drozdziak1 (~drozdziak@89-70-116-45.dynamic.chello.pl) has joined ##c++
2016-09-16 11:03:29	-->	Petskull_ (~Petskull@pool-173-79-112-129.washdc.fios.verizon.net) has joined ##c++
2016-09-16 11:04:19	Petskull_	Hey- why does this result in an Exception when compiled in Release mode?  for( std::set<Observer*>::iterator iter = observers.begin(); iter != observers.end(); ++iter )
2016-09-16 11:04:48	Petskull_	doing ++iter gets me a "Exception thrown: read access violation: this->observers._Mypair._Myval2._Myval2._Myhead->_Left was 0x616D5F64."
2016-09-16 11:05:22	Petskull_	...after going through the whole std::set, obviously.
2016-09-16 11:05:30	megaTherion	!testcase
2016-09-16 11:05:31	nolyc	A testcase is the _least_ amount of code that replicates your problem, paste it to http://coliru.stacked-crooked.com and give us the link. Do _not_ paste code to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
2016-09-16 11:05:33	kalven	probably because you're doing something wrong in the loop.
2016-09-16 11:05:36	<--	edr (~edr@pdpc/supporter/professional/edr) has quit (Read error: Connection reset by peer)
2016-09-16 11:05:53	Petskull_	on this: (*iter)->onNotify( &msg );
2016-09-16 11:06:20	Petskull_	but ok, now that I know that's not common, I can make up some code
2016-09-16 11:06:28	megaTherion	whats common o.o
2016-09-16 11:06:36	Petskull_	only* this
2016-09-16 11:06:58	kalven	common.. like removing entries while iterating and getting it wrong.. that's pretty common, but it's hard to tell without seeing code.
2016-09-16 11:07:10	<--	JoshS (~jshjsh@172.56.17.55) has quit (Quit: Leaving)
2016-09-16 11:07:22	<--	Nilesh_ (uid116340@gateway/web/irccloud.com/x-okgsdtamjnvpvafa) has quit (Quit: Connection closed for inactivity)
2016-09-16 11:07:29	<--	Tachyon_ (~Thunderbi@95.76.184.120) has quit (Quit: Tachyon_)
2016-09-16 11:07:34	megaTherion	ppl doing bad code is very common....
2016-09-16 11:07:47	megaTherion	ppl not knowing the standard or not knowing their XYZ compiler is also common
2016-09-16 11:08:00	-->	BBIL (~quassel@41.227.60.51) has joined ##c++
2016-09-16 11:08:00	megaTherion	ppl not knowing how to debug properly is common as well :D
2016-09-16 11:08:07	-->	Ojoesinco (~Ojoesinco@ws068093.housing-ec.siu.edu) has joined ##c++
2016-09-16 11:08:16	bsdbeard	did you just tell us your life story
2016-09-16 11:08:17	Petskull_	the Exception. I mean common as in "we see that all the time".  I read a lot of stackoverflow during the past few days and the most common case for this exception is using nullpointers
2016-09-16 11:08:51	Petskull_	megaTherion, no no, I get it- there's a guy like you in every irc channel, but I figured I'd explain anyway
2016-09-16 11:09:04	megaTherion	Petskull_: like what?
2016-09-16 11:09:30	-->	BBIL_ (~quassel@41.225.182.158) has joined ##c++
2016-09-16 11:09:30		[11:09]
2016-09-16 11:09:35	megaTherion	Petskull_: like knowing his business? the truth is nobody can tell you anything without getting actual code and a solid proof/testcase of your problem
2016-09-16 11:09:46	Petskull_	sure, man
2016-09-16 11:09:55	bsdbeard	Petskull_, when you said "doing ++iter" throws an exception, are you running that twice (in the loop header and then the body?)
2016-09-16 11:10:18	Petskull_	bsdbeard, no, I'm do (*iter)->onNotify( &msg ); in the loop.
2016-09-16 11:10:34	megaTherion	Petskull_: the phrase "... when compiled in Release mode" says a lot about your troubles really ^^
2016-09-16 11:10:35	<--	kw01f (~kw01f@pD9FB19AA.dip0.t-ipconnect.de) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-09-16 11:10:44	Petskull_	most of the issues I saw in my searches have to do with modifying the like in situ
2016-09-16 11:10:55	Petskull_	list*
2016-09-16 11:10:56	bsdbeard	Petskull_, i get the feeling one of your Observer* is an invalid pointer
2016-09-16 11:11:00	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-16 11:11:39	Petskull_	it obviously *is*, but the crash doesn't come until iter++.  The onNotify for the previous one worksfine
2016-09-16 11:11:47	Petskull_	let me retool something here
2016-09-16 11:12:33	<--	riksteri (~SpaceDino@62.102.148.156) has quit (Ping timeout: 240 seconds)
2016-09-16 11:12:47	bsdbeard	megaTherion, I thought the part where hes using raw pointers says a lot about his troubles
2016-09-16 11:12:55	bsdbeard	:x
2016-09-16 11:12:59	<--	InfoTest (~Thunderbi@tgn.188.54.5.dts.mg) has quit (Quit: InfoTest)
2016-09-16 11:13:01	Petskull_	*sigh*
2016-09-16 11:13:02	megaTherion	bsdbeard: not exacly, raw pointers are still okay if you know when and how to use them
2016-09-16 11:13:02	Petskull_	got it
2016-09-16 11:13:06	<--	Petskull_ (~Petskull@pool-173-79-112-129.washdc.fios.verizon.net) has left ##c++ ("Leaving")
2016-09-16 11:13:12	-->	Propinquity (~Propinqui@43.241.27.166) has joined ##c++
2016-09-16 11:13:19	<--	BBIL (~quassel@41.227.60.51) has quit (Ping timeout: 265 seconds)
2016-09-16 11:13:37	megaTherion	bsdbeard: cant say anything about his particular situation though if what he does is a good idea...
2016-09-16 11:13:46	<--	GenteelBen (GenteelBen@86.6.181.69) has quit
2016-09-16 11:14:09	megaTherion	but even references cannot safe you from not understanding when things will go out of scope or situations like that
2016-09-16 11:14:33	<--	Ojoesinco (~Ojoesinco@ws068093.housing-ec.siu.edu) has quit (Quit: Leaving)
2016-09-16 11:15:40	<--	corebob (~corebob@cm-84.213.41.214.getinternet.no) has quit (Quit: WeeChat 1.5)
2016-09-16 11:18:11	<--	cjwelborn (cjwelborn@unaffiliated/cjwelborn) has quit (Ping timeout: 250 seconds)
2016-09-16 11:18:27	<--	Hobbyboy (Hobbyboy@gateway/shell/panicbnc/x-bzfqsmzrnprulvnb) has quit (Ping timeout: 248 seconds)
2016-09-16 11:18:27	<--	akolar (AH3e@gateway/shell/firrre/x-cgluvhcgqywojszi) has quit (Ping timeout: 248 seconds)
2016-09-16 11:18:37	<--	DogHackit (~quassel@2605:e000:1117:8043:ba27:ebff:fedb:ba9f) has quit (Quit: No Ping reply in 180 seconds.)
2016-09-16 11:18:59	<--	stowelly (~stowelly@2a01:4f8:160:51eb::2) has quit (Ping timeout: 248 seconds)
2016-09-16 11:19:42	<--	iik (~IIK@staticline-31-183-46-227.toya.net.pl) has quit (Ping timeout: 264 seconds)
2016-09-16 11:19:52	<--	Markow (~Markow@176.122.215.103) has quit (Remote host closed the connection)
2016-09-16 11:20:04	<--	m0shbear (~011899988@servbox.moshbear.net) has quit (Ping timeout: 244 seconds)
2016-09-16 11:20:04	<--	huntercool (~huntercoo@104.143.15.63) has quit (Ping timeout: 244 seconds)
2016-09-16 11:20:09	<--	Taywee (~taylor@www.axfive.net) has quit (Ping timeout: 248 seconds)
2016-09-16 11:20:12	-->	DogHackit (~quassel@2605:e000:1117:8043:ba27:ebff:fedb:ba9f) has joined ##c++
2016-09-16 11:20:12	<--	br14 (rick@205.185.116.76) has quit (Ping timeout: 250 seconds)
2016-09-16 11:20:23	-->	Hobbyboy|BNC (Hobbyboy@gateway/shell/panicbnc/x-iylxbifryonyuxyl) has joined ##c++
2016-09-16 11:20:26	-->	ibouvousaime (~ibouvousa@41.82.44.140) has joined ##c++
2016-09-16 11:20:56	-->	cjwelborn (cjwelborn@coder.firrre.com) has joined ##c++
2016-09-16 11:20:56	<--	cjwelborn (cjwelborn@coder.firrre.com) has quit (Changing host)
2016-09-16 11:20:56	-->	cjwelborn (cjwelborn@unaffiliated/cjwelborn) has joined ##c++
2016-09-16 11:20:57	-->	huntercool (~huntercoo@104.143.15.63) has joined ##c++
2016-09-16 11:21:03	-->	kadoban (~mud@unaffiliated/kadoban) has joined ##c++
2016-09-16 11:21:15	-->	stowelly (~stowelly@2a01:4f8:160:51eb::2) has joined ##c++
2016-09-16 11:21:22	-->	Taywee (~taylor@www.axfive.net) has joined ##c++
2016-09-16 11:21:37	<--	Jubaleth (~Jubaleth@unaffiliated/jubaleth) has quit (Ping timeout: 272 seconds)
2016-09-16 11:22:00	<--	Nitrodev (~Nitrodev@85-23-77-207.bb.dnainternet.fi) has quit (Read error: Connection reset by peer)
2016-09-16 11:22:19	<--	Zxpr1jk (~zxpr1jk@24.214.61.47) has quit (Read error: Connection reset by peer)
2016-09-16 11:22:27	-->	Jubaleth (~Jubaleth@unaffiliated/jubaleth) has joined ##c++
2016-09-16 11:22:30	-->	nikki93 (~nikki93@2601:645:8104:cb10:7159:d49c:d04e:541a) has joined ##c++
2016-09-16 11:22:30	<--	cliluw (~cliluw@unaffiliated/cliluw) has quit (Read error: Connection reset by peer)
2016-09-16 11:23:19	<--	King_Hual (~failed@unaffiliated/king-hual/x-1207580) has quit (Read error: Connection reset by peer)
2016-09-16 11:23:47	-->	Thorax (~Thorax@94.197.121.194.threembb.co.uk) has joined ##c++
2016-09-16 11:24:03	<--	d_s (k7f@gateway/shell/mydevil.net/x-psampivmzhoqxpcm) has quit (Quit: leaving)
2016-09-16 11:25:22	<--	bumbar (~bumbar@unaffiliated/bumbar) has quit (Quit: Leaving)
2016-09-16 11:25:22		[11:25]
2016-09-16 11:25:32	-->	cliluw (~cliluw@unaffiliated/cliluw) has joined ##c++
2016-09-16 11:25:36	-->	d_s (k7f@gateway/shell/mydevil.net/x-yhamcczpmfsgbxde) has joined ##c++
2016-09-16 11:26:23	-->	Gabe__ (~Gabe@75-170-43-116.eugn.qwest.net) has joined ##c++
2016-09-16 11:27:00	-->	m0shbear (~011899988@servbox.moshbear.net) has joined ##c++
2016-09-16 11:27:00	-->	br14 (rick@lostbuthappy.net) has joined ##c++
2016-09-16 11:27:16	<--	cliluw (~cliluw@unaffiliated/cliluw) has quit (Read error: Connection reset by peer)
2016-09-16 11:27:16	-->	akolar (AH3e@gateway/shell/firrre/x-okawccfvjvesfdij) has joined ##c++
2016-09-16 11:27:17	<--	plitter (~plitter@66.209.202.84.customer.cdi.no) has quit (Quit: WeeChat 1.5)
2016-09-16 11:28:34	-->	voidah (~voidah@unaffiliated/voider) has joined ##c++
2016-09-16 11:28:39	-->	King_Hual (~failed@unaffiliated/king-hual/x-1207580) has joined ##c++
2016-09-16 11:29:06	-->	Valdaris (~Gabe@75-170-43-116.eugn.qwest.net) has joined ##c++
2016-09-16 11:29:50	<--	Gabe (~Gabe@75-170-43-116.eugn.qwest.net) has quit (Ping timeout: 260 seconds)
2016-09-16 11:31:15	-->	Najo (~naimi_lla@46.99.31.181) has joined ##c++
2016-09-16 11:31:17	-->	nealshire (~Nealshire@unaffiliated/nealshire) has joined ##c++
2016-09-16 11:31:35	<--	Gabe__ (~Gabe@75-170-43-116.eugn.qwest.net) has quit (Ping timeout: 260 seconds)
2016-09-16 11:31:40	<--	Najo (~naimi_lla@46.99.31.181) has left ##c++
2016-09-16 11:32:45	<--	jamesaxl (~jamesaxl@176.98.129.195) has quit (Remote host closed the connection)
2016-09-16 11:34:06	<--	sim590 (~sim590@cable-192.222.223.163.electronicbox.net) has left ##c++ ("WeeChat 1.5")
2016-09-16 11:34:26	-->	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has joined ##c++
2016-09-16 11:34:29	-->	skweek (~skweek@68-200-146-225.res.bhn.net) has joined ##c++
2016-09-16 11:34:47	-->	plitter (~plitter@66.209.202.84.customer.cdi.no) has joined ##c++
2016-09-16 11:35:22	-->	Azusa762 (~roy@2a02:8084:2ac1:ef00:f279:59ff:fe17:ce37) has joined ##c++
2016-09-16 11:35:29	-->	freddyG (~freddy57@unaffiliated/freddy57) has joined ##c++
2016-09-16 11:35:50	-->	re1 (~reiser@178.220.4.176) has joined ##c++
2016-09-16 11:36:09	<--	k_j (~no@151.42.78.158) has left ##c++ ("bye")
2016-09-16 11:36:17	<--	ustn (~ustn@p4FDB0AF9.dip0.t-ipconnect.de) has quit (Quit: ustn)
2016-09-16 11:37:38	-->	cliluw (~cliluw@unaffiliated/cliluw) has joined ##c++
2016-09-16 11:39:20	<--	wnklmnn (~pascal@p4FEF6210.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2016-09-16 11:41:23	<--	strelox (~user@p200300754F28E90074287F8A07C0708B.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-09-16 11:41:23		[11:41]
2016-09-16 11:42:28	-->	anuxivm (~anuxi@92.185.154.236) has joined ##c++
2016-09-16 11:42:32	<--	Propinquity (~Propinqui@43.241.27.166) has quit (Ping timeout: 272 seconds)
2016-09-16 11:42:42	-->	RoKenn (~RoKenn@2001:a61:2277:9201:3165:b3e6:bef8:4e08) has joined ##c++
2016-09-16 11:42:58	<--	Azusa762 (~roy@2a02:8084:2ac1:ef00:f279:59ff:fe17:ce37) has quit (Remote host closed the connection)
2016-09-16 11:43:02	-->	CuriousErnestBro (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has joined ##c++
2016-09-16 11:43:35	-->	Azusa762 (~roy@2a02:8084:2ac1:ef00:f279:59ff:fe17:ce37) has joined ##c++
2016-09-16 11:44:22	-->	KAHR-Alpha (~Alpha@AReims-652-1-76-199.w86-192.abo.wanadoo.fr) has joined ##c++
2016-09-16 11:44:24	<--	helaughsatfear (~this@unaffiliated/helaughsatfear) has quit (Quit: www.helaughsatfear.com)
2016-09-16 11:45:11	<--	Thorax (~Thorax@94.197.121.194.threembb.co.uk) has quit (Quit: Leaving)
2016-09-16 11:45:55	-->	llinguini (~llinguini@c-98-215-1-225.hsd1.il.comcast.net) has joined ##c++
2016-09-16 11:46:14	llinguini	Hey so I'm trying to learn good C++, never formally learnt this.
2016-09-16 11:46:16	<--	systemfault (~rcyr@unaffiliated/rcyr) has quit (Ping timeout: 265 seconds)
2016-09-16 11:46:50	llinguini	Say I'm designing a linked list class. What's the best way to implement get_back() or something like that on an empty linked list?
2016-09-16 11:47:17	llinguini	throw an exception? And what if it's noexcept?
2016-09-16 11:47:26	zamN	return null? heh
2016-09-16 11:47:26	<--	plee (~kurt@89.10.219.180) has quit (Read error: Connection reset by peer)
2016-09-16 11:47:36	zamN	unless you allow nulls in your linked list
2016-09-16 11:48:01	-->	plee (~kurt@89.10.219.180) has joined ##c++
2016-09-16 11:48:17	rfw	llinguini: either throw an exception, or return std::optional<T> (if available, otherwise boost::optional<T>)
2016-09-16 11:48:41	rfw	it's really up to you about what you want to do, i guess; neither is really better than the other unless you have strong feelings about exceptions
2016-09-16 11:49:43	<--	drozdziak1 (~drozdziak@89-70-116-45.dynamic.chello.pl) has quit (Quit: WeeChat 1.5)
2016-09-16 11:49:45	llinguini	zamN: I don't really want to expose private pointers.
2016-09-16 11:50:11	-->	Aquazi (~Aquazi@host101-216-dynamic.27-79-r.retail.telecomitalia.it) has joined ##c++
2016-09-16 11:50:50	llinguini	rfw: Yeah, I don't have any strong feeling against exceptions for non prformance critical applications. If I was doing performance critical stuff then I'd probably just use a bare linked list anyway.
2016-09-16 11:50:59	megaTherion	llinguini: why not check how std::list<T> works, then you have a good example already
2016-09-16 11:51:10	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-16 11:51:12	megaTherion	btw. designing linked list (classes?) sounds more like a C learning task ^^
2016-09-16 11:51:20	llinguini	with just a node**
2016-09-16 11:51:34	-->	Appleman1234_ (~Appleman1@KD119104048120.au-net.ne.jp) has joined ##c++
2016-09-16 11:51:37	rfw	llinguini: i don't think exceptions are that expensive anyway, they used to be but they aren't anymore
2016-09-16 11:51:56	llinguini	megaTherion: Yeah, I don't know why I picked linked list. but same principle applies for say If I want to implement some sort of self balancing tree
2016-09-16 11:52:03	<--	Appleman1234 (~Appleman1@KD119104049219.au-net.ne.jp) has quit (Ping timeout: 248 seconds)
2016-09-16 11:52:12	--	Appleman1234_ is now known as Appleman1234
2016-09-16 11:52:13	<--	biberu (~biberu@c-cf2d72d5.08-441-7570702.cust.bredbandsbolaget.se) has quit
2016-09-16 11:52:33	<--	zagabar (~zagabar@unaffiliated/zagabar) has quit (Ping timeout: 265 seconds)
2016-09-16 11:53:54	<--	sedeki (~textual@unaffiliated/sedeki) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-16 11:53:56	<--	PaSaSaP (~PaSaSaP@nat.ds14.agh.edu.pl) has quit
2016-09-16 11:53:58	<--	szulak (uid162164@gateway/web/irccloud.com/x-bvtzqsovehdqysmu) has quit (Quit: Connection closed for inactivity)
2016-09-16 11:53:59	-->	corebob (~corebob@cm-84.213.41.214.getinternet.no) has joined ##c++
2016-09-16 11:56:48	-->	rimdeker (~rimdeker@unaffiliated/rimdeker) has joined ##c++
2016-09-16 11:56:48		[11:56]
2016-09-16 11:56:48	-->	viro (~viro@unaffiliated/viro) has joined ##c++
2016-09-16 11:57:16	<--	wasutton3 (~wasutton3@c-50-180-86-14.hsd1.ga.comcast.net) has quit (Ping timeout: 244 seconds)
2016-09-16 11:57:16	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-16 11:57:20	-->	systemfault (~rcyr@unaffiliated/rcyr) has joined ##c++
2016-09-16 11:59:00	<--	plusone (~plusone@176.24.26.166) has quit (Ping timeout: 260 seconds)
2016-09-16 11:59:03	<--	iceiceice (~chris@pool-71-172-187-9.nwrknj.east.verizon.net) has quit (Ping timeout: 240 seconds)
2016-09-16 11:59:17	bsdbeard	isocpp says on modern implementations exceptions are 3% slower than no exceptions (and no other error checking), and possibly free if no exception is thrown at all
2016-09-16 12:00:06	<--	seishun (~Kakera@62.85.7.128) has quit (Ping timeout: 276 seconds)
2016-09-16 12:00:07	bsdbeard	probably not worth worrying about
2016-09-16 12:00:17	<--	squelch (~squelch@169.235.217.0) has quit (Ping timeout: 265 seconds)
2016-09-16 12:00:21	MaddHatter	that's 3% assuming no exceptions are actually thrown? Or what are they measuring?
2016-09-16 12:00:23	megaTherion	I would rather think about the stack than the speed if it comes to exceptions
2016-09-16 12:00:34	bsdbeard	MaddHatter, afaik it's 3% when something is thrown, i can go find the link
2016-09-16 12:00:57	-->	systemfa_ (~rcyr@unaffiliated/rcyr) has joined ##c++
2016-09-16 12:01:02	<--	SpaceDanceCJ (~Sasha@178.121.83.65) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-09-16 12:01:04	<--	LordDagothur (~Dagothur@2607:fea8:921f:fc1a:2118:9c94:9dcf:b3e7) has quit (Ping timeout: 255 seconds)
2016-09-16 12:01:17	bsdbeard	https://isocpp.org/wiki/faq/exceptions#why-exceptions
2016-09-16 12:01:19	MaddHatter	it's going to be so situation-specific when something is thrown, that I wouldn't trust any number without testing it myself in the particular environment in question
2016-09-16 12:01:20	<--	systemfault (~rcyr@unaffiliated/rcyr) has quit (Read error: Connection reset by peer)
2016-09-16 12:01:33	<--	occamsblazer (~occamsbla@131.228.197.41) has quit (Quit: Ad somnum per aspera)
2016-09-16 12:01:44	bsdbeard	"You incur cost only when you have an error."
2016-09-16 12:01:46	bsdbeard	from isocpp
2016-09-16 12:01:55	<--	freddyG (~freddy57@unaffiliated/freddy57) has quit (Ping timeout: 244 seconds)
2016-09-16 12:01:58	<--	oxbb5c (~Thunderbi@78.160.97.225) has quit (Quit: oxbb5c)
2016-09-16 12:02:35	MaddHatter	(I've seen far, far worse than 3% in my work, but an error path was getting hit more frequently than it should have)
2016-09-16 12:03:28	-->	QwertyDragon (~QwertyDra@pool-173-76-128-189.bstnma.fios.verizon.net) has joined ##c++
2016-09-16 12:03:46	<--	quickbrownfox (~henrique_@177.131.178.169) has quit (Ping timeout: 255 seconds)
2016-09-16 12:06:24	<--	tabrez (~tabrez@124.40.246.86) has quit (Remote host closed the connection)
2016-09-16 12:07:18	llinguini	I have another question. Could probably test this one myself really quckly but. Say I have two objects of class A. Can one object access the other object's private members?
2016-09-16 12:07:42	llinguini	I know if I have class A and friend class B, then I can access the private members of A from B.
2016-09-16 12:07:45	bsdbeard	yeah, otherwise copying objects would be a pain
2016-09-16 12:09:00	bsdbeard	wait
2016-09-16 12:09:04	bsdbeard	or can you, hmm
2016-09-16 12:09:31	bsdbeard	{A a,b; a=b;} class A {int x; public: A()=default; A(const A& a):x(a.x){}};
2016-09-16 12:09:32	geordi	<no output>
2016-09-16 12:10:11	-->	AkaiSora (~quassel@197.17.56.194) has joined ##c++
2016-09-16 12:10:14	slavanap	llinguini, yes.
2016-09-16 12:10:15	llinguini	bsdbeard: exactly lol I never thought about this before. I've written a lot of C++ code for work but mostly end up deleting the mvoe and copy constructors.
2016-09-16 12:10:15	<--	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has quit (Read error: Connection reset by peer)
2016-09-16 12:10:16	bsdbeard	crisis averted
2016-09-16 12:11:00	-->	Extreme- (extreme7@gateway/shell/xshellz/x-ramfytqgypfpbszi) has joined ##c++
2016-09-16 12:11:20	-->	p4trix (~p4trix@46.26.255.185) has joined ##c++
2016-09-16 12:13:31	-->	satirev (~Satirev@177.163.77.65) has joined ##c++
2016-09-16 12:13:31		[12:13]
2016-09-16 12:14:02	--	systemfa_ is now known as systemfault
2016-09-16 12:14:24	<--	Faylite (~Faylite@gateway/vpn/privateinternetaccess/faylite) has quit (Quit: Got abducted by Facebook after trying to delete his account)
2016-09-16 12:14:44	<--	llinguini (~llinguini@c-98-215-1-225.hsd1.il.comcast.net) has quit (Quit: Leaving)
2016-09-16 12:14:53	-->	freddyG (~freddy57@gateway/vpn/privateinternetaccess/freddy57) has joined ##c++
2016-09-16 12:15:42	KrzaQ	!stl
2016-09-16 12:15:44	nolyc	STL can mean: (1) C++ standard library; (2) the library Stepanov designed; (3) the parts of [1] based on [2]; (4) specific vendor implementations of [1], [2], or [3]; (5) the underlying principles of [2]; (6) The parts of [1] only in C++03; (7) Stephan T. Lavavej. So, the term is highly ambiguous. If you meant [1] and insist on abbreviating, stdlib is a better choice.
2016-09-16 12:15:51	--	Hobbyboy|BNC is now known as Hobbyboy
2016-09-16 12:16:15	ubsan	Lavavej is pretty awesome
2016-09-16 12:17:09	--	Loading is now known as dotio
2016-09-16 12:17:13	KrzaQ	The right man in the right place
2016-09-16 12:17:19	--	irc: disconnected from server
2016-09-16 12:18:18	-->	alyptik (~alyptik@unaffiliated/alyptik) has joined ##c++
2016-09-16 12:18:18		[12:18]
2016-09-16 12:18:18	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || https://isocpp.org/faq || pastes: http://melpon.org/wandbox"
2016-09-16 12:18:18	--	Topic set by V-ille (~ville@81-175-149-170.bb.dnainternet.fi) on Fri, 18 Sep 2015 07:13:01
2016-09-16 12:18:18	--	Channel ##c++: 968 nicks (0 ops, 0 voices, 968 normals)
2016-09-16 12:18:18	***	Buffer Playback...
2016-09-16 12:18:18	*buffextras	[22:18:08] alyptik!~alyptik@unaffiliated/alyptik joined [22:18:08]
2016-09-16 12:18:18	*buffextras	[22:18:15] Server set mode: +CPcnptlf 1024 #overflow [22:18:15]
2016-09-16 12:18:18	***	Playback Complete.
2016-09-16 12:18:20	<--	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has quit (Quit: Leaving)
2016-09-16 12:18:24	--	Channel created on Fri, 14 Sep 2001 17:15:35
2016-09-16 12:19:02	<--	FreeBirdLjj (~freebirdl@112.20.80.222) has quit (Remote host closed the connection)
2016-09-16 12:19:37	<--	syem (~s@unaffiliated/syem) has quit (Quit: Lost terminal)
2016-09-16 12:19:44	-->	alexmh (~alex@c-73-228-100-216.hsd1.ut.comcast.net) has joined ##c++
2016-09-16 12:20:47	--	dotio is now known as i-
2016-09-16 12:21:00	-->	snover1 (~Adium@unaffiliated/snover) has joined ##c++
2016-09-16 12:22:57	<--	snover (~Adium@unaffiliated/snover) has quit (Ping timeout: 265 seconds)
2016-09-16 12:23:55	--	i- is now known as dotio
2016-09-16 12:24:08	<--	satirev (~Satirev@177.163.77.65) has quit (Ping timeout: 244 seconds)
2016-09-16 12:26:34	-->	bergesenha (uid186066@gateway/web/irccloud.com/x-qoxizlhkfzfukgsx) has joined ##c++
2016-09-16 12:27:00	<--	wds (~wds@cpe-72-227-132-127.nyc.res.rr.com) has quit (Ping timeout: 260 seconds)
2016-09-16 12:28:58	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-16 12:30:01	<--	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has quit (Ping timeout: 272 seconds)
2016-09-16 12:30:23	<--	corebob (~corebob@cm-84.213.41.214.getinternet.no) has quit (Quit: WeeChat 1.5)
2016-09-16 12:33:07	<--	ibouvousaime (~ibouvousa@41.82.44.140) has quit (Ping timeout: 248 seconds)
2016-09-16 12:33:28	<--	DEElekgolo (~DEElekgol@2602:30a:2e0e:a7a0:59b9:d3f7:73cb:cff8) has quit (Ping timeout: 255 seconds)
2016-09-16 12:33:28		[12:33]
2016-09-16 12:33:47	-->	ibouvousaime (~ibouvousa@41.82.46.154) has joined ##c++
2016-09-16 12:34:56	-->	ebaz9 (~ebaz9@AAubervilliers-151-1-24-153.w83-114.abo.wanadoo.fr) has joined ##c++
2016-09-16 12:34:59	-->	Anodl (~Anodl@p2003007A2F39A200F9A70E401F8C6ABF.dip0.t-ipconnect.de) has joined ##c++
2016-09-16 12:35:19	<--	ebaz9 (~ebaz9@AAubervilliers-151-1-24-153.w83-114.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-16 12:35:33	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Remote host closed the connection)
2016-09-16 12:36:06	-->	DEElekgolo (~DEElekgol@2602:30a:2e0e:a7a0:2518:85d8:3e05:b48d) has joined ##c++
2016-09-16 12:36:33	-->	satirev (~Satirev@177.163.77.65) has joined ##c++
2016-09-16 12:36:36	<--	satirev (~Satirev@177.163.77.65) has quit (Max SendQ exceeded)
2016-09-16 12:36:56	-->	satirev (~Satirev@177.163.77.65) has joined ##c++
2016-09-16 12:36:59	<--	satirev (~Satirev@177.163.77.65) has quit (Max SendQ exceeded)
2016-09-16 12:37:08	<--	rendar (~I@host125-183-dynamic.46-79-r.retail.telecomitalia.it) has quit (Quit: std::lower_bound + std::less_equal *works* with a vector without duplicates!)
2016-09-16 12:37:25	-->	satirev (~Satirev@177.163.77.65) has joined ##c++
2016-09-16 12:37:28	<--	satirev (~Satirev@177.163.77.65) has quit (Max SendQ exceeded)
2016-09-16 12:37:29	-->	eaudi (~eaudi@AAubervilliers-151-1-24-153.w83-114.abo.wanadoo.fr) has joined ##c++
2016-09-16 12:39:39	<--	bergesenha (uid186066@gateway/web/irccloud.com/x-qoxizlhkfzfukgsx) has quit
2016-09-16 12:39:58	-->	Gabe (~Gabe@75-170-43-116.eugn.qwest.net) has joined ##c++
2016-09-16 12:40:10	-->	sh4z (lml@unaffiliated/sh4z) has joined ##c++
2016-09-16 12:41:16	<--	Anodl (~Anodl@p2003007A2F39A200F9A70E401F8C6ABF.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2016-09-16 12:43:20	<--	Valdaris (~Gabe@75-170-43-116.eugn.qwest.net) has quit (Ping timeout: 260 seconds)
2016-09-16 12:43:52	-->	robmurrer (~robmurrer@75.172.95.19) has joined ##c++
2016-09-16 12:44:58	-->	elsevero (~elsevero@79.119.56.193) has joined ##c++
2016-09-16 12:45:26	<--	eaudi (~eaudi@AAubervilliers-151-1-24-153.w83-114.abo.wanadoo.fr) has quit (Remote host closed the connection)
2016-09-16 12:45:27	-->	glenfe (~glen@ool-18b8d08e.dyn.optonline.net) has joined ##c++
2016-09-16 12:45:27	<--	glenfe (~glen@ool-18b8d08e.dyn.optonline.net) has quit (Changing host)
2016-09-16 12:45:27	-->	glenfe (~glen@unaffiliated/glenfe) has joined ##c++
2016-09-16 12:47:07	<--	Brklyn (~truthbk@38.122.226.210) has quit (Ping timeout: 272 seconds)
2016-09-16 12:48:12	<--	peterhu (~peterhuen@segfault.guru) has quit (Quit: leaving)
2016-09-16 12:48:24	-->	peterhu (~peterhuen@segfault.guru) has joined ##c++
2016-09-16 12:51:54	<--	bsdbeard (~none@unaffiliated/bsdbeard) has quit
2016-09-16 12:51:54		[12:51]
2016-09-16 12:55:50	<--	viro (~viro@unaffiliated/viro) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-09-16 12:56:24	<--	bjz (~bjz@104.222.140.110) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-16 12:57:48	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-16 13:00:29	<--	AkaiSora (~quassel@197.17.56.194) has quit (Ping timeout: 244 seconds)
2016-09-16 13:00:33	<--	alexmh (~alex@c-73-228-100-216.hsd1.ut.comcast.net) has quit (Ping timeout: 276 seconds)
2016-09-16 13:01:06	<--	rimdeker (~rimdeker@unaffiliated/rimdeker) has quit (Ping timeout: 264 seconds)
2016-09-16 13:01:25	-->	JayKaye (~Jay@101.164.98.27) has joined ##c++
2016-09-16 13:01:38	-->	StyxAlso (~markg@235.129.220.203.dial.dynamic.acc01-oliv-alb.comindico.com.au) has joined ##c++
2016-09-16 13:01:45	-->	alexmh (~alex@c-73-228-100-216.hsd1.ut.comcast.net) has joined ##c++
2016-09-16 13:02:33	-->	velco (~chill@vlan-185-78-38-153.comnet.bg) has joined ##c++
2016-09-16 13:02:35	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Ping timeout: 265 seconds)
2016-09-16 13:04:00	<--	p4trix (~p4trix@46.26.255.185) has quit (Ping timeout: 265 seconds)
2016-09-16 13:04:23	-->	zwliew (uid161395@gateway/web/irccloud.com/x-edpozhkqjcpgxatk) has joined ##c++
2016-09-16 13:04:44	--	snover1 is now known as snover
2016-09-16 13:07:51	-->	jbud (~jbud@ip-24-54-73-229.user.start.ca) has joined ##c++
2016-09-16 13:07:51		[13:07]
2016-09-16 13:07:59	<--	Henke37 (~Henrik@81-227-16-59-no133.bredband.skanova.com) has quit (Quit: ERR_SHUTDOWN)
2016-09-16 13:09:00	-->	madpat (~AndChat57@dyndsl-037-138-029-133.ewe-ip-backbone.de) has joined ##c++
2016-09-16 13:09:33	<--	nwkj86 (~nwkj86@144.66.6.51.dyn.plus.net) has quit (Ping timeout: 250 seconds)
2016-09-16 13:10:02	-->	YungRaj (~YungRaj@50-249-71-245-static.hfc.comcastbusiness.net) has joined ##c++
2016-09-16 13:10:27	-->	bkboggy (~bkboggy@cpe-172-250-147-60.socal.res.rr.com) has joined ##c++
2016-09-16 13:10:42	<--	JayKaye (~Jay@101.164.98.27) has quit (Ping timeout: 264 seconds)
2016-09-16 13:11:27	<--	RoKenn (~RoKenn@2001:a61:2277:9201:3165:b3e6:bef8:4e08) has quit (Quit: NSA proxy service interrupted)
2016-09-16 13:11:56	<--	illerucis (~illerucis@2620:10d:c091:200::8:2b1) has quit (Remote host closed the connection)
2016-09-16 13:12:30	-->	illerucis (~illerucis@199.201.65.132) has joined ##c++
2016-09-16 13:12:38	-->	wasutton3 (~wasutton3@c-50-180-86-14.hsd1.ga.comcast.net) has joined ##c++
2016-09-16 13:13:36	<--	Lowl3v3l (~Lowl3v3l@ipservice-092-208-080-178.092.208.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2016-09-16 13:14:13	-->	asc232 (~Keith@179.38.232.249) has joined ##c++
2016-09-16 13:14:46	-->	Lingo_ (~Lingo@h-128-85.a258.priv.bahnhof.se) has joined ##c++
2016-09-16 13:15:48	<--	velco (~chill@vlan-185-78-38-153.comnet.bg) has quit (Quit: Leaving...)
2016-09-16 13:16:55	<--	illerucis (~illerucis@199.201.65.132) has quit (Ping timeout: 250 seconds)
2016-09-16 13:17:03	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-16 13:17:50	-->	bjz (~bjz@pa49-199-192-123.pa.vic.optusnet.com.au) has joined ##c++
2016-09-16 13:18:06	<--	Adva (~Hyrule@2a02:810a:12c0:5068:bc1a:dc4e:c88f:dc55) has quit (Read error: Connection reset by peer)
2016-09-16 13:19:01	<--	King_Hual (~failed@unaffiliated/king-hual/x-1207580) has quit (Read error: Connection reset by peer)
2016-09-16 13:20:16	-->	CAPITANOOO (~CAPITANOO@host122-156-static.117-2-b.business.telecomitalia.it) has joined ##c++
2016-09-16 13:20:47	-->	King_Hual (~failed@unaffiliated/king-hual/x-1207580) has joined ##c++
2016-09-16 13:22:03	-->	Gabe__ (~Gabe@75-170-43-116.eugn.qwest.net) has joined ##c++
2016-09-16 13:24:01	-->	djapo (~archie@unaffiliated/djapo) has joined ##c++
2016-09-16 13:24:01		[13:24]
2016-09-16 13:24:53	-->	Valdaris (~Gabe@75-170-43-116.eugn.qwest.net) has joined ##c++
2016-09-16 13:25:42	<--	Gabe (~Gabe@75-170-43-116.eugn.qwest.net) has quit (Ping timeout: 264 seconds)
2016-09-16 13:26:29	<--	tadaa (~tadaaa@nat-wh-wz4-12.rz.uni-karlsruhe.de) has quit
2016-09-16 13:26:42	<--	Valdaris (~Gabe@75-170-43-116.eugn.qwest.net) has quit (Client Quit)
2016-09-16 13:26:59	<--	wasutton3 (~wasutton3@c-50-180-86-14.hsd1.ga.comcast.net) has quit (Ping timeout: 248 seconds)
2016-09-16 13:27:30	<--	Gabe__ (~Gabe@75-170-43-116.eugn.qwest.net) has quit (Ping timeout: 264 seconds)
2016-09-16 13:28:22	<--	anuxivm (~anuxi@92.185.154.236) has quit (Quit: Leaving.)
2016-09-16 13:28:26	<--	King_Hual (~failed@unaffiliated/king-hual/x-1207580) has quit (Quit: Leaving)
2016-09-16 13:29:37	-->	squelch (~squelch@99-53-229-4.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2016-09-16 13:30:11	<--	KAHR-Alpha (~Alpha@AReims-652-1-76-199.w86-192.abo.wanadoo.fr) has quit (Ping timeout: 265 seconds)
2016-09-16 13:30:58	<--	robmurrer (~robmurrer@75.172.95.19) has quit (Remote host closed the connection)
2016-09-16 13:33:49	<--	squelch (~squelch@99-53-229-4.lightspeed.irvnca.sbcglobal.net) has quit (Read error: Connection reset by peer)
2016-09-16 13:34:04	<--	Kimundi_ (~Kimundi@p57BC68FB.dip0.t-ipconnect.de) has quit (Ping timeout: 244 seconds)
2016-09-16 13:34:53	<--	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has quit (Quit: Leaving.)
2016-09-16 13:35:58	<--	bjz (~bjz@pa49-199-192-123.pa.vic.optusnet.com.au) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-16 13:37:12	-->	elnormous (~elnormous@91.105.17.158) has joined ##c++
2016-09-16 13:38:31	-->	wolf_1 (~wolf_1@unaffiliated/deerdidlydong) has joined ##c++
2016-09-16 13:38:35	-->	Valdaris (~Gabe@75-170-43-116.eugn.qwest.net) has joined ##c++
2016-09-16 13:39:28	wolf_1	hey so im trying 2 write a program that both inputs and outputs at the same time
2016-09-16 13:39:28		[13:39]
2016-09-16 13:39:32	wolf_1	and im using multi threading for this
2016-09-16 13:39:43	wolf_1	but when ever I take input and output at the same time
2016-09-16 13:39:52	wolf_1	I never get input
2016-09-16 13:40:13	wolf_1	like, I can't input, but when I don't call the output function (on the main thread) the input works perfectly fine on its own.
2016-09-16 13:41:43	-->	footcode (5a6cc44f@gateway/web/freenode/ip.90.108.196.79) has joined ##c++
2016-09-16 13:42:12	-->	karakedi (~eAC53C340@unaffiliated/orphan) has joined ##c++
2016-09-16 13:42:30	<--	elnormous (~elnormous@91.105.17.158) has quit (Ping timeout: 264 seconds)
2016-09-16 13:42:33	<--	nikki93 (~nikki93@2601:645:8104:cb10:7159:d49c:d04e:541a) has quit (Remote host closed the connection)
2016-09-16 13:43:42	<--	atod (~atod@cpe-74-73-129-35.nyc.res.rr.com) has quit (Ping timeout: 264 seconds)
2016-09-16 13:45:04	<--	CAPITANOOO (~CAPITANOO@host122-156-static.117-2-b.business.telecomitalia.it) has quit (Quit: CAPITANOOO)
2016-09-16 13:45:44	-->	CAPITANOOO (~CAPITANOO@host122-156-static.117-2-b.business.telecomitalia.it) has joined ##c++
2016-09-16 13:46:12	-->	neurodrone (~neurodron@unaffiliated/neurodrone) has joined ##c++
2016-09-16 13:46:14	<--	footcode (5a6cc44f@gateway/web/freenode/ip.90.108.196.79) has quit (Client Quit)
2016-09-16 13:46:19	<--	neurodrone (~neurodron@unaffiliated/neurodrone) has quit (Client Quit)
2016-09-16 13:49:10	<--	TheScholar (~randomman@ool-44c16ddc.dyn.optonline.net) has quit
2016-09-16 13:51:54	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-16 13:52:17	<--	justanotheruser (~justanoth@unaffiliated/justanotheruser) has quit (Quit: WeeChat 1.4)
2016-09-16 13:53:01	slavanap	can I implement `operator std::string() const;` outsize the class?
2016-09-16 13:53:07	-->	neurodrone (~neurodron@unaffiliated/neurodrone) has joined ##c++
2016-09-16 13:53:38	slavanap	how to define this implementation?
2016-09-16 13:54:01	-->	hexoroid (hexoroid@173-18-17-106.client.mchsi.com) has joined ##c++
2016-09-16 13:54:30	<--	GrayArea (kvirc@178.208.166.75) has quit (Ping timeout: 260 seconds)
2016-09-16 13:54:30		[13:54]
2016-09-16 13:54:39	slavanap	{ class A { operator std::string() const; }; decimal::operator std::string() const { return std::string(); } }
2016-09-16 13:54:39	geordi	error: 'decimal' has not been declared
2016-09-16 13:54:48	slavanap	{ class A { operator std::string() const; }; A::operator std::string() const { return std::string(); } }
2016-09-16 13:54:48	geordi	error: cannot call member function 'main(int, char**)::A::operator string() const' without object
2016-09-16 13:54:53	-->	justanotheruser (~justanoth@unaffiliated/justanotheruser) has joined ##c++
2016-09-16 13:54:56	slavanap	my bad
2016-09-16 13:55:01	V-ille	geordi: struct X {operator int() const;}; X::operator int() const {return 42;} int main() {const X x; int y = x;}
2016-09-16 13:55:02	geordi	<no output>
2016-09-16 13:55:04	-->	Gabe (~Gabe@75-170-43-116.eugn.qwest.net) has joined ##c++
2016-09-16 13:55:11	slavanap	yeah
2016-09-16 13:55:26	slavanap	I see `A::operator` for the first time.
2016-09-16 13:55:31	slavanap	Thank you
2016-09-16 13:55:45	<--	gagbo (~gagbo@unaffiliated/gagbo) has quit (Ping timeout: 265 seconds)
2016-09-16 13:56:10	-->	paule32_ (~jens@p4FFB2A19.dip0.t-ipconnect.de) has joined ##c++
2016-09-16 13:56:15	<--	RebelCoder (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has quit (Ping timeout: 244 seconds)
2016-09-16 13:57:25	<--	alexmh (~alex@c-73-228-100-216.hsd1.ut.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-16 13:58:37	-->	zmack (~zmack@pool-72-74-144-215.bstnma.fios.verizon.net) has joined ##c++
2016-09-16 13:58:42	<--	Valdaris (~Gabe@75-170-43-116.eugn.qwest.net) has quit (Ping timeout: 264 seconds)
2016-09-16 13:59:22	-->	nikki93 (~nikki93@2601:645:8104:cb10:d6e:a94a:4ec7:47fb) has joined ##c++
2016-09-16 13:59:27	-->	TheScholar (~randomman@ool-44c16ddc.dyn.optonline.net) has joined ##c++
2016-09-16 13:59:54	<--	paule32 (~jens@p4FFC5577.dip0.t-ipconnect.de) has quit (Ping timeout: 264 seconds)
2016-09-16 14:01:06	<--	zmack (~zmack@pool-72-74-144-215.bstnma.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-16 14:02:29	<--	p3rs3us (~jduro@host86-132-103-130.range86-132.btcentralplus.com) has quit (Ping timeout: 272 seconds)
2016-09-16 14:02:34	-->	plusone (~plusone@176.24.26.166) has joined ##c++
2016-09-16 14:03:02	<--	Lingo_ (~Lingo@h-128-85.a258.priv.bahnhof.se) has quit (Quit: Be back later ...)
2016-09-16 14:03:39	-->	Lingo_ (~Lingo@h-128-85.a258.priv.bahnhof.se) has joined ##c++
2016-09-16 14:03:44	<--	gelignite (~gelignite@x4db511fb.dyn.telefonica.de) has quit (Quit: http://bit.ly/1kso8Ta)
2016-09-16 14:05:04	<--	justanotheruser (~justanoth@unaffiliated/justanotheruser) has quit (Quit: WeeChat 1.4)
2016-09-16 14:05:38	<--	YungRaj (~YungRaj@50-249-71-245-static.hfc.comcastbusiness.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-16 14:06:19	<--	dj_pi (~dj@c-73-191-212-56.hsd1.mi.comcast.net) has quit (Quit: Leaving)
2016-09-16 14:06:29	<--	BBIL_ (~quassel@41.225.182.158) has quit (Read error: Connection reset by peer)
2016-09-16 14:06:40	-->	justanotheruser (~justanoth@unaffiliated/justanotheruser) has joined ##c++
2016-09-16 14:06:46	-->	tesuji_ (~tesuji@x2f67ce8.dyn.telefonica.de) has joined ##c++
2016-09-16 14:07:05	<--	tesuji (~tesuji@unaffiliated/tesuji) has quit (Ping timeout: 248 seconds)
2016-09-16 14:08:05	-->	P1RATEZ (piratez@unaffiliated/p1ratez) has joined ##c++
2016-09-16 14:08:19	<--	Lingo_ (~Lingo@h-128-85.a258.priv.bahnhof.se) has quit (Ping timeout: 265 seconds)
2016-09-16 14:08:19	-->	King_Hual (~failed@unaffiliated/king-hual/x-1207580) has joined ##c++
2016-09-16 14:08:27	<--	spindle (~spindle@27-33-39-55.static.tpgi.com.au) has quit (Read error: Connection reset by peer)
2016-09-16 14:08:29	-->	justan0theruser (~justanoth@unaffiliated/justanotheruser) has joined ##c++
2016-09-16 14:11:35	--	irc: disconnected from server
2016-09-16 14:11:35		[14:11]
2016-09-16 14:57:29	-->	alyptik (~alyptik@unaffiliated/alyptik) has joined ##c++
2016-09-16 14:57:29		[14:57]
2016-09-16 14:57:29	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || https://isocpp.org/faq || pastes: http://melpon.org/wandbox"
2016-09-16 14:57:29	--	Topic set by V-ille (~ville@81-175-149-170.bb.dnainternet.fi) on Fri, 18 Sep 2015 07:13:01
2016-09-16 14:57:30	--	Channel ##c++: 948 nicks (0 ops, 0 voices, 948 normals)
2016-09-16 14:57:30	***	Buffer Playback...
2016-09-16 14:57:30	*buffextras	[00:56:54] alyptik!~alyptik@unaffiliated/alyptik joined [00:56:54]
2016-09-16 14:57:30	*buffextras	[00:56:55] Server set mode: +CPcnptlf 1024 #overflow [00:56:55]
2016-09-16 14:57:30	*buffextras	[00:56:59] Mnkras!~Mnkras@concrete5/781/Mnkras joined [00:56:59]
2016-09-16 14:57:30	***	Playback Complete.
2016-09-16 14:57:32	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Ping timeout: 264 seconds)
2016-09-16 14:57:35	--	Channel created on Fri, 14 Sep 2001 17:15:35
2016-09-16 14:58:18	-->	tachoknight_ (~tachoknig@c-73-246-129-13.hsd1.il.comcast.net) has joined ##c++
2016-09-16 14:58:43	<--	tachoknight (~tachoknig@c-73-246-129-13.hsd1.il.comcast.net) has quit (Ping timeout: 248 seconds)
2016-09-16 14:59:37	<--	StyxAlso (~markg@235.129.220.203.dial.dynamic.acc01-oliv-alb.comindico.com.au) has quit (Quit: StyxAlso)
2016-09-16 15:00:00	<--	elsevero (~elsevero@79.119.56.193) has quit (Quit: elsevero)
2016-09-16 15:00:02	<--	harha_ (harha_@y55.ip4.netikka.fi) has quit
2016-09-16 15:00:25	<--	incm (~incm@134.134.139.77) has quit (Remote host closed the connection)
2016-09-16 15:00:27	KrzaQ	does breaking the requires clause in a container result in ill-formed code or ub?
2016-09-16 15:00:45	-->	doppel (~chatzilla@ip70-189-197-158.lv.lv.cox.net) has joined ##c++
2016-09-16 15:00:45	KrzaQ	i.e.: string::data() Requires: The program shall not alter any of the values stored in the character array.
2016-09-16 15:01:15	KrzaQ	{ auto x = "aaa"s; *((char*)x.data()) = 'b'; cout << x; }
2016-09-16 15:01:16	geordi	baa
2016-09-16 15:02:31	-->	spindle (~spindle@27-33-39-55.static.tpgi.com.au) has joined ##c++
2016-09-16 15:03:20	doppel	o_O
2016-09-16 15:03:37	<--	RoBo_V (~robo@124.253.0.11) has quit (Ping timeout: 248 seconds)
2016-09-16 15:05:59	<--	dedgrant (~dedgrant@192-40-237-82.dedicated.allstream.net) has quit (Quit: Leaving)
2016-09-16 15:06:08	KrzaQ	geordi --clang { auto x = "aaa"s; *((char*)x.data()) = 'b'; cout << x; }
2016-09-16 15:06:09	geordi	baa
2016-09-16 15:06:34	-->	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has joined ##c++
2016-09-16 15:06:54	doppel	what's with that trailing s?
2016-09-16 15:06:59	<--	vitimiti (~vitimiti@unaffiliated/vitimiti) has quit (Quit: Meows out)
2016-09-16 15:07:01	KrzaQ	string literal
2016-09-16 15:07:12	-->	RoBo_V (~robo@124.253.0.11) has joined ##c++
2016-09-16 15:07:12	KrzaQ	<< TYPE(""), TYPE(""s)
2016-09-16 15:07:13	geordi	lvalue char const [1], prvalue string
2016-09-16 15:07:20	slavanap	KrzaQ, I think that it is valid, because std::string is just an array of bytes container.
2016-09-16 15:07:36	slavanap	""s type is std::string
2016-09-16 15:07:54	KrzaQ	I just quoted the standard saying "Requires: The program shall not alter any of the values stored in the character array.".
2016-09-16 15:08:14	slavanap	{ string s("test"); *s.data() = '1';
2016-09-16 15:08:14	geordi	error: Unexpected end of request. Expected '}' or balanced code.
2016-09-16 15:08:16	slavanap	{ string s("test"); *s.data() = '1'; }
2016-09-16 15:08:17	geordi	<no output>
2016-09-16 15:08:33	slavanap	KrzaQ, why cast to char*?
2016-09-16 15:08:45	slavanap	{ auto x = "aaa"s; *x.data() = 'b'; cout << x; }
2016-09-16 15:08:46	geordi	baa
2016-09-16 15:08:50	doppel	is that a recent addition to c++?
2016-09-16 15:09:04	slavanap	doppel, c++11
2016-09-16 15:09:23	KrzaQ	It's not a question of whether it's valid, just how invalid it is
2016-09-16 15:09:46	slavanap	doppel, http://en.cppreference.com/w/cpp/language/user_literal
2016-09-16 15:09:50	KrzaQ	slavanap: because the current C++ standard doesn't have non-const data() for string
2016-09-16 15:10:19	KrzaQ	doppel: C++11 for user defined literals, C++14 defined some defaults, s included
2016-09-16 15:10:48	slavanap	KrzaQ, okay. Why not try this
2016-09-16 15:11:12	slavanap	{ auto x = "aaa"s; *(&x[0]) = 'b'; cout << x; }
2016-09-16 15:11:13	geordi	baa
2016-09-16 15:11:27	slavanap	or just
2016-09-16 15:11:35	slavanap	{ auto x = "aaa"s; x[0] = 'b'; cout << x; }
2016-09-16 15:11:36	geordi	baa
2016-09-16 15:11:44	KrzaQ	Because I'm not trying to work around an issue, but determine how wrong the code I'm reviewing is
2016-09-16 15:12:19	slavanap	KrzaQ, well, all compilers I work with has non-const std::string::data()
2016-09-16 15:12:33	<--	Burgundy (~burgundy@86.121.178.118) has quit (Ping timeout: 240 seconds)
2016-09-16 15:12:33		[15:12]
2016-09-16 15:12:53	KrzaQ	geordi --2014 { auto x = "x"s; *x.data() = 'y'; }
2016-09-16 15:12:55	geordi	error: assignment of read-only location '* x.string::data()'
2016-09-16 15:13:01	<--	Guest68547 (~hyperair@49.128.61.142) has quit (Quit: Reconnecting)
2016-09-16 15:13:13	-->	hyperair (~hyperair@49.128.61.142) has joined ##c++
2016-09-16 15:13:30	<--	QwertyDragon (~QwertyDra@pool-173-76-128-189.bstnma.fios.verizon.net) has quit (Quit: Leaving)
2016-09-16 15:13:34	--	hyperair is now known as Guest16390
2016-09-16 15:13:36	slavanap	KrzaQ, for me that's not an issue if it compiles and works. Moreover they'll plan to add non-const std::string::data() in c++17 standard http://en.cppreference.com/w/cpp/string/basic_string/data
2016-09-16 15:13:51	KrzaQ	I know
2016-09-16 15:14:34	doppel	okay, so it's a user-defined literal operator defined by the standard library.
2016-09-16 15:14:38	slavanap	KrzaQ, and if std::string::data() is const they how it is different from c_str() ?????
2016-09-16 15:15:12	KrzaQ	slavanap: it's not different at all. They're described in the same paragraph in the standard
2016-09-16 15:15:26	KrzaQ	The funny thing about code with UB is that in a few years it can break and you'll be left wondering why you took that silly shortcut
2016-09-16 15:15:39	-->	uboot__ (~moon@x4dbad063.dyn.telefonica.de) has joined ##c++
2016-09-16 15:15:53	slavanap	KrzaQ, logically that code will never break
2016-09-16 15:16:10	slavanap	geordi --2014 { auto x = "x"s; *const_cast<char*>(x.c_str()) = 'y'; }
2016-09-16 15:16:19	geordi	<no output>
2016-09-16 15:16:25	slavanap	but this is ugly
2016-09-16 15:16:26	<--	uboot_ (~moon@x4dba17af.dyn.telefonica.de) has quit (Ping timeout: 265 seconds)
2016-09-16 15:16:37	KrzaQ	that's what they said about strict aliasing
2016-09-16 15:16:40	KrzaQ	and type punning
2016-09-16 15:17:13	doppel	which draft is closest to c++14 without introducing new stuff for c++17, i wonder
2016-09-16 15:17:21	doppel	right now i have n3690
2016-09-16 15:17:22	<--	mad_enz (~mad_enz@CPE00508b114c3e-CM00fc8d50aef0.cpe.net.fido.ca) has quit (Ping timeout: 244 seconds)
2016-09-16 15:17:23	slavanap	KrzaQ, I use pragmas for aliasing. And knew that is different from compiler to compiler in 2011.
2016-09-16 15:17:46	KrzaQ	doppel: I believe it's 4140
2016-09-16 15:17:57	<--	Guest16390 (~hyperair@49.128.61.142) has quit (Client Quit)
2016-09-16 15:17:57	<--	asc232 (~Keith@179.38.232.249) has quit (Read error: Connection reset by peer)
2016-09-16 15:18:10	-->	hypera1r (~hyperair@49.128.61.142) has joined ##c++
2016-09-16 15:18:20	KrzaQ	it's dated 2014-10-07
2016-09-16 15:18:21	<--	hypera1r (~hyperair@49.128.61.142) has quit (Changing host)
2016-09-16 15:18:21	-->	hypera1r (~hyperair@ubuntu/member/hyperair) has joined ##c++
2016-09-16 15:19:39	doppel	thanks :-)
2016-09-16 15:20:40	slavanap	I hope they add c++ decimal class similar to c# decimal
2016-09-16 15:21:48	<--	ac_slater_ (~ac_slater@pool-173-48-127-155.bstnma.fios.verizon.net) has quit (Quit: WeeChat 1.5)
2016-09-16 15:22:17	<--	refbot (~MotoBot@unaffiliated/moto-chan/bot/refbot) has quit (Ping timeout: 240 seconds)
2016-09-16 15:22:24	slavanap	just look at this low-level brain-blowing transformations https://github.com/dotnet/coreclr/blob/master/src/palrt/decconv.cpp#L271-L421
2016-09-16 15:22:29	-->	bjz (~bjz@14-201-215-168.tpgi.com.au) has joined ##c++
2016-09-16 15:22:55	<--	bkboggy (~bkboggy@cpe-172-250-147-60.socal.res.rr.com) has quit (Quit: Leaving)
2016-09-16 15:23:04	-->	Moto-chan (~Rob@unaffiliated/moto-chan) has joined ##c++
2016-09-16 15:23:53	<--	Akahige (~Rob@unaffiliated/moto-chan) has quit (Ping timeout: 240 seconds)
2016-09-16 15:24:34	-->	atod (~atod@cpe-74-73-129-35.nyc.res.rr.com) has joined ##c++
2016-09-16 15:24:58	-->	refbot (~MotoBot@unaffiliated/moto-chan/bot/refbot) has joined ##c++
2016-09-16 15:25:11	hypera1r	KrzaQ: std::string::data() may not be null-terminated
2016-09-16 15:26:10	KrzaQ	hypera1r: where is it said? I thought so too, but I can't find any evidence of it
2016-09-16 15:26:31	<--	fahadash (uid44972@gateway/web/irccloud.com/x-irjpnqiglgltitot) has quit (Quit: Connection closed for inactivity)
2016-09-16 15:26:31	hypera1r	!stdref string::data
2016-09-16 15:26:32	refbot	std::string::data: http://en.cppreference.com/w/cpp/string/basic_string/data
2016-09-16 15:26:35	KrzaQ	http://eel.is/c++draft/string.accessors
2016-09-16 15:26:39	hypera1r	hmm, bot isn't working
2016-09-16 15:26:44	hypera1r	ah
2016-09-16 15:26:46	hypera1r	it is
2016-09-16 15:26:54	KrzaQ	c_str() and data() are in the same group
2016-09-16 15:27:16	hypera1r	hmm
2016-09-16 15:27:22	KrzaQ	oh
2016-09-16 15:27:24	hypera1r	i wonder if cppreference is wrong
2016-09-16 15:27:26	KrzaQ	this is pre-C++11
2016-09-16 15:27:35	<--	IAmKira (~CanIHazMe@unaffiliated/canihazmemecats) has quit (Ping timeout: 265 seconds)
2016-09-16 15:27:35		[15:27]
2016-09-16 15:27:40	KrzaQ	The returned array is not required to be null-terminated. (until C++11)
2016-09-16 15:27:50	KrzaQ	The returned array is null-terminated, that is, data() and c_str() perform the same function. (since C++11)
2016-09-16 15:27:59	-->	bkboggy (~bkboggy@cpe-172-250-147-60.socal.res.rr.com) has joined ##c++
2016-09-16 15:28:09	hypera1r	ah, interesting
2016-09-16 15:28:21	KrzaQ	So, you were right, but a decade ago ;)
2016-09-16 15:28:36	hypera1r	:)
2016-09-16 15:28:46	doppel	then why are there a c_str and data?
2016-09-16 15:28:46	hypera1r	well, not necessarily a decade..
2016-09-16 15:28:58	<--	Mannn (~Mannn____@2605:6000:eb6c:0:df3:5c5b:f385:1271) has quit (Ping timeout: 255 seconds)
2016-09-16 15:29:07	hypera1r	doppel: data() and c_str() served different purposes in the past, i think
2016-09-16 15:29:12	KrzaQ	data() is for consistency with other containers
2016-09-16 15:29:15	doppel	yes.  in the past.
2016-09-16 15:29:20	hypera1r	c_str() is for interfacing with C libraries
2016-09-16 15:29:26	KrzaQ	vector has data()
2016-09-16 15:29:27	hypera1r	fopen for instance
2016-09-16 15:29:29	KrzaQ	array has data()
2016-09-16 15:29:53	<--	atod (~atod@cpe-74-73-129-35.nyc.res.rr.com) has quit (Ping timeout: 272 seconds)
2016-09-16 15:29:58	doppel	yep
2016-09-16 15:30:01	KrzaQ	and all the other containers that guarantee contiguous memory have data()
2016-09-16 15:30:24	KrzaQ	hypera1r: I just checked C++03 and it states that difference indeed
2016-09-16 15:30:26	hypera1r	if pre-c++11 data() was not necessarily null-terminated, does that mean that c_str() might require a realloc()?
2016-09-16 15:30:29	-->	squelch (~squelch@99-53-229-4.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2016-09-16 15:30:42	<--	patteh_ (~patteh@unaffiliated/patteh) has quit (Read error: Connection reset by peer)
2016-09-16 15:30:52	-->	patteh (~patteh@unaffiliated/patteh) has joined ##c++
2016-09-16 15:30:54	-->	elh9 (~elh9___@110-175-114-60.tpgi.com.au) has joined ##c++
2016-09-16 15:31:02	KrzaQ	it's not impossible it could've been implemented as another allocation of duplicate data :D
2016-09-16 15:31:36	-->	LightYagami (~CanIHazMe@unaffiliated/canihazmemecats) has joined ##c++
2016-09-16 15:31:52	hypera1r	hmmm
2016-09-16 15:32:08	hypera1r	http://en.cppreference.com/w/cpp/string/basic_string/c_str <-- this one seems to suggest that c_str() would not even point to the internal data store
2016-09-16 15:32:14	hypera1r	pre-c++11 that is
2016-09-16 15:32:28	hypera1r	data()[i] == operator[](i) for every i in [0, size()).(until C++11)
2016-09-16 15:32:39	-->	xaxxon (~xaxxon@2601:602:9d00:d58b:99a6:8004:11d9:3868) has joined ##c++
2016-09-16 15:33:14	KrzaQ	the standard is pretty vague
2016-09-16 15:33:26	KrzaQ	A pointer to the initial element of an array of lengthsize() + 1whose firstsize()elements equal the corresponding elements of the string controlled by*thisand whose last element is a
2016-09-16 15:33:27	KrzaQ	null character specified bycharT().
2016-09-16 15:33:30	-->	fahadash (uid44972@gateway/web/irccloud.com/x-uqqkwuieakcmloqa) has joined ##c++
2016-09-16 15:33:34	<--	LightYagami (~CanIHazMe@unaffiliated/canihazmemecats) has quit (Read error: Connection reset by peer)
2016-09-16 15:35:57	-->	elh9_ (~elh9___@110-175-114-60.tpgi.com.au) has joined ##c++
2016-09-16 15:36:16	<--	elh9_ (~elh9___@110-175-114-60.tpgi.com.au) has quit (Remote host closed the connection)
2016-09-16 15:36:29	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Ping timeout: 244 seconds)
2016-09-16 15:38:09	<--	Aquazi (~Aquazi@host101-216-dynamic.27-79-r.retail.telecomitalia.it) has quit (Read error: Connection reset by peer)
2016-09-16 15:38:34	-->	vdamewood (~vdamewood@unaffiliated/vdamewood) has joined ##c++
2016-09-16 15:39:16	-->	elnormous (~elnormous@91.105.17.158) has joined ##c++
2016-09-16 15:40:25	<--	blackwind_123 (~IceChat9@117.192.128.216) has quit (Ping timeout: 248 seconds)
2016-09-16 15:40:52	-->	Beetny (~Beetny@14-202-48-200.tpgi.com.au) has joined ##c++
2016-09-16 15:43:09	-->	LightYagami (~CanIHazMe@unaffiliated/canihazmemecats) has joined ##c++
2016-09-16 15:43:09		[15:43]
2016-09-16 15:43:37	--	irc: disconnected from server
2016-09-16 15:49:15	-->	alyptik (~alyptik@unaffiliated/alyptik) has joined ##c++
2016-09-16 15:49:15		[15:49]
2016-09-16 15:49:15	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || https://isocpp.org/faq || pastes: http://melpon.org/wandbox"
2016-09-16 15:49:15	--	Topic set by V-ille (~ville@81-175-149-170.bb.dnainternet.fi) on Fri, 18 Sep 2015 07:13:01
2016-09-16 15:49:15	--	Channel ##c++: 943 nicks (0 ops, 0 voices, 943 normals)
2016-09-16 15:49:23	<--	vdamewood (~vdamewood@unaffiliated/vdamewood) has quit (Ping timeout: 265 seconds)
2016-09-16 15:49:23	KrzaQ	the standard uses the verb raise for exceptions too
2016-09-16 15:49:28	Tiin57	I'll email the prof and figure out what he's talking about
2016-09-16 15:49:46	--	Channel created on Fri, 14 Sep 2001 17:15:35
2016-09-16 15:50:53	-->	Carbonflux (~Bob@75-172-112-206.tukw.qwest.net) has joined ##c++
2016-09-16 15:53:29	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-16 15:54:22	<--	SwiftMatt (~Objective@162.242.94.208) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-16 15:55:21	-->	fr (~fr@pD95775BA.dip0.t-ipconnect.de) has joined ##c++
2016-09-16 15:55:33	<--	plusone (~plusone@176.24.26.166) has quit (Ping timeout: 240 seconds)
2016-09-16 15:56:18	-->	SoItBegins (~SoItBegin@184.71.5.142) has joined ##c++
2016-09-16 15:56:45	SoItBegins	‘scuse me. I have a problem where I have a recursive function, and it takes an int[] as an argument.
2016-09-16 15:57:36	SoItBegins	The first time you call it, you provide NULL for the int[]. It takes this to mean it should make an array with a length equal to another argument: int current_array [length_to_make];
2016-09-16 15:57:57	SoItBegins	Then, because it’s recursive, it modifies this array, and then passes it to another run of the function.
2016-09-16 15:58:13	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Ping timeout: 255 seconds)
2016-09-16 15:58:18	SoItBegins	The second time, it receives the argument as int array_so_far[].
2016-09-16 15:58:40	SoItBegins	Then it is supposed to do:
2016-09-16 15:58:46	SoItBegins	current_array = array_so_far;
2016-09-16 15:58:57	SoItBegins	Except, when I actually try that, I get a compiler error:
2016-09-16 15:59:03	<--	fr_ (~fr@pD95777DD.dip0.t-ipconnect.de) has quit (Ping timeout: 265 seconds)
2016-09-16 15:59:13	SoItBegins	“ error: incompatible types in assignment of 'int*' to 'int [length_to_make]’ “
2016-09-16 15:59:34	SoItBegins	I understand what the problem is, but I’m a bit at a loss as to how to fix it exactly.
2016-09-16 15:59:42	SoItBegins	Advice?
2016-09-16 16:00:49	Eelis	testcase
2016-09-16 16:00:58	SoItBegins	‘k hangon
2016-09-16 16:01:02	xaxxon	!give SoItBegins testcase
2016-09-16 16:01:03	nolyc	SoItBegins: A testcase is the _least_ amount of code that replicates your problem, paste it to http://coliru.stacked-crooked.com and give us the link. Do _not_ paste code to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
2016-09-16 16:01:26	xaxxon	SoItBegins, all that stuff you heard about "pointers and arrays being the same"?   Yeah, no.
2016-09-16 16:01:47	SoItBegins	xaxxon: I know that they aren’t, but I’m not sure how to reconcile it.
2016-09-16 16:01:56	SoItBegins	Since the length isn’t known until the function is called the first time.
2016-09-16 16:02:36	-->	fstd_ (~fstd@unaffiliated/fisted) has joined ##c++
2016-09-16 16:03:01	xaxxon	probably by using a vector
2016-09-16 16:03:08	xaxxon	but let's see the test case
2016-09-16 16:03:18	--	ubsan is now known as [DCIETS]ubsan_pt
2016-09-16 16:04:16	SoItBegins	No vectors allowed. By order of boss.
2016-09-16 16:04:16		[16:04]
2016-09-16 16:04:26	<--	[DCIETS]ubsan_pt (~ubsan@frozen.darkfox.id.au) has left ##c++
2016-09-16 16:04:42	-->	ubsan (~ubsan@frozen.darkfox.id.au) has joined ##c++
2016-09-16 16:05:09	Eelis	!restrict
2016-09-16 16:05:10	nolyc	If you insist on using only a restricted subset of C++, then know that our interest in helping you is inversely proportional to the severity of the restrictions.
2016-09-16 16:05:27	SoItBegins	'k.
2016-09-16 16:05:47	SoItBegins	Anyway, http://coliru.stacked-crooked.com/a/ecc8ff3facfbbadd
2016-09-16 16:05:48	ubsan	why the hell would your boss not allow vectors
2016-09-16 16:05:52	xaxxon	probably time to look for a better job, too
2016-09-16 16:05:57	ubsan	^^^
2016-09-16 16:05:58	doppel	i'll remember that if the subset that i decide to use is mostly c headers.
2016-09-16 16:06:00	doppel	;-P
2016-09-16 16:06:01	KrzaQ	probably boss = teacher
2016-09-16 16:06:13	ubsan	KrzaQ: makes more sense, I guess
2016-09-16 16:06:14	SoItBegins	Graduate supervisor, actually.
2016-09-16 16:06:19	SoItBegins	Which I guess makes her a teacher, but...
2016-09-16 16:06:19	<--	fstd (~fstd@unaffiliated/fisted) has quit (Ping timeout: 255 seconds)
2016-09-16 16:06:19	--	fstd_ is now known as fstd
2016-09-16 16:06:21	ubsan	still shitty as fuck tho
2016-09-16 16:06:29	SoItBegins	This is part of research code.
2016-09-16 16:06:37	xaxxon	I don't know that to even be valid C++
2016-09-16 16:06:42	KrzaQ	not denying that. It's just the backwards attitude those kind of people have
2016-09-16 16:07:09	Eelis	who does she even think she is that she can tell you not to use vectors in your graduate project? ridiculous
2016-09-16 16:07:11	xaxxon	!give SoItBegins test case
2016-09-16 16:07:18	xaxxon	!give SoItBegins testcase
2016-09-16 16:07:19	nolyc	SoItBegins: A testcase is the _least_ amount of code that replicates your problem, paste it to http://coliru.stacked-crooked.com and give us the link. Do _not_ paste code to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
2016-09-16 16:07:21	SoItBegins	xaxxon: I gave you the test case.
2016-09-16 16:07:23	xaxxon	your code doesn't reproduce anything
2016-09-16 16:07:31	SoItBegins	It reproduces the compiler error I’m having.
2016-09-16 16:07:33	xaxxon	it's not a valid program
2016-09-16 16:07:38	SoItBegins	“main.cpp:9:19: error: incompatible types in assignment of 'int*' to 'int [spinesize]'
2016-09-16 16:07:38	SoItBegins	   current_array = array_so_far;”
2016-09-16 16:07:40	xaxxon	I can't compile that
2016-09-16 16:07:44	SoItBegins	That’s the compiler error I’m trying to get to go away.
2016-09-16 16:07:48	SoItBegins	That’s the entire reason I’m ehre.
2016-09-16 16:07:50	SoItBegins	*here
2016-09-16 16:07:51	doppel	what is current_array = array_so_far; supposed to actually do?
2016-09-16 16:07:52	xaxxon	I can't even attempt to compile it
2016-09-16 16:07:55	Eelis	the code is already wrong at line 2
2016-09-16 16:07:58	Eelis	forget the rest
2016-09-16 16:08:06	doppel	that is, what are you expecting it to do?
2016-09-16 16:08:14	xaxxon	SoItBegins, 4 : error: 'NULL' was not declared in this scope
2016-09-16 16:08:29	KrzaQ	I'm trying to make a testcase of evilness of type-punning through casts and the compilers thwart me again and again. https://godbolt.org/g/FoM8Pv Any ideas?
2016-09-16 16:09:04	xaxxon	KrzaQ, that compiles for me
2016-09-16 16:09:10	SoItBegins	doppel: Basically, if you pass in NULL to the program, it generates a new array of the correct length (current_array) and passes it down the recursion. If you do not, it copies the received array (array_so_far) to current_array by handle so that current_array can be passed down the recursion in that same function call.
2016-09-16 16:09:47	SoItBegins	*NULL to the function, not the program.
2016-09-16 16:09:49	doppel	okay, you can't copy an array through an assignment operation that way.
2016-09-16 16:09:50	-->	josef_k (~jeremy@59.102.31.229) has joined ##c++
2016-09-16 16:10:04	xaxxon	SoItBegins, when I compile your code, I get 4 : error: 'NULL' was not declared in this scope  -- not whatever error you say you get
2016-09-16 16:10:18	xaxxon	https://godbolt.org/g/VulZrK
2016-09-16 16:10:32	SoItBegins	doppel: I, uh, got that far. I’m figuring out how to jury-rig it so that I can.
2016-09-16 16:10:44	SoItBegins	xaxxon: Sorry, forgot #include <cstdlib>
2016-09-16 16:10:44	KrzaQ	xaxxon: yeah. I'm trying to wrangle the compiler to call sink('A') directly, despite the array having been changed by a type-punned pointer
2016-09-16 16:10:47	doppel	well, you have to copy the elements manually.
2016-09-16 16:10:52	xaxxon	SoItBegins, you forgot main
2016-09-16 16:11:03	SoItBegins	xaxxon: I have a main function in the real code. This is just a test case.
2016-09-16 16:11:15	<--	ezzieyguywuf (~wolfie@unaffiliated/ezzieyguywuf) has quit (Ping timeout: 248 seconds)
2016-09-16 16:11:23	<--	Birchy (~Birchy@178-164-108.52.3p.ntebredband.no) has quit (Ping timeout: 250 seconds)
2016-09-16 16:11:47	<--	josef_k (~jeremy@59.102.31.229) has quit (Read error: Connection reset by peer)
2016-09-16 16:11:58	SoItBegins	doppel: But I don’t really need to copy the elements. I’m fine with just passing the array received from the arguments without copying it.
2016-09-16 16:12:23	SoItBegins	doppel: The only reason I copy is so that, on the first (outermost) run of the recursive function, I can declare the array within the function, and have it be of the correct length.
2016-09-16 16:12:45	doppel	is there some reason you didn't go with a pointer there?
2016-09-16 16:13:07	SoItBegins	doppel: Guess what else I’m not supposed to use in my code?
2016-09-16 16:13:09	-->	ezzieyguywuf (~wolfie@unaffiliated/ezzieyguywuf) has joined ##c++
2016-09-16 16:13:15	SoItBegins	(dynamic memory allocation)
2016-09-16 16:13:20	-->	Rudolf (~rodolfo@unaffiliated/rudolf) has joined ##c++
2016-09-16 16:13:24	-->	josef_k (~jeremy@59.102.31.229) has joined ##c++
2016-09-16 16:13:30	xaxxon	SoItBegins, the correct error message for your program is: 4 : warning: ISO C++ forbids variable length array 'current_array' [-Wvla]
2016-09-16 16:13:35	doppel	oy vey.
2016-09-16 16:13:36	xaxxon	https://godbolt.org/g/VyrPfH
2016-09-16 16:14:05	 *	doppel facepalms at instructors/supervisors/the man who ties programmers' hands.
2016-09-16 16:14:11	xaxxon	!restrict
2016-09-16 16:14:13	nolyc	If you insist on using only a restricted subset of C++, then know that our interest in helping you is inversely proportional to the severity of the restrictions.
2016-09-16 16:14:20	SoItBegins	xaxxon: You said that already.
2016-09-16 16:14:26	xaxxon	you added another restriction
2016-09-16 16:14:27	wolf_1	alright i got a lot farther
2016-09-16 16:14:29	xaxxon	and you're not writing c++
2016-09-16 16:14:34	xaxxon	so you're off topic
2016-09-16 16:14:34	SoItBegins	doppel: The way Dr. _________ usually does it is by #defining a length constant for arrays like these in the header, and always having them allocated to that size.
2016-09-16 16:14:41	SoItBegins	I thought I could be smarter.
2016-09-16 16:14:45	doppel	xaxxon: bear in mind the restriction he has added are not his idea.
2016-09-16 16:14:50	SoItBegins	^
2016-09-16 16:14:54	xaxxon	doppel, that doesn't matter
2016-09-16 16:15:00	<--	chachasmooth (~chachasmo@unaffiliated/chachasmooth) has quit (Ping timeout: 265 seconds)
2016-09-16 16:15:06	SoItBegins	xaxxon: If you don’t want to help me, you don’t have to :)
2016-09-16 16:15:10	wolf_1	now when I do this std::string Input; cin >> Input; each space is a new line
2016-09-16 16:15:11	xaxxon	and it's not c++, so it's off topic, anyhow
2016-09-16 16:15:15	xaxxon	!give SoItBegins general
2016-09-16 16:15:17	nolyc	SoItBegins: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2016-09-16 16:15:18	wolf_1	so if I wanted to send Privmsg ##kool :hi
2016-09-16 16:15:20	wolf_1	it would send
2016-09-16 16:15:22	wolf_1	PRIVMSG
2016-09-16 16:15:23	wolf_1	##kool
2016-09-16 16:15:24	wolf_1	:hi
2016-09-16 16:15:36	SoItBegins	xaxxon: It’s c++ code. I compile it with g++.
2016-09-16 16:15:39	doppel	well yeah it kinda does.  if you're telling somebody that doesn't like the idea of being limited to a subset of c++ that using a limited subset of c++ is somehow bad/wrong/demotivating, you're kinda preaching to the choir.
2016-09-16 16:15:45	xaxxon	no, it's not.   g++ compiles a lot of things
2016-09-16 16:15:57	-->	chachasmooth (~chachasmo@unaffiliated/chachasmooth) has joined ##c++
2016-09-16 16:16:07	SoItBegins	xaxxon: It’s very C-like c++, but there’s ‘cout’ in a number of places in my real code. Those aren’t in C.
2016-09-16 16:16:16	SoItBegins	And use of the string data type.
2016-09-16 16:16:19	SoItBegins	Stuff like that.
2016-09-16 16:16:26	xaxxon	SoItBegins, dynamically sized arrays are not a part of standard c++
2016-09-16 16:16:33	xaxxon	hence the error message I posted
2016-09-16 16:16:44	xaxxon	https://godbolt.org/g/VyrPfH
2016-09-16 16:16:52	xaxxon	!topic
2016-09-16 16:16:54	nolyc	Welcome to ##c++. This channel is for the discussion of standard C++, including potential and future standardizations. This channel is NOT for discussion of: development platforms (OSes and other tools not directly related to C++), non-standard libraries, programs written in C++, other programming languages, a/s/l, or anything else that isn't C++.
2016-09-16 16:17:03	<--	ftop (~ftop@ppp121-45-223-27.lns20.cbr1.internode.on.net) has quit (Ping timeout: 240 seconds)
2016-09-16 16:17:04	xaxxon	"This channel is for the discussion of standard C++, "
2016-09-16 16:17:07	SoItBegins	xaxxon: I’d like to point out that error only appears when -pedantic is turned on?
2016-09-16 16:17:17	xaxxon	SoItBegins, This channel is for the discussion of standard C++,
2016-09-16 16:17:25	SoItBegins	So it’s C++. It may not be standard C++, but it is C++.
2016-09-16 16:17:32	SoItBegins	doppel, did you have any other ideas?
2016-09-16 16:17:36	xaxxon	This channel is for the discussion of standard C++,
2016-09-16 16:17:41	xaxxon	like.. which part is hard?
2016-09-16 16:17:45	Eelis	C++ is not "whatever gcc accepts without -pedantic". C++ is standardized by ISO
2016-09-16 16:17:46	wolf_1	hello?
2016-09-16 16:17:53	SoItBegins	xaxxon: You don’t need to keep beating me over the head with it. You have made your point clearly.
2016-09-16 16:17:58	xaxxon	!general
2016-09-16 16:17:59	nolyc	##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2016-09-16 16:18:06	-->	SunnyD (~SunnyD@cpe-72-178-78-211.hot.res.rr.com) has joined ##c++
2016-09-16 16:18:17	Eelis	xaxxon: enough with the constant botspamming
2016-09-16 16:18:20	SoItBegins	However, I have to finish my program, I need help, the channel can provide help, and as such can’t afford to just turn around and leave.
2016-09-16 16:18:20	doppel	hold on, i need to scroll up.  (thanks xaxxon. :-/ )
2016-09-16 16:18:32	wolf_1	can any1 help me
2016-09-16 16:18:57	xaxxon	SoItBegins, until you piss everyone off by not following the rules and you get no help anywhere instead of going to the proper channel
2016-09-16 16:19:04	wolf_1	no?
2016-09-16 16:19:08	wolf_1	k
2016-09-16 16:19:14	SoItBegins	wolf_1: What do you need?
2016-09-16 16:19:16	Eelis	SoItBegins: we provide help with C++, not help with "random stuff gcc accepts without -pedantic"
2016-09-16 16:19:16		[16:19]
2016-09-16 16:19:23	SoItBegins	xaxxon: Duly noted.
2016-09-16 16:19:27	SoItBegins	Eelis: Duly noted.
2016-09-16 16:19:49	wolf_1	k whenever I do this: std::string input; cin >> input; send(input)
2016-09-16 16:19:52	xaxxon	however, most of the same people would likely help you if you simply went to the correct channel
2016-09-16 16:19:56	wolf_1	if i were to send "hello hi bye"
2016-09-16 16:20:02	wolf_1	it would send each space as a \n
2016-09-16 16:20:05	wolf_1	and idk how to fix that
2016-09-16 16:20:25	wolf_1	cuz all are supposed to send in 1 line
2016-09-16 16:20:41	pragma-	it's more likely that your program that's reading it is doing it wrong.
2016-09-16 16:21:15	wolf_1	its under a while loop
2016-09-16 16:21:18	wolf_1	does that change anything?
2016-09-16 16:21:25	wolf_1	but there is no \n in it
2016-09-16 16:22:10	<--	elh9 (~elh9___@110-175-114-60.tpgi.com.au) has quit (Ping timeout: 265 seconds)
2016-09-16 16:22:24	wolf_1	here's the function pragma- http://pastebin.com/ZWP1RpG6
2016-09-16 16:22:38	doppel	soitbegins: you mentioned that the assignment op was supposed to copy the array, but then you said you don't actually need to copy the array.  i am kinda confused now.
2016-09-16 16:23:34	SoItBegins	doppel: First (outermost) run of the function, the user passes in NULL, and the function takes that as a cue to declare the array. The, yes, variable length array. The newly declared array is passed to the recursive call.
2016-09-16 16:24:11	wolf_1	guess not then
2016-09-16 16:24:20	SoItBegins	All other (inner) runs of the function, the array is passed in. It could be straight passed to the recursive call again, I only copy it because the call as I wrote it uses the declared-array variable rather than the argument variable.
2016-09-16 16:24:26	<--	neurodrone (~neurodron@unaffiliated/neurodrone) has quit (Quit: neurodrone)
2016-09-16 16:25:06	SoItBegins	I could write two separate versions of the inner function’s code: one that works on the newly declared array, and one that works on the passed-from-the-arguments array.
2016-09-16 16:25:06	doppel	okay, so if the array is supposed to be declared when the user passes in NULL, why does the declaration of the array precede the place where this is checked?
2016-09-16 16:26:20	SoItBegins	As I had it, the array is declared either way, because of the copy (either current_array is declared and filled, or declared and copied). If I didn’t need to copy, I’d change the declaration to only occur when NULL was passed in, because then it would only be declared in that circumstance.
2016-09-16 16:26:41	bobot	wolf_1 !next
2016-09-16 16:26:44	bobot	i mean
2016-09-16 16:26:47	bobot	!next
2016-09-16 16:26:49	nolyc	Another satisfied customer, next!
2016-09-16 16:26:50	bobot	wolf_1
2016-09-16 16:27:01	wolf_1	totally
2016-09-16 16:27:48	wolf_1	so is anybody here?
2016-09-16 16:27:56	doppel	i am helping someone else.
2016-09-16 16:29:16	SoItBegins	Sorry, it’ll be just a few more minutes.
2016-09-16 16:29:17	doppel	okay, so you changed it to only declare the new array when NULL is passed?
2016-09-16 16:29:30	SoItBegins	Well, no, because if I did that the copy would fail.
2016-09-16 16:29:48	SoItBegins	“current_array = array_so_far;” being the copy.
2016-09-16 16:30:00	-->	Gluesticky (~nobody@unaffiliated/gluesticky) has joined ##c++
2016-09-16 16:30:14	<--	de-facto (~de-facto@unaffiliated/de-facto) has quit (Remote host closed the connection)
2016-09-16 16:30:41	<--	dustinm (~dustinm@68.ip-149-56-14.net) has quit (Quit: Leaving)
2016-09-16 16:31:01	xaxxon	you can't assign arrays
2016-09-16 16:31:12	<--	somaReverse (~amos@2400:dd01:1022:30:6af7:28ff:fe78:6901) has quit (Quit: WeeChat 1.5)
2016-09-16 16:31:21	-->	dustinm (~dustinm@68.ip-149-56-14.net) has joined ##c++
2016-09-16 16:31:44	slavanap	wolf_1, https://ideone.com/SwlM2U
2016-09-16 16:31:45	xaxxon	and it surely doesn't make a copy
2016-09-16 16:32:00	-->	somaReverse (~amos@2400:dd01:1022:30:6af7:28ff:fe78:6901) has joined ##c++
2016-09-16 16:32:21	wolf_1	k slavanap
2016-09-16 16:32:26	-->	neurodrone (~neurodron@unaffiliated/neurodrone) has joined ##c++
2016-09-16 16:32:34	SoItBegins	xaxxon: Aren’t you helping me in the wrong channel? XP
2016-09-16 16:32:50	wolf_1	wait
2016-09-16 16:32:51	<--	Mnkras (~Mnkras@concrete5/781/Mnkras) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-16 16:32:56	wolf_1	slavanap, thats not what I want to happen
2016-09-16 16:32:59	wolf_1	it's supposed to send it like
2016-09-16 16:33:04	wolf_1	test string message
2016-09-16 16:33:09	xaxxon	SoItBegins, everything I am saying is standard c++
2016-09-16 16:33:11	wolf_1	not test\n string\n message\n
2016-09-16 16:33:14	slavanap	wolf_1, you want to read all input?
2016-09-16 16:33:18	wolf_1	yeah
2016-09-16 16:33:20	wolf_1	its an IRC bot
2016-09-16 16:33:24	wolf_1	so im sending PRIVMSG etc
2016-09-16 16:33:26	wolf_1	join etc
2016-09-16 16:33:27	xaxxon	SoItBegins, there is no reason for your function to be recursive.   Just have it call a function with a different name.
2016-09-16 16:33:32	-->	Mnkras (~Mnkras@concrete5/781/Mnkras) has joined ##c++
2016-09-16 16:33:47	xaxxon	all you did was make a helper function to make sure there's memory allocated.   that's not recursion
2016-09-16 16:33:50	slavanap	wolf_1, just remove " << std::endl " :)
2016-09-16 16:33:55	doppel	okay, so first call, NULL is passed, array is initialized, then recursive call, pointer to array is passed, and something gets copied.
2016-09-16 16:34:17	wolf_1	oh thanks slavanap
2016-09-16 16:34:17		[16:34]
2016-09-16 16:34:53	-->	yong (~vayne@pD9E440A7.dip0.t-ipconnect.de) has joined ##c++
2016-09-16 16:34:56	xaxxon	no, no recursive call.   There is no recursion going on.   Your "base case" is always 0 or 1 steps away.   "unroll" your "loop" and just write two functions
2016-09-16 16:34:56	slavanap	doppel, http://fud.community.services.support.microsoft.com/Fud/FileDownloadHandler.ashx?fid=f11faae2-c44a-4b98-8cba-3198ddab7cac
2016-09-16 16:35:15	<--	yong (~vayne@pD9E440A7.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-09-16 16:35:28	doppel	why are you showing this to me.
2016-09-16 16:35:53	slavanap	doppel, "... something gets copied." something happening. something like infinite recursion.
2016-09-16 16:36:17	doppel	:-P this is not helpful.
2016-09-16 16:36:22	<--	nikki93 (~nikki93@2601:645:8104:cb10:d6e:a94a:4ec7:47fb) has quit (Remote host closed the connection)
2016-09-16 16:36:34	-->	Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2016-09-16 16:36:53	doppel	and it's not that amusing either.
2016-09-16 16:37:03	doppel	we are not amused.
2016-09-16 16:37:29	<--	chang (~vayne@pD9E451E6.dip0.t-ipconnect.de) has quit (Ping timeout: 244 seconds)
2016-09-16 16:38:22	<--	fflam (~mdt@ip72-192-136-18.sd.sd.cox.net) has quit (Quit: WeeChat 1.5)
2016-09-16 16:40:06	-->	blackbeard420 (~blackbear@dynamic-acs-24-154-82-158.zoominternet.net) has joined ##c++
2016-09-16 16:40:26	SoItBegins	xaxxon: That seems like it could work.
2016-09-16 16:40:46	-->	fflam (~mdt@ip72-192-136-18.sd.sd.cox.net) has joined ##c++
2016-09-16 16:40:47	slavanap	doppel, imho windows 10 is amusing sometime. As well as C++. The last time I remember is when I read c# corecrl lib sources. :)
2016-09-16 16:40:56	xaxxon	the second function doesn't have to check to see if it got memory, since the first function already did
2016-09-16 16:41:01	<--	ezzieyguywuf (~wolfie@unaffiliated/ezzieyguywuf) has quit (Ping timeout: 265 seconds)
2016-09-16 16:41:10	doppel	windows 10.  feh.
2016-09-16 16:41:24	SoItBegins	Also, xaxxon, doppel: The real function (as opposed to the test case) runs for on average 6-8 times.
2016-09-16 16:41:48	xaxxon	so the second function can be recursive
2016-09-16 16:42:38	doppel	i had high hopes when i learned that microsoft had brought back the desktop that maybe they had learned something.  apparently it was how to proprietize everything.
2016-09-16 16:43:23	doppel	but i digress.
2016-09-16 16:45:05	SoItBegins	xaxxon, doppel: It works now.
2016-09-16 16:45:19	doppel	what did you do
2016-09-16 16:45:41	SoItBegins	What xaxxon suggested: put the first case in one function, and call the actual recursion as a second function.
2016-09-16 16:46:00	SoItBegins	“permute_for_spine” calls “permute_helper”, which recurses. No copy is involved.
2016-09-16 16:46:29	doppel	well, i mean, what did you do for the copying
2016-09-16 16:46:40	-->	genieliu (~chatzilla@157.61.158.81) has joined ##c++
2016-09-16 16:46:44	SoItBegins	doppel: permute_for_spine declares the array, since it is always called the first time.
2016-09-16 16:46:58	SoItBegins	permute_helper does not copy, since the array is passed in as an argument, so no copy is needed.
2016-09-16 16:47:15	doppel	okay.
2016-09-16 16:47:26	-->	elnormous (~elnormous@91.105.17.158) has joined ##c++
2016-09-16 16:47:38	SoItBegins	The reason the copy was needed was basically to change the name of the variable from the name of the argument to the name of the variable declared inside the original function.
2016-09-16 16:47:49	doppel	...so what is the array even for?
2016-09-16 16:47:57	SoItBegins	The array represents a graph.
2016-09-16 16:48:20	SoItBegins	The program enumerates all possible configurations of the graph, subject to certain conditions.
2016-09-16 16:50:36	-->	gp5st (~jim@pool-98-111-192-215.pitbpa.fios.verizon.net) has joined ##c++
2016-09-16 16:50:36		[16:50]
2016-09-16 16:51:17	doppel	so the function is supposed to rearrange, i.e. permute, the different things?
2016-09-16 16:52:40	<--	elnormous (~elnormous@91.105.17.158) has quit (Ping timeout: 255 seconds)
2016-09-16 16:52:54	SoItBegins	The permutation aspect is in that, the real function (not the test case) has an allocated number of leaf nodes it can distribute by attaching them to different other nodes on the graph.
2016-09-16 16:53:43	SoItBegins	The program is supposed to output every way (permutation) of attaching the leaf nodes (the leaf nodes are identical, so it’s really how many nodes are attached to which other nodes).
2016-09-16 16:53:58	-->	SwiftMatt (~Objective@162.242.94.208) has joined ##c++
2016-09-16 16:54:15	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-16 16:54:48	<--	SpaceDanceCJ (~Sasha@178.121.64.65) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-09-16 16:55:16	SoItBegins	The reason Dr. ________ dislikes dynamic memory and C++ data structures is that the final program will run with the settings set to a very large number of total nodes in the graph.
2016-09-16 16:55:22	SoItBegins	Enough to make the program run for several months.
2016-09-16 16:56:00	slavanap	And it is time when GPU comes to the scene.
2016-09-16 16:56:01	SoItBegins	The goal of using only basic data structures (arrays vs std::array / std::vector) is so that the program runs as flat-out fast as possible, to reduce the total runtime.
2016-09-16 16:56:38	slavanap	SoItBegins, take a look at CUDA, but not here ofc.
2016-09-16 16:56:43	SoItBegins	The goal of avoiding formal dynamic memory (malloc) is to avoid memory leaks tha could crash the program if got wrong.
2016-09-16 16:56:50	<--	neurodrone (~neurodron@unaffiliated/neurodrone) has quit (Quit: neurodrone)
2016-09-16 16:57:01	SoItBegins	slavanap: Got it.
2016-09-16 16:57:53	doppel	your graduate supervisor's name is dr. underscore.  got it.
2016-09-16 16:58:07	<--	hexagoxel (~hexagoxel@p4FCCD84F.dip0.t-ipconnect.de) has quit (Ping timeout: 244 seconds)
2016-09-16 16:58:42	<--	snover (~Adium@unaffiliated/snover) has quit (Quit: Leaving.)
2016-09-16 16:59:50	-->	hexagoxel (~hexagoxel@p200300798F119100021E33FFFE2231E9.dip0.t-ipconnect.de) has joined ##c++
2016-09-16 16:59:52	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Ping timeout: 255 seconds)
2016-09-16 17:00:06	slavanap	I wonder is it possible to me to enter CS post-graduate in good US university. At least I got masters here.
2016-09-16 17:00:12	<--	TheScholar (~randomman@ool-44c16ddc.dyn.optonline.net) has quit
2016-09-16 17:00:28	<--	xaxxon (~xaxxon@2601:602:9d00:d58b:99a6:8004:11d9:3868) has quit (Quit: This computer has gone to sleep)
2016-09-16 17:00:33	cferry	it's super competitive
2016-09-16 17:03:08	slavanap	cferry, well it depends. all you need is to make your supervisor interested in your research. or just forget and start your own CS-based business :)
2016-09-16 17:03:23	-->	xaxxon (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has joined ##c++
2016-09-16 17:03:58	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-16 17:04:25	SoItBegins	doppel: Lol. It tooooooooooootally is. ;)
2016-09-16 17:04:38	doppel	hehehe
2016-09-16 17:05:33	<--	martiert_work (~martin@2.37-191-171.fiber.lynet.no) has quit (Ping timeout: 240 seconds)
2016-09-16 17:06:01	<--	djapo (~archie@unaffiliated/djapo) has quit (Quit: leaving)
2016-09-16 17:06:01		[17:06]
2016-09-16 17:06:25	<--	martiert (~martin@2.37-191-171.fiber.lynet.no) has quit (Ping timeout: 260 seconds)
2016-09-16 17:09:08	gp5st	i was wondering if someone could give me feedback on a code sample. http://ideone.com/Le4EDI I was trying to constrain the stack size at compile time in order to avoid dynamic allocations
2016-09-16 17:09:52	gp5st	constrain and check the stack size*
2016-09-16 17:10:34	gp5st	however, I'd also like to avoid generating code for each layer in the stack, but I'm stuck on that part if anyone has feedback on how to go about that
2016-09-16 17:10:44	-->	cbissonn (~cbissonn@104.221.125.44) has joined ##c++
2016-09-16 17:11:23	<--	slavanap (~slavanap@5.145.251.251) has quit (Quit: Leaving)
2016-09-16 17:12:41	-->	martiert_work (~martin@2.37-191-171.fiber.lynet.no) has joined ##c++
2016-09-16 17:13:31	-->	martiert (~martin@2.37-191-171.fiber.lynet.no) has joined ##c++
2016-09-16 17:16:04	<--	code_zombie (~code_zomb@2605:a601:aa1:5c00:d96:ef14:3e95:f0f6) has quit (Ping timeout: 255 seconds)
2016-09-16 17:16:28	<--	SwiftMatt (~Objective@162.242.94.208) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-16 17:19:29	-->	TheScholar (~randomman@ool-44c16ddc.dyn.optonline.net) has joined ##c++
2016-09-16 17:19:51	<--	martiert_work (~martin@2.37-191-171.fiber.lynet.no) has quit (Remote host closed the connection)
2016-09-16 17:21:57	-->	mfc (~mfc@unaffiliated/mfc) has joined ##c++
2016-09-16 17:21:57		[17:21]
2016-09-16 17:24:16	--	bobot is now known as mussolini
2016-09-16 17:24:49	-->	justan0theruser (~justanoth@unaffiliated/justanotheruser) has joined ##c++
2016-09-16 17:25:06	-->	martiert_work (~martin@2.37-191-171.fiber.lynet.no) has joined ##c++
2016-09-16 17:25:06	-->	code_zombie (~code_zomb@2605:a601:aa1:5c00:d96:ef14:3e95:f0f6) has joined ##c++
2016-09-16 17:26:03	<--	justanotheruser (~justanoth@unaffiliated/justanotheruser) has quit (Ping timeout: 244 seconds)
2016-09-16 17:29:08	<--	cbissonn (~cbissonn@104.221.125.44) has quit (Quit: Leaving)
2016-09-16 17:29:35	-->	krypton_ (~krypton_@185.128.41.27) has joined ##c++
2016-09-16 17:32:25	<--	cbot (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Ping timeout: 248 seconds)
2016-09-16 17:32:40	<--	m_ben (~m_ben@unaffiliated/m-ben/x-5917362) has quit (Ping timeout: 260 seconds)
2016-09-16 17:32:54	doppel	too bad there isn't a c++ replacement for realloc
2016-09-16 17:33:03	-->	cbot (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2016-09-16 17:33:19	-->	SHC (~quassel@45.249.249.77) has joined ##c++
2016-09-16 17:33:28	-->	fedepad (~fedepad@2601:643:8401:9bd:dc5c:a63c:4ec6:1ef2) has joined ##c++
2016-09-16 17:33:51	doppel	well, unless you count the containers being resizable.
2016-09-16 17:34:47	doppel	well, some of them
2016-09-16 17:35:46	-->	Mannn (~Mannn____@2605:6000:f514:b800:8c40:adc8:1aee:c40d) has joined ##c++
2016-09-16 17:35:55	Mannn	So what's the difference between "hey" and "hey"s ?
2016-09-16 17:36:42	systemfault	One is an array of chars and the other a std::string?
2016-09-16 17:36:56	-->	nikki93 (~nikki93@2601:645:8104:cb10:d6e:a94a:4ec7:47fb) has joined ##c++
2016-09-16 17:37:11	<--	genieliu (~chatzilla@157.61.158.81) has quit (Ping timeout: 272 seconds)
2016-09-16 17:37:11		[17:37]
2016-09-16 17:37:44	xaxxon	Mannn, http://en.cppreference.com/w/cpp/language/user_literal
2016-09-16 17:38:10	-->	asc232 (~Keith@179.38.232.249) has joined ##c++
2016-09-16 17:38:21	Mannn	thank you
2016-09-16 17:38:37	xaxxon	np
2016-09-16 17:41:33	-->	ezzieyguywuf (~wolfie@unaffiliated/ezzieyguywuf) has joined ##c++
2016-09-16 17:41:35	<--	mfc (~mfc@unaffiliated/mfc) has quit (Read error: Connection reset by peer)
2016-09-16 17:41:41	<--	nikki93 (~nikki93@2601:645:8104:cb10:d6e:a94a:4ec7:47fb) has quit (Ping timeout: 250 seconds)
2016-09-16 17:41:59	-->	hk238 (~kvirc@unaffiliated/hk238) has joined ##c++
2016-09-16 17:42:00	<--	squelch (~squelch@99-53-229-4.lightspeed.irvnca.sbcglobal.net) has quit (Ping timeout: 260 seconds)
2016-09-16 17:42:47	-->	YungRaj (~YungRaj@104-63-233-54.lightspeed.hstntx.sbcglobal.net) has joined ##c++
2016-09-16 17:42:54	xaxxon	though looking for something that uses a language that is taught in your school might be helpful
2016-09-16 17:43:03	xaxxon	or at least that most people interested are already somewhat familiar with
2016-09-16 17:46:24	<--	krypton_ (~krypton_@185.128.41.27) has quit (Remote host closed the connection)
2016-09-16 17:46:49	-->	cbissonn (~cbissonn@104.221.125.44) has joined ##c++
2016-09-16 17:46:57	<--	cbissonn (~cbissonn@104.221.125.44) has quit (Remote host closed the connection)
2016-09-16 17:46:57	-->	SwiftMatt (~Objective@162.242.94.208) has joined ##c++
2016-09-16 17:47:05	<--	chardan (~chardan@c-73-157-202-190.hsd1.or.comcast.net) has quit (Ping timeout: 240 seconds)
2016-09-16 17:48:46	<--	esas (~esas@unaffiliated/esas) has quit
2016-09-16 17:49:36	-->	plusone (~plusone@176.24.26.166) has joined ##c++
2016-09-16 17:55:00		[17:49]
2016-09-16 17:56:43	-->	calincru (~calin@c-73-231-85-3.hsd1.ca.comcast.net) has joined ##c++
2016-09-16 17:56:46	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-16 17:58:20	<--	SunnyD (~SunnyD@cpe-72-178-78-211.hot.res.rr.com) has quit (Quit: ChatZilla 0.9.90.1 [Firefox 30.0/20140605174243])
2016-09-16 17:59:16	<--	skweek (~skweek@68-200-146-225.res.bhn.net) has quit (Ping timeout: 255 seconds)
2016-09-16 17:59:45	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Remote host closed the connection)
2016-09-16 17:59:58	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-16 18:00:11	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-16 18:00:26	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-16 18:00:42	<--	Gathis (~TheBlack@unaffiliated/gathis) has quit (Remote host closed the connection)
2016-09-16 18:01:23	-->	Zxpr1jk (~zxpr1jk@24.214.61.47) has joined ##c++
2016-09-16 18:01:23	-->	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has joined ##c++
2016-09-16 18:02:12	doppel	one is a string literal and the other is a user-defined literal using the std::string literal operator defined in the standard.
2016-09-16 18:02:18	<--	ec\ (~me@ell.io) has quit (Quit: Lost terminal)
2016-09-16 18:05:07	<--	symm- (~symm-@86.127.152.32) has quit (Ping timeout: 255 seconds)
2016-09-16 18:05:24	doppel	the irony here is that it's supposed to make things easier.
2016-09-16 18:06:02	-->	Cohedrin (~textual@192.77.237.205) has joined ##c++
2016-09-16 18:06:39	<--	Smx (Elite8556@gateway/shell/elitebnc/x-cdhcqrzdiixtgibl) has quit (Ping timeout: 265 seconds)
2016-09-16 18:07:23	<--	AndrewPRS (AndrewPRS@gateway/shell/elitebnc/x-mpgluvqsmiqbgkyb) has quit (Ping timeout: 244 seconds)
2016-09-16 18:07:26	<--	munch (pls@gateway/shell/elitebnc/x-svjacmasczblsbzt) has quit (Excess Flood)
2016-09-16 18:10:11	-->	AndrewPRS (AndrewPRS@gateway/shell/elitebnc/x-immikewpuimythyj) has joined ##c++
2016-09-16 18:10:11		[18:10]
2016-09-16 18:12:27	<--	dpower (uid103540@gateway/web/irccloud.com/x-fwybqbnqtdmrxptu) has quit (Ping timeout: 265 seconds)
2016-09-16 18:12:51	-->	dpower (uid103540@gateway/web/irccloud.com/x-ikbqcurmtdbhzelx) has joined ##c++
2016-09-16 18:13:04	<--	arescorpio (~arescorpi@214-27-245-190.fibertel.com.ar) has quit (Quit: Leaving.)
2016-09-16 18:13:32	<--	josef_k (~jeremy@59.102.31.229) has quit (Read error: Connection reset by peer)
2016-09-16 18:14:01	<--	glenfe (~glen@unaffiliated/glenfe) has quit (Quit: Leaving)
2016-09-16 18:14:41	-->	munch (pls@gateway/shell/elitebnc/x-cphgdhckhrpnfmoa) has joined ##c++
2016-09-16 18:14:55	-->	josef_k (~jeremy@59.102.31.229) has joined ##c++
2016-09-16 18:15:10	<--	gioerr (~gioerr@athedsl-4535808.home.otenet.gr) has quit (Ping timeout: 276 seconds)
2016-09-16 18:15:11	<--	josef_k (~jeremy@59.102.31.229) has quit (Read error: Connection reset by peer)
2016-09-16 18:16:07	-->	josef_k (~jeremy@59.102.31.229) has joined ##c++
2016-09-16 18:16:25	<--	josef_k (~jeremy@59.102.31.229) has quit (Read error: Connection reset by peer)
2016-09-16 18:16:50	<--	doppel (~chatzilla@ip70-189-197-158.lv.lv.cox.net) has quit (Quit: ChatZilla 0.9.92 [Firefox 48.0.2/20160823121617])
2016-09-16 18:17:34	<--	ffilozov (~ffilozov@pool-72-69-174-106.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-16 18:18:33	<--	Immune_ (~Immune@173.55.30.110) has left ##c++
2016-09-16 18:19:14	<--	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has quit (Ping timeout: 244 seconds)
2016-09-16 18:19:53	-->	FreeBirdLjj (~freebirdl@112.20.80.222) has joined ##c++
2016-09-16 18:20:11	-->	ec\ (~me@ell.io) has joined ##c++
2016-09-16 18:20:30	<--	gp5st (~jim@pool-98-111-192-215.pitbpa.fios.verizon.net) has quit (Ping timeout: 260 seconds)
2016-09-16 18:20:33	-->	josef_k (~jeremy@59.102.31.229) has joined ##c++
2016-09-16 18:20:42	-->	immune (~Immune@173.55.30.110) has joined ##c++
2016-09-16 18:21:07	<--	josef_k (~jeremy@59.102.31.229) has quit (Read error: Connection reset by peer)
2016-09-16 18:21:17	Bigcheese	Anyone got any fun examples of compiler explotation of UB?
2016-09-16 18:21:35	-->	zwoof (~zwoof@modemcable076.238-20-96.mc.videotron.ca) has joined ##c++
2016-09-16 18:22:27	-->	genieliu (~chatzilla@157.61.158.81) has joined ##c++
2016-09-16 18:22:30	-->	josef_k (~jeremy@59.102.31.229) has joined ##c++
2016-09-16 18:23:02	<--	genieliu (~chatzilla@157.61.158.81) has quit (Client Quit)
2016-09-16 18:23:26	-->	genieliu (~chatzilla@157.61.158.81) has joined ##c++
2016-09-16 18:24:12	-->	jd_livm (~jd_livm@c-73-167-60-180.hsd1.ma.comcast.net) has joined ##c++
2016-09-16 18:24:12	<--	josef_k (~jeremy@59.102.31.229) has quit (Read error: Connection reset by peer)
2016-09-16 18:24:30	<--	FreeBirdLjj (~freebirdl@112.20.80.222) has quit (Ping timeout: 264 seconds)
2016-09-16 18:25:04	-->	Smx (Elite8556@gateway/shell/elitebnc/x-oqwltxkqzntfkhne) has joined ##c++
2016-09-16 18:26:30	<--	fahadash (uid44972@gateway/web/irccloud.com/x-uqqkwuieakcmloqa) has quit (Quit: Connection closed for inactivity)
2016-09-16 18:26:30		[18:26]
2016-09-16 18:27:26	<--	xaxxon (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has quit (Quit: Leaving)
2016-09-16 18:27:41	-->	xaxxon (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has joined ##c++
2016-09-16 18:28:05	<--	kadoban (~mud@unaffiliated/kadoban) has quit (Quit: bye)
2016-09-16 18:29:25	<--	genieliu (~chatzilla@157.61.158.81) has quit (Ping timeout: 244 seconds)
2016-09-16 18:29:50	<--	wildlander (~wild@unaffiliated/wildlander) has quit (Quit: Saliendo)
2016-09-16 18:30:06	<--	dynastic (~dynastic@astound-66-234-205-111.ca.astound.net) has quit (Ping timeout: 276 seconds)
2016-09-16 18:30:19	<--	bushido_ (~bushido@unaffiliated/bursihido) has quit (Ping timeout: 255 seconds)
2016-09-16 18:31:27	<--	ezzieyguywuf (~wolfie@unaffiliated/ezzieyguywuf) has quit (Read error: Connection reset by peer)
2016-09-16 18:32:09	-->	ezzieyguywuf (~wolfie@unaffiliated/ezzieyguywuf) has joined ##c++
2016-09-16 18:32:22	-->	nilg (~user@77.70.2.229) has joined ##c++
2016-09-16 18:33:35	<--	w3z (~w3z@173-169-121-88.res.bhn.net) has quit (Read error: No route to host)
2016-09-16 18:33:41	-->	w3z_ (~w3z@173-169-121-88.res.bhn.net) has joined ##c++
2016-09-16 18:33:54	-->	TomTheDragon (~tom@cpe-24-167-144-157.triad.res.rr.com) has joined ##c++
2016-09-16 18:37:48	<--	segy (segfault@pdpc/supporter/active/segy) has quit (Quit: ZNC - http://znc.in)
2016-09-16 18:38:03	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-16 18:38:24	-->	xnavor (~xnavor@78-70-4-240-no171.business.telia.com) has joined ##c++
2016-09-16 18:39:47	-->	riksteri (~SpaceDino@62.102.148.156) has joined ##c++
2016-09-16 18:39:53	-->	Sasasu (~li@180.212.140.165) has joined ##c++
2016-09-16 18:41:36	-->	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has joined ##c++
2016-09-16 18:41:36		[18:41]
2016-09-16 18:43:40	<--	jd_livm (~jd_livm@c-73-167-60-180.hsd1.ma.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-16 18:45:14	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-16 18:45:28	-->	jd_livm (~jd_livm@c-73-167-60-180.hsd1.ma.comcast.net) has joined ##c++
2016-09-16 18:46:03	<--	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has quit (Ping timeout: 240 seconds)
2016-09-16 18:46:50	-->	kasper^ (~safaf@82.137.13.158) has joined ##c++
2016-09-16 18:49:39	-->	elnormous (~elnormous@91.105.17.158) has joined ##c++
2016-09-16 18:50:18	<--	w3z_ (~w3z@173-169-121-88.res.bhn.net) has quit (Ping timeout: 264 seconds)
2016-09-16 18:50:51	-->	EvilPenguin (~EvilPengu@2605:e000:6189:9600:38bd:7895:a8ad:8ea6) has joined ##c++
2016-09-16 18:52:58	<--	B00100100 (~bf3@179.43.177.66) has quit (Quit: leaving)
2016-09-16 18:53:43	<--	MulleDK19 (MulleDK19@unaffiliated/mulledk19) has quit (Ping timeout: 255 seconds)
2016-09-16 18:53:51	<--	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has quit (Ping timeout: 244 seconds)
2016-09-16 18:54:55	<--	elnormous (~elnormous@91.105.17.158) has quit (Ping timeout: 260 seconds)
2016-09-16 18:54:55	-->	elh9 (~elh9___@110-175-114-60.tpgi.com.au) has joined ##c++
2016-09-16 18:56:09	<--	Cabanossi (~Cabanossi@p5DD7B59A.dip0.t-ipconnect.de) has quit (Ping timeout: 248 seconds)
2016-09-16 18:56:17	-->	WalrusPony (~Peter@pool-71-162-72-9.bstnma.east.verizon.net) has joined ##c++
2016-09-16 18:57:05	-->	Cabanossi (~Cabanossi@p5DD7B420.dip0.t-ipconnect.de) has joined ##c++
2016-09-16 18:57:05		[18:57]
2016-09-16 18:58:03	<--	PeterRabbit (~Peter@pool-71-162-72-9.bstnma.east.verizon.net) has quit (Ping timeout: 276 seconds)
2016-09-16 18:58:13	<--	f10 (~flo@2001:470:52af:1:79ca:e294:48d0:1603) has quit (Ping timeout: 255 seconds)
2016-09-16 18:58:40	<--	f10_ (~flo@2001:470:52af:1:6dfe:4e8:627:1891) has quit (Ping timeout: 255 seconds)
2016-09-16 19:00:57	<--	Mannn (~Mannn____@2605:6000:f514:b800:8c40:adc8:1aee:c40d) has quit (Ping timeout: 248 seconds)
2016-09-16 19:01:33	<--	plusone (~plusone@176.24.26.166) has quit (Ping timeout: 240 seconds)
2016-09-16 19:03:31	<--	athend_ (~athend@199.43.186.25) has quit (Ping timeout: 244 seconds)
2016-09-16 19:04:03	-->	Lingo_ (~Lingo@81.170.128.85) has joined ##c++
2016-09-16 19:04:31	<--	Amaranthus (~Amaranth@ubuntu/member/Amaranth) has quit (Quit: So long!)
2016-09-16 19:04:59	-->	Amaranth (~Amaranth@ubuntu/member/Amaranth) has joined ##c++
2016-09-16 19:06:07	-->	B00100100 (~bf3@gateway/vpn/privateinternetaccess/emul16) has joined ##c++
2016-09-16 19:08:08	-->	segy (segfault@pdpc/supporter/active/segy) has joined ##c++
2016-09-16 19:08:17	<--	xnavor (~xnavor@78-70-4-240-no171.business.telia.com) has quit (Quit: This computer has gone to sleep)
2016-09-16 19:08:21	<--	Lingo_ (~Lingo@81.170.128.85) has quit (Ping timeout: 244 seconds)
2016-09-16 19:10:18	-->	Gabe__ (~Gabe@75-170-43-116.eugn.qwest.net) has joined ##c++
2016-09-16 19:11:24	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Remote host closed the connection)
2016-09-16 19:12:05	<--	AstralStorm (~astralsto@unaffiliated/astralstorm) has quit (Quit: ZNC - http://znc.in)
2016-09-16 19:12:05		[19:12]
2016-09-16 19:12:31	-->	xnavor (~xnavor@78-70-4-240-no171.business.telia.com) has joined ##c++
2016-09-16 19:13:42	<--	Gabe (~Gabe@75-170-43-116.eugn.qwest.net) has quit (Ping timeout: 264 seconds)
2016-09-16 19:14:02	-->	Valdaris (~Gabe@75-170-43-116.eugn.qwest.net) has joined ##c++
2016-09-16 19:15:32	<--	elh9 (~elh9___@110-175-114-60.tpgi.com.au) has quit (Read error: Connection reset by peer)
2016-09-16 19:15:44	-->	tristanseifert (~tristanse@128.194.3.4) has joined ##c++
2016-09-16 19:15:46	<--	segy (segfault@pdpc/supporter/active/segy) has quit (Ping timeout: 265 seconds)
2016-09-16 19:15:59	<--	tristans1 (~tristanse@128.194.3.4) has quit (Read error: Connection reset by peer)
2016-09-16 19:16:15	<--	TomTheDragon (~tom@cpe-24-167-144-157.triad.res.rr.com) has quit (Ping timeout: 276 seconds)
2016-09-16 19:16:30	<--	Gabe__ (~Gabe@75-170-43-116.eugn.qwest.net) has quit (Ping timeout: 260 seconds)
2016-09-16 19:18:50	-->	athend (~athend@199.43.186.25) has joined ##c++
2016-09-16 19:19:43	-->	Burga (~andrewm@124-170-168-151.dyn.iinet.net.au) has joined ##c++
2016-09-16 19:21:47	<--	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has quit (Quit: Leaving.)
2016-09-16 19:21:59	-->	Enhex (~Enhex@82.252.138.77.rev.sfr.net) has joined ##c++
2016-09-16 19:22:17	-->	elh9 (~elh9___@110-175-114-60.tpgi.com.au) has joined ##c++
2016-09-16 19:23:09	-->	segy (~segfault@pdpc/supporter/active/segy) has joined ##c++
2016-09-16 19:24:07	-->	UnripeSuica (~UnlikeSui@2607:f358:101:97:97:5164:405e:6ed8) has joined ##c++
2016-09-16 19:24:34	<--	elh9 (~elh9___@110-175-114-60.tpgi.com.au) has quit (Read error: Connection reset by peer)
2016-09-16 19:25:40	-->	elh9 (~elh9___@110-175-114-60.tpgi.com.au) has joined ##c++
2016-09-16 19:27:19	-->	jamesaxl (~jamesaxl@176.98.129.195) has joined ##c++
2016-09-16 19:27:19		[19:27]
2016-09-16 19:27:26	<--	UnlikeSuika (~UnlikeSui@117.123.105.126) has quit (Ping timeout: 244 seconds)
2016-09-16 19:27:44	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-16 19:27:59	-->	karab44 (~karab44@unaffiliated/karab44) has joined ##c++
2016-09-16 19:29:47	-->	PaSaSaP (~PaSaSaP@nat.ds14.agh.edu.pl) has joined ##c++
2016-09-16 19:30:03	<--	wolfcub (~henrique_@177.131.178.169) has quit (Ping timeout: 244 seconds)
2016-09-16 19:30:28	-->	zap0 (~moofy@14-201-222-143.tpgi.com.au) has joined ##c++
2016-09-16 19:30:57	<--	elh9 (~elh9___@110-175-114-60.tpgi.com.au) has quit (Read error: Connection reset by peer)
2016-09-16 19:30:58	<--	Valdaris (~Gabe@75-170-43-116.eugn.qwest.net) has quit (Quit: Leaving)
2016-09-16 19:31:01	<--	PaSaSaP (~PaSaSaP@nat.ds14.agh.edu.pl) has quit (Changing host)
2016-09-16 19:31:01	-->	PaSaSaP (~PaSaSaP@unaffiliated/pasasap) has joined ##c++
2016-09-16 19:31:41	-->	elh9 (~elh9___@110-175-114-60.tpgi.com.au) has joined ##c++
2016-09-16 19:32:04	-->	w3z (~w3z@173-169-121-88.res.bhn.net) has joined ##c++
2016-09-16 19:34:00	<--	AndyD (~AndyD@host-2-100-222-179.as13285.net) has quit (Ping timeout: 244 seconds)
2016-09-16 19:34:40	<--	UnripeSuica (~UnlikeSui@2607:f358:101:97:97:5164:405e:6ed8) has quit (Remote host closed the connection)
2016-09-16 19:34:44	-->	UptightSuika (~UnlikeSui@117.123.105.126) has joined ##c++
2016-09-16 19:34:44	<--	elh9 (~elh9___@110-175-114-60.tpgi.com.au) has quit (Read error: Connection reset by peer)
2016-09-16 19:35:38	<--	myst|fon (uid81830@gateway/web/irccloud.com/x-gpkypksahtcyepvx) has left ##c++
2016-09-16 19:35:55	-->	AstralStorm (~astralsto@unaffiliated/astralstorm) has joined ##c++
2016-09-16 19:36:20	<--	sophia7 (~sophia7@unaffiliated/sophia7) has quit (Ping timeout: 260 seconds)
2016-09-16 19:36:56	-->	mangolisk (~mangolisk@S0106848dc7ebaa06.vc.shawcable.net) has joined ##c++
2016-09-16 19:37:54	-->	elh9 (~elh9___@110-175-114-60.tpgi.com.au) has joined ##c++
2016-09-16 19:39:43	-->	ARCADIVS (~RMM@97.84.20.251) has joined ##c++
2016-09-16 19:41:01	-->	mackal (~mike@pool-96-237-144-12.bstnma.fios.verizon.net) has joined ##c++
2016-09-16 19:43:20	<--	vralphv (~vralp@d137-186-58-40.abhsia.telus.net) has quit (Quit: Lost terminal)
2016-09-16 19:43:20		[19:43]
2016-09-16 19:43:37	-->	gioerr (~gioerr@athedsl-4535808.home.otenet.gr) has joined ##c++
2016-09-16 19:45:13	-->	danderian (~danderian@190.247.42.119) has joined ##c++
2016-09-16 19:46:21	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-16 19:49:03	-->	cr1t1cal (~cr1t1cal@60-242-215-61.static.tpgi.com.au) has joined ##c++
2016-09-16 19:49:16	<--	cr1t1cal (~cr1t1cal@60-242-215-61.static.tpgi.com.au) has left ##c++ ("WeeChat 1.5")
2016-09-16 19:50:40	<--	elh9 (~elh9___@110-175-114-60.tpgi.com.au) has quit (Read error: Connection reset by peer)
2016-09-16 19:51:05	<--	allen29 (~all@unaffiliated/allen29) has quit (Quit: Leaving)
2016-09-16 19:51:53	-->	elh9 (~elh9___@110-175-114-60.tpgi.com.au) has joined ##c++
2016-09-16 19:53:02	<--	elh9 (~elh9___@110-175-114-60.tpgi.com.au) has quit (Read error: Connection reset by peer)
2016-09-16 19:54:03	-->	elh9 (~elh9___@110-175-114-60.tpgi.com.au) has joined ##c++
2016-09-16 19:57:00	<--	secondwtq (~ftlight_n@118.193.168.40) has quit (Quit: ヾ(´￢｀)ﾉ)
2016-09-16 19:57:59	<--	elh9 (~elh9___@110-175-114-60.tpgi.com.au) has quit (Read error: Connection reset by peer)
2016-09-16 19:58:28	-->	secondwtq (~ftlight_n@118.193.168.40) has joined ##c++
2016-09-16 19:58:28		[19:58]
2016-09-16 19:59:10	-->	elh9 (~elh9___@110-175-114-60.tpgi.com.au) has joined ##c++
2016-09-16 20:05:00		[19:59]
2016-09-16 20:05:20	-->	SHC_ (~quassel@45.249.249.77) has joined ##c++
2016-09-16 20:06:06	<--	SHC (~quassel@45.249.249.77) has quit (Disconnected by services)
2016-09-16 20:06:39	--	SHC_ is now known as SHC
2016-09-16 20:06:46	-->	allplayersdd (~allplayer@193-81-101-93.adsl.highway.telekom.at) has joined ##c++
2016-09-16 20:07:37	<--	danderian (~danderian@190.247.42.119) has quit (Quit: http://webpolis.com.ar)
2016-09-16 20:09:56	-->	danderian (~danderian@190.247.42.119) has joined ##c++
2016-09-16 20:10:43	<--	testt (~allplayer@193-154-226-76.adsl.highway.telekom.at) has quit (Ping timeout: 248 seconds)
2016-09-16 20:12:54	-->	yong (~vayne@pD9E440A7.dip0.t-ipconnect.de) has joined ##c++
2016-09-16 20:14:16	<--	EvilPenguin (~EvilPengu@2605:e000:6189:9600:38bd:7895:a8ad:8ea6) has quit (Ping timeout: 255 seconds)
2016-09-16 20:14:58	-->	Haruno (~Haruno@197.226.132.68) has joined ##c++
2016-09-16 20:15:20	<--	Haruno (~Haruno@197.226.132.68) has quit (Changing host)
2016-09-16 20:15:20	-->	Haruno (~Haruno@unaffiliated/haruno) has joined ##c++
2016-09-16 20:16:48	-->	robogoat (~robogoat@163.172.136.88) has joined ##c++
2016-09-16 20:17:25	<--	DEElekgolo (~DEElekgol@2602:30a:2e0e:a7a0:2518:85d8:3e05:b48d) has quit (Ping timeout: 255 seconds)
2016-09-16 20:18:30	<--	danderian (~danderian@190.247.42.119) has quit (Quit: http://webpolis.com.ar)
2016-09-16 20:18:47	-->	danderian (~danderian@190.247.42.119) has joined ##c++
2016-09-16 20:18:58	-->	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has joined ##c++
2016-09-16 20:20:22	-->	DEElekgolo (~DEElekgol@2602:30a:2e0e:a7a0:11ad:fc9f:f036:860d) has joined ##c++
2016-09-16 20:20:22		[20:20]
2016-09-16 20:21:32	<--	HerzogDeXtEr (~farci@i59F6C2C.versanet.de) has quit (Read error: Connection reset by peer)
2016-09-16 20:22:54	<--	danderian (~danderian@190.247.42.119) has quit (Remote host closed the connection)
2016-09-16 20:23:43	<--	jd_livm (~jd_livm@c-73-167-60-180.hsd1.ma.comcast.net) has quit (Ping timeout: 255 seconds)
2016-09-16 20:24:38	<--	robogoat (~robogoat@163.172.136.88) has quit (Quit: leaving)
2016-09-16 20:25:09	<--	SecondForm_Glenn (~Thunderbi@108.189.70.212) has quit (Ping timeout: 276 seconds)
2016-09-16 20:25:37	-->	genieliu (~chatzilla@157.61.158.81) has joined ##c++
2016-09-16 20:26:56	<--	YungRaj (~YungRaj@104-63-233-54.lightspeed.hstntx.sbcglobal.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-16 20:29:18	<--	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has quit (Quit: Leaving.)
2016-09-16 20:29:51	-->	robogoat (~robogoat@163.172.136.88) has joined ##c++
2016-09-16 20:30:18	<--	Haruno (~Haruno@unaffiliated/haruno) has quit (Quit: Bye)
2016-09-16 20:30:24	<--	robogoat (~robogoat@163.172.136.88) has quit (Client Quit)
2016-09-16 20:30:38	<--	kasper^ (~safaf@82.137.13.158) has quit (Ping timeout: 265 seconds)
2016-09-16 20:31:22	-->	robogoat (~robogoat@163.172.136.88) has joined ##c++
2016-09-16 20:36:16	-->	cobalt-red (~cobalt-re@2620:0:2820:220e:592d:cd59:df2:ae03) has joined ##c++
2016-09-16 20:36:16		[20:36]
2016-09-16 20:36:22	<--	Goplat (~goplat@reactos/developer/Goplat) has quit (Remote host closed the connection)
2016-09-16 20:41:55	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-16 20:42:44	-->	forgottenone (~forgotten@195.142.43.212) has joined ##c++
2016-09-16 20:45:35	<--	bkboggy (~bkboggy@cpe-172-250-147-60.socal.res.rr.com) has quit (Ping timeout: 265 seconds)
2016-09-16 20:48:44	<--	Betal (~Betal@unaffiliated/betal) has quit (Remote host closed the connection)
2016-09-16 20:50:49	-->	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has joined ##c++
2016-09-16 20:51:05	<--	Leone (~Leovale@104-247-242-34.cpe.teksavvy.com) has quit (Read error: Connection reset by peer)
2016-09-16 20:51:45	-->	elnormous (~elnormous@91.105.17.158) has joined ##c++
2016-09-16 20:51:45		[20:51]
2016-09-16 20:51:57	-->	etvsteva (uid110233@gateway/web/irccloud.com/x-vfaiwwxnuasmdtvu) has joined ##c++
2016-09-16 20:54:47	<--	P1RATEZ (piratez@unaffiliated/p1ratez) has quit
2016-09-16 20:55:13	-->	Munnu (~timo@91-158-145-247.elisa-laajakaista.fi) has joined ##c++
2016-09-16 20:55:28	-->	plusone (~plusone@176.24.26.166) has joined ##c++
2016-09-16 20:55:40	<--	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has quit (Ping timeout: 255 seconds)
2016-09-16 20:56:42	<--	elnormous (~elnormous@91.105.17.158) has quit (Ping timeout: 240 seconds)
2016-09-16 20:58:56	<--	cbot (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Quit: Leaving)
2016-09-16 21:00:40	-->	m_ben (~m_ben@unaffiliated/m-ben/x-5917362) has joined ##c++
2016-09-16 21:00:46	-->	bkboggy (~bkboggy@cpe-172-250-147-60.socal.res.rr.com) has joined ##c++
2016-09-16 21:03:46	<--	ropeney (~ropeney@CPE-58-170-196-106.lns2.lon.bigpond.net.au) has quit (Quit: Leaving)
2016-09-16 21:04:39	<--	genieliu (~chatzilla@157.61.158.81) has quit (Quit: ChatZilla 0.9.92 [Firefox 48.0.2/20160823121617])
2016-09-16 21:04:45	-->	tdam (~TDAM@p20030062481823006D4379AC26DB13AD.dip0.t-ipconnect.de) has joined ##c++
2016-09-16 21:05:29	-->	Bengi (sid73530@gateway/web/irccloud.com/x-lkoqcgdumwgdghwp) has joined ##c++
2016-09-16 21:07:40	<--	dextertzu (~dexter@S0106bcd1656573c8.vs.shawcable.net) has quit (Ping timeout: 244 seconds)
2016-09-16 21:07:40		[21:07]
2016-09-16 21:10:55	<--	asc232 (~Keith@179.38.232.249) has quit (Quit: Saliendo)
2016-09-16 21:12:42	-->	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has joined ##c++
2016-09-16 21:13:23	-->	InfoTest (~Thunderbi@41.188.54.5) has joined ##c++
2016-09-16 21:15:02	-->	benkard (~benkard@p200300864C368B014CE42989AB9DDA3B.dip0.t-ipconnect.de) has joined ##c++
2016-09-16 21:17:45	<--	CEnnis91 (uid3543@gateway/web/irccloud.com/x-yiyvrgpvhmfhxmsh) has quit (Quit: Connection closed for inactivity)
2016-09-16 21:18:29	-->	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has joined ##c++
2016-09-16 21:19:16	-->	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has joined ##c++
2016-09-16 21:19:47	-->	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has joined ##c++
2016-09-16 21:20:32	-->	lorenzo64 (~lorenzo__@5.144.190.80) has joined ##c++
2016-09-16 21:21:07	-->	vuoto_ (~vuoto@n9pl7d.static.netgroup.dk) has joined ##c++
2016-09-16 21:21:16	<--	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has quit (Read error: Connection reset by peer)
2016-09-16 21:21:41	-->	navidr (uid112413@gateway/web/irccloud.com/x-gtqznesxyfalkbcq) has joined ##c++
2016-09-16 21:23:12	-->	fusta (~fusta@88.244.7.118) has joined ##c++
2016-09-16 21:23:12		[21:23]
2016-09-16 21:23:23	-->	nikki93 (~nikki93@2601:645:8104:cb10:1c77:667d:3afd:ced1) has joined ##c++
2016-09-16 21:24:51	-->	Nitrodev (~Nitrodev@85-23-77-207.bb.dnainternet.fi) has joined ##c++
2016-09-16 21:25:19	-->	sterniste (~sstern@188.188.187.207) has joined ##c++
2016-09-16 21:26:52	-->	kw01f (~kw01f@pD9FB1B43.dip0.t-ipconnect.de) has joined ##c++
2016-09-16 21:27:40	-->	windsing (~windsing@2601:547:901:bc40:4881:3a9f:e077:b8e7) has joined ##c++
2016-09-16 21:28:24	-->	t0by (~t0by@host192-178-dynamic.56-82-r.retail.telecomitalia.it) has joined ##c++
2016-09-16 21:28:31	<--	nikki93 (~nikki93@2601:645:8104:cb10:1c77:667d:3afd:ced1) has quit (Ping timeout: 255 seconds)
2016-09-16 21:28:52	<--	zap0 (~moofy@14-201-222-143.tpgi.com.au) has quit (Quit: zap0)
2016-09-16 21:29:54	<--	code_zombie (~code_zomb@2605:a601:aa1:5c00:d96:ef14:3e95:f0f6) has quit (Quit: Leaving)
2016-09-16 21:29:57	<--	tdam (~TDAM@p20030062481823006D4379AC26DB13AD.dip0.t-ipconnect.de) has quit (Quit: Mutter: http://www.mutterirc.com)
2016-09-16 21:30:40	-->	Jackneill (~Jackneill@unaffiliated/jackneill) has joined ##c++
2016-09-16 21:30:48	<--	t0by (~t0by@host192-178-dynamic.56-82-r.retail.telecomitalia.it) has quit (Client Quit)
2016-09-16 21:32:10	-->	Kimundi_ (~Kimundi@p57BC6637.dip0.t-ipconnect.de) has joined ##c++
2016-09-16 21:35:27	-->	velco (~chill@vlan-185-78-38-153.comnet.bg) has joined ##c++
2016-09-16 21:36:43	-->	GrayArea (~GrayArea@cpc73846-dals21-2-0-cust384.20-2.cable.virginm.net) has joined ##c++
2016-09-16 21:37:05	<--	jaafar (~quassel@76-218-204-163.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 260 seconds)
2016-09-16 21:37:09	-->	Kirrahe (~kirrahe@ip51cc4257.adsl-surfen.hetnet.nl) has joined ##c++
2016-09-16 21:37:37	<--	benkard (~benkard@p200300864C368B014CE42989AB9DDA3B.dip0.t-ipconnect.de) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-16 21:38:27	<--	windsing (~windsing@2601:547:901:bc40:4881:3a9f:e077:b8e7) has quit
2016-09-16 21:38:27		[21:38]
2016-09-16 21:39:03	<--	Beetny (~Beetny@14-202-48-200.tpgi.com.au) has quit (Read error: Connection reset by peer)
2016-09-16 21:44:46	-->	chkm8 (~chkm8@12.06.01a8.ip4.static.sl-reverse.com) has joined ##c++
2016-09-16 21:46:17	<--	GrayArea (~GrayArea@cpc73846-dals21-2-0-cust384.20-2.cable.virginm.net) has quit (Ping timeout: 248 seconds)
2016-09-16 21:46:18	-->	JayKaye (~Jay@101.164.98.27) has joined ##c++
2016-09-16 21:47:58	-->	benkard (~benkard@p200300864C368B01DC7FEE12F8AF4014.dip0.t-ipconnect.de) has joined ##c++
2016-09-16 21:48:53	<--	mangolisk (~mangolisk@S0106848dc7ebaa06.vc.shawcable.net) has quit (Read error: Connection reset by peer)
2016-09-16 21:54:00		[21:48]
2016-09-16 21:55:16	-->	ropeney (~ropeney@CPE-58-170-196-106.lns2.lon.bigpond.net.au) has joined ##c++
2016-09-16 21:57:03	--	irc: disconnected from server
2016-09-16 23:55:42	-->	alyptik (~alyptik@unaffiliated/alyptik) has joined ##c++
2016-09-16 23:55:42		[23:55]
2016-09-16 23:55:42	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || https://isocpp.org/faq || pastes: http://melpon.org/wandbox"
2016-09-16 23:55:42	--	Topic set by V-ille (~ville@81-175-149-170.bb.dnainternet.fi) on Fri, 18 Sep 2015 07:13:01
2016-09-16 23:55:43	--	Channel ##c++: 954 nicks (0 ops, 0 voices, 954 normals)
2016-09-16 23:55:43	***	Buffer Playback...
2016-09-16 23:55:43	megaTherion	[09:28:13] Forgo: absolutly whoever does -this should get shot, but I'd say parenthesis can enhance readability especially if you do things like -(foo) [09:28:13]
2016-09-16 23:55:43	Forgo	[09:28:38] well, -foo is clear, -*foo isn't [09:28:38]
2016-09-16 23:55:43	megaTherion	[09:28:43] Nitrodev: just asking what you need that book for.. but yeah a reference wont help so much if you dont know the language at al [09:28:43]
2016-09-16 23:55:43	*buffextras	[09:29:18] phinxy!~tehhhd@unaffiliated/phinxy joined [09:29:18]
2016-09-16 23:55:43	*buffextras	[09:30:03] calincru!~calin@c-73-231-85-3.hsd1.ca.comcast.net quit with message: [Ping timeout: 240 seconds] [09:30:03]
2016-09-16 23:55:43	*buffextras	[09:30:14] SunnyD!~SunnyD@cpe-72-178-78-211.hot.res.rr.com joined [09:30:14]
2016-09-16 23:55:43	z16	[09:31:07] Forgo: Blame Bjarne making this a pointer instead of a reference :) [09:31:07]
2016-09-16 23:55:43	Forgo	[09:31:42] z16: I don't, it's not bad [09:31:42]
2016-09-16 23:55:43	*buffextras	[09:31:43] blueness!~blueness@gentoo/developer/blueness quit with message: [Quit: blueness] [09:31:43]
2016-09-16 23:55:43	*buffextras	[09:32:35] DEElekgolo!~DEElekgol@2602:30a:2e0e:a7a0:11ad:fc9f:f036:860d quit with message: [Read error: Connection reset by peer] [09:32:35]
2016-09-16 23:55:43	*buffextras	[09:33:10] ibouvousaime!~ibouvousa@41.83.30.39 quit with message: [Ping timeout: 260 seconds] [09:33:10]
2016-09-16 23:55:43	*buffextras	[09:33:58] ibouvousaime!~ibouvousa@41.83.30.39 joined [09:33:58]
2016-09-16 23:55:43	*buffextras	[09:34:05] Gathis!~TheBlack@unaffiliated/gathis joined [09:34:05]
2016-09-16 23:55:43	*buffextras	[09:35:19] sedeki!~textual@unaffiliated/sedeki joined [09:35:19]
2016-09-16 23:55:43	*buffextras	[09:35:21] Karyon!~yaaic@unaffiliated/karyon joined [09:35:21]
2016-09-16 23:55:43	*buffextras	[09:36:54] reveredge!~reveredge@115.110.126.75 joined [09:36:54]
2016-09-16 23:55:43	SoItBegins	[09:36:59] I just wanna say? [09:36:59]
2016-09-16 23:55:43	SoItBegins	[09:37:07] I know we had some wrangling earlier today but... [09:37:07]
2016-09-16 23:55:43	*buffextras	[09:37:12] shikantaza!~shikantaz@p5B0E22BE.dip0.t-ipconnect.de joined [09:37:12]
2016-09-16 23:55:43	SoItBegins	[09:37:13] I used to be doing this sort of thing in C. [09:37:13]
2016-09-16 23:55:43	*buffextras	[09:37:24] shikantaza!~shikantaz@p5B0E22BE.dip0.t-ipconnect.de quit with message: [Client Quit] [09:37:24]
2016-09-16 23:55:43	SoItBegins	[09:37:27] And C++ is sooooo much comparatively more awesome. [09:37:27]
2016-09-16 23:55:43	ville	[09:37:58] is it really? [09:37:58]
2016-09-16 23:55:43	megaTherion	[09:38:04] depends on the usecase I'd say [09:38:04]
2016-09-16 23:55:43	SoItBegins	[09:38:15] It’s more a matter of not having many small annoyances. [09:38:15]
2016-09-16 23:55:43	SoItBegins	[09:38:26] (I was mostly speaking to xaxxon and doppel, but they are gone… anyway:) [09:38:26]
2016-09-16 23:55:43	ville	[09:38:30] instead we have great big ones like exceptions [09:38:30]
2016-09-16 23:55:43	SoItBegins	[09:38:33] Just, like, being able to use the string data type. [09:38:33]
2016-09-16 23:55:43	megaTherion	[09:38:50] heh [09:38:50]
2016-09-16 23:55:43	*buffextras	[09:38:51] pylbrecht!~shikantaz@p5B0E22BE.dip0.t-ipconnect.de joined [09:38:51]
2016-09-16 23:55:43	SoItBegins	[09:40:07] And cout concatenation. [09:40:07]
2016-09-16 23:55:43	SoItBegins	[09:40:11] (and cin) [09:40:11]
2016-09-16 23:55:43	SoItBegins	[09:40:14] stuff like that. [09:40:14]
2016-09-16 23:55:43	*buffextras	[09:40:36] kasper^!~safaf@82.137.10.181 joined [09:40:36]
2016-09-16 23:55:43	megaTherion	[09:40:57] SoItBegins: good that you're happy with C++ ^^ [09:40:57]
2016-09-16 23:55:43	velco	[09:40:59] ugh ... :/ [09:40:59]
2016-09-16 23:55:43	SoItBegins	[09:41:18] megaTherion: And that’s not even getting into what C++11 has / can do. [09:41:18]
2016-09-16 23:55:43	*buffextras	[09:41:47] pylbrecht!~shikantaz@p5B0E22BE.dip0.t-ipconnect.de quit with message: [Client Quit] [09:41:47]
2016-09-16 23:55:43	SoItBegins	[09:42:08] It’s got the civilization of Python and the power of C. [09:42:08]
2016-09-16 23:55:43	*buffextras	[09:42:21] pavshn!~pavshn@ppp95-165-153-84.pppoe.spdop.ru quit with message: [Quit: Textual IRC Client: www.textualapp.com] [09:42:21]
2016-09-16 23:55:43	SoItBegins	[09:42:26] I feel like Zeus’s thunderbolt was lying in the back corner of my closet and I only just grabbed onto it last week. [09:42:26]
2016-09-16 23:55:43	w3z	[09:43:09] yes, you can helloworld like a greek god now ... [09:43:09]
2016-09-16 23:55:43	*buffextras	[09:43:28] pavshn!~pavshn@ppp95-165-153-84.pppoe.spdop.ru joined [09:43:28]
2016-09-16 23:55:43	*buffextras	[09:45:12] JayKaye!~Jay@101.164.98.27 joined [09:45:12]
2016-09-16 23:55:43	*buffextras	[09:45:25] kaffeetrauma!~Thunderbi@85-22-37-153.ip.dokom21.de quit with message: [Quit: kaffeetrauma] [09:45:25]
2016-09-16 23:55:43	*buffextras	[09:46:01] LKoen!~LKoen@2a01:e35:2eed:a430:d011:f6d3:a774:286d joined [09:46:01]
2016-09-16 23:55:43	Karyon	[09:48:36] lol [09:48:36]
2016-09-16 23:55:43	*buffextras	[09:51:49] w3z!~w3z@173-169-121-88.res.bhn.net quit with message: [Ping timeout: 244 seconds] [09:51:49]
2016-09-16 23:55:43	*buffextras	[09:53:15] Lowl3v3l!~Lowl3v3l@ipservice-092-208-080-178.092.208.pools.vodafone-ip.de joined [09:53:15]
2016-09-16 23:55:43	*buffextras	[09:54:30] RebelCoder!~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net joined [09:54:30]
2016-09-16 23:55:43	***	Playback Complete.
2016-09-16 23:55:50	--	Channel created on Fri, 14 Sep 2001 17:15:35
2016-09-16 23:56:15	<--	Forgo (~U_Forgo_T@unaffiliated/forgo) has left ##c++ ("WeeChat 1.5")
2016-09-16 23:56:28	<--	SibTiger (~Nicholas@199-96-206-87.fidnet.com) has quit (Ping timeout: 244 seconds)
2016-09-16 23:58:20	-->	everamzah (~james@cpe-172-101-13-131.maine.res.rr.com) has joined ##c++
2016-09-16 23:58:27	<--	przemkovv-bis (~przemkovv@d83-37.icpnet.pl) has quit (Ping timeout: 272 seconds)
2016-09-16 23:58:47	<--	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has quit (Quit: Leaving.)
2016-09-17 00:01:51	-->	Vingador (~quassel@179.181.32.21) has joined ##c++
2016-09-17 00:01:54	<--	Vingador (~quassel@179.181.32.21) has quit (Remote host closed the connection)
2016-09-17 00:04:39	-->	anuxivm (~anuxi@92.185.154.236) has joined ##c++
2016-09-17 00:06:18	-->	seishun (~Kakera@46.109.100.60) has joined ##c++
2016-09-17 00:07:48	<--	benkard (~benkard@p200300864C368B01DC7FEE12F8AF4014.dip0.t-ipconnect.de) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-17 00:09:06	<--	SwiftMatt (~Objective@162.242.94.208) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-17 00:09:56	<--	tocka (~tocka@IP-89-190-119-129.nnt.lt) has quit
2016-09-17 00:15:00		[00:09]
2016-09-17 00:15:17	<--	JayKaye (~Jay@101.164.98.27) has quit (Quit: Leaving)
2016-09-17 00:15:32	<--	hexoroid (hexoroid@173-18-17-106.client.mchsi.com) has quit (Changing host)
2016-09-17 00:15:32	-->	hexoroid (hexoroid@unaffiliated/hexoroid) has joined ##c++
2016-09-17 00:15:57	hexoroid	is it possible to re-size command prompt to be wider when console apps starts running
2016-09-17 00:15:58	-->	rendar (~I@host230-36-dynamic.31-79-r.retail.telecomitalia.it) has joined ##c++
2016-09-17 00:16:03	-->	satifant (~sati@unaffiliated/satifant) has joined ##c++
2016-09-17 00:16:44	-->	strelox (~user@p200300754F2A9900B74A5B0E04C8A4FE.dip0.t-ipconnect.de) has joined ##c++
2016-09-17 00:18:20	-->	xenovass (~xenovass@static062038157093.dsl.hol.gr) has joined ##c++
2016-09-17 00:18:21	<--	SunnyD (~SunnyD@cpe-72-178-78-211.hot.res.rr.com) has quit (Ping timeout: 244 seconds)
2016-09-17 00:19:38	-->	JayKaye (~Jay@101.164.98.27) has joined ##c++
2016-09-17 00:21:03	-->	w3z (~w3z@173-169-121-88.res.bhn.net) has joined ##c++
2016-09-17 00:22:00	-->	bumbar (~bumbar@unaffiliated/bumbar) has joined ##c++
2016-09-17 00:24:11	<--	King_Hual (~failed@unaffiliated/king-hual/x-1207580) has quit (Read error: Connection reset by peer)
2016-09-17 00:26:15	-->	King_Hual (~failed@unaffiliated/king-hual/x-1207580) has joined ##c++
2016-09-17 00:27:10	<--	kw01f (~kw01f@pD9FB1B43.dip0.t-ipconnect.de) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-09-17 00:27:53	<--	nwkj86 (~nwkj86@144.66.6.51.dyn.plus.net) has quit (Quit: ByeBye)
2016-09-17 00:28:22	-->	scai (~scai@p4FF0FCFA.dip0.t-ipconnect.de) has joined ##c++
2016-09-17 00:28:31	<--	Gluesticky (~nobody@unaffiliated/gluesticky) has quit (Quit: This is the end. Goodbye cruel world!)
2016-09-17 00:28:48	-->	nwkj86 (~nwkj86@144.66.6.51.dyn.plus.net) has joined ##c++
2016-09-17 00:29:00	-->	kaen__ (~kaen@86.127.218.206) has joined ##c++
2016-09-17 00:29:11	M-ou-se	hexoroid: ask some channel related to whatever platform you're using. console sizes and stuff don't mean anything in standard C++
2016-09-17 00:32:34	<--	cobalt-red (~cobalt-re@2620:0:2820:220e:592d:cd59:df2:ae03) has quit (Ping timeout: 255 seconds)
2016-09-17 00:32:34		[00:32]
2016-09-17 00:32:58	-->	vitimiti (~vitimiti@unaffiliated/vitimiti) has joined ##c++
2016-09-17 00:33:22	-->	SteffanW (~steffanw@ip4da40774.direct-adsl.nl) has joined ##c++
2016-09-17 00:34:09	-->	lorenzo64 (~lorenzo__@5.144.190.80) has joined ##c++
2016-09-17 00:34:40	<--	corebob (~corebob@cm-84.213.41.214.getinternet.no) has quit (Quit: WeeChat 1.5)
2016-09-17 00:36:35	<--	sterniste (~sstern@188.188.187.207) has quit (Quit: sterniste)
2016-09-17 00:36:50	-->	orbiter (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has joined ##c++
2016-09-17 00:37:11	<--	Sculptor (~Sculptor@cable-24-135-26-151.dynamic.sbb.rs) has quit (Changing host)
2016-09-17 00:37:11	-->	Sculptor (~Sculptor@trivialand/master/sculptor) has joined ##c++
2016-09-17 00:37:17	-->	plusone (~plusone@176.24.26.166) has joined ##c++
2016-09-17 00:37:23	-->	a3pq51 (~a3pq51@21-47-179-94.pool.ukrtel.net) has joined ##c++
2016-09-17 00:37:40	<--	Haruno (~Haruno@unaffiliated/haruno) has quit (Ping timeout: 265 seconds)
2016-09-17 00:37:48	<--	King_Hual (~failed@unaffiliated/king-hual/x-1207580) has quit (Read error: Connection reset by peer)
2016-09-17 00:38:19	<--	sin3t (~sin3t@77.47.209.98) has quit (Quit: Leaving)
2016-09-17 00:39:15	-->	King_Hual (~failed@unaffiliated/king-hual/x-1207580) has joined ##c++
2016-09-17 00:39:24	-->	FreeBirdLjj (~freebirdl@112.20.80.222) has joined ##c++
2016-09-17 00:40:30	-->	Lomex (~lomex@213.61.34.42) has joined ##c++
2016-09-17 00:40:49	<--	Gathis (~TheBlack@unaffiliated/gathis) has quit (Remote host closed the connection)
2016-09-17 00:41:07	-->	Beetny (~Beetny@14-202-48-200.tpgi.com.au) has joined ##c++
2016-09-17 00:41:44	hexoroid	M-ou-se ok.. i was just printing output and it was too wide it was wraping the lines
2016-09-17 00:41:55	<--	Sasasu (~li@180.212.140.165) has quit (Quit: WeeChat 1.5)
2016-09-17 00:41:58	-->	Gathis (~TheBlack@unaffiliated/gathis) has joined ##c++
2016-09-17 00:42:12	-->	CEnnis91 (uid3543@gateway/web/irccloud.com/x-yjmvylwhpafzqnrf) has joined ##c++
2016-09-17 00:42:17	<--	pavshn (~pavshn@ppp95-165-153-84.pppoe.spdop.ru) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2016-09-17 00:42:36	TinoDidriksen	Sounds like you want...
2016-09-17 00:42:37	TinoDidriksen	!windows
2016-09-17 00:42:39	nolyc	You should ask your Windows programming questions in ##c++-general, #winapi, ##windows-coding or irc://irc.efnet.org/winprog
2016-09-17 00:43:03	hexoroid	This isn't possible in a cross-platform way because it is OS-specific
2016-09-17 00:43:20	hexoroid	much like C i get it
2016-09-17 00:44:20	hexoroid	maybe i will try <windows.h>
2016-09-17 00:44:27	-->	blueness (~blueness@gentoo/developer/blueness) has joined ##c++
2016-09-17 00:44:28	-->	fahadash (uid44972@gateway/web/irccloud.com/x-bhjzlrunzfzktats) has joined ##c++
2016-09-17 00:44:36	<--	paule32_ (~jens@p4FFB2A19.dip0.t-ipconnect.de) has left ##c++
2016-09-17 00:45:02	-->	paule32 (~jens@p4FFB2A19.dip0.t-ipconnect.de) has joined ##c++
2016-09-17 00:45:09	paule32	hello
2016-09-17 00:45:27	paule32	i need your help with this code:
2016-09-17 00:45:29	paule32	https://paste.fedoraproject.org/429116/47405579/
2016-09-17 00:45:38	paule32	lines 118, 122
2016-09-17 00:47:23	<--	xenovass (~xenovass@static062038157093.dsl.hol.gr) has quit (Quit: Leaving)
2016-09-17 00:47:47	<--	InfoTest (~Thunderbi@41.188.54.5) has quit (Quit: InfoTest)
2016-09-17 00:47:47		[00:47]
2016-09-17 00:49:28	<--	Nitrodev (~Nitrodev@85-23-77-207.bb.dnainternet.fi) has quit (Quit: Veni, Vidi, Non reliquit in)
2016-09-17 00:49:56	-->	pavshn (~pavshn@ppp95-165-153-84.pppoe.spdop.ru) has joined ##c++
2016-09-17 00:52:12	<--	LKoen (~LKoen@2a01:e35:2eed:a430:d011:f6d3:a774:286d) has quit (Quit: “It’s only logical. First you learn to talk, then you learn to think. Too bad it’s not the other way round.”)
2016-09-17 00:52:22	<--	JayKaye (~Jay@101.164.98.27) has quit (Read error: Connection reset by peer)
2016-09-17 00:52:48	-->	JayKaye (~Jay@101.164.98.27) has joined ##c++
2016-09-17 00:53:35	KrzaQ	I'm trying to make an example case where the compiler does the unexpected thing when type-punning through casts (i.e. ignores change through incompatible pointer type), but I can't get it to not work. https://godbolt.org/g/IBy6oK Any suggestions?
2016-09-17 00:53:38	velco	what do you think lines 116  and 117 do ?
2016-09-17 00:53:45	velco	paule32: ^
2016-09-17 00:53:56	-->	narendraj9 (~user@157.119.170.39) has joined ##c++
2016-09-17 00:54:24	<--	McNozes (~McNozes@bl6-226-245.dsl.telepac.pt) has quit (Ping timeout: 250 seconds)
2016-09-17 00:54:40	KrzaQ	looks like a function declaration to me
2016-09-17 00:54:53	velco	(there is quite bit of terrible things above it, but let's get to it later)
2016-09-17 00:55:10	paule32	you mean varA ?
2016-09-17 00:55:25	velco	expr1 and expr2
2016-09-17 00:55:34	<--	Carbonflux (~Bob@75-172-112-206.tukw.qwest.net) has quit (Quit: Leaving)
2016-09-17 00:55:45	ville	paule32: the whole thing spanning those two lines
2016-09-17 00:56:13	paule32	unique_ptr is available (or was it make_unique?) c++14
2016-09-17 00:56:33	velco	also, use shorter lines like "auto var1 = std::make_unique<dBaseVariable<double>>(2.0);"
2016-09-17 00:56:53	ville	paule32: what do you think is the type of expr1?
2016-09-17 00:56:59	KrzaQ	eww... the base class doesn't have a virtual destructor
2016-09-17 00:57:31	velco	bunch of functions do not return values too
2016-09-17 00:57:33	paule32	ville: a pointer?
2016-09-17 00:57:56	KrzaQ	paule32: google most vexing parse
2016-09-17 00:58:11	KrzaQ	or do we have it in the bot?
2016-09-17 00:58:25	paule32	no, i a human :-)
2016-09-17 00:58:35	velco	{ int a; unique_ptr<int> b(decltype(a)); }
2016-09-17 00:58:35	geordi	<no output>
2016-09-17 00:58:49	velco	so, what is `b` ?
2016-09-17 00:58:52	ville	paule32: also use a paste site that actually compiles and runs code. you just said you need help but have not specified what the actual problem is
2016-09-17 00:59:29	paule32	ok
2016-09-17 00:59:33	KrzaQ	the main problem seems to be writing code in notepad without attempting to compile it on the way. any compiler would warn about plenty of those bugs already
2016-09-17 00:59:38	-->	magnicida (~raskolnik@2a02:8109:8c80:231:ea39:dfff:fe4d:275b) has joined ##c++
2016-09-17 00:59:38	<--	SoItBegins (~SoItBegin@184.71.5.142) has quit (Quit: ~be back later~)
2016-09-17 01:00:03	paule32	notepad? :-) i am under linux Qt
2016-09-17 01:01:42	<--	JayKaye (~Jay@101.164.98.27) has quit (Ping timeout: 264 seconds)
2016-09-17 01:01:43	KrzaQ	then press Ctrl+B or F7 or whatever the key combination is for "build" every time you add a statement. Add appriopriate warning settings. It'll make coding a lot more fun when you have to deal with only one error at a time
2016-09-17 01:02:18	<--	lorenzo64 (~lorenzo__@5.144.190.80) has quit (Quit: Leaving)
2016-09-17 01:02:36	-->	McNozes (~McNozes@bl6-226-245.dsl.telepac.pt) has joined ##c++
2016-09-17 01:02:36	velco	the errors are much easier to spot in the source than in the 3 megabytes of gcc output :P
2016-09-17 01:03:08	KrzaQ	gcc is pretty good with errors lately. it's far better from what I remember of gcc 4.2
2016-09-17 01:03:08		[01:03]
2016-09-17 01:03:17	somaReverse	Hi. Should I use for (auto* .. ) to loop over a pointer iterator?
2016-09-17 01:03:32	velco	is this even allowed ?
2016-09-17 01:03:37	KrzaQ	and if you check consistently, you won't have 3mb of output unless you're doing template metaprogramming hackery
2016-09-17 01:03:39	-->	elnormous (~elnormous@91.105.17.158) has joined ##c++
2016-09-17 01:03:44	somaReverse	so just " for(auto ...) " ?
2016-09-17 01:04:04	KrzaQ	it'll deduce different types for auto
2016-09-17 01:04:25	KrzaQ	{ for(auto x : vector<int*>); }
2016-09-17 01:04:25	geordi	error: expected primary-expression before ')' token
2016-09-17 01:04:31	KrzaQ	{ for(auto x : vector<int*>{}); }
2016-09-17 01:04:32	geordi	<no output>
2016-09-17 01:04:39	KrzaQ	auto deduced int*, x is int*
2016-09-17 01:04:42	KrzaQ	{ for(auto* x : vector<int*>{}); }
2016-09-17 01:04:43	geordi	<no output>
2016-09-17 01:04:50	KrzaQ	auto deduced int, x is int*
2016-09-17 01:05:34	somaReverse	ah
2016-09-17 01:05:43	-->	Birchy (~Birchy@178-164-108.52.3p.ntebredband.no) has joined ##c++
2016-09-17 01:06:01	somaReverse	{ for (auto**x: vector<int*> {}); }
2016-09-17 01:06:02	geordi	error: unable to deduce 'auto**' from '__for_begin.vector<int*>::iterator::operator*()'
2016-09-17 01:07:05	Eelis	{ int a; unique_ptr<int> b(decltype(a)); cout << TYPE_DESC(b); } // velco
2016-09-17 01:07:06	geordi	lvalue function taking an integer and returning a unique pointer to an integer
2016-09-17 01:07:42	velco	Eelis: yeah, I was asking paule32 to think about it;
2016-09-17 01:07:48	-->	kw01f (~kw01f@pD9FB1B43.dip0.t-ipconnect.de) has joined ##c++
2016-09-17 01:07:52	-->	Adva (~Hyrule@2a02:810a:12c0:5068:5008:c023:ce0d:b4f2) has joined ##c++
2016-09-17 01:08:16	KrzaQ	Eelis: do you have older standards/drafts htmlized like you have the draft?
2016-09-17 01:08:33	<--	elnormous (~elnormous@91.105.17.158) has quit (Ping timeout: 265 seconds)
2016-09-17 01:09:04	Eelis	no, and that's virtually impossible to do, because not only does the content of the draft change, they also change which macros/environments they use and how those macros are defined
2016-09-17 01:09:18	-->	Tachyon_ (~Thunderbi@95.76.184.120) has joined ##c++
2016-09-17 01:09:21	Eelis	so the current cxxdraft-htmlgen code does not work for older draft sources
2016-09-17 01:09:26	KrzaQ	mhm
2016-09-17 01:09:31	-->	zap0 (~moofy@14-201-222-143.tpgi.com.au) has joined ##c++
2016-09-17 01:10:21	KrzaQ	I wish for frozen versions of cpp03/11/14/17
2016-09-17 01:10:24	-->	Haruno (~Haruno@unaffiliated/haruno) has joined ##c++
2016-09-17 01:10:40	Eelis	i've no idea what you mean by that
2016-09-17 01:11:24	KrzaQ	say, for C++11 you'd have the closest draft special-cased and added (n3337 iirc)
2016-09-17 01:11:25	--	flonk is now known as flonk_OnVacation
2016-09-17 01:12:06	Eelis	again, that's an insane maintenance burden
2016-09-17 01:12:19	-->	elnormous (~elnormous@91.105.17.158) has joined ##c++
2016-09-17 01:12:24	KrzaQ	hm. I'm not sure how it's a *maintenance* burden.
2016-09-17 01:12:25	Eelis	basically requires maintaining as many cxxdraft-htmlgens as there are standard versions
2016-09-17 01:12:26	--	LordAkkarin is now known as Akkarin
2016-09-17 01:12:40	Eelis	since the macros/envs change completely
2016-09-17 01:13:07	<--	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has quit (Remote host closed the connection)
2016-09-17 01:13:24	-->	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has joined ##c++
2016-09-17 01:13:35	KrzaQ	Don't get me wrong, I'm not telling you to do stuff. But n3337 will not change, so once you have it, I fail to see the need to maintain it
2016-09-17 01:13:40	ville	just tag/branch the generator program for the standard draft for the last known draft before standard/at standard release. state it won't be maintained but pull request may be accepted
2016-09-17 01:13:59	-->	rebb (~rebb3@p54B81BF6.dip0.t-ipconnect.de) has joined ##c++
2016-09-17 01:14:11	ville	retroactively trying to do this may not be possible but doing it for the upcoming 17 release may be desireable
2016-09-17 01:14:26	-->	JayKaye (~Jay@101.164.98.27) has joined ##c++
2016-09-17 01:14:39	rebb	anyone happen to use Visual Leak Detector 2.5 ? and if so, can you tell me if it also shows "Visual Leak Detector 2.4RC2 loaded" for you ?
2016-09-17 01:15:14	<--	AkaiSora (~quassel@197.17.7.18) has quit (Read error: Connection reset by peer)
2016-09-17 01:15:48	-->	angelojulioth (~angelojul@190.154.14.154) has joined ##c++
2016-09-17 01:16:02	ville	and if it's on github then anyone, like KrzaQ, could do it in their clone
2016-09-17 01:16:19	Eelis	ville: if people want to keep old crap around, they're free to do so. i'm not going to put documents on eel.is that have bugs caused by cxxdraft-htmlgen that i cannot fix without going on an archeological expedition.
2016-09-17 01:16:26	KrzaQ	patches are welcome? :)
2016-09-17 01:16:51	<--	elh9 (~elh9___@110-175-114-60.tpgi.com.au) has quit (Ping timeout: 248 seconds)
2016-09-17 01:16:52	KrzaQ	fair enough
2016-09-17 01:16:54	ville	i am not sure he was saying you'd host the resulting output
2016-09-17 01:17:27	KrzaQ	Well, I wished for a site where I could link to older drafts
2016-09-17 01:17:29	-->	MaBunny (~Peter@117.194.198.15) has joined ##c++
2016-09-17 01:17:32	KrzaQ	I can host it myself if need be
2016-09-17 01:17:51	KrzaQ	but I did think of eel.is when saying that
2016-09-17 01:18:20	-->	pashtetx90 (~pavel@185.19.21.242) has joined ##c++
2016-09-17 01:18:20		[01:18]
2016-09-17 01:18:30	<--	Vinnie_win_f (vinnie.fal@pdpc/supporter/gold/thevinn) has quit (Ping timeout: 264 seconds)
2016-09-17 01:18:31	KrzaQ	oh, it's in haskell. I should've guessed
2016-09-17 01:18:50	ville	anyway for posterity's sake it may be good idea to branch the generator and say what standard version to pull in order to generate say c++17
2016-09-17 01:19:24	Eelis	go for it
2016-09-17 01:19:25	ville	branch/clone who ever is interested in doing it if it's on github
2016-09-17 01:19:30	ville	i am not
2016-09-17 01:19:42	-->	lowerAbstraction (68a2ecef@gateway/web/freenode/ip.104.162.236.239) has joined ##c++
2016-09-17 01:20:52	ambro718	what is the closest thing to something like a "using" statement, that would work like if but always execute the body once? Allowing things like "using (int x = 0) { ... }"
2016-09-17 01:21:20	Eelis	just  { int x = 0; ... }
2016-09-17 01:21:45	ambro718	the issue with that one is that it needs a closing brace which makes it ugly for use with macros where you want the user to pass the body
2016-09-17 01:21:58	ambro718	I want to have macros allowing   FOO(....) { .... }
2016-09-17 01:22:09	ambro718	not FOO(..., { ... })
2016-09-17 01:22:17	-->	Vuks (~Vuks@89-71-244-146.dynamic.chello.pl) has joined ##c++
2016-09-17 01:22:17	<--	Vuks (~Vuks@89-71-244-146.dynamic.chello.pl) has quit (Changing host)
2016-09-17 01:22:17	-->	Vuks (~Vuks@unaffiliated/vuks69) has joined ##c++
2016-09-17 01:22:21	Eelis	so your "problem" is caused by macro crap, ok
2016-09-17 01:22:49	<--	MaBunny (~Peter@117.194.198.15) has quit (Ping timeout: 248 seconds)
2016-09-17 01:22:52	lowerAbstraction	I am reading a tutorial. Within a global function this is a line:   `glutInitDisplayMode(GLUT_RGBA|GLUT_DOUBLE|GLUT_DEPTH);`   Is this some special syntax, or is the paramater to this function call literally a huge bitwise OR disjunction?
2016-09-17 01:22:55	KrzaQ	while, then?
2016-09-17 01:23:19	Eelis	lowerAbstraction: OR-ing flags together is normal in C/C++ APIs
2016-09-17 01:23:23	ambro718	why would while be better than if?
2016-09-17 01:23:23	KrzaQ	lowerAbstraction: very likely it's just adding flags
2016-09-17 01:23:23	ville	lowerAbstraction: it's just or
2016-09-17 01:23:50	ville	and it's not huge either
2016-09-17 01:23:52	sedeki	lowerAbstraction yes
2016-09-17 01:23:57	KrzaQ	ambro718: you said if didn't work for you
2016-09-17 01:24:00	lowerAbstraction	so it will typically mean "turn on all of these flags"?
2016-09-17 01:24:02	sedeki	(the latter)
2016-09-17 01:24:18	KrzaQ	it means "pass those flags"
2016-09-17 01:24:22	ambro718	I can already do "if (int x = 6) { ... }" but it has the problem that it will not execute if x==0
2016-09-17 01:24:26	KrzaQ	what it means in the function is up to the function
2016-09-17 01:24:38	lowerAbstraction	Is it bitwise OR or just OR?
2016-09-17 01:24:46	<--	sedeki (~textual@unaffiliated/sedeki) has quit (Read error: Connection reset by peer)
2016-09-17 01:24:47	KrzaQ	bitwise, || is logical
2016-09-17 01:24:54	lowerAbstraction	Ok cool.
2016-09-17 01:24:57	Eelis	lowerAbstraction: this is the sort of thing you really should be reading in a textbook
2016-09-17 01:25:05	KrzaQ	ambro718: ah so you don't want it to work like an if. do while
2016-09-17 01:25:10	velco	"if (int x = 6; &x) { .... :
2016-09-17 01:25:20	velco	next year
2016-09-17 01:25:26	KrzaQ	lol
2016-09-17 01:25:40	<--	narendraj9 (~user@157.119.170.39) has quit (Remote host closed the connection)
2016-09-17 01:25:40	<--	Tachyon_ (~Thunderbi@95.76.184.120) has quit (Quit: Tachyon_)
2016-09-17 01:26:53	<--	kasper^ (~safaf@82.137.10.181) has quit (Ping timeout: 244 seconds)
2016-09-17 01:27:10	bendem	lowerAbstraction, http://en.cppreference.com/w/cpp/language/operator_arithmetic#Bitwise_logic_operators
2016-09-17 01:27:28	lowerAbstraction	thanks
2016-09-17 01:28:41	<--	chkm8 (~chkm8@12.06.01a8.ip4.static.sl-reverse.com) has quit (Ping timeout: 240 seconds)
2016-09-17 01:29:01	ambro718	velco: that will be part of C++17?
2016-09-17 01:29:18	KrzaQ	yes
2016-09-17 01:29:29	ambro718	great I didn't know that. I guess I'll go with something like  for (bool run = true; run;) for (int x = 0; run; run = false) { ...
2016-09-17 01:30:09	Eelis	will    if (T x = y; U a = b; c)  also work?
2016-09-17 01:31:04	-->	elsevero (~elsevero@79.119.27.211) has joined ##c++
2016-09-17 01:31:59	<--	Zxpr1jk (~zxpr1jk@24.214.61.47) has quit (Read error: Connection reset by peer)
2016-09-17 01:33:02	ambro718	I hope the compilers can untangle this http://ideone.com/QXlVd6
2016-09-17 01:34:36	ambro718	hmm maybe for this case I will just add an operator bool to my type returning true, allowing if to work
2016-09-17 01:34:36		[01:34]
2016-09-17 01:34:47	ambro718	it's for mutexes. I want to be able to do LOCK(mutex) { ... }
2016-09-17 01:35:09	ambro718	expanding to:   if (Lock(mutex)) { ... }
2016-09-17 01:36:30	<--	JayKaye (~Jay@101.164.98.27) has quit (Ping timeout: 264 seconds)
2016-09-17 01:36:40	-->	MaBunny (~Peter@117.194.207.196) has joined ##c++
2016-09-17 01:38:25	-->	JayKaye (~Jay@101.164.98.27) has joined ##c++
2016-09-17 01:38:31	<--	pavshn (~pavshn@ppp95-165-153-84.pppoe.spdop.ru) has quit (Ping timeout: 272 seconds)
2016-09-17 01:39:07	-->	oxbb5c (~Thunderbi@78.176.220.205) has joined ##c++
2016-09-17 01:39:55	-->	pavshn (~pavshn@ppp95-165-153-84.pppoe.spdop.ru) has joined ##c++
2016-09-17 01:40:09	-->	LordDagothur (~Dagothur@2607:fea8:921f:fc1a:2118:9c94:9dcf:b3e7) has joined ##c++
2016-09-17 01:40:28	-->	The_CooIest (~Arthur_Li@bzq-84-108-121-56.cablep.bezeqint.net) has joined ##c++
2016-09-17 01:40:54	ambro718	oh no it doesn't seem to work http://ideone.com/nFfv1F
2016-09-17 01:41:14	ambro718	using just "if (Lock(mutex)) {" compiles but the lock is destructed before the loop starts
2016-09-17 01:41:32	<--	angelojulioth (~angelojul@190.154.14.154) has quit (Ping timeout: 244 seconds)
2016-09-17 01:42:01	ambro718	and using "if (Lock lock = Lock(mutex))" wants to use the copy constructor... any solution?
2016-09-17 01:42:15	velco	ambro718: don't do this horrid macro trickery
2016-09-17 01:42:23	ambro718	velco: there's no macros here
2016-09-17 01:43:20	z16	if (Lock lock{mutex}) { ... }
2016-09-17 01:43:23	velco	the soluition is { unique_lock<vlanh> lock(m); ... }
2016-09-17 01:43:56	-->	tadaa (~tadaaa@nat-wh-wz4-12.rz.uni-karlsruhe.de) has joined ##c++
2016-09-17 01:44:02	ambro718	that works thanks z16
2016-09-17 01:44:31	velco	if this passes a code review, I'd leave :P
2016-09-17 01:45:08	ambro718	any idea why if (Lock lock(mutex)) doesn't? Because the same syntax works with for loop
2016-09-17 01:45:23	z16	That doesn't work?
2016-09-17 01:45:35	z16	It should, it's essentially the same as mine
2016-09-17 01:45:44	<--	King_Hual (~failed@unaffiliated/king-hual/x-1207580) has quit (Ping timeout: 265 seconds)
2016-09-17 01:45:46	ambro718	z16: it doesn't compile
2016-09-17 01:46:14	ambro718	http://ideone.com/XlUb2m
2016-09-17 01:46:36	ambro718	but for accepts this syntax, one can do  for(Lock lock(mutex); ...; ...)
2016-09-17 01:47:32	-->	King_Hual (~failed@94.26.28.68) has joined ##c++
2016-09-17 01:47:32	<--	King_Hual (~failed@94.26.28.68) has quit (Changing host)
2016-09-17 01:47:32	-->	King_Hual (~failed@unaffiliated/king-hual/x-1207580) has joined ##c++
2016-09-17 01:48:44	<--	ibouvousaime (~ibouvousa@41.83.30.39) has quit (Ping timeout: 244 seconds)
2016-09-17 01:49:21	ambro718	now come the macros :)  http://ideone.com/xnjNcW
2016-09-17 01:49:34	ambro718	this is so much nicer than  { Lock lock(mutex); ... }
2016-09-17 01:50:07	V-ille	and you don't just use braces instead of parentheses because...?
2016-09-17 01:50:07		[01:50]
2016-09-17 01:50:09	KrzaQ	why don't you want to write normal idiomatic C++? It's much more readable than a bunch of macros
2016-09-17 01:50:54	ambro718	the normal solution with braces uses one extra line and is uglier to read
2016-09-17 01:51:42	ambro718	I actually think C++ should have a using statement and this would not even need macros
2016-09-17 01:51:42	<--	lowerAbstraction (68a2ecef@gateway/web/freenode/ip.104.162.236.239) has quit (Ping timeout: 240 seconds)
2016-09-17 01:51:50	V-ille	what extra line?
2016-09-17 01:52:05	V-ille	instead of  if (Lock lock(mutex))  you write  if (Lock lock{mutex})
2016-09-17 01:52:11	V-ille	where's there an extra line?
2016-09-17 01:52:22	ambro718	oh you mena that.
2016-09-17 01:52:55	ambro718	if you forget to type the variable name it will not work  if(Lock{mutex}) compiles but is broken
2016-09-17 01:53:08	ambro718	also it's confusing to reads because it says "if" but it always executes
2016-09-17 01:53:22	<--	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has quit (Remote host closed the connection)
2016-09-17 01:53:29	KrzaQ	it doesn't if your lock objects evaluates to false in bool context
2016-09-17 01:53:40	-->	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has joined ##c++
2016-09-17 01:53:47	ambro718	I prefer practical concerns instead of idiomaticism
2016-09-17 01:54:06	KrzaQ	{ if(bool b{}){} else { cout << "X"; } }
2016-09-17 01:54:07	geordi	X
2016-09-17 01:54:09	ambro718	KrzaQ: it doesn't evaluate to false
2016-09-17 01:54:27	KrzaQ	then it succeeded
2016-09-17 01:54:31	ambro718	it has operator bool() { return true; } just so it can work with the if construct
2016-09-17 01:54:37	z16	..... why?
2016-09-17 01:54:38	V-ille	wow
2016-09-17 01:54:41	-->	armistace (~armistace@1.128.97.84) has joined ##c++
2016-09-17 01:54:41	z16	Why even use if then?
2016-09-17 01:54:47	z16	Remove that dumb operator bool
2016-09-17 01:54:49	ambro718	z16: what do you suggest
2016-09-17 01:54:52	Oxyd	So you misimplemented your lock type, and now you're blaming if for breaking your code?
2016-09-17 01:54:53	z16	And just use Lock lock{mutex};
2016-09-17 01:54:56	z16	No if
2016-09-17 01:54:58	z16	No macros
2016-09-17 01:55:01	ambro718	one extra line
2016-09-17 01:55:02	z16	No stupidity
2016-09-17 01:55:02	KrzaQ	+1
2016-09-17 01:55:12	z16	No extra line
2016-09-17 01:55:19	KrzaQ	it's -2 lines
2016-09-17 01:55:20	z16	(In case that wasn't obvious)
2016-09-17 01:55:22	z16	^
2016-09-17 01:55:22	KrzaQ	for { and } of if
2016-09-17 01:55:26	z16	And one extra scope
2016-09-17 01:55:38	z16	Er, one less
2016-09-17 01:55:47	z16	If you *want* the scope, add it, {} don't hurt anyone
2016-09-17 01:55:49	KrzaQ	depends on whether he puts { on the same line
2016-09-17 01:56:06	ambro718	I really only care about where the lock is associated with a new scope
2016-09-17 01:56:11	ambro718	it's explicit
2016-09-17 01:56:39	z16	So you abuse the macro mechanism to abuse a no-op if to use the if's scope
2016-09-17 01:56:45	z16	When you can just use the scope directly
2016-09-17 01:57:21	ambro718	yes why is that so repulsive to you? I abuse C++ language all the time for the sake of readability and avoiding bugs.
2016-09-17 01:57:24	<--	pashtetx90 (~pavel@185.19.21.242) has quit (Read error: Connection reset by peer)
2016-09-17 01:57:35	KrzaQ	you're decrasing readability
2016-09-17 01:57:36	-->	pashtetx90 (~pavel@185.19.21.242) has joined ##c++
2016-09-17 01:58:01	ambro718	I fail to see how LOCK(mutex) { ... } fails at readability in any respect
2016-09-17 01:58:08	KrzaQ	if I see a well-known idiom in your code I know what it means
2016-09-17 01:58:10	ambro718	it's the most readable thing one could imagine
2016-09-17 01:58:12	z16	ambro718: This is not at all readable, and it introduced a bug that made you waste all of our time
2016-09-17 01:58:13	-->	harha_ (harha_@y55.ip4.netikka.fi) has joined ##c++
2016-09-17 01:58:22	ambro718	which bug?
2016-09-17 01:58:23	KrzaQ	if I see some macro buggery, I have to check the macro's definition
2016-09-17 01:58:30	-->	neurodrone (~neurodron@unaffiliated/neurodrone) has joined ##c++
2016-09-17 01:58:34	KrzaQ	and then I have to understand it, because you're doing some hackery
2016-09-17 01:58:36	z16	The one that if (Lock(mutex)) failed you
2016-09-17 01:58:49	ambro718	hence the macro
2016-09-17 01:59:01	z16	And no, it's not readable, all uppercase letters are visually jarring and distort the code
2016-09-17 01:59:10	z16	If someone sees it they won't know what that macro does
2016-09-17 01:59:15	ambro718	they don't have to be uppercase
2016-09-17 01:59:16	KrzaQ	exactly
2016-09-17 01:59:18	z16	They will always have to expand it to see what your intention is
2016-09-17 01:59:24	z16	They will see an if and wonder what it does
2016-09-17 01:59:35	z16	Then they will see a dummy implementation of a no-op operator bool
2016-09-17 01:59:44	z16	And wonder what's wrong with you
2016-09-17 01:59:55	z16	And go look for sane code instead
2016-09-17 02:00:14	KrzaQ	if you absolutely think you need this poo, make a with<Lock, Unary> template function
2016-09-17 02:00:59	ambro718	KrzaQ: what is that you suggest?
2016-09-17 02:01:01	ambro718	lambda?
2016-09-17 02:01:13	KrzaQ	yep
2016-09-17 02:01:17	-->	wasutton3 (~wasutton3@c-50-180-86-14.hsd1.ga.comcast.net) has joined ##c++
2016-09-17 02:01:32	KrzaQ	similar to std::call_once
2016-09-17 02:01:33	-->	ibouvousaime (~ibouvousa@41.83.41.121) has joined ##c++
2016-09-17 02:01:36	ambro718	nah, it's a problem because the return/break don't work
2016-09-17 02:01:38	pashtetx90	hi all
2016-09-17 02:01:56	KrzaQ	mhm
2016-09-17 02:02:49	<--	armistace (~armistace@1.128.97.84) has quit (Ping timeout: 248 seconds)
2016-09-17 02:04:22	<--	pashtetx90 (~pavel@185.19.21.242) has quit (Read error: Connection reset by peer)
2016-09-17 02:04:24	-->	Lingo_ (~Lingo@h-128-85.a258.priv.bahnhof.se) has joined ##c++
2016-09-17 02:04:28	<--	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has quit (Remote host closed the connection)
2016-09-17 02:04:36	<--	elsevero (~elsevero@79.119.27.211) has quit (Quit: elsevero)
2016-09-17 02:04:43	-->	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has joined ##c++
2016-09-17 02:04:47	ambro718	z16: "They will always have to expand it to see what your intention is"  definitely not the case. More likely they will just understand it locks the mutex using some trick to make it look nice, and possibly only if they're curious check out how it works.
2016-09-17 02:05:31	<--	spindle (~spindle@27-33-39-55.static.tpgi.com.au) has quit (Quit: Leaving)
2016-09-17 02:05:31		[02:05]
2016-09-17 02:05:34	ambro718	I mean it says "lock", you can't fail to understand what it means as long as you know what a mutex is and what locking a mutex means.
2016-09-17 02:05:53	-->	AndyDD (~AndyD@host-2-100-222-179.as13285.net) has joined ##c++
2016-09-17 02:06:29	paule32	so, here a copy without template, it works, but i have to optimize it for left/right because: 2 + 3 * 4
2016-09-17 02:06:33	paule32	https://paste.fedoraproject.org/429289/74113925/
2016-09-17 02:07:20	KrzaQ	it's a non-standard construct that uses shady technique to avoid using a well-known idiom. You can't assume anything, to me it'd look like code written by someone in the "I'm better than the standard library" stage of learning
2016-09-17 02:07:53	paule32	me?
2016-09-17 02:08:04	KrzaQ	no
2016-09-17 02:08:09	KrzaQ	it was directed to ambro718
2016-09-17 02:08:16	paule32	ah, sorry
2016-09-17 02:08:30	-->	symm- (~symm-@86.127.152.32) has joined ##c++
2016-09-17 02:08:41	<--	Lingo_ (~Lingo@h-128-85.a258.priv.bahnhof.se) has quit (Ping timeout: 248 seconds)
2016-09-17 02:08:52	-->	Nitrodev (~Nitrodev@85-23-77-207.bb.dnainternet.fi) has joined ##c++
2016-09-17 02:09:13	ambro718	KrzaQ: I have to agree about the last part but I suppose we have different opinions about the relative placement of this stage of learning.
2016-09-17 02:09:26	KrzaQ	it's very early. and then very late
2016-09-17 02:10:19	ambro718	sounds about right :)
2016-09-17 02:10:20	-->	inad922 (~inad925@178-164-137-199.pool.digikabel.hu) has joined ##c++
2016-09-17 02:10:42	KrzaQ	I remember hand-crafting a linked list of ints because std::vector or std::list were such sub-optimal constructs. I want to slap my past-self when I think about that
2016-09-17 02:11:15	ambro718	it's all about context. I honestly don't care if people don't like my coding style since it's for a hobby project.
2016-09-17 02:11:30	-->	Sasasu (~li@180.212.140.165) has joined ##c++
2016-09-17 02:13:11	ambro718	I hand-crafted many data structures because C++ doesn't have any intrusive variants, and boost is a big dependency and I could make the usage more concise than it would be with boost.
2016-09-17 02:13:11	<--	elnormous (~elnormous@91.105.17.158) has quit (Remote host closed the connection)
2016-09-17 02:14:41	KrzaQ	even header-only parts of boost?
2016-09-17 02:14:46	-->	CJKay (~Chris@cpc92318-cmbg19-2-0-cust507.5-4.cable.virginm.net) has joined ##c++
2016-09-17 02:14:54	KrzaQ	it doesn't feel like a burden to me
2016-09-17 02:15:48	<--	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has quit (Remote host closed the connection)
2016-09-17 02:16:01	ambro718	it's a burden nonetheless. Updating to new releases with possible interface changes, risk of bugs.
2016-09-17 02:16:06	-->	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has joined ##c++
2016-09-17 02:16:24	ambro718	I can write a bugless solution that is smaller and possibly simpler to use, and "forget about it".
2016-09-17 02:19:48	<--	neurodrone (~neurodron@unaffiliated/neurodrone) has quit (Quit: neurodrone)
2016-09-17 02:23:43	<--	wasutton3 (~wasutton3@c-50-180-86-14.hsd1.ga.comcast.net) has quit (Ping timeout: 255 seconds)
2016-09-17 02:23:43		[02:23]
2016-09-17 02:24:17	<--	Jackneill (~Jackneill@unaffiliated/jackneill) has quit (Ping timeout: 250 seconds)
2016-09-17 02:24:17	<--	FreeBirdLjj (~freebirdl@112.20.80.222) has quit (Read error: Connection reset by peer)
2016-09-17 02:24:38	-->	FreeBirdLjj (~freebirdl@223.65.168.137) has joined ##c++
2016-09-17 02:28:36	-->	Suchorski (regex@unaffiliated/suchorski) has joined ##c++
2016-09-17 02:31:31	<--	pioiytr_ (~pioiytr@c-73-51-13-55.hsd1.il.comcast.net) has quit (Ping timeout: 248 seconds)
2016-09-17 02:33:06	<--	MaBunny (~Peter@117.194.207.196) has quit (Ping timeout: 265 seconds)
2016-09-17 02:34:17	<--	V-ille (~ville@81-175-149-170.bb.dnainternet.fi) has quit (Ping timeout: 240 seconds)
2016-09-17 02:34:41	<--	Ben2560 (~quassel@137.154.197.63) has quit (Ping timeout: 250 seconds)
2016-09-17 02:35:07	-->	Forgo (~U_Forgo_T@unaffiliated/forgo) has joined ##c++
2016-09-17 02:35:09	Forgo	hi
2016-09-17 02:35:32	Forgo	it's not possible to set std::setbase(2) to get binary input/output?
2016-09-17 02:36:31	<--	velco (~chill@vlan-185-78-38-153.comnet.bg) has quit (Quit: Leaving...)
2016-09-17 02:36:35	<--	bigd0g (~bigd0g@ip72-221-88-40.ri.ri.cox.net) has quit (Quit: Zzz)
2016-09-17 02:36:46	-->	kasper^ (~safaf@82.137.15.165) has joined ##c++
2016-09-17 02:37:53	-->	f10_ (~flo@2001:470:52af:1:6dfe:4e8:627:1891) has joined ##c++
2016-09-17 02:39:58	ville	Forgo: only 8, 10 and 16 are supported. who'd thunk programmers might want binary output. http://eel.is/c++draft/full#std.manip-4
2016-09-17 02:39:58		[02:39]
2016-09-17 02:40:20	Forgo	ville: thanks
2016-09-17 02:41:16	<--	LordDagothur (~Dagothur@2607:fea8:921f:fc1a:2118:9c94:9dcf:b3e7) has quit (Ping timeout: 255 seconds)
2016-09-17 02:41:35	--	kaen__ is now known as jokaen
2016-09-17 02:42:14	-->	neurodrone (~neurodron@unaffiliated/neurodrone) has joined ##c++
2016-09-17 02:43:44	-->	elnormous (~elnormous@91.105.17.158) has joined ##c++
2016-09-17 02:43:52	-->	elsevero (~elsevero@79.119.27.211) has joined ##c++
2016-09-17 02:43:56	-->	wnklmnn (~pascal@p4FEF6210.dip0.t-ipconnect.de) has joined ##c++
2016-09-17 02:45:03	-->	velco (~chill@vlan-185-78-38-153.comnet.bg) has joined ##c++
2016-09-17 02:45:33	<--	plusone (~plusone@176.24.26.166) has quit (Ping timeout: 240 seconds)
2016-09-17 02:45:34	<--	Amaranth (~Amaranth@ubuntu/member/Amaranth) has quit (Quit: So long!)
2016-09-17 02:45:38	-->	MaBunny (~Peter@117.194.207.196) has joined ##c++
2016-09-17 02:46:30	<--	fahadash (uid44972@gateway/web/irccloud.com/x-bhjzlrunzfzktats) has quit (Quit: Connection closed for inactivity)
2016-09-17 02:47:08	-->	Jackneill (~Jackneill@unaffiliated/jackneill) has joined ##c++
2016-09-17 02:50:01	-->	kasper_ (~safaf@82.137.14.15) has joined ##c++
2016-09-17 02:51:04	<--	kasper^ (~safaf@82.137.15.165) has quit (Ping timeout: 265 seconds)
2016-09-17 02:51:06	<--	neurodrone (~neurodron@unaffiliated/neurodrone) has quit (Quit: neurodrone)
2016-09-17 02:51:27	<--	The_CooIest (~Arthur_Li@bzq-84-108-121-56.cablep.bezeqint.net) has quit (Quit: FOLD For The Cause!!!)
2016-09-17 02:52:48	-->	francoisk (~francoisk@154.66.250.11) has joined ##c++
2016-09-17 02:53:14	-->	f10 (~flo@2001:470:52af:1:79ca:e294:48d0:1603) has joined ##c++
2016-09-17 02:55:40	--	irc: disconnected from server
2016-09-17 02:55:40		[02:55]
2016-09-17 11:04:52	-->	alyptik (~alyptik@unaffiliated/alyptik) has joined ##c++
2016-09-17 11:04:52		[11:04]
2016-09-17 11:04:52	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || https://isocpp.org/faq || pastes: http://melpon.org/wandbox"
2016-09-17 11:04:52	--	Topic set by V-ille (~ville@81-175-149-170.bb.dnainternet.fi) on Fri, 18 Sep 2015 07:13:01
2016-09-17 11:04:52	--	Channel ##c++: 978 nicks (0 ops, 0 voices, 978 normals)
2016-09-17 11:04:52	***	Buffer Playback...
2016-09-17 11:04:52	rly	[20:54:54] If one argues that there are no stacks, then there should also be nothing against using recursion like this. [20:54:54]
2016-09-17 11:04:52	urdh	[20:55:02] rly what are you on about? [20:55:02]
2016-09-17 11:04:52	o]	[20:55:05] please call me back when the troll is gone [20:55:05]
2016-09-17 11:04:52	*buffextras	[20:55:11] davidstone!~davidston@2601:280:4601:5aeb:a8c:1329:f900:625b joined [20:55:11]
2016-09-17 11:04:52	w3z	[20:55:27] stick to facebook, k thnx [20:55:27]
2016-09-17 11:04:52	*buffextras	[20:55:35] skweek!~skweek@2607:fe50:0:810b:8d54:9711:b910:cc8f joined [20:55:35]
2016-09-17 11:04:52	rly	[20:55:40] w3z: thanks for your contribution. [20:55:40]
2016-09-17 11:04:52	w3z	[20:55:49] go away now [20:55:49]
2016-09-17 11:04:52	SlashLife	[20:55:56] rly: There isn't. This is a nice and correct program. [20:55:56]
2016-09-17 11:04:52	rly	[20:56:05] urdh: I am saying that it is completely arbitrary for people to argue against using recursion. [20:56:05]
2016-09-17 11:04:52	SlashLife	[20:56:09] Runtime boundaries are beyond the scope of C++. [20:56:09]
2016-09-17 11:04:52	*buffextras	[20:56:11] xnavor!~xnavor@78-70-4-240-no171.business.telia.com quit with message: [Quit: This computer has gone to sleep] [20:56:11]
2016-09-17 11:04:52	rly	[20:56:34] urdh: KrzaQ even argued it was "nonsensical". [20:56:34]
2016-09-17 11:04:52	SlashLife	[20:56:42] Say there wasn't an arbitrary limit for the stack, then it would still be limited by the total amount of memory available. [20:56:42]
2016-09-17 11:04:52	KrzaQ	[20:56:43] "at the first glance" [20:56:43]
2016-09-17 11:04:52	w3z	[20:56:50] it is nonsensical, theres no termination condition [20:56:50]
2016-09-17 11:04:52	SlashLife	[20:56:52] So there's still an upper limit. [20:56:52]
2016-09-17 11:04:52	rly	[20:56:59] w3z: there is a termination condition. [20:56:59]
2016-09-17 11:04:52	*buffextras	[20:57:07] Guest64967!~Hyrule@2a02:810a:12c0:5068:5543:9e4a:c106:bbec quit with message: [Ping timeout: 248 seconds] [20:57:07]
2016-09-17 11:04:52	urdh	[20:57:11] rly it's also completely arbitrary to argue that it is impossible to write "a correct C++ program using user defined function calls" [20:57:11]
2016-09-17 11:04:52	rly	[20:57:16] w3z: are you always so judgemental? [20:57:16]
2016-09-17 11:04:52	urdh	[20:57:20] incorrect to argue, even [20:57:20]
2016-09-17 11:04:52	SoItBegins	[20:57:33] OK, look [20:57:33]
2016-09-17 11:04:52	SlashLife	[20:57:34] w3z: Sure there is. If i+1 > N, unless i=1. [20:57:34]
2016-09-17 11:04:52	SoItBegins	[20:57:39] About the whole stack size thing. [20:57:39]
2016-09-17 11:04:52	*buffextras	[20:57:39] systemfault!~rcyr@unaffiliated/rcyr quit with message: [Ping timeout: 248 seconds] [20:57:39]
2016-09-17 11:04:52	SoItBegins	[20:57:41] The answer is: [20:57:41]
2016-09-17 11:04:52	SoItBegins	[20:57:43] “ulimit -s" [20:57:43]
2016-09-17 11:04:52	*buffextras	[20:57:50] stomper_!~stomper_@ool-45751986.dyn.optonline.net joined [20:57:50]
2016-09-17 11:04:52	rly	[20:58:01] SoItBegins: no, that's outside of C++. SlashLife gave one possible resolution to the issue. [20:58:01]
2016-09-17 11:04:52	*buffextras	[20:58:23] zrneely_!~zrneely@172.58.217.249 quit with message: [Ping timeout: 272 seconds] [20:58:23]
2016-09-17 11:04:52	rly	[20:58:27] I am just wondering whether SlashLife's opinion would also hold up when there is some angry developer across the table at some point. [20:58:27]
2016-09-17 11:04:52	SoItBegins	[20:58:36] rly: Eh. Speaking practically... [20:58:36]
2016-09-17 11:04:52	o]	[20:58:44] !focus [20:58:44]
2016-09-17 11:04:52	nolyc	[20:58:46] ##c++ focuses on C++. Discuss offtopic things elsewhere; ##c++-general or ##c++-social [20:58:46]
2016-09-17 11:04:52	SoItBegins	[20:58:46] This is the sort of thing that gets worked out in testing. [20:58:46]
2016-09-17 11:04:52	*buffextras	[20:59:00] SwiftMatt!~Objective@162.242.94.252 joined [20:59:00]
2016-09-17 11:04:52	*buffextras	[20:59:17] Jiwan!~jguegant@213-64-65-147-no264.tbcn.telia.com quit with message: [Read error: Connection reset by peer] [20:59:17]
2016-09-17 11:04:52	*buffextras	[20:59:34] systemfault!~rcyr@unaffiliated/rcyr joined [20:59:34]
2016-09-17 11:04:52	SlashLife	[21:00:19] rly: I'd tell that angry developer to get a grip of his toolchain. In most cases when building for common OSes on x86, which likely are the majority of the cases we're talking about right now, you can either specify the stack size your program requires, or you can rewrite your program to work iteratively and manage its stack by itself somewhere in dynamically allocated memory. [21:00:19]
2016-09-17 11:04:52	SlashLife	[21:01:00] In any case a limitation of the implementation is not the fault of the C++ programming language. [21:01:00]
2016-09-17 11:04:52	o]	[21:01:48] yes, so !focus for fuck sake [21:01:48]
2016-09-17 11:04:52	*buffextras	[21:02:01] ERROH!mama@unaffiliated/almathea quit with message: [Ping timeout: 248 seconds] [21:02:01]
2016-09-17 11:04:52	*buffextras	[21:03:11] obihann_!~jhann@156.34.9.72 joined [21:03:11]
2016-09-17 11:04:52	*buffextras	[21:03:26] jrolland-work!~jeff@155.92.176.224 quit with message: [Quit: Leaving] [21:03:26]
2016-09-17 11:04:52	*buffextras	[21:03:42] scai!~scai@p4FF0FCFA.dip0.t-ipconnect.de parted with message: ["[IRSSI]"] [21:03:42]
2016-09-17 11:04:52	*buffextras	[21:03:56] robmurrer!~robmurrer@75-172-95-19.tukw.qwest.net quit with message: [Remote host closed the connection] [21:03:56]
2016-09-17 11:04:52	*buffextras	[21:04:26] ctnguyen!~chau@cpe-107-185-147-68.socal.res.rr.com joined [21:04:26]
2016-09-17 11:04:52	*buffextras	[21:04:37] systemfault!~rcyr@unaffiliated/rcyr quit with message: [Read error: Connection reset by peer] [21:04:37]
2016-09-17 11:04:52	*buffextras	[21:04:49] pa!~pa@unaffiliated/pa quit with message: [Ping timeout: 255 seconds] [21:04:49]
2016-09-17 11:04:52	***	Playback Complete.
2016-09-17 11:04:59	--	Channel created on Fri, 14 Sep 2001 17:15:35
2016-09-17 11:05:44	<--	PaSaSaP (~PaSaSaP@nat.ds14.agh.edu.pl) has quit (Ping timeout: 244 seconds)
2016-09-17 11:06:19	-->	seaworthy (~seaworthy@cpe-76-175-69-134.socal.res.rr.com) has joined ##c++
2016-09-17 11:06:19	<--	seaworthy (~seaworthy@cpe-76-175-69-134.socal.res.rr.com) has quit (Changing host)
2016-09-17 11:06:19	-->	seaworthy (~seaworthy@unaffiliated/seaworthy) has joined ##c++
2016-09-17 11:07:37	<--	Jackneill (~Jackneill@unaffiliated/jackneill) has quit (Remote host closed the connection)
2016-09-17 11:07:45	-->	elnormous (~elnormous@91.105.17.158) has joined ##c++
2016-09-17 11:08:24	-->	kasper^ (~safaf@82.137.13.105) has joined ##c++
2016-09-17 11:09:04	<--	obihann (~jhann@drmons0544w-156034009072.dhcp-dynamic.FibreOP.ns.bellaliant.net) has quit (Quit: Lost terminal)
2016-09-17 11:10:37	<--	forgottenone (~forgotten@195.142.43.212) has quit (Quit: Konversation terminated!)
2016-09-17 11:10:50	<--	kasper_ (~safaf@82.137.12.84) has quit (Ping timeout: 265 seconds)
2016-09-17 11:11:23	<--	Gathis (~TheBlack@unaffiliated/gathis) has quit (Remote host closed the connection)
2016-09-17 11:13:12	<--	elnormous (~elnormous@91.105.17.158) has quit (Ping timeout: 265 seconds)
2016-09-17 11:14:10	wolf_1	hey
2016-09-17 11:14:12	wolf_1	um
2016-09-17 11:14:55	wolf_1	so I have a function that sends packets to a server
2016-09-17 11:15:02	wolf_1	and I have another function
2016-09-17 11:15:05	wolf_1	that calls that function
2016-09-17 11:15:17	wolf_1	and uses it to send console input to the server
2016-09-17 11:15:28	wolf_1	but whenever I use it to send the console input
2016-09-17 11:15:40	wolf_1	if I were to send this: "hello bye hi"
2016-09-17 11:15:48	wolf_1	it would send "hello\n bye\n hi\n"
2016-09-17 11:15:56	wolf_1	but if I call the function anywhere else
2016-09-17 11:16:01	wolf_1	it sends the entire packet without \n
2016-09-17 11:16:05	wolf_1	here's the code
2016-09-17 11:16:10	-->	ERROH (~mama@unaffiliated/almathea) has joined ##c++
2016-09-17 11:16:20	urdh	!give wolf_1 general
2016-09-17 11:16:21	nolyc	wolf_1: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2016-09-17 11:16:50	trw	rptx
2016-09-17 11:16:50	wolf_1	?
2016-09-17 11:16:57	trw	nn/21/repeat
2016-09-17 11:17:01	trw	terex
2016-09-17 11:17:05	urdh	nvm, i'm too tired to irc right now
2016-09-17 11:17:29	<--	skweek (~skweek@2607:fe50:0:810b:8d54:9711:b910:cc8f) has quit (Ping timeout: 248 seconds)
2016-09-17 11:18:33	-->	glenfe (~glen@ool-18b8d08e.dyn.optonline.net) has joined ##c++
2016-09-17 11:18:34	<--	glenfe (~glen@ool-18b8d08e.dyn.optonline.net) has quit (Changing host)
2016-09-17 11:18:34	-->	glenfe (~glen@unaffiliated/glenfe) has joined ##c++
2016-09-17 11:18:34	-->	pa (~pa@unaffiliated/pa) has joined ##c++
2016-09-17 11:19:07	trw	ifStrongs ::NoClass "submarines; sandwitches" plot x/y /''blot' groom
2016-09-17 11:19:22	trw	srcStringClass "Marriage" not by CLLI code
2016-09-17 11:19:34	trw	it's 10-30
2016-09-17 11:19:35	w3z	!ops
2016-09-17 11:19:36	nolyc	Adrinael V-ille ville wcstok LIM orbitz woggle PlasmaHH Eelis TinoDidriksen are ops in this channel
2016-09-17 11:19:48	V-ille	who shall I smite?
2016-09-17 11:20:19	mussolini	!give wolf_1 next
2016-09-17 11:20:19		[11:20]
2016-09-17 11:20:21	nolyc	wolf_1: Another satisfied customer, next!
2016-09-17 11:20:39	w3z	start with everyone and everything
2016-09-17 11:21:02	<--	wasutton3 (~wasutton3@c-50-180-86-14.hsd1.ga.comcast.net) has quit (Remote host closed the connection)
2016-09-17 11:21:30	-->	pavshn (~pavshn@ppp95-165-153-84.pppoe.spdop.ru) has joined ##c++
2016-09-17 11:21:32	-->	systemfault (~rcyr@unaffiliated/rcyr) has joined ##c++
2016-09-17 11:22:07	<--	YungRaj (~YungRaj@104-63-233-54.lightspeed.hstntx.sbcglobal.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-17 11:22:55	<--	jkhl (~j@host86-166-214-159.range86-166.btcentralplus.com) has quit (Ping timeout: 265 seconds)
2016-09-17 11:22:59	<--	ctnguyen (~chau@cpe-107-185-147-68.socal.res.rr.com) has quit (Read error: Connection reset by peer)
2016-09-17 11:23:43	wolf_1	well ##c++-general is very inactive
2016-09-17 11:23:44	wolf_1	so
2016-09-17 11:24:05	wolf_1	can any1 from here
2016-09-17 11:24:07	wolf_1	join there
2016-09-17 11:24:11	wolf_1	and help me there :(
2016-09-17 11:24:12	wolf_1	?
2016-09-17 11:24:25	-->	feliwir (Elite16673@gateway/shell/elitebnc/x-xorwkpivtvfjccpo) has joined ##c++
2016-09-17 11:24:48	<--	irrenhaus4 (~xenon@HSI-KBW-046-005-253-022.hsi8.kabel-badenwuerttemberg.de) has quit (Quit: leaving)
2016-09-17 11:25:04	-->	irrenhaus3 (~xenon@HSI-KBW-046-005-253-022.hsi8.kabel-badenwuerttemberg.de) has joined ##c++
2016-09-17 11:27:20	<--	Smx (Elite8556@gateway/shell/elitebnc/x-ofzaiemdxrbzmdju) has quit (Excess Flood)
2016-09-17 11:28:05	-->	Smx (Elite8556@gateway/shell/elitebnc/x-ziwjrrsizkahtoco) has joined ##c++
2016-09-17 11:29:25	<--	RebelCoder (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has quit (Ping timeout: 272 seconds)
2016-09-17 11:29:34	<--	Suchorski (regex@unaffiliated/suchorski) has quit (Ping timeout: 255 seconds)
2016-09-17 11:30:12	-->	Suchorski (~regex@189-13-147-147.user.veloxzone.com.br) has joined ##c++
2016-09-17 11:30:21	-->	GinoMan2440 (~GinoMan@pool-108-36-146-193.phlapa.fios.verizon.net) has joined ##c++
2016-09-17 11:30:31	<--	Suchorski (~regex@189-13-147-147.user.veloxzone.com.br) has quit (Changing host)
2016-09-17 11:30:31	-->	Suchorski (~regex@unaffiliated/suchorski) has joined ##c++
2016-09-17 11:32:44	<--	folbofasolin (~folbo@apn-5-60-43-184.dynamic.gprs.plus.pl) has quit (Quit: Leaving)
2016-09-17 11:33:06	<--	Shoelaces (~shoelaces@pool-173-56-47-240.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-17 11:33:34	<--	GinoMan (~GinoMan@pool-108-36-146-193.phlapa.fios.verizon.net) has quit (Ping timeout: 240 seconds)
2016-09-17 11:33:38	<--	smokex (smokex@gateway/shell/panicbnc/x-hjsacsszkdioezsn) has quit (Ping timeout: 244 seconds)
2016-09-17 11:33:50	<--	flavi0 (~anon@unaffiliated/flavi0) has quit (Quit: leaving)
2016-09-17 11:33:51	<--	alem0lars (alem0lars@0xcc.alem0lars.me) has quit (Ping timeout: 272 seconds)
2016-09-17 11:33:55	<--	MrP[Home] (~Palsson@c-a46fe555.06-213-6e6b701.cust.bredbandsbolaget.se) has quit (Read error: Connection reset by peer)
2016-09-17 11:33:59	<--	kolobyte (~aaa@unaffiliated/kolobyte) has quit (Ping timeout: 265 seconds)
2016-09-17 11:34:50	-->	Streusel (~Anonymous@unaffiliated/streusel) has joined ##c++
2016-09-17 11:35:52	-->	erhan_ (~erhan_@HSI-KBW-109-192-237-151.hsi6.kabel-badenwuerttemberg.de) has joined ##c++
2016-09-17 11:35:52		[11:35]
2016-09-17 11:35:59	megaTherion	wolf_1: ?
2016-09-17 11:36:22	-->	k_j (~no@151.42.78.158) has joined ##c++
2016-09-17 11:36:24	k_j	hi
2016-09-17 11:36:42	<--	EricWF (~EricWF@S0106bcd1653002b9.cg.shawcable.net) has quit (Quit: Leaving)
2016-09-17 11:36:57	k_j	bool loop = true; while (loop) {/*...*/} is risky right?
2016-09-17 11:37:13	k_j	suppose another thread is setting loop = false;
2016-09-17 11:37:23	megaTherion	why risky
2016-09-17 11:37:33	-->	jaafar (~quassel@76-218-204-163.lightspeed.sntcca.sbcglobal.net) has joined ##c++
2016-09-17 11:37:44	megaTherion	it works if you want to make the thread being able to get out of that while
2016-09-17 11:37:44	o]	if loop is not volatile, then it can be optimized out
2016-09-17 11:37:52	k_j	since there is no fence involved it is not guaranteed the original thread will read loop = false
2016-09-17 11:37:54	megaTherion	there are better ways too
2016-09-17 11:38:07	-->	kolobyte (~aaa@23.94.98.192) has joined ##c++
2016-09-17 11:38:08	<--	kolobyte (~aaa@23.94.98.192) has quit (Changing host)
2016-09-17 11:38:08	-->	kolobyte (~aaa@unaffiliated/kolobyte) has joined ##c++
2016-09-17 11:38:16	k_j	i know i can use atomic bool, but my question is about guarantees
2016-09-17 11:38:17	 *	o] slaps megaTherion
2016-09-17 11:38:18	megaTherion	k_j: then on the next iteration, the operation is not atomic if thats what you want to say
2016-09-17 11:38:23	k_j	i think o] answered
2016-09-17 11:38:36	o]	^^
2016-09-17 11:38:37	o]	!next
2016-09-17 11:38:37	k_j	no
2016-09-17 11:38:39	nolyc	Another satisfied customer, next!
2016-09-17 11:38:50	k_j	megaTherion, you did not get my question or I explained it badly
2016-09-17 11:38:52	megaTherion	o]: I doubt that it will optimized out but ok
2016-09-17 11:38:58	o]	"I doubt"
2016-09-17 11:39:09	-->	ibouvousaime (~ibouvousa@41.83.41.121) has joined ##c++
2016-09-17 11:39:19	o]	"it works on my machine"
2016-09-17 11:39:33	erhan_	k_j is the boolean declared in the method? or is it a member/static?
2016-09-17 11:39:35	megaTherion	now you mixing things up
2016-09-17 11:39:39	k_j	what I mean is,    SINCE there is NO FENCE  involved, the  first thread might be keeping read loop = true *FOREVER*
2016-09-17 11:39:48	o]	!give megaTherion works
2016-09-17 11:39:49	nolyc	megaTherion: It works it works! Omg omg omg! I mean it compiles. Now what's a segfault?
2016-09-17 11:39:50	megaTherion	k_j: no
2016-09-17 11:40:07	o]	k_j: yup
2016-09-17 11:40:09	k_j	why not, there is not guarantee caches will be aligned unless I use lock's or atomics
2016-09-17 11:40:09	megaTherion	o]: I disagree, it will work - but proove otherwise
2016-09-17 11:40:13	<--	nullfxn (~nullFxn@107-147-108-164.res.bhn.net) has quit (Quit: leaving)
2016-09-17 11:40:22	o]	k_j: ignore the idiot
2016-09-17 11:40:23	k_j	o], am i right?
2016-09-17 11:40:44	o]	the optimizer can screw you badly if you use a "naked" bool :)
2016-09-17 11:40:46	megaTherion	so now Im an idiot because you cannot proove that you're right
2016-09-17 11:40:47	megaTherion	fine
2016-09-17 11:41:02	-->	Arlen0 (~Arlen0@38-103-219-200.alamobb.net) has joined ##c++
2016-09-17 11:41:04	-->	tete94 (~tete94@201.206.234.253) has joined ##c++
2016-09-17 11:41:10	<--	Faceuk (~Faceuk@cpc5-stre6-2-0-cust487.1-1.cable.virginm.net) has quit (Ping timeout: 260 seconds)
2016-09-17 11:41:19	<--	Arlen0 (~Arlen0@38-103-219-200.alamobb.net) has quit (Remote host closed the connection)
2016-09-17 11:41:43	-->	anuxivm (~anuxi@92.185.154.236) has joined ##c++
2016-09-17 11:43:11	w3z	you want him to prove that the bool needs to be volatile to force the reader thread from assuming the bool doesnt change out from under it?
2016-09-17 11:43:12	k_j	o],  ok, so the compiler can optimize out bool = false. ok. this happens at compile time. what I am wondering is cache coherency and if I am right in saying different threads might be keeping reading from "misaligned" caches, as there is no warranty, unless I use fences of some sort to force the alignment
2016-09-17 11:44:06	w3z	youre misusing the term "alignment" ....
2016-09-17 11:44:09	k_j	it might be a rare case this situation will keep forever, but still a possibility
2016-09-17 11:44:17	<--	tadaa (~tadaaa@nat-wh-wz4-12.rz.uni-karlsruhe.de) has quit
2016-09-17 11:44:22	megaTherion	w3z: he talks about platform specifics
2016-09-17 11:44:24	o]	frankly I don't know what it is guaranteed on the std regarding caching :)
2016-09-17 11:44:30	k_j	w3z, yes, cache coherence it is
2016-09-17 11:44:47	o]	feel free to check it out
2016-09-17 11:44:48	k_j	o], absolutely nothing , this is way I am wondering
2016-09-17 11:44:53	o]	so, wrong channel
2016-09-17 11:44:56	o]	!next
2016-09-17 11:44:57	nolyc	Another satisfied customer, next!
2016-09-17 11:45:46	-->	neurrowcat (~neurrowca@h-70-243.a163.priv.bahnhof.se) has joined ##c++
2016-09-17 11:46:22	<--	ibouvousaime (~ibouvousa@41.83.41.121) has quit (Quit: Konversation terminated!)
2016-09-17 11:48:20	<--	spindle (~spindle@27-33-39-55.static.tpgi.com.au) has left ##c++ ("Leaving")
2016-09-17 11:48:27	-->	everamzah (~james@cpe-198-255-184-0.maine.res.rr.com) has joined ##c++
2016-09-17 11:48:50	-->	ibouvousaime (~ibouvousa@41.82.50.229) has joined ##c++
2016-09-17 11:49:17	<--	Nitrodev (~Nitrodev@85-23-77-207.bb.dnainternet.fi) has quit (Read error: Connection reset by peer)
2016-09-17 11:51:22	-->	gioerr (~gioerr@athedsl-4535808.home.otenet.gr) has joined ##c++
2016-09-17 11:51:22		[11:51]
2016-09-17 11:52:14	<--	Appleman1234 (~Appleman1@KD119104048120.au-net.ne.jp) has quit (Ping timeout: 244 seconds)
2016-09-17 11:53:02	<--	tocka (~tocka@78.63.77.145) has quit
2016-09-17 11:53:24	w3z	megaTherion: 1.10.1 if you want to read about the abstract machine and sequncing of concurrent operations, its dense reading just like all of [basic]
2016-09-17 11:53:57	megaTherion	what for
2016-09-17 11:54:07	megaTherion	o] was talking about the compiler optmize-away the while
2016-09-17 11:54:13	megaTherion	(err not the while, the expression)
2016-09-17 11:54:15	-->	bkboggy (~bkboggy@cpe-172-250-147-60.socal.res.rr.com) has joined ##c++
2016-09-17 11:54:33	<--	Suchorski (~regex@unaffiliated/suchorski) has quit (Ping timeout: 250 seconds)
2016-09-17 11:55:25	-->	Suchorski (regex@177-179-55-118.user.veloxzone.com.br) has joined ##c++
2016-09-17 11:55:25	<--	Suchorski (regex@177-179-55-118.user.veloxzone.com.br) has quit (Changing host)
2016-09-17 11:55:25	-->	Suchorski (regex@unaffiliated/suchorski) has joined ##c++
2016-09-17 11:55:44	<--	armyriad (~armyriad@172.98.67.109) has quit (Ping timeout: 265 seconds)
2016-09-17 11:56:15	w3z	well in 1.9 it indicates that volatile means the optimizer is not allowed to alter the rules of the abstract machine ...
2016-09-17 11:56:33	<--	ibouvousaime (~ibouvousa@41.82.50.229) has quit (Ping timeout: 240 seconds)
2016-09-17 11:56:36	<--	SpaceDanceCJ (~Sasha@37.45.175.196) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-09-17 11:56:36	-->	armyriad (~armyriad@gateway/vpn/privateinternetaccess/armyriad) has joined ##c++
2016-09-17 11:56:38	<--	a3f (~a3f@unaffiliated/a3f) has quit (Read error: Connection reset by peer)
2016-09-17 11:59:03	o]	yup. remove volatile and it can be optimized away :)
2016-09-17 12:00:36	-->	herpderp (FJXW6T2aaW@serpens.uberspace.de) has joined ##c++
2016-09-17 12:00:55	w3z	its funny you still have to go to 9899 to get a detailed description of volatile
2016-09-17 12:02:56	-->	ibouvousaime (~ibouvousa@41.82.50.229) has joined ##c++
2016-09-17 12:03:48	<--	allplayersdd (~allplayer@193-81-101-93.adsl.highway.telekom.at) has quit (Quit: Leaving)
2016-09-17 12:03:58	-->	calincru (calin@nat/google/x-abguakbfxftpmqam) has joined ##c++
2016-09-17 12:04:25	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-17 12:05:54	<--	P1RATEZ (piratez@unaffiliated/p1ratez) has quit
2016-09-17 12:05:56	--	wolf_1 is now known as dSept_
2016-09-17 12:06:10	<--	neurrowcat (~neurrowca@h-70-243.a163.priv.bahnhof.se) has quit (Quit: Deebidappidoodah!)
2016-09-17 12:06:11	<--	dofidum (~dofidum@2a02:c7d:850:6700:6d57:3e29:d42e:78b1) has quit (Remote host closed the connection)
2016-09-17 12:06:19	--	dSept_ is now known as dSept
2016-09-17 12:07:18	<--	anton02 (~quassel@lal1651212.lnk.telstra.net) has quit (Ping timeout: 265 seconds)
2016-09-17 12:07:18		[12:07]
2016-09-17 12:08:04	<--	chachasmooth (~chachasmo@unaffiliated/chachasmooth) has quit (Ping timeout: 244 seconds)
2016-09-17 12:08:05	<--	dSept (~wolf_1@unaffiliated/deerdidlydong) has left ##c++
2016-09-17 12:08:17	-->	wolf_1 (~wolf_1@unaffiliated/deerdidlydong) has joined ##c++
2016-09-17 12:08:18	<--	Timbo (~tma@cpc102378-sgyl38-2-0-cust55.18-2.cable.virginm.net) has quit (Ping timeout: 276 seconds)
2016-09-17 12:08:34	-->	fs30hlulz (5911056c@gateway/web/freenode/ip.89.17.5.108) has joined ##c++
2016-09-17 12:08:35	<--	GinoMan2440 (~GinoMan@pool-108-36-146-193.phlapa.fios.verizon.net) has quit (Ping timeout: 244 seconds)
2016-09-17 12:09:26	-->	elnormous (~elnormous@91.105.17.158) has joined ##c++
2016-09-17 12:11:17	-->	Shoelaces (~shoelaces@pool-173-56-47-240.nycmny.fios.verizon.net) has joined ##c++
2016-09-17 12:11:21	fs30hlulz	test
2016-09-17 12:11:30	<--	harha_ (harha_@y55.ip4.netikka.fi) has quit (Read error: Connection reset by peer)
2016-09-17 12:11:39	-->	jagob (~jacob@nobelnet.dk) has joined ##c++
2016-09-17 12:12:05	fs30hlulz	I know for a fact that once you do char somechar[10]; all of the chars will be set to 0, is this the same for WCHAR? because for me it seems like it isn't
2016-09-17 12:12:17	o]	!give fs30hlulz windows
2016-09-17 12:12:19	nolyc	fs30hlulz: You should ask your Windows programming questions in ##c++-general, #winapi, ##windows-coding or irc://irc.efnet.org/winprog
2016-09-17 12:12:50	-->	chachasmooth (~chachasmo@unaffiliated/chachasmooth) has joined ##c++
2016-09-17 12:12:52	-->	neurrowcat (~neurrowca@h-70-243.a163.priv.bahnhof.se) has joined ##c++
2016-09-17 12:13:02	WalrusPony	fs30hlulz: Variables are not default initialized unless they are static variables (or certain other cases)
2016-09-17 12:13:34	o]	or if they are classes with a default constructor
2016-09-17 12:13:38	WalrusPony	that too
2016-09-17 12:13:59	WalrusPony	fs30hlulz: local arrays of primitive types are not default initialized. This applies to both char and wchar
2016-09-17 12:14:06	<--	elnormous (~elnormous@91.105.17.158) has quit (Ping timeout: 265 seconds)
2016-09-17 12:14:08	o]	wchar_t
2016-09-17 12:14:15	o]	yuck
2016-09-17 12:14:18	WalrusPony	If you want it default initialized, do ` = {};`
2016-09-17 12:14:25	fs30hlulz	oh I see
2016-09-17 12:14:31	-->	Timbo (~tma@cpc102378-sgyl38-2-0-cust55.18-2.cable.virginm.net) has joined ##c++
2016-09-17 12:16:32	-->	heiner (~heiner@dslb-178-005-240-153.178.005.pools.vodafone-ip.de) has joined ##c++
2016-09-17 12:17:13	<--	yeticry (~yeticry@183.160.6.32) has quit (Ping timeout: 248 seconds)
2016-09-17 12:17:27	-->	neurodrone (~neurodron@unaffiliated/neurodrone) has joined ##c++
2016-09-17 12:17:45	<--	calincru (calin@nat/google/x-abguakbfxftpmqam) has quit (Ping timeout: 248 seconds)
2016-09-17 12:18:36	--	i- is now known as ^9
2016-09-17 12:18:55	-->	Referencer (~reference@95.154.201.147) has joined ##c++
2016-09-17 12:19:33	-->	velco (~chill@vlan-185-78-38-153.comnet.bg) has joined ##c++
2016-09-17 12:20:52	<--	ibouvousaime (~ibouvousa@41.82.50.229) has quit (Ping timeout: 265 seconds)
2016-09-17 12:21:48	-->	armistace (~armistace@1.128.97.84) has joined ##c++
2016-09-17 12:22:10	V-ille	that's not default-initialization, that's copy-list-initialization which in turn boils down to value-initialization
2016-09-17 12:22:54	-->	ibouvousaime (~ibouvousa@41.83.31.96) has joined ##c++
2016-09-17 12:22:54		[12:22]
2016-09-17 12:23:15	<--	everamzah (~james@cpe-198-255-184-0.maine.res.rr.com) has quit (Ping timeout: 272 seconds)
2016-09-17 12:24:03	o]	{ char somechar[10]{}; cout << somechar; }
2016-09-17 12:24:04	geordi	<no output>
2016-09-17 12:24:16	<--	wolfcub (~henrique_@177.55.202.248) has quit (Ping timeout: 244 seconds)
2016-09-17 12:25:14	-->	wolfcub (~henrique_@177.55.202.248) has joined ##c++
2016-09-17 12:25:23	-->	yeticry (~yeticry@183.160.6.32) has joined ##c++
2016-09-17 12:25:27	SlashLife	geordi: replace << with <<+
2016-09-17 12:25:28	geordi	<no output>
2016-09-17 12:25:40	SlashLife	:S
2016-09-17 12:25:59	SlashLife	Oh. That's the array. m(
2016-09-17 12:26:24	<--	p3rs3us (~jduro@86.184.148.55) has quit (Quit: Leaving)
2016-09-17 12:29:52	<--	madpat (~AndChat57@dyndsl-037-138-029-133.ewe-ip-backbone.de) has quit (Ping timeout: 255 seconds)
2016-09-17 12:30:09	o]	{ int someshit[5]{}; cout << someshit; }
2016-09-17 12:30:10	geordi	{0, 0, 0, 0, 0}
2016-09-17 12:30:45	<--	k_j (~no@151.42.78.158) has left ##c++ ("bye")
2016-09-17 12:31:41	<--	strelox (~user@p200300754F2A9900B74A5B0E04C8A4FE.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-09-17 12:31:47	-->	hey2 (~hey5@c-71-193-232-55.hsd1.or.comcast.net) has joined ##c++
2016-09-17 12:32:30	-->	gp5st (~jim@pool-98-111-192-215.pitbpa.fios.verizon.net) has joined ##c++
2016-09-17 12:35:17	<--	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has quit (Ping timeout: 272 seconds)
2016-09-17 12:35:40	-->	f3r70rr35f (~fernando@200-112-59-248.baf.movistar.cl) has joined ##c++
2016-09-17 12:35:45	-->	smokex (smokex@gateway/shell/panicbnc/x-cbwraxpmomsdwyso) has joined ##c++
2016-09-17 12:35:46	<--	smokex (smokex@gateway/shell/panicbnc/x-cbwraxpmomsdwyso) has quit (Changing host)
2016-09-17 12:35:46	-->	smokex (smokex@unaffiliated/smokex) has joined ##c++
2016-09-17 12:35:46	<--	smokex (smokex@unaffiliated/smokex) has quit (Changing host)
2016-09-17 12:35:46	-->	smokex (smokex@gateway/shell/panicbnc/x-cbwraxpmomsdwyso) has joined ##c++
2016-09-17 12:37:09	<--	trw (~twa@184.250.133.164) has quit (Ping timeout: 244 seconds)
2016-09-17 12:38:01	<--	davidstone (~davidston@2601:280:4601:5aeb:a8c:1329:f900:625b) has quit (Ping timeout: 248 seconds)
2016-09-17 12:38:01		[12:38]
2016-09-17 12:39:20	-->	plusone (~plusone@176.24.26.166) has joined ##c++
2016-09-17 12:39:43	<--	RoKenn (~RoKenn@2001:a61:2216:4d01:39c4:6696:687e:3508) has quit (Quit: NSA proxy service interrupted)
2016-09-17 12:40:10	<--	rly (~rly@ip503d08f0.speed.planet.nl) has quit (Quit: WeeChat 1.6-dev)
2016-09-17 12:42:41	<--	ibouvousaime (~ibouvousa@41.83.31.96) has quit (Ping timeout: 240 seconds)
2016-09-17 12:44:42	<--	herpderp (FJXW6T2aaW@serpens.uberspace.de) has left ##c++
2016-09-17 12:44:55	<--	zwoof (~zwoof@modemcable076.238-20-96.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2016-09-17 12:44:59	<--	zwf (~Thunderbi@modemcable076.238-20-96.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2016-09-17 12:45:12	-->	prehensileNipple (~nooblet@124.197.62.6) has joined ##c++
2016-09-17 12:45:23	-->	zwoof (zwoof@modemcable076.238-20-96.mc.videotron.ca) has joined ##c++
2016-09-17 12:45:27	-->	zwf (~Thunderbi@modemcable076.238-20-96.mc.videotron.ca) has joined ##c++
2016-09-17 12:47:07	<--	robert_ (~hellspawn@objectx/robert) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2016-09-17 12:49:03	-->	Appleman1234 (~Appleman1@KD119104050103.au-net.ne.jp) has joined ##c++
2016-09-17 12:50:37	<--	fs30hlulz (5911056c@gateway/web/freenode/ip.89.17.5.108) has quit (Quit: Page closed)
2016-09-17 12:51:00	<--	phinxy (~tehhhd@unaffiliated/phinxy) has quit (Read error: Connection reset by peer)
2016-09-17 12:53:30	<--	gp5st (~jim@pool-98-111-192-215.pitbpa.fios.verizon.net) has quit (Ping timeout: 260 seconds)
2016-09-17 12:53:30		[12:53]
2016-09-17 12:53:54	<--	armistace (~armistace@1.128.97.84) has quit (Ping timeout: 264 seconds)
2016-09-17 12:55:12	-->	alem0lars (alem0lars@0xcc.alem0lars.me) has joined ##c++
2016-09-17 12:55:39	-->	chiken (~chiken@60-242-215-61.static.tpgi.com.au) has joined ##c++
2016-09-17 12:55:45	<--	Henke37 (~Henrik@81-227-16-59-no133.bredband.skanova.com) has quit (Quit: ERR_SHUTDOWN)
2016-09-17 12:56:08	<--	kimundi (~Kimundi@p57BC6637.dip0.t-ipconnect.de) has quit (Ping timeout: 265 seconds)
2016-09-17 12:56:13	<--	neurrowcat (~neurrowca@h-70-243.a163.priv.bahnhof.se) has quit (Quit: Deebidappidoodah!)
2016-09-17 13:00:26	--	mussolini is now known as bobot
2016-09-17 13:01:05	<--	cbot (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Ping timeout: 240 seconds)
2016-09-17 13:01:20	-->	cbot (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2016-09-17 13:01:29	-->	veep (uid186209@gateway/web/irccloud.com/x-ivyyqiuuuwhhqynz) has joined ##c++
2016-09-17 13:05:21	<--	erhan_ (~erhan_@HSI-KBW-109-192-237-151.hsi6.kabel-badenwuerttemberg.de) has quit (Quit:  )
2016-09-17 13:05:33	<--	Karyon (~Karyon@unaffiliated/karyon) has quit (Ping timeout: 240 seconds)
2016-09-17 13:06:27	<--	Sylph-DS (~Sylph@145.136.48.182) has quit (Read error: Connection reset by peer)
2016-09-17 13:07:42	-->	StyxAlso (~markg@235.129.220.203.dial.dynamic.acc01-oliv-alb.comindico.com.au) has joined ##c++
2016-09-17 13:09:11	w3z	i wonder why ostream_joiner didnt make the cut
2016-09-17 13:09:11		[13:09]
2016-09-17 13:09:31	<--	seishun (~Kakera@46.109.100.60) has quit (Ping timeout: 250 seconds)
2016-09-17 13:10:05	w3z	{ int someshit[5]{-1}; cout << someshit; }
2016-09-17 13:10:05	geordi	{-1, 0, 0, 0, 0}
2016-09-17 13:10:27	-->	elnormous (~elnormous@91.105.17.158) has joined ##c++
2016-09-17 13:10:28	w3z	in case you didnt believe V-ille
2016-09-17 13:11:00	V-ille	didn't believe what?
2016-09-17 13:11:17	w3z	that its not default initialization
2016-09-17 13:12:01	V-ille	ack
2016-09-17 13:14:36	<--	chiken (~chiken@60-242-215-61.static.tpgi.com.au) has quit (Quit: Leaving)
2016-09-17 13:15:00	<--	elnormous (~elnormous@91.105.17.158) has quit (Ping timeout: 265 seconds)
2016-09-17 13:15:35	w3z	i wonder where else i could blur the runtime/compile-time line using variant like in my tuple lookup snippet
2016-09-17 13:16:08	-->	ferdna (~ferdna@cpe-69-23-141-130.elp.res.rr.com) has joined ##c++
2016-09-17 13:17:43	<--	kasper^ (~safaf@82.137.13.105) has quit (Ping timeout: 272 seconds)
2016-09-17 13:18:10	-->	Karyon (~Karyon@CPE0c473d35fd91-CM0c473d35fd90.cpe.net.cable.rogers.com) has joined ##c++
2016-09-17 13:18:29	-->	lmat (~lmat@c-68-50-32-125.hsd1.in.comcast.net) has joined ##c++
2016-09-17 13:18:35	--	Karyon is now known as Guest74496
2016-09-17 13:19:17	-->	hczv (~hczv@AAubervilliers-151-1-24-153.w83-114.abo.wanadoo.fr) has joined ##c++
2016-09-17 13:19:35	<--	hczv (~hczv@AAubervilliers-151-1-24-153.w83-114.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-17 13:19:57	-->	Sumr (~Sumr@AAubervilliers-151-1-24-153.w83-114.abo.wanadoo.fr) has joined ##c++
2016-09-17 13:20:13	<--	Sumr (~Sumr@AAubervilliers-151-1-24-153.w83-114.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-17 13:20:54	-->	madpat (~AndChat57@dyndsl-037-138-113-065.ewe-ip-backbone.de) has joined ##c++
2016-09-17 13:21:10	<--	Vuks (~Vuks@unaffiliated/vuks69) has quit (Ping timeout: 255 seconds)
2016-09-17 13:22:08	-->	Azusa762 (~roy@2a02:8084:2ac1:ef00:f279:59ff:fe17:ce37) has joined ##c++
2016-09-17 13:22:26	-->	gp5st (~jim@pool-98-111-192-215.pitbpa.fios.verizon.net) has joined ##c++
2016-09-17 13:22:57	<--	Azusa762 (~roy@2a02:8084:2ac1:ef00:f279:59ff:fe17:ce37) has quit (Client Quit)
2016-09-17 13:23:22	m_ben	{ auto a = abs(-1); cout << a; } constexpr auto abs(auto n) { return n < 0 ? -n : n; }
2016-09-17 13:23:23	geordi	1
2016-09-17 13:23:28	m_ben	geordi: --clang
2016-09-17 13:23:29	geordi	Success
2016-09-17 13:23:55	m_ben	geordi: --clang { auto a = abs(-1); cout << a; } constexpr auto abs(auto n) { return n < 0 ? -n : n; }
2016-09-17 13:23:55	geordi	error: 'auto' not allowed in function prototype
2016-09-17 13:24:09	m_ben	why is this allowed in gcc and not in clang?
2016-09-17 13:24:19	w3z	because gcc has concepts on
2016-09-17 13:24:19		[13:24]
2016-09-17 13:24:36	w3z	and as a result void f(auto) is allowed
2016-09-17 13:24:54	m_ben	what does this have to do with concepts?
2016-09-17 13:25:17	w3z	it introduces the template shorthand
2016-09-17 13:25:56	w3z	{} void f(auto){} //if -fconcepts wasnt specified this wouldnt be legal
2016-09-17 13:25:57	geordi	<no output>
2016-09-17 13:26:01	w3z	geordi: use --clang
2016-09-17 13:26:01	geordi	error: 'auto' not allowed in function prototype
2016-09-17 13:26:42	<--	blackbeard420 (~blackbear@dynamic-acs-24-154-82-158.zoominternet.net) has quit (Quit: Lost terminal)
2016-09-17 13:27:09	-->	nikki93 (~nikki93@2601:645:8104:cb10:e85d:9cfe:8c59:4c68) has joined ##c++
2016-09-17 13:27:44	m_ben	so in clang I have to write explicitly template <typename T> void f(T)?
2016-09-17 13:27:47	--	wolf_1 is now known as kimilsung
2016-09-17 13:28:01	--	kimilsung is now known as wolf_1
2016-09-17 13:28:03	w3z	in standard c++, yes
2016-09-17 13:28:37	w3z	the same code will error in gcc as well, if you dont believe me try it on melpon
2016-09-17 13:28:54	w3z	and then try it with -fconcepts
2016-09-17 13:28:55	<--	Markow (~Markow@176.122.215.103) has quit (Remote host closed the connection)
2016-09-17 13:29:30	m_ben	I did and I don't have to specify -fconcepts
2016-09-17 13:29:32	w3z	alternatively you could write it as a generic lambda
2016-09-17 13:29:58	<--	Munnu (~timo@91-158-145-247.elisa-laajakaista.fi) has quit (Quit: Follow the white rabbit. Compile the desert of the real. 3301.)
2016-09-17 13:30:18	w3z	http://melpon.org/wandbox/permlink/XOU6QVfxT6sp2rcl
2016-09-17 13:30:36	w3z	you probably forgot to turn pedantic on
2016-09-17 13:33:00	<--	jagob (~jacob@nobelnet.dk) has quit (Quit: Lost terminal)
2016-09-17 13:33:06	<--	zagabar (~zagabar@unaffiliated/zagabar) has quit (Quit: WeeChat 1.5)
2016-09-17 13:33:12	-->	UnlikeSuika (~UnlikeSui@117.123.105.126) has joined ##c++
2016-09-17 13:34:48	-->	sophia7 (~sophia7@unaffiliated/sophia7) has joined ##c++
2016-09-17 13:35:57	<--	anuxivm (~anuxi@92.185.154.236) has left ##c++
2016-09-17 13:36:14	w3z	{ auto a = cabs(-1); cout << a; } auto cabs = [](auto n) constexpr { return n < 0 ? -n : n; }; //compiles for both
2016-09-17 13:36:15	geordi	1
2016-09-17 13:36:34	w3z	{ auto a = cabs(-1); cout << a; } constexpr auto cabs = [](auto n) constexpr { return n < 0 ? -n : n; }; //clang errors, im not sure its right though
2016-09-17 13:36:34	geordi	1
2016-09-17 13:36:51	-->	ibouvousaime (~ibouvousa@41.83.31.96) has joined ##c++
2016-09-17 13:36:56	<--	f3r70rr35f (~fernando@200-112-59-248.baf.movistar.cl) has quit (Quit: leaving)
2016-09-17 13:38:35	w3z	btw, that definition of abs is too loose, and not generic
2016-09-17 13:38:44	<--	riksteri (~SpaceDino@62.102.148.156) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-09-17 13:39:04	<--	velco (~chill@vlan-185-78-38-153.comnet.bg) has quit (Quit: Leaving)
2016-09-17 13:39:54	m_ben	why?
2016-09-17 13:39:54		[13:39]
2016-09-17 13:40:28	<--	theOneWho (~tom@95.166.79.163) has quit (Read error: Connection reset by peer)
2016-09-17 13:41:10	<--	King_Hual (~failed@unaffiliated/king-hual/x-1207580) has quit (Read error: Connection reset by peer)
2016-09-17 13:41:14	w3z	why what? because it allows anything in, and even for things which you could abs, it wont work
2016-09-17 13:41:40	w3z	obviously not going to work for arbitrary UDT, not going to work for pointers
2016-09-17 13:41:44	w3z	and doesnt work for complex
2016-09-17 13:41:52	w3z	{ auto a = cabs(-1.i); cout << a; } constexpr auto cabs = [](auto n) constexpr { return n < 0 ? -n : n; };
2016-09-17 13:41:52	geordi	error: no match for 'operator<' in 'n < 0' (operand types are 'complex<double>' and 'int')
2016-09-17 13:43:02	-->	theOneWho (~tom@95.166.79.163) has joined ##c++
2016-09-17 13:44:08	w3z	so you probably want to limit to arithmetic types
2016-09-17 13:44:30	w3z	(not sure why complex isnt an arithmetic type)
2016-09-17 13:44:50	w3z	<<is_arithmetic_v<decltype(1.i)>
2016-09-17 13:44:51	geordi	false
2016-09-17 13:44:53	<--	prehensileNipple (~nooblet@124.197.62.6) has quit (Quit: ...)
2016-09-17 13:45:20	w3z	guess its defined as only integral or floating point, eh
2016-09-17 13:45:24	<--	tete94 (~tete94@201.206.234.253) has quit (Quit: Leaving)
2016-09-17 13:45:35	-->	snover (~Adium@unaffiliated/snover) has joined ##c++
2016-09-17 13:47:22	<--	Sculptor_ (~Sculptor@cable-24-135-26-151.dynamic.sbb.rs) has quit (Changing host)
2016-09-17 13:47:22	-->	Sculptor_ (~Sculptor@trivialand/master/sculptor) has joined ##c++
2016-09-17 13:50:27	<--	satifant (~sati@unaffiliated/satifant) has quit (Quit: Verlassend)
2016-09-17 13:53:41	<--	ferdna (~ferdna@cpe-69-23-141-130.elp.res.rr.com) has quit (Quit: Leaving)
2016-09-17 13:53:44	<--	blackbird_ (~blackbird@197.1.71.24) has quit (Quit: Leaving)
2016-09-17 13:54:02	-->	CEnnis91 (uid3543@gateway/web/irccloud.com/x-ngfgbfejulnyshqp) has joined ##c++
2016-09-17 13:54:28	<--	Faylite (~Faylite@gateway/vpn/privateinternetaccess/faylite) has quit (Quit: Leaving)
2016-09-17 13:54:39	<--	StyxAlso (~markg@235.129.220.203.dial.dynamic.acc01-oliv-alb.comindico.com.au) has quit (Ping timeout: 244 seconds)
2016-09-17 13:54:57	-->	paule32_ (~jens@79.251.53.2) has joined ##c++
2016-09-17 13:54:57		[13:54]
2016-09-17 13:55:03	<--	Guest74496 (~Karyon@CPE0c473d35fd91-CM0c473d35fd90.cpe.net.cable.rogers.com) has quit (Ping timeout: 240 seconds)
2016-09-17 13:55:15	<--	MulleDK19 (MulleDK19@unaffiliated/mulledk19) has quit (Ping timeout: 248 seconds)
2016-09-17 13:55:32	<--	ambro718 (~ambro@unaffiliated/ambro718) has quit (Ping timeout: 244 seconds)
2016-09-17 13:55:33	<--	Dyonisos_ (~Dyonisos@2a01cb00060ede0018257172654f40f4.ipv6.abo.wanadoo.fr) has quit (Quit: Quis custodiet ipsos custodes ?)
2016-09-17 13:57:45	<--	meandrain (~meandrain@89.39.95.149) has quit (Ping timeout: 244 seconds)
2016-09-17 13:58:40	w3z	hmm, i think clang is right (again), not sure how a generic lambda could be a constexpr
2016-09-17 13:58:57	<--	paule32 (~jens@p4FFB2A19.dip0.t-ipconnect.de) has quit (Ping timeout: 265 seconds)
2016-09-17 13:59:14	-->	code_zombie (~code_zomb@136.63.230.43) has joined ##c++
2016-09-17 13:59:25	<--	Kirrahe (~kirrahe@ip51cc4257.adsl-surfen.hetnet.nl) has quit (Ping timeout: 260 seconds)
2016-09-17 13:59:50	w3z	hmm, it bitches about a non genric too though, so maybe it is wrong
2016-09-17 13:59:52	<--	nikki93 (~nikki93@2601:645:8104:cb10:e85d:9cfe:8c59:4c68) has quit (Remote host closed the connection)
2016-09-17 14:00:18	w3z	geordi: --clang constexpr auto f = []() constexpr {};
2016-09-17 14:00:18	geordi	error: constexpr variable 'f' must be initialized by a constant expression
2016-09-17 14:01:44	w3z	bitches when we force decay to a function pointer for the lambda too, but not for a simple pointer to function
2016-09-17 14:01:49	w3z	geordi: --clang void g(){} constexpr auto f = g;
2016-09-17 14:01:50	geordi	Success
2016-09-17 14:02:37	-->	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has joined ##c++
2016-09-17 14:03:57	-->	skweek (~skweek@2607:fe50:0:810b:8d54:9711:b910:cc8f) has joined ##c++
2016-09-17 14:04:28	w3z	nm, about the generic wrinkle, i think it should also work after a bit of thought, so clang is wrong
2016-09-17 14:05:42	<--	Jidoor (~Jidoor@unaffiliated/chilley) has quit (Quit: leaving)
2016-09-17 14:06:13	<--	f10_ (~flo@2001:470:52af:1:6dfe:4e8:627:1891) has quit (Remote host closed the connection)
2016-09-17 14:06:15	-->	Jidoor (~Jidoor@unaffiliated/chilley) has joined ##c++
2016-09-17 14:06:24	-->	f10_ (~flo@2001:470:52af:1:dd12:24db:5df9:c662) has joined ##c++
2016-09-17 14:06:24	<--	pavshn (~pavshn@ppp95-165-153-84.pppoe.spdop.ru) has quit (Read error: Connection reset by peer)
2016-09-17 14:06:34	-->	f10__ (~flo@2001:470:52af:1:6dfe:4e8:627:1891) has joined ##c++
2016-09-17 14:07:09	-->	tesuji (~tesuji@unaffiliated/tesuji) has joined ##c++
2016-09-17 14:07:25	<--	f10 (~flo@2001:470:52af:1:79ca:e294:48d0:1603) has quit (Remote host closed the connection)
2016-09-17 14:07:35	<--	tesuji_ (~tesuji@x2f67ce8.dyn.telefonica.de) has quit (Ping timeout: 260 seconds)
2016-09-17 14:09:35	<--	Skruff (Elite15320@gateway/shell/elitebnc/x-rwoffknzijommyly) has quit (Ping timeout: 265 seconds)
2016-09-17 14:11:28	-->	elnormous (~elnormous@91.105.17.158) has joined ##c++
2016-09-17 14:11:28		[14:11]
2016-09-17 14:13:09	-->	arescorpio (~arescorpi@33-211-114-200.fibertel.com.ar) has joined ##c++
2016-09-17 14:14:05	<--	wnklmnn (~pascal@p4FEF6401.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2016-09-17 14:15:43	<--	HerzogDeXtEr1 (~farci@i59F6B5F3.versanet.de) has quit (Read error: Connection reset by peer)
2016-09-17 14:16:22	<--	elnormous (~elnormous@91.105.17.158) has quit (Ping timeout: 265 seconds)
2016-09-17 14:16:59	<--	ibouvousaime (~ibouvousa@41.83.31.96) has quit (Read error: Connection reset by peer)
2016-09-17 14:18:10	-->	ibouvousaime (~ibouvousa@41.83.31.96) has joined ##c++
2016-09-17 14:20:28	<--	snover (~Adium@unaffiliated/snover) has quit (Quit: Leaving.)
2016-09-17 14:20:32	<--	Lowl3v3l (~Lowl3v3l@ipservice-092-208-080-178.092.208.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2016-09-17 14:23:16	<--	f10_ (~flo@2001:470:52af:1:dd12:24db:5df9:c662) has quit (Ping timeout: 255 seconds)
2016-09-17 14:23:43	<--	f10__ (~flo@2001:470:52af:1:6dfe:4e8:627:1891) has quit (Ping timeout: 255 seconds)
2016-09-17 14:24:28	<--	AkaiSora (~quassel@197.17.38.2) has quit (Ping timeout: 244 seconds)
2016-09-17 14:27:41	<--	NeoGeo64 (~linux@2604:2d80:881a:0:b4a3:be16:d6fd:8559) has quit (Remote host closed the connection)
2016-09-17 14:27:41		[14:27]
2016-09-17 14:27:44	-->	tete94 (~tete94@201.206.234.253) has joined ##c++
2016-09-17 14:28:19	<--	Hobbyboy (Hobbyboy@gateway/shell/panicbnc/x-iylxbifryonyuxyl) has quit (Ping timeout: 248 seconds)
2016-09-17 14:30:17	<--	plusone (~plusone@176.24.26.166) has quit (Ping timeout: 240 seconds)
                                                     2016-09-17 14:33:51	-->	alyptik (~alyptik@unaffiliated/alyptik) has joined ##c++
2016-09-17 14:33:51		[14:33]
2016-09-17 14:33:51	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || https://isocpp.org/faq || pastes: http://melpon.org/wandbox"
2016-09-17 14:33:51	--	Topic set by V-ille (~ville@81-175-149-170.bb.dnainternet.fi) on Fri, 18 Sep 2015 07:13:01
2016-09-17 14:33:51	--	Channel ##c++: 939 nicks (0 ops, 0 voices, 939 normals)
2016-09-17 14:33:51	***	Buffer Playback...
2016-09-17 14:33:51	*buffextras	[23:55:33] Dyonisos_!~Dyonisos@2a01cb00060ede0018257172654f40f4.ipv6.abo.wanadoo.fr quit with message: [Quit: Quis custodiet ipsos custodes ?] [23:55:33]
2016-09-17 14:33:51	*buffextras	[23:57:45] meandrain!~meandrain@89.39.95.149 quit with message: [Ping timeout: 244 seconds] [23:57:45]
2016-09-17 14:33:51	w3z	[23:58:40] hmm, i think clang is right (again), not sure how a generic lambda could be a constexpr [23:58:40]
2016-09-17 14:33:51	*buffextras	[23:58:57] paule32!~jens@p4FFB2A19.dip0.t-ipconnect.de quit with message: [Ping timeout: 265 seconds] [23:58:57]
2016-09-17 14:33:51	*buffextras	[23:59:14] code_zombie!~code_zomb@136.63.230.43 joined [23:59:14]
2016-09-17 14:33:51	*buffextras	[23:59:25] Kirrahe!~kirrahe@ip51cc4257.adsl-surfen.hetnet.nl quit with message: [Ping timeout: 260 seconds] [23:59:25]
2016-09-17 14:33:51	w3z	[23:59:50] hmm, it bitches about a non genric too though, so maybe it is wrong [23:59:50]
2016-09-17 14:33:51	*buffextras	[23:59:52] nikki93!~nikki93@2601:645:8104:cb10:e85d:9cfe:8c59:4c68 quit with message: [Remote host closed the connection] [23:59:52]
2016-09-17 14:33:51	w3z	[00:00:18] geordi: --clang constexpr auto f = []() constexpr {}; [00:00:18]
2016-09-17 14:33:51	geordi	[00:00:18] error: constexpr variable 'f' must be initialized by a constant expression [00:00:18]
2016-09-17 14:33:51	w3z	[00:01:44] bitches when we force decay to a function pointer for the lambda too, but not for a simple pointer to function [00:01:44]
2016-09-17 14:33:51	w3z	[00:01:49] geordi: --clang void g(){} constexpr auto f = g; [00:01:49]
2016-09-17 14:33:51	geordi	[00:01:50] Success [00:01:50]
2016-09-17 14:33:51	*buffextras	[00:02:37] ResidentBiscuit!~ResidentB@unaffiliated/residentbiscuit joined [00:02:37]
2016-09-17 14:33:51	*buffextras	[00:03:01] skweek!~skweek@2607:fe50:0:810b:8d54:9711:b910:cc8f joined [00:03:01]
2016-09-17 14:33:51	w3z	[00:04:28] nm, about the generic wrinkle, i think it should also work after a bit of thought, so clang is wrong [00:04:28]
2016-09-17 14:33:51	*buffextras	[00:05:42] Jidoor!~Jidoor@unaffiliated/chilley quit with message: [Quit: leaving] [00:05:42]
2016-09-17 14:33:51	*buffextras	[00:06:13] f10_!~flo@2001:470:52af:1:6dfe:4e8:627:1891 quit with message: [Remote host closed the connection] [00:06:13]
2016-09-17 14:33:51	*buffextras	[00:06:15] Jidoor!~Jidoor@unaffiliated/chilley joined [00:06:15]
2016-09-17 14:33:51	*buffextras	[00:06:24] f10_!~flo@2001:470:52af:1:dd12:24db:5df9:c662 joined [00:06:24]
2016-09-17 14:33:51	*buffextras	[00:06:24] pavshn!~pavshn@ppp95-165-153-84.pppoe.spdop.ru quit with message: [Read error: Connection reset by peer] [00:06:24]
2016-09-17 14:33:51	*buffextras	[00:06:34] f10__!~flo@2001:470:52af:1:6dfe:4e8:627:1891 joined [00:06:34]
2016-09-17 14:33:51	*buffextras	[00:07:09] tesuji!~tesuji@unaffiliated/tesuji joined [00:07:09]
2016-09-17 14:33:51	*buffextras	[00:07:25] f10!~flo@2001:470:52af:1:79ca:e294:48d0:1603 quit with message: [Remote host closed the connection] [00:07:25]
2016-09-17 14:33:51	*buffextras	[00:07:35] tesuji_!~tesuji@x2f67ce8.dyn.telefonica.de quit with message: [Ping timeout: 260 seconds] [00:07:35]
2016-09-17 14:33:51	*buffextras	[00:09:35] Skruff!Elite15320@gateway/shell/elitebnc/x-rwoffknzijommyly quit with message: [Ping timeout: 265 seconds] [00:09:35]
2016-09-17 14:33:51	*buffextras	[00:11:28] elnormous!~elnormous@91.105.17.158 joined [00:11:28]
2016-09-17 14:33:51	*buffextras	[00:13:09] arescorpio!~arescorpi@33-211-114-200.fibertel.com.ar joined [00:13:09]
2016-09-17 14:33:51	*buffextras	[00:14:05] wnklmnn!~pascal@p4FEF6401.dip0.t-ipconnect.de quit with message: [Quit: Leaving.] [00:14:05]
2016-09-17 14:33:51	*buffextras	[00:15:43] HerzogDeXtEr1!~farci@i59F6B5F3.versanet.de quit with message: [Read error: Connection reset by peer] [00:15:43]
2016-09-17 14:33:51	*buffextras	[00:16:22] elnormous!~elnormous@91.105.17.158 quit with message: [Ping timeout: 265 seconds] [00:16:22]
2016-09-17 14:33:51	*buffextras	[00:16:59] ibouvousaime!~ibouvousa@41.83.31.96 quit with message: [Read error: Connection reset by peer] [00:16:59]
2016-09-17 14:33:51	*buffextras	[00:18:10] ibouvousaime!~ibouvousa@41.83.31.96 joined [00:18:10]
2016-09-17 14:33:51	*buffextras	[00:20:28] snover!~Adium@unaffiliated/snover quit with message: [Quit: Leaving.] [00:20:28]
2016-09-17 14:33:51	*buffextras	[00:20:32] Lowl3v3l!~Lowl3v3l@ipservice-092-208-080-178.092.208.pools.vodafone-ip.de quit with message: [Remote host closed the connection] [00:20:32]
2016-09-17 14:33:51	*buffextras	[00:23:16] f10_!~flo@2001:470:52af:1:dd12:24db:5df9:c662 quit with message: [Ping timeout: 255 seconds] [00:23:16]
2016-09-17 14:33:51	*buffextras	[00:23:43] f10__!~flo@2001:470:52af:1:6dfe:4e8:627:1891 quit with message: [Ping timeout: 255 seconds] [00:23:43]
2016-09-17 14:33:51	*buffextras	[00:24:28] AkaiSora!~quassel@197.17.38.2 quit with message: [Ping timeout: 244 seconds] [00:24:28]
2016-09-17 14:33:51	*buffextras	[00:27:40] NeoGeo64!~linux@2604:2d80:881a:0:b4a3:be16:d6fd:8559 quit with message: [Remote host closed the connection] [00:27:40]
2016-09-17 14:33:51	*buffextras	[00:27:43] tete94!~tete94@201.206.234.253 joined [00:27:43]
2016-09-17 14:33:51	*buffextras	[00:28:18] Hobbyboy!Hobbyboy@gateway/shell/panicbnc/x-iylxbifryonyuxyl quit with message: [Ping timeout: 248 seconds] [00:28:18]
2016-09-17 14:33:51	*buffextras	[00:30:16] plusone!~plusone@176.24.26.166 quit with message: [Ping timeout: 240 seconds] [00:30:16]
2016-09-17 14:33:51	*buffextras	[00:31:43] heiner!~heiner@dslb-178-005-240-153.178.005.pools.vodafone-ip.de quit with message: [Disconnected by services] [00:31:43]
2016-09-17 14:33:51	*buffextras	[00:31:49] heiner_!~heiner@ipservice-092-209-056-221.092.209.pools.vodafone-ip.de joined [00:31:49]
2016-09-17 14:33:51	*buffextras	[00:31:59] wox!~user@unaffiliated/scroy joined [00:31:59]
2016-09-17 14:33:51	*buffextras	[00:32:01] wox!~user@unaffiliated/scroy quit with message: [Remote host closed the connection] [00:32:01]
2016-09-17 14:33:51	*buffextras	[00:32:20] Skruff!Elite15320@gateway/shell/elitebnc/x-ahsqoccsnmoowbti joined [00:32:20]
2016-09-17 14:33:51	*buffextras	[00:32:23] ARCADIVS!~RMM@97.84.20.251 joined [00:32:23]
2016-09-17 14:33:51	*buffextras	[00:32:48] wox!~user@unaffiliated/scroy joined [00:32:48]
2016-09-17 14:33:51	*buffextras	[00:33:34] seaworthy!~seaworthy@unaffiliated/seaworthy quit with message: [Read error: Connection reset by peer] [00:33:34]
2016-09-17 14:33:51	***	Playback Complete.
2016-09-17 14:33:58	--	Channel created on Fri, 14 Sep 2001 17:15:35
2016-09-17 14:35:34	pragma-	k.
2016-09-17 14:37:11	<--	bocaneri (~bocaneri@about/linux/staff/sauvin) has quit (Read error: Connection reset by peer)
2016-09-17 14:37:56	-->	Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2016-09-17 14:38:28	<--	jokaen (~kaen@86.127.218.206) has quit (Quit: Gotta catch a monkey.)
2016-09-17 14:39:02	-->	f10__ (~flo@ip5b403530.dynamic.kabel-deutschland.de) has joined ##c++
2016-09-17 14:39:13	-->	f10_ (~flo@2001:470:52af:1:dd12:24db:5df9:c662) has joined ##c++
2016-09-17 14:40:10	-->	GranoblasticMan (~Granoblas@108.9.147.73) has joined ##c++
2016-09-17 14:43:19	-->	meandrain (~meandrain@89.39.95.149) has joined ##c++
2016-09-17 14:45:26	-->	snover (~Adium@unaffiliated/snover) has joined ##c++
2016-09-17 14:45:56	V-ille	I don't see a problem for a generic lambda being constexpr.
2016-09-17 14:46:02	w3z	pragma-, tell me something about c++ i domt know
2016-09-17 14:46:28	w3z	V-ille: i moved away from that position as well
2016-09-17 14:47:05	<--	skweek (~skweek@2607:fe50:0:810b:8d54:9711:b910:cc8f) has quit (Ping timeout: 248 seconds)
2016-09-17 14:47:10	<--	GranoblasticMan (~Granoblas@108.9.147.73) has quit (Read error: Connection reset by peer)
2016-09-17 14:47:33	-->	GranoblasticMan (~Granoblas@108.9.147.73) has joined ##c++
2016-09-17 14:49:25	-->	Ben2560 (~quassel@137.154.197.63) has joined ##c++
2016-09-17 14:49:25		[14:49]
2016-09-17 14:49:36	w3z	i guess the confusion (if there is any) is whether the constexpr qualifier in the definition of the lambda actually makes the lambda object constexpr or just marks that the function it encapsulates is constexpr
2016-09-17 14:50:20	-->	karts (43a45b4e@gateway/web/cgi-irc/kiwiirc.com/ip.67.164.91.78) has joined ##c++
2016-09-17 14:51:10	<--	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has quit (Ping timeout: 255 seconds)
2016-09-17 14:51:14	w3z	at the very least,
2016-09-17 14:51:23	w3z	geordi: --clang constexpr auto f = +[]()constexpr{}; //should compile
2016-09-17 14:51:24	geordi	error: constexpr variable 'f' must be initialized by a constant expression
2016-09-17 14:51:43	<--	magnicida (~raskolnik@2a02:8109:8c80:231:ea39:dfff:fe4d:275b) has quit (Ping timeout: 265 seconds)
2016-09-17 14:53:15	m_ben	<< 5%-2
2016-09-17 14:53:16	geordi	1
2016-09-17 14:53:22	m_ben	<< -5%2
2016-09-17 14:53:23	geordi	-1
2016-09-17 14:53:29	m_ben	<< -5%-2
2016-09-17 14:53:30	geordi	-1
2016-09-17 14:53:36	<--	ibouvousaime (~ibouvousa@41.83.31.96) has quit (Ping timeout: 265 seconds)
2016-09-17 14:54:09	m_ben	wasn't the result for negative values implementation-defined?
2016-09-17 14:54:24	m_ben	...until c++11?
2016-09-17 14:54:46	<--	karts (43a45b4e@gateway/web/cgi-irc/kiwiirc.com/ip.67.164.91.78) has quit (Client Quit)
2016-09-17 15:00:00		[14:54]
2016-09-17 15:00:02	-->	Carbonflux (~Bob@75-172-112-206.tukw.qwest.net) has joined ##c++
2016-09-17 15:01:25	w3z	it was impl defined in 03, it no longer is
2016-09-17 15:01:35	w3z	(for negative integers)
2016-09-17 15:01:39	-->	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has joined ##c++
2016-09-17 15:04:11	w3z	(a/b)*b + a%b=a is what we have now
2016-09-17 15:04:58	w3z	http://eel.is/c++draft/expr.mul#4
2016-09-17 15:07:33	-->	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2016-09-17 15:09:04	et	(a/b)*b + a%b=a was always true
2016-09-17 15:09:29	et	the "rounded towards zero" part was implementation-defined before
2016-09-17 15:12:39	-->	elnormous (~elnormous@91.105.17.158) has joined ##c++
2016-09-17 15:15:12	<--	Rickmasta (~Rick@pool-96-246-90-176.nycmny.fios.verizon.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-17 15:15:12		[15:15]
2016-09-17 15:16:57	-->	Rickmasta (~Rick@pool-96-246-90-176.nycmny.fios.verizon.net) has joined ##c++
2016-09-17 15:17:10	-->	nikki93 (~nikki93@2601:645:8104:cb10:2586:308c:15f2:78b6) has joined ##c++
2016-09-17 15:17:17	<--	elnormous (~elnormous@91.105.17.158) has quit (Ping timeout: 265 seconds)
2016-09-17 15:17:17	w3z	the sign was implementation defined, but i dont have a 2003 standard around to verify
2016-09-17 15:18:00	ubsan	I thought it was defined in 03
2016-09-17 15:18:06	ubsan	impl-def in 98
2016-09-17 15:18:18	w3z	found one, hold on
2016-09-17 15:18:44	<--	fluter (~fluter@fedora/fluter) has quit (Ping timeout: 265 seconds)
2016-09-17 15:19:27	w3z	if the quotient a/b is representable in the type of the result, (a/b)*b + a%b is equal to a; otherwise, the behavior of both a/b and a%b is undefined. - looks the same, hmm, let me see if theres a 98 standard around
2016-09-17 15:19:58	et	(a/b)*b + a%b=a was always true
2016-09-17 15:20:03	<--	f10__ (~flo@ip5b403530.dynamic.kabel-deutschland.de) has quit (Ping timeout: 248 seconds)
2016-09-17 15:20:07	ubsan	so it was only C99
2016-09-17 15:20:07	et	that is the definition of %
2016-09-17 15:20:14	ubsan	s/99/89
2016-09-17 15:21:23	et	as I said, how results are rounded was implementation-defined before
2016-09-17 15:21:46	<--	nikki93 (~nikki93@2601:645:8104:cb10:2586:308c:15f2:78b6) has quit (Ping timeout: 255 seconds)
2016-09-17 15:22:16	et	and that implies that the result of % is implementation-defined, because the result of / is implementation-defined
2016-09-17 15:22:29	ubsan	et: wait, how was the result of / impl-def?
2016-09-17 15:22:30	w3z	If the second operand of / or % is zero the behavior is undefined; otherwise (a/b)*b + a%b is equal to a. If both operands are nonnegative then the remainder is nonnegative; if not, the sign of the remainder is implementation-defined
2016-09-17 15:22:44	et	ubsan: rounding
2016-09-17 15:22:47	-->	Guest74496 (~Karyon@CPE0c473d35fd91-CM0c473d35fd90.cpe.net.cable.rogers.com) has joined ##c++
2016-09-17 15:22:48	ubsan	et: specific case?
2016-09-17 15:22:58	ubsan	I don't think I understand
2016-09-17 15:23:47	<--	dpower (uid103540@gateway/web/irccloud.com/x-ikbqcurmtdbhzelx) has quit (Ping timeout: 248 seconds)
2016-09-17 15:23:55	w3z	so yes, changed in 03
2016-09-17 15:24:04	<--	Guest74496 (~Karyon@CPE0c473d35fd91-CM0c473d35fd90.cpe.net.cable.rogers.com) has left ##c++
2016-09-17 15:24:08	-->	Burga (~andrewm@124-170-168-151.dyn.iinet.net.au) has joined ##c++
2016-09-17 15:24:17	-->	dpower (uid103540@gateway/web/irccloud.com/x-jellidetilhhuzra) has joined ##c++
2016-09-17 15:24:29	et	it changed in 11
2016-09-17 15:24:50	w3z	...i just posted the 03 and 98 wording ...
2016-09-17 15:24:54	-->	navidr (uid112413@gateway/web/irccloud.com/x-begmefztojmpawzf) has joined ##c++
2016-09-17 15:25:18	et	you always left the relevant parts out
2016-09-17 15:25:39	<--	Suchorski (regex@unaffiliated/suchorski) has quit
2016-09-17 15:25:50	<--	f10_ (~flo@2001:470:52af:1:dd12:24db:5df9:c662) has quit (Read error: Connection reset by peer)
2016-09-17 15:25:55	-->	fluter (~fluter@fedora/fluter) has joined ##c++
2016-09-17 15:26:28	-->	f10__ (~flo@2001:470:52af:1:bc25:d260:4fc6:b325) has joined ##c++
2016-09-17 15:27:09	-->	f10_ (~flo@2001:470:52af:1:dd12:24db:5df9:c662) has joined ##c++
2016-09-17 15:27:32	et	ubsan: before c99/c++11, if one of the operators is negative, it was implementation-defined if a/b rounds up or down
2016-09-17 15:27:43	ubsan	et: ohh
2016-09-17 15:27:47	ubsan	et: lame
2016-09-17 15:27:50	w3z	also my 03 source was wrong, its dated 2013 bleh
2016-09-17 15:29:11	et	ubsan: and since "(a/b)*b + a%b shall equal a" (that was in ansi C and was adapted in C++ and was never changed), if a/b is implementation-defined, so is a%b
2016-09-17 15:29:40	et	c99/c++11 defined a/b, so a%b is also defined
2016-09-17 15:29:49	w3z	so yes still impl defined n 03
2016-09-17 15:30:20	w3z	i guess youre referring to the footnote: According to work underway toward the revision of ISO C, the preferred algorithm for integer division follows the rules defined in the ISO Fortran standard, ISO/IEC 1539:1991, in which the quotient is always rounded toward zero
2016-09-17 15:30:20		[15:30]
2016-09-17 15:30:30	-->	trw (~twa@184.250.132.115) has joined ##c++
2016-09-17 15:31:14	w3z	anyway, hardly as interesting as constexpr lambdas ....
2016-09-17 15:31:32	et	it's not in footnotes, it's in the standard wording
2016-09-17 15:31:53	<--	a3Dman_ (~3Dman@unaffiliated/a3dman) has quit (Ping timeout: 240 seconds)
2016-09-17 15:32:05	et	http://eel.is/c++draft/expr.mul#4 "For integral operands the / operator yields the algebraic quotient with any fractional part discarded" and equivalent in other versions of the standard
2016-09-17 15:32:12	-->	a3Dman (~3Dman@unaffiliated/a3dman) has joined ##c++
2016-09-17 15:33:56	-->	regedit (uid150526@gateway/web/irccloud.com/x-gajodrmaropoxvnm) has joined ##c++
2016-09-17 15:34:12	w3z	the footnote in 98/03 ...no longer in the standard .... is the only mention of rounding towards 0, so, eh
2016-09-17 15:34:31	ubsan	et: yeah
2016-09-17 15:34:37	ubsan	et: that's so weird to me
2016-09-17 15:34:45	ubsan	what was the point of 03, anyways?
2016-09-17 15:34:50	<--	blueness (~blueness@gentoo/developer/blueness) has quit (Quit: blueness)
2016-09-17 15:34:53	<--	trw (~twa@184.250.132.115) has quit (Ping timeout: 244 seconds)
2016-09-17 15:35:13	--	justan0theruser is now known as justanotheruser
2016-09-17 15:35:42	stomper_	ubsan: consistency
2016-09-17 15:35:48	-->	Hobbyboy (Hobbyboy@gateway/shell/panicbnc/x-mrfqirqagiqffdrr) has joined ##c++
2016-09-17 15:35:54	ubsan	stomper_: so like C95
2016-09-17 15:35:56	ubsan	?
2016-09-17 15:36:05	w3z	it added export ...which only edg ever implemented and is now gone ...it added T() in the initializer list ...hmm
2016-09-17 15:36:21	w3z	it deprecated register and auto ...
2016-09-17 15:36:40	ubsan	lol
2016-09-17 15:36:42	stomper_	https://web.archive.org/web/20160206214150/http://www.stroustrup.com/bs_faq.html#C++03
2016-09-17 15:36:45	-->	trw (~twa@184.250.132.115) has joined ##c++
2016-09-17 15:36:49	ubsan	auto wasn't deprecated in C++98?
2016-09-17 15:36:54	stomper_	It looks like it was just a bugfix release
2016-09-17 15:37:15	stomper_	"bugfix" as in, certain things are better defined now than they were in C++98
2016-09-17 15:37:26	w3z	it added a couple things to the std lib, iirc, but they needed TC1 and TC2 to bring in shared_ptr and a hash map
2016-09-17 15:39:09	w3z	there was a c95, i didnt know that
2016-09-17 15:39:18	-->	scorpionillumina (~scorpioni@ool-3f8fe36e.dyn.optonline.net) has joined ##c++
2016-09-17 15:39:27	-->	andyhuzhill (~Thunderbi@14.23.45.178) has joined ##c++
2016-09-17 15:39:40	ubsan	w3z: right?
2016-09-17 15:39:47	ubsan	w3z: I just learned recently of it
2016-09-17 15:40:21	<--	scorpionillumina (~scorpioni@ool-3f8fe36e.dyn.optonline.net) has left ##c++
2016-09-17 15:40:32	<--	theOneWho (~tom@95.166.79.163) has quit (Read error: Connection reset by peer)
2016-09-17 15:41:56	-->	skweek (~skweek@68-200-146-225.res.bhn.net) has joined ##c++
2016-09-17 15:42:38	-->	blueness (~blueness@gentoo/developer/blueness) has joined ##c++
2016-09-17 15:43:05	-->	theOneWho (~tom@95.166.79.163) has joined ##c++
2016-09-17 15:43:06	w3z	(i mispoke btw, theres still a footnote (now 84) in the current standard, This is often called truncation towards zero)
2016-09-17 15:43:59	<--	oxygene (~fred@ALille-652-1-134-14.w83-198.abo.wanadoo.fr) has quit (Quit: Quitte)
2016-09-17 15:48:05	-->	ctnguyen_ (~chau@2606:6000:fd00:bc00:df2:e087:5e67:d74c) has joined ##c++
2016-09-17 15:48:05		[15:48]
2016-09-17 15:48:15	et	the relevant part is the one I quoted
2016-09-17 15:48:32	et	footnotes are not normative
2016-09-17 15:50:17	-->	nullCompiler (~scorpioni@ool-3f8fe36e.dyn.optonline.net) has joined ##c++
2016-09-17 15:51:32	somaReverse	megaTherion: Should I write like this https://ptpb.pw/TlWY ?
2016-09-17 15:54:03	-->	fr_ (~fr@p548FFA2C.dip0.t-ipconnect.de) has joined ##c++
2016-09-17 15:54:15	<--	wildlander (~wild@unaffiliated/wildlander) has quit (Quit: Saliendo)
2016-09-17 15:56:14	-->	Vingador (~quassel@179.181.32.21) has joined ##c++
2016-09-17 15:57:15	<--	fr (~fr@pD95775BA.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2016-09-17 15:58:40	<--	skweek (~skweek@68-200-146-225.res.bhn.net) has quit (Ping timeout: 255 seconds)
2016-09-17 16:00:31	<--	nullCompiler (~scorpioni@ool-3f8fe36e.dyn.optonline.net) has left ##c++
2016-09-17 16:00:34	-->	fstd_ (~fstd@unaffiliated/fisted) has joined ##c++
2016-09-17 16:00:36	-->	nullCompiler (~scorpioni@ool-3f8fe36e.dyn.optonline.net) has joined ##c++
2016-09-17 16:00:39	nullCompiler	hi
2016-09-17 16:00:56	<--	neurodrone (~neurodron@unaffiliated/neurodrone) has quit (Quit: neurodrone)
2016-09-17 16:01:35	nullCompiler	Any ideas on this: Error	LNK2019	unresolved external symbol "private: __thiscall CInput::CInput(void)" (??0CInput@@AAE@XZ) referenced in function "public: static class CInput * __cdecl CInput::getInstance(void)" (?getInstance@CInput@@SAPAV1@XZ)	nullCompiler	c:\Users\User\documents\visual studio 2015\Projects\nullCompiler\nullCompiler\CInput.obj?
2016-09-17 16:01:51	-->	skweek (~skweek@68-200-146-225.res.bhn.net) has joined ##c++
2016-09-17 16:02:10	-->	cbot_ (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2016-09-17 16:02:15	nullCompiler	doesn't seem to like this line: pInstance = new CInput;
2016-09-17 16:02:44	<--	araml (~araml@unaffiliated/araml) has quit (Quit: WeeChat 1.0.1)
2016-09-17 16:03:08	w3z	the definition of CInput isnt available ....
2016-09-17 16:03:08		[16:03]
2016-09-17 16:03:25	w3z	somaReverse: thats not going to compile ....
2016-09-17 16:04:17	<--	cbot (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Ping timeout: 240 seconds)
2016-09-17 16:04:17	<--	fstd (~fstd@unaffiliated/fisted) has quit (Ping timeout: 240 seconds)
2016-09-17 16:04:17	--	fstd_ is now known as fstd
2016-09-17 16:04:25	w3z	at the very leat youll need to move from your postgres_tablets_.back()
2016-09-17 16:05:45	nullCompiler	http://melpon.org/wandbox/permlink/ZQPVJR5rpbr5R4dp
2016-09-17 16:06:20	<--	TheScholar (~randomman@ool-44c16ddc.dyn.optonline.net) has quit
2016-09-17 16:06:21	nullCompiler	uh CInput is the class i'm trying to instant inside itself so how is it not available?
2016-09-17 16:06:37	-->	blackbeard420 (~blackbear@dynamic-acs-24-154-82-158.zoominternet.net) has joined ##c++
2016-09-17 16:07:25	nullCompiler	thats the test case code ^^^^
2016-09-17 16:07:27	-->	Beetny (~Beetny@14-202-48-200.tpgi.com.au) has joined ##c++
2016-09-17 16:07:49	w3z	thats not a testcase ...anyway you didnt DEFINE the constructor
2016-09-17 16:07:52	somaReverse	w3z: thanks
2016-09-17 16:07:55	-->	chang (~vayne@pD9E445E0.dip0.t-ipconnect.de) has joined ##c++
2016-09-17 16:08:04	somaReverse	Why does it not auto move
2016-09-17 16:08:19	<--	wox (~user@unaffiliated/scroy) has quit (Ping timeout: 244 seconds)
2016-09-17 16:08:33	nullCompiler	constructor is private so it doesn't matter anyways
2016-09-17 16:09:16	w3z	youre a dope ...take it to basic
2016-09-17 16:09:18	somaReverse	How can I construct a unique_ptr with a copy of some struct?
2016-09-17 16:09:18	w3z	!basic
2016-09-17 16:09:20	nolyc	Please ask your question in ##C++-basic, as it involves the fundamental basics of the language.
2016-09-17 16:09:40	nullCompiler	dope?
2016-09-17 16:09:46	w3z	somaReverse: it cant just magically move for you from a T&
2016-09-17 16:09:49	nullCompiler	ok thanks anyways
2016-09-17 16:10:12	<--	nullCompiler (~scorpioni@ool-3f8fe36e.dyn.optonline.net) has left ##c++
2016-09-17 16:11:04	somaReverse	and this will     auto tablet = move(postgres_tablets_.back()); ?
2016-09-17 16:11:17	w3z	yes a dope, the access specifier of the constructor is not relevant, and youre clearly using it
2016-09-17 16:11:18	w3z	nullCompiler: doesn't seem to like this line: pInstance = new CInput;
2016-09-17 16:11:32	w3z	and you dont understand the difference between a declaration and a definition
2016-09-17 16:11:40	somaReverse	he's gone
2016-09-17 16:11:41	w3z	and you arent listening
2016-09-17 16:11:44	w3z	good
2016-09-17 16:11:59	w3z	somaReverse: yes
2016-09-17 16:12:03	<--	yong (~vayne@pD9E440A7.dip0.t-ipconnect.de) has quit (Ping timeout: 276 seconds)
2016-09-17 16:12:05	somaReverse	how does it work?
2016-09-17 16:12:14	somaReverse	vector has two sets of back()?
2016-09-17 16:12:16	-->	MaBunny (~Peter@117.194.201.161) has joined ##c++
2016-09-17 16:12:34	-->	k_j (~no@151.42.78.158) has joined ##c++
2016-09-17 16:12:39	k_j	warning: default argument specified for lambda parameter [-pedantic]
2016-09-17 16:12:47	w3z	no, back returns a T&, move will cast it to a T&& which will be used by unique_ptr's move assignment operator
2016-09-17 16:12:51	--	MaBunny is now known as OtakuSenpai
2016-09-17 16:12:52	k_j	is not standard C++11?
2016-09-17 16:13:30	w3z	{[](int i=0){};}
2016-09-17 16:13:32	geordi	<no output>
2016-09-17 16:13:38	w3z	geordi: use --clang
2016-09-17 16:13:39	geordi	<no output>
2016-09-17 16:13:39	somaReverse	this move assignment operator will delete the old unique_ptr's content?
2016-09-17 16:14:06	w3z	it will take ownership of the underlying resource from the unique_ptr its moving from
2016-09-17 16:14:15	somaReverse	got it
2016-09-17 16:14:33	somaReverse	How can I construct a unique_ptr like java's new operator?
2016-09-17 16:15:00	k_j	w3z, but why gcc complains
2016-09-17 16:15:21	k_j	w3z, a warning ,ok, but why does not it shut up
2016-09-17 16:15:36	-->	neurodrone (~neurodron@unaffiliated/neurodrone) has joined ##c++
2016-09-17 16:15:48	w3z	geordi is using gcc above with pedantic error, so i dont know what version of gcc you have running or what you are doing
2016-09-17 16:15:50	ubsan	somaReverse: std::make_unique?
2016-09-17 16:15:56	w3z	!testcase
2016-09-17 16:15:57	nolyc	A testcase is the _least_ amount of code that replicates your problem, paste it to http://coliru.stacked-crooked.com and give us the link. Do _not_ paste code to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
2016-09-17 16:16:23	k_j	w3z, is geordi c++11?
2016-09-17 16:16:23	w3z	show me a small snippet that generates the warning at melpon
2016-09-17 16:16:44	w3z	geordi is targetting c++17
2016-09-17 16:17:01	k_j	how can you configure it for c++11
2016-09-17 16:17:02	somaReverse	ubsan: oh, thanks
2016-09-17 16:17:08	w3z	at melpon you can select your compiler version and c++ dialect
2016-09-17 16:17:15	ubsan	somaReverse: np
2016-09-17 16:17:20	somaReverse	Why does the type "string" not need a std::string prefix?
2016-09-17 16:18:06	w3z	...it does ... unless you have a using directive
2016-09-17 16:19:06	<--	z8z (~x@ac230029.ppp.asahi-net.or.jp) has quit (Ping timeout: 264 seconds)
2016-09-17 16:19:06		[16:19]
2016-09-17 16:19:33	w3z	using namespace std; or using std::string; ...
2016-09-17 16:19:35	w3z	!book
2016-09-17 16:19:37	nolyc	A nice C++ book guide and list can be found at http://stackoverflow.com/q/388242/1090079
2016-09-17 16:19:46	<--	snover (~Adium@unaffiliated/snover) has quit (Quit: Leaving.)
2016-09-17 16:22:42	<--	SecondForm_Glenn (~Thunderbi@108.189.70.212) has quit (Ping timeout: 264 seconds)
2016-09-17 16:23:11	-->	Haruno (~Haruno@unaffiliated/haruno) has joined ##c++
2016-09-17 16:23:28	-->	argoneus (~argoneus@unaffiliated/argoneus) has joined ##c++
2016-09-17 16:24:12	-->	plusone (~plusone@176.24.26.166) has joined ##c++
2016-09-17 16:25:01	-->	SunnyD (~SunnyD@cpe-72-178-78-211.hot.res.rr.com) has joined ##c++
2016-09-17 16:26:10	somaReverse	{ string c = "fdsfsdfsdf"; }
2016-09-17 16:26:11	geordi	<no output>
2016-09-17 16:26:31	somaReverse	{ unique_ptr<string> uuu; }
2016-09-17 16:26:31	geordi	<no output>
2016-09-17 16:27:05	-->	elh9 (~elh9___@110-175-114-60.tpgi.com.au) has joined ##c++
2016-09-17 16:27:08	somaReverse	w3z: The thing is, I have to using std::unique_ptr while string is not the case.
2016-09-17 16:27:28	ubsan	somaReverse: somewhere, there's a using directive
2016-09-17 16:27:31	-->	Gluesticky (~nobody@unaffiliated/gluesticky) has joined ##c++
2016-09-17 16:28:00	somaReverse	using std::string = string?
2016-09-17 16:28:21	<--	UnlikeSuika (~UnlikeSui@117.123.105.126) has quit (Ping timeout: 272 seconds)
2016-09-17 16:28:27	w3z	geordi brings in the entire std namespace
2016-09-17 16:28:37	w3z	using std::string;
2016-09-17 16:28:38	ubsan	somaReverse: reverse 'em
2016-09-17 16:28:42	ubsan	or do that ^
2016-09-17 16:28:59	somaReverse	oh, thanks
2016-09-17 16:29:30	ubsan	I don't think I actually understand the difference
2016-09-17 16:29:33	somaReverse	why should the move operation be explicit         std::unique_ptr<Foo> p2(std::move(p1));  // now p2 owns Foo .  unique_ptr cannot be copied right?
2016-09-17 16:29:42	<--	elh9 (~elh9___@110-175-114-60.tpgi.com.au) has quit (Read error: Connection reset by peer)
2016-09-17 16:29:51	ubsan	I get that one is a using directive, one is a typedef
2016-09-17 16:29:59	ubsan	but what does that mean?
2016-09-17 16:30:14	<--	Burgundy (~burgundy@86.121.178.118) has quit (Ping timeout: 265 seconds)
2016-09-17 16:30:23	ubsan	somaReverse: no, it can't be copied. it needs to be explicit because you can still access p1
2016-09-17 16:30:55	somaReverse	huh?
2016-09-17 16:30:58	<--	saolof (~saolof@92-32-80-134.tn.glocalnet.net) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-09-17 16:31:10	ubsan	if you moved implicitly, it would be very... unfortunate
2016-09-17 16:31:12	w3z	are you asking whats the difference between a using alias and a using directive?
2016-09-17 16:31:17	ubsan	w3z: yes
2016-09-17 16:31:18	somaReverse	ubsan: why
2016-09-17 16:31:35	somaReverse	I think rust does this
2016-09-17 16:31:44	ubsan	somaReverse: auto p1 = make_unique(0); auto p2 = std::move(p1); std::cout << p1;
2016-09-17 16:31:47	ubsan	^ allowed
2016-09-17 16:32:00	ubsan	(unlike in Rust, which is why it's okay to auto-move there)
2016-09-17 16:32:10	<--	tete94 (~tete94@201.206.234.253) has quit (Quit: Leaving)
2016-09-17 16:32:10	w3z	well for one, you cant alias a namespace
2016-09-17 16:32:25	w3z	(well you can with a using namespace alias ;))
2016-09-17 16:32:27	somaReverse	ubsan: I don't understand your example
2016-09-17 16:32:29	ubsan	also, C++ started out with copies, so moves have to be different
2016-09-17 16:32:41	ubsan	{ auto p1 = make_unique(0); auto p2 = std::move(p1); std::cout << p1; }
2016-09-17 16:32:42	geordi	error: no matching function for call to 'make_unique(int)'
2016-09-17 16:32:42	w3z	but its not a type alias
2016-09-17 16:32:51	ubsan	{ auto p1 = make_unique<int>(0); auto p2 = std::move(p1); std::cout << p1; }
2016-09-17 16:32:51	geordi	error: no match for 'operator<<' in 'cout << p1' (operand types are 'ostream {aka ostream}' and 'unique_ptr<int, default_delete<int> >')
2016-09-17 16:33:04	ubsan	{ auto p1 = make_unique<int>(0); auto p2 = std::move(p1); std::cout << (void *)p1; }
2016-09-17 16:33:04	geordi	error: invalid cast from type 'unique_ptr<int, default_delete<int> >' to type 'void*'
2016-09-17 16:33:09	ubsan	blagh
2016-09-17 16:33:12	somaReverse	what are you trying to say?
2016-09-17 16:33:25	ubsan	{ auto p1 = make_unique<int>(0); auto p2 = std::move(p1); std::cout << *p1; }
2016-09-17 16:33:26	geordi	/usr/local/include/c++/7.0.0/bits/unique_ptr.h:290: add_lvalue_reference<_Tp>::type unique_ptr<_Tp, _Dp>::operator*() const [with _Tp = int; _Dp = default_delete<int>; add_lvalue_reference<_Tp>::type = int&]: Assertion 'get() != pointer()' failed. [+ 1 discarded line]
2016-09-17 16:33:41	ubsan	blaggggh
2016-09-17 16:33:52	somaReverse	{ auto p1 = make_unique<int>(0); auto p2 = p1; std::cout << *p1; }
2016-09-17 16:33:52	geordi	error: use of deleted function 'unique_ptr<_Tp, _Dp>::unique_ptr(const unique_ptr<_Tp, _Dp>&) [with _Tp = int; _Dp = default_delete<int>]'
2016-09-17 16:34:03	w3z	hah
2016-09-17 16:34:05	somaReverse	why not make this automove
2016-09-17 16:34:10	ubsan	somaReverse: you can still touch p1
2016-09-17 16:34:11		[16:34]
2016-09-17 16:34:14	ubsan	which is invalid
2016-09-17 16:34:24	somaReverse	yes
2016-09-17 16:34:27	ubsan	so, if you automoved, it would lead to UB
2016-09-17 16:34:30	ubsan	very easily
2016-09-17 16:34:39	somaReverse	but using std::move is the same
2016-09-17 16:34:42	ubsan	also, stuff like std::vector have both moves and copies
2016-09-17 16:34:49	ubsan	somaReverse: yes, but it's explicit
2016-09-17 16:35:03	ubsan	somaReverse: so you can tell when you're moving
2016-09-17 16:35:10	somaReverse	ubsan: I was trying to say why those only movable object not be auto move?
2016-09-17 16:35:19	-->	z8z (~x@ac230029.ppp.asahi-net.or.jp) has joined ##c++
2016-09-17 16:35:40	ubsan	somaReverse: because it would be weird with the rest of the language
2016-09-17 16:35:46	ubsan	go use rust if you want fucking automove
2016-09-17 16:35:58	somaReverse	ok, I'm convinced
2016-09-17 16:36:03	w3z	because then you couldnt have both move and copy ....
2016-09-17 16:36:18	w3z	in the case of unique_ptr there is no copy so, eh
2016-09-17 16:36:44	w3z	but for consistency, the moves are explicitly marked by using std::move which casts to a T&&
2016-09-17 16:37:25	somaReverse	I think c++ is somehow too verbose
2016-09-17 16:37:28	w3z	it indicates the intention, and allows for a type that copies or moves based on use
2016-09-17 16:37:44	w3z	do you think your opinions as a beginner change anything?
2016-09-17 16:38:01	somaReverse	no
2016-09-17 16:38:25	w3z	well save your critique
2016-09-17 16:38:39	ubsan	(at least until you understand the language)
2016-09-17 16:38:54	ubsan	there are reasons for everything in C++
2016-09-17 16:38:58	somaReverse	fine. I think I should go to c++-beginer
2016-09-17 16:39:03	ubsan	even if some of them aren't very good
2016-09-17 16:39:05	w3z	!basic
2016-09-17 16:39:06	nolyc	Please ask your question in ##C++-basic, as it involves the fundamental basics of the language.
2016-09-17 16:39:11	ubsan	see: vector<bool>
2016-09-17 16:39:24	 *	ubsan cries about vector<bool>
2016-09-17 16:39:50	<--	cbot_ (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Ping timeout: 260 seconds)
2016-09-17 16:39:51	w3z	nobody is forcing you to use it, or use it improperly ubsan
2016-09-17 16:40:04	ubsan	w3z: no, but it's still a blight
2016-09-17 16:40:13	somaReverse	what does vector<bool> do to you?
2016-09-17 16:40:24	ubsan	it isn't a vector<bool>
2016-09-17 16:40:27	ubsan	it's a bitset
2016-09-17 16:40:32	w3z	its the go to whipping boy, but its really not fundamentally broken
2016-09-17 16:40:44	ubsan	yes, it's fundamentally broken
2016-09-17 16:40:47	w3z	boohoo, it doesnt return a bool&
2016-09-17 16:40:51	somaReverse	ubsan: and what's wrong with this design?
2016-09-17 16:40:51	-->	gelignite_ (~gelignite@x4db6a225.dyn.telefonica.de) has joined ##c++
2016-09-17 16:40:56	ubsan	it's just not that important in the grand scheme of things
2016-09-17 16:41:01	ubsan	somaReverse: it breaks assumptions
2016-09-17 16:41:22	ubsan	like that a vector<T> of length N has equivalent representation to a T[N]
2016-09-17 16:41:31	somaReverse	Then what are the reasons it still lives?
2016-09-17 16:41:35	<--	Rickmasta (~Rick@pool-96-246-90-176.nycmny.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-17 16:41:36	ubsan	back-compat
2016-09-17 16:42:39	-->	cbot (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2016-09-17 16:43:11	w3z	thats not true, its not even deprecated, and valarray the other go to whipping boy, has been updated
2016-09-17 16:43:50	w3z	people just dont like exceptions to rules of thumb, which is funny considering how many natural languages have
2016-09-17 16:43:59	-->	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has joined ##c++
2016-09-17 16:44:14	-->	zwliew (uid161395@gateway/web/irccloud.com/x-hnoscfgrrgcugtlu) has joined ##c++
2016-09-17 16:44:16	<--	gelignite (~gelignite@x4e311243.dyn.telefonica.de) has quit (Ping timeout: 265 seconds)
2016-09-17 16:44:20	ubsan	w3z: that isn't even a good argument
2016-09-17 16:44:24	ubsan	it's just spewing bs
2016-09-17 16:44:36	w3z	which part?
2016-09-17 16:45:08	ubsan	people just dont like exceptions to rules of thumb, which is funny considering how many natural languages have
2016-09-17 16:45:11	w3z	granted vector<bool> is a worse exception than valarray as its a specialization
2016-09-17 16:45:26	ubsan	it's just stupid
2016-09-17 16:45:45	ubsan	you know vector<bool> is stupid
2016-09-17 16:46:30	<--	vitimiti (~vitimiti@unaffiliated/vitimiti) has quit (Quit: Meows out)
2016-09-17 16:46:44	<--	Acer (~Acer@189.137.229.78) has quit (Ping timeout: 272 seconds)
2016-09-17 16:46:50	w3z	nobody is ranting about a reform of english grammar rules, we just adapt because while not uniform its too much trouble to fix them or theyre useful or they carry information etc etc
2016-09-17 16:47:06	Kaslai	vector<bool> is pretty dumb. Why don't we just have a specialized "bitset" container? :/
2016-09-17 16:47:18	w3z	anyways, yawn
2016-09-17 16:47:49	ubsan	https://isocpp.org/blog/2012/11/on-vectorbool
2016-09-17 16:48:20	ubsan	Kaslai: because C++98
2016-09-17 16:48:24	ubsan	or before that
2016-09-17 16:49:28	<--	objnoob (~Stephen@pool-173-59-11-11.phlapa.fios.verizon.net) has quit (Quit: Leaving)
2016-09-17 16:49:28		[16:49]
2016-09-17 16:49:31	w3z	i agree it shouldnt have been a specialization of vector
2016-09-17 16:50:40	somaReverse	so it's just vector<bool> that sucks?
2016-09-17 16:50:55	w3z	did you see my magic runtime tuple element extractor from the other day ubsan
2016-09-17 16:51:05	ubsan	somaReverse: yeah
2016-09-17 16:51:11	ubsan	well, that it's called vector<bool>
2016-09-17 16:51:21	ubsan	bitsets are *super* useful when they're not called vector
2016-09-17 16:51:23	<--	skweek (~skweek@68-200-146-225.res.bhn.net) has quit (Ping timeout: 250 seconds)
2016-09-17 16:51:29	w3z	theres no end to suck, its all a matter of levels
2016-09-17 16:51:38	ubsan	w3z: /me curious now
2016-09-17 16:51:42	Kaslai	somaReverse: std::vector<bool> is a different implementation from every other std::vector<T> and it behaves in obtusely different ways from std::vector<T>
2016-09-17 16:52:03	w3z	http://melpon.org/wandbox/permlink/VfkVEjIM5k5uciBI
2016-09-17 16:53:44	w3z	anyway, bored
2016-09-17 16:54:23	-->	zap0 (~moofy@14-201-222-143.tpgi.com.au) has joined ##c++
2016-09-17 16:54:26	-->	xaxxon (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has joined ##c++
2016-09-17 16:56:13	<--	f10_ (~flo@2001:470:52af:1:dd12:24db:5df9:c662) has quit (Read error: Connection reset by peer)
2016-09-17 16:56:16	<--	f10__ (~flo@2001:470:52af:1:bc25:d260:4fc6:b325) has quit (Read error: Connection reset by peer)
2016-09-17 16:56:16	yan	assume a function takes a const ref as a param and takes its address; if i pass a literal value to it, what is the address that the function gets? does the call site create an implicit local, or does it happen at the deref site
2016-09-17 16:56:25	<--	chachasmooth (~chachasmo@unaffiliated/chachasmooth) has quit (Ping timeout: 265 seconds)
2016-09-17 16:56:36	<--	blackbeard420 (~blackbear@dynamic-acs-24-154-82-158.zoominternet.net) has quit (Quit: Lost terminal)
2016-09-17 16:56:41	<--	hexagoxel (~hexagoxel@p200300798F119100021E33FFFE2231E9.dip0.t-ipconnect.de) has quit (Ping timeout: 248 seconds)
2016-09-17 16:56:44	Bigcheese	yan: a temporary is created at the call site
2016-09-17 16:56:48	-->	f10__ (~flo@2001:470:52af:1:bc25:d260:4fc6:b325) has joined ##c++
2016-09-17 16:56:52	Bigcheese	It lives until the end of the full expression.
2016-09-17 16:57:23	yan	Bigcheese: if its never derefed, does it ever get optimized out? i assume so, at later layers
2016-09-17 16:57:28	-->	f10_ (~flo@2001:470:52af:1:dd12:24db:5df9:c662) has joined ##c++
2016-09-17 16:57:34	yan	by 'layer' i mean compiler backend sorry
2016-09-17 16:57:41	-->	calincru (~calin@c-73-231-85-3.hsd1.ca.comcast.net) has joined ##c++
2016-09-17 16:57:48	Bigcheese	optimizer will do w/e it wants.
2016-09-17 16:58:25	ubsan	w3z: lol
2016-09-17 16:58:26	ubsan	nice
2016-09-17 16:58:33	Bigcheese	If you gave me an example I could say what llvm does.
2016-09-17 16:58:35	<--	SwiftMatt (~Objective@162.242.94.252) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-17 16:58:39	-->	ferdna (~ferdna@cpe-69-23-141-130.elp.res.rr.com) has joined ##c++
2016-09-17 16:59:13	xaxxon	Bigcheese:  so can gcc.godbolt.org
2016-09-17 16:59:23	-->	chachasmooth (~chachasmo@unaffiliated/chachasmooth) has joined ##c++
2016-09-17 16:59:30	ubsan	w3z: I can't beleive that works
2016-09-17 16:59:30	Bigcheese	Well, it will show the end result.
2016-09-17 16:59:56	xaxxon	which will show if it was optimized out.  turn on color coding it and anyone can understand it.
2016-09-17 17:00:50	-->	crux0 (~crux0@host-254-98.fltacam.tallahassee.fl.us.clients.pavlovmedia.com) has joined ##c++
2016-09-17 17:01:13	<--	OtakuSenpai (~Peter@117.194.201.161) has quit (Quit: Bye guys hav a good time :))
2016-09-17 17:02:50	-->	hexagoxel (~hexagoxel@p5B29AC2B.dip0.t-ipconnect.de) has joined ##c++
2016-09-17 17:03:17	<--	robogoat (~robogoat@163.172.136.88) has quit (Ping timeout: 244 seconds)
2016-09-17 17:04:20	<--	KAHR-Alpha (~Alpha@AReims-652-1-76-199.w86-192.abo.wanadoo.fr) has quit (Ping timeout: 260 seconds)
2016-09-17 17:04:44	xaxxon	yan:  https://godbolt.org/g/31h09O
2016-09-17 17:04:44		[17:04]
2016-09-17 17:04:54	w3z	ubsan: why not?
2016-09-17 17:05:08	ubsan	w3z: it's just crazy
2016-09-17 17:05:25	w3z	the variant holds every integral_constant, theyre conetxpressions
2016-09-17 17:05:48	w3z	its kind of a neat trick if i say so myself though :)
2016-09-17 17:06:26	ubsan	ohhh
2016-09-17 17:06:30	ubsan	that is weird
2016-09-17 17:06:38	-->	andyhuzhill1 (~Thunderbi@14.23.45.178) has joined ##c++
2016-09-17 17:06:42	<--	andyhuzhill (~Thunderbi@14.23.45.178) has quit (Ping timeout: 244 seconds)
2016-09-17 17:07:13	--	andyhuzhill1 is now known as andyhuzhill
2016-09-17 17:07:53	<--	symm- (~symm-@86.127.152.32) has quit (Ping timeout: 244 seconds)
2016-09-17 17:07:56	-->	symm-_ (~symm-@86.127.152.32) has joined ##c++
2016-09-17 17:08:02	-->	tachoknight_ (~tachoknig@2601:241:102:60a6:8e70:5aff:fe24:3cb0) has joined ##c++
2016-09-17 17:09:17	<--	SunnyD (~SunnyD@cpe-72-178-78-211.hot.res.rr.com) has quit (Ping timeout: 244 seconds)
2016-09-17 17:14:02	-->	elnormous (~elnormous@91.105.17.158) has joined ##c++
2016-09-17 17:18:21	<--	k_j (~no@151.42.78.158) has quit (Ping timeout: 276 seconds)
2016-09-17 17:18:26	<--	ctnguyen_ (~chau@2606:6000:fd00:bc00:df2:e087:5e67:d74c) has quit (Read error: Connection reset by peer)
2016-09-17 17:19:04	<--	elnormous (~elnormous@91.105.17.158) has quit (Ping timeout: 265 seconds)
2016-09-17 17:25:00		[17:19]
2016-09-17 17:25:15	-->	ropeney (~ropeney@CPE-58-170-196-106.lns2.lon.bigpond.net.au) has joined ##c++
2016-09-17 17:25:37	<--	z8z (~x@ac230029.ppp.asahi-net.or.jp) has quit (Ping timeout: 250 seconds)
2016-09-17 17:28:14	<--	gioerr (~gioerr@athedsl-4535808.home.otenet.gr) has quit (Ping timeout: 265 seconds)
2016-09-17 17:28:58	-->	Raed|Mobile (~Raed@2607:fb90:443f:f6e2:d664:6401:6bce:8ada) has joined ##c++
2016-09-17 17:34:00		[17:28]
2016-09-17 17:35:15	gp5st	is there a local viewer like godbolt?
2016-09-17 17:35:42	gp5st	less-ing the .S file works, but I'm not good enough to keep it and the source in my head at the same time
2016-09-17 17:37:19	<--	gelignite_ (~gelignite@x4db6a225.dyn.telefonica.de) has quit (Quit: http://bit.ly/1kso8Ta)
2016-09-17 17:38:51	<--	f10__ (~flo@2001:470:52af:1:bc25:d260:4fc6:b325) has quit (Read error: Connection reset by peer)
2016-09-17 17:39:00	-->	f10 (~flo@2001:470:52af:1:dd12:24db:5df9:c662) has joined ##c++
2016-09-17 17:39:05	<--	f10_ (~flo@2001:470:52af:1:dd12:24db:5df9:c662) has quit (Read error: Connection reset by peer)
2016-09-17 17:39:06	-->	f10__ (~flo@2001:470:52af:1:bc25:d260:4fc6:b325) has joined ##c++
2016-09-17 17:43:06	<--	theOneWho (~tom@95.166.79.163) has quit (Ping timeout: 264 seconds)
2016-09-17 17:43:31	-->	de-facto_ (~de-facto@unaffiliated/de-facto) has joined ##c++
2016-09-17 17:43:54	-->	theOneWho (~tom@95.166.79.163) has joined ##c++
2016-09-17 17:44:16	<--	neurodrone (~neurodron@unaffiliated/neurodrone) has quit (Quit: neurodrone)
2016-09-17 17:45:22	Kaslai	Usually I just have the results of objdump -S and the original source open side by side
2016-09-17 17:46:28	-->	dhk (~dhk@138.59.24.18) has joined ##c++
2016-09-17 17:47:00	<--	de-facto (~de-facto@unaffiliated/de-facto) has quit (Ping timeout: 244 seconds)
2016-09-17 17:50:03	<--	crux0 (~crux0@host-254-98.fltacam.tallahassee.fl.us.clients.pavlovmedia.com) has quit (Ping timeout: 272 seconds)
2016-09-17 17:50:03		[17:50]
2016-09-17 17:51:10	<--	Vingador (~quassel@179.181.32.21) has quit (Ping timeout: 255 seconds)
2016-09-17 17:51:41	-->	holmser (~holmser@104.152.206.204) has joined ##c++
2016-09-17 17:54:33	<--	symm-_ (~symm-@86.127.152.32) has quit (Ping timeout: 240 seconds)
2016-09-17 17:57:18	xaxxon	the colorization on godbolt is amazing, though.   Without that, it would be useless to me, since I don't really understand asm
2016-09-17 17:58:49	-->	SwiftMatt (~Objective@162.242.94.252) has joined ##c++
2016-09-17 17:58:52	Kaslai	Well it is available on github if you want to run it locally of course.
2016-09-17 18:00:00	-->	rexkerr (~rexkerr@c-76-105-50-154.hsd1.ca.comcast.net) has joined ##c++
2016-09-17 18:00:09	<--	rexkerr (~rexkerr@c-76-105-50-154.hsd1.ca.comcast.net) has quit (Client Quit)
2016-09-17 18:01:37	<--	holmser (~holmser@104.152.206.204) has quit (Ping timeout: 244 seconds)
2016-09-17 18:03:02	-->	SecondForm_Glenn (~Thunderbi@108.189.70.212) has joined ##c++
2016-09-17 18:04:19	-->	josef__k (~jeremy@59.102.31.229) has joined ##c++
2016-09-17 18:04:40	--	bobot is now known as mussolini
2016-09-17 18:05:04	<--	dhk (~dhk@138.59.24.18) has quit (Quit: Leaving)
2016-09-17 18:05:04		[18:05]
2016-09-17 18:06:27	<--	irrenhaus3 (~xenon@HSI-KBW-046-005-253-022.hsi8.kabel-badenwuerttemberg.de) has quit (Ping timeout: 265 seconds)
2016-09-17 18:07:59	-->	irrenhaus3 (~xenon@vpnclient-241-116.extern.uni-ulm.de) has joined ##c++
2016-09-17 18:10:02	-->	DigiByteDev (~JT2@31.6.57.154) has joined ##c++
2016-09-17 18:10:25	<--	flavius (~flavius@unaffiliated/flavius) has quit (Quit: WeeChat 1.5)
2016-09-17 18:14:13	w3z	i wonder how it does it, the linker map file?
2016-09-17 18:14:38	<--	Guest24079 (~Hyrule@2a02:810a:12c0:5068:5543:9e4a:c106:bbec) has quit (Read error: Connection reset by peer)
2016-09-17 18:14:42	<--	chasmo77 (~chas77@158.183-62-69.ftth.swbr.surewest.net) has quit (Quit: It's just that easy)
2016-09-17 18:15:22	<--	arescorpio (~arescorpi@33-211-114-200.fibertel.com.ar) has quit (Quit: Leaving.)
2016-09-17 18:15:28	-->	elnormous (~elnormous@91.105.17.158) has joined ##c++
2016-09-17 18:18:30	<--	plusone (~plusone@176.24.26.166) has quit (Ping timeout: 264 seconds)
2016-09-17 18:19:47	<--	elnormous (~elnormous@91.105.17.158) has quit (Ping timeout: 250 seconds)
2016-09-17 18:20:32	-->	Faraz_ (~Faraz288@173-28-148-106.client.mchsi.com) has joined ##c++
2016-09-17 18:20:32		[18:20]
2016-09-17 18:20:40	-->	Vingador (~quassel@179.181.32.21) has joined ##c++
2016-09-17 18:21:17	w3z	nope, a quick google brings up ibms compilerwhich has -qlist and -qsource which shows the source and corresponding asm output that it corresponds to
2016-09-17 18:21:18	<--	Vingador (~quassel@179.181.32.21) has quit (Remote host closed the connection)
2016-09-17 18:21:26	w3z	dunno how they do it with gcc and clang
2016-09-17 18:21:35	-->	Vingador (~quassel@179.181.32.21) has joined ##c++
2016-09-17 18:25:42	-->	ctnguyen_ (~chau@2606:6000:fd00:bc00:df2:e087:5e67:d74c) has joined ##c++
2016-09-17 18:29:10	-->	karab44 (~karab44@unaffiliated/karab44) has joined ##c++
2016-09-17 18:29:21	<--	ctnguyen_ (~chau@2606:6000:fd00:bc00:df2:e087:5e67:d74c) has quit (Read error: Connection reset by peer)
2016-09-17 18:29:38	-->	Xanather (~xanather@unaffiliated/xanather) has joined ##c++
2016-09-17 18:29:48	-->	scorpionillumina (~scorpioni@ool-3f8fe36e.dyn.optonline.net) has joined ##c++
2016-09-17 18:30:01	<--	scorpionillumina (~scorpioni@ool-3f8fe36e.dyn.optonline.net) has left ##c++
2016-09-17 18:31:06	<--	sophia7 (~sophia7@unaffiliated/sophia7) has quit (Ping timeout: 264 seconds)
2016-09-17 18:36:00	--	irc: disconnected from server
2016-09-17 18:36:00		[18:36]
2016-09-17 19:15:44	-->	alyptik (~alyptik@unaffiliated/alyptik) has joined ##c++
2016-09-17 19:15:44		[19:15]
2016-09-17 19:15:44	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || https://isocpp.org/faq || pastes: http://melpon.org/wandbox"
2016-09-17 19:15:44	--	Topic set by V-ille (~ville@81-175-149-170.bb.dnainternet.fi) on Fri, 18 Sep 2015 07:13:01
2016-09-17 19:15:44	--	Channel ##c++: 942 nicks (0 ops, 0 voices, 942 normals)
2016-09-17 19:16:10	--	Channel created on Fri, 14 Sep 2001 17:15:35
2016-09-17 19:16:24	-->	elnormous (~elnormous@91.105.17.158) has joined ##c++
2016-09-17 19:17:24	<--	codercodi (~codercodi@108-192-148-40.lightspeed.gnvlsc.sbcglobal.net) has quit (Quit: Leaving)
2016-09-17 19:18:20	-->	asc232 (~Keith@179.38.232.249) has joined ##c++
2016-09-17 19:18:34	-->	codercodi (~codercodi@108-192-148-40.lightspeed.gnvlsc.sbcglobal.net) has joined ##c++
2016-09-17 19:20:32	-->	tachoknight (~tachoknig@2601:241:102:60a6:8e70:5aff:fe24:3cb0) has joined ##c++
2016-09-17 19:20:53	<--	elnormous (~elnormous@91.105.17.158) has quit (Ping timeout: 250 seconds)
2016-09-17 19:21:04	<--	tachoknight_ (~tachoknig@2601:241:102:60a6:8e70:5aff:fe24:3cb0) has quit (Quit: Leaving)
2016-09-17 19:23:08	<--	systemfault (~rcyr@unaffiliated/rcyr) has quit (Quit: Bye!)
2016-09-17 19:23:45	<--	chronos (~chronos@cpe-172-75-171-223.sc.res.rr.com) has quit (Ping timeout: 260 seconds)
2016-09-17 19:23:53	<--	zwliew (uid161395@gateway/web/irccloud.com/x-hnoscfgrrgcugtlu) has quit (Quit: Connection closed for inactivity)
2016-09-17 19:24:30	-->	reveredge (~reveredge@115.110.126.75) has joined ##c++
2016-09-17 19:28:37	SlashLife	Is it possible to easily value initialize a whole array to the same (non-zero) value if the size is not known at write time (but will be available as a constexpr at compile time)?
2016-09-17 19:28:57	ubsan	SlashLife: yes
2016-09-17 19:29:01	-->	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has joined ##c++
2016-09-17 19:29:12	ubsan	std::array<T, N> foo = {};
2016-09-17 19:29:57	ubsan	{ constexpr int i = 20; std::array<int, i> foo = {}; return foo[i - 1]; }
2016-09-17 19:29:58	geordi	<no output>
2016-09-17 19:31:09	SlashLife	geordi: replace {} with {42}
2016-09-17 19:31:09		[19:31]
2016-09-17 19:31:09	geordi	<no output>
2016-09-17 19:31:23	SlashLife	geordi: replace return with cout <<
2016-09-17 19:31:24	geordi	0
2016-09-17 19:31:27	SlashLife	^
2016-09-17 19:31:36	<--	allen29 (~all@unaffiliated/allen29) has quit (Quit: Leaving)
2016-09-17 19:31:49	w3z	no
2016-09-17 19:32:00	SlashLife	Okay. Dang.
2016-09-17 19:32:01	SlashLife	Thanks
2016-09-17 19:32:03	ubsan	ohh
2016-09-17 19:32:04	ubsan	right
2016-09-17 19:32:07	ubsan	that
2016-09-17 19:32:18	ubsan	I read your question wrong
2016-09-17 19:33:01	-->	Rickmasta (~Rick@pool-96-246-90-176.nycmny.fios.verizon.net) has joined ##c++
2016-09-17 19:33:35	ubsan	sorry :(
2016-09-17 19:33:41	SlashLife	Happens. :)
2016-09-17 19:33:53	<--	codercodi (~codercodi@108-192-148-40.lightspeed.gnvlsc.sbcglobal.net) has quit (Quit: Leaving)
2016-09-17 19:34:16	-->	codercodi (~codercodi@108-192-148-40.lightspeed.gnvlsc.sbcglobal.net) has joined ##c++
2016-09-17 19:35:06	w3z	you can use fill or generate, but thats assignment
2016-09-17 19:35:11	-->	SHC (~quassel@43.239.245.133) has joined ##c++
2016-09-17 19:35:14	w3z	(at runtime)
2016-09-17 19:35:24	SlashLife	Yeah, I was just wondering that this should be possible.
2016-09-17 19:36:11	-->	ftop (~ftop@ppp121-45-223-68.lns20.cbr1.internode.on.net) has joined ##c++
2016-09-17 19:36:30	-->	forgottenone (~forgotten@195.142.43.212) has joined ##c++
2016-09-17 19:36:32	<--	CtrlC (~CtrlC@unaffiliated/ctrlc) has quit (Ping timeout: 244 seconds)
2016-09-17 19:36:34	SlashLife	std::array<int, i> arr = { 42... }; would be nice.
2016-09-17 19:36:57	ubsan	I feel... like... it could be possible?
2016-09-17 19:37:08	ubsan	something like std::make_array
2016-09-17 19:37:30	w3z	your feelings are not pertinent
2016-09-17 19:37:44	ubsan	thanks w3z
2016-09-17 19:37:51	ubsan	I'm so happy to hear that
2016-09-17 19:37:55	ubsan	thank you for your input
2016-09-17 19:38:28	SlashLife	Well, most of all I'd like something that could actually work at compile time to fill <structure> with static storage duration.
2016-09-17 19:39:06	SlashLife	It feels like an odd limitation to get zero-initialization for free, but having to pay for other constexpr values.
2016-09-17 19:39:18	ubsan	SlashLife: it's because C
2016-09-17 19:39:32	w3z	you can initialize with whatever you like, but youll need n values
2016-09-17 19:39:37	<--	glenfe (~glen@unaffiliated/glenfe) has quit (Read error: Connection reset by peer)
2016-09-17 19:39:40	SlashLife	Right.
2016-09-17 19:39:45	w3z	anything less, will be 0 initialized
2016-09-17 19:39:50	SlashLife	Lapse on my part.
2016-09-17 19:40:05	<--	DigiByteDev (~JT2@31.6.57.154) has quit (Quit: DigiByteDev)
2016-09-17 19:40:19	SlashLife	Okay, not an odd limitation then, an unnecessary one.
2016-09-17 19:40:41	<--	theOneWho (~tom@95.166.79.163) has quit (Read error: Connection reset by peer)
2016-09-17 19:40:43	w3z	{int A[4]={1,2,3}; copy(Begin(A),end(A),experimental::ostream_joiner(cout,","));}
2016-09-17 19:40:44	geordi	error: 'Begin' was not declared in this scope
2016-09-17 19:40:54	ubsan	you can do it fairly easily for trivially copy constructible types
2016-09-17 19:40:58	w3z	{int A[4]={1,2,3}; copy(begin(A),end(A),experimental::ostream_joiner(cout,","));}
2016-09-17 19:40:58	geordi	error: missing template arguments before '(' token
2016-09-17 19:41:08	w3z	aargh
2016-09-17 19:41:10	<--	Raedism (~Raed@2607:fb90:5ee4:8ac7:42d3:eecb:ca12:6587) has quit (Quit: Raedism)
2016-09-17 19:41:16	ubsan	but for non-trivial, it's much less easy
2016-09-17 19:42:02	SlashLife	w3z: Yes, you're right. I forgot about the possibility to "simply" specify all elements for a moment, even though I have hinted at it in my question.
2016-09-17 19:42:26	SlashLife	I just discarded that option, as it isn't applicable in my usecase and forgot about it *too* well.
2016-09-17 19:43:15	-->	theOneWho (~tom@95.166.79.163) has joined ##c++
2016-09-17 19:44:36	w3z	{S A[4]={1,2,3};} struct S{S(int=0){}}; //ubsan
2016-09-17 19:44:37	geordi	<no output>
2016-09-17 19:45:41	m_ben	geordi: --clang {} using b = bool_constant<1>
2016-09-17 19:45:41	geordi	error: cannot combine with previous 'type-name' declaration specifier
2016-09-17 19:46:06	m_ben	geordi: --clang using b = bool_constant<1>
2016-09-17 19:46:06	geordi	error: expected ';' after alias declaration (fix known)
2016-09-17 19:46:09	m_ben	geordi: --clang using b = bool_constant<1>;
2016-09-17 19:46:09		[19:46]
2016-09-17 19:46:10	geordi	Success
2016-09-17 19:46:50	-->	Sasasu (~li@180.212.140.29) has joined ##c++
2016-09-17 19:47:12	-->	zwliew (uid161395@gateway/web/irccloud.com/x-arvailxsccmkpbxz) has joined ##c++
2016-09-17 19:47:13	<--	Vingador (~quassel@179.181.32.21) has quit (Remote host closed the connection)
2016-09-17 19:47:20	w3z	geordi: --clang {} using b = bool_constant<1>;
2016-09-17 19:47:21	geordi	<no output>
2016-09-17 19:47:29	w3z	what were you trying to show?
2016-09-17 19:47:43	w3z	the silly error message?
2016-09-17 19:48:00	m_ben	my clang version doesn't have bool_constant even though c++1z is enabled
2016-09-17 19:48:03	<--	zap0 (~moofy@14-201-222-143.tpgi.com.au) has quit (Quit: zap0)
2016-09-17 19:48:46	-->	nilg (~user@77.70.2.229) has joined ##c++
2016-09-17 19:48:57	<--	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has quit (Quit: Leaving.)
2016-09-17 19:49:01	-->	UnlikeSuika (~UnlikeSui@115.93.122.107) has joined ##c++
2016-09-17 19:49:04	w3z	well youre likely not running 4, but in any case its a simple alias for integral_constant
2016-09-17 19:50:00	<--	yeticry (~yeticry@183.160.6.32) has quit (Ping timeout: 260 seconds)
2016-09-17 19:50:02	-->	systemfault (~rcyr@unaffiliated/rcyr) has joined ##c++
2016-09-17 19:50:34	w3z	probably dont have void_t either
2016-09-17 19:50:56	m_ben	it works on melpon with 3.8
2016-09-17 19:51:05	<--	AstralStorm (~astralsto@unaffiliated/astralstorm) has quit (Ping timeout: 240 seconds)
2016-09-17 19:51:43	-->	yeticry (~yeticry@117.70.53.122) has joined ##c++
2016-09-17 19:51:53	-->	kasper^ (~safaf@82.137.10.23) has joined ##c++
2016-09-17 19:52:07	o]	either your thing is broken or melpon is lying
2016-09-17 19:52:36	m_ben	there's only __bool_constant
2016-09-17 19:52:51	w3z	i dont have it in my latest xcode install, so melpon may be lying about what libstdc++ its using
2016-09-17 19:53:13	m_ben	melpon uses libc++?
2016-09-17 19:53:54	w3z	it switches betwenn them i believe
2016-09-17 19:54:07	m_ben	anyway, doesn't matter. my gcc version is very old, 5.4
2016-09-17 19:54:16	<--	immune (~Immune@173.55.30.110) has quit (Read error: Connection reset by peer)
2016-09-17 19:54:32	w3z	between, also i obviously have libc++ here with xcode, im making silly mistakes
2016-09-17 19:54:42	-->	SHC_ (~quassel@61.3.52.229) has joined ##c++
2016-09-17 19:57:17	<--	SHC (~quassel@43.239.245.133) has quit (Ping timeout: 250 seconds)
2016-09-17 19:57:23	-->	Wolfgange (62d63e11@gateway/web/cgi-irc/kiwiirc.com/ip.98.214.62.17) has joined ##c++
2016-09-17 19:58:10	<--	gp5st (~jim@pool-98-111-192-215.pitbpa.fios.verizon.net) has quit (Ping timeout: 260 seconds)
2016-09-17 19:59:43	<--	Wolfgange (62d63e11@gateway/web/cgi-irc/kiwiirc.com/ip.98.214.62.17) has left ##c++
2016-09-17 20:01:39	-->	Flakes (~Damien2@58.247.81.50) has joined ##c++
2016-09-17 20:01:39		[20:01]
2016-09-17 20:02:01	-->	plusone (~plusone@176.24.26.166) has joined ##c++
2016-09-17 20:04:18	<--	codercodi (~codercodi@108-192-148-40.lightspeed.gnvlsc.sbcglobal.net) has quit (Quit: Leaving)
2016-09-17 20:04:44	-->	codercodi (~codercodi@108-192-148-40.lightspeed.gnvlsc.sbcglobal.net) has joined ##c++
2016-09-17 20:05:11	Kaslai	SlashLife: https://godbolt.org/g/QtKKuW
2016-09-17 20:05:42	-->	karts (43a45b4e@gateway/web/cgi-irc/kiwiirc.com/ip.67.164.91.78) has joined ##c++
2016-09-17 20:06:18	Kaslai	Or perhaps this will be easier to read https://godbolt.org/g/6rLktv
2016-09-17 20:07:12	Kaslai	Clearly it's limited by the amount of recursion your compiler will allow, which usually isn't much...
2016-09-17 20:07:46	SlashLife	Kaslai: Cool: https://godbolt.org/g/TrlfYg
2016-09-17 20:09:15	-->	Immune (~Immune@173.55.30.110) has joined ##c++
2016-09-17 20:11:02	SlashLife	Pretty sure you could attempt to raise it by using args..., args...[, value] in combination with bit manipulation of remaining.
2016-09-17 20:11:13	Kaslai	Yeah, for sure
2016-09-17 20:11:46	-->	mfc_ (~mfc@unaffiliated/mfc) has joined ##c++
2016-09-17 20:11:50	xaxxon	embedding binary data in c++ types or something?
2016-09-17 20:11:59	-->	AstralStorm (~astralsto@unaffiliated/astralstorm) has joined ##c++
2016-09-17 20:12:04	SlashLife	xaxxon: Mh?
2016-09-17 20:12:26	o]	the crack was strong today
2016-09-17 20:12:27	xaxxon	SomeType<1,0,0,0,1,0,0,0,1,0>
2016-09-17 20:12:37	SlashLife	Ah, no. value initializing a whole array of compile time known (but variable) size.
2016-09-17 20:12:50	SlashLife	To a non-zero value.
2016-09-17 20:15:17	<--	karts (43a45b4e@gateway/web/cgi-irc/kiwiirc.com/ip.67.164.91.78) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-09-17 20:15:29	<--	mfc (~mfc@unaffiliated/mfc) has quit (Ping timeout: 265 seconds)
2016-09-17 20:19:11	<--	codercodi (~codercodi@108-192-148-40.lightspeed.gnvlsc.sbcglobal.net) has quit (Quit: Leaving)
2016-09-17 20:19:11		[20:19]
2016-09-17 20:19:35	-->	codercodi (~codercodi@108-192-148-40.lightspeed.gnvlsc.sbcglobal.net) has joined ##c++
2016-09-17 20:19:45	<--	Valdaris (~Gabe@75-170-43-116.eugn.qwest.net) has quit (Ping timeout: 260 seconds)
2016-09-17 20:21:13	-->	DigiByteDev (~JT2@n218250011174.netvigator.com) has joined ##c++
2016-09-17 20:21:31	<--	DigiByteDev (~JT2@n218250011174.netvigator.com) has quit (Client Quit)
2016-09-17 20:24:01	<--	nilg (~user@77.70.2.229) has quit (Read error: Connection reset by peer)
2016-09-17 20:24:06	<--	codercodi (~codercodi@108-192-148-40.lightspeed.gnvlsc.sbcglobal.net) has quit (Client Quit)
2016-09-17 20:24:25	-->	codercodi (~codercodi@108-192-148-40.lightspeed.gnvlsc.sbcglobal.net) has joined ##c++
2016-09-17 20:24:29	-->	karts (43a45b4e@gateway/web/cgi-irc/kiwiirc.com/ip.67.164.91.78) has joined ##c++
2016-09-17 20:26:37	<--	codercodi (~codercodi@108-192-148-40.lightspeed.gnvlsc.sbcglobal.net) has quit (Client Quit)
2016-09-17 20:26:57	-->	codercodi (~codercodi@108-192-148-40.lightspeed.gnvlsc.sbcglobal.net) has joined ##c++
2016-09-17 20:27:48	-->	Markow (~Markow@176.122.215.103) has joined ##c++
2016-09-17 20:28:36	-->	hk238 (~kvirc@unaffiliated/hk238) has joined ##c++
2016-09-17 20:30:36	-->	hey2 (~hey5@c-71-193-232-55.hsd1.or.comcast.net) has joined ##c++
2016-09-17 20:30:58	<--	reveredge (~reveredge@115.110.126.75) has quit (Ping timeout: 244 seconds)
2016-09-17 20:31:50	<--	marcle (~marcle_3@180.169.108.58) has quit (Quit: 离开)
2016-09-17 20:32:01	-->	andyhuzhill1 (~Thunderbi@14.23.45.178) has joined ##c++
2016-09-17 20:32:29	<--	andyhuzhill (~Thunderbi@14.23.45.178) has quit (Ping timeout: 244 seconds)
2016-09-17 20:32:30	--	andyhuzhill1 is now known as andyhuzhill
2016-09-17 20:32:38	-->	jamesaxl (~jamesaxl@176.98.129.195) has joined ##c++
2016-09-17 20:32:49	<--	karts (43a45b4e@gateway/web/cgi-irc/kiwiirc.com/ip.67.164.91.78) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-09-17 20:35:39	<--	kadoban (~mud@unaffiliated/kadoban) has quit (Quit: bye)
2016-09-17 20:35:39		[20:35]
2016-09-17 20:36:49	-->	marcle (~marcle_3@180.169.108.58) has joined ##c++
2016-09-17 20:37:53	-->	bushido_ (~bushido@unaffiliated/bursihido) has joined ##c++
2016-09-17 20:38:54	-->	karts (43a45b4e@gateway/web/cgi-irc/kiwiirc.com/ip.67.164.91.78) has joined ##c++
2016-09-17 20:39:53	<--	Goplat (~goplat@reactos/developer/Goplat) has quit (Ping timeout: 240 seconds)
2016-09-17 20:41:03	<--	martiert (~martin@2.37-191-171.fiber.lynet.no) has quit (Ping timeout: 240 seconds)
2016-09-17 20:41:07	<--	martiert_work (~martin@2.37-191-171.fiber.lynet.no) has quit (Ping timeout: 248 seconds)
2016-09-17 20:41:18	<--	jamesaxl (~jamesaxl@176.98.129.195) has quit (Ping timeout: 264 seconds)
2016-09-17 20:41:25	<--	cbot (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Quit: Leaving)
2016-09-17 20:41:29	-->	jamesaxl (~jamesaxl@176.98.129.195) has joined ##c++
2016-09-17 20:42:00	-->	AkaiSora (~quassel@197.17.32.157) has joined ##c++
2016-09-17 20:44:58	-->	kw01f (~kw01f@pD9FB3223.dip0.t-ipconnect.de) has joined ##c++
2016-09-17 20:45:21	-->	Nitrodev (~Nitrodev@85-23-77-207.bb.dnainternet.fi) has joined ##c++
2016-09-17 20:45:48	w3z	thought you wanted initialization for a builtin array ... you can drop the recursion
2016-09-17 20:46:06	-->	MulleDK19 (MulleDK19@unaffiliated/mulledk19) has joined ##c++
2016-09-17 20:46:07	w3z	{array<int,3> A= G<int,3>(make_index_sequence<3>{}); cout<<A;} template<size_t N> int V=42; template<class T, size_t N, size_t... K> array<T,N> G(const index_sequence<K...>&){return array<T,N>{V<K>...};}
2016-09-17 20:46:08	geordi	{42, 42, 42}
2016-09-17 20:46:24	-->	Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2016-09-17 20:47:27	<--	waruqi (uid170805@gateway/web/irccloud.com/x-vctntbhpdkklocul) has quit (Quit: Connection closed for inactivity)
2016-09-17 20:47:47	<--	codercodi (~codercodi@108-192-148-40.lightspeed.gnvlsc.sbcglobal.net) has quit (Remote host closed the connection)
2016-09-17 20:48:00	w3z	anyway, i guess array did come up earlier, eh, i wouldnt recommend any of the above in real code
2016-09-17 20:49:00	-->	FreeBirdLjj (~freebirdl@2002:df41:a889:0:6e40:8ff:fe93:2ce0) has joined ##c++
2016-09-17 20:49:32	<--	mfc_ (~mfc@unaffiliated/mfc) has quit (Quit: 29? 30!)
2016-09-17 20:50:48	SlashLife	I agree, neither would I. But it's good to know that it *is* possible if necessary. Some language support for it would still be nice.
2016-09-17 20:50:48		[20:50]
2016-09-17 20:51:00	-->	RomaterBusy (Elite17646@gateway/shell/elitebnc/x-nfkbhevplpmjcuny) has joined ##c++
2016-09-17 20:51:53	w3z	{array<int,3> A= G<int>(make_index_sequence<3>{}); cout<<A;} template<size_t N> int V=42; template<class T, size_t... N> array<T,sizeof...(N)> G(const index_sequence<N...>&){return {V<N>...};} //slightly cleaned up
2016-09-17 20:51:54	geordi	{42, 42, 42}
2016-09-17 20:53:51	<--	marcle (~marcle_3@180.169.108.58) has left ##c++
2016-09-17 20:53:52	w3z	obviously you could make a helper
2016-09-17 20:54:03	<--	flonk_OnVacation (~flonk@ec2-52-40-29-25.us-west-2.compute.amazonaws.com) has quit (Ping timeout: 250 seconds)
2016-09-17 20:55:37	-->	Atrumx (~Atrumx@unaffiliated/fivedeltasix) has joined ##c++
2016-09-17 20:55:51	-->	martiert_work (~martin@2.37-191-171.fiber.lynet.no) has joined ##c++
2016-09-17 20:56:05	-->	flonk (~flonk@ec2-52-40-29-25.us-west-2.compute.amazonaws.com) has joined ##c++
2016-09-17 20:56:39	<--	RomaterBusy (Elite17646@gateway/shell/elitebnc/x-nfkbhevplpmjcuny) has left ##c++ ("Leaving")
2016-09-17 21:00:19	<--	SecondForm_Glenn (~Thunderbi@108.189.70.212) has quit (Ping timeout: 248 seconds)
2016-09-17 21:01:17	-->	cr1t1cal (~cr1t1cal@60-242-215-61.static.tpgi.com.au) has joined ##c++
2016-09-17 21:01:57	<--	flonk (~flonk@ec2-52-40-29-25.us-west-2.compute.amazonaws.com) has quit (Ping timeout: 265 seconds)
2016-09-17 21:03:07	-->	kasper_ (~safaf@82.137.12.8) has joined ##c++
2016-09-17 21:03:49	-->	ajs15822 (~ajs15822@c-73-155-185-89.hsd1.tx.comcast.net) has joined ##c++
2016-09-17 21:04:24	<--	ajs15822 (~ajs15822@c-73-155-185-89.hsd1.tx.comcast.net) has quit (Remote host closed the connection)
2016-09-17 21:04:27	<--	SwiftMatt (~Objective@162.242.94.252) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-17 21:04:57	-->	flonk (~flonk@ec2-52-40-29-25.us-west-2.compute.amazonaws.com) has joined ##c++
2016-09-17 21:05:07	<--	kasper^ (~safaf@82.137.10.23) has quit (Ping timeout: 248 seconds)
2016-09-17 21:07:20	<--	logan_e_ (uid164592@gateway/web/irccloud.com/x-oylxezacqdbegmzt) has quit (Quit: Connection closed for inactivity)
2016-09-17 21:07:20		[21:07]
2016-09-17 21:08:21	<--	karts (43a45b4e@gateway/web/cgi-irc/kiwiirc.com/ip.67.164.91.78) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-09-17 21:08:45	<--	hey2 (~hey5@c-71-193-232-55.hsd1.or.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-17 21:10:28	<--	Goplat (~goplat@reactos/developer/Goplat) has quit (Remote host closed the connection)
2016-09-17 21:10:39	<--	dpower (uid103540@gateway/web/irccloud.com/x-jellidetilhhuzra) has quit (Ping timeout: 265 seconds)
2016-09-17 21:11:21	-->	t0by (~t0by@host69-200-dynamic.245-95-r.retail.telecomitalia.it) has joined ##c++
2016-09-17 21:12:29	<--	chewyDelicious (~nooblet@124.197.62.6) has quit (Ping timeout: 250 seconds)
2016-09-17 21:12:54	-->	dpower (uid103540@gateway/web/irccloud.com/x-kenhndjuguboatpd) has joined ##c++
2016-09-17 21:13:11	w3z	{array<int,3> A= G<int,3,42>{};cout<<A;} template<class T,size_t N,T V> struct G{ template<size_t> struct X{static const T value=V;}; template<size_t... K>array<T,sizeof...(K)> f(const index_sequence<K...>&) {return {X<K>::value...};} operator auto(){return f(make_index_sequence<N>{});}};
2016-09-17 21:13:11	geordi	{42, 42, 42}
2016-09-17 21:13:25	-->	chewyDelicious (~nooblet@124.197.62.6) has joined ##c++
2016-09-17 21:14:04	<--	pragma- (~chaos@unaffiliated/pragmatic-chaos) has quit (Ping timeout: 240 seconds)
2016-09-17 21:14:18	<--	armyriad (~armyriad@gateway/vpn/privateinternetaccess/armyriad) has quit (Ping timeout: 264 seconds)
2016-09-17 21:14:49	-->	armyriad (~armyriad@gateway/vpn/privateinternetaccess/armyriad) has joined ##c++
2016-09-17 21:14:56	<--	armyriad (~armyriad@gateway/vpn/privateinternetaccess/armyriad) has quit (Max SendQ exceeded)
2016-09-17 21:15:25	<--	SibTiger (~Nicholas@199-96-206-87.fidnet.com) has quit (Quit: All work and no play, makes Tiger a dull boy.  ALlwOrk and noPlaY ,makes tigera Dullbo y.  AllWorK andno plaY,mak esTiger a dull B oy.)
2016-09-17 21:15:28	-->	armyriad (~armyriad@gateway/vpn/privateinternetaccess/armyriad) has joined ##c++
2016-09-17 21:17:33	-->	elnormous (~elnormous@91.105.17.158) has joined ##c++
2016-09-17 21:17:47	<--	armyriad (~armyriad@gateway/vpn/privateinternetaccess/armyriad) has quit (Client Quit)
2016-09-17 21:18:07	-->	armyriad (~armyriad@gateway/vpn/privateinternetaccess/armyriad) has joined ##c++
2016-09-17 21:18:12	<--	reidel (~jleh@173.254.238.161) has quit (Ping timeout: 276 seconds)
2016-09-17 21:18:32	<--	armyriad (~armyriad@gateway/vpn/privateinternetaccess/armyriad) has quit (Max SendQ exceeded)
2016-09-17 21:18:58	-->	reidel (~jleh@173.254.238.161) has joined ##c++
2016-09-17 21:19:42	-->	reveredge (~reveredge@111.119.209.219) has joined ##c++
2016-09-17 21:21:50	<--	forgottenone (~forgotten@195.142.43.212) has quit (Quit: Konversation terminated!)
2016-09-17 21:21:53	-->	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has joined ##c++
2016-09-17 21:22:23	w3z	hmm clang generates an incorrect warning, and suggests a broken fix
2016-09-17 21:22:23		[21:22]
2016-09-17 21:22:39	<--	elnormous (~elnormous@91.105.17.158) has quit (Ping timeout: 250 seconds)
2016-09-17 21:22:41	<--	ferdna (~ferdna@cpe-69-23-141-130.elp.res.rr.com) has quit (Quit: Leaving)
2016-09-17 21:23:01	-->	forgottenone (~forgotten@195.142.43.212) has joined ##c++
2016-09-17 21:23:05	<--	irrenhaus3 (~xenon@HSI-KBW-046-005-253-022.hsi8.kabel-badenwuerttemberg.de) has quit (Ping timeout: 250 seconds)
2016-09-17 21:24:51	-->	jumbers_ (~jumbers@frank.jnumbers.com) has joined ##c++
2016-09-17 21:25:02	-->	irrenhaus3 (~xenon@HSI-KBW-046-005-253-022.hsi8.kabel-badenwuerttemberg.de) has joined ##c++
2016-09-17 21:26:01	w3z	geordi: --clang {array<int,3> A= G<int,3,42>{};cout<<A;} template<class T,size_t N,T V> struct G{template<size_t> using X=integral_constant<T,V>; template<size_t...K> array<T,sizeof...(K)> f(const index_sequence<K...>&) {return {X<K>{}...};} operator auto(){return f(make_index_sequence<N>{});}};
2016-09-17 21:26:02	geordi	warning: suggest braces around initialization of subobject (fix known)
2016-09-17 21:26:33	w3z	it wants {}s around the parameter pack expansion, which is wrong
2016-09-17 21:26:41	<--	jumbers (~jumbers@fsf/member/jumbers) has quit (Ping timeout: 240 seconds)
2016-09-17 21:27:39	w3z	geordi --clang {array<int,3> A= G<int,3,42>{};cout<<A;} template<class T,size_t N,T V> struct G{template<size_t> using X=integral_constant<T,V>; template<size_t...K> array<T,sizeof...(K)> f(const index_sequence<K...>&) {return {{X<K>{}...}};} operator auto(){return f(make_index_sequence<N>{});}};
2016-09-17 21:27:40	geordi	{42, 42, 42}
2016-09-17 21:27:55	w3z	oh well, enough geordi spam
2016-09-17 21:31:10	<--	DarkSkyes (~DarkSkyes@unaffiliated/darkskyes) has quit (Quit: Leaving)
2016-09-17 21:32:18	<--	jumbers_ (~jumbers@frank.jnumbers.com) has quit (Quit: Quit)
2016-09-17 21:32:29	<--	Leovale (~Leovale@45.72.141.66) has quit (Read error: Connection reset by peer)
2016-09-17 21:32:39	-->	jumbers (~jumbers@frank.jnumbers.com) has joined ##c++
2016-09-17 21:32:39	<--	jumbers (~jumbers@frank.jnumbers.com) has quit (Changing host)
2016-09-17 21:32:39	-->	jumbers (~jumbers@fsf/member/jumbers) has joined ##c++
2016-09-17 21:35:43	<--	f10 (~flo@2001:470:52af:1:dd12:24db:5df9:c662) has quit (Ping timeout: 255 seconds)
2016-09-17 21:36:37	<--	f10__ (~flo@2001:470:52af:1:bc25:d260:4fc6:b325) has quit (Ping timeout: 255 seconds)
2016-09-17 21:37:31	<--	Haruno (~Haruno@unaffiliated/haruno) has quit (Ping timeout: 255 seconds)
2016-09-17 21:37:31		[21:37]
2016-09-17 21:38:01	-->	Haruno (~Haruno@197.226.150.178) has joined ##c++
2016-09-17 21:38:02	<--	Haruno (~Haruno@197.226.150.178) has quit (Changing host)
2016-09-17 21:38:02	-->	Haruno (~Haruno@unaffiliated/haruno) has joined ##c++
2016-09-17 21:38:33	-->	enk0_ (~enk0@cpe-76-168-177-40.socal.res.rr.com) has joined ##c++
2016-09-17 21:39:38	<--	Green (uid722@gateway/web/irccloud.com/x-aitjjrwbfgjppaor) has quit (Read error: Connection reset by peer)
2016-09-17 21:40:32	<--	dpower (uid103540@gateway/web/irccloud.com/x-kenhndjuguboatpd) has quit (Read error: Connection reset by peer)
2016-09-17 21:40:45	<--	theOneWho (~tom@95.166.79.163) has quit (Read error: Connection reset by peer)
2016-09-17 21:40:51	-->	dpower (uid103540@gateway/web/irccloud.com/x-ybkbicjqogtmszfg) has joined ##c++
2016-09-17 21:40:53	-->	bocaneri (~bocaneri@about/linux/staff/sauvin) has joined ##c++
2016-09-17 21:41:19	-->	Green (uid722@gateway/web/irccloud.com/x-cgwhradnhicufkvn) has joined ##c++
2016-09-17 21:41:54	<--	fflam (~mdt@ip72-192-136-18.sd.sd.cox.net) has quit (Ping timeout: 264 seconds)
2016-09-17 21:42:15	<--	enk0 (~enk0@cpe-76-168-177-40.socal.res.rr.com) has quit (Ping timeout: 276 seconds)
2016-09-17 21:42:28	-->	sedeki (~textual@unaffiliated/sedeki) has joined ##c++
2016-09-17 21:42:57	<--	cr1t1cal (~cr1t1cal@60-242-215-61.static.tpgi.com.au) has quit (Quit: WeeChat 1.5)
2016-09-17 21:43:01	-->	pragma- (~chaos@unaffiliated/pragmatic-chaos) has joined ##c++
2016-09-17 21:43:21	-->	theOneWho (~tom@95.166.79.163) has joined ##c++
2016-09-17 21:43:25	-->	iceiceice (~chris@pool-71-172-187-9.nwrknj.east.verizon.net) has joined ##c++
2016-09-17 21:43:25	<--	iceiceice (~chris@pool-71-172-187-9.nwrknj.east.verizon.net) has quit (Changing host)
2016-09-17 21:43:25	-->	iceiceice (~chris@unaffiliated/iceiceice) has joined ##c++
2016-09-17 21:44:39	-->	cr1t1cal (~cr1t1cal@60-242-215-61.static.tpgi.com.au) has joined ##c++
2016-09-17 21:45:30	-->	scai (~scai@p4FF0FBFC.dip0.t-ipconnect.de) has joined ##c++
2016-09-17 21:46:01	--	va_ is now known as va
2016-09-17 21:46:42	-->	fflam (~mdt@ip72-192-136-18.sd.sd.cox.net) has joined ##c++
2016-09-17 21:47:41	<--	cr1t1cal (~cr1t1cal@60-242-215-61.static.tpgi.com.au) has quit (Client Quit)
2016-09-17 21:53:00		[21:47]
2016-09-17 21:53:13	<--	m_ben (~m_ben@unaffiliated/m-ben/x-5917362) has quit (Ping timeout: 248 seconds)
2016-09-17 21:53:53	<--	zwliew (uid161395@gateway/web/irccloud.com/x-arvailxsccmkpbxz) has quit (Quit: Connection closed for inactivity)
2016-09-17 21:54:30	-->	oxygene (~fred@ALille-652-1-134-14.w83-198.abo.wanadoo.fr) has joined ##c++
2016-09-17 21:54:31	<--	wolfcub (~henrique_@177.55.202.248) has quit (Ping timeout: 272 seconds)
2016-09-17 21:55:41	-->	kamog (~user@95.73.176.167) has joined ##c++
2016-09-17 21:55:42	w3z	http://melpon.org/wandbox/permlink/Z5okdjPhORqemC8G //more template magic
2016-09-17 21:56:13	-->	gagbo (~gagbo@unaffiliated/gagbo) has joined ##c++
2016-09-17 21:56:15	<--	jargonmonk (jargonmonk@gateway/shell/blinkenshell.org/x-sezhpbrvciggvmul) has quit (Quit: jargonmonk)
2016-09-17 21:56:25	<--	josef__k (~jeremy@59.102.31.229) has quit (Ping timeout: 255 seconds)
2016-09-17 21:57:05	w3z	it gets you to array<T,N> A=G<U,V>{}; where the value V of type U is convertible to T
2016-09-17 21:58:16	-->	spindle (~spindle@27-33-39-55.static.tpgi.com.au) has joined ##c++
2016-09-17 21:58:52	w3z	needs more constexpr, but eh, bored
2016-09-17 22:01:08	RokerHRO	oO
2016-09-17 22:02:14	<--	plusone (~plusone@176.24.26.166) has quit (Ping timeout: 244 seconds)
2016-09-17 22:02:26	w3z	http://melpon.org/wandbox/permlink/Kk7T8uuomA9AV7dj
2016-09-17 22:02:38	-->	jargonmonk (jargonmonk@gateway/shell/blinkenshell.org/x-jdttmspyzlnjfszg) has joined ##c++
2016-09-17 22:02:38	w3z	final version until auto non type template params works
2016-09-17 22:03:23	-->	kasper^ (~safaf@82.137.15.165) has joined ##c++
2016-09-17 22:05:05	<--	kasper_ (~safaf@82.137.12.8) has quit (Ping timeout: 240 seconds)
2016-09-17 22:05:41	w3z	beat that! (everybody thats already passed out and/or bored with the problem)
2016-09-17 22:06:30	<--	dinfuehr (~dinfuehr@62-47-187-53.adsl.highway.telekom.at) has quit (Ping timeout: 260 seconds)
2016-09-17 22:06:49	-->	zwliew (uid161395@gateway/web/irccloud.com/x-qdhkckfmaldlrbmk) has joined ##c++
2016-09-17 22:07:46	-->	buumi (~quassel@26.ip-51-254-211.eu) has joined ##c++
2016-09-17 22:07:57	-->	ibouvousaime (~ibouvousa@41.82.54.121) has joined ##c++
2016-09-17 22:08:39	-->	dinfuehr (~dinfuehr@194-166-119-89.adsl.highway.telekom.at) has joined ##c++
2016-09-17 22:08:39		[22:08]
2016-09-17 22:10:17	xaxxon	I never started caring
2016-09-17 22:11:24	<--	ibouvousaime (~ibouvousa@41.82.54.121) has quit (Read error: Connection reset by peer)
2016-09-17 22:12:23	-->	ibouvousaime (~ibouvousa@41.82.54.121) has joined ##c++
2016-09-17 22:14:41	-->	velco (~chill@vlan-185-78-38-153.comnet.bg) has joined ##c++
2016-09-17 22:16:50	w3z	though i think now that V as a non type template parameter is wrong, and should be a constructor param G<T>(V) making it more flexible
2016-09-17 22:17:46	-->	Munnu (~timo@91-158-145-247.elisa-laajakaista.fi) has joined ##c++
2016-09-17 22:18:44	-->	jkhl (~j@host86-166-214-159.range86-166.btcentralplus.com) has joined ##c++
2016-09-17 22:18:48	-->	ambro718 (~ambro@unaffiliated/ambro718) has joined ##c++
2016-09-17 22:18:58	-->	kilter_ (~kilter_@host-92-17-196-102.as13285.net) has joined ##c++
2016-09-17 22:19:13	-->	elnormous (~elnormous@91.105.17.158) has joined ##c++
2016-09-17 22:19:48	<--	kuahara (~kuahara@cpe-68-201-21-196.sw.res.rr.com) has quit (Ping timeout: 244 seconds)
2016-09-17 22:21:16	-->	riksteri (~SpaceDino@62.102.148.156) has joined ##c++
2016-09-17 22:21:33	<--	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has quit (Remote host closed the connection)
2016-09-17 22:21:47	-->	anuxivm (~anuxi@92.185.154.236) has joined ##c++
2016-09-17 22:21:50	-->	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has joined ##c++
2016-09-17 22:22:02	<--	kilter_ (~kilter_@host-92-17-196-102.as13285.net) has quit (Client Quit)
2016-09-17 22:22:07	-->	StyxAlso (~markg@120.88.147.168) has joined ##c++
2016-09-17 22:24:04	<--	elnormous (~elnormous@91.105.17.158) has quit (Ping timeout: 265 seconds)
2016-09-17 22:24:04		[22:24]
2016-09-17 22:24:05	--	jargonmonk is now known as jmnk
2016-09-17 22:24:13	<--	navidr (uid112413@gateway/web/irccloud.com/x-begmefztojmpawzf) has quit (Quit: Connection closed for inactivity)
2016-09-17 22:25:40	-->	cr1t1cal (~cr1t1cal@60-242-215-61.static.tpgi.com.au) has joined ##c++
2016-09-17 22:26:34	-->	sphenxes (~sphenxes@192-164-155-49.hdsl.highway.telekom.at) has joined ##c++
2016-09-17 22:27:10	-->	iGeni (~textual@D97BEB67.cm-3-4d.dynamic.ziggo.nl) has joined ##c++
2016-09-17 22:27:33	<--	munch (pls@gateway/shell/elitebnc/x-cphgdhckhrpnfmoa) has quit (Ping timeout: 244 seconds)
2016-09-17 22:27:45	<--	CEnnis91 (uid3543@gateway/web/irccloud.com/x-ngfgbfejulnyshqp) has quit (Quit: Connection closed for inactivity)
2016-09-17 22:27:47	<--	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has quit (Quit: Lost terminal)
2016-09-17 22:29:54	-->	jeromelanteri (~jeromelan@cm-119-76-54-163.revip17.asianet.co.th) has joined ##c++
2016-09-17 22:31:01	<--	xaxxon (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has quit (Quit: Leaving)
2016-09-17 22:31:54	-->	SibTiger|Noteboo (~Nicholas@199-96-206-87.fidnet.com) has joined ##c++
2016-09-17 22:32:02	<--	sedeki (~textual@unaffiliated/sedeki) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-17 22:32:16	-->	munch (pls@gateway/shell/elitebnc/x-rjcabmmycutnhfts) has joined ##c++
2016-09-17 22:32:48	<--	SibTiger|Noteboo (~Nicholas@199-96-206-87.fidnet.com) has quit (Remote host closed the connection)
2016-09-17 22:33:55	<--	patteh (~patteh@unaffiliated/patteh) has quit (Ping timeout: 244 seconds)
2016-09-17 22:34:42	<--	kasper^ (~safaf@82.137.15.165) has quit (Ping timeout: 264 seconds)
2016-09-17 22:35:24	-->	rikster (~SpaceDino@62.102.148.177) has joined ##c++
2016-09-17 22:36:39	somaReverse	Hi. I cannot understand "    typedef decltype(nullptr) nullptr_t; ". Could anyone elaborate a bit?
2016-09-17 22:37:10	Eelis	what part of it don't you understand
2016-09-17 22:37:21	somaReverse	circular definition
2016-09-17 22:37:28	ubsan	nah
2016-09-17 22:37:31	<--	kw01f (~kw01f@pD9FB3223.dip0.t-ipconnect.de) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-09-17 22:37:54	ubsan	nullptr is defined by C++
2016-09-17 22:38:05	<--	ezzieyguywuf (~wolfie@unaffiliated/ezzieyguywuf) has quit (Read error: Connection reset by peer)
2016-09-17 22:38:07	ubsan	nullptr_t is just a thing defined in a headerfile
2016-09-17 22:38:18	<--	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has quit (Ping timeout: 264 seconds)
2016-09-17 22:38:24	-->	ezzieyguywuf (~wolfie@unaffiliated/ezzieyguywuf) has joined ##c++
2016-09-17 22:39:06	<--	riksteri (~SpaceDino@62.102.148.156) has quit (Ping timeout: 244 seconds)
2016-09-17 22:39:06		[22:39]
2016-09-17 22:39:11	somaReverse	isn't nullptr a nullptr_t?
2016-09-17 22:39:24	Eelis	thanks to the above declaration, it is, but otherwise no
2016-09-17 22:39:28	w3z	http://melpon.org/wandbox/permlink/HTfY2i23Ps5BQDzw ok, theres one that allows an actual UDT object as an initializer instead of just non type template params,
2016-09-17 22:39:28	ville	http://eel.is/c++draft/lex.nullptr#literal!pointer
2016-09-17 22:39:57	-->	zagabar (~zagabar@unaffiliated/zagabar) has joined ##c++
2016-09-17 22:40:08	Eelis	<< TYPE(nullptr)
2016-09-17 22:40:09	geordi	prvalue decltype(nullptr)
2016-09-17 22:40:13	ubsan	but of course, the C++ wording is weird
2016-09-17 22:40:30	somaReverse	ok, what is prvalue
2016-09-17 22:40:43	somaReverse	so there are two meanings of nullptr?
2016-09-17 22:40:44	ubsan	somaReverse: pure rvalue; it just means it's a constant
2016-09-17 22:40:45	<--	reveredge (~reveredge@111.119.209.219) has quit (Ping timeout: 276 seconds)
2016-09-17 22:40:53	<--	asc232 (~Keith@179.38.232.249) has quit (Remote host closed the connection)
2016-09-17 22:40:56	Eelis	prvalue does not mean constant
2016-09-17 22:40:59	somaReverse	it is a keyword?
2016-09-17 22:41:12	ubsan	it can also mean function returns and shuch
2016-09-17 22:41:15	ubsan	*such
2016-09-17 22:41:25	ubsan	but in this case, it's because it's a constant
2016-09-17 22:41:32	ville	somaReverse: it isn't specified that nullptr_t must be first defined and then nullptr based on that. so in terms of c++ code it could be written like this: struct __nullptr_t {}; extern __nullptr_t nullptr; typedef decltype(nullptr) nullptr_t; the previous is somewhat of pseudo code
2016-09-17 22:41:39	Eelis	somaReverse: http://eel.is/c++draft/basic.lval#fig:categories
2016-09-17 22:41:47	ville	!value categories
2016-09-17 22:41:48	nolyc	http://eel.is/c++draft/basic.lval http://en.cppreference.com/w/cpp/language/value_category http://stackoverflow.com/questions/3601602/what-are-rvalues-lvalues-xvalues-glvalues-and-prvalues
2016-09-17 22:42:14	ubsan	value categories are one of those gross parts of C++
2016-09-17 22:42:32	ubsan	that exist and mostly just work, but are very confusing
2016-09-17 22:42:39	w3z	hes a beginner, hitting him with standardese is  probably not going to help
2016-09-17 22:42:54	ubsan	yeah
2016-09-17 22:42:55	somaReverse	w3z: thanks
2016-09-17 22:43:07	-->	Kirrahe (~kirrahe@ip51cc4257.adsl-surfen.hetnet.nl) has joined ##c++
2016-09-17 22:43:33	ubsan	somaReverse: basically, it's equivalent to using int_t = decltype(0);
2016-09-17 22:43:57	-->	desi (~desi@179.43.169.162) has joined ##c++
2016-09-17 22:43:57	ubsan	somaReverse: except that there's no public nullptr type, excepting that one
2016-09-17 22:44:07	<--	munch (pls@gateway/shell/elitebnc/x-rjcabmmycutnhfts) has quit (Ping timeout: 255 seconds)
2016-09-17 22:44:23	ville	ubsan: switching from a typedef to a using wasn't probably a good idea if he is not familiar with latter
2016-09-17 22:44:34	<--	knaesig (knaesig@191-104-254-51.static.panicbnc.eu) has quit (Ping timeout: 255 seconds)
2016-09-17 22:44:44	<--	Tempesta (~Tempesta@unaffiliated/tempesta) has quit (Quit: See ya!)
2016-09-17 22:44:57	-->	BustyLoli-Chan (~BustyLoli@2601:680:c201:cd2:6043:8568:1fe6:1bcc) has joined ##c++
2016-09-17 22:45:00	somaReverse	so c++ has internally defined the nullptr and we can get the type by decltype(nullptr)?
2016-09-17 22:45:06	ubsan	somaReverse: oh, also, typedef is the worst. using is way more readable
2016-09-17 22:45:20	ubsan	somaReverse: typedef T U; is using U = T;
2016-09-17 22:45:29	ubsan	they are exactly equivalent
2016-09-17 22:45:47	 *	ubsan recommends using always
2016-09-17 22:46:01	BustyLoli-Chan	I'm trying to build something I didn't make and I've come across this error "implicit conversion from 'unsigned long long' to 'dev_t' (aka 'unsigned int') changes value from 17592185041919 to 4293964799" I have no idea what this really means and I have no idea how to fix it
2016-09-17 22:46:04	<--	iceiceice (~chris@unaffiliated/iceiceice) has quit (Ping timeout: 240 seconds)
2016-09-17 22:46:20	BustyLoli-Chan	can someone explain and offer me suggestions about what could/should be done to get this to compile?
2016-09-17 22:46:37	-->	knaesig (knaesig@191-104-254-51.static.panicbnc.eu) has joined ##c++
2016-09-17 22:47:06	somaReverse	ubsan: "nullptr is defined by C++" like int?
2016-09-17 22:47:07	<--	Adbray (~Adbtay@2001:470:1f11:def:b081:5d08:ab64:ac0a) has quit (Read error: Connection reset by peer)
2016-09-17 22:47:22	ubsan	somaReverse: a bit
2016-09-17 22:47:23	-->	reveredge (~reveredge@111.119.209.219) has joined ##c++
2016-09-17 22:47:40	ubsan	somaReverse: except that nullptr is a constant, while int is a type
2016-09-17 22:47:41	-->	hatter (~hatter@213.80.106.150) has joined ##c++
2016-09-17 22:47:46	-->	munch (pls@gateway/shell/elitebnc/x-uddzvaxmxthdwiiu) has joined ##c++
2016-09-17 22:47:46	w3z	youre implicitly converting from a wider integer type to a more narrow integer type and losing the ablity to represent the entire number ...
2016-09-17 22:47:47	somaReverse	why bother "using nullptr_t = decltype(nullptr)
2016-09-17 22:47:50	ville	somaReverse: it's unspecified what the type is exactly. the standard just says there's a constant called nullptr and that some symbol name nullptr_t. but doesn't say the nullptr_t symbol can't be formed by a typedef/using for example
2016-09-17 22:48:04	somaReverse	oh
2016-09-17 22:48:11	ubsan	nullptr is more like true or false, really
2016-09-17 22:48:28	somaReverse	thanks
2016-09-17 22:48:34	<--	somaReverse (~amos@2400:dd01:1022:30:6af7:28ff:fe78:6901) has quit (Quit: WeeChat 1.5)
2016-09-17 22:48:54	BustyLoli-Chan	is there any real way to fix that? w3z
2016-09-17 22:50:02	ville	ubsan: brave statement that the typedef and using is exactly equivalent. challenge accepted.
2016-09-17 22:50:17	-->	josef__k (~jeremy@59.102.31.229) has joined ##c++
2016-09-17 22:51:21	ville	(well actually i think they are too but i've tried to stop making that type of statements about c++ long ago)
2016-09-17 22:51:22	<--	Thorn (~Thorn@unaffiliated/thorn) has quit (Quit: Leaving)
2016-09-17 22:51:43	-->	Thorn (~Thorn@unaffiliated/thorn) has joined ##c++
2016-09-17 22:52:16	<--	t0by (~t0by@host69-200-dynamic.245-95-r.retail.telecomitalia.it) has quit (Quit: Bye!)
2016-09-17 22:52:28	ubsan	ville: excluding the ability to template
2016-09-17 22:52:37	-->	t0by (~t0by@host69-200-dynamic.245-95-r.retail.telecomitalia.it) has joined ##c++
2016-09-17 22:52:55	Eelis	geordi -c typedef int I, *P;
2016-09-17 22:52:56	geordi	Success
2016-09-17 22:53:33	-->	martiert (~martin@2.37-191-171.fiber.lynet.no) has joined ##c++
2016-09-17 22:53:41	ubsan	and the ability to that
2016-09-17 22:54:09	ubsan	one of them has the ability to template, one has the ability to gross
2016-09-17 22:54:09		[22:54]
2016-09-17 22:54:11	BustyLoli-Chan	http://pastebin.com/s00AWC7U here's my full error and source
2016-09-17 22:54:16	w3z	using F=void();
2016-09-17 22:54:40	Eelis	typedef void F();
2016-09-17 22:54:52	ville	but that's not the same thing, that's an alias template. i was thinking strictly type alias declarations.
2016-09-17 22:55:08	w3z	right, i just tried that :)
2016-09-17 22:55:15	-->	LKoen (~LKoen@2a01:e35:2eed:a430:fc10:73a5:d00:717d) has joined ##c++
2016-09-17 22:55:48	-->	CaptainPi (~edx@ipservice-092-217-024-059.092.217.pools.vodafone-ip.de) has joined ##c++
2016-09-17 22:56:05	<--	c0ff3e (Grimmy@gateway/shell/xshellz/x-cpvwmfxjihxlbbmc) has quit (Remote host closed the connection)
2016-09-17 22:56:41	ubsan	{ FUsing *x = FTypedef *y = &foo; x(); y(); } using FUsing = void(); typedef void FTypedef(); void foo() { cout << "hi "; }
2016-09-17 22:56:42	geordi	error: expected primary-expression before '*' token
2016-09-17 22:56:44	<--	dflurker1 (~dimon@metaportal.ru) has quit (Remote host closed the connection)
2016-09-17 22:56:45	<--	dflurker (~dimon@metaportal.ru) has quit (Read error: Connection reset by peer)
2016-09-17 22:57:00	ubsan	{ FTypedef *y; FUsing *x = y = &foo; x(); y(); } using FUsing = void(); typedef void FTypedef(); void foo() { cout << "hi "; }
2016-09-17 22:57:01	geordi	hi hi
2016-09-17 22:57:08	Eelis	geordi, diff
2016-09-17 22:57:08	geordi	Inserted `FTypedef *y;` before `FUsing *x`, and replaced `FTypedef *y` with y.
2016-09-17 22:57:33	-->	Akimb (~Akimb@hst-128-72.telelanas.lt) has joined ##c++
2016-09-17 22:57:53	<--	Thorn (~Thorn@unaffiliated/thorn) has quit (Read error: Connection reset by peer)
2016-09-17 22:58:04	<--	jeromelanteri (~jeromelan@cm-119-76-54-163.revip17.asianet.co.th) has quit (Ping timeout: 255 seconds)
2016-09-17 22:58:14	-->	Thorn (~Thorn@unaffiliated/thorn) has joined ##c++
2016-09-17 22:58:52	ville	as far as the names created by that particular using (alias-declaration) and a typedef they are the exact same thing.
2016-09-17 22:58:53	-->	xaxxon (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has joined ##c++
2016-09-17 22:59:06	ubsan	yeah
2016-09-17 22:59:33	xaxxon	*this is an lvalue, right?
2016-09-17 22:59:50	ubsan	xaxxon: probably
2016-09-17 22:59:55	ubsan	no guarantees
2016-09-17 23:00:08	ubsan	(yes)
2016-09-17 23:00:21	-->	jeromelanteri (~jeromelan@cm-119-76-54-163.revip17.asianet.co.th) has joined ##c++
2016-09-17 23:01:49	<--	nealshire (~Nealshire@unaffiliated/nealshire) has quit (Ping timeout: 265 seconds)
2016-09-17 23:01:59	-->	elnormous (~elnormous@91.105.17.158) has joined ##c++
2016-09-17 23:02:15	-->	dflurker (~dimon@metaportal.ru) has joined ##c++
2016-09-17 23:02:17	<--	mrallweather (~ben@sydney.techieman.net) has quit (Ping timeout: 240 seconds)
2016-09-17 23:02:47	mads-	How would I read an enum from stdin?
2016-09-17 23:04:52	-->	kaffeetrauma (~Thunderbi@85-22-37-153.ip.dokom21.de) has joined ##c++
2016-09-17 23:05:50	w3z	do you mean by its enumerator name? you dont
2016-09-17 23:05:58	w3z	uness youre converting it yourself
2016-09-17 23:06:35	ubsan	strcmp wee
2016-09-17 23:07:04	<--	elnormous (~elnormous@91.105.17.158) has quit (Ping timeout: 265 seconds)
2016-09-17 23:08:10	-->	mrallweather (~ben@sydney.techieman.net) has joined ##c++
2016-09-17 23:10:13	<--	Beetny (~Beetny@14-202-48-200.tpgi.com.au) has quit (Ping timeout: 255 seconds)
2016-09-17 23:10:13		[23:10]
2016-09-17 23:10:28	<--	ibouvousaime (~ibouvousa@41.82.54.121) has quit (Ping timeout: 265 seconds)
2016-09-17 23:10:44	w3z	no thoughts on the nifty keen array initializer i put up? :(
2016-09-17 23:11:03	w3z	(that ill never use)
2016-09-17 23:11:18	-->	martiert_ (~martin@78.37-191-164.fiber.lynet.no) has joined ##c++
2016-09-17 23:11:54	ubsan	w3z: I don't think I saw it
2016-09-17 23:11:59	-->	Beetny (~Beetny@14-202-48-200.tpgi.com.au) has joined ##c++
2016-09-17 23:12:10	<--	UnlikeSuika (~UnlikeSui@115.93.122.107) has quit (Ping timeout: 244 seconds)
2016-09-17 23:12:28	-->	UnlikeSuika (~UnlikeSui@115.93.122.107) has joined ##c++
2016-09-17 23:12:40	-->	ibouvousaime (~ibouvousa@41.82.16.227) has joined ##c++
2016-09-17 23:12:43	-->	Lowl3v3l (~Lowl3v3l@ipservice-092-208-080-178.092.208.pools.vodafone-ip.de) has joined ##c++
2016-09-17 23:12:50	w3z	bah, making me spam, http://melpon.org/wandbox/permlink/HTfY2i23Ps5BQDzw
2016-09-17 23:12:52	<--	Pyrus (~pyrus@unaffiliated/pyrus) has quit (Quit: ZNC - http://znc.in)
2016-09-17 23:12:58	-->	sophia7 (~sophia7@unaffiliated/sophia7) has joined ##c++
2016-09-17 23:12:59	<--	plee (~kurt@89.10.219.180) has quit (Read error: Connection reset by peer)
2016-09-17 23:13:03	<--	martiert_work (~martin@2.37-191-171.fiber.lynet.no) has quit (Ping timeout: 272 seconds)
2016-09-17 23:13:10	w3z	the one before that took the initializer as a non-type template param
2016-09-17 23:13:22	-->	satifant (~sati@unaffiliated/satifant) has joined ##c++
2016-09-17 23:13:25	<--	martiert (~martin@2.37-191-171.fiber.lynet.no) has quit (Ping timeout: 265 seconds)
2016-09-17 23:13:35	-->	plee (~kurt@89.10.219.180) has joined ##c++
2016-09-17 23:13:43	<--	t0by (~t0by@host69-200-dynamic.245-95-r.retail.telecomitalia.it) has quit (Quit: Bye!)
2016-09-17 23:13:57	ubsan	w3z: why don't you like
2016-09-17 23:14:00	ubsan	name your shit
2016-09-17 23:14:13	w3z	array<int,3> A=G<int>{42}; until template type deduction works then itll be array<int,3> A=G{42};
2016-09-17 23:14:13	ubsan	G, V, X
2016-09-17 23:14:33	-->	MrP[Home] (~Palsson@c-a46fe555.06-213-6e6b701.cust.bredbandsbolaget.se) has joined ##c++
2016-09-17 23:15:12	w3z	eh, i dont have any reason for non 0 non explicit initialization :)
2016-09-17 23:15:28	-->	Pyrus (~pyrus@unaffiliated/pyrus) has joined ##c++
2016-09-17 23:15:53	-->	SHC (~quassel@61.3.52.229) has joined ##c++
2016-09-17 23:19:13	<--	SHC_ (~quassel@61.3.52.229) has quit (Ping timeout: 250 seconds)
2016-09-17 23:20:57	-->	kw01f (~kw01f@pD9FB3223.dip0.t-ipconnect.de) has joined ##c++
2016-09-17 23:21:38	w3z	anyway, better than the cheesy recursive array generator that gets posted every once in a while - still useless, but better
2016-09-17 23:22:39	-->	tis_me (~duane@S0106602ad071a37a.ed.shawcable.net) has joined ##c++
2016-09-17 23:24:05	<--	zero_byte (~zer0@11.110.broadband5.iol.cz) has quit (Ping timeout: 260 seconds)
2016-09-17 23:24:17	<--	xaxxon (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has quit (Quit: Leaving)
2016-09-17 23:25:32	-->	ZMatt2 (~ZMatt2@host116-147-dynamic.61-82-r.retail.telecomitalia.it) has joined ##c++
2016-09-17 23:25:32		[23:25]
2016-09-17 23:26:08	-->	pandaant (~batman@149.201.240.93) has joined ##c++
2016-09-17 23:26:43	-->	oxbb5c (~Thunderbi@85.99.80.235) has joined ##c++
2016-09-17 23:28:26	-->	phinxy (~tehhhd@unaffiliated/phinxy) has joined ##c++
2016-09-17 23:29:41	<--	systemfault (~rcyr@unaffiliated/rcyr) has quit (Quit: Bye!)
2016-09-17 23:30:28	-->	PaSaSaP (~PaSaSaP@nat.ds14.agh.edu.pl) has joined ##c++
2016-09-17 23:31:17	<--	oxbb5c (~Thunderbi@85.99.80.235) has quit (Ping timeout: 244 seconds)
2016-09-17 23:32:53	-->	Vuks (~Vuks@89-71-244-146.dynamic.chello.pl) has joined ##c++
2016-09-17 23:32:53	<--	Vuks (~Vuks@89-71-244-146.dynamic.chello.pl) has quit (Changing host)
2016-09-17 23:32:53	-->	Vuks (~Vuks@unaffiliated/vuks69) has joined ##c++
2016-09-17 23:33:21	<--	pandaant (~batman@149.201.240.93) has quit (Ping timeout: 244 seconds)
2016-09-17 23:33:27	-->	oxbb5c (~Thunderbi@85.99.80.235) has joined ##c++
2016-09-17 23:33:55	-->	Drzacek (~Drzacek@dslb-146-060-057-092.146.060.pools.vodafone-ip.de) has joined ##c++
2016-09-17 23:34:13	<--	andyhuzhill (~Thunderbi@14.23.45.178) has quit (Quit: andyhuzhill)
2016-09-17 23:34:16	-->	Gathis (~TheBlack@unaffiliated/gathis) has joined ##c++
2016-09-17 23:35:12	-->	pandaant (~batman@149.201.240.93) has joined ##c++
2016-09-17 23:35:21	<--	bkboggy (~bkboggy@cpe-172-250-147-60.socal.res.rr.com) has quit (Quit: Leaving)
2016-09-17 23:35:31	-->	Levitator (~Meh@cpe-2606-A000-E182-FB00-A91B-BEB6-54EA-1963.dyn6.twc.com) has joined ##c++
2016-09-17 23:36:15	Levitator	If the conversion of wide strings to multi-byte strings is well-defined in terms of codecvt, then why is there no overload for std::cout << std::wstring(L"ABC"), and so forth?
2016-09-17 23:37:59	<--	zennist (~lingnan@cpc73834-dals21-2-0-cust156.20-2.cable.virginm.net) has quit (Ping timeout: 265 seconds)
2016-09-17 23:39:02	<--	ibouvousaime (~ibouvousa@41.82.16.227) has quit (Ping timeout: 265 seconds)
2016-09-17 23:39:17	-->	TMinus36 (~tminus36@98.220.203.198) has joined ##c++
2016-09-17 23:43:15	bendem	Levitator, not like it's hard to write http://melpon.org/wandbox/permlink/HI7zGIMemV2cfBLO
2016-09-17 23:43:15		[23:43]
2016-09-17 23:43:45	-->	wnklmnn (~pascal@p4FEF6401.dip0.t-ipconnect.de) has joined ##c++
2016-09-17 23:46:00	-->	plusone (~plusone@176.24.26.166) has joined ##c++
2016-09-17 23:47:24	-->	Burgundy (~burgundy@86.121.178.118) has joined ##c++
2016-09-17 23:47:31	-->	King_Hual (~failed@94.26.28.68) has joined ##c++
2016-09-17 23:47:31	<--	King_Hual (~failed@94.26.28.68) has quit (Changing host)
2016-09-17 23:47:31	-->	King_Hual (~failed@unaffiliated/king-hual/x-1207580) has joined ##c++
2016-09-17 23:48:20	Levitator	That's not the point. Anyway, it's good to know about wstring because I didn't know they added that in c++11.
2016-09-17 23:48:35	-->	Tempesta (~Tempesta@unaffiliated/tempesta) has joined ##c++
2016-09-17 23:48:41	<--	hatter (~hatter@213.80.106.150) has quit (Ping timeout: 240 seconds)
2016-09-17 23:49:04	Levitator	Also, does it bother to unshift the string stream at the end so that if you append multiple converted strings, it works properly?
2016-09-17 23:49:32	Levitator	*good to know about wstring_convert
2016-09-17 23:49:50	bendem	unshift the stream?
2016-09-17 23:50:05	-->	jefcolbi (~Thunderbi@188.166.147.168) has joined ##c++
2016-09-17 23:50:41	Levitator	Yeah. If you output multi-byte characters, it can leave the stream in a shift state.
2016-09-17 23:51:24	Levitator	If you don't unshift the stream, then subsequent appends to the string, which are not aware of the shift state, are undefined in meaning.
2016-09-17 23:52:30	bendem	do you mean, if you print half a multi-byte character?
2016-09-17 23:52:55	Levitator	Is that the only case it matters, or can you be in a shift state between characters?
2016-09-17 23:53:16	Levitator	Or the only case it happens, rather.
2016-09-17 23:53:28	-->	seishun (~Kakera@46.109.151.237) has joined ##c++
2016-09-17 23:53:57	bendem	I don't understand what you mean. What does that have to do with wide strings?
2016-09-17 23:54:13	w3z	ok, last last array initializer, i can get to array<int,3> D=F([]{return 42;});
2016-09-17 23:54:30	<--	wnklmnn (~pascal@p4FEF6401.dip0.t-ipconnect.de) has quit (Ping timeout: 244 seconds)
2016-09-17 23:54:37	Levitator	If you output a wide string to a narrow string, then you are outputting multi-byte strings with characters of variable length.
2016-09-17 23:54:44	bendem	no
2016-09-17 23:54:57	-->	Henke37 (~Henrik@81-227-16-59-no133.bredband.skanova.com) has joined ##c++
2016-09-17 23:54:58	Levitator	No? Isn't that the point of UTF-8?
2016-09-17 23:54:59	bendem	you're outputting char arrays
2016-09-17 23:55:55	-->	magnicida (~raskolnik@2a02:8109:8c80:231:ea39:dfff:fe4d:275b) has joined ##c++
2016-09-17 23:56:05	bendem	cout doesn't care about codepoints
2016-09-17 23:56:46	-->	wnklmnn (~pascal@p4FEF6401.dip0.t-ipconnect.de) has joined ##c++
2016-09-17 23:56:49	-->	DigiByteDev (~JT2@185.29.164.63) has joined ##c++
2016-09-17 23:56:52	Levitator	Well, somebody needs to care, right?
2016-09-17 23:57:06	-->	hatter (~hatter@213.80.106.150) has joined ##c++
2016-09-17 23:57:33	bendem	your terminal will get a bunch of bytes and convert back to utf-8 if it supports it
2016-09-17 23:58:10	Levitator	Ok, but when you convert from a wide string to a narrow string, you are converting to UTF-8, aren't you?
2016-09-17 23:58:30	Levitator	Because how else are you going to represent a wide string using bytes?
2016-09-17 23:58:30		[23:58]
2016-09-17 23:58:35	bendem	yes
2016-09-17 23:58:56	TinoDidriksen	Maybe UTF-8...depends on which function you use and what the locale is.
2016-09-17 23:59:20	<--	ville (~ville@176-93-55-7.bb.dnainternet.fi) has quit (Ping timeout: 265 seconds)
2016-09-17 23:59:45	bendem	well, in this case, you can hope codecvt_utf8 converts to utf-8
2016-09-18 00:00:34	bendem	what I don't understand is what you mean by shift state. cout doesn't care about multi-byte characters, there is no reason it'd keep state for that
2016-09-18 00:01:29	-->	Groscheri (~Dyonisos@unaffiliated/dyonisos) has joined ##c++
2016-09-18 00:01:30	Levitator	So anyway, are there any state transitions stored in a UTF-8 stream between the characters, or are all characters stand-alone and complete?
2016-09-18 00:01:32	TinoDidriksen	wstring_convert tracks that internally. The output has no idea what shift state is. You can't have shift state between code points - it's a thing inside code points.
2016-09-18 00:02:18	Levitator	Ahhh. Great. I was curious as to why I could find no reference to shift-state in the UTF-8 spec, and that's because it's a C++ thing.
2016-09-18 00:02:50	Levitator	They should have just called it character-state, but that would be too intuitive.
2016-09-18 00:02:54	Levitator	They aren't shifting shit.
2016-09-18 00:03:03	w3z	http://melpon.org/wandbox/permlink/nM0VDCqp2RIYx2gz //now thats funky fresh
2016-09-18 00:03:05	<--	josef__k (~jeremy@59.102.31.229) has quit (Ping timeout: 272 seconds)
2016-09-18 00:04:06	-->	z8z (~x@ac230029.ppp.asahi-net.or.jp) has joined ##c++
2016-09-18 00:04:46	bendem	Levitator, got a link to the shift-state mention?
2016-09-18 00:05:07	Levitator	http://en.cppreference.com/w/cpp/locale/codecvt/unshift
2016-09-18 00:05:58	Levitator	If what you are saying is accurate, then that begs the question of what it could possibly mean to unshift a partially written character.
2016-09-18 00:07:32	Levitator	Unless maybe what you say is true for UTF-8, and not for some other encoding, which really does have state transitions outside of characters.
2016-09-18 00:07:45	<--	karab44 (~karab44@unaffiliated/karab44) has quit (Quit: Bye bye! o/)
2016-09-18 00:07:49	TinoDidriksen	It says right there. It writes out the rest of the character.
2016-09-18 00:08:32	bendem	I think that means inserting/retrieving bytes from a codepoint
2016-09-18 00:08:36	Levitator	That doesn't make sense. Then you wouldn't need unshift() in the first place. You would just call out() again.
2016-09-18 00:08:41	bendem	which is done by shifting/unshifting
2016-09-18 00:09:37	<--	cr1t1cal (~cr1t1cal@60-242-215-61.static.tpgi.com.au) has quit (Quit: WeeChat 1.5)
2016-09-18 00:09:41	Levitator	I am fairly confident that something is missing from this picture.
2016-09-18 00:09:52	bendem	well, kind of, the only implementation I wrote was very dumb
2016-09-18 00:10:04	<--	Groscheri (~Dyonisos@unaffiliated/dyonisos) has quit (Ping timeout: 240 seconds)
2016-09-18 00:10:04	-->	Dyonisos_ (~Dyonisos@126.ip-164-132-50.eu) has joined ##c++
2016-09-18 00:11:47	Levitator	Well, I'll mess with it later. Time for teh slepes.
2016-09-18 00:11:49	<--	code_zombie (~code_zomb@136.63.230.43) has quit (Quit: Leaving)
2016-09-18 00:12:04	-->	patteh (~patteh@unaffiliated/patteh) has joined ##c++
2016-09-18 00:13:00	-->	LightYagami_ (~CanIHazMe@unaffiliated/canihazmemecats) has joined ##c++
2016-09-18 00:13:24	-->	cr1t1cal (~cr1t1cal@60-242-215-61.static.tpgi.com.au) has joined ##c++
2016-09-18 00:14:02	<--	z8z (~x@ac230029.ppp.asahi-net.or.jp) has quit (Quit: Quitting)
2016-09-18 00:14:02		[00:14]
2016-09-18 00:14:17	<--	LightYagami (~CanIHazMe@unaffiliated/canihazmemecats) has quit (Ping timeout: 240 seconds)
2016-09-18 00:14:18	<--	Drzacek (~Drzacek@dslb-146-060-057-092.146.060.pools.vodafone-ip.de) has quit (Quit: Leaving)
2016-09-18 00:14:38	-->	ScorpionJack (~Scorpion@unaffiliated/scorpionjack) has joined ##c++
2016-09-18 00:15:08	<--	pandaant (~batman@149.201.240.93) has quit (Remote host closed the connection)
2016-09-18 00:16:02	<--	tis_me (~duane@S0106602ad071a37a.ed.shawcable.net) has quit (Quit: Leaving)
2016-09-18 00:16:19	-->	nwkj86 (~nwkj86@144.66.6.51.dyn.plus.net) has joined ##c++
2016-09-18 00:16:41	<--	Levitator (~Meh@cpe-2606-A000-E182-FB00-A91B-BEB6-54EA-1963.dyn6.twc.com) has quit (Ping timeout: 248 seconds)
2016-09-18 00:18:06	<--	Sculptor_ (~Sculptor@trivialand/master/sculptor) has quit (Ping timeout: 265 seconds)
2016-09-18 00:19:32	w3z	bah, nobody around to appreciate my array initializer, hrumph
2016-09-18 00:20:22	<--	gagbo (~gagbo@unaffiliated/gagbo) has quit (Quit: Konversation terminated!)
2016-09-18 00:20:46	-->	gagbo (~gagbo@unaffiliated/gagbo) has joined ##c++
2016-09-18 00:21:48	-->	Sculptor (~Sculptor@cable-24-135-26-151.dynamic.sbb.rs) has joined ##c++
2016-09-18 00:22:59	-->	a3pq51 (~a3pq51@250-36-179-94.pool.ukrtel.net) has joined ##c++
2016-09-18 00:23:14	-->	ted_ (~tehhhd@78-68-207-219-no225.tbcn.telia.com) has joined ##c++
2016-09-18 00:24:22	<--	ted_ (~tehhhd@78-68-207-219-no225.tbcn.telia.com) has quit (Client Quit)
2016-09-18 00:24:35	<--	dpower (uid103540@gateway/web/irccloud.com/x-ybkbicjqogtmszfg) has quit (Ping timeout: 248 seconds)
2016-09-18 00:25:42	<--	phinxy (~tehhhd@unaffiliated/phinxy) has quit (Ping timeout: 264 seconds)
2016-09-18 00:27:35	-->	dpower (uid103540@gateway/web/irccloud.com/x-plmohddxcmozeduv) has joined ##c++
2016-09-18 00:28:58	-->	phinxy (~tehhhd@unaffiliated/phinxy) has joined ##c++
2016-09-18 00:29:25	<--	AkaiSora (~quassel@197.17.32.157) has quit (Ping timeout: 260 seconds)
2016-09-18 00:29:25		[00:29]
2016-09-18 00:29:44	<--	oxbb5c (~Thunderbi@85.99.80.235) has quit (Remote host closed the connection)
2016-09-18 00:30:20	-->	snyp (~Snyp@150.129.132.187) has joined ##c++
2016-09-18 00:30:54	<--	P1RATEZ (piratez@unaffiliated/p1ratez) has quit
2016-09-18 00:32:43	<--	Sculptor (~Sculptor@cable-24-135-26-151.dynamic.sbb.rs) has quit (Changing host)
2016-09-18 00:32:43	-->	Sculptor (~Sculptor@trivialand/master/sculptor) has joined ##c++
2016-09-18 00:33:42	<--	satifant (~sati@unaffiliated/satifant) has quit (Quit: Verlassend)
2016-09-18 00:39:00		[00:33]
2016-09-18 00:39:01	<--	orbiter (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has quit (Quit: Backen ist Liebe, Braten ist Leidenschaft, Dampfgaren ist Gleichgültigkeit, Dünsten ist Haß.)
2016-09-18 00:39:30	<--	pa (~pa@unaffiliated/pa) has quit (Ping timeout: 264 seconds)
2016-09-18 00:40:06	-->	biberu (~biberu@c-cf2d72d5.08-441-7570702.cust.bredbandsbolaget.se) has joined ##c++
2016-09-18 00:41:53	<--	DEElekgolo (~DEElekgol@2602:30a:2e0e:a7a0:7dc4:e083:b4d2:acf3) has quit (Read error: Connection reset by peer)
2016-09-18 00:43:41	-->	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 00:48:28	-->	Akimbas (~Akimb@hst-128-72.telelanas.lt) has joined ##c++
2016-09-18 00:48:59	-->	gidna (~gidna@94.37.200.86) has joined ##c++
2016-09-18 00:49:34	gidna	Hi
2016-09-18 00:50:36	gidna	I need to take an input like 4, 5, 12, 68, ... I tried while ( fscanf(ifp, "%d%[^,]", &array[i++]) != EOF ); but doesn't work
2016-09-18 00:52:50	-->	pa (~pa@unaffiliated/pa) has joined ##c++
2016-09-18 00:52:54	<--	Akimb (~Akimb@hst-128-72.telelanas.lt) has quit (Ping timeout: 265 seconds)
2016-09-18 00:53:47	KrzaQ	gidna: doesn't fscanf return the number of successfully read sentences?
2016-09-18 00:54:23	<--	Haruno (~Haruno@unaffiliated/haruno) has quit (Ping timeout: 272 seconds)
2016-09-18 00:54:23		[00:54]
2016-09-18 00:54:31	-->	frib (~dynorsau@host42-232-dynamic.12-79-r.retail.telecomitalia.it) has joined ##c++
2016-09-18 00:56:04	-->	RebelCoder (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has joined ##c++
2016-09-18 00:56:42	bendem	{ std::istringstream in("4, 5, 12, 68"); std::string str; while(std::getline(in, str, ',')) cout << std::stoi(str) << ' '; } // gidna
2016-09-18 00:56:43	geordi	4 5 12 68
2016-09-18 00:58:11	KrzaQ	{ int i; i = i = 42; }
2016-09-18 00:58:11	geordi	warning: operation on 'i' may be undefined
2016-09-18 00:58:13	<--	reveredge (~reveredge@111.119.209.219) has quit (Ping timeout: 255 seconds)
2016-09-18 00:58:25	KrzaQ	am I correct in saying that past C++11 this is well-defined?
2016-09-18 00:58:29	-->	riemann (~riemann@ip-222-209.ists.pl) has joined ##c++
2016-09-18 00:58:53	<--	dpower (uid103540@gateway/web/irccloud.com/x-plmohddxcmozeduv) has quit (Ping timeout: 250 seconds)
2016-09-18 00:59:13	bendem	well, geordi is -std=c++1z so well past c++11
2016-09-18 00:59:38	KrzaQ	may doesn't necessarily mean is
2016-09-18 00:59:40	-->	bumbar (~bumbar@unaffiliated/bumbar) has joined ##c++
2016-09-18 01:00:07	KrzaQ	{ int i; ++ ++ i; }
2016-09-18 01:00:08	geordi	warning: 'i' is used uninitialized in this function
2016-09-18 01:00:12	KrzaQ	right
2016-09-18 01:00:14	KrzaQ	{ int i{}; ++ ++ i; }
2016-09-18 01:00:15	geordi	<no output>
2016-09-18 01:00:33	<--	cr1t1cal (~cr1t1cal@60-242-215-61.static.tpgi.com.au) has quit (Read error: Connection reset by peer)
2016-09-18 01:00:45	bendem	geordi --precedence i = i = 42;
2016-09-18 01:00:46	geordi	error: Unexpected `;` after ` i = 42`. Expected ".", "e", "E", postfix operator, binary operator, ternary operator, or end of code.
2016-09-18 01:00:50	-->	dpower (uid103540@gateway/web/irccloud.com/x-glshscngghtituop) has joined ##c++
2016-09-18 01:01:01	KrzaQ	it's i = (i = 42)
2016-09-18 01:01:02	bendem	geordi --precedence i = i = 42
2016-09-18 01:01:03	geordi	i = (i = 42)
2016-09-18 01:01:42	<--	SoItBegins (~SoItBegin@184.71.5.142) has quit (Quit: ~be back later~)
2016-09-18 01:01:54	bendem	I'm no C++ export but I can't see how that'd be undefined
2016-09-18 01:02:16	KrzaQ	In C++03 there were no sequence points between two assignments to i, so it was UB
2016-09-18 01:02:56	KrzaQ	in C++11 and laters, i=42 is sequenced before i = inner_expression
2016-09-18 01:03:07	KrzaQ	at least that's how I interpret this
2016-09-18 01:03:22	KrzaQ	I'd love an expert opinion though :)
2016-09-18 01:03:36	-->	elnormous (~elnormous@91.105.17.158) has joined ##c++
2016-09-18 01:04:56	bendem	one day I'll read the c++ spec
2016-09-18 01:04:59	bendem	one day
2016-09-18 01:05:19	-->	HerzogDeXtEr (~farci@i59F6B5F3.versanet.de) has joined ##c++
2016-09-18 01:05:19	<--	Flakes (~Damien2@58.247.81.50) has quit (Read error: Connection reset by peer)
2016-09-18 01:05:20	Eelis	seems to me like a case of "horrible shitty code, who cares if it's UB"
2016-09-18 01:06:21	w3z	its well defined after 17
2016-09-18 01:06:34	Eelis	it'll still be horrible shitty code
2016-09-18 01:06:37	Eelis	so who cares ^_^
2016-09-18 01:06:41	w3z	well yes :)
2016-09-18 01:06:41	-->	reveredge (~reveredge@111.119.209.219) has joined ##c++
2016-09-18 01:07:06	KrzaQ	I agree about the shitty code part
2016-09-18 01:07:11	KrzaQ	as for you question: I do ;)
2016-09-18 01:07:16	KrzaQ	w3z: why only 17?
2016-09-18 01:07:30	w3z	because of the stricter order of evaluation paper
2016-09-18 01:08:25	<--	elnormous (~elnormous@91.105.17.158) has quit (Ping timeout: 250 seconds)
2016-09-18 01:08:38	w3z	Assignment expressions are evaluated from right to left. This includes compound assignments.
2016-09-18 01:08:48	KrzaQ	okay, but ++ ++ i is well-defined since 11. What's the difference?
2016-09-18 01:08:49	w3z	http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0145r3.pdf
2016-09-18 01:08:56	<--	DigiByteDev (~JT2@185.29.164.63) has quit (Quit: DigiByteDev)
2016-09-18 01:09:25	<--	hatter (~hatter@213.80.106.150) has quit (Ping timeout: 244 seconds)
2016-09-18 01:09:25		[01:09]
2016-09-18 01:09:29	<--	snyp (~Snyp@150.129.132.187) has quit (Ping timeout: 240 seconds)
2016-09-18 01:10:53	w3z	forget about your garbage, gaze in awe at my array initializer
2016-09-18 01:11:37	bendem	something wrong with array::fill?
2016-09-18 01:11:43	<--	reveredge (~reveredge@111.119.209.219) has quit (Ping timeout: 255 seconds)
2016-09-18 01:11:43	w3z	int i=0; array<int,8> I=F([&x]{return x++%4;}); //is pretty cool
2016-09-18 01:12:05	w3z	fill assigns
2016-09-18 01:12:18	w3z	F above is initialization
2016-09-18 01:12:35	bendem	ah
2016-09-18 01:12:50	-->	vitimiti (~vitimiti@unaffiliated/vitimiti) has joined ##c++
2016-09-18 01:12:56	-->	Haruno (~Haruno@unaffiliated/haruno) has joined ##c++
2016-09-18 01:13:01	w3z	F above is contexpr
2016-09-18 01:13:29	w3z	oops, now it is, http://melpon.org/wandbox/permlink/uVfC18TfehGTqRvX
2016-09-18 01:14:00	w3z	and if you throw it on godbolt, youll notice it expands to nothing
2016-09-18 01:14:28	bendem	too bad it's mostly unreadable
2016-09-18 01:15:00	KrzaQ	looks nice
2016-09-18 01:15:01	w3z	its not for philistines like you to read :)
2016-09-18 01:15:13	-->	psychicist__ (~psychicis@ip127-8-212-87.adsl2.static.versatel.nl) has joined ##c++
2016-09-18 01:16:01	-->	snyp (~Snyp@150.129.132.106) has joined ##c++
2016-09-18 01:16:02	w3z	you havent even read the spec by your own admission, tsk tsk
2016-09-18 01:16:04	KrzaQ	how do you ensure order of evaluation for the function?
2016-09-18 01:16:30	<--	Beetny (~Beetny@14-202-48-200.tpgi.com.au) has quit (Ping timeout: 244 seconds)
2016-09-18 01:16:35	w3z	its in a parameter pack expansion
2016-09-18 01:16:53	<--	gidna (~gidna@94.37.200.86) has quit (Quit: Konversation terminated!)
2016-09-18 01:16:53	w3z	return {{X<U,K>{*this}...}};
2016-09-18 01:17:13	<--	spindle (~spindle@27-33-39-55.static.tpgi.com.au) has quit (Quit: Leaving)
2016-09-18 01:18:22	KrzaQ	okay, it's the initalization
2016-09-18 01:18:42	KrzaQ	just pack expansion could expand to f(), f(), f(), f()
2016-09-18 01:18:53	KrzaQ	and order of those is unspecified in most contexts
2016-09-18 01:18:55	-->	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has joined ##c++
2016-09-18 01:19:34	w3z	i dont think youre right, pack expansions and folds have order
2016-09-18 01:20:27	w3z	the evaluation of the function happens before moving on to the next parameter
2016-09-18 01:20:35	mgaunard_	folds clearly do
2016-09-18 01:20:40	mgaunard_	but pack expansion as well?
2016-09-18 01:20:56	mgaunard_	I don't think so
2016-09-18 01:21:09	KrzaQ	{ print_all(1,2,3); } auto p = [](auto v){ cout << v; return 0; }; template<typename... Ts> void sink(Ts...){} template<typename... Ts> void print_all(Ts... ts){ sink(p(ts)...); }
2016-09-18 01:21:09	geordi	321
2016-09-18 01:21:13	KrzaQ	geordi --clang { print_all(1,2,3); } auto p = [](auto v){ cout << v; return 0; }; template<typename... Ts> void sink(Ts...){} template<typename... Ts> void print_all(Ts... ts){ sink(p(ts)...); }
2016-09-18 01:21:14	geordi	123
2016-09-18 01:21:46	Eelis	geordi, diff
2016-09-18 01:21:46	geordi	Added --clang.
2016-09-18 01:21:56	w3z	hmm
2016-09-18 01:22:36	<--	RebelCoder (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has quit (Ping timeout: 276 seconds)
2016-09-18 01:22:59	<--	LKoen (~LKoen@2a01:e35:2eed:a430:fc10:73a5:d00:717d) has quit (Quit: “It’s only logical. First you learn to talk, then you learn to think. Too bad it’s not the other way round.”)
2016-09-18 01:23:21	w3z	by virtue of the {}s then? hmm, ill have to dig
2016-09-18 01:23:25	-->	reveredge (~reveredge@115.110.126.75) has joined ##c++
2016-09-18 01:23:52	KrzaQ	yes, uniform initializer entries are evaluated from left to right
2016-09-18 01:24:04	<--	reveredge (~reveredge@115.110.126.75) has quit (Max SendQ exceeded)
2016-09-18 01:24:19	KrzaQ	array<T,S> {x(),x(),x()} would've been the same for both gcc and clang
2016-09-18 01:24:30	-->	reveredge (~reveredge@115.110.126.75) has joined ##c++
2016-09-18 01:24:30		[01:24]
2016-09-18 01:24:39	-->	somaReverse (~amos@2400:dd01:1022:30:6af7:28ff:fe78:6901) has joined ##c++
2016-09-18 01:24:47	-->	DigiByteDev (~JT2@n218250011174.netvigator.com) has joined ##c++
2016-09-18 01:24:57	<--	desi (~desi@179.43.169.162) has quit (Ping timeout: 248 seconds)
2016-09-18 01:25:01	w3z	also not sure about this guy: constexpr operator auto&&(){return move(f());}
2016-09-18 01:25:15	w3z	do i really need to return T&&
2016-09-18 01:25:45	<--	raphaelsc (~raphaelsc@177.97.192.178) has quit (Ping timeout: 250 seconds)
2016-09-18 01:25:57	<--	reveredge (~reveredge@115.110.126.75) has quit (Max SendQ exceeded)
2016-09-18 01:26:33	<--	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has quit (Remote host closed the connection)
2016-09-18 01:26:44	w3z	also, your assertion and example code dont jive well with index_sequence expansions ...not sure how they cant be guaranteed order
2016-09-18 01:26:46	-->	reveredge (~reveredge@115.110.126.75) has joined ##c++
2016-09-18 01:26:48	<--	somaReverse (~amos@2400:dd01:1022:30:6af7:28ff:fe78:6901) has quit (Client Quit)
2016-09-18 01:27:05	w3z	though clearly your snippet above isnt
2016-09-18 01:27:15	w3z	(not that it matters in this case)
2016-09-18 01:27:32	-->	RebelCoder (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has joined ##c++
2016-09-18 01:27:38	KrzaQ	I was asking how you ensured it, I wasn't saying there isn't any ordering in your code
2016-09-18 01:27:59	KrzaQ	return {{X<U,K>{*this}...}}; sounds about right though
2016-09-18 01:28:01	w3z	no i understand
2016-09-18 01:28:39	KrzaQ	Okay, then I don't ;)
2016-09-18 01:29:11	<--	andreyv (~andrey@unaffiliated/andreyv) has quit (Quit: ZNC - http://znc.in)
2016-09-18 01:29:42	KrzaQ	well. I'm going back to investigating i = i = 42; there are few more apt xkcd's than 386 duty calls
2016-09-18 01:29:43	-->	andreyv (~andrey@unaffiliated/andreyv) has joined ##c++
2016-09-18 01:29:49	-->	Adbray (~Adbtay@2001:470:1f11:def:cfc:5a67:e477:e3de) has joined ##c++
2016-09-18 01:30:20	w3z	what is there to investigate? whether it was guaranteed earlier than 17?
2016-09-18 01:30:30	KrzaQ	yes
2016-09-18 01:31:01	<--	Streusel (~Anonymous@unaffiliated/streusel) has quit (Quit: Computer has gone to sleep.)
2016-09-18 01:31:03	KrzaQ	I mean, it's clearly UB in 03, and it was my understanding that from 11 onwards it was okay
2016-09-18 01:31:29	KrzaQ	but since a knowledgeable member of ##c++ says otherwise I shall embark on a quest to educate myself
2016-09-18 01:32:08	w3z	dont hold me to it, i know its guaranteed nowish, it may have slipped in earlier
2016-09-18 01:32:17	Eelis	... or just don't write such shitty horrible code
2016-09-18 01:32:25	<--	jefcolbi (~Thunderbi@188.166.147.168) has quit (Ping timeout: 260 seconds)
2016-09-18 01:32:39	et	{ int i = 0; i = ++i; }
2016-09-18 01:32:40	geordi	warning: operation on 'i' may be undefined
2016-09-18 01:32:55	KrzaQ	I don't. I'm just trying to win internet brownie points by winning an argument
2016-09-18 01:32:56	w3z	i alreadt did a dig from 98-> for negative % in the last 24hrs :)
2016-09-18 01:32:57	et	that warning sure is overzealous
2016-09-18 01:33:18	Eelis	that warning is excellent
2016-09-18 01:33:20	-->	codcodog (~even@27.38.44.53) has joined ##c++
2016-09-18 01:33:29	<--	codcodog (~even@27.38.44.53) has quit (Max SendQ exceeded)
2016-09-18 01:33:50	KrzaQ	it would've been excellent if it said "this code is stupid, you're a bad person for writing it and you should feel bad"
2016-09-18 01:34:01	-->	codcodog (~even@27.38.44.53) has joined ##c++
2016-09-18 01:34:08	Eelis	no, /that/ would be overzealous
2016-09-18 01:34:14	w3z	if it can see that, wth does:
2016-09-18 01:34:20	<--	Gluesticky (~nobody@unaffiliated/gluesticky) has quit (Quit: This is the end. Goodbye cruel world!)
2016-09-18 01:34:21	w3z	{int&r=r;} //compile
2016-09-18 01:34:21	geordi	warning: 'r' is used uninitialized in this function
2016-09-18 01:34:24	--	codcodog is now known as Guest58145
2016-09-18 01:34:38	w3z	{} int&r=r;
2016-09-18 01:34:39	geordi	<no output>
2016-09-18 01:34:49	KrzaQ	...
2016-09-18 01:34:51	<--	seishun (~Kakera@46.109.151.237) has quit (Ping timeout: 250 seconds)
2016-09-18 01:35:05	KrzaQ	you can bind a reference to itself?
2016-09-18 01:35:10	w3z	no
2016-09-18 01:35:13	Eelis	i don't see how those have anything to do with eachother whatsoever
2016-09-18 01:35:23	et	how is "may be undefined" on something that is definitely not undefined excellent
2016-09-18 01:35:28	Eelis	but i suspect you just want to bring up some gcc thing you noticed earlier
2016-09-18 01:35:32	Eelis	regardless of relevance
2016-09-18 01:35:42	-->	seishun (~Kakera@46.109.151.237) has joined ##c++
2016-09-18 01:36:15	w3z	well no, its an identifier used on both sides of an =, but theres no sanity checking
2016-09-18 01:36:34	KrzaQ	geordi --clang {} int&r=r;
2016-09-18 01:36:35	geordi	warning: reference 'r' is not yet bound to a value when used within its own initialization
2016-09-18 01:36:37	Eelis	the = in initialization is not the same = as assignment. not by a long shot
2016-09-18 01:38:18	<--	Carbonflux (~Bob@75-172-112-206.tukw.qwest.net) has quit (Quit: Leaving)
2016-09-18 01:38:31	w3z	k, i concede that
2016-09-18 01:39:26	-->	szulak (uid162164@gateway/web/irccloud.com/x-fxpqmlcywvgiepuw) has joined ##c++
2016-09-18 01:40:54	<--	heiner_ (~heiner@ipservice-092-209-056-221.092.209.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2016-09-18 01:40:54		[01:40]
2016-09-18 01:41:48	-->	somaReverse (~amos@2400:dd01:1022:30:6af7:28ff:fe78:6901) has joined ##c++
2016-09-18 01:42:40	-->	wallbroken (~wallbroke@unaffiliated/wallbroken) has joined ##c++
2016-09-18 01:42:44	wallbroken	hi
2016-09-18 01:42:55	wallbroken	error: 'end' was not declared in this scope|
2016-09-18 01:42:57	wallbroken	why?
2016-09-18 01:43:03	wallbroken	i use code::blocks
2016-09-18 01:43:13	KrzaQ	you either wanted to use endl or forgot to include <utility>
2016-09-18 01:43:30	KrzaQ	err, <iterator>
2016-09-18 01:43:45	-->	GandalfTheWizard (~Emma@112.10.170.75) has joined ##c++
2016-09-18 01:44:22	-->	sphenxes01 (~sphenxes@192.164.155.49) has joined ##c++
2016-09-18 01:44:31	-->	KAHR-Alpha (~Alpha@AReims-652-1-76-199.w86-192.abo.wanadoo.fr) has joined ##c++
2016-09-18 01:44:35	-->	Drzacek (~Drzacek@dslb-146-060-057-092.146.060.pools.vodafone-ip.de) has joined ##c++
2016-09-18 01:44:41	-->	flavi0 (~anon@unaffiliated/flavi0) has joined ##c++
2016-09-18 01:47:36	-->	gelignite (~gelignite@x4db6a225.dyn.telefonica.de) has joined ##c++
2016-09-18 01:47:36	<--	somaReverse (~amos@2400:dd01:1022:30:6af7:28ff:fe78:6901) has quit (Quit: WeeChat 1.5)
2016-09-18 01:47:43	<--	sphenxes (~sphenxes@192-164-155-49.hdsl.highway.telekom.at) has quit (Ping timeout: 255 seconds)
2016-09-18 01:48:07	-->	AkaiSora (~quassel@197.17.32.157) has joined ##c++
2016-09-18 01:48:21	-->	somaReverse (~amos@2400:dd01:1022:30:6af7:28ff:fe78:6901) has joined ##c++
2016-09-18 01:50:25	-->	mfc (~mfc@unaffiliated/mfc) has joined ##c++
2016-09-18 01:51:17	-->	nikki93 (~nikki93@2601:645:8104:cb10:14ac:dce0:83fa:a84d) has joined ##c++
2016-09-18 01:52:01	-->	tocka (~tocka@IP-89-190-119-129.nnt.lt) has joined ##c++
2016-09-18 01:52:09	<--	plusone (~plusone@176.24.26.166) has quit (Ping timeout: 248 seconds)
2016-09-18 01:52:10	-->	dongiedong (~dongiedon@unaffiliated/dongiedong) has joined ##c++
2016-09-18 01:52:16	<--	dongiedong (~dongiedon@unaffiliated/dongiedong) has quit (Remote host closed the connection)
2016-09-18 01:52:55	KrzaQ	The side effect of updating the stored value of the left operand is sequenced after the value computations of the left and right operands.
2016-09-18 01:53:04	-->	raphaelsc (~raphaelsc@189.115.123.240) has joined ##c++
2016-09-18 01:53:18	KrzaQ	I find it really weird that assignment operator's *side* effect is the assignment itself
2016-09-18 01:54:08	KrzaQ	phew. I was looking at C11...
2016-09-18 01:54:31	Eelis	assignment is a side effect in the technical sense
2016-09-18 01:54:45	<--	somaReverse (~amos@2400:dd01:1022:30:6af7:28ff:fe78:6901) has quit (Quit: WeeChat 1.5)
2016-09-18 01:55:15	KrzaQ	so what's the primary effect? assigned value itself?
2016-09-18 01:55:26	-->	somaReverse (~amos@2400:dd01:1022:30:6af7:28ff:fe78:6901) has joined ##c++
2016-09-18 01:55:28	Eelis	there is no "primary effect". there is a return value and there are side effects
2016-09-18 01:55:35	KrzaQ	ok
2016-09-18 01:55:59	<--	somaReverse (~amos@2400:dd01:1022:30:6af7:28ff:fe78:6901) has quit (Client Quit)
2016-09-18 01:55:59		[01:55]
2016-09-18 01:56:43	<--	nikki93 (~nikki93@2601:645:8104:cb10:14ac:dce0:83fa:a84d) has quit (Ping timeout: 255 seconds)
2016-09-18 01:56:50	-->	somaReverse (~amos@2400:dd01:1022:30:6af7:28ff:fe78:6901) has joined ##c++
2016-09-18 01:57:37	KrzaQ	In all cases, the assignment is sequenced after the value computation of the right and left operands, and before the value computation of the assignment expression.
2016-09-18 01:57:45	-->	irup (~irup@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has joined ##c++
2016-09-18 01:58:02	KrzaQ	so i = (xxxx) is sequenced after computation of (xxxx)
2016-09-18 01:58:03	<--	irup (~irup@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-18 01:58:49	-->	Oazuu (~Oazuu@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has joined ##c++
2016-09-18 01:59:03	<--	Oazuu (~Oazuu@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-18 01:59:14	wallbroken	is possible that on windows vista the compier has a different behaviour than windows xp?
2016-09-18 02:00:01	-->	jbud (~jbud@ip-24-54-73-229.user.start.ca) has joined ##c++
2016-09-18 02:02:48	<--	Drzacek (~Drzacek@dslb-146-060-057-092.146.060.pools.vodafone-ip.de) has quit (Quit: Leaving)
2016-09-18 02:02:50	TinoDidriksen	No
2016-09-18 02:03:18	wallbroken	so i don't know why 2 years ago, on windows xp, all was working
2016-09-18 02:03:32	wallbroken	and now, with the same compiler, on Windows Vista i get that error
2016-09-18 02:03:51	wallbroken	begin, next, end, was not declared in this scope
2016-09-18 02:04:19	<--	snyp (~Snyp@150.129.132.106) has quit (Ping timeout: 250 seconds)
2016-09-18 02:04:38	-->	zezeon (~zezeon@121.160.145.167) has joined ##c++
2016-09-18 02:04:40	<--	CaptainPi (~edx@ipservice-092-217-024-059.092.217.pools.vodafone-ip.de) has quit (Quit: Konversation terminated!)
2016-09-18 02:04:53	-->	elnormous (~elnormous@91.105.17.158) has joined ##c++
2016-09-18 02:05:21	-->	alextai (~alextai@5.102.255.233) has joined ##c++
2016-09-18 02:05:29	<--	dpower (uid103540@gateway/web/irccloud.com/x-glshscngghtituop) has quit (Ping timeout: 265 seconds)
2016-09-18 02:05:54	-->	glenfe (~glen@unaffiliated/glenfe) has joined ##c++
2016-09-18 02:06:06	-->	Hannibal_Smith (~nico@host215-56-dynamic.44-79-r.retail.telecomitalia.it) has joined ##c++
2016-09-18 02:06:38	<--	StyxAlso (~markg@120.88.147.168) has quit (Quit: StyxAlso)
2016-09-18 02:07:48	<--	alextai_ (~alextai@141.226.144.24) has quit (Ping timeout: 244 seconds)
2016-09-18 02:08:28	-->	zero_byte (~zer0@11.110.broadband5.iol.cz) has joined ##c++
2016-09-18 02:09:21	-->	dpower (uid103540@gateway/web/irccloud.com/x-uhwuqimeojeuomwr) has joined ##c++
2016-09-18 02:09:46	<--	elnormous (~elnormous@91.105.17.158) has quit (Ping timeout: 265 seconds)
2016-09-18 02:10:06	<--	di0_ (~di0_@unaffiliated/di0-/x-5053590) has quit (Ping timeout: 264 seconds)
2016-09-18 02:14:36	-->	karab44 (~karab44@unaffiliated/karab44) has joined ##c++
2016-09-18 02:14:36		[02:14]
2016-09-18 02:16:32	<--	Adbray (~Adbtay@2001:470:1f11:def:cfc:5a67:e477:e3de) has quit (Remote host closed the connection)
2016-09-18 02:16:36	<--	Lowl3v3l (~Lowl3v3l@ipservice-092-208-080-178.092.208.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2016-09-18 02:16:57	-->	SpaceDanceCJ (~Sasha@178.121.163.43) has joined ##c++
2016-09-18 02:22:00		[02:16]
2016-09-18 02:22:21	-->	CaptainPi (~edx@ipservice-092-217-024-059.092.217.pools.vodafone-ip.de) has joined ##c++
2016-09-18 02:24:08	<--	plee (~kurt@89.10.219.180) has quit (Quit: Leaving)
2016-09-18 02:24:47	-->	zap0 (~moofy@14-201-222-143.tpgi.com.au) has joined ##c++
2016-09-18 02:24:57	-->	m_ben (~m_ben@unaffiliated/m-ben/x-5917362) has joined ##c++
2016-09-18 02:25:26	-->	di0_ (~di0_@unaffiliated/di0-/x-5053590) has joined ##c++
2016-09-18 02:28:36	<--	velco (~chill@vlan-185-78-38-153.comnet.bg) has quit (Quit: Leaving...)
2016-09-18 02:29:20	<--	SpaceDanceCJ (~Sasha@178.121.163.43) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-09-18 02:29:48	-->	Tectu (~Tectu@193.231.195.178.dynamic.wline.res.cust.swisscom.ch) has joined ##c++
2016-09-18 02:31:22	-->	hatter (~hatter@2001:470:28:537::18f) has joined ##c++
2016-09-18 02:31:53	-->	plee (~kurt@89.10.219.180) has joined ##c++
2016-09-18 02:31:59	<--	reveredge (~reveredge@115.110.126.75) has quit (Ping timeout: 265 seconds)
2016-09-18 02:32:23	<--	regedit (uid150526@gateway/web/irccloud.com/x-gajodrmaropoxvnm) has quit (Quit: Connection closed for inactivity)
2016-09-18 02:32:53	-->	iceiceice (~chris@pool-71-172-187-9.nwrknj.east.verizon.net) has joined ##c++
2016-09-18 02:36:04	-->	JayKaye (~Jay@101.164.98.27) has joined ##c++
2016-09-18 02:36:15	<--	JayKaye (~Jay@101.164.98.27) has quit (Client Quit)
2016-09-18 02:36:20	-->	velco (~chill@185.78.38.153) has joined ##c++
2016-09-18 02:38:37	-->	a3f (~a3f@unaffiliated/a3f) has joined ##c++
2016-09-18 02:38:37		[02:38]
2016-09-18 02:39:01	<--	kw01f (~kw01f@pD9FB3223.dip0.t-ipconnect.de) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-09-18 02:40:26	<--	plee (~kurt@89.10.219.180) has quit (Remote host closed the connection)
2016-09-18 02:41:25	<--	makerman (~makerman@2602:306:36c6:76c0:786f:faa6:2911:f93b) has quit (Ping timeout: 272 seconds)
2016-09-18 02:41:27	-->	plee (~kurt@89.10.219.180) has joined ##c++
2016-09-18 02:43:21	-->	tadaa (~tadaaa@nat-wh-wz4-12.rz.uni-karlsruhe.de) has joined ##c++
2016-09-18 02:43:26	-->	nkr (Elite14718@gateway/shell/elitebnc/x-gydfwuwaaxlrayoq) has joined ##c++
2016-09-18 02:43:50	nkr	hello where do I find the current most used naming conventions for C++?
2016-09-18 02:43:57	nkr	like method naming and such
2016-09-18 02:44:08	Tectu	The bible
2016-09-18 02:44:33	Tectu	people don't tend to agree on naming conventions in this world
2016-09-18 02:44:37	<--	seishun (~Kakera@46.109.151.237) has quit (Ping timeout: 250 seconds)
2016-09-18 02:44:45	nkr	Hm
2016-09-18 02:44:59	nkr	Ive seen people doing methodName(), also MethodName() etc
2016-09-18 02:45:14	Tectu	yeah, also method_name()
2016-09-18 02:46:06	Tectu	I guess one of the most-agreed on rules is that class names start with a capital letter, methods, objects/instances, variable names and other stuff always start with a lower case letter
2016-09-18 02:46:15	-->	SpaceDanceCJ (~Sasha@178.121.48.69) has joined ##c++
2016-09-18 02:46:31	nkr	yes also method_name
2016-09-18 02:46:45	nkr	both Camel Case?
2016-09-18 02:46:51	<--	rbern (~rbern@unaffiliated/rbern) has quit (Read error: Connection reset by peer)
2016-09-18 02:47:15	-->	elh9 (~elh9___@110-175-114-60.tpgi.com.au) has joined ##c++
2016-09-18 02:47:18	nkr	so ClassName and methodName
2016-09-18 02:48:13	-->	reveredge (~reveredge@111.119.209.219) has joined ##c++
2016-09-18 02:50:22	-->	seishun (~Kakera@46.109.151.237) has joined ##c++
2016-09-18 02:51:20	-->	petterk (~petterk@81.17.20.98) has joined ##c++
2016-09-18 02:51:32	-->	petterk_ (~petterk@81.17.20.98) has joined ##c++
2016-09-18 02:51:34	<--	petterk_ (~petterk@81.17.20.98) has quit (Read error: Connection reset by peer)
2016-09-18 02:52:43	<--	petterk (~petterk@81.17.20.98) has quit (Client Quit)
2016-09-18 02:52:55	-->	match_ita (~Giovanni@dynamic-adsl-78-14-227-127.clienti.tiscali.it) has joined ##c++
2016-09-18 02:52:58	-->	petterk (~petterk@81.17.20.98) has joined ##c++
2016-09-18 02:53:17	-->	nikki93 (~nikki93@c-67-169-12-37.hsd1.ca.comcast.net) has joined ##c++
2016-09-18 02:54:16	-->	Adbray (~Adbtay@2001:470:1f11:def:815e:89c2:7098:d5ed) has joined ##c++
2016-09-18 02:54:16		[02:54]
2016-09-18 02:56:23	-->	rbern (~rbern@unaffiliated/rbern) has joined ##c++
2016-09-18 02:57:16	-->	neurodrone (~neurodron@unaffiliated/neurodrone) has joined ##c++
2016-09-18 02:57:18	-->	gareppa (~gareppa@151.28.158.45) has joined ##c++
2016-09-18 02:57:35	<--	wnklmnn (~pascal@p4FEF6401.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2016-09-18 02:57:53	<--	gareppa (~gareppa@151.28.158.45) has quit (Remote host closed the connection)
2016-09-18 02:58:43	<--	nikki93 (~nikki93@c-67-169-12-37.hsd1.ca.comcast.net) has quit (Ping timeout: 248 seconds)
2016-09-18 02:58:44	-->	fahadash (uid44972@gateway/web/irccloud.com/x-icyymmnchivddjwg) has joined ##c++
2016-09-18 03:00:37	z16	Tectu: I find that convention is uncommon in C++
2016-09-18 03:00:47	-->	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has joined ##c++
2016-09-18 03:00:54	z16	Some notable big C++ projects use it (notably Qt)
2016-09-18 03:01:00	z16	Other than that I think it's rather uncommon
2016-09-18 03:01:36	z16	snake_case is probably the most prevalent in C++ (probably due to the standard and large parts of Boost using that convention)
2016-09-18 03:01:42	z16	@ nkr as well
2016-09-18 03:02:46	z16	nkr: Also, ThisCase is sometimes called PascalCase
2016-09-18 03:02:50	z16	To distinguish from camelCase
2016-09-18 03:03:02	-->	Faceuk (~Faceuk@cpc5-stre6-2-0-cust487.1-1.cable.virginm.net) has joined ##c++
2016-09-18 03:03:30	<--	zezeon (~zezeon@121.160.145.167) has quit (Quit: Leaving)
2016-09-18 03:03:52	<--	kaffeetrauma (~Thunderbi@85-22-37-153.ip.dokom21.de) has quit (Quit: kaffeetrauma)
2016-09-18 03:03:56	-->	symm- (~symm-@86.127.152.32) has joined ##c++
2016-09-18 03:05:28	-->	bebae (~bebae@s180c.studby.ntnu.no) has joined ##c++
2016-09-18 03:06:13	-->	elnormous (~elnormous@91.105.17.158) has joined ##c++
2016-09-18 03:06:43	-->	Tachyon_ (~Thunderbi@95.76.184.120) has joined ##c++
2016-09-18 03:07:23	-->	alextai_ (~alextai@94.230.84.52) has joined ##c++
2016-09-18 03:10:15	<--	alextai (~alextai@5.102.255.233) has quit (Ping timeout: 265 seconds)
2016-09-18 03:10:15		[03:10]
2016-09-18 03:10:37	<--	elnormous (~elnormous@91.105.17.158) has quit (Ping timeout: 250 seconds)
2016-09-18 03:10:52	-->	erhan_ (~erhan_@HSI-KBW-109-192-237-151.hsi6.kabel-badenwuerttemberg.de) has joined ##c++
2016-09-18 03:11:08	<--	match_ita (~Giovanni@dynamic-adsl-78-14-227-127.clienti.tiscali.it) has quit (Quit: It 's better to be optimistic and be wrong , than to be pessimistic and to be right - Albert Einstein)
2016-09-18 03:14:02	<--	Vuks (~Vuks@unaffiliated/vuks69) has quit (Ping timeout: 265 seconds)
2016-09-18 03:14:29	wallbroken	it's normal that a program that is compiled on windows vista produces a different exe than a file compiled on windows xp?
2016-09-18 03:14:40	wallbroken	or there could be some mistake?
2016-09-18 03:15:14	m_ben	!give wallbroken general
2016-09-18 03:15:16	nolyc	wallbroken: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2016-09-18 03:16:43	-->	zenx (~serj@cpc24-nmal16-2-0-cust136.19-2.cable.virginm.net) has joined ##c++
2016-09-18 03:16:57	-->	CEnnis91 (uid3543@gateway/web/irccloud.com/x-pkadssbjbjldevwt) has joined ##c++
2016-09-18 03:19:53	-->	wolfcub (~henrique_@138.185.99.1) has joined ##c++
2016-09-18 03:21:51	-->	ville (~ville@37-33-127-122.bb.dnainternet.fi) has joined ##c++
2016-09-18 03:23:55	-->	wcaa (~wcaa@cac94-8-82-245-27-76.fbx.proxad.net) has joined ##c++
2016-09-18 03:24:13	<--	wcaa (~wcaa@cac94-8-82-245-27-76.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-18 03:24:17	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 03:24:36	-->	uoej (~uoej@cac94-8-82-245-27-76.fbx.proxad.net) has joined ##c++
2016-09-18 03:24:55	<--	uoej (~uoej@cac94-8-82-245-27-76.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-18 03:25:09	-->	itaitb (~itaitb@101.71.200.159) has joined ##c++
2016-09-18 03:25:09	<--	SpaceDanceCJ (~Sasha@178.121.48.69) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-09-18 03:25:46	<--	zap0 (~moofy@14-201-222-143.tpgi.com.au) has quit (Quit: zap0)
2016-09-18 03:25:46		[03:25]
2016-09-18 03:25:47	<--	Ben2560 (~quassel@137.154.197.63) has quit (Ping timeout: 250 seconds)
2016-09-18 03:26:09	<--	erhan_ (~erhan_@HSI-KBW-109-192-237-151.hsi6.kabel-badenwuerttemberg.de) has quit (Ping timeout: 265 seconds)
2016-09-18 03:26:23	<--	itaitb (~itaitb@101.71.200.159) has quit (Changing host)
2016-09-18 03:26:23	-->	itaitb (~itaitb@unaffiliated/itaitb) has joined ##c++
2016-09-18 03:27:36	-->	tete94 (~tete94@201.206.234.253) has joined ##c++
2016-09-18 03:29:30	-->	DaFiN (~chatzilla@unaffiliated/dafin) has joined ##c++
2016-09-18 03:32:27	-->	CAPITANOOO (~CAPITANOO@host122-156-static.117-2-b.business.telecomitalia.it) has joined ##c++
2016-09-18 03:35:02	-->	Arlen0 (~Arlen0@38-103-219-200.alamobb.net) has joined ##c++
2016-09-18 03:35:14	<--	Arlen0 (~Arlen0@38-103-219-200.alamobb.net) has quit (Remote host closed the connection)
2016-09-18 03:35:16	<--	zero_byte (~zer0@11.110.broadband5.iol.cz) has quit (Ping timeout: 255 seconds)
2016-09-18 03:36:07	-->	esas (~esas@unaffiliated/esas) has joined ##c++
2016-09-18 03:36:53	-->	rebb (~rebb3@p54B80E61.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 03:37:42	rebb	what were the more "general" c++ channels again ? where one could ask things about specific software like leak-detectors etc. ?
2016-09-18 03:37:45	-->	f10__ (~flo@2001:470:52af:1:bc25:d260:4fc6:b325) has joined ##c++
2016-09-18 03:37:58	<--	Nik05 (~Nik05@unaffiliated/nik05) has quit (Remote host closed the connection)
2016-09-18 03:38:04	-->	HerzogDeXtEr1 (~farci@i59F6D1C8.versanet.de) has joined ##c++
2016-09-18 03:38:13	<--	Burga (~andrewm@124-170-168-151.dyn.iinet.net.au) has quit (Ping timeout: 244 seconds)
2016-09-18 03:39:13	Hannibal_Smith	rebb, ##C++-general
2016-09-18 03:40:19	<--	HerzogDeXtEr (~farci@i59F6B5F3.versanet.de) has quit (Ping timeout: 244 seconds)
2016-09-18 03:40:33	-->	Nik05 (~Nik05@unaffiliated/nik05) has joined ##c++
2016-09-18 03:40:47	rebb	thx
2016-09-18 03:40:47		[03:40]
2016-09-18 03:40:58	<--	theOneWho (~tom@95.166.79.163) has quit (Read error: Connection reset by peer)
2016-09-18 03:41:21	-->	Cppg2 (~Cppg@host109-149-152-50.range109-149.btcentralplus.com) has joined ##c++
2016-09-18 03:41:21	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 03:41:29	<--	Cppg (~Cppg@host109-149-152-50.range109-149.btcentralplus.com) has quit (Ping timeout: 248 seconds)
2016-09-18 03:43:23	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 03:43:33	-->	theOneWho (~tom@95.166.79.163) has joined ##c++
2016-09-18 03:44:24	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 03:44:37	<--	Anodyne (~Anodyne@178-75-129-24.bb.dnainternet.fi) has quit (Quit: WeeChat 1.5)
2016-09-18 03:45:03	<--	magnicida (~raskolnik@2a02:8109:8c80:231:ea39:dfff:fe4d:275b) has quit (Ping timeout: 265 seconds)
2016-09-18 03:45:52	-->	plusone (~plusone@176.24.26.166) has joined ##c++
2016-09-18 03:46:08	-->	f10 (~flo@2001:470:52af:1:dd12:24db:5df9:c662) has joined ##c++
2016-09-18 03:46:29	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 03:47:37	<--	DaFiN (~chatzilla@unaffiliated/dafin) has quit (Quit: ChatZilla 0.9.92 [Firefox 48.0.2/20160823121617])
2016-09-18 03:48:10	<--	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-09-18 03:48:21	-->	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 03:50:06	-->	TheScholar (~randomman@ool-44c16ddc.dyn.optonline.net) has joined ##c++
2016-09-18 03:51:28	<--	TheScholar (~randomman@ool-44c16ddc.dyn.optonline.net) has quit (Client Quit)
2016-09-18 03:52:27	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 03:54:45	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 03:55:03	<--	a3f (~a3f@unaffiliated/a3f) has quit (Quit: Zzzzz..)
2016-09-18 03:55:29	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 03:55:31	<--	munch (pls@gateway/shell/elitebnc/x-uddzvaxmxthdwiiu) has quit (Changing host)
2016-09-18 03:55:31	-->	munch (pls@unaffiliated/munch) has joined ##c++
2016-09-18 03:55:31	<--	munch (pls@unaffiliated/munch) has quit (Changing host)
2016-09-18 03:55:31	-->	munch (pls@gateway/shell/elitebnc/x-uddzvaxmxthdwiiu) has joined ##c++
2016-09-18 03:56:27	-->	dreamfighter (~awayawm@unaffiliated/dreamfighter) has joined ##c++
2016-09-18 03:56:27		[03:56]
2016-09-18 03:57:04	-->	snyp (~Snyp@150.129.132.106) has joined ##c++
2016-09-18 03:57:51	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 03:58:22	<--	Tachyon_ (~Thunderbi@95.76.184.120) has quit (Ping timeout: 244 seconds)
2016-09-18 03:58:33	<--	jaafar (~quassel@76-218-204-163.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 248 seconds)
2016-09-18 03:58:39	-->	bstamour (~user@d24-57-216-27.home.cgocable.net) has joined ##c++
2016-09-18 03:59:35	<--	MulleDK19 (MulleDK19@unaffiliated/mulledk19) has quit
2016-09-18 03:59:36	-->	CEB (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has joined ##c++
2016-09-18 03:59:38	<--	CuriousErnestBro (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has quit (Read error: Connection reset by peer)
2016-09-18 03:59:47	<--	dreamfighter (~awayawm@unaffiliated/dreamfighter) has quit (Client Quit)
2016-09-18 03:59:55	<--	ARCADIVS (~RMM@97.84.20.251) has quit (Quit: ARCADIVS)
2016-09-18 03:59:57	-->	nilof (~saolof@92-32-80-134.tn.glocalnet.net) has joined ##c++
2016-09-18 04:00:41	--	CEB is now known as CuriousErnestBro
2016-09-18 04:01:01	<--	bumbar (~bumbar@unaffiliated/bumbar) has quit (Quit: Leaving)
2016-09-18 04:01:07	-->	MulleDK19 (MulleDK19@unaffiliated/mulledk19) has joined ##c++
2016-09-18 04:03:31	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 04:04:08	-->	Pratik_Patel (~Pratik_Pa@49.207.85.7) has joined ##c++
2016-09-18 04:05:07	-->	snowkidind (~textual@pool-96-255-207-158.washdc.fios.verizon.net) has joined ##c++
2016-09-18 04:05:25	-->	Valdaris (~Gabe@75-170-43-116.eugn.qwest.net) has joined ##c++
2016-09-18 04:05:36	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 04:06:22	-->	josef__k (~jeremy@59.102.31.229) has joined ##c++
2016-09-18 04:07:45	-->	krypton_ (~krypton_@84.39.112.47) has joined ##c++
2016-09-18 04:07:57	-->	genie (~genie@157.61.159.70) has joined ##c++
2016-09-18 04:08:34	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 04:10:23	-->	a3f (~a3f@unaffiliated/a3f) has joined ##c++
2016-09-18 04:10:33	-->	Anodyne (~Anodyne@unaffiliated/anodyne) has joined ##c++
2016-09-18 04:10:46	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 04:11:02	-->	SecondForm_Glenn (~Thunderbi@108.189.70.212) has joined ##c++
2016-09-18 04:11:33	<--	kasper93 (~kasper93@unaffiliated/kasper93) has quit (Read error: Connection reset by peer)
2016-09-18 04:11:33		[04:11]
2016-09-18 04:13:13	-->	obgu (~obgu@prz29-1-78-205-58-16.fbx.proxad.net) has joined ##c++
2016-09-18 04:13:28	-->	codercodi (~codercodi@108-192-148-40.lightspeed.gnvlsc.sbcglobal.net) has joined ##c++
2016-09-18 04:13:34	<--	obgu (~obgu@prz29-1-78-205-58-16.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-18 04:13:36	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 04:14:17	-->	Hipa (~Hipa@prz29-1-78-205-58-16.fbx.proxad.net) has joined ##c++
2016-09-18 04:14:35	<--	neurodrone (~neurodron@unaffiliated/neurodrone) has quit (Quit: neurodrone)
2016-09-18 04:15:07	<--	krypton_ (~krypton_@84.39.112.47) has quit (Remote host closed the connection)
2016-09-18 04:15:27	<--	seishun (~Kakera@46.109.151.237) has quit (Disconnected by services)
2016-09-18 04:15:27	-->	kasper93 (~kasper93@unaffiliated/kasper93) has joined ##c++
2016-09-18 04:15:29	-->	seishun (~Kakera@84.237.197.96) has joined ##c++
2016-09-18 04:15:56	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 04:16:00	-->	elnormous (~elnormous@91.105.17.158) has joined ##c++
2016-09-18 04:17:30	-->	vuoto (~vuoto@80-71-135-9.u.parknet.dk) has joined ##c++
2016-09-18 04:19:27	-->	TreyG (~nobody@182.75.45.225) has joined ##c++
2016-09-18 04:20:48	-->	hey5 (~hey5@c-71-193-232-55.hsd1.or.comcast.net) has joined ##c++
2016-09-18 04:21:34	-->	edgrey (~edgrey@178.204.202.173) has joined ##c++
2016-09-18 04:22:56	-->	zmack (~zmack@pool-72-74-144-215.bstnma.fios.verizon.net) has joined ##c++
2016-09-18 04:23:14	<--	Hipa (~Hipa@prz29-1-78-205-58-16.fbx.proxad.net) has quit (Remote host closed the connection)
2016-09-18 04:23:55	<--	AkaiSora (~quassel@197.17.32.157) has quit (Read error: Connection reset by peer)
2016-09-18 04:24:01	<--	rbern (~rbern@unaffiliated/rbern) has quit (Read error: Connection reset by peer)
2016-09-18 04:24:10	-->	magnicida (~raskolnik@2a02:8109:8c80:231:ea39:dfff:fe4d:275b) has joined ##c++
2016-09-18 04:25:16	-->	pureofpure (~pureofpur@2a02:582:1a39:dc00:a019:b2c1:7769:f41e) has joined ##c++
2016-09-18 04:25:28	pureofpure	Hello, i have a question
2016-09-18 04:26:04	<--	kolobyte (~aaa@unaffiliated/kolobyte) has quit (Ping timeout: 240 seconds)
2016-09-18 04:26:05	-->	Thorn__ (~Thorn@unaffiliated/thorn) has joined ##c++
2016-09-18 04:26:08	pureofpure	i have shared global variable in my project , which i declare as extern LuaScript *luaState;
2016-09-18 04:26:17	pureofpure	but i can't use it outside any class method
2016-09-18 04:26:25	pureofpure	any suggestion?
2016-09-18 04:26:58	<--	Pratik_Patel (~Pratik_Pa@49.207.85.7) has quit (Remote host closed the connection)
2016-09-18 04:26:58		[04:26]
2016-09-18 04:27:18	KrzaQ	why can't you?
2016-09-18 04:27:26	pureofpure	i have the decleration in the header file, and the definition in source file
2016-09-18 04:27:34	<--	hoshi (~hoshi@drf244.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 240 seconds)
2016-09-18 04:27:41	pureofpure	but i can't use it outside of any class method
2016-09-18 04:27:52	pureofpure	only inside the class
2016-09-18 04:27:52	<--	petterk (~petterk@81.17.20.98) has quit (Quit: petterk)
2016-09-18 04:27:55	<--	Thorn (~Thorn@unaffiliated/thorn) has quit (Ping timeout: 255 seconds)
2016-09-18 04:28:10	--	Thorn__ is now known as Thorn
2016-09-18 04:28:25	-->	AkaiSora (~quassel@197.17.32.157) has joined ##c++
2016-09-18 04:28:42	KrzaQ	I don't understand your question
2016-09-18 04:28:52	KrzaQ	obviously it's possible to access this variable from elsewhere
2016-09-18 04:29:01	KrzaQ	so either you can but you want to prohibit that
2016-09-18 04:29:15	KrzaQ	or you're mucking something up and it doesn't work for you
2016-09-18 04:29:23	pureofpure	hmm
2016-09-18 04:29:37	pureofpure	i just want to assign a value to this variable outside of class scope
2016-09-18 04:29:39	KrzaQ	!testcase
2016-09-18 04:29:40	nolyc	A testcase is the _least_ amount of code that replicates your problem, paste it to http://coliru.stacked-crooked.com and give us the link. Do _not_ paste code to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
2016-09-18 04:30:06	-->	hoshi (~hoshi@com249.neoplus.adsl.tpnet.pl) has joined ##c++
2016-09-18 04:30:23	-->	holmser (~holmser@104.152.206.204) has joined ##c++
2016-09-18 04:31:28	-->	decimad (~deci@ip5f5be505.dynamic.kabel-deutschland.de) has joined ##c++
2016-09-18 04:31:42	<--	AkaiSora (~quassel@197.17.32.157) has quit (Read error: Connection reset by peer)
2016-09-18 04:32:04	-->	kolobyte (~aaa@unaffiliated/kolobyte) has joined ##c++
2016-09-18 04:32:13	-->	petterk (~petterk@gateway/vpn/privateinternetaccess/petterk) has joined ##c++
2016-09-18 04:32:19	<--	tocka (~tocka@IP-89-190-119-129.nnt.lt) has quit
2016-09-18 04:32:31	<--	Faceuk (~Faceuk@cpc5-stre6-2-0-cust487.1-1.cable.virginm.net) has quit (Remote host closed the connection)
2016-09-18 04:32:39	pureofpure	i got error, can't resolve type 'variable_name'
2016-09-18 04:32:54	-->	Tachyon_ (~Thunderbi@95.76.184.120) has joined ##c++
2016-09-18 04:33:42	<--	KeelOfSteel (~quassel@ti0049a400-0413.bb.online.no) has quit (Ping timeout: 276 seconds)
2016-09-18 04:34:00	-->	rbern (~rbern@unaffiliated/rbern) has joined ##c++
2016-09-18 04:34:06	decimad	that sounds as if you put a variable name where a type name belongs :)
2016-09-18 04:34:18	<--	bushido_ (~bushido@unaffiliated/bursihido) has quit (Ping timeout: 265 seconds)
2016-09-18 04:34:30	-->	KeelOfSteel (~quassel@ti0049a400-0413.bb.online.no) has joined ##c++
2016-09-18 04:34:45	-->	MaBunny (~Peter@117.194.197.7) has joined ##c++
2016-09-18 04:35:13	<--	symm- (~symm-@86.127.152.32) has quit (Quit: Leaving...)
2016-09-18 04:36:11	--	MaBunny is now known as OtakuSenpai
2016-09-18 04:37:36	<--	gioerr (~gioerr@athedsl-4535808.home.otenet.gr) has quit (Ping timeout: 276 seconds)
2016-09-18 04:38:15	<--	petterk (~petterk@gateway/vpn/privateinternetaccess/petterk) has quit (Quit: petterk)
2016-09-18 04:38:35	<--	hey5 (~hey5@c-71-193-232-55.hsd1.or.comcast.net) has quit (Ping timeout: 272 seconds)
2016-09-18 04:38:42	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 04:40:44	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 04:40:47	-->	wanderman (~wanderman@unaffiliated/wanderman) has joined ##c++
2016-09-18 04:40:50	<--	CAPITANOOO (~CAPITANOO@host122-156-static.117-2-b.business.telecomitalia.it) has quit (Quit: CAPITANOOO)
2016-09-18 04:41:21	-->	sedeki (~textual@unaffiliated/sedeki) has joined ##c++
2016-09-18 04:41:57	somaReverse	Hi. Why should wh
2016-09-18 04:42:17	somaReverse	why should we put typename before dependent types?
2016-09-18 04:42:17		[04:42]
2016-09-18 04:42:34	<--	bstamour (~user@d24-57-216-27.home.cgocable.net) has quit (Remote host closed the connection)
2016-09-18 04:43:18	-->	TehWan (~TehWan@modemcable033.235-81-70.mc.videotron.ca) has joined ##c++
2016-09-18 04:43:20	<--	sedeki (~textual@unaffiliated/sedeki) has quit (Client Quit)
2016-09-18 04:44:03	<--	iceiceice (~chris@pool-71-172-187-9.nwrknj.east.verizon.net) has quit (Ping timeout: 240 seconds)
2016-09-18 04:46:31	decimad	somaReverse: The short answer is: because that's what the standard asks you to do.
2016-09-18 04:47:06	KrzaQ	because the parser thinks it's a value otherwise also works
2016-09-18 04:48:22	-->	de-facto (~de-facto@unaffiliated/de-facto) has joined ##c++
2016-09-18 04:49:00	-->	metachr0n (~nobody@78.1.broadband13.iol.cz) has joined ##c++
2016-09-18 04:49:34	<--	a3f (~a3f@unaffiliated/a3f) has quit (Quit: Zzzzz..)
2016-09-18 04:50:39	<--	metachr0n (~nobody@78.1.broadband13.iol.cz) has quit (Client Quit)
2016-09-18 04:53:21	<--	bigpet (uid25664@gateway/web/irccloud.com/x-mdrnurfzqpolhywq) has quit (Quit: Connection closed for inactivity)
2016-09-18 04:54:10	<--	karab44 (~karab44@unaffiliated/karab44) has quit (Quit: Bye bye! o/)
2016-09-18 04:54:42	<--	frib (~dynorsau@host42-232-dynamic.12-79-r.retail.telecomitalia.it) has quit (Quit: Leaving)
2016-09-18 04:55:37	-->	AkaiSora (~quassel@197.17.3.160) has joined ##c++
2016-09-18 04:56:16	<--	hk238 (~kvirc@unaffiliated/hk238) has quit (Ping timeout: 255 seconds)
2016-09-18 04:56:57	-->	swnc (~swnc@port-92-204-17-23.dynamic.qsc.de) has joined ##c++
2016-09-18 04:57:00	-->	karts (43a45b4e@gateway/web/cgi-irc/kiwiirc.com/ip.67.164.91.78) has joined ##c++
2016-09-18 04:59:21	-->	karab44 (~karab44@unaffiliated/karab44) has joined ##c++
2016-09-18 04:59:21		[04:59]
2016-09-18 04:59:44	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 05:01:13	<--	refbot (~MotoBot@unaffiliated/moto-chan/bot/refbot) has quit (Ping timeout: 255 seconds)
2016-09-18 05:01:21	somaReverse	KrzaQ: what do you mean by "otherwise also works"?
2016-09-18 05:01:34	-->	snover (~Adium@unaffiliated/snover) has joined ##c++
2016-09-18 05:01:40	KrzaQ	"because the parser thinks it's a value otherwise" also works
2016-09-18 05:01:55	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 05:02:07	<--	plusone (~plusone@176.24.26.166) has quit (Ping timeout: 255 seconds)
2016-09-18 05:02:18	<--	Motoko11 (~Rob@unaffiliated/moto-chan) has quit (Ping timeout: 264 seconds)
2016-09-18 05:02:48	-->	refbot (~MotoBot@unaffiliated/moto-chan/bot/refbot) has joined ##c++
2016-09-18 05:02:53	-->	Moto-chan (~Rob@78.18.1.146) has joined ##c++
2016-09-18 05:02:53	<--	Moto-chan (~Rob@78.18.1.146) has quit (Changing host)
2016-09-18 05:02:53	-->	Moto-chan (~Rob@unaffiliated/moto-chan) has joined ##c++
2016-09-18 05:03:02	GandalfTheWizard	hi, is there a high performance cout app?
2016-09-18 05:03:04	<--	psychicist__ (~psychicis@ip127-8-212-87.adsl2.static.versatel.nl) has quit (Ping timeout: 240 seconds)
2016-09-18 05:03:22	GandalfTheWizard	the cmd.exe on windows is too slow to use
2016-09-18 05:03:33	somaReverse	KrzaQ: huh
2016-09-18 05:03:36	Hello71	lol
2016-09-18 05:04:22	GandalfTheWizard	any such application that redirect the std::cout to it's own rendering system? possibly use gpu?
2016-09-18 05:05:26	KrzaQ	somaReverse: that's the actual reason why typename is needed. The standard just reflects the implementation detail of CFront
2016-09-18 05:05:26	decimad	Are you sure you are not capped out by using std::endl?
2016-09-18 05:06:14	decimad	KrzaQ: "needed" as in standard parlance. It is very well possible to write a compiler that gets it done without.
2016-09-18 05:06:52	somaReverse	KrzaQ: Ok, what is CFront?
2016-09-18 05:06:56	KrzaQ	decimad: I mentioned CFront for a reason :)
2016-09-18 05:07:08	<--	josef__k (~jeremy@59.102.31.229) has quit (Ping timeout: 265 seconds)
2016-09-18 05:07:12	GandalfTheWizard	std::endl?
2016-09-18 05:07:22	decimad	std::endl implies std::flush
2016-09-18 05:07:46	decimad	as opposed to using "\n"
2016-09-18 05:07:47	KrzaQ	somaReverse: the first C++ compiler, if you can call it that, by Bjarne Stroustrup
2016-09-18 05:08:01	-->	kasper^ (~safaf@82.137.12.222) has joined ##c++
2016-09-18 05:08:21	GandalfTheWizard	in my currently running case: with std::endl=14s, without std::endl=8s, no std::cout at all=0.5s
2016-09-18 05:08:52	somaReverse	Thanks
2016-09-18 05:09:04	KrzaQ	GandalfTheWizard: try with std::ios::sync_with_stdio(false)
2016-09-18 05:09:25	-->	pylbrecht (~pylbrecht@hotsplots-blu1-ip14.cust.syseleven.net) has joined ##c++
2016-09-18 05:09:30	<--	dindinx (~dindinx@dindinx.net) has quit (Changing host)
2016-09-18 05:09:30	-->	dindinx (~dindinx@unaffiliated/dindinx) has joined ##c++
2016-09-18 05:09:48	-->	allen29 (~all@unaffiliated/allen29) has joined ##c++
2016-09-18 05:09:55	decimad	If it takes 8 seconds to spit out the text, it will probably not be needed anyways and could be written to a file instead ;)
2016-09-18 05:09:56	-->	zipace (~anon@unaffiliated/zipace) has joined ##c++
2016-09-18 05:10:42	GandalfTheWizard	I think I should move my code in to my old opengl app, and dump those dump those info there, it should be way faster
2016-09-18 05:11:13	decimad	go ahead!
2016-09-18 05:12:42	<--	VeXocide (vexocide@toad.stack.nl) has quit (Changing host)
2016-09-18 05:12:42	-->	VeXocide (vexocide@unaffiliated/vexocide) has joined ##c++
2016-09-18 05:13:48	-->	SpaceDanceCJ (~Sasha@178.121.100.159) has joined ##c++
2016-09-18 05:14:07	<--	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has quit (Ping timeout: 250 seconds)
2016-09-18 05:14:15	-->	blackbeard420 (~blackbear@dynamic-acs-24-154-82-158.zoominternet.net) has joined ##c++
2016-09-18 05:14:25	-->	josef__k (~jeremy@59.102.31.229) has joined ##c++
2016-09-18 05:14:25		[05:14]
2016-09-18 05:16:26	<--	zmack (~zmack@pool-72-74-144-215.bstnma.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-18 05:16:30	<--	fahadash (uid44972@gateway/web/irccloud.com/x-icyymmnchivddjwg) has quit (Quit: Connection closed for inactivity)
2016-09-18 05:16:49	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 05:17:07	<--	chardan (~chardan@c-73-157-202-190.hsd1.or.comcast.net) has quit (Quit: Leaving)
2016-09-18 05:17:29	<--	Sasasu (~li@180.212.140.29) has quit (Quit: WeeChat 1.5)
2016-09-18 05:17:44	-->	dreamfighter (~awayawm@173-31-201-54.client.mchsi.com) has joined ##c++
2016-09-18 05:17:47	<--	snyp (~Snyp@150.129.132.106) has quit (Ping timeout: 265 seconds)
2016-09-18 05:18:00	-->	xnavor (~xnavor@78-70-4-240-no171.business.telia.com) has joined ##c++
2016-09-18 05:18:37	-->	neurodrone (~neurodron@unaffiliated/neurodrone) has joined ##c++
2016-09-18 05:18:47	GandalfTheWizard	std::ios::sync_with_stdio(false); has almost no effect
2016-09-18 05:18:58	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 05:19:21	GandalfTheWizard	I believe such app is useful: a standalone windows uses gpu for dump debug info
2016-09-18 05:19:26	GandalfTheWizard	possible use boost
2016-09-18 05:19:41	GandalfTheWizard	boost's shared memory
2016-09-18 05:20:04	GandalfTheWizard	connect any code that will dump info
2016-09-18 05:20:56	<--	seishun (~Kakera@84.237.197.96) has quit (Disconnected by services)
2016-09-18 05:21:02	-->	seishun (~Kakera@46.109.151.237) has joined ##c++
2016-09-18 05:21:43	<--	RebelCoder (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has quit (Ping timeout: 265 seconds)
2016-09-18 05:21:46	-->	makerman (~makerman@2602:306:36c6:76c0:786f:faa6:2911:f93b) has joined ##c++
2016-09-18 05:21:55	mgaunard_	GandalfTheWizard: define "high performance"
2016-09-18 05:22:32	<--	stomper_ (~stomper_@ool-45751986.dyn.optonline.net) has quit (Quit: Bye!)
2016-09-18 05:22:46	mgaunard_	if you want to dump information to a log or stdout without slowing down your application, the best solution is to do that asynchronously.
2016-09-18 05:22:48	GandalfTheWizard	I believe the bottleneck of std::cout is rendering, if so, an opengl can help
2016-09-18 05:23:14	-->	strelox (~user@p200300754F755C00B47116A33D9CA03F.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 05:24:22	mgaunard_	rendering the text? that's done by the terminal
2016-09-18 05:24:47	mgaunard_	just redirect to a file and you eliminate any slowness caused by this
2016-09-18 05:25:08	GandalfTheWizard	but i love to watch..
2016-09-18 05:25:52	GandalfTheWizard	in my case, the windows cmd.exe used almost 8 seconds to render 155000 characters
2016-09-18 05:28:40	<--	hatter (~hatter@2001:470:28:537::18f) has quit (Ping timeout: 255 seconds)
2016-09-18 05:28:48	<--	makerman (~makerman@2602:306:36c6:76c0:786f:faa6:2911:f93b) has quit (Quit: AFK)
2016-09-18 05:31:17	<--	karts (43a45b4e@gateway/web/cgi-irc/kiwiirc.com/ip.67.164.91.78) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-09-18 05:31:17		[05:31]
2016-09-18 05:31:44	<--	forgottenone (~forgotten@195.142.43.212) has quit (Quit: Konversation terminated!)
2016-09-18 05:32:00	-->	wnklmnn (~pascal@p4FEF6401.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 05:32:16	<--	josef__k (~jeremy@59.102.31.229) has quit (Ping timeout: 265 seconds)
2016-09-18 05:32:46	-->	forgottenone (~forgotten@195.142.43.212) has joined ##c++
2016-09-18 05:33:04	-->	karts (43a45b4e@gateway/web/cgi-irc/kiwiirc.com/ip.67.164.91.78) has joined ##c++
2016-09-18 05:33:19	Soap__	I'm fixing some old codebase, and I often see std::cout << std::cout
2016-09-18 05:33:35	Soap__	which in C++98 used to call the operator void* conversion thing
2016-09-18 05:33:47	Soap__	question is, why would people even do such a thing?
2016-09-18 05:34:13	<--	theOneWho (~tom@95.166.79.163) has quit
2016-09-18 05:34:29	-->	bigpet (uid25664@gateway/web/irccloud.com/x-mvrwbxvoepvooagm) has joined ##c++
2016-09-18 05:35:03	<--	karts (43a45b4e@gateway/web/cgi-irc/kiwiirc.com/ip.67.164.91.78) has quit (Client Quit)
2016-09-18 05:35:27	-->	hatter (~hatter@2001:470:28:537::18f) has joined ##c++
2016-09-18 05:37:02	-->	cbot (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2016-09-18 05:37:12	-->	zennist (~lingnan@cpc73834-dals21-2-0-cust156.20-2.cable.virginm.net) has joined ##c++
2016-09-18 05:37:25	<--	kasper^ (~safaf@82.137.12.222) has quit (Ping timeout: 244 seconds)
2016-09-18 05:38:45	-->	lakin (~lakin@d108-173-185-33.abhsia.telus.net) has joined ##c++
2016-09-18 05:39:14	<--	Nitrodev (~Nitrodev@85-23-77-207.bb.dnainternet.fi) has quit (Read error: Connection reset by peer)
2016-09-18 05:40:18	-->	asc232 (~Keith@179.38.236.154) has joined ##c++
2016-09-18 05:41:51	<--	zennist (~lingnan@cpc73834-dals21-2-0-cust156.20-2.cable.virginm.net) has quit (Ping timeout: 250 seconds)
2016-09-18 05:43:48	SpaceDanceCJ	https://1drv.ms/u/s!Atb8xCtb-XJQihFhTNWTqkHropWg
2016-09-18 05:43:54	ubsan	Soap__: wut
2016-09-18 05:44:01	ubsan	Soap__: that's so gross
2016-09-18 05:44:16	Soap__	ubsan: totally is, but we see this a lot in gentoo
2016-09-18 05:44:30	Soap__	and I wonder what people want to achieve with that?
2016-09-18 05:44:49	-->	zennist (~lingnan@cpc73834-dals21-2-0-cust156.20-2.cable.virginm.net) has joined ##c++
2016-09-18 05:45:50	<--	Tachyon_ (~Thunderbi@95.76.184.120) has quit (Ping timeout: 244 seconds)
2016-09-18 05:45:58	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Remote host closed the connection)
2016-09-18 05:46:10	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-18 05:46:28	ubsan	Soap__: obv. they're trying to give people a path to sploitation
2016-09-18 05:46:28		[05:46]
2016-09-18 05:46:49	Soap__	ubsan: why?
2016-09-18 05:46:58	Soap__	because they can see the raw pointers?
2016-09-18 05:47:21	ubsan	because you can map off of where std::cout is, and the version of libstdc++
2016-09-18 05:47:26	ubsan	where everything is
2016-09-18 05:47:46	<--	CEnnis91 (uid3543@gateway/web/irccloud.com/x-pkadssbjbjldevwt) has quit (Quit: Connection closed for inactivity)
2016-09-18 05:48:26	<--	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-09-18 05:48:35	-->	treehug88 (~textual@cpe-68-173-227-135.nyc.res.rr.com) has joined ##c++
2016-09-18 05:48:59	-->	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 05:49:21	<--	asc232 (~Keith@179.38.236.154) has quit (Quit: Saliendo)
2016-09-18 05:49:32	<--	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-09-18 05:49:56	-->	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 05:52:08	-->	symm- (~symm-@86.127.152.32) has joined ##c++
2016-09-18 05:52:22	-->	EvilPenguin (~EvilPengu@2605:e000:6189:9600:b003:ae97:30fc:2db) has joined ##c++
2016-09-18 05:54:25	-->	PJBoy (~PJBoy_@unaffiliated/pjboy) has joined ##c++
2016-09-18 05:55:30	<--	holmser (~holmser@104.152.206.204) has quit (Ping timeout: 260 seconds)
2016-09-18 05:57:00	<--	EvilPenguin (~EvilPengu@2605:e000:6189:9600:b003:ae97:30fc:2db) has quit (Ping timeout: 265 seconds)
2016-09-18 05:57:54	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 06:00:18	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 06:01:15	Bigcheese	Soap__: I'm confused how that got there.
2016-09-18 06:01:51	Bigcheese	No reasonable person could have typed that.
2016-09-18 06:01:51		[06:01]
2016-09-18 06:02:02	<--	f10 (~flo@2001:470:52af:1:dd12:24db:5df9:c662) has quit (Read error: No route to host)
2016-09-18 06:02:29	-->	f10 (~flo@2001:470:52af:1:dd12:24db:5df9:c662) has joined ##c++
2016-09-18 06:03:46	-->	ibouvousaime (~ibouvousa@41.82.16.227) has joined ##c++
2016-09-18 06:04:06	-->	kaffeetrauma (~Thunderbi@2a03:2260:300a:1000:916:6d34:d33a:429) has joined ##c++
2016-09-18 06:05:00	<--	gagbo (~gagbo@unaffiliated/gagbo) has quit (Quit: Konversation terminated!)
2016-09-18 06:05:05	<--	genie (~genie@157.61.159.70) has quit (Quit: leaving)
2016-09-18 06:06:39	Soap__	Bigcheese: https://bugs.gentoo.org/show_bug.cgi?id=594060
2016-09-18 06:06:53	Soap__	honestly, sometimes I wonder what the hell people program
2016-09-18 06:07:26	<--	anuxivm (~anuxi@92.185.154.236) has left ##c++
2016-09-18 06:10:00	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 06:11:25	Bigcheese	Amazing.
2016-09-18 06:12:11	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 06:12:13	-->	oxbb5c (~Thunderbi@95.13.166.47) has joined ##c++
2016-09-18 06:12:48	-->	Tachyon_ (~Thunderbi@95.76.184.120) has joined ##c++
2016-09-18 06:15:02	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 06:15:39	<--	paule32_ (~jens@79.251.53.2) has quit (Quit: Leaving)
2016-09-18 06:15:55	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Remote host closed the connection)
2016-09-18 06:16:13	-->	zmack (~zmack@pool-72-74-144-215.bstnma.fios.verizon.net) has joined ##c++
2016-09-18 06:16:35	<--	Guest58145 (~even@27.38.44.53) has quit (Quit: Leaving)
2016-09-18 06:17:21	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 06:17:21		[06:17]
2016-09-18 06:18:35	-->	ferdna (~ferdna@cpe-69-23-141-130.elp.res.rr.com) has joined ##c++
2016-09-18 06:18:45	<--	Appleman1234 (~Appleman1@KD119104050103.au-net.ne.jp) has quit (Ping timeout: 265 seconds)
2016-09-18 06:18:48	-->	pkpipaliya (744a6b85@gateway/web/freenode/ip.116.74.107.133) has joined ##c++
2016-09-18 06:18:48	Bigcheese	also, wtf, VS can now officially target Linux
2016-09-18 06:21:01	pkpipaliya	anyone?
2016-09-18 06:21:07	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 06:21:10	<--	blackwind_123 (~IceChat9@59.99.106.2) has quit (Read error: Connection reset by peer)
2016-09-18 06:21:15	Bigcheese	pkpipaliya: there are like 1000 people here
2016-09-18 06:21:22	pkpipaliya	handle_request(       request,       [](json::value & jvalue, json::value::field_map & answer)       {          for (auto const & e : jvalue)
2016-09-18 06:21:35	pkpipaliya	Getting error in for loop
2016-09-18 06:21:42	pkpipaliya	no suitable begin function
2016-09-18 06:21:52	pkpipaliya	can any one of 1000 help me?
2016-09-18 06:21:54	urdh	!give pkpipaliya general
2016-09-18 06:21:55	nolyc	pkpipaliya: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2016-09-18 06:22:05	pkpipaliya	Ok. Thanks
2016-09-18 06:22:06	urdh	or maybe basic even
2016-09-18 06:22:08	urdh	!basic
2016-09-18 06:22:09	nolyc	Please ask your question in ##C++-basic, as it involves the fundamental basics of the language.
2016-09-18 06:22:16	urdh	or ask whoever is making that JSON library
2016-09-18 06:22:47	<--	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-09-18 06:23:04	-->	Jiwan (~jguegant@213-64-65-147-no264.tbcn.telia.com) has joined ##c++
2016-09-18 06:23:33	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 06:23:46	-->	pavshn (~pavshn@ppp95-165-153-84.pppoe.spdop.ru) has joined ##c++
2016-09-18 06:24:11	-->	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 06:24:37	<--	Haruno (~Haruno@unaffiliated/haruno) has quit (Ping timeout: 244 seconds)
2016-09-18 06:24:48	<--	strelox (~user@p200300754F755C00B47116A33D9CA03F.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-09-18 06:26:15	-->	strelox (~user@p200300754F755C00B47116A33D9CA03F.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 06:26:30	-->	blackwind_123 (~IceChat9@59.99.105.150) has joined ##c++
2016-09-18 06:29:30	-->	dj_pi (~dj@c-73-191-212-56.hsd1.mi.comcast.net) has joined ##c++
2016-09-18 06:29:56	-->	pbor (~paolo@host94-89-dynamic.5-87-r.retail.telecomitalia.it) has joined ##c++
2016-09-18 06:30:12	<--	Lillia7 (~lillia7@d3079310.t-net.ne.jp) has quit (Quit: Leaving...)
2016-09-18 06:31:57	<--	oxbb5c (~Thunderbi@95.13.166.47) has quit (Ping timeout: 272 seconds)
2016-09-18 06:32:05	<--	kaffeetrauma (~Thunderbi@2a03:2260:300a:1000:916:6d34:d33a:429) has quit (Quit: kaffeetrauma)
2016-09-18 06:32:06	-->	oxbb5c1 (~Thunderbi@95.10.223.190) has joined ##c++
2016-09-18 06:33:11	-->	pioiytr (~pioiytr@2601:246:8000:8380:65c2:b44a:d9e3:b2ef) has joined ##c++
2016-09-18 06:33:11		[06:33]
2016-09-18 06:33:22	<--	ropeney (~ropeney@CPE-58-170-196-106.lns2.lon.bigpond.net.au) has quit (Ping timeout: 244 seconds)
2016-09-18 06:34:16	-->	Nitrodev (~Nitrodev@85-23-77-207.bb.dnainternet.fi) has joined ##c++
2016-09-18 06:34:27	--	oxbb5c1 is now known as oxbb5c
2016-09-18 06:35:01	-->	pioiytr_ (~pioiytr@c-73-51-13-55.hsd1.il.comcast.net) has joined ##c++
2016-09-18 06:35:08	-->	fahadash (uid44972@gateway/web/irccloud.com/x-jdpdpcenxzzzxjgz) has joined ##c++
2016-09-18 06:35:14	-->	kaffeetrauma (~Thunderbi@2a03:2260:300a:1000:916:6d34:d33a:429) has joined ##c++
2016-09-18 06:35:43	<--	hatter (~hatter@2001:470:28:537::18f) has quit (Ping timeout: 255 seconds)
2016-09-18 06:36:33	-->	daniel-s (~daniel-s@AToulouse-652-1-284-209.w109-220.abo.wanadoo.fr) has joined ##c++
2016-09-18 06:36:45	<--	SHC (~quassel@61.3.52.229) has quit (Remote host closed the connection)
2016-09-18 06:37:01	<--	pkpipaliya (744a6b85@gateway/web/freenode/ip.116.74.107.133) has left ##c++
2016-09-18 06:37:18	-->	sarbs (~sarbs@c-67-182-146-128.hsd1.wa.comcast.net) has joined ##c++
2016-09-18 06:38:52	<--	pioiytr (~pioiytr@2601:246:8000:8380:65c2:b44a:d9e3:b2ef) has quit (Ping timeout: 255 seconds)
2016-09-18 06:38:59	<--	biberu (~biberu@c-cf2d72d5.08-441-7570702.cust.bredbandsbolaget.se) has quit (Ping timeout: 248 seconds)
2016-09-18 06:39:33	<--	karab44 (~karab44@unaffiliated/karab44) has quit (Quit: Bye bye! o/)
2016-09-18 06:39:35	<--	CaptainPi (~edx@ipservice-092-217-024-059.092.217.pools.vodafone-ip.de) has quit (Quit: Konversation terminated!)
2016-09-18 06:40:00	<--	DigiByteDev (~JT2@n218250011174.netvigator.com) has quit (Quit: DigiByteDev)
2016-09-18 06:40:42	-->	RebelCoder (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has joined ##c++
2016-09-18 06:40:54	<--	Akimbas (~Akimb@hst-128-72.telelanas.lt) has quit (Ping timeout: 265 seconds)
2016-09-18 06:41:00	-->	SibTiger|Tablet (~Nicholas@199-96-206-87.fidnet.com) has joined ##c++
2016-09-18 06:41:48	<--	tete94 (~tete94@201.206.234.253) has quit (Quit: Leaving)
2016-09-18 06:41:51	-->	fca (~fca@LFbn-1-4844-83.w92-171.abo.wanadoo.fr) has joined ##c++
2016-09-18 06:42:06	<--	fca (~fca@LFbn-1-4844-83.w92-171.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-18 06:42:08	-->	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has joined ##c++
2016-09-18 06:43:03	<--	OtakuSenpai (~Peter@117.194.197.7) has quit (Ping timeout: 276 seconds)
2016-09-18 06:43:05	<--	madpat (~AndChat57@dyndsl-037-138-113-065.ewe-ip-backbone.de) has quit (Read error: Connection reset by peer)
2016-09-18 06:43:10	-->	AndChat|578100 (~AndChat57@dyndsl-037-138-113-065.ewe-ip-backbone.de) has joined ##c++
2016-09-18 06:43:23	-->	kasper^ (~safaf@82.137.9.8) has joined ##c++
2016-09-18 06:43:35	-->	Iecoo (~Iecoo@LFbn-1-4844-83.w92-171.abo.wanadoo.fr) has joined ##c++
2016-09-18 06:43:52	<--	Iecoo (~Iecoo@LFbn-1-4844-83.w92-171.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-18 06:44:16	<--	Munnu (~timo@91-158-145-247.elisa-laajakaista.fi) has quit (Quit: Follow the white rabbit. Compile the desert of the real. 3301.)
2016-09-18 06:45:05	<--	RebelCoder (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has quit (Ping timeout: 240 seconds)
2016-09-18 06:45:35	-->	Pac_ (~textual@2a01:e35:2f39:a610:99a4:15d7:3c0:596e) has joined ##c++
2016-09-18 06:45:35	-->	DingoSaar (~hagen@pD9E08AEF.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 06:46:06	<--	CuriousErnestBro (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has quit (Ping timeout: 264 seconds)
2016-09-18 06:46:10	-->	regedit (uid150526@gateway/web/irccloud.com/x-cuydonczeudsowui) has joined ##c++
2016-09-18 06:46:16	-->	Vuks (~Vuks@unaffiliated/vuks69) has joined ##c++
2016-09-18 06:46:33	<--	ibouvousaime (~ibouvousa@41.82.16.227) has quit (Ping timeout: 248 seconds)
2016-09-18 06:46:52	<--	zennist (~lingnan@cpc73834-dals21-2-0-cust156.20-2.cable.virginm.net) has quit (Quit: Leaving.)
2016-09-18 06:46:58	-->	ibouvousaime (~ibouvousa@41.82.16.227) has joined ##c++
2016-09-18 06:47:21	<--	d_himro (~none@178.124.154.80) has quit (Ping timeout: 244 seconds)
2016-09-18 06:47:45	-->	d_himro (~none@178.124.154.80) has joined ##c++
2016-09-18 06:48:01	-->	kw01f (~kw01f@pD9FB3223.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 06:48:23	<--	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-09-18 06:48:23		[06:48]
2016-09-18 06:48:42	-->	NeoGeo64 (~linux@2604:2d80:881a:0:b4a3:be16:d6fd:8559) has joined ##c++
2016-09-18 06:48:47	-->	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 06:49:33	<--	plee (~kurt@89.10.219.180) has quit (Read error: Connection reset by peer)
2016-09-18 06:49:34	<--	SibTiger|Tablet (~Nicholas@199-96-206-87.fidnet.com) has quit (Quit: All work and no play, makes Tiger a dull boy.  ALlwOrk and noPlaY ,makes tigera Dullbo y.  AllWorK andno plaY,mak esTiger a dull B oy.)
2016-09-18 06:49:35	<--	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has quit (Read error: Connection reset by peer)
2016-09-18 06:49:35	-->	Haruno (~Haruno@unaffiliated/haruno) has joined ##c++
2016-09-18 06:49:47	-->	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 06:50:08	-->	plee (~kurt@89.10.219.180) has joined ##c++
2016-09-18 06:51:19	<--	TheSeven (~quassel@rockbox/developer/TheSeven) has quit (Disconnected by services)
2016-09-18 06:51:54	-->	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has joined ##c++
2016-09-18 06:51:56	-->	Ahue (~Ahue@ADijon-553-1-7-184.w92-161.abo.wanadoo.fr) has joined ##c++
2016-09-18 06:52:09	<--	Ahue (~Ahue@ADijon-553-1-7-184.w92-161.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-18 06:52:37	-->	Uidqc (~Uidqc@ADijon-553-1-7-184.w92-161.abo.wanadoo.fr) has joined ##c++
2016-09-18 06:52:46	-->	Akimbas (~Akimb@hst-128-72.telelanas.lt) has joined ##c++
2016-09-18 06:52:54	<--	Uidqc (~Uidqc@ADijon-553-1-7-184.w92-161.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-18 06:53:08	-->	Ender13 (~Agent13@2602:306:cf8d:6060:a007:c38d:411d:b6b3) has joined ##c++
2016-09-18 06:54:22	<--	rbern (~rbern@unaffiliated/rbern) has quit (Read error: Connection reset by peer)
2016-09-18 06:54:41	Ender13	i am trying to write a program to find prime numbers to the nth value but i keep getting an error. #include <iostream> not found. I am using ubuntu and have build-essential installed. can someone help me fix this please?
2016-09-18 06:55:02	-->	jd_livm (~jd_livm@c-73-167-60-180.hsd1.ma.comcast.net) has joined ##c++
2016-09-18 06:55:08	<--	snowkidind (~textual@pool-96-255-207-158.washdc.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-18 06:55:12	-->	nealshire (~Nealshire@unaffiliated/nealshire) has joined ##c++
2016-09-18 06:55:35	<--	wallbroken (~wallbroke@unaffiliated/wallbroken) has quit (Ping timeout: 260 seconds)
2016-09-18 06:55:40	-->	kawaCat (~kawaCat@KD106132200032.au-net.ne.jp) has joined ##c++
2016-09-18 06:55:55	treehug88	what command line are you typing that gives you that error
2016-09-18 06:55:56	-->	chasmo77 (~chas77@158.183-62-69.ftth.swbr.surewest.net) has joined ##c++
2016-09-18 06:56:16	Ender13	gcc prime.c -o prime1
2016-09-18 06:56:48	decimad	.c is interpreted as c source I'd guess
2016-09-18 06:57:00	-->	araml (~araml@unaffiliated/araml) has joined ##c++
2016-09-18 06:57:17	decimad	probably g++ prime.c will work? :)
2016-09-18 06:57:48	Ender13	prime.c:4:11: error: ‘::main’ must return ‘int’
2016-09-18 06:57:48	Ender13	 void main()
2016-09-18 06:57:48	Ender13	           ^
2016-09-18 06:57:48	Ender13	prime.c: In function ‘int main()’:
2016-09-18 06:57:48	Ender13	prime.c:6:8: error: ‘clrscr’ was not declared in this scope
2016-09-18 06:57:48	Ender13	 clrscr();                                //For Clearing the console screen
2016-09-18 06:57:48	Ender13	        ^
2016-09-18 06:57:49	Ender13	prime.c:20:8: error: ‘getche’ was not declared in this scope
2016-09-18 06:57:49	Ender13	 getche();                             //To exit the program after an user's keystroke
2016-09-18 06:57:50	Ender13	nope
2016-09-18 06:58:02	Ender13	this is the error i get with that
2016-09-18 06:58:12	decimad	yeah, it says what you did wrong right there
2016-09-18 06:58:31	decimad	read it, act upon ot
2016-09-18 06:58:34	decimad	*it
2016-09-18 06:59:19	-->	snowkidind (~textual@pool-96-255-207-158.washdc.fios.verizon.net) has joined ##c++
2016-09-18 06:59:59	-->	liquidstone (~liquidsto@92.55.92.232) has joined ##c++
2016-09-18 07:00:27	megaTherion	Ender13: dont try to sell C++ features as C code
2016-09-18 07:01:06	<--	Ender13 (~Agent13@2602:306:cf8d:6060:a007:c38d:411d:b6b3) has left ##c++
2016-09-18 07:01:24	-->	wallbroken (~wallbroke@unaffiliated/wallbroken) has joined ##c++
2016-09-18 07:02:19	-->	SwiftMatt (~Objective@162.242.95.164) has joined ##c++
2016-09-18 07:03:12	<--	symm- (~symm-@86.127.152.32) has quit (Quit: Leaving...)
2016-09-18 07:04:42	-->	rbern (~rbern@unaffiliated/rbern) has joined ##c++
2016-09-18 07:04:42		[07:04]
2016-09-18 07:05:35	Tachyon_	Bigcheese: an article about this please ?
2016-09-18 07:05:48	<--	Pac_ (~textual@2a01:e35:2f39:a610:99a4:15d7:3c0:596e) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-18 07:06:13	-->	GinoManWrx (~GinoMan@50-251-53-110-static.hfc.comcastbusiness.net) has joined ##c++
2016-09-18 07:06:28	-->	Enhex (~Enhex@82.252.138.77.rev.sfr.net) has joined ##c++
2016-09-18 07:07:16	-->	psychicist__ (~psychicis@ip127-8-212-87.adsl2.static.versatel.nl) has joined ##c++
2016-09-18 07:08:28	<--	GinoManWorks (~GinoMan@50.251.53.110) has quit (Read error: Connection reset by peer)
2016-09-18 07:08:46	-->	a3f (~a3f@unaffiliated/a3f) has joined ##c++
2016-09-18 07:09:59	<--	kw01f (~kw01f@pD9FB3223.dip0.t-ipconnect.de) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-09-18 07:10:15	-->	kw01f (~kw01f@pD9FB3223.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 07:11:31	<--	mitch0 (~mitch@77-234-69-161.pool.digikabel.hu) has quit (Ping timeout: 248 seconds)
2016-09-18 07:12:09	<--	ambro718 (~ambro@unaffiliated/ambro718) has quit (Ping timeout: 248 seconds)
2016-09-18 07:13:09	-->	SteffanW (~steffanw@ip4da40774.direct-adsl.nl) has joined ##c++
2016-09-18 07:13:40	<--	pylbrecht (~pylbrecht@hotsplots-blu1-ip14.cust.syseleven.net) has quit (Ping timeout: 260 seconds)
2016-09-18 07:15:10	-->	mangolisk (~mangolisk@S0106848dc7ebaa06.vc.shawcable.net) has joined ##c++
2016-09-18 07:16:13	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 07:16:25	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-18 07:16:57	Cthulhux	 <Bigcheese> also, wtf, VS can now officially target Linux << hooray?
2016-09-18 07:18:19	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 07:19:08	-->	di11inger (~Thunderbi@pool-74-102-0-68.nwrknj.fios.verizon.net) has joined ##c++
2016-09-18 07:20:18	-->	skweek (~skweek@USF-Gold-Wifi-nat-4.laptops.usf.edu) has joined ##c++
2016-09-18 07:20:18		[07:20]
2016-09-18 07:20:19	<--	di11inger (~Thunderbi@pool-74-102-0-68.nwrknj.fios.verizon.net) has quit (Client Quit)
2016-09-18 07:20:36	-->	di11inger (~Thunderbi@pool-74-102-0-68.nwrknj.fios.verizon.net) has joined ##c++
2016-09-18 07:21:13	<--	di11inger (~Thunderbi@pool-74-102-0-68.nwrknj.fios.verizon.net) has quit (Client Quit)
2016-09-18 07:22:02	<--	kawaCat (~kawaCat@KD106132200032.au-net.ne.jp) has quit (Quit: my IRC Client is Buggy :()
2016-09-18 07:22:12	<--	bebae (~bebae@s180c.studby.ntnu.no) has quit (Remote host closed the connection)
2016-09-18 07:22:15	-->	Appleman1234 (~Appleman1@KD119104050103.au-net.ne.jp) has joined ##c++
2016-09-18 07:22:22	<--	sophia7 (~sophia7@unaffiliated/sophia7) has quit (Quit: sophia7)
2016-09-18 07:22:34	<--	treehug88 (~textual@cpe-68-173-227-135.nyc.res.rr.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-18 07:22:45	-->	sedeki (~textual@unaffiliated/sedeki) has joined ##c++
2016-09-18 07:23:11	-->	kasper_ (~safaf@82.137.15.165) has joined ##c++
2016-09-18 07:23:21	<--	ferdna (~ferdna@cpe-69-23-141-130.elp.res.rr.com) has quit (Ping timeout: 248 seconds)
2016-09-18 07:23:54	<--	dj_pi (~dj@c-73-191-212-56.hsd1.mi.comcast.net) has quit (Ping timeout: 264 seconds)
2016-09-18 07:23:57	-->	di11inger (~Thunderbi@pool-74-102-0-68.nwrknj.fios.verizon.net) has joined ##c++
2016-09-18 07:24:23	V-ille	meaning that it can target android?
2016-09-18 07:25:03	V-ille	ah, no, the real deal https://blogs.msdn.microsoft.com/vcblog/2016/03/30/visual-c-for-linux-development/
2016-09-18 07:25:07	-->	Amaranthus (~Amaranth@ubuntu/member/Amaranth) has joined ##c++
2016-09-18 07:25:13	<--	Amaranth (~Amaranth@ubuntu/member/Amaranth) has quit (Ping timeout: 255 seconds)
2016-09-18 07:25:34	<--	GandalfTheWizard (~Emma@112.10.170.75) has quit (Ping timeout: 240 seconds)
2016-09-18 07:25:53	-->	plusone (~plusone@176.24.26.166) has joined ##c++
2016-09-18 07:26:07	<--	kasper^ (~safaf@82.137.9.8) has quit (Ping timeout: 255 seconds)
2016-09-18 07:27:01	<--	zwoof (zwoof@modemcable076.238-20-96.mc.videotron.ca) has quit (*.net *.split)
2016-09-18 07:27:01	<--	oldrobot (~oldrobot@192.241.221.244) has quit (*.net *.split)
2016-09-18 07:27:01	<--	msb (~msb@unaffiliated/detergnet) has quit (*.net *.split)
2016-09-18 07:27:01	<--	Ewomire (~Ender@192.95.25.150) has quit (*.net *.split)
2016-09-18 07:27:01	<--	kini (~kini@unaffiliated/kini) has quit (*.net *.split)
2016-09-18 07:27:01	<--	Latexi95 (latexi95@kapsi.fi) has quit (*.net *.split)
2016-09-18 07:27:01	<--	edran (~edran@znc.nardel.li) has quit (*.net *.split)
2016-09-18 07:27:01	<--	Pilum (~JKM@vps-85.201.170.217.stwvps.net) has quit (*.net *.split)
2016-09-18 07:27:01	<--	Hogofwar (~Daniel@irc.pont.in) has quit (*.net *.split)
2016-09-18 07:27:01	<--	yokel (~yokel@unaffiliated/contempt) has quit (*.net *.split)
2016-09-18 07:27:01	<--	wno (~foo@kekkonen.niksula.hut.fi) has quit (*.net *.split)
2016-09-18 07:27:01	<--	ionelmc (sid20175@python/site-packages/ionelmc) has quit (*.net *.split)
2016-09-18 07:27:01	<--	avtolstoy (~avtolstoy@gateway/vpn/privateinternetaccess/avtolstoy) has quit (*.net *.split)
2016-09-18 07:27:01	<--	SanguineAnomaly (~Sanguine@tickle.compsoc.man.ac.uk) has quit (*.net *.split)
2016-09-18 07:27:01	<--	Guest68452 (skarn@gateway/shell/firrre/x-bdkidzmvwbebzfco) has quit (*.net *.split)
2016-09-18 07:27:01	<--	xxpor (~xxpor@ec2-54-191-92-16.us-west-2.compute.amazonaws.com) has quit (*.net *.split)
2016-09-18 07:27:01	<--	sparetire (~sparetire@unaffiliated/sparetire) has quit (*.net *.split)
2016-09-18 07:27:01	<--	Factionwars (~Factionwa@ev0.nl) has quit (*.net *.split)
2016-09-18 07:27:01	<--	redpill (~redpill@unaffiliated/redpill) has quit (*.net *.split)
2016-09-18 07:27:01	<--	Serus (~Serus@unaffiliated/serus) has quit (*.net *.split)
2016-09-18 07:27:01	<--	GreenLantern (~quassel@80.240.131.213) has quit (*.net *.split)
2016-09-18 07:27:01	<--	badone (badone@nat/redhat/x-bclpxghjjlewlqbl) has quit (*.net *.split)
2016-09-18 07:27:01	<--	odinj (~odinj@178.62.200.221) has quit (*.net *.split)
2016-09-18 07:27:01	<--	woggle (~charles@c-73-251-125-90.hsd1.va.comcast.net) has quit (*.net *.split)
2016-09-18 07:27:01	<--	Guest57709 (~Talisman@am2.eu.twdev.net) has quit (*.net *.split)
2016-09-18 07:27:01	<--	go1111111 (~go1111111@104.200.154.72) has quit (*.net *.split)
2016-09-18 07:27:01	<--	banandana (~banandana@107.170.201.163) has quit (*.net *.split)
2016-09-18 07:27:01	<--	jantje (~jan@mozzy.smets.cx) has quit (*.net *.split)
2016-09-18 07:27:01	<--	Particularized (~me@dolphin.sergnet.net) has quit (*.net *.split)
2016-09-18 07:27:01	<--	diod (~diod@unaffiliated/diod) has quit (*.net *.split)
2016-09-18 07:27:01	<--	emilsp (~emilsp@enucs/member/emilsp) has quit (*.net *.split)
2016-09-18 07:27:02	<--	ekem (~monkey@helium.nk3r.com) has quit (*.net *.split)
2016-09-18 07:27:02	<--	Cyp_ (~Cyp_@x1-6-e8-94-f6-cd-57-25.cpe.webspeed.dk) has quit (*.net *.split)
2016-09-18 07:27:02	<--	sharkz_ (~sharkz@linux7.csie.ntu.edu.tw) has quit (*.net *.split)
2016-09-18 07:27:02	<--	thomas (~thomas@freenode/staff/thomas) has quit (*.net *.split)
2016-09-18 07:27:02	<--	Phibonacci (~quassel@151.80.175.201) has quit (*.net *.split)
2016-09-18 07:27:02	<--	ski (~ski@remote11.chalmers.se) has quit (*.net *.split)
2016-09-18 07:27:02	<--	aidecoe (~aidecoe@gentoo/developer/aidecoe) has quit (*.net *.split)
2016-09-18 07:27:02	<--	urlgrabber (~urlgrabbe@li1195-32.members.linode.com) has quit (*.net *.split)
2016-09-18 07:27:02	<--	spb (~stephen@freenode/staff/spb) has quit (*.net *.split)
2016-09-18 07:27:02	<--	btipling (~btipling@unaffiliated/sk/x-5968384) has quit (*.net *.split)
2016-09-18 07:27:02	<--	Marqin (~marqin@spiramirabilis.net) has quit (*.net *.split)
2016-09-18 07:27:02	<--	zxq2 (p6Lx8IPCE9@unaffiliated/zxq2) has quit (*.net *.split)
2016-09-18 07:27:02	<--	SpaghettiCat (~Spaghetti@ks23645.kimsufi.com) has quit (*.net *.split)
2016-09-18 07:27:02	<--	rvncerr_ (~quassel@unaffiliated/rvncerr) has quit (*.net *.split)
2016-09-18 07:27:02	<--	Winslow- (~Winslow_@bnc.unknowncheats.me) has quit (*.net *.split)
2016-09-18 07:27:02	<--	zaltekk (~zaltekk@ec2-52-11-19-159.us-west-2.compute.amazonaws.com) has quit (*.net *.split)
2016-09-18 07:27:02	<--	\f (~condy@unaffiliated/condy) has quit (*.net *.split)
2016-09-18 07:27:02	<--	yan (~user@162.243.0.148) has quit (*.net *.split)
2016-09-18 07:27:02	<--	evansbee (~evansbee@swimyote.com) has quit (*.net *.split)
2016-09-18 07:27:02	<--	MrC (Ben@mrbenc.net) has quit (*.net *.split)
2016-09-18 07:27:02	<--	tobbe (~zagabar@c213-89-112-5.bredband.comhem.se) has quit (*.net *.split)
2016-09-18 07:27:02	<--	Axton (~R@56343a86.rev.stofanet.dk) has quit (*.net *.split)
2016-09-18 07:27:02	<--	heinrich5991 (~hein5991@unaffiliated/heinrich5991) has quit (*.net *.split)
2016-09-18 07:27:02	<--	thor12022 (~thor12022@ec2-52-38-180-186.us-west-2.compute.amazonaws.com) has quit (*.net *.split)
2016-09-18 07:27:02	<--	placer14 (sid86639@gateway/web/irccloud.com/x-hhchebvqroxovbrn) has quit (*.net *.split)
2016-09-18 07:27:02	<--	Jengu (~Ande@ec2-54-255-130-255.ap-southeast-1.compute.amazonaws.com) has quit (*.net *.split)
2016-09-18 07:27:02	<--	qlkzy (~qlkzy@li559-28.members.linode.com) has quit (*.net *.split)
2016-09-18 07:27:02	<--	veverak (~squirrel@ip-89-102-104-133.net.upcbroadband.cz) has quit (*.net *.split)
2016-09-18 07:27:02	<--	TobiasFar (~tfar@new.ayena.de) has quit (*.net *.split)
2016-09-18 07:27:03	<--	kstolen (~kStolen@91.203.213.105.static.alvotech.net) has quit (*.net *.split)
2016-09-18 07:27:03	<--	sfix (~gtierney@unaffiliated/sfix) has quit (*.net *.split)
2016-09-18 07:27:03	<--	phantomcircuit (~phantomci@192.241.205.97) has quit (*.net *.split)
2016-09-18 07:27:03	<--	argoneus (~argoneus@unaffiliated/argoneus) has quit (*.net *.split)
2016-09-18 07:27:03	<--	low-profile (~low-profi@unaffiliated/low-profile) has quit (*.net *.split)
2016-09-18 07:27:03	<--	SHODAN (~shozan@fsf/member/shodan) has quit (*.net *.split)
2016-09-18 07:27:05	<--	Atrumx (~Atrumx@unaffiliated/fivedeltasix) has quit (Ping timeout: 248 seconds)
2016-09-18 07:28:12	<--	MrP[Home] (~Palsson@c-a46fe555.06-213-6e6b701.cust.bredbandsbolaget.se) has quit (Read error: Connection reset by peer)
2016-09-18 07:29:08	-->	argoneus (~argoneus@unaffiliated/argoneus) has joined ##c++
2016-09-18 07:29:08	-->	zwoof (zwoof@modemcable076.238-20-96.mc.videotron.ca) has joined ##c++
2016-09-18 07:29:08	-->	oldrobot (~oldrobot@192.241.221.244) has joined ##c++
2016-09-18 07:29:08	-->	msb (~msb@unaffiliated/detergnet) has joined ##c++
2016-09-18 07:29:08	-->	emilsp (~emilsp@enucs/member/emilsp) has joined ##c++
2016-09-18 07:29:08	-->	Ewomire (~Ender@192.95.25.150) has joined ##c++
2016-09-18 07:29:08	-->	kini (~kini@unaffiliated/kini) has joined ##c++
2016-09-18 07:29:08	-->	Latexi95 (latexi95@kapsi.fi) has joined ##c++
2016-09-18 07:29:08	-->	edran (~edran@znc.nardel.li) has joined ##c++
2016-09-18 07:29:08	-->	Pilum (~JKM@vps-85.201.170.217.stwvps.net) has joined ##c++
2016-09-18 07:29:08	-->	yokel (~yokel@unaffiliated/contempt) has joined ##c++
2016-09-18 07:29:08	-->	Hogofwar (~Daniel@irc.pont.in) has joined ##c++
2016-09-18 07:29:08	-->	wno (~foo@kekkonen.niksula.hut.fi) has joined ##c++
2016-09-18 07:29:08	-->	ionelmc (sid20175@python/site-packages/ionelmc) has joined ##c++
2016-09-18 07:29:08	-->	avtolstoy (~avtolstoy@gateway/vpn/privateinternetaccess/avtolstoy) has joined ##c++
2016-09-18 07:29:08	-->	SanguineAnomaly (~Sanguine@tickle.compsoc.man.ac.uk) has joined ##c++
2016-09-18 07:29:08	-->	Guest68452 (skarn@gateway/shell/firrre/x-bdkidzmvwbebzfco) has joined ##c++
2016-09-18 07:29:08	-->	xxpor (~xxpor@ec2-54-191-92-16.us-west-2.compute.amazonaws.com) has joined ##c++
2016-09-18 07:29:08	-->	sparetire (~sparetire@unaffiliated/sparetire) has joined ##c++
2016-09-18 07:29:08	-->	Factionwars (~Factionwa@ev0.nl) has joined ##c++
2016-09-18 07:29:08	-->	redpill (~redpill@unaffiliated/redpill) has joined ##c++
2016-09-18 07:29:08	-->	Serus (~Serus@unaffiliated/serus) has joined ##c++
2016-09-18 07:29:08	-->	GreenLantern (~quassel@80.240.131.213) has joined ##c++
2016-09-18 07:29:08	-->	badone (badone@nat/redhat/x-bclpxghjjlewlqbl) has joined ##c++
2016-09-18 07:29:08	-->	odinj (~odinj@178.62.200.221) has joined ##c++
2016-09-18 07:29:08	-->	Guest57709 (~Talisman@am2.eu.twdev.net) has joined ##c++
2016-09-18 07:29:08	-->	Particularized (~me@dolphin.sergnet.net) has joined ##c++
2016-09-18 07:29:08	-->	go1111111 (~go1111111@104.200.154.72) has joined ##c++
2016-09-18 07:29:08	-->	banandana (~banandana@107.170.201.163) has joined ##c++
2016-09-18 07:29:08	-->	diod (~diod@unaffiliated/diod) has joined ##c++
2016-09-18 07:29:08	-->	jantje (~jan@mozzy.smets.cx) has joined ##c++
2016-09-18 07:29:08	-->	ekem (~monkey@helium.nk3r.com) has joined ##c++
2016-09-18 07:29:08	-->	Cyp_ (~Cyp_@x1-6-e8-94-f6-cd-57-25.cpe.webspeed.dk) has joined ##c++
2016-09-18 07:29:08	-->	sharkz_ (~sharkz@linux7.csie.ntu.edu.tw) has joined ##c++
2016-09-18 07:29:08	-->	thomas (~thomas@freenode/staff/thomas) has joined ##c++
2016-09-18 07:29:08	-->	veverak (~squirrel@ip-89-102-104-133.net.upcbroadband.cz) has joined ##c++
2016-09-18 07:29:08	-->	Phibonacci (~quassel@151.80.175.201) has joined ##c++
2016-09-18 07:29:08	-->	ski (~ski@remote11.chalmers.se) has joined ##c++
2016-09-18 07:29:08	-->	aidecoe (~aidecoe@gentoo/developer/aidecoe) has joined ##c++
2016-09-18 07:29:08	-->	urlgrabber (~urlgrabbe@li1195-32.members.linode.com) has joined ##c++
2016-09-18 07:29:08	-->	spb (~stephen@freenode/staff/spb) has joined ##c++
2016-09-18 07:29:08	-->	btipling (~btipling@unaffiliated/sk/x-5968384) has joined ##c++
2016-09-18 07:29:08	-->	zxq2 (p6Lx8IPCE9@unaffiliated/zxq2) has joined ##c++
2016-09-18 07:29:08	-->	Marqin (~marqin@spiramirabilis.net) has joined ##c++
2016-09-18 07:29:08	-->	SpaghettiCat (~Spaghetti@ks23645.kimsufi.com) has joined ##c++
2016-09-18 07:29:08	-->	rvncerr_ (~quassel@unaffiliated/rvncerr) has joined ##c++
2016-09-18 07:29:08	-->	Winslow- (~Winslow_@bnc.unknowncheats.me) has joined ##c++
2016-09-18 07:29:08	-->	zaltekk (~zaltekk@ec2-52-11-19-159.us-west-2.compute.amazonaws.com) has joined ##c++
2016-09-18 07:29:08	-->	evansbee (~evansbee@swimyote.com) has joined ##c++
2016-09-18 07:29:08	-->	yan (~user@162.243.0.148) has joined ##c++
2016-09-18 07:29:08	-->	MrC (Ben@mrbenc.net) has joined ##c++
2016-09-18 07:29:08	-->	tobbe (~zagabar@c213-89-112-5.bredband.comhem.se) has joined ##c++
2016-09-18 07:29:08	-->	Axton (~R@56343a86.rev.stofanet.dk) has joined ##c++
2016-09-18 07:29:08	-->	heinrich5991 (~hein5991@unaffiliated/heinrich5991) has joined ##c++
2016-09-18 07:29:08	-->	thor12022 (~thor12022@ec2-52-38-180-186.us-west-2.compute.amazonaws.com) has joined ##c++
2016-09-18 07:29:08	-->	placer14 (sid86639@gateway/web/irccloud.com/x-hhchebvqroxovbrn) has joined ##c++
2016-09-18 07:29:08	-->	Jengu (~Ande@ec2-54-255-130-255.ap-southeast-1.compute.amazonaws.com) has joined ##c++
2016-09-18 07:29:08	-->	qlkzy (~qlkzy@li559-28.members.linode.com) has joined ##c++
2016-09-18 07:29:08	-->	TobiasFar (~tfar@new.ayena.de) has joined ##c++
2016-09-18 07:29:08	-->	kstolen (~kStolen@91.203.213.105.static.alvotech.net) has joined ##c++
2016-09-18 07:29:08	-->	sfix (~gtierney@unaffiliated/sfix) has joined ##c++
2016-09-18 07:29:08	-->	phantomcircuit (~phantomci@192.241.205.97) has joined ##c++
2016-09-18 07:29:08	-->	low-profile (~low-profi@unaffiliated/low-profile) has joined ##c++
2016-09-18 07:29:08	-->	SHODAN (~shozan@fsf/member/shodan) has joined ##c++
2016-09-18 07:29:19	<--	forgottenone (~forgotten@195.142.43.212) has quit (Ping timeout: 265 seconds)
2016-09-18 07:30:16	<--	kstolen (~kStolen@91.203.213.105.static.alvotech.net) has quit (Max SendQ exceeded)
2016-09-18 07:30:16	<--	yokel (~yokel@unaffiliated/contempt) has quit (Max SendQ exceeded)
2016-09-18 07:30:16	<--	Guest68452 (skarn@gateway/shell/firrre/x-bdkidzmvwbebzfco) has quit (Max SendQ exceeded)
2016-09-18 07:30:28	-->	giraffe (skarn@gateway/shell/firrre/x-aboggcpuimkjokjd) has joined ##c++
2016-09-18 07:30:34	<--	ghostlight (~ghostligh@ec2-54-187-97-144.us-west-2.compute.amazonaws.com) has quit (Ping timeout: 244 seconds)
2016-09-18 07:30:37	<--	danieli (~duniel@unaffiliated/danieli) has quit (Ping timeout: 255 seconds)
2016-09-18 07:30:50	-->	yokel (~yokel@unaffiliated/contempt) has joined ##c++
2016-09-18 07:30:52	--	giraffe is now known as Guest64580
2016-09-18 07:31:04	-->	kstolen (~kStolen@91.203.213.105.static.alvotech.net) has joined ##c++
2016-09-18 07:31:11	-->	woggle (~charles@c-73-251-125-90.hsd1.va.comcast.net) has joined ##c++
2016-09-18 07:31:34	-->	satifant (~sati@unaffiliated/satifant) has joined ##c++
2016-09-18 07:31:59	<--	jd_livm (~jd_livm@c-73-167-60-180.hsd1.ma.comcast.net) has quit (Quit: Leaving)
2016-09-18 07:32:32	-->	Freze (~Freze@c-73-167-60-180.hsd1.ma.comcast.net) has joined ##c++
2016-09-18 07:32:49	<--	Freze (~Freze@c-73-167-60-180.hsd1.ma.comcast.net) has quit (Changing host)
2016-09-18 07:32:49	-->	Freze (~Freze@unaffiliated/freze) has joined ##c++
2016-09-18 07:33:19	-->	danieli (~duniel@213.52.4.149) has joined ##c++
2016-09-18 07:33:24	<--	Awesomecase (sid56584@gateway/web/irccloud.com/x-lommcympibttutou) has quit (Ping timeout: 272 seconds)
2016-09-18 07:34:05	<--	JackMc (sid85402@gateway/web/irccloud.com/x-uiyrdqhyosptyots) has quit (Ping timeout: 250 seconds)
2016-09-18 07:34:24	<--	wallbroken (~wallbroke@unaffiliated/wallbroken) has quit (Ping timeout: 276 seconds)
2016-09-18 07:34:56	-->	Awesomecase (sid56584@gateway/web/irccloud.com/x-azurnambbstcixfs) has joined ##c++
2016-09-18 07:35:19	-->	JackMc (sid85402@gateway/web/irccloud.com/x-skrnewwcmrfgssds) has joined ##c++
2016-09-18 07:35:19		[07:35]
2016-09-18 07:36:54	-->	wallbroken (~wallbroke@unaffiliated/wallbroken) has joined ##c++
2016-09-18 07:37:56	-->	DEElekgolo (~DEElekgol@2602:30a:2e0e:a7a0:2584:5b18:1caa:cc3) has joined ##c++
2016-09-18 07:39:03	-->	snyp (~Snyp@150.129.132.100) has joined ##c++
2016-09-18 07:39:50	z16	"[...] or find me on Twitter @robotdad."
2016-09-18 07:39:53	-->	fx21 (~fx@c80-216-5-68.bredband.comhem.se) has joined ##c++
2016-09-18 07:39:58	<--	Awesomecase (sid56584@gateway/web/irccloud.com/x-azurnambbstcixfs) has quit (Excess Flood)
2016-09-18 07:40:09	z16	Something refreshing about microsoft representatives with such handles :)
2016-09-18 07:40:26	<--	Haruno (~Haruno@unaffiliated/haruno) has quit (Ping timeout: 265 seconds)
2016-09-18 07:40:32	-->	Awesomecase (sid56584@gateway/web/irccloud.com/x-hcmrsqoybryezqjv) has joined ##c++
2016-09-18 07:41:53	<--	psychicist__ (~psychicis@ip127-8-212-87.adsl2.static.versatel.nl) has quit (Ping timeout: 250 seconds)
2016-09-18 07:43:04	-->	Lowl3v3l (~Lowl3v3l@ipservice-092-208-080-178.092.208.pools.vodafone-ip.de) has joined ##c++
2016-09-18 07:45:46	-->	logan_e_ (uid164592@gateway/web/irccloud.com/x-judbtcrzpwbytrzx) has joined ##c++
2016-09-18 07:47:46	-->	\f (~condy@115.28.150.204) has joined ##c++
2016-09-18 07:47:51	-->	kadoban (~mud@unaffiliated/kadoban) has joined ##c++
2016-09-18 07:48:02	-->	karts (43a45b4e@gateway/web/cgi-irc/kiwiirc.com/ip.67.164.91.78) has joined ##c++
2016-09-18 07:48:04	--	\f is now known as Guest50978
2016-09-18 07:48:31	<--	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-09-18 07:48:45	<--	liquidstone (~liquidsto@92.55.92.232) has quit (Quit: Nettalk6 - www.ntalk.de)
2016-09-18 07:48:58	-->	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 07:49:00	<--	sedeki (~textual@unaffiliated/sedeki) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-09-18 07:49:01	<--	wnklmnn (~pascal@p4FEF6401.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2016-09-18 07:50:50	<--	daniel-s (~daniel-s@AToulouse-652-1-284-209.w109-220.abo.wanadoo.fr) has quit (Remote host closed the connection)
2016-09-18 07:50:50		[07:50]
2016-09-18 07:51:10	<--	neurodrone (~neurodron@unaffiliated/neurodrone) has quit (Quit: neurodrone)
2016-09-18 07:54:08	-->	nikki93 (~nikki93@2601:645:8104:cb10:f93b:f023:83a5:68d1) has joined ##c++
2016-09-18 07:54:20	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 07:54:20	<--	a3pq51 (~a3pq51@250-36-179-94.pool.ukrtel.net) has quit (Remote host closed the connection)
2016-09-18 07:54:22	<--	Guest50978 (~condy@115.28.150.204) has quit (Changing host)
2016-09-18 07:54:22	-->	Guest50978 (~condy@unaffiliated/condy) has joined ##c++
2016-09-18 07:54:24	<--	di11inger (~Thunderbi@pool-74-102-0-68.nwrknj.fios.verizon.net) has quit (Quit: di11inger)
2016-09-18 07:54:37	<--	karts (43a45b4e@gateway/web/cgi-irc/kiwiirc.com/ip.67.164.91.78) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-09-18 07:54:40	<--	wanderman (~wanderman@unaffiliated/wanderman) has quit (Quit: Leaving)
2016-09-18 07:54:47	--	Guest50978 is now known as Flandre
2016-09-18 07:54:53	--	Flandre is now known as Flandre_
2016-09-18 07:56:23	<--	snowkidind (~textual@pool-96-255-207-158.washdc.fios.verizon.net) has quit (Ping timeout: 265 seconds)
2016-09-18 07:56:33	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 07:56:48	-->	Leovale (~Leovale@45.72.141.66) has joined ##c++
2016-09-18 07:57:24	-->	Kn|t3 (~agarwalvi@49.207.53.8) has joined ##c++
2016-09-18 07:57:35	-->	ghostlight (~ghostligh@ec2-54-187-97-144.us-west-2.compute.amazonaws.com) has joined ##c++
2016-09-18 07:58:43	<--	nikki93 (~nikki93@2601:645:8104:cb10:f93b:f023:83a5:68d1) has quit (Ping timeout: 272 seconds)
2016-09-18 08:00:20	-->	Unee0x (~Unee0x@cpe-2606-A000-4A59-1F00-51B8-FF18-F785-E6B8.dyn6.twc.com) has joined ##c++
2016-09-18 08:00:41	<--	RoBo_V (~robo@27.255.167.47) has quit (Ping timeout: 244 seconds)
2016-09-18 08:01:23	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 08:01:31	-->	RoBo_V (~robo@27.255.163.72) has joined ##c++
2016-09-18 08:02:49	<--	Kn|t3 (~agarwalvi@49.207.53.8) has quit (Quit: Kn|t3)
2016-09-18 08:03:09	-->	wintrytbs (~wintrytbs@93.89.125.23.ip.vitnett.no) has joined ##c++
2016-09-18 08:03:47	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 08:05:48	<--	suppahsrv (~mopmop@host226-206-dynamic.37-79-r.retail.telecomitalia.it) has quit (Quit: Sono gli uomini che conferiscono potere ai simboli... da solo un simbolo � privo di significato)
2016-09-18 08:05:51	-->	psychicist__ (~psychicis@ip127-8-212-87.adsl2.static.versatel.nl) has joined ##c++
2016-09-18 08:05:51		[08:05]
2016-09-18 08:05:53	<--	ibouvousaime (~ibouvousa@41.82.16.227) has quit (Ping timeout: 244 seconds)
2016-09-18 08:08:22	<--	CoolBreeze (~CoolBreez@87-228-34.netrunf.cytanet.com.cy) has quit (Read error: Connection reset by peer)
2016-09-18 08:08:25	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 08:08:37	-->	karts (32fe9d1d@gateway/web/cgi-irc/kiwiirc.com/ip.50.254.157.29) has joined ##c++
2016-09-18 08:09:10	-->	kang0 (~androirc@136.185.60.225) has joined ##c++
2016-09-18 08:09:24	<--	pavshn (~pavshn@ppp95-165-153-84.pppoe.spdop.ru) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2016-09-18 08:09:37	-->	jrolland-work (~jeff@155.92.176.224) has joined ##c++
2016-09-18 08:09:51	-->	karab44 (~karab44@unaffiliated/karab44) has joined ##c++
2016-09-18 08:10:04	<--	Cabanossi (~Cabanossi@p5DD7BF92.dip0.t-ipconnect.de) has quit (Quit: Bye, bye...)
2016-09-18 08:10:30	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 08:10:32	<--	Tachyon_ (~Thunderbi@95.76.184.120) has quit (Quit: Tachyon_)
2016-09-18 08:12:27	-->	sedeki (~textual@unaffiliated/sedeki) has joined ##c++
2016-09-18 08:13:18	-->	suppahsrv (~mopmop@host226-206-dynamic.37-79-r.retail.telecomitalia.it) has joined ##c++
2016-09-18 08:13:31	<--	Valdaris (~Gabe@75-170-43-116.eugn.qwest.net) has quit (Quit: Leaving)
2016-09-18 08:13:53	<--	zwliew (uid161395@gateway/web/irccloud.com/x-qdhkckfmaldlrbmk) has quit (Quit: Connection closed for inactivity)
2016-09-18 08:14:09	-->	Micos (~Micos@188.27.172.122) has joined ##c++
2016-09-18 08:14:10	<--	Micos (~Micos@188.27.172.122) has quit (Max SendQ exceeded)
2016-09-18 08:14:12	-->	Orpheon (~Orpheon@213.200.193.129) has joined ##c++
2016-09-18 08:14:46	-->	ibouvousaime (~ibouvousa@41.83.63.72) has joined ##c++
2016-09-18 08:17:09	-->	corsaere (~corsaere@unaffiliated/corsaere) has joined ##c++
2016-09-18 08:17:49	<--	sh4z (lml@unaffiliated/sh4z) has quit (Read error: Connection reset by peer)
2016-09-18 08:18:03	-->	sh4z (lml@unaffiliated/sh4z) has joined ##c++
2016-09-18 08:18:07	<--	wintrytbs (~wintrytbs@93.89.125.23.ip.vitnett.no) has quit (Quit: Leaving)
2016-09-18 08:18:11	<--	l2esonance (~l2esonanc@c-73-223-132-245.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-18 08:18:23	-->	Levitator (~Meh@cpe-2606-A000-E182-FB00-A91B-BEB6-54EA-1963.dyn6.twc.com) has joined ##c++
2016-09-18 08:18:40	<--	corsaere (~corsaere@unaffiliated/corsaere) has quit (Max SendQ exceeded)
2016-09-18 08:18:46	-->	l2esonance (~l2esonanc@c-73-223-132-245.hsd1.ca.comcast.net) has joined ##c++
2016-09-18 08:18:56	-->	systemfault (~rcyr@unaffiliated/rcyr) has joined ##c++
2016-09-18 08:19:19	<--	opios (~op10s@unaffiliated/opios) has quit (Ping timeout: 244 seconds)
2016-09-18 08:19:31	-->	corsaere (~corsaere@unaffiliated/corsaere) has joined ##c++
2016-09-18 08:19:31	-->	kamog` (~user@95.73.82.243) has joined ##c++
2016-09-18 08:19:35	-->	Micos (~Micos@188.27.172.122) has joined ##c++
2016-09-18 08:19:36	<--	Micos (~Micos@188.27.172.122) has quit (Max SendQ exceeded)
2016-09-18 08:19:41	-->	mafagafogigante (~mafagafog@201.37.160.209) has joined ##c++
2016-09-18 08:20:10	<--	dreamfighter (~awayawm@173-31-201-54.client.mchsi.com) has quit (Ping timeout: 244 seconds)
2016-09-18 08:20:21	<--	kazakuri (~kazakuri@shinjiru.me) has quit (Ping timeout: 244 seconds)
2016-09-18 08:20:21	<--	crusty (~unknown@unaffiliated/amt) has quit (Ping timeout: 244 seconds)
2016-09-18 08:20:29	<--	Jiwan (~jguegant@213-64-65-147-no264.tbcn.telia.com) has quit (Quit: Leaving.)
2016-09-18 08:20:45	<--	AndrewPRS (AndrewPRS@gateway/shell/elitebnc/x-immikewpuimythyj) has quit (Ping timeout: 260 seconds)
2016-09-18 08:20:52	<--	karakedi (~eAC53C340@unaffiliated/orphan) has quit (Ping timeout: 244 seconds)
2016-09-18 08:20:52		[08:20]
2016-09-18 08:21:12	<--	knaesig (knaesig@191-104-254-51.static.panicbnc.eu) has quit (Ping timeout: 244 seconds)
2016-09-18 08:21:23	<--	AtnNn (~atnnn@circus.atnnn.com) has quit (Ping timeout: 244 seconds)
2016-09-18 08:21:23	<--	altyr (~nobody@unaffiliated/altyr) has quit (Ping timeout: 244 seconds)
2016-09-18 08:21:49	<--	danieli (~duniel@213.52.4.149) has quit (Max SendQ exceeded)
2016-09-18 08:21:54	<--	Diyar (~Diyar@unaffiliated/diyar) has quit (Ping timeout: 244 seconds)
2016-09-18 08:22:04	-->	kazakuri (~kazakuri@shinjiru.me) has joined ##c++
2016-09-18 08:22:13	-->	opios (~op10s@unaffiliated/opios) has joined ##c++
2016-09-18 08:22:21	-->	Diyar (~Diyar@unaffiliated/diyar) has joined ##c++
2016-09-18 08:22:30	<--	kamog (~user@95.73.176.167) has quit (Ping timeout: 260 seconds)
2016-09-18 08:22:39	-->	AtnNn (~atnnn@circus.atnnn.com) has joined ##c++
2016-09-18 08:23:01	-->	jokleinn1 (jokleinn@unaffiliated/jokleinn) has joined ##c++
2016-09-18 08:23:04	-->	crusty (~unknown@unaffiliated/amt) has joined ##c++
2016-09-18 08:23:13	-->	altyr (~nobody@unaffiliated/altyr) has joined ##c++
2016-09-18 08:23:40	<--	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has quit (Ping timeout: 260 seconds)
2016-09-18 08:24:29	<--	As4xk (~as4xk@unaffiliated/as4xk) has quit (Ping timeout: 244 seconds)
2016-09-18 08:24:44	-->	As4xk (~as4xk@138.92-221-201.customer.lyse.net) has joined ##c++
2016-09-18 08:24:44	<--	As4xk (~as4xk@138.92-221-201.customer.lyse.net) has quit (Changing host)
2016-09-18 08:24:44	-->	As4xk (~as4xk@unaffiliated/as4xk) has joined ##c++
2016-09-18 08:24:58	<--	mfc (~mfc@unaffiliated/mfc) has quit (Read error: Connection reset by peer)
2016-09-18 08:25:12	-->	mfc (~mfc@unaffiliated/mfc) has joined ##c++
2016-09-18 08:25:15	<--	ScorpionJack (~Scorpion@unaffiliated/scorpionjack) has quit (Quit: ScorpionJack)
2016-09-18 08:25:24	-->	danieli (~duniel@213.52.4.149) has joined ##c++
2016-09-18 08:25:31	<--	irrenhaus3 (~xenon@HSI-KBW-046-005-253-022.hsi8.kabel-badenwuerttemberg.de) has quit (Ping timeout: 244 seconds)
2016-09-18 08:25:31	<--	pixelate (~pixelate@139.228.167.19) has quit (Ping timeout: 244 seconds)
2016-09-18 08:25:31	<--	mountaingoat (~mountaing@unaffiliated/mountaingoat) has quit (Ping timeout: 244 seconds)
2016-09-18 08:25:31	<--	strtok (~strtok@thales.strtok.net) has quit (Ping timeout: 244 seconds)
2016-09-18 08:25:31	<--	jokleinn (jokleinn@unaffiliated/jokleinn) has quit (Ping timeout: 244 seconds)
2016-09-18 08:25:39	-->	strtok (~strtok@thales.strtok.net) has joined ##c++
2016-09-18 08:25:46	-->	AndrewPRS (AndrewPRS@gateway/shell/elitebnc/x-lwanucxcydxdomjm) has joined ##c++
2016-09-18 08:25:47	-->	nacon (~nacon@unaffiliated/nacon) has joined ##c++
2016-09-18 08:25:59	-->	Valdaris (~Gabe@75-170-43-116.eugn.qwest.net) has joined ##c++
2016-09-18 08:26:02	<--	velco (~chill@185.78.38.153) has quit (Ping timeout: 244 seconds)
2016-09-18 08:26:02	<--	Magnetar (~Mike@pool-108-48-114-242.washdc.fios.verizon.net) has quit (Ping timeout: 244 seconds)
2016-09-18 08:26:02	<--	clr (~chris@chris.rorvick.com) has quit (Ping timeout: 244 seconds)
2016-09-18 08:26:02	<--	neuri8- (~neur@62.109.134.112) has quit (Ping timeout: 244 seconds)
2016-09-18 08:26:10	-->	clr (~chris@chris.rorvick.com) has joined ##c++
2016-09-18 08:26:13	-->	mountaingoat (~mountaing@unaffiliated/mountaingoat) has joined ##c++
2016-09-18 08:26:28	-->	Magnetar (~Mike@pool-108-48-114-242.washdc.fios.verizon.net) has joined ##c++
2016-09-18 08:26:28	-->	irrenhaus3 (~xenon@HSI-KBW-046-005-253-022.hsi8.kabel-badenwuerttemberg.de) has joined ##c++
2016-09-18 08:26:38	-->	neuri8 (~neur@62.109.134.112) has joined ##c++
2016-09-18 08:26:49	-->	knaesig (knaesig@191-104-254-51.static.panicbnc.eu) has joined ##c++
2016-09-18 08:27:09	-->	pixelate (~pixelate@139.228.167.19) has joined ##c++
2016-09-18 08:27:11	Orpheon	Hello, I'm trying to use Allegro 5 with MSYS2 on windows 32 bit, and after installing both allegro5.1 and g++ through MSYS2's pacman I get https://puu.sh/rfDR6/538268524f.png
2016-09-18 08:27:33	Orpheon	the PATH does not point to any other versions of either
2016-09-18 08:27:45	Orpheon	does anyone know how I could find out what is going on?
2016-09-18 08:28:03	Moto-chan	Well
2016-09-18 08:28:07	Moto-chan	do you have that dll?
2016-09-18 08:28:14	-->	everamzah (~james@cpe-172-101-13-131.maine.res.rr.com) has joined ##c++
2016-09-18 08:28:15	-->	pylbrecht (~pylbrecht@hotsplots-blu1-ip14.cust.syseleven.net) has joined ##c++
2016-09-18 08:28:30	Moto-chan	Or are you sure the one you have is the one it wants
2016-09-18 08:28:45	Moto-chan	For this winblobs stuff, there's often 2 or 3 versions of the same version dll
2016-09-18 08:28:53	Moto-chan	Slightly modified or whatever
2016-09-18 08:28:57	Moto-chan	Such is DLL Hell
2016-09-18 08:29:35	Orpheon	yes, the DLL is there, and MSYS2 lists only two versions, one for 64-bit and one for 32-bit, and the latter is installed
2016-09-18 08:29:41	RokerHRO	!stdcpp DLL
2016-09-18 08:29:42	nolyc	Standard C++ has no notion of `DLL', so you must be talking about some specific OS- or library API (or tool), which is beyond the scope of this channel (which focuses on standard C++).
2016-09-18 08:30:01	<--	ghostlight (~ghostligh@ec2-54-187-97-144.us-west-2.compute.amazonaws.com) has quit (Ping timeout: 248 seconds)
2016-09-18 08:30:06	Orpheon	which channel should I go to?
2016-09-18 08:30:10	<--	karts (32fe9d1d@gateway/web/cgi-irc/kiwiirc.com/ip.50.254.157.29) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-09-18 08:30:14	<--	xnavor (~xnavor@78-70-4-240-no171.business.telia.com) has quit (Quit: This computer has gone to sleep)
2016-09-18 08:30:20	Moto-chan	##c++-general
2016-09-18 08:30:25	Moto-chan	Or ##winapi
2016-09-18 08:30:31	Moto-chan	or was is #winapi
2016-09-18 08:30:33	Moto-chan	iono
2016-09-18 08:31:06	Orpheon	alright, thank you
2016-09-18 08:31:15	-->	dreamfighter (~awayawm@173-31-201-54.client.mchsi.com) has joined ##c++
2016-09-18 08:31:28	-->	Unee0x_ (~Unee0x@cpe-45-37-239-204.nc.res.rr.com) has joined ##c++
2016-09-18 08:31:47	<--	Unee0x (~Unee0x@cpe-2606-A000-4A59-1F00-51B8-FF18-F785-E6B8.dyn6.twc.com) has quit (Remote host closed the connection)
2016-09-18 08:32:07	-->	ScorpionJack (~Scorpion@unaffiliated/scorpionjack) has joined ##c++
2016-09-18 08:32:14	WalrusPony	well this isn't a winapi issue
2016-09-18 08:32:27	WalrusPony	Orpheon: In this case you'd want a mingw or msys irc channel specifically
2016-09-18 08:32:42	-->	ghostlight (~ghostligh@ec2-54-187-97-144.us-west-2.compute.amazonaws.com) has joined ##c++
2016-09-18 08:32:48	Orpheon	msys would be nice, but the #msys channel on freenode is pretty dead
2016-09-18 08:32:51	<--	oxbb5c (~Thunderbi@95.10.223.190) has quit (Quit: oxbb5c)
2016-09-18 08:33:21	WalrusPony	Orpheon: there is msys2 and mingw-w64 channels on oftc irc
2016-09-18 08:33:27	-->	Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2016-09-18 08:34:34	Orpheon	did not see that, thank you
2016-09-18 08:35:04	-->	losh (~losh@mail.kiwifrog.net) has joined ##c++
2016-09-18 08:35:35	-->	xnavor (~xnavor@78-70-4-240-no171.business.telia.com) has joined ##c++
2016-09-18 08:35:36	-->	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has joined ##c++
2016-09-18 08:36:34	-->	forgottenone (~forgotten@195.142.43.212) has joined ##c++
2016-09-18 08:36:34		[08:36]
2016-09-18 08:37:10	-->	calincru (~calin@c-73-231-85-3.hsd1.ca.comcast.net) has joined ##c++
2016-09-18 08:37:57	-->	velco (~chill@vlan-185-78-38-153.comnet.bg) has joined ##c++
2016-09-18 08:39:11	-->	CEnnis91 (uid3543@gateway/web/irccloud.com/x-nstvzfsxozmbkajp) has joined ##c++
2016-09-18 08:39:46	-->	YungRaj (~YungRaj@50-24-71-159.bcstcmtk01.res.dyn.suddenlink.net) has joined ##c++
2016-09-18 08:42:24	-->	zwf2 (zwoof@modemcable076.238-20-96.mc.videotron.ca) has joined ##c++
2016-09-18 08:42:27	<--	Unee0x_ (~Unee0x@cpe-45-37-239-204.nc.res.rr.com) has quit (Remote host closed the connection)
2016-09-18 08:42:51	<--	zenx (~serj@cpc24-nmal16-2-0-cust136.19-2.cable.virginm.net) has quit (Quit: Konversation terminated!)
2016-09-18 08:43:03	mads-	Given an enum class, can I compare a string with the keys in my enum and maybe even return the value of that key?
2016-09-18 08:43:15	-->	asc232 (~Keith@179.38.236.154) has joined ##c++
2016-09-18 08:43:25	RokerHRO	?
2016-09-18 08:43:38	<--	zwoof (zwoof@modemcable076.238-20-96.mc.videotron.ca) has quit (Ping timeout: 250 seconds)
2016-09-18 08:44:01	-->	medgno (~textual@c-73-181-187-190.hsd1.wa.comcast.net) has joined ##c++
2016-09-18 08:44:32	Moto-chan	mads-: No, there's no way to get what you have called an enum member
2016-09-18 08:44:41	Moto-chan	You'd have to make manual functions to convert back and forth
2016-09-18 08:44:47	<--	Orpheon (~Orpheon@213.200.193.129) has left ##c++ ("Leaving")
2016-09-18 08:44:57	Moto-chan	At least, there isn't yet. :3 C++ compile time reflection may arrive.
2016-09-18 08:45:14	mads-	Moto-chan: roger. Thanks. Seems a bit tedious if you add/delete enum members.
2016-09-18 08:45:34	Moto-chan	Yup
2016-09-18 08:46:01	<--	ZMatt2 (~ZMatt2@host116-147-dynamic.61-82-r.retail.telecomitalia.it) has quit (Ping timeout: 250 seconds)
2016-09-18 08:46:25	-->	uvshi (~uvshi@nag77-2-83-152-154-106.fbx.proxad.net) has joined ##c++
2016-09-18 08:46:42	<--	uvshi (~uvshi@nag77-2-83-152-154-106.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-18 08:47:02	-->	mzke (~mzke@nag77-2-83-152-154-106.fbx.proxad.net) has joined ##c++
2016-09-18 08:47:21	<--	mzke (~mzke@nag77-2-83-152-154-106.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-18 08:48:18	<--	xnavor (~xnavor@78-70-4-240-no171.business.telia.com) has quit (Quit: This computer has gone to sleep)
2016-09-18 08:48:23	<--	a3f (~a3f@unaffiliated/a3f) has quit (Quit: Zzzzz..)
2016-09-18 08:48:26	<--	asc232 (~Keith@179.38.236.154) has quit (Remote host closed the connection)
2016-09-18 08:49:26	-->	iceiceice (~chris@pool-71-172-187-9.nwrknj.east.verizon.net) has joined ##c++
2016-09-18 08:50:23	-->	xnavor (~xnavor@78-70-4-240-no171.business.telia.com) has joined ##c++
2016-09-18 08:51:09	-->	daniel-s (~daniel-s@AToulouse-652-1-284-209.w109-220.abo.wanadoo.fr) has joined ##c++
2016-09-18 08:51:37	et	mads-: there is things like https://github.com/aantron/better-enums
2016-09-18 08:51:37		[08:51]
2016-09-18 08:51:58	et	*are
2016-09-18 08:52:25	-->	ZMatt2 (~ZMatt2@host33-176-dynamic.59-82-r.retail.telecomitalia.it) has joined ##c++
2016-09-18 08:53:21	<--	bigpet (uid25664@gateway/web/irccloud.com/x-mvrwbxvoepvooagm) has quit (Quit: Connection closed for inactivity)
2016-09-18 08:54:27	<--	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has quit (Ping timeout: 244 seconds)
2016-09-18 08:54:45	-->	nikki93 (~nikki93@2601:645:8104:cb10:3dfc:2f22:622b:3eac) has joined ##c++
2016-09-18 08:55:49	<--	Akimbas (~Akimb@hst-128-72.telelanas.lt) has quit (Ping timeout: 244 seconds)
2016-09-18 08:55:56	-->	ctnguyen (~chau@cpe-107-185-147-68.socal.res.rr.com) has joined ##c++
2016-09-18 08:57:50	-->	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has joined ##c++
2016-09-18 08:58:41	<--	dv__ (~quassel@62.178.118.86) has quit (Ping timeout: 240 seconds)
2016-09-18 08:59:16	<--	nikki93 (~nikki93@2601:645:8104:cb10:3dfc:2f22:622b:3eac) has quit (Ping timeout: 255 seconds)
2016-09-18 08:59:34	-->	dv_ (~quassel@62.178.118.86) has joined ##c++
2016-09-18 09:00:32	-->	symm- (~symm-@86.127.152.32) has joined ##c++
2016-09-18 09:02:15	<--	everamzah (~james@cpe-172-101-13-131.maine.res.rr.com) has quit (Quit: WeeChat 1.5)
2016-09-18 09:02:38	<--	daniel-s (~daniel-s@AToulouse-652-1-284-209.w109-220.abo.wanadoo.fr) has quit (Quit: Konversation terminated!)
2016-09-18 09:03:09	-->	TheScholar (~randomman@ool-44c16ddc.dyn.optonline.net) has joined ##c++
2016-09-18 09:03:29	<--	ibouvousaime (~ibouvousa@41.83.63.72) has quit (Ping timeout: 240 seconds)
2016-09-18 09:03:50	<--	oxygene (~fred@ALille-652-1-134-14.w83-198.abo.wanadoo.fr) has quit (Quit: Quitte)
2016-09-18 09:04:22	-->	TikityTik (~TikityTik@162.223.44.49) has joined ##c++
2016-09-18 09:04:42	<--	TheScholar (~randomman@ool-44c16ddc.dyn.optonline.net) has quit (Client Quit)
2016-09-18 09:07:31	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 09:07:31		[09:07]
2016-09-18 09:07:39	<--	rikster (~SpaceDino@62.102.148.177) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-09-18 09:07:50	-->	CuriousErnestBro (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has joined ##c++
2016-09-18 09:13:00		[09:07]
2016-09-18 09:13:11	--	irc: disconnected from server
2016-09-18 09:13:47	-->	alyptik (~alyptik@unaffiliated/alyptik) has joined ##c++
2016-09-18 09:13:47	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || https://isocpp.org/faq || pastes: http://melpon.org/wandbox"
2016-09-18 09:13:47	--	Topic set by V-ille (~ville@81-175-149-170.bb.dnainternet.fi) on Fri, 18 Sep 2015 07:13:01
2016-09-18 09:13:47	--	Channel ##c++: 1005 nicks (0 ops, 0 voices, 1005 normals)
2016-09-18 09:13:47	***	Buffer Playback...
2016-09-18 09:13:47	Ender13	[16:57:48] prime.c: In function ‘int main()’: [16:57:48]
2016-09-18 09:13:47	Ender13	[16:57:48] prime.c:6:8: error: ‘clrscr’ was not declared in this scope [16:57:48]
2016-09-18 09:13:47	Ender13	[16:57:48]  clrscr();                                //For Clearing the console screen [16:57:48]
2016-09-18 09:13:47	Ender13	[16:57:48]         ^ [16:57:48]
2016-09-18 09:13:47	Ender13	[16:57:49] prime.c:20:8: error: ‘getche’ was not declared in this scope [16:57:49]
2016-09-18 09:13:47	Ender13	[16:57:49]  getche();                             //To exit the program after an user's keystroke [16:57:49]
2016-09-18 09:13:47	Ender13	[16:57:50] nope [16:57:50]
2016-09-18 09:13:47	Ender13	[16:58:02] this is the error i get with that [16:58:02]
2016-09-18 09:13:47	decimad	[16:58:12] yeah, it says what you did wrong right there [16:58:12]
2016-09-18 09:13:47	decimad	[16:58:31] read it, act upon ot [16:58:31]
2016-09-18 09:13:47	decimad	[16:58:34] *it [16:58:34]
2016-09-18 09:13:47	megaTherion	[17:00:27] Ender13: dont try to sell C++ features as C code [17:00:27]
2016-09-18 09:13:47	Tachyon_	[17:05:35] Bigcheese: an article about this please ? [17:05:35]
2016-09-18 09:13:47	Cthulhux	[17:16:57]  <Bigcheese> also, wtf, VS can now officially target Linux << hooray? [17:16:57]
2016-09-18 09:13:47	V-ille	[17:24:23] meaning that it can target android? [17:24:23]
2016-09-18 09:13:47	V-ille	[17:25:03] ah, no, the real deal https://blogs.msdn.microsoft.com/vcblog/2016/03/30/visual-c-for-linux-development/ [17:25:03]
2016-09-18 09:13:47	z16	[17:39:50] "[...] or find me on Twitter @robotdad." [17:39:50]
2016-09-18 09:13:47	z16	[17:40:09] Something refreshing about microsoft representatives with such handles :) [17:40:09]
2016-09-18 09:13:47	Orpheon	[18:27:11] Hello, I'm trying to use Allegro 5 with MSYS2 on windows 32 bit, and after installing both allegro5.1 and g++ through MSYS2's pacman I get https://puu.sh/rfDR6/538268524f.png [18:27:11]
2016-09-18 09:13:47	Orpheon	[18:27:33] the PATH does not point to any other versions of either [18:27:33]
2016-09-18 09:13:47	Orpheon	[18:27:45] does anyone know how I could find out what is going on? [18:27:45]
2016-09-18 09:13:47	Moto-chan	[18:28:03] Well [18:28:03]
2016-09-18 09:13:47	Moto-chan	[18:28:07] do you have that dll? [18:28:07]
2016-09-18 09:13:47	Moto-chan	[18:28:30] Or are you sure the one you have is the one it wants [18:28:30]
2016-09-18 09:13:47	Moto-chan	[18:28:45] For this winblobs stuff, there's often 2 or 3 versions of the same version dll [18:28:45]
2016-09-18 09:13:47	Moto-chan	[18:28:53] Slightly modified or whatever [18:28:53]
2016-09-18 09:13:47	Moto-chan	[18:28:57] Such is DLL Hell [18:28:57]
2016-09-18 09:13:47	Orpheon	[18:29:35] yes, the DLL is there, and MSYS2 lists only two versions, one for 64-bit and one for 32-bit, and the latter is installed [18:29:35]
2016-09-18 09:13:47	RokerHRO	[18:29:41] !stdcpp DLL [18:29:41]
2016-09-18 09:13:47	nolyc	[18:29:42] Standard C++ has no notion of `DLL', so you must be talking about some specific OS- or library API (or tool), which is beyond the scope of this channel (which focuses on standard C++). [18:29:42]
2016-09-18 09:13:47	Orpheon	[18:30:06] which channel should I go to? [18:30:06]
2016-09-18 09:13:47	Moto-chan	[18:30:20] ##c++-general [18:30:20]
2016-09-18 09:13:47	Moto-chan	[18:30:25] Or ##winapi [18:30:25]
2016-09-18 09:13:47	Moto-chan	[18:30:31] or was is #winapi [18:30:31]
2016-09-18 09:13:47	Moto-chan	[18:30:33] iono [18:30:33]
2016-09-18 09:13:47	Orpheon	[18:31:06] alright, thank you [18:31:06]
2016-09-18 09:13:47	WalrusPony	[18:32:14] well this isn't a winapi issue [18:32:14]
2016-09-18 09:13:47	WalrusPony	[18:32:27] Orpheon: In this case you'd want a mingw or msys irc channel specifically [18:32:27]
2016-09-18 09:13:47	Orpheon	[18:32:48] msys would be nice, but the #msys channel on freenode is pretty dead [18:32:48]
2016-09-18 09:13:47	WalrusPony	[18:33:21] Orpheon: there is msys2 and mingw-w64 channels on oftc irc [18:33:21]
2016-09-18 09:13:47	Orpheon	[18:34:34] did not see that, thank you [18:34:34]
2016-09-18 09:13:47	mads-	[18:43:03] Given an enum class, can I compare a string with the keys in my enum and maybe even return the value of that key? [18:43:03]
2016-09-18 09:13:47	RokerHRO	[18:43:25] ? [18:43:25]
2016-09-18 09:13:47	Moto-chan	[18:44:32] mads-: No, there's no way to get what you have called an enum member [18:44:32]
2016-09-18 09:13:47	Moto-chan	[18:44:41] You'd have to make manual functions to convert back and forth [18:44:41]
2016-09-18 09:13:47	Moto-chan	[18:44:57] At least, there isn't yet. :3 C++ compile time reflection may arrive. [18:44:57]
2016-09-18 09:13:47	mads-	[18:45:14] Moto-chan: roger. Thanks. Seems a bit tedious if you add/delete enum members. [18:45:14]
2016-09-18 09:13:47	Moto-chan	[18:45:34] Yup [18:45:34]
2016-09-18 09:13:47	et	[18:51:37] mads-: there is things like https://github.com/aantron/better-enums [18:51:37]
2016-09-18 09:13:47	et	[18:51:57] *are [18:51:57]
2016-09-18 09:13:47	***	Playback Complete.
2016-09-18 09:14:11	<--	jamesaxl (~jamesaxl@176.98.129.195) has quit (Ping timeout: 248 seconds)
2016-09-18 09:14:46	--	Channel created on Fri, 14 Sep 2001 17:15:35
2016-09-18 09:15:05	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 09:15:29	<--	systemfault (~rcyr@unaffiliated/rcyr) has quit (Quit: Bye!)
2016-09-18 09:15:29	-->	jamesaxl (~jamesaxl@176.98.129.195) has joined ##c++
2016-09-18 09:15:35	<--	psychicist__ (~psychicis@ip127-8-212-87.adsl2.static.versatel.nl) has quit (Ping timeout: 260 seconds)
2016-09-18 09:15:54	-->	kasper^ (~safaf@82.137.8.17) has joined ##c++
2016-09-18 09:15:58	<--	kasper_ (~safaf@82.137.15.165) has quit (Ping timeout: 244 seconds)
2016-09-18 09:18:41	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 09:19:04	<--	plusone (~plusone@176.24.26.166) has quit (Ping timeout: 240 seconds)
2016-09-18 09:19:34	<--	itaitb (~itaitb@unaffiliated/itaitb) has quit (Ping timeout: 240 seconds)
2016-09-18 09:20:00	-->	psychicist__ (~psychicis@ip127-8-212-87.adsl2.static.versatel.nl) has joined ##c++
2016-09-18 09:20:07	-->	kaffeetrauma (~Thunderbi@2a03:2260:300a:1000:916:6d34:d33a:429) has joined ##c++
2016-09-18 09:20:46	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 09:20:47	<--	FreeBirdLjj (~freebirdl@2002:df41:a889:0:6e40:8ff:fe93:2ce0) has quit (Remote host closed the connection)
2016-09-18 09:20:47	<--	kaffeetrauma (~Thunderbi@2a03:2260:300a:1000:916:6d34:d33a:429) has quit (Client Quit)
2016-09-18 09:20:52	TikityTik	What is the channel for C?
2016-09-18 09:20:59	TikityTik	nevermind
2016-09-18 09:21:48	-->	kaffeetrauma (~Thunderbi@2a03:2260:300a:1000:916:6d34:d33a:429) has joined ##c++
2016-09-18 09:23:03	-->	ferdna (~ferdna@cpe-69-23-141-130.elp.res.rr.com) has joined ##c++
2016-09-18 09:23:04	<--	yan (~user@162.243.0.148) has quit (Ping timeout: 250 seconds)
2016-09-18 09:23:12	-->	CoolBreeze (~CoolBreez@87-228-34.netrunf.cytanet.com.cy) has joined ##c++
2016-09-18 09:23:44	-->	yan (~user@162.243.0.148) has joined ##c++
2016-09-18 09:23:54	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Read error: No route to host)
2016-09-18 09:25:42	-->	ibouvousaime (~ibouvousa@41.83.62.158) has joined ##c++
2016-09-18 09:26:08	<--	ibouvousaime (~ibouvousa@41.83.62.158) has quit (Client Quit)
2016-09-18 09:26:45	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 09:26:50	<--	nacon (~nacon@unaffiliated/nacon) has quit (Quit: leaving)
2016-09-18 09:27:55	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-18 09:28:47	-->	EvilPenguin (~EvilPengu@2605:e000:6189:9600:d79:b2d8:9b78:5293) has joined ##c++
2016-09-18 09:28:47		[09:28]
2016-09-18 09:29:02	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 09:30:14	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Remote host closed the connection)
2016-09-18 09:30:21	-->	Fruitstand (~fruitstan@c-73-153-135-25.hsd1.co.comcast.net) has joined ##c++
2016-09-18 09:32:18	<--	snyp (~Snyp@150.129.132.100) has quit (Quit: WeeChat 1.5)
2016-09-18 09:32:19	<--	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has quit (Ping timeout: 248 seconds)
2016-09-18 09:32:58	<--	pylbrecht (~pylbrecht@hotsplots-blu1-ip14.cust.syseleven.net) has quit (Quit: WeeChat 1.5)
2016-09-18 09:33:58	<--	szulak (uid162164@gateway/web/irccloud.com/x-fxpqmlcywvgiepuw) has quit (Quit: Connection closed for inactivity)
2016-09-18 09:34:00	<--	blueness (~blueness@gentoo/developer/blueness) has quit (Quit: blueness)
2016-09-18 09:34:36	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-18 09:35:48	<--	fx21 (~fx@c80-216-5-68.bredband.comhem.se) has quit (Quit: Leaving)
2016-09-18 09:36:30	<--	fahadash (uid44972@gateway/web/irccloud.com/x-jdpdpcenxzzzxjgz) has quit (Quit: Connection closed for inactivity)
2016-09-18 09:37:01	-->	nilg (~user@77.70.2.229) has joined ##c++
2016-09-18 09:37:37	<--	karab44 (~karab44@unaffiliated/karab44) has quit (Quit: Bye bye! o/)
2016-09-18 09:38:47	<--	kasper^ (~safaf@82.137.8.17) has quit (Ping timeout: 272 seconds)
2016-09-18 09:39:39	-->	kasper^ (~safaf@82.137.11.2) has joined ##c++
2016-09-18 09:41:41	<--	vuoto (~vuoto@80-71-135-9.u.parknet.dk) has quit (Remote host closed the connection)
2016-09-18 09:41:50	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 09:41:59	-->	vuoto (~vuoto@80-71-135-9.u.parknet.dk) has joined ##c++
2016-09-18 09:41:59	-->	asc232 (~Keith@179.38.236.154) has joined ##c++
2016-09-18 09:42:01	<--	vuoto (~vuoto@80-71-135-9.u.parknet.dk) has quit (Remote host closed the connection)
2016-09-18 09:42:19	-->	vuoto (~vuoto@80-71-135-9.u.parknet.dk) has joined ##c++
2016-09-18 09:42:31	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Remote host closed the connection)
2016-09-18 09:44:01	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 09:44:01		[09:44]
2016-09-18 09:44:05	-->	karts (43a45b4e@gateway/web/cgi-irc/kiwiirc.com/ip.67.164.91.78) has joined ##c++
2016-09-18 09:44:36	<--	EvilPenguin (~EvilPengu@2605:e000:6189:9600:d79:b2d8:9b78:5293) has quit (Ping timeout: 265 seconds)
2016-09-18 09:44:54	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 09:45:13	-->	ibouvousaime (~ibouvousa@41.83.62.158) has joined ##c++
2016-09-18 09:47:07	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 09:47:31	-->	karakedi (~eAC53C340@unaffiliated/orphan) has joined ##c++
2016-09-18 09:47:44	<--	Nitrodev (~Nitrodev@85-23-77-207.bb.dnainternet.fi) has quit (Read error: Connection reset by peer)
2016-09-18 09:48:24	-->	Kn|t3 (~agarwalvi@49.207.53.8) has joined ##c++
2016-09-18 09:48:35	<--	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-09-18 09:49:04	-->	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 09:49:46	<--	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-09-18 09:49:57	-->	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 09:50:22	<--	KindOne (kindone@freenude/topless/kindone) has quit (Quit: https://tools.ietf.org/html/rfc1459#section-4.1.6)
2016-09-18 09:50:35	-->	neurodrone (~neurodron@unaffiliated/neurodrone) has joined ##c++
2016-09-18 09:50:43	-->	KindOne (kindone@freenude/topless/kindone) has joined ##c++
2016-09-18 09:51:38	-->	blueness (~blueness@gentoo/developer/blueness) has joined ##c++
2016-09-18 09:53:43	<--	zagabar (~zagabar@unaffiliated/zagabar) has quit (Quit: WeeChat 1.5)
2016-09-18 09:54:02	<--	SteffanW (~steffanw@ip4da40774.direct-adsl.nl) has quit (Read error: Connection reset by peer)
2016-09-18 09:54:55	-->	Adva (~Hyrule@2a02:810a:12c0:5068:75db:ec40:221e:2a2b) has joined ##c++
2016-09-18 09:58:01	<--	dreamfighter (~awayawm@173-31-201-54.client.mchsi.com) has quit (Ping timeout: 248 seconds)
2016-09-18 09:58:17	<--	calincru (~calin@c-73-231-85-3.hsd1.ca.comcast.net) has quit (Ping timeout: 240 seconds)
2016-09-18 09:58:34	<--	velco (~chill@vlan-185-78-38-153.comnet.bg) has quit (Quit: Leaving)
2016-09-18 09:59:49	-->	zrneely (~zrneely@dhcp-18-189-127-98.dyn.mit.edu) has joined ##c++
2016-09-18 09:59:49		[09:59]
2016-09-18 10:00:10	<--	kang0 (~androirc@136.185.60.225) has quit (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
2016-09-18 10:00:40	zrneely	Can someone tell me why this function isn't constexpr? http://pastebin.com/wgMZytvm
2016-09-18 10:00:57	zrneely	(Assuming the pow function is constexpr, which it should be
2016-09-18 10:01:00	zrneely	)
2016-09-18 10:02:15	-->	lolek (~lolek@unaffiliated/marcin) has joined ##c++
2016-09-18 10:02:59	<--	refbot (~MotoBot@unaffiliated/moto-chan/bot/refbot) has quit (Ping timeout: 244 seconds)
2016-09-18 10:03:45	-->	Akahige (~Rob@unaffiliated/moto-chan) has joined ##c++
2016-09-18 10:03:46	PJBoy	better check your assumptions
2016-09-18 10:03:52	-->	everamzah (~james@cpe-198-255-184-0.maine.res.rr.com) has joined ##c++
2016-09-18 10:04:15	PJBoy	it can't be constexpr because it does some crazy ass error handling
2016-09-18 10:04:32	<--	Moto-chan (~Rob@unaffiliated/moto-chan) has quit (Ping timeout: 244 seconds)
2016-09-18 10:04:51	<--	ibouvousaime (~ibouvousa@41.83.62.158) has quit (Ping timeout: 248 seconds)
2016-09-18 10:05:17	zrneely	My IDE gives me an error on the left-most term in the expression, is that just a false positive then?
2016-09-18 10:05:27	zrneely	I'm fine writing out the multiplications if I have to
2016-09-18 10:05:28	-->	refbot (~MotoBot@unaffiliated/moto-chan/bot/refbot) has joined ##c++
2016-09-18 10:05:33	<--	psychicist__ (~psychicis@ip127-8-212-87.adsl2.static.versatel.nl) has quit (Ping timeout: 240 seconds)
2016-09-18 10:06:28	-->	Rialynn (~Rialynn@unaffiliated/rialynn) has joined ##c++
2016-09-18 10:06:39	Rialynn	I'm trying to use istream::read() to read in n characters from a file into a vector. However since istream::read accepts (char* s, streamsize n) I can't get it to work. Is there something similar I can do to read n chars from a file into a vector without having to use a for or while loop?
2016-09-18 10:06:52	Rialynn	Currently I just open the file and then run a for loop for i = 0; i < numCharsToRead and each iteration i just do charVector.push_back(infile.get()); which is working, but I'm wondering if I can make it cleaner
2016-09-18 10:07:06	-->	franl (~nobody@216.sub-70-215-30.myvzw.com) has joined ##c++
2016-09-18 10:07:10	Rialynn	I guess both have the same run time and it doesn't really matter since both will have to grab n characters regardless of which of those two I use.
2016-09-18 10:07:13	hs_	Rialynn, vector<char>?
2016-09-18 10:07:25	Rialynn	hs_: yeah
2016-09-18 10:07:30	PJBoy	zrneely, gcc is compiling that function just fine actually
2016-09-18 10:07:32	hs_	Rialynn, if so, resize it (or size it initially with the correct constructor) and then pass .data()
2016-09-18 10:07:35	-->	ibouvousaime (~ibouvousa@41.83.62.158) has joined ##c++
2016-09-18 10:07:48	<--	symm- (~symm-@86.127.152.32) has quit (Quit: Leaving...)
2016-09-18 10:07:55	<--	chang (~vayne@pD9E445E0.dip0.t-ipconnect.de) has quit (Quit: Bye~)
2016-09-18 10:08:08	-->	zagabar (~zagabar@c213-89-112-5.bredband.comhem.se) has joined ##c++
2016-09-18 10:08:08	<--	zagabar (~zagabar@c213-89-112-5.bredband.comhem.se) has quit (Changing host)
2016-09-18 10:08:08	-->	zagabar (~zagabar@unaffiliated/zagabar) has joined ##c++
2016-09-18 10:08:22	zrneely	PJBoy, ok, looks like msvc is being dumb. It works there if I write out the multiplication, so that's what I'm going to do
2016-09-18 10:08:24	hs_	also, do not use reserve, use resize
2016-09-18 10:08:45	PJBoy	I'm pretty sure pow isn't defined as constexpr yet
2016-09-18 10:08:54	PJBoy	but whatever works
2016-09-18 10:09:18	<--	lolek (~lolek@unaffiliated/marcin) has quit (Quit: Leaving.)
2016-09-18 10:09:29	-->	lolek (~lolek@unaffiliated/marcin) has joined ##c++
2016-09-18 10:09:35	<--	lolek (~lolek@unaffiliated/marcin) has left ##c++
2016-09-18 10:09:40	-->	symm- (~symm-@86.127.152.32) has joined ##c++
2016-09-18 10:10:00	Akahige	!stdref pow
2016-09-18 10:10:01	refbot	std::pow: http://en.cppreference.com/w/cpp/numeric/math/pow
2016-09-18 10:10:07	Akahige	Pow isn't constexpr
2016-09-18 10:10:16	Akahige	You could easily write your own pow to be constexpr though
2016-09-18 10:10:23	Akahige	At least for integral args
2016-09-18 10:10:47	PJBoy	I'm uneasy with using cmath operations for integral args anyway
2016-09-18 10:10:55	-->	Tempesta_ (~Tempesta@121.131.185.96) has joined ##c++
2016-09-18 10:11:04	<--	symm- (~symm-@86.127.152.32) has quit (Client Quit)
2016-09-18 10:11:28	Rialynn	hs_: I get a seg fault when I pass charVector.data() because there is nothing in the vector yet... but for some reason I'm blanking on what I should init the vector with
2016-09-18 10:11:48	hs_	{ constexpr float f = eval(1.0f,2.0f); float x,y; cout << noexcept(eval(1.0f,2.0f)), noexcept(eval(x,y)); } constexpr float eval(float a, float b) { return pow(a,b); } // gcc
2016-09-18 10:11:49	geordi	true, false
2016-09-18 10:12:10	hs_	Rialynn, "if so, resize it (or size it initially with the correct constructor)"
2016-09-18 10:12:28	hs_	Rialynn, vector<char> v; v.resize(some_number); ... etc
2016-09-18 10:12:32	Rialynn	hs_: Yeah I read that lol. I sized it initially to numchars
2016-09-18 10:12:36	<--	asc232 (~Keith@179.38.236.154) has quit (Remote host closed the connection)
2016-09-18 10:12:38	hs_	or vector<char> v(some_number);
2016-09-18 10:12:39	Rialynn	using the constructor that accepts a size param
2016-09-18 10:12:43	Rialynn	Yes I did that
2016-09-18 10:12:51	<--	SwiftMatt (~Objective@162.242.95.164) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-18 10:12:53	hs_	ok make sure you aren't writing beyond that
2016-09-18 10:13:07	PJBoy	that's perhaps not the safest method
2016-09-18 10:13:13	Rialynn	hs_: Okay, one sec. Thanks
2016-09-18 10:13:18	hs_	it's not even close to the safest method
2016-09-18 10:13:30	PJBoy	I'm sure there's a magic method using istream iterator and inserter
2016-09-18 10:13:39	<--	Tempesta (~Tempesta@unaffiliated/tempesta) has quit (Ping timeout: 265 seconds)
2016-09-18 10:14:54	hs_	well, let me rephrase my position on safety there.. it probably isn't as safe as a push_back inserter solution or whatever, but it is probably a lot simpler and easier to inspect with your eyes -- and faster
2016-09-18 10:14:54		[10:14]
2016-09-18 10:15:09	hs_	then again maybe there's a neat solution with a push_back like iterator
2016-09-18 10:16:58	Rialynn	hs_: LOL. I was initializing the size to numChars (which can vary) but I accidentally declared my vector before I set numChars to something that is not zero, like a noob.
2016-09-18 10:17:19	Rialynn	hs_: Thanks for your help. I knew I should be able to use istream::read but I totally goofed up there.
2016-09-18 10:18:01	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 10:18:17	<--	blueness (~blueness@gentoo/developer/blueness) has quit (Quit: blueness)
2016-09-18 10:19:21	Levitator	I feel like the entirety of streams should be shitcanned and replaced with something that is not a disaster.
2016-09-18 10:19:28	Rialynn	Lol
2016-09-18 10:19:44	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-18 10:19:47	Levitator	Or at least deprecated and replaced.
2016-09-18 10:20:09	-->	dreamfighter (~awayawm@173-31-201-54.client.mchsi.com) has joined ##c++
2016-09-18 10:20:11	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 10:20:46	<--	Cabanossi (~Cabanossi@p5DD7BF92.dip0.t-ipconnect.de) has quit (Quit: Bye, bye...)
2016-09-18 10:20:59	hs_	http://melpon.org/wandbox/permlink/Dzn42vutGgNcC6to // Rialynn, dummy version of what you want
2016-09-18 10:21:37	<--	wallen (~wallen@2a04:1980:3100:1aac:e61d:2dff:feb1:7871) has quit (Ping timeout: 255 seconds)
2016-09-18 10:22:28	-->	plusone (~plusone@176.24.26.166) has joined ##c++
2016-09-18 10:22:46	<--	step1step2 (~step1step@p54B93528.dip0.t-ipconnect.de) has quit (Ping timeout: 244 seconds)
2016-09-18 10:23:34	<--	iceiceice (~chris@pool-71-172-187-9.nwrknj.east.verizon.net) has quit (Ping timeout: 240 seconds)
2016-09-18 10:23:37	-->	Cabanossi (~Cabanossi@p5DD7BF92.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 10:24:48	-->	pavshn (~pavshn@ppp95-165-153-84.pppoe.spdop.ru) has joined ##c++
2016-09-18 10:25:55	-->	josh (~josh@c-67-182-242-240.hsd1.ut.comcast.net) has joined ##c++
2016-09-18 10:27:22	<--	Nilesh_ (uid116340@gateway/web/irccloud.com/x-innpshalgntuheea) has quit (Quit: Connection closed for inactivity)
2016-09-18 10:28:42	<--	rebb (~rebb3@p54B80E61.dip0.t-ipconnect.de) has quit (Quit: Pong timeout)
2016-09-18 10:29:47	<--	Kn|t3 (~agarwalvi@49.207.53.8) has quit (Quit: Kn|t3)
2016-09-18 10:31:03	Rialynn	hs_: awesome! How do you generate a link to what you type up? I want to show you what I did for mine. I'm still an undergrad student and I'm preparing for interviews I have coming up so I feel extra self conscious about everything I code up in the meantime.
2016-09-18 10:31:03		[10:31]
2016-09-18 10:31:07	<--	kaffeetrauma (~Thunderbi@2a03:2260:300a:1000:916:6d34:d33a:429) has quit (Quit: kaffeetrauma)
2016-09-18 10:32:17	Rialynn	hs_: Also, in school we had it drilled into us that our main should always end in return 0, which I could see since main is "int main" but I see you didn't return 0, is it not necessarily a requirement always?
2016-09-18 10:32:23	Akahige	Rialynn: Should say permalink somewhere on that page
2016-09-18 10:32:27	Akahige	Or "link this code"
2016-09-18 10:32:30	Akahige	Can't remember exactly
2016-09-18 10:33:00	Akahige	Oh, it's "Share this code"
2016-09-18 10:34:22	<--	wallbroken (~wallbroke@unaffiliated/wallbroken) has left ##c++
2016-09-18 10:34:25	<--	YungRaj (~YungRaj@50-24-71-159.bcstcmtk01.res.dyn.suddenlink.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-18 10:34:31	hs_	after you run
2016-09-18 10:34:35	<--	dreamfighter (~awayawm@173-31-201-54.client.mchsi.com) has quit (Changing host)
2016-09-18 10:34:35	-->	dreamfighter (~awayawm@unaffiliated/dreamfighter) has joined ##c++
2016-09-18 10:34:52	<--	dreamfighter (~awayawm@unaffiliated/dreamfighter) has left ##c++
2016-09-18 10:35:27	Rialynn	hs_: Ahh, yeah, got it! Here it is: http://melpon.org/wandbox/permlink/QoJgr9N8RB2Ey8P7
2016-09-18 10:36:41	<--	vuoto (~vuoto@80-71-135-9.u.parknet.dk) has quit (Remote host closed the connection)
2016-09-18 10:36:46	Rialynn	I'm just going through a bunch of "interview programming problems" right now. I'm open to critiques / tips for improvement etc. even though that is just a small example.
2016-09-18 10:38:15	<--	forgottenone (~forgotten@195.142.43.212) has quit (Quit: Konversation terminated!)
2016-09-18 10:38:44	<--	HerzogDeXtEr1 (~farci@i59F6D1C8.versanet.de) has quit (Read error: Connection reset by peer)
2016-09-18 10:38:47	Rialynn	I also will typically do checks/throw errors etc I'm just doing these quick for myself after I had written down my code on paper etc so I'm not that careless :D
2016-09-18 10:39:36	hs_	main has an implicit return 0; if you leave it out
2016-09-18 10:39:40	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Remote host closed the connection)
2016-09-18 10:40:03	Rialynn	hs_: oooh, good to know.
2016-09-18 10:40:12	-->	step1step2 (~step1step@p54B9261E.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 10:40:13	hs_	also, your code separates a lot of things that probably shouldn't be separated -- like reading into the vector without knowing the size, specifying the number of chars independently of the actual file size, etc
2016-09-18 10:40:18	Akahige	auto itr = charVector.begin();
2016-09-18 10:40:18	Akahige	    for(; itr != charVector.end(); ++itr)
2016-09-18 10:40:26	Akahige	^ Why init the itr outside of the for?
2016-09-18 10:40:38	-->	davidstone (~davidston@75-166-170-107.hlrn.qwest.net) has joined ##c++
2016-09-18 10:41:01	Rialynn	Akahige: I'm not sure, tbh. No real reason. I awkwardly got into the habit of doing it and then just kept doing it. I should put it inside, yeah?
2016-09-18 10:41:32	Akahige	I'd put it inside, as I think you should limit your scopes whenever possible.
2016-09-18 10:42:36	Akahige	If you want to make 2 loops in the same function with this method, you can't use i, or itr twice
2016-09-18 10:42:53	<--	SpaceDanceCJ (~Sasha@178.121.100.159) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-09-18 10:43:06	Rialynn	Akahige: ah yeah true. This way I can reuse itr next time.
2016-09-18 10:43:28	Akahige	It'd get pretty messy having to do itr1, itr2, itr3 when you only ever use one.
2016-09-18 10:43:31	Akahige	At a time
2016-09-18 10:43:48	<--	kasper^ (~safaf@82.137.11.2) has quit (Ping timeout: 244 seconds)
2016-09-18 10:44:15	Rialynn	hs_: Do you mean in the sense that I did my read without like error checks and what not? Because typically to this I would check that the file exists, then check that if it exists and someone wants to read say 1000 characters, but the file only has 10 characters it catches it etc
2016-09-18 10:44:23	-->	myhau (~myhau@host-94-251-132-31.dynamic.mm.pl) has joined ##c++
2016-09-18 10:44:32	<--	scai (~scai@p4FF0FBFC.dip0.t-ipconnect.de) has left ##c++ ("[IRSSI]")
2016-09-18 10:44:45	<--	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has quit (Ping timeout: 250 seconds)
2016-09-18 10:45:17	<--	Goplat (~goplat@reactos/developer/Goplat) has quit (Ping timeout: 272 seconds)
2016-09-18 10:45:27	<--	Phlow (~Kiss@199.44.8.162) has quit (Read error: Connection reset by peer)
2016-09-18 10:45:44	-->	Phlow (~Kiss@199.44.8.162) has joined ##c++
2016-09-18 10:46:15	-->	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has joined ##c++
2016-09-18 10:46:15		[10:46]
2016-09-18 10:46:34	<--	ZMatt2 (~ZMatt2@host33-176-dynamic.59-82-r.retail.telecomitalia.it) has quit (Ping timeout: 244 seconds)
2016-09-18 10:47:04	-->	Cohedrin (~textual@64.79.144.10) has joined ##c++
2016-09-18 10:47:36	<--	sphenxes01 (~sphenxes@192.164.155.49) has quit (Ping timeout: 244 seconds)
2016-09-18 10:47:36	<--	mussolini (~aceahmedm@unaffiliated/aceahmedmoh) has quit (Ping timeout: 244 seconds)
2016-09-18 10:47:36	<--	mgaunard_ (~mgaunard@host-92-8-36-190.as43234.net) has quit (Ping timeout: 244 seconds)
2016-09-18 10:47:36	<--	DollyDuplex (~chatterbo@81.169.150.203) has quit (Ping timeout: 244 seconds)
2016-09-18 10:47:37	Rialynn	hs_: The problem was just "Write a function to open a file and read in the first 1000 characters" which I interpreted as this is how many characters I want to read in from x file. In the example I linked you I just said 15 for numChars for example sake but with my checks if the numchars was > chars in file id just throw an error and hop out of the func etc. Not sure if that is what you meant
2016-09-18 10:47:49	<--	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has quit (Excess Flood)
2016-09-18 10:48:02	<--	tompaw (~tompaw@tompaw.xxx) has quit (Excess Flood)
2016-09-18 10:48:09	-->	tompaw (~tompaw@tompaw.xxx) has joined ##c++
2016-09-18 10:48:12	-->	DollyDuplex (~chatterbo@81.169.150.203) has joined ##c++
2016-09-18 10:48:16	-->	wallen (~wallen@2a04:1980:3100:1aac:e61d:2dff:feb1:7871) has joined ##c++
2016-09-18 10:48:17	-->	mgaunard_ (~mgaunard@host-92-8-36-190.as43234.net) has joined ##c++
2016-09-18 10:48:29	<--	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-09-18 10:48:32	-->	sphenxes01 (~sphenxes@192-164-155-49.hdsl.highway.telekom.at) has joined ##c++
2016-09-18 10:48:41	-->	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 10:48:42	-->	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has joined ##c++
2016-09-18 10:48:42	-->	aceahmedmoh (~aceahmedm@104.131.98.28) has joined ##c++
2016-09-18 10:49:35	<--	satifant (~sati@unaffiliated/satifant) has quit (Quit: Verlassend)
2016-09-18 10:49:44	<--	Cohedrin (~textual@64.79.144.10) has quit (Max SendQ exceeded)
2016-09-18 10:50:11	-->	ZMatt2 (~ZMatt2@host33-176-dynamic.59-82-r.retail.telecomitalia.it) has joined ##c++
2016-09-18 10:50:20	-->	Cohedrin (~textual@64.79.144.10) has joined ##c++
2016-09-18 10:50:47	<--	pureofpure (~pureofpur@2a02:582:1a39:dc00:a019:b2c1:7769:f41e) has quit (Remote host closed the connection)
2016-09-18 10:52:05	-->	spindle (~spindle@27-33-39-55.static.tpgi.com.au) has joined ##c++
2016-09-18 10:52:34	hs_	I didn't catch that
2016-09-18 10:52:50	-->	rriemann (~rriemann@cxr69-h01-31-34-2-69.dsl.sta.abo.bbox.fr) has joined ##c++
2016-09-18 10:53:18	-->	blueness (~blueness@gentoo/developer/blueness) has joined ##c++
2016-09-18 10:54:04	Rialynn	hs_: Sorry do you mean my messages here in the chat or something in my code?
2016-09-18 10:54:06	<--	kw01f (~kw01f@pD9FB3223.dip0.t-ipconnect.de) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-09-18 10:54:13	hs_	I mean what you are saying
2016-09-18 10:55:12	hs_	as I said, you are separating a lot of things that probably shouldn't be separated
2016-09-18 10:55:17	hs_	if you have some strange homework requirement that's fine
2016-09-18 10:55:20	<--	CuriousErnestBro (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has quit (Ping timeout: 260 seconds)
2016-09-18 10:55:37	<--	swnc (~swnc@port-92-204-17-23.dynamic.qsc.de) has left ##c++
2016-09-18 10:55:38	-->	nikki93 (~nikki93@2601:645:8104:cb10:5852:9a2e:5ef:bdbe) has joined ##c++
2016-09-18 10:56:12	<--	sh4z (lml@unaffiliated/sh4z) has quit (Read error: Connection reset by peer)
2016-09-18 10:57:23	hs_	maybe ##C++-basic is a better place to ask
2016-09-18 10:57:45	<--	Gathis (~TheBlack@unaffiliated/gathis) has quit (Remote host closed the connection)
2016-09-18 10:58:31	Rialynn	hs_: Yeah, my bad. It's not homework. I'm just going through questions that get asked in interviews and doing them. I just don't think I understand what you mean by I'm separating things
2016-09-18 10:59:55	<--	nikki93 (~nikki93@2601:645:8104:cb10:5852:9a2e:5ef:bdbe) has quit (Ping timeout: 250 seconds)
2016-09-18 11:00:01	hs_	Rialynn, e.g., within ReadChars, you do not know the relationship between numChars, charVector, and the ifstream you open
2016-09-18 11:01:08	hs_	Rialynn, it sounds in your case as though numChars is meant to be the minimum of the number of characters requested and the actual size of the file, or at least that's what you should load (and then maybe specify a default for any remainders, if they exist)
2016-09-18 11:01:31	<--	jkhl (~j@host86-166-214-159.range86-166.btcentralplus.com) has quit (Ping timeout: 244 seconds)
2016-09-18 11:01:31		[11:01]
2016-09-18 11:01:58	-->	EmeraldExplorer (uid87039@gateway/web/irccloud.com/x-widrpevcelujfptd) has joined ##c++
2016-09-18 11:02:23	<--	Hannibal_Smith (~nico@host215-56-dynamic.44-79-r.retail.telecomitalia.it) has quit (Ping timeout: 272 seconds)
2016-09-18 11:03:37	-->	bigpet (uid25664@gateway/web/irccloud.com/x-zvqozlsfyoogdkjk) has joined ##c++
2016-09-18 11:04:10	<--	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has quit (Quit: WeeChat 1.5)
2016-09-18 11:04:40	-->	TheScholar (~randomman@ool-44c16ddc.dyn.optonline.net) has joined ##c++
2016-09-18 11:04:42	-->	h4k1m (~hakim@unaffiliated/h4k1m) has joined ##c++
2016-09-18 11:04:52	-->	StyxAlso (~markg@120.88.147.168) has joined ##c++
2016-09-18 11:04:55	h4k1m	Hi everyone
2016-09-18 11:05:38	<--	Enhex (~Enhex@82.252.138.77.rev.sfr.net) has quit (Quit: Leaving)
2016-09-18 11:05:57	h4k1m	How can I initialize a dynamically allocated string (i.e. allocated with `char *ptr = new char[20]`)?
2016-09-18 11:07:22	-->	drozdziak1 (~drozdziak@89-70-116-45.dynamic.chello.pl) has joined ##c++
2016-09-18 11:08:23	hs_	{ char *c = new char[20]{'h','i',' ','t','h','e','r','e'}; cout << c; } // h4k1m -- and you don't want to do this..
2016-09-18 11:08:23	geordi	hi there
2016-09-18 11:08:33	hs_	use a std::string
2016-09-18 11:08:45	<--	rriemann (~rriemann@cxr69-h01-31-34-2-69.dsl.sta.abo.bbox.fr) has quit (Quit: Konversation terminated!)
2016-09-18 11:08:57	-->	rriemann (~rriemann@cxr69-h01-31-34-2-69.dsl.sta.abo.bbox.fr) has joined ##c++
2016-09-18 11:09:13	-->	SoItBegins (~SoItBegin@184.71.5.142) has joined ##c++
2016-09-18 11:09:16	h4k1m	hs_: You're right about using string instead, but I'm just learning cpp...
2016-09-18 11:10:05	-->	CuriousErnestBro (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has joined ##c++
2016-09-18 11:10:10	-->	soda1 (~soda@CPE00fc8d87a563-CM00fc8d87a560.cpe.net.cable.rogers.com) has joined ##c++
2016-09-18 11:10:13	-->	ambro718 (~ambro@unaffiliated/ambro718) has joined ##c++
2016-09-18 11:10:15	<--	TheScholar (~randomman@ool-44c16ddc.dyn.optonline.net) has quit
2016-09-18 11:10:26	ubsan	h4k1m: well
2016-09-18 11:10:30	ubsan	h4k1m: use a std::string then
2016-09-18 11:10:51	ubsan	{ std::string str = "hi there"; cout << str; }
2016-09-18 11:10:52	geordi	hi there
2016-09-18 11:10:57	<--	nilg (~user@77.70.2.229) has quit (Remote host closed the connection)
2016-09-18 11:11:26	ubsan	and never ever ever ever ever ever ever use new/delete
2016-09-18 11:11:35	<--	jamesaxl (~jamesaxl@176.98.129.195) has quit (Ping timeout: 265 seconds)
2016-09-18 11:11:39	ubsan	until you understand far far more about the language
2016-09-18 11:12:04	<--	zacts (~zacts@dragora/developer/zacts) has quit (Ping timeout: 265 seconds)
2016-09-18 11:12:24	h4k1m	ubsan: what else need to be understood before tackling new/delete (except pointers)?
2016-09-18 11:12:33	ubsan	h4k1m: everything
2016-09-18 11:12:38	Akahige	^
2016-09-18 11:12:43	ubsan	new/delete should be the absolute *last* thing you learn
2016-09-18 11:12:58	Akahige	new and delete are almost never necessary
2016-09-18 11:13:02	Akahige	And even when you think they are...
2016-09-18 11:13:14	Akahige	auto ptr = make_unique<T>(init...);
2016-09-18 11:13:16	pragma-	given that it's impossible to learn all of C++, he'll never get around to new/delete.
2016-09-18 11:13:24	ubsan	pragma-: good
2016-09-18 11:13:26	<--	rriemann (~rriemann@cxr69-h01-31-34-2-69.dsl.sta.abo.bbox.fr) has quit (Ping timeout: 244 seconds)
2016-09-18 11:13:38	h4k1m	pragma-: that's what I was thinking
2016-09-18 11:13:42	pragma-	/msg h4k1m look up malloc/free
2016-09-18 11:13:48	ubsan	pragma-: no
2016-09-18 11:13:55	pragma-	whoops
2016-09-18 11:13:57	-->	gagbo (~gagbo@unaffiliated/gagbo) has joined ##c++
2016-09-18 11:14:15	h4k1m	pragma-: I thought new/delete should preferred over malloc/free for c++
2016-09-18 11:14:23	pragma-	HE ALREADY KNOWS TOO MUCH!
2016-09-18 11:14:47	Akahige	Nah, use malloc always!
2016-09-18 11:14:49	ubsan	new/delete are the highest of code smell
2016-09-18 11:14:58	Akahige	Means you have to manually destruct everything!
2016-09-18 11:15:02	-->	dj_pi (~dj@c-73-191-212-56.hsd1.mi.comcast.net) has joined ##c++
2016-09-18 11:15:02	Akahige	SO MUCH MORE CONTROL!
2016-09-18 11:15:07	pragma-	yeah, when I see a program using new/delete, I'm like "man, this code sucks"
2016-09-18 11:15:27	Akahige	SAme
2016-09-18 11:15:40	pragma-	just use smart pointers
2016-09-18 11:15:56	Akahige	Smart pointers are still a resort low on my list.
2016-09-18 11:16:19	Akahige	Objects first, vector, string etc...
2016-09-18 11:16:21	<--	filcab (~irc@unaffiliated/filcab) has quit (Quit: leaving)
2016-09-18 11:16:32	h4k1m	Akahige: When you allocate with `malloc`, is it freed automatically?
2016-09-18 11:16:32		[11:16]
2016-09-18 11:16:51	Akahige	h4k1m: No, I did not advocate the use of malloc, t'was sarcasm.
2016-09-18 11:16:55	<--	CuriousErnestBro (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has quit (Remote host closed the connection)
2016-09-18 11:17:06	pragma-	ram is cheap.  here's $20, go buy another 32gb of ram.  now you don't have to worry about freeing things.
2016-09-18 11:17:07	h4k1m	Akahige: oups
2016-09-18 11:17:39	h4k1m	pragma-: that's right
2016-09-18 11:17:51	-->	filcab (~irc@unaffiliated/filcab) has joined ##c++
2016-09-18 11:18:02	aurialLoop	I wish 32gb of ram were $20
2016-09-18 11:18:14	pragma-	just shop around in china
2016-09-18 11:18:18	-->	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has joined ##c++
2016-09-18 11:18:32	-->	CuriousErnestBro (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has joined ##c++
2016-09-18 11:19:01	h4k1m	20$ won't even buy you an 8gig of ram
2016-09-18 11:19:07	Akahige	DDR1 might be $20 :P
2016-09-18 11:19:14	Akahige	But you'd have to buy a lot of sticks
2016-09-18 11:19:51	pragma-	wtf, 2gb is $10?  what a rip-off.
2016-09-18 11:20:28	pragma-	8gb for $35? is this for apple ram or something?
2016-09-18 11:21:05	pragma-	ah, here we go, 8bg for $12
2016-09-18 11:22:11	<--	Guest42098 (~mkretz@p54A79AA7.dip0.t-ipconnect.de) has quit (Ping timeout: 244 seconds)
2016-09-18 11:22:28	h4k1m	pragma-: on alibaba?
2016-09-18 11:22:46	pragma-	what a funny word
2016-09-18 11:23:12	-->	Vir (~mkretz@kde/mkretz) has joined ##c++
2016-09-18 11:23:40	-->	rimdeker (~rimdeker@unaffiliated/rimdeker) has joined ##c++
2016-09-18 11:25:07	<--	Cabanossi (~Cabanossi@p5DD7BF92.dip0.t-ipconnect.de) has quit (Ping timeout: 265 seconds)
2016-09-18 11:25:18	<--	KAHR-Alpha (~Alpha@AReims-652-1-76-199.w86-192.abo.wanadoo.fr) has quit (Remote host closed the connection)
2016-09-18 11:25:27	-->	nilg (~user@77.70.2.229) has joined ##c++
2016-09-18 11:25:37	-->	KAHR-Alpha (~Alpha@AReims-652-1-76-199.w86-192.abo.wanadoo.fr) has joined ##c++
2016-09-18 11:25:45	-->	Cabanossi (~Cabanossi@p5DD7BF92.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 11:26:36	<--	mfc (~mfc@unaffiliated/mfc) has quit (Read error: Connection reset by peer)
2016-09-18 11:26:44	<--	h4k1m (~hakim@unaffiliated/h4k1m) has quit (Quit: leaving)
2016-09-18 11:27:22	<--	raphaelsc (~raphaelsc@189.115.123.240) has quit (Remote host closed the connection)
2016-09-18 11:28:09	-->	rriemann (~rriemann@cxr69-h01-31-34-2-69.dsl.sta.abo.bbox.fr) has joined ##c++
2016-09-18 11:28:17	<--	zagabar (~zagabar@unaffiliated/zagabar) has quit (Quit: WeeChat 1.5)
2016-09-18 11:28:59	-->	doppel (~chatzilla@ip70-189-197-158.lv.lv.cox.net) has joined ##c++
2016-09-18 11:29:02	<--	rriemann (~rriemann@cxr69-h01-31-34-2-69.dsl.sta.abo.bbox.fr) has quit (Client Quit)
2016-09-18 11:30:51	<--	Cabanossi (~Cabanossi@p5DD7BF92.dip0.t-ipconnect.de) has quit (Quit: Bye, bye...)
2016-09-18 11:31:04	<--	Cohedrin (~textual@64.79.144.10) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-09-18 11:32:18	<--	franl (~nobody@216.sub-70-215-30.myvzw.com) has quit (Quit: O Elbereth! Gilthoniel! We still remember ...)
2016-09-18 11:32:18		[11:32]
2016-09-18 11:32:44	pragma-	what'd I say? alibaba is a funny word, isn't it?
2016-09-18 11:32:55	w3z	!focus
2016-09-18 11:32:56	nolyc	##c++ focuses on C++. Discuss offtopic things elsewhere; ##c++-general or ##c++-social
2016-09-18 11:33:22	pragma-	oh w3z is here. let's spam some geordi snippets and talk about how every c++ compiler is broken.
2016-09-18 11:33:45	-->	Cabanossi (~Cabanossi@p5DD7BF92.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 11:33:56	w3z	thats on topic, unlike your "attempts" at humor and/or trolling
2016-09-18 11:34:04	-->	GinoMan (~GinoMan@166.170.35.157) has joined ##c++
2016-09-18 11:34:05	pragma-	i am very funny.
2016-09-18 11:34:05	w3z	so, shh
2016-09-18 11:34:31	w3z	dont trust your moms assessment
2016-09-18 11:34:45	pragma-	my mom's assessment is off-topic, you hypocrite.
2016-09-18 11:35:14	<--	Cabanossi (~Cabanossi@p5DD7BF92.dip0.t-ipconnect.de) has quit (Client Quit)
2016-09-18 11:35:27	<--	seishun (~Kakera@46.109.151.237) has quit (Ping timeout: 250 seconds)
2016-09-18 11:35:52	Levitator	Why the hell does wstring_convert seize ownership of the conversion facet? Why? Did they deliberately design it to be self-defeating?
2016-09-18 11:36:08	-->	SpaceDanceCJ (~Sasha@178.121.65.125) has joined ##c++
2016-09-18 11:37:00	Levitator	And you can't copy facet's either, so you it's as if they intentionally decided "Yeah, we want to make string conversion easier, but we want to deliberately break compatibility with streams and make you special-case it all"
2016-09-18 11:38:09	<--	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has quit (Ping timeout: 276 seconds)
2016-09-18 11:38:20	<--	drozdziak1 (~drozdziak@89-70-116-45.dynamic.chello.pl) has quit (Quit: WeeChat 1.5)
2016-09-18 11:40:54	-->	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has joined ##c++
2016-09-18 11:41:17	-->	Cabanossi (~Cabanossi@p5DD7BF92.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 11:41:50	<--	GinoMan (~GinoMan@166.170.35.157) has quit (Ping timeout: 244 seconds)
2016-09-18 11:41:53	-->	bkboggy (~bkboggy@cpe-172-250-147-60.socal.res.rr.com) has joined ##c++
2016-09-18 11:41:55	<--	plusone (~plusone@176.24.26.166) has quit (Ping timeout: 248 seconds)
2016-09-18 11:42:13	KrzaQ	Is Cppcon livestreamed?
2016-09-18 11:42:15	-->	Mike11 (~Mike@unaffiliated/mike11) has joined ##c++
2016-09-18 11:42:51	Levitator	Look at the workaround at the bottom: http://en.cppreference.com/w/cpp/locale/wstring_convert/wstring_convert
2016-09-18 11:43:11	Levitator	I mean, WTF is this? If you can delete the damned things in the first place, then why did they delete the destructor? That's asinine.
2016-09-18 11:44:53	w3z	KrzaQ: i dunno, if you find a link post it, but i think they go up after the conference is over
2016-09-18 11:45:14	Levitator	So, I guess, if you want to make wstring_convert from a conversion facet from a locale object, you have to find out the locale's string name and instantiate a deletable codecvt adapter from the same name string.
2016-09-18 11:45:23	-->	Rudolf (~rodolfo@unaffiliated/rudolf) has joined ##c++
2016-09-18 11:45:24	Levitator	Because it's fun to make shit pointlessly inefficient and convoluted.
2016-09-18 11:45:28	KrzaQ	Will do, w3z
2016-09-18 11:45:33	<--	riemann (~riemann@ip-222-209.ists.pl) has quit (Ping timeout: 240 seconds)
2016-09-18 11:45:41	KrzaQ	Going Natives were livestreamed and the quality was great :<
2016-09-18 11:47:09	<--	sedeki (~textual@unaffiliated/sedeki) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-09-18 11:47:22	-->	GinoMan (~GinoMan@2601:41:c101:487a:18b6:1e2:d0a0:624d) has joined ##c++
2016-09-18 11:47:22		[11:47]
2016-09-18 11:48:34	-->	GinoMan2440 (~GinoMan@2601:41:c101:487a:18b6:1e2:d0a0:624d) has joined ##c++
2016-09-18 11:48:41	<--	DingoSaar (~hagen@pD9E08AEF.dip0.t-ipconnect.de) has quit (Ping timeout: 240 seconds)
2016-09-18 11:48:49	<--	tristanseifert (~tristanse@128.194.3.4) has quit (Read error: Connection reset by peer)
2016-09-18 11:49:12	-->	velco (~chill@vlan-185-78-38-153.comnet.bg) has joined ##c++
2016-09-18 11:49:13	-->	tristanseifert (~tristanse@128.194.3.4) has joined ##c++
2016-09-18 11:49:48	Levitator	Oh, boy! std::codecvt_byname! That's utter genius. How about just std::new_facet<whatever_t>(locale)?
2016-09-18 11:50:15	Levitator	I'm either missing something, or the C++ committee has turned to crack smoking.
2016-09-18 11:50:38	<--	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has quit (Read error: Connection reset by peer)
2016-09-18 11:51:02	-->	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 11:51:46	<--	GinoMan (~GinoMan@2601:41:c101:487a:18b6:1e2:d0a0:624d) has quit (Ping timeout: 265 seconds)
2016-09-18 11:51:53	<--	Appleman1234 (~Appleman1@KD119104050103.au-net.ne.jp) has quit (Ping timeout: 240 seconds)
2016-09-18 11:52:17	-->	Tempesta (~Tempesta@121.131.185.96) has joined ##c++
2016-09-18 11:52:17	<--	Tempesta (~Tempesta@121.131.185.96) has quit (Changing host)
2016-09-18 11:52:17	-->	Tempesta (~Tempesta@unaffiliated/tempesta) has joined ##c++
2016-09-18 11:53:30	-->	Appleman1234 (~Appleman1@KD119104045198.au-net.ne.jp) has joined ##c++
2016-09-18 11:54:08	<--	AndChat|578100 (~AndChat57@dyndsl-037-138-113-065.ewe-ip-backbone.de) has quit (Ping timeout: 265 seconds)
2016-09-18 11:55:09	<--	Tempesta_ (~Tempesta@121.131.185.96) has quit (Ping timeout: 265 seconds)
2016-09-18 11:55:28	<--	StyxAlso (~markg@120.88.147.168) has quit (Quit: StyxAlso)
2016-09-18 11:56:27	ville	turned?
2016-09-18 11:56:30	<--	coco (~coco@53541674.cm-6-5a.dynamic.ziggo.nl) has quit (Quit: WeeChat 1.5)
2016-09-18 11:56:42	ville	it's not like it's a recent development
2016-09-18 11:57:30	<--	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has quit (Ping timeout: 264 seconds)
2016-09-18 11:57:53	<--	a3Dman (~3Dman@unaffiliated/a3dman) has quit (Ping timeout: 240 seconds)
2016-09-18 11:58:20	-->	fahadash (uid44972@gateway/web/irccloud.com/x-awbfnwekhbvewnms) has joined ##c++
2016-09-18 12:00:48	<--	pbor (~paolo@host94-89-dynamic.5-87-r.retail.telecomitalia.it) has quit (Remote host closed the connection)
2016-09-18 12:01:34	<--	tadaa (~tadaaa@nat-wh-wz4-12.rz.uni-karlsruhe.de) has quit
2016-09-18 12:02:24	<--	regedit (uid150526@gateway/web/irccloud.com/x-cuydonczeudsowui) has quit (Quit: Connection closed for inactivity)
2016-09-18 12:02:24		[12:02]
2016-09-18 12:03:56	Levitator	Ok, so if I want a deletable codecvt from an extant locale, I can use something like std::codecvt_byname<...>(locale.name)
2016-09-18 12:04:15	<--	danieli (~duniel@213.52.4.149) has quit (Ping timeout: 265 seconds)
2016-09-18 12:04:28	Levitator	And THEN, I can finally use wstring_convert
2016-09-18 12:04:36	-->	DingoSaar (~hagen@pD9E08AEF.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 12:05:48	<--	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-09-18 12:05:53	Levitator	Which implies both an allocation operation and a string lookup when they could have just made codecvt copy-assignable instead!
2016-09-18 12:06:01	-->	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 12:06:23	Levitator	But, hey, whatever, I'm not a genius on the language committee.
2016-09-18 12:06:58	Levitator	Well, they could have made it copy-assignable and then not arbitrarily delete it for no reason in a function that uses is.
2016-09-18 12:07:00	Levitator	*it
2016-09-18 12:07:14	w3z	you're not a genius anywhere, no need to equivocate
2016-09-18 12:07:21	<--	logan_e_ (uid164592@gateway/web/irccloud.com/x-judbtcrzpwbytrzx) has quit (Quit: Connection closed for inactivity)
2016-09-18 12:07:28	<--	String (~String@24.42.188.104) has quit (Read error: Connection reset by peer)
2016-09-18 12:08:48	Levitator	You have no knowledge of me, and can fuck off.
2016-09-18 12:10:11	-->	Zxpr1jk (~zxpr1jk@24.214.61.47) has joined ##c++
2016-09-18 12:10:34	decimad	Feel the love!
2016-09-18 12:11:21	<--	edgrey (~edgrey@178.204.202.173) has quit (Quit: Konversation terminated!)
2016-09-18 12:11:25	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 12:12:27	-->	zero_byte (~zer0@ip-89-103-110-138.net.upcbroadband.cz) has joined ##c++
2016-09-18 12:12:40	-->	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has joined ##c++
2016-09-18 12:12:51	<--	Vuks (~Vuks@unaffiliated/vuks69) has quit (Ping timeout: 244 seconds)
2016-09-18 12:13:13	<--	AkaiSora (~quassel@197.17.3.160) has quit (Remote host closed the connection)
2016-09-18 12:13:20	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 12:14:29	-->	orbiter (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has joined ##c++
2016-09-18 12:16:05	-->	a3Dman (~3Dman@unaffiliated/a3dman) has joined ##c++
2016-09-18 12:16:39	<--	everamzah (~james@cpe-198-255-184-0.maine.res.rr.com) has quit (Quit: WeeChat 1.5)
2016-09-18 12:18:19	<--	Tectu (~Tectu@193.231.195.178.dynamic.wline.res.cust.swisscom.ch) has quit (Quit: Leaving)
2016-09-18 12:18:19		[12:18]
2016-09-18 12:18:27	--	You are now known as god
2016-09-18 12:18:51	w3z	i remember your dumb ass from a couple months ago, and i have the evidence of your ongoing rant in my scrollback buffer ....
2016-09-18 12:19:03	SoItBegins	. . .
2016-09-18 12:19:08	--	You are now known as alyptik
2016-09-18 12:19:20	SoItBegins	What’s the bot command for ‘cut it out, you two’?
2016-09-18 12:19:40	Oxyd	That would be !ops.
2016-09-18 12:20:20	-->	Gluesticky (~nobody@unaffiliated/gluesticky) has joined ##c++
2016-09-18 12:20:31	<--	DingoSaar (~hagen@pD9E08AEF.dip0.t-ipconnect.de) has quit (Ping timeout: 250 seconds)
2016-09-18 12:21:07	-->	hesperos (~tomasz@176.252.138.213) has joined ##c++
2016-09-18 12:21:41	-->	DingoSaar (~hagen@pD9E08AEF.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 12:21:54	<--	ville (~ville@37-33-127-122.bb.dnainternet.fi) has quit (Quit: Lost terminal)
2016-09-18 12:22:09	Levitator	Yeah, I mean, because you have to be dumb not to misunderstand a language you don't use every day.
2016-09-18 12:22:19	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 12:22:20	Levitator	Or to do so, anyway.
2016-09-18 12:22:24	hesperos	I'm wondering what is a better option. Implementing getter/setters or rather templated operator=() & operator*() ? So, far operators seems problematic since in case of type deduction failure, calling x.operator*<int>() seems rather ugly
2016-09-18 12:22:51	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Read error: Connection reset by peer)
2016-09-18 12:23:19	Levitator	I regard operators as being mostly useful when you need a generic algorithm to operate on your class as if it were some other type.
2016-09-18 12:23:40	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 12:23:42	Levitator	Sometimes, they are useful for clarity of syntax, like the IO insertion and extraction operators.
2016-09-18 12:23:52	w3z	nobody points at locales/codecvt/facets and thinks theyre wonderful ... but more importantly nobody wants to hear an uninformed diatribe without a solution or an attempt at improving the situation
2016-09-18 12:24:57	Levitator	Excuse me, then, we'll leave the floor open to all of the boost devs who hang out here.
2016-09-18 12:25:16	pragma-	w3z: speak for yourself. I, for one, am enjoying the show.
2016-09-18 12:25:29	pragma-	Levitator: do you accept donations?
2016-09-18 12:25:40	doppel	wasn't making codecvt copy-assignable the aforementioned solution?
2016-09-18 12:25:58	Levitator	Either that or not deleting for no reason.
2016-09-18 12:27:07	-->	madpat (~AndChat57@host-091-097-170-097.ewe-ip-backbone.de) has joined ##c++
2016-09-18 12:28:07	<--	karts (43a45b4e@gateway/web/cgi-irc/kiwiirc.com/ip.67.164.91.78) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-09-18 12:28:17	-->	danieli (~duniel@213.52.4.149) has joined ##c++
2016-09-18 12:28:47	pragma-	Levitator: I would like to subscribe to your newsletter.
2016-09-18 12:28:54	-->	systemfault (~rcyr@unaffiliated/rcyr) has joined ##c++
2016-09-18 12:28:59	<--	DingoSaar (~hagen@pD9E08AEF.dip0.t-ipconnect.de) has quit (Ping timeout: 265 seconds)
2016-09-18 12:29:23	<--	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has quit (Ping timeout: 244 seconds)
2016-09-18 12:30:13	<--	ferdna (~ferdna@cpe-69-23-141-130.elp.res.rr.com) has quit (Quit: Leaving)
2016-09-18 12:30:13	-->	DingoSaar (~hagen@pD9E08AEF.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 12:30:36	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 12:30:47	<--	Markow (~Markow@176.122.215.103) has quit (Remote host closed the connection)
2016-09-18 12:32:27	<--	PaSaSaP (~PaSaSaP@nat.ds14.agh.edu.pl) has quit (Ping timeout: 244 seconds)
2016-09-18 12:33:02	pragma-	Levitator: you're not very appreciative of your fans, are you?
2016-09-18 12:33:42	Levitator	Self-importance is someone else's department.
2016-09-18 12:33:42		[12:33]
2016-09-18 12:33:45	<--	nghtshd (zagnut@2001:558:6011:43:1a:4db8:5f34:9c4e) has quit (Ping timeout: 248 seconds)
2016-09-18 12:33:51	--	WalrusPony is now known as PeterRabbit
2016-09-18 12:34:07	pragma-	well, screw you then, I'm taking w3z's side now.
2016-09-18 12:34:09	-->	ferdna (~ferdna@cpe-69-23-141-130.elp.res.rr.com) has joined ##c++
2016-09-18 12:34:49	<--	strelox (~user@p200300754F755C00B47116A33D9CA03F.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-09-18 12:35:14	doppel	wouldn't self-importance by definition be your department, since you are your own self?
2016-09-18 12:37:23	-->	vralphv (~vralp@d137-186-58-40.abhsia.telus.net) has joined ##c++
2016-09-18 12:37:43	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 12:38:07	<--	bjz (~bjz@104.222.140.71) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-18 12:38:27	-->	Hannibal_Smith (~nico@host215-56-dynamic.44-79-r.retail.telecomitalia.it) has joined ##c++
2016-09-18 12:38:39	-->	KindOne_ (kindone@freenude/topless/kindone) has joined ##c++
2016-09-18 12:39:41	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 12:40:53	<--	DingoSaar (~hagen@pD9E08AEF.dip0.t-ipconnect.de) has quit (Ping timeout: 250 seconds)
2016-09-18 12:40:58	-->	navidr (uid112413@gateway/web/irccloud.com/x-qirncsksvreixiwf) has joined ##c++
2016-09-18 12:41:05	<--	KindOne (kindone@freenude/topless/kindone) has quit (Ping timeout: 244 seconds)
2016-09-18 12:42:34	<--	CrypticSquared (~CrypticS_@unaffiliated/crypticsquared) has quit (Ping timeout: 240 seconds)
2016-09-18 12:42:49	<--	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has quit (Ping timeout: 248 seconds)
2016-09-18 12:42:54	--	KindOne_ is now known as KindOne
2016-09-18 12:44:34	<--	zero_byte (~zer0@ip-89-103-110-138.net.upcbroadband.cz) has quit (Ping timeout: 240 seconds)
2016-09-18 12:44:58	-->	Markow (~Markow@176.122.215.103) has joined ##c++
2016-09-18 12:45:09	-->	DingoSaar (~hagen@217.224.138.239) has joined ##c++
2016-09-18 12:45:43	-->	mrBen2k2k2k_ (~logstash@ec2-52-90-90-33.compute-1.amazonaws.com) has joined ##c++
2016-09-18 12:46:47	<--	Rialynn (~Rialynn@unaffiliated/rialynn) has quit (Ping timeout: 265 seconds)
2016-09-18 12:47:59	-->	spikebot85 (~lach@58.162.148.70) has joined ##c++
2016-09-18 12:48:01	<--	Dyonisos_ (~Dyonisos@126.ip-164-132-50.eu) has quit (Quit: Quis custodiet ipsos custodes ?)
2016-09-18 12:48:09	-->	mrBen2k2k2k____ (~logstash@ec2-52-90-90-33.compute-1.amazonaws.com) has joined ##c++
2016-09-18 12:49:37	-->	anton02 (~quassel@lal1651212.lnk.telstra.net) has joined ##c++
2016-09-18 12:49:37		[12:49]
2016-09-18 12:49:58	<--	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-09-18 12:50:03	--	You are now known as i7
2016-09-18 12:50:10	<--	Markow (~Markow@176.122.215.103) has quit (Remote host closed the connection)
2016-09-18 12:50:15	--	You are now known as alyptik
2016-09-18 12:50:22	-->	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 12:50:24	<--	gelignite (~gelignite@x4db6a225.dyn.telefonica.de) has quit (Quit: http://bit.ly/1kso8Ta)
2016-09-18 12:51:54	-->	zero_byte (~zer0@ip-89-103-110-138.net.upcbroadband.cz) has joined ##c++
2016-09-18 12:52:39	<--	neurodrone (~neurodron@unaffiliated/neurodrone) has quit (Quit: neurodrone)
2016-09-18 12:53:08	<--	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-09-18 12:53:09	<--	DingoSaar (~hagen@217.224.138.239) has quit (Ping timeout: 244 seconds)
2016-09-18 12:53:19	-->	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 12:53:30	-->	nghtshd (zagnut@2001:558:6011:43:1a:4db8:5f34:9c4e) has joined ##c++
2016-09-18 12:54:24	-->	CrypticSquared (~CrypticS_@unaffiliated/crypticsquared) has joined ##c++
2016-09-18 12:56:27	<--	Kirrahe (~kirrahe@ip51cc4257.adsl-surfen.hetnet.nl) has quit (Ping timeout: 265 seconds)
2016-09-18 12:57:50	<--	flavi0 (~anon@unaffiliated/flavi0) has quit (Remote host closed the connection)
2016-09-18 12:58:47	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 12:59:48	-->	plusone (~plusone@176.24.26.166) has joined ##c++
2016-09-18 12:59:52	<--	josh (~josh@c-67-182-242-240.hsd1.ut.comcast.net) has quit (Ping timeout: 265 seconds)
2016-09-18 13:00:41	<--	Xanather (~xanather@unaffiliated/xanather) has quit (Quit: Leaving)
2016-09-18 13:00:52	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 13:00:58	Soap__	also, I wonder why people call std::abs with an unsigned
2016-09-18 13:01:19	decimad	safety first
2016-09-18 13:01:21	PJBoy	to be absolutely positive that it's unsigned
2016-09-18 13:02:03	<--	nilg (~user@77.70.2.229) has quit (Remote host closed the connection)
2016-09-18 13:02:07	PJBoy	also integers go through a series of promotions when performing calculations
2016-09-18 13:02:19	PJBoy	so if it's an intermediate expression that's being abs'd it could be justified
2016-09-18 13:02:27	<--	hesperos (~tomasz@176.252.138.213) has quit (Ping timeout: 244 seconds)
2016-09-18 13:03:13	-->	regedit (uid150526@gateway/web/irccloud.com/x-phduuhwkmwsmaxkw) has joined ##c++
2016-09-18 13:03:17	-->	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has joined ##c++
2016-09-18 13:03:24	<--	zmack (~zmack@pool-72-74-144-215.bstnma.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-18 13:03:33	<--	Hannibal_Smith (~nico@host215-56-dynamic.44-79-r.retail.telecomitalia.it) has quit (Ping timeout: 240 seconds)
2016-09-18 13:03:36	-->	zmack (~zmack@pool-72-74-144-215.bstnma.fios.verizon.net) has joined ##c++
2016-09-18 13:04:50	<--	UnlikeSuika (~UnlikeSui@115.93.122.107) has quit (Ping timeout: 260 seconds)
2016-09-18 13:04:50		[13:04]
2016-09-18 13:05:04	-->	Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2016-09-18 13:05:47	-->	EricWF (~EricwF@67.135.43.183) has joined ##c++
2016-09-18 13:06:20	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 13:06:39	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Read error: Connection reset by peer)
2016-09-18 13:06:44	-->	MorteAeterna (~Morte@adsl-119.37.6.217.tellas.gr) has joined ##c++
2016-09-18 13:07:46	<--	Munnu (~timo@91-158-145-247.elisa-laajakaista.fi) has quit (Quit: Follow the white rabbit. Compile the desert of the real. 3301.)
2016-09-18 13:08:06	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 13:08:20	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 13:09:06	-->	DocPlatypus (~skquinn@c-73-166-108-48.hsd1.tx.comcast.net) has joined ##c++
2016-09-18 13:10:03	DocPlatypus	quick question that I hope is close enough to on-topic: if someone repeatedly made comments like "a good language besides C++" or "<other language> is bad but still better than C++" how long would they last in here before they finally got banned?
2016-09-18 13:10:25	<--	spiderkeys (~quassel@103.16.128.120) has quit (Read error: Connection reset by peer)
2016-09-18 13:10:47	-->	TheScholar (~randomman@ool-44c16ddc.dyn.optonline.net) has joined ##c++
2016-09-18 13:10:52	-->	spiderkeys (~quassel@103.16.128.120) has joined ##c++
2016-09-18 13:11:24	PJBoy	depends who's active and how busy it is, it;s generally pretty low tolerance in here
2016-09-18 13:11:43	<--	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has quit (Ping timeout: 255 seconds)
2016-09-18 13:12:13	<--	velco (~chill@vlan-185-78-38-153.comnet.bg) has quit (Quit: Leaving)
2016-09-18 13:12:24	<--	MorteAeterna (~Morte@adsl-119.37.6.217.tellas.gr) has quit (Remote host closed the connection)
2016-09-18 13:12:27	DocPlatypus	that's what I thought. thanks
2016-09-18 13:12:31	<--	DocPlatypus (~skquinn@c-73-166-108-48.hsd1.tx.comcast.net) has left ##c++ ("Leaving")
2016-09-18 13:12:31	<--	SpaceDanceCJ (~Sasha@178.121.65.125) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-09-18 13:12:34	-->	MorteAeterna (~Morte@adsl-119.37.6.217.tellas.gr) has joined ##c++
2016-09-18 13:12:54	<--	ibouvousaime (~ibouvousa@41.83.62.158) has quit (Ping timeout: 265 seconds)
2016-09-18 13:13:11	-->	k_j (~no@151.42.78.158) has joined ##c++
2016-09-18 13:13:47	-->	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has joined ##c++
2016-09-18 13:13:58	-->	ibouvousaime (~ibouvousa@41.82.53.80) has joined ##c++
2016-09-18 13:14:52	<--	Adva (~Hyrule@2a02:810a:12c0:5068:75db:ec40:221e:2a2b) has quit (Read error: Connection reset by peer)
2016-09-18 13:16:03	<--	Fruitstand (~fruitstan@c-73-153-135-25.hsd1.co.comcast.net) has quit (Quit: Leaving)
2016-09-18 13:21:47	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 13:21:47		[13:21]
2016-09-18 13:21:47	<--	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has quit (Ping timeout: 265 seconds)
2016-09-18 13:21:48	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 13:21:48	<--	ferdna (~ferdna@cpe-69-23-141-130.elp.res.rr.com) has quit (Quit: Leaving)
2016-09-18 13:21:48	<--	pragma- (~chaos@unaffiliated/pragmatic-chaos) has quit (Ping timeout: 244 seconds)
2016-09-18 13:21:48	<--	wolfcub (~henrique_@138.185.99.1) has quit (Ping timeout: 265 seconds)
2016-09-18 13:22:06	<--	MorteAeterna (~Morte@adsl-119.37.6.217.tellas.gr) has quit (Ping timeout: 264 seconds)
2016-09-18 13:23:07	<--	VA3VNA (~mayday_ja@67.70.9.37) has quit (Ping timeout: 265 seconds)
2016-09-18 13:23:51	-->	neurodrone (~neurodron@unaffiliated/neurodrone) has joined ##c++
2016-09-18 13:24:23	--	irc: disconnected from server
2016-09-18 13:24:34	-->	alyptik (~alyptik@unaffiliated/alyptik) has joined ##c++
2016-09-18 13:24:34		[13:24]
2016-09-18 13:24:34	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || https://isocpp.org/faq || pastes: http://melpon.org/wandbox"
2016-09-18 13:24:34	--	Topic set by V-ille (~ville@81-175-149-170.bb.dnainternet.fi) on Fri, 18 Sep 2015 07:13:01
2016-09-18 13:24:34	--	Channel ##c++: 964 nicks (0 ops, 0 voices, 964 normals)
2016-09-18 13:24:34	***	Buffer Playback...
2016-09-18 13:24:34	Levitator	[21:37:00] And you can't copy facet's either, so you it's as if they intentionally decided "Yeah, we want to make string conversion easier, but we want to deliberately break compatibility with streams and make you special-case it all" [21:37:00]
2016-09-18 13:24:34	KrzaQ	[21:42:13] Is Cppcon livestreamed? [21:42:13]
2016-09-18 13:24:34	Levitator	[21:42:51] Look at the workaround at the bottom: http://en.cppreference.com/w/cpp/locale/wstring_convert/wstring_convert [21:42:51]
2016-09-18 13:24:34	Levitator	[21:43:11] I mean, WTF is this? If you can delete the damned things in the first place, then why did they delete the destructor? That's asinine. [21:43:11]
2016-09-18 13:24:34	w3z	[21:44:53] KrzaQ: i dunno, if you find a link post it, but i think they go up after the conference is over [21:44:53]
2016-09-18 13:24:34	Levitator	[21:45:14] So, I guess, if you want to make wstring_convert from a conversion facet from a locale object, you have to find out the locale's string name and instantiate a deletable codecvt adapter from the same name string. [21:45:14]
2016-09-18 13:24:34	Levitator	[21:45:24] Because it's fun to make shit pointlessly inefficient and convoluted. [21:45:24]
2016-09-18 13:24:34	KrzaQ	[21:45:28] Will do, w3z [21:45:28]
2016-09-18 13:24:34	KrzaQ	[21:45:41] Going Natives were livestreamed and the quality was great :< [21:45:41]
2016-09-18 13:24:34	Levitator	[21:49:48] Oh, boy! std::codecvt_byname! That's utter genius. How about just std::new_facet<whatever_t>(locale)? [21:49:48]
2016-09-18 13:24:34	Levitator	[21:50:15] I'm either missing something, or the C++ committee has turned to crack smoking. [21:50:15]
2016-09-18 13:24:34	ville	[21:56:27] turned? [21:56:27]
2016-09-18 13:24:34	ville	[21:56:42] it's not like it's a recent development [21:56:42]
2016-09-18 13:24:34	Levitator	[22:03:56] Ok, so if I want a deletable codecvt from an extant locale, I can use something like std::codecvt_byname<...>(locale.name) [22:03:56]
2016-09-18 13:24:34	Levitator	[22:04:28] And THEN, I can finally use wstring_convert [22:04:28]
2016-09-18 13:24:34	Levitator	[22:05:53] Which implies both an allocation operation and a string lookup when they could have just made codecvt copy-assignable instead! [22:05:53]
2016-09-18 13:24:34	Levitator	[22:06:23] But, hey, whatever, I'm not a genius on the language committee. [22:06:23]
2016-09-18 13:24:34	Levitator	[22:06:58] Well, they could have made it copy-assignable and then not arbitrarily delete it for no reason in a function that uses is. [22:06:58]
2016-09-18 13:24:34	Levitator	[22:07:00] *it [22:07:00]
2016-09-18 13:24:34	w3z	[22:07:14] you're not a genius anywhere, no need to equivocate [22:07:14]
2016-09-18 13:24:34	Levitator	[22:08:48] You have no knowledge of me, and can fuck off. [22:08:48]
2016-09-18 13:24:34	decimad	[22:10:34] Feel the love! [22:10:34]
2016-09-18 13:24:34	w3z	[22:18:51] i remember your dumb ass from a couple months ago, and i have the evidence of your ongoing rant in my scrollback buffer .... [22:18:51]
2016-09-18 13:24:34	SoItBegins	[22:19:03] . . . [22:19:03]
2016-09-18 13:24:34	SoItBegins	[22:19:20] What’s the bot command for ‘cut it out, you two’? [22:19:20]
2016-09-18 13:24:34	Oxyd	[22:19:40] That would be !ops. [22:19:40]
2016-09-18 13:24:34	Levitator	[22:22:09] Yeah, I mean, because you have to be dumb not to misunderstand a language you don't use every day. [22:22:09]
2016-09-18 13:24:34	Levitator	[22:22:20] Or to do so, anyway. [22:22:20]
2016-09-18 13:24:34	hesperos	[22:22:24] I'm wondering what is a better option. Implementing getter/setters or rather templated operator=() & operator*() ? So, far operators seems problematic since in case of type deduction failure, calling x.operator*<int>() seems rather ugly [22:22:24]
2016-09-18 13:24:34	Levitator	[22:23:19] I regard operators as being mostly useful when you need a generic algorithm to operate on your class as if it were some other type. [22:23:19]
2016-09-18 13:24:34	Levitator	[22:23:42] Sometimes, they are useful for clarity of syntax, like the IO insertion and extraction operators. [22:23:42]
2016-09-18 13:24:34	w3z	[22:23:52] nobody points at locales/codecvt/facets and thinks theyre wonderful ... but more importantly nobody wants to hear an uninformed diatribe without a solution or an attempt at improving the situation [22:23:52]
2016-09-18 13:24:34	Levitator	[22:24:57] Excuse me, then, we'll leave the floor open to all of the boost devs who hang out here. [22:24:57]
2016-09-18 13:24:34	pragma-	[22:25:16] w3z: speak for yourself. I, for one, am enjoying the show. [22:25:16]
2016-09-18 13:24:34	pragma-	[22:25:29] Levitator: do you accept donations? [22:25:29]
2016-09-18 13:24:34	doppel	[22:25:40] wasn't making codecvt copy-assignable the aforementioned solution? [22:25:40]
2016-09-18 13:24:34	Levitator	[22:25:58] Either that or not deleting for no reason. [22:25:58]
2016-09-18 13:24:34	pragma-	[22:28:46] Levitator: I would like to subscribe to your newsletter. [22:28:46]
2016-09-18 13:24:34	pragma-	[22:33:02] Levitator: you're not very appreciative of your fans, are you? [22:33:02]
2016-09-18 13:24:34	Levitator	[22:33:42] Self-importance is someone else's department. [22:33:42]
2016-09-18 13:24:34	pragma-	[22:34:07] well, screw you then, I'm taking w3z's side now. [22:34:07]
2016-09-18 13:24:34	doppel	[22:35:14] wouldn't self-importance by definition be your department, since you are your own self? [22:35:14]
2016-09-18 13:24:34	Soap__	[23:00:58] also, I wonder why people call std::abs with an unsigned [23:00:58]
2016-09-18 13:24:34	decimad	[23:01:19] safety first [23:01:19]
2016-09-18 13:24:34	PJBoy	[23:01:21] to be absolutely positive that it's unsigned [23:01:21]
2016-09-18 13:24:34	PJBoy	[23:02:07] also integers go through a series of promotions when performing calculations [23:02:07]
2016-09-18 13:24:34	PJBoy	[23:02:19] so if it's an intermediate expression that's being abs'd it could be justified [23:02:19]
2016-09-18 13:24:34	DocPlatypus	[23:10:03] quick question that I hope is close enough to on-topic: if someone repeatedly made comments like "a good language besides C++" or "<other language> is bad but still better than C++" how long would they last in here before they finally got banned? [23:10:03]
2016-09-18 13:24:34	PJBoy	[23:11:24] depends who's active and how busy it is, it;s generally pretty low tolerance in here [23:11:24]
2016-09-18 13:24:34	DocPlatypus	[23:12:27] that's what I thought. thanks [23:12:27]
2016-09-18 13:24:34	***	Playback Complete.
2016-09-18 13:24:45	--	Channel created on Fri, 14 Sep 2001 17:15:35
2016-09-18 13:24:47	-->	Birchy (~Birchy@178-164-108.52.3p.ntebredband.no) has joined ##c++
2016-09-18 13:25:02	<--	Birchy (~Birchy@178-164-108.52.3p.ntebredband.no) has quit (Read error: Connection reset by peer)
2016-09-18 13:26:53	-->	MorteAeterna (~Morte@adsl-119.37.6.217.tellas.gr) has joined ##c++
2016-09-18 13:27:32	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 13:28:05	-->	nilg (~user@77.70.2.229) has joined ##c++
2016-09-18 13:28:30	<--	MorteAeterna (~Morte@adsl-119.37.6.217.tellas.gr) has quit (Remote host closed the connection)
2016-09-18 13:28:39	-->	MorteAeterna (~Morte@adsl-119.37.6.217.tellas.gr) has joined ##c++
2016-09-18 13:29:48	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 13:31:09	<--	dj_pi (~dj@c-73-191-212-56.hsd1.mi.comcast.net) has quit (Ping timeout: 250 seconds)
2016-09-18 13:31:46	<--	spiderkeys (~quassel@103.16.128.120) has quit (Quit: No Ping reply in 180 seconds.)
2016-09-18 13:31:52	<--	myhau (~myhau@host-94-251-132-31.dynamic.mm.pl) has quit (Ping timeout: 244 seconds)
2016-09-18 13:33:02	-->	spiderkeys (~quassel@103.16.128.120) has joined ##c++
2016-09-18 13:34:11	<--	aurialLoop (~aurialLoo@60.234.120.196) has quit (Ping timeout: 250 seconds)
2016-09-18 13:34:19	-->	pragma- (~chaos@unaffiliated/pragmatic-chaos) has joined ##c++
2016-09-18 13:34:32	<--	MorteAeterna (~Morte@adsl-119.37.6.217.tellas.gr) has quit (Read error: Connection reset by peer)
2016-09-18 13:34:47	-->	Fruitstand (~fruitstan@c-73-153-135-25.hsd1.co.comcast.net) has joined ##c++
2016-09-18 13:35:26	-->	VA3VNA (~mayday_ja@69.156.55.23) has joined ##c++
2016-09-18 13:35:37	-->	josh (~josh@c-67-182-242-240.hsd1.ut.comcast.net) has joined ##c++
2016-09-18 13:36:03	<--	Galik (~galik@unaffiliated/galik) has quit (Ping timeout: 248 seconds)
2016-09-18 13:37:23	<--	King_Hual (~failed@unaffiliated/king-hual/x-1207580) has quit (Read error: Connection reset by peer)
2016-09-18 13:38:57	<--	EricWF (~EricwF@67.135.43.183) has quit (Quit: EricWF)
2016-09-18 13:39:15	-->	KAHR-Alpha_ (~Alpha@AReims-652-1-187-168.w92-142.abo.wanadoo.fr) has joined ##c++
2016-09-18 13:39:36	<--	ibouvousaime (~ibouvousa@41.82.53.80) has quit (Read error: Connection reset by peer)
2016-09-18 13:39:36		[13:39]
2016-09-18 13:39:56	-->	ibouvousaime (~ibouvousa@41.82.53.80) has joined ##c++
2016-09-18 13:40:19	<--	magnicida (~raskolnik@2a02:8109:8c80:231:ea39:dfff:fe4d:275b) has quit (Ping timeout: 248 seconds)
2016-09-18 13:41:39	Fruitstand	Is anyone here super familiar with readline?
2016-09-18 13:41:39	<--	KAHR-Alpha (~Alpha@AReims-652-1-76-199.w86-192.abo.wanadoo.fr) has quit (Ping timeout: 276 seconds)
2016-09-18 13:41:40	--	KAHR-Alpha_ is now known as KAHR-Alpha
2016-09-18 13:41:45	-->	myhau (~myhau@host-94-251-132-31.dynamic.mm.pl) has joined ##c++
2016-09-18 13:42:00	<--	spikebot85 (~lach@58.162.148.70) has quit (Ping timeout: 272 seconds)
2016-09-18 13:42:30	V-ille	!give Fruitstand general
2016-09-18 13:42:32	nolyc	Fruitstand: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2016-09-18 13:43:14	Fruitstand	oh thanks
2016-09-18 13:43:41	<--	Fruitstand (~fruitstan@c-73-153-135-25.hsd1.co.comcast.net) has left ##c++ ("Leaving")
2016-09-18 13:43:43	<--	ambro718 (~ambro@unaffiliated/ambro718) has quit (Ping timeout: 250 seconds)
2016-09-18 13:45:07	<--	zmack (~zmack@pool-72-74-144-215.bstnma.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-18 13:45:25	<--	doppel (~chatzilla@ip70-189-197-158.lv.lv.cox.net) has quit (Quit: ChatZilla 0.9.92 [Firefox 48.0.2/20160823121617])
2016-09-18 13:47:55	<--	Goplat (~goplat@reactos/developer/Goplat) has quit (Remote host closed the connection)
2016-09-18 13:48:11	-->	Galik (~galik@unaffiliated/galik) has joined ##c++
2016-09-18 13:49:54	<--	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-09-18 13:50:27	-->	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 13:51:04	<--	justanotheruser (~justanoth@unaffiliated/justanotheruser) has quit (Ping timeout: 240 seconds)
2016-09-18 13:51:10	-->	nikki93 (~nikki93@173.247.196.42) has joined ##c++
2016-09-18 13:51:21	<--	myhau (~myhau@host-94-251-132-31.dynamic.mm.pl) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-18 13:53:23	<--	Immune (~Immune@173.55.30.110) has quit (Ping timeout: 272 seconds)
2016-09-18 13:53:36	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 13:54:07	-->	a3f (~a3f@unaffiliated/a3f) has joined ##c++
2016-09-18 13:55:09	-->	JoshS (~jshjsh@172.56.16.225) has joined ##c++
2016-09-18 13:55:09		[13:55]
2016-09-18 13:55:33	<--	jeromelanteri (~jeromelan@cm-119-76-54-163.revip17.asianet.co.th) has quit (Quit: Leaving)
2016-09-18 13:55:38	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 13:55:51	<--	Levitator (~Meh@cpe-2606-A000-E182-FB00-A91B-BEB6-54EA-1963.dyn6.twc.com) has quit (Ping timeout: 250 seconds)
2016-09-18 13:56:41	-->	justanotheruser (~justanoth@unaffiliated/justanotheruser) has joined ##c++
2016-09-18 13:56:42	-->	Lildirt (~Lildirt@lildirt.com) has joined ##c++
2016-09-18 13:56:44	-->	rsampaio_ (~rodrigo@2601:643:8200:a3f0::f927) has joined ##c++
2016-09-18 13:57:37	-->	Immune (~Immune@173.55.30.110) has joined ##c++
2016-09-18 14:03:00		[13:57]
2016-09-18 14:03:00	<--	kadoban (~mud@unaffiliated/kadoban) has quit (Quit: bye)
2016-09-18 14:04:21	<--	medgno (~textual@c-73-181-187-190.hsd1.wa.comcast.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-18 14:05:34	-->	tesuji_ (~tesuji@x2f662be.dyn.telefonica.de) has joined ##c++
2016-09-18 14:06:08	<--	tesuji (~tesuji@unaffiliated/tesuji) has quit (Ping timeout: 265 seconds)
2016-09-18 14:06:31	w3z	V-ille: take a look at my array initializer and tear it apart for me
2016-09-18 14:08:41	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 14:10:19	<--	a3f (~a3f@unaffiliated/a3f) has quit (Quit: bb)
2016-09-18 14:11:08	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 14:12:41	w3z	http://melpon.org/wandbox/permlink/kxt0dypX3rnW0mkx (if anyone else wants to tear it apart)
2016-09-18 14:13:47	-->	calincru (~calin@c-73-231-85-3.hsd1.ca.comcast.net) has joined ##c++
2016-09-18 14:15:24	-->	gioerr (~gioerr@athedsl-4535808.home.otenet.gr) has joined ##c++
2016-09-18 14:17:47	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 14:19:48	<--	phinxy (~tehhhd@unaffiliated/phinxy) has quit (Quit: gnite)
2016-09-18 14:19:48		[14:19]
2016-09-18 14:19:55	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 14:21:22	<--	gagbo (~gagbo@unaffiliated/gagbo) has quit (Quit: Konversation terminated!)
2016-09-18 14:22:22	<--	Lowl3v3l (~Lowl3v3l@ipservice-092-208-080-178.092.208.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2016-09-18 14:22:50	<--	codercodi (~codercodi@108-192-148-40.lightspeed.gnvlsc.sbcglobal.net) has quit (Read error: Connection reset by peer)
2016-09-18 14:23:01	<--	nilg (~user@77.70.2.229) has quit (Remote host closed the connection)
2016-09-18 14:23:28	<--	ezzieyguywuf (~wolfie@unaffiliated/ezzieyguywuf) has quit (Read error: Connection reset by peer)
2016-09-18 14:24:08	-->	ezzieyguywuf (~wolfie@unaffiliated/ezzieyguywuf) has joined ##c++
2016-09-18 14:26:45	<--	neurodrone (~neurodron@unaffiliated/neurodrone) has quit (Quit: neurodrone)
2016-09-18 14:27:32	<--	cbot (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Quit: Leaving)
2016-09-18 14:27:54	-->	marcle (~marcle_3@180.169.108.58) has joined ##c++
2016-09-18 14:28:22	-->	UnlikeSuika (~UnlikeSui@147.47.194.96) has joined ##c++
2016-09-18 14:28:38	<--	marcle (~marcle_3@180.169.108.58) has left ##c++
2016-09-18 14:28:56	-->	andyhuzhill (~Thunderbi@14.23.45.178) has joined ##c++
2016-09-18 14:30:57	-->	neurodrone (~neurodron@unaffiliated/neurodrone) has joined ##c++
2016-09-18 14:35:54	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 14:35:54		[14:35]
2016-09-18 14:37:53	<--	MulleDK19 (MulleDK19@unaffiliated/mulledk19) has quit (Ping timeout: 240 seconds)
2016-09-18 14:38:00	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 14:40:17	-->	aurialLoop (~aurialLoo@60.234.120.196) has joined ##c++
2016-09-18 14:41:00	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 14:42:24	<--	pavshn (~pavshn@ppp95-165-153-84.pppoe.spdop.ru) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2016-09-18 14:43:10	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 14:44:30	ibouvousaime	can anyone help me understand this http://i.imgur.com/o9b1s6H.png ?
2016-09-18 14:44:33	<--	mountaingoat (~mountaing@unaffiliated/mountaingoat) has quit (Quit: WeeChat 1.5)
2016-09-18 14:45:22	ibouvousaime	the code http://i.imgur.com/8bycxWl.png
2016-09-18 14:45:36	-->	zmack (~zmack@pool-72-74-144-215.bstnma.fios.verizon.net) has joined ##c++
2016-09-18 14:46:01	zrneely	Can I do something like for (Foo& x : containerOfFoos) { /* mutate x */ }? Will that update the values in the container?
2016-09-18 14:46:18	<--	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-09-18 14:46:29	-->	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 14:46:30	<--	fahadash (uid44972@gateway/web/irccloud.com/x-awbfnwekhbvewnms) has quit (Quit: Connection closed for inactivity)
2016-09-18 14:47:10	-->	hey2 (~hey2@c-71-193-232-55.hsd1.or.comcast.net) has joined ##c++
2016-09-18 14:47:25	<--	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-09-18 14:47:30	hey2	whats the other channel for off-topic c++ again?
2016-09-18 14:47:41	-->	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 14:49:07	<--	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-09-18 14:49:14	-->	YungRaj (~YungRaj@50-24-71-159.bcstcmtk01.res.dyn.suddenlink.net) has joined ##c++
2016-09-18 14:49:35	-->	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 14:49:36	<--	neurodrone (~neurodron@unaffiliated/neurodrone) has quit (Quit: neurodrone)
2016-09-18 14:50:13	-->	Levitator (~Meh@cpe-2606-A000-E182-FB00-A91B-BEB6-54EA-1963.dyn6.twc.com) has joined ##c++
2016-09-18 14:50:16	<--	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has quit (Read error: Connection reset by peer)
2016-09-18 14:50:26	-->	DigiByteDev (~JT2@n218250011174.netvigator.com) has joined ##c++
2016-09-18 14:50:27	w3z	!give hey2 general
2016-09-18 14:50:29	nolyc	hey2: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2016-09-18 14:50:34	-->	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 14:50:41	-->	CAPITANOOO (~CAPITANOO@host122-156-static.117-2-b.business.telecomitalia.it) has joined ##c++
2016-09-18 14:50:44	m_ben	!social
2016-09-18 14:50:45	nolyc	##c++-social is a less strict ##c++ channel where nerds come to cry sometimes
2016-09-18 14:50:49	-->	mountaingoat (~mountaing@unaffiliated/mountaingoat) has joined ##c++
2016-09-18 14:51:07	w3z	zrneely: yes
2016-09-18 14:51:07		[14:51]
2016-09-18 14:51:39	-->	ferdna (~ferdna@cpe-69-23-141-130.elp.res.rr.com) has joined ##c++
2016-09-18 14:51:46	zrneely	w3z, thanks, I assumed so, but I'm quite a while out from having a working unit test to check myself and I didn't want to make the mistake and forget about it
2016-09-18 14:52:40	<--	CAPITANOOO (~CAPITANOO@host122-156-static.117-2-b.business.telecomitalia.it) has quit (Client Quit)
2016-09-18 14:53:23	w3z	{vector<Foo> V(1); for(Foo& f:V) f.i++; cout<<V[0].i;} struct Foo{int i{};};
2016-09-18 14:53:24	geordi	1
2016-09-18 14:53:52	-->	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2016-09-18 14:54:28	<--	UnlikeSuika (~UnlikeSui@147.47.194.96) has quit (Ping timeout: 265 seconds)
2016-09-18 14:54:40	w3z	explicitly specifying Foo& in the range for is a bit brittle if more explicit than simply using auto& but eh
2016-09-18 14:54:45	V-ille	w3z: what's there to tear apart?
2016-09-18 14:56:30	w3z	i dunno, whether constexpr operator auto&&(){return move(f());} is overkill
2016-09-18 14:57:25	w3z	whether im missing something that could make it more useful generic, whether theres an efficiency hit im unaware of
2016-09-18 14:58:21	-->	String (~String@24.42.188.104) has joined ##c++
2016-09-18 14:58:37	w3z	i think it looks pretty good, but then i was surprised that the reason i wasguaranteed order was because i was in {} not due to parameter pack expansion
2016-09-18 14:59:06	-->	Nilesh_ (uid116340@gateway/web/irccloud.com/x-hhrrpsgwusvunmmh) has joined ##c++
2016-09-18 14:59:18	w3z	(which im still fuxxy about because does it make sense for an index sequence not to be expanded in order)
2016-09-18 14:59:23	w3z	fuzzy
2016-09-18 15:00:20	-->	jaafar (~quassel@50-206-78-205-static.hfc.comcastbusiness.net) has joined ##c++
2016-09-18 15:00:49	w3z	i dont particularly have a use for it, but maybe ill push it at boost
2016-09-18 15:02:07	<--	jaafar (~quassel@50-206-78-205-static.hfc.comcastbusiness.net) has quit (Remote host closed the connection)
2016-09-18 15:02:18	-->	UnlikeSuika_mobi (~UnlikeSui@147.47.141.251) has joined ##c++
2016-09-18 15:02:43	-->	jaafar (~quassel@50-206-78-205-static.hfc.comcastbusiness.net) has joined ##c++
2016-09-18 15:04:12	<--	kimundi (~Kimundi@p57BC709E.dip0.t-ipconnect.de) has quit (Ping timeout: 276 seconds)
2016-09-18 15:04:13	<--	navidr (uid112413@gateway/web/irccloud.com/x-qirncsksvreixiwf) has quit (Quit: Connection closed for inactivity)
2016-09-18 15:08:46	-->	hyacinth (~yhyacinth@61.111.255.109) has joined ##c++
2016-09-18 15:08:46		[15:08]
2016-09-18 15:08:51	w3z	by virtuae of returning T&& instead of simply T you lose implicit conversion for instance and have to write F([]{return S{24};}); instead of F([]{return 24;});
2016-09-18 15:08:57	-->	Ben2560 (~quassel@137.154.197.63) has joined ##c++
2016-09-18 15:09:13	-->	GandalfTheWizard (~Emma@112.10.170.75) has joined ##c++
2016-09-18 15:09:26	<--	Henke37 (~Henrik@81-227-16-59-no133.bredband.skanova.com) has quit (Quit: ERR_SHUTDOWN)
2016-09-18 15:09:42	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 15:10:03	-->	asc232 (~Keith@179.38.236.154) has joined ##c++
2016-09-18 15:10:09	-->	uboot_ (~moon@x4dbc088c.dyn.telefonica.de) has joined ##c++
2016-09-18 15:11:04	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 15:13:33	w3z	also constexpr array<int,3> D=F([]()constexpr{return 42;}); bitches under clang (i think clangs wrong, by yesterdays constexpr auto a=[]()constexpr{}; argument)
2016-09-18 15:13:45	<--	uboot__ (~moon@x4dbad063.dyn.telefonica.de) has quit (Ping timeout: 248 seconds)
2016-09-18 15:15:15	-->	spikebot85 (~lach@58.162.148.70) has joined ##c++
2016-09-18 15:18:35	<--	ibouvousaime (~ibouvousa@41.82.53.80) has quit (Ping timeout: 265 seconds)
2016-09-18 15:19:52	w3z	anyway i can obviously drop the U template param from X (oops)
2016-09-18 15:20:45	-->	Bly (~Bly@173-243-73-90.pppoe.customer.softcom.net) has joined ##c++
2016-09-18 15:20:48	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 15:21:33	<--	TheScholar (~randomman@ool-44c16ddc.dyn.optonline.net) has quit
2016-09-18 15:22:57	-->	snowkidind (~textual@pool-96-255-207-158.washdc.fios.verizon.net) has joined ##c++
2016-09-18 15:22:57	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 15:24:40	-->	hyacinth^timeout (~yhyacinth@61.111.255.109) has joined ##c++
2016-09-18 15:24:40		[15:24]
2016-09-18 15:24:41	<--	hyacinth^timeout (~yhyacinth@61.111.255.109) has quit (Client Quit)
2016-09-18 15:24:41	<--	andyhuzhill (~Thunderbi@14.23.45.178) has quit (Quit: andyhuzhill)
2016-09-18 15:24:45	<--	hyacinth (~yhyacinth@61.111.255.109) has quit (Remote host closed the connection)
2016-09-18 15:25:19	-->	andyhuzhill (~Thunderbi@14.23.45.178) has joined ##c++
2016-09-18 15:25:55	<--	trw (~twa@184.250.132.115) has quit (Ping timeout: 248 seconds)
2016-09-18 15:26:48	<--	somaReverse (~amos@2400:dd01:1022:30:6af7:28ff:fe78:6901) has quit (Ping timeout: 265 seconds)
2016-09-18 15:27:07	<--	TMM (~hp@fsf/member/pdpc.professional.tmm) has quit (Ping timeout: 272 seconds)
2016-09-18 15:27:51	-->	somaReverse (~amos@124.16.128.66) has joined ##c++
2016-09-18 15:28:59	-->	neurodrone (~neurodron@unaffiliated/neurodrone) has joined ##c++
2016-09-18 15:29:16	-->	k_sze[work] (daff8506@gateway/web/freenode/ip.218.255.133.6) has joined ##c++
2016-09-18 15:29:25	-->	SunnyD (~SunnyD@cpe-72-178-78-211.hot.res.rr.com) has joined ##c++
2016-09-18 15:29:55	-->	TMM (~hp@fsf/member/pdpc.professional.tmm) has joined ##c++
2016-09-18 15:30:40	-->	TheScholar (~randomman@ool-44c16ddc.dyn.optonline.net) has joined ##c++
2016-09-18 15:30:58	<--	PJBoy (~PJBoy_@unaffiliated/pjboy) has quit (Quit: ChatZilla 0.9.92 [Firefox 48.0.2/20160823121617])
2016-09-18 15:31:07	-->	dj_pi (~dj@c-73-191-212-56.hsd1.mi.comcast.net) has joined ##c++
2016-09-18 15:31:34	-->	SwiftMatt (~Objective@162.242.95.154) has joined ##c++
2016-09-18 15:32:44	-->	Ropeney (~Ropeney@tank.mindvision.com.au) has joined ##c++
2016-09-18 15:33:17	<--	ScorpionJack (~Scorpion@unaffiliated/scorpionjack) has quit (Quit: ScorpionJack)
2016-09-18 15:33:31	<--	Mike11 (~Mike@unaffiliated/mike11) has quit (Quit: Leaving.)
2016-09-18 15:33:39	-->	UnripeSuica_mobi (~UnlikeSui@223.62.8.215) has joined ##c++
2016-09-18 15:35:52	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 15:36:03	<--	UnlikeSuika_mobi (~UnlikeSui@147.47.141.251) has quit (Ping timeout: 248 seconds)
2016-09-18 15:37:56	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 15:37:59	<--	nilof (~saolof@92-32-80-134.tn.glocalnet.net) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-09-18 15:38:15	<--	mrBen2k2k2k____ (~logstash@ec2-52-90-90-33.compute-1.amazonaws.com) has quit (Ping timeout: 260 seconds)
2016-09-18 15:38:58	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 15:39:43	-->	cferry_ (~cferry@ip-236-226-107-190.nextelmovil.cl) has joined ##c++
2016-09-18 15:39:43		[15:39]
2016-09-18 15:40:03	<--	DigiByteDev (~JT2@n218250011174.netvigator.com) has quit (Quit: DigiByteDev)
2016-09-18 15:40:19	<--	ZMatt2 (~ZMatt2@host33-176-dynamic.59-82-r.retail.telecomitalia.it) has quit (Ping timeout: 248 seconds)
2016-09-18 15:40:23	<--	a3Dman (~3Dman@unaffiliated/a3dman) has quit (Ping timeout: 265 seconds)
2016-09-18 15:41:02	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 15:41:04	-->	Atrumx (~Atrumx@unaffiliated/fivedeltasix) has joined ##c++
2016-09-18 15:41:57	<--	UnripeSuica_mobi (~UnlikeSui@223.62.8.215) has quit (Quit: RIP)
2016-09-18 15:42:26	-->	UnlikeSuika_mobi (~UnlikeSui@1.211.97.242) has joined ##c++
2016-09-18 15:43:16	<--	k_sze[work] (daff8506@gateway/web/freenode/ip.218.255.133.6) has quit (Quit: Page closed)
2016-09-18 15:44:05	-->	Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2016-09-18 15:44:30	<--	mrBen2k2k2k_ (~logstash@ec2-52-90-90-33.compute-1.amazonaws.com) has quit (Ping timeout: 244 seconds)
2016-09-18 15:45:10	<--	skweek (~skweek@USF-Gold-Wifi-nat-4.laptops.usf.edu) has quit (Ping timeout: 255 seconds)
2016-09-18 15:46:21	-->	trw (~twa@184.250.132.115) has joined ##c++
2016-09-18 15:46:34	-->	a3Dman (~3Dman@unaffiliated/a3dman) has joined ##c++
2016-09-18 15:47:17	-->	jmcnaught (~jeremy@unaffiliated/jmcnaught) has joined ##c++
2016-09-18 15:47:41	w3z	http://melpon.org/wandbox/permlink/PgHbwzbQaO6YY1Qn all cleaned up, theres exen extra superfluous whitespace
2016-09-18 15:48:28	<--	cferry_ (~cferry@ip-236-226-107-190.nextelmovil.cl) has quit (Quit: BitchX-1.1-final -- just do it.)
2016-09-18 15:48:40	-->	liseburne (~morgan@tolstoy.deptadapt.org) has joined ##c++
2016-09-18 15:49:23	<--	Ben2560 (~quassel@137.154.197.63) has quit (Ping timeout: 250 seconds)
2016-09-18 15:49:27	<--	jmcnaught (~jeremy@unaffiliated/jmcnaught) has left ##c++
2016-09-18 15:49:33	-->	jshjsh (~jshjsh@172.56.16.225) has joined ##c++
2016-09-18 15:50:09	m_ben	w3z: is there a reason why you're not forwarding f in the FG constructor?
2016-09-18 15:51:01	<--	mrBen2k2k2k (~logstash@ec2-52-90-90-33.compute-1.amazonaws.com) has quit (Ping timeout: 255 seconds)
2016-09-18 15:51:05	<--	trw (~twa@184.250.132.115) has quit (Ping timeout: 260 seconds)
2016-09-18 15:51:11	<--	lakin (~lakin@d108-173-185-33.abhsia.telus.net) has quit (Quit: leaving)
2016-09-18 15:51:27	w3z	f is already a Fn&&
2016-09-18 15:51:57	w3z	but i could, it wont make any difference though
2016-09-18 15:52:04	<--	JoshS (~jshjsh@172.56.16.225) has quit (Ping timeout: 240 seconds)
2016-09-18 15:52:54	-->	JoshS (~jshjsh@172.56.16.225) has joined ##c++
2016-09-18 15:53:21	<--	asc232 (~Keith@179.38.236.154) has quit (Remote host closed the connection)
2016-09-18 15:53:48	-->	fr (~fr@p5B2C4AB4.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 15:54:09	<--	JoshS (~jshjsh@172.56.16.225) has quit (Remote host closed the connection)
2016-09-18 15:54:20	<--	UnlikeSuika_mobi (~UnlikeSui@1.211.97.242) has quit (Ping timeout: 265 seconds)
2016-09-18 15:54:50	<--	jshjsh (~jshjsh@172.56.16.225) has quit (Ping timeout: 244 seconds)
2016-09-18 15:54:50		[15:54]
2016-09-18 15:55:58	-->	Ben2560 (~quassel@137.154.198.172) has joined ##c++
2016-09-18 15:57:03	<--	fr_ (~fr@p548FFA2C.dip0.t-ipconnect.de) has quit (Ping timeout: 244 seconds)
2016-09-18 15:57:54	-->	codercodi (~codercodi@108-192-148-40.lightspeed.gnvlsc.sbcglobal.net) has joined ##c++
2016-09-18 15:58:00	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 15:58:22	<--	GandalfTheWizard (~Emma@112.10.170.75) has left ##c++
2016-09-18 15:58:29	<--	iGeni (~textual@D97BEB67.cm-3-4d.dynamic.ziggo.nl) has quit (Ping timeout: 250 seconds)
2016-09-18 15:58:33	-->	Carbonflux (~Bob@75-172-112-206.tukw.qwest.net) has joined ##c++
2016-09-18 15:58:35	-->	fstd_ (~fstd@unaffiliated/fisted) has joined ##c++
2016-09-18 15:58:38	<--	Burgundy (~burgundy@86.121.178.118) has quit (Ping timeout: 244 seconds)
2016-09-18 16:00:09	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 16:01:06	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 16:01:24	<--	zhangxaochen (~zhangxaoc@183.157.160.51) has quit (Ping timeout: 276 seconds)
2016-09-18 16:02:14	-->	zhangxaochen (zhangxaoch@2001:da8:e000:1a0c:b517:fd63:19c3:62f3) has joined ##c++
2016-09-18 16:02:32	<--	fstd (~fstd@unaffiliated/fisted) has quit (Ping timeout: 265 seconds)
2016-09-18 16:02:33	--	fstd_ is now known as fstd
2016-09-18 16:03:15	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 16:03:30	<--	Ranhir (~Ranhir@46.244.50.236) has quit (Ping timeout: 265 seconds)
2016-09-18 16:04:17	-->	hyacinth (~yhyacinth@61.111.255.109) has joined ##c++
2016-09-18 16:05:23	-->	Ranhir (~Ranhir@46.244.50.236) has joined ##c++
2016-09-18 16:07:10	<--	neurodrone (~neurodron@unaffiliated/neurodrone) has quit (Quit: neurodrone)
2016-09-18 16:07:46	<--	CEnnis91 (uid3543@gateway/web/irccloud.com/x-nstvzfsxozmbkajp) has quit (Quit: Connection closed for inactivity)
2016-09-18 16:08:11	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 16:08:25	-->	Haruno (~Haruno@unaffiliated/haruno) has joined ##c++
2016-09-18 16:10:29	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 16:10:29		[16:10]
2016-09-18 16:10:53	<--	snover (~Adium@unaffiliated/snover) has quit (Quit: Leaving.)
2016-09-18 16:11:40	w3z	the more complete answer is theres no reference collapsing in the class template, unlike the function template
2016-09-18 16:11:46	<--	zmack (~zmack@pool-72-74-144-215.bstnma.fios.verizon.net) has quit (Read error: Connection reset by peer)
2016-09-18 16:12:21	-->	zmack (~zmack@pool-72-74-144-215.bstnma.fios.verizon.net) has joined ##c++
2016-09-18 16:12:38	-->	symm- (~symm-@86.127.152.32) has joined ##c++
2016-09-18 16:12:47	<--	karakedi (~eAC53C340@unaffiliated/orphan) has quit (Read error: Connection reset by peer)
2016-09-18 16:15:42	-->	Sasasu (~li@106.47.238.255) has joined ##c++
2016-09-18 16:16:42	<--	zmack (~zmack@pool-72-74-144-215.bstnma.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-18 16:16:52	-->	ZMatt2 (~ZMatt2@host149-200-dynamic.59-82-r.retail.telecomitalia.it) has joined ##c++
2016-09-18 16:17:07	<--	Ben2560 (~quassel@137.154.198.172) has quit (Ping timeout: 250 seconds)
2016-09-18 16:17:58	-->	karts (43a45b4e@gateway/web/cgi-irc/kiwiirc.com/ip.67.164.91.78) has joined ##c++
2016-09-18 16:18:02	-->	k_sze[work] (daff8506@gateway/web/freenode/ip.218.255.133.6) has joined ##c++
2016-09-18 16:19:02	-->	zmack (~zmack@pool-72-74-144-215.bstnma.fios.verizon.net) has joined ##c++
2016-09-18 16:21:23	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 16:21:46	-->	Ben2560 (~quassel@137.154.198.172) has joined ##c++
2016-09-18 16:23:18	<--	JSharpe (~JSharpe@104.238.169.26) has quit (Ping timeout: 264 seconds)
2016-09-18 16:23:18	-->	neurodrone (~neurodron@unaffiliated/neurodrone) has joined ##c++
2016-09-18 16:23:24	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 16:23:30	<--	dj_pi (~dj@c-73-191-212-56.hsd1.mi.comcast.net) has quit (Ping timeout: 276 seconds)
2016-09-18 16:24:48	-->	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has joined ##c++
2016-09-18 16:26:53	-->	karakedi (~eAC53C340@unaffiliated/orphan) has joined ##c++
2016-09-18 16:26:53		[16:26]
2016-09-18 16:27:59	<--	karts (43a45b4e@gateway/web/cgi-irc/kiwiirc.com/ip.67.164.91.78) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-09-18 16:28:56	<--	SunnyD (~SunnyD@cpe-72-178-78-211.hot.res.rr.com) has quit (Quit: ChatZilla 0.9.90.1 [Firefox 30.0/20140605174243])
2016-09-18 16:29:05	-->	DigiByteDev (~JT2@31.6.57.106) has joined ##c++
2016-09-18 16:29:46	somaReverse	Hi. Why does this method not returning DataType&& https://ptpb.pw/3z96.jpg ?
2016-09-18 16:30:01	-->	xiaojunyu (~lunaw@113.57.28.133) has joined ##c++
2016-09-18 16:32:11	w3z	(one, stop pasting images ...
2016-09-18 16:32:18	<--	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has quit (Ping timeout: 264 seconds)
2016-09-18 16:32:36	<--	calincru (~calin@c-73-231-85-3.hsd1.ca.comcast.net) has quit (Ping timeout: 276 seconds)
2016-09-18 16:32:52	somaReverse	Why?
2016-09-18 16:32:55	w3z	two, youre returning a T not a T&& ... youve specified a reference qualifier, not a T&& return type
2016-09-18 16:33:26	somaReverse	This code comes from "effective modern c++".
2016-09-18 16:33:44	w3z	and?
2016-09-18 16:33:47	somaReverse	I don't understand why it not return a T&&
2016-09-18 16:34:06	somaReverse	Why not specify a T&&
2016-09-18 16:34:09	-->	ryxai (~Jonathan@pool-72-89-246-128.nycmny.fios.verizon.net) has joined ##c++
2016-09-18 16:34:13	w3z	ugh, reread it
2016-09-18 16:34:29	somaReverse	reread what?
2016-09-18 16:34:29	<--	bkboggy (~bkboggy@cpe-172-250-147-60.socal.res.rr.com) has quit (Quit: Leaving)
2016-09-18 16:34:32	w3z	T f() &&; is a function returning a T value
2016-09-18 16:34:34	-->	sophia7 (~sophia7@unaffiliated/sophia7) has joined ##c++
2016-09-18 16:34:54	<--	esas (~esas@unaffiliated/esas) has quit
2016-09-18 16:34:57	<--	zmack (~zmack@pool-72-74-144-215.bstnma.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-18 16:34:59	somaReverse	Why not using T&& f() &&
2016-09-18 16:35:00	w3z	its marked with a reference qualifier saying it can only be invoked on a S&& class instance
2016-09-18 16:35:06	somaReverse	I know
2016-09-18 16:35:24	somaReverse	w3z: I was not asking about the trailing &&
2016-09-18 16:36:15	somaReverse	it's returning a rvalue. Why is the return type not specified as one.
2016-09-18 16:36:17	w3z	then why are you asking why its not returning T&& ...its clearly returning a T, one which is constructed by moving another object ...
2016-09-18 16:37:32	w3z	T f(T t) {return move(t);} invokes the move constructor of T with a T&& of t
2016-09-18 16:38:00	w3z	if no move constructor is avalable, itll copy t ...
2016-09-18 16:38:19	-->	skweek (~skweek@68-200-146-225.res.bhn.net) has joined ##c++
2016-09-18 16:39:24	w3z	: {f(tracked::B{});} tracked::B f(tracked::B b) {return move(b);}
2016-09-18 16:39:28	<--	de-facto (~de-facto@unaffiliated/de-facto) has quit (Remote host closed the connection)
2016-09-18 16:39:33	w3z	{f(tracked::B{});} tracked::B f(tracked::B b) {return move(b);}
2016-09-18 16:39:34	geordi	B0* B0=>B1* B1~ B0~
2016-09-18 16:39:50	<--	zipace (~anon@unaffiliated/zipace) has quit (Ping timeout: 265 seconds)
2016-09-18 16:41:35	-->	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has joined ##c++
2016-09-18 16:42:04	somaReverse	If I do a  " T tt = f(t) " , will it be moved twice?
2016-09-18 16:42:04		[16:42]
2016-09-18 16:42:22	-->	dj_pi (~dj@c-73-191-212-56.hsd1.mi.comcast.net) has joined ##c++
2016-09-18 16:42:57	-->	c0le (~c0le@59.99.251.45) has joined ##c++
2016-09-18 16:43:22	--	sophia7 is now known as freesp33ch
2016-09-18 16:43:57	<--	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has quit (Read error: Connection reset by peer)
2016-09-18 16:44:27	-->	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2016-09-18 16:44:36	<--	naraku_9333 (~quassel@unaffiliated/naraku9333) has quit (Read error: Connection reset by peer)
2016-09-18 16:45:08	<--	k_j (~no@151.42.78.158) has quit (Ping timeout: 244 seconds)
2016-09-18 16:45:45	-->	naraku9333 (~quassel@unaffiliated/naraku9333) has joined ##c++
2016-09-18 16:47:53	<--	dj_pi (~dj@c-73-191-212-56.hsd1.mi.comcast.net) has quit (Ping timeout: 250 seconds)
2016-09-18 16:51:00	-->	cbissonn (~cbissonn@104.221.125.44) has joined ##c++
2016-09-18 16:51:21	<--	Ben2560 (~quassel@137.154.198.172) has quit (Ping timeout: 250 seconds)
2016-09-18 16:52:11	-->	anton02_ (~quassel@lal1651212.lnk.telstra.net) has joined ##c++
2016-09-18 16:52:22	<--	skweek (~skweek@68-200-146-225.res.bhn.net) has quit (Ping timeout: 244 seconds)
2016-09-18 16:53:17	<--	anton02 (~quassel@lal1651212.lnk.telstra.net) has quit (Ping timeout: 265 seconds)
2016-09-18 16:53:54	decimad	somaReverse "T tt =" is copy constructor invocation, f(t) might trigger RVO, depending on what's going on there might be moved nothing
2016-09-18 16:54:23	-->	jeromelanteri (~jeromelan@cm-119-76-54-163.revip17.asianet.co.th) has joined ##c++
2016-09-18 16:55:18	-->	zmack (~zmack@pool-72-74-144-215.bstnma.fios.verizon.net) has joined ##c++
2016-09-18 16:55:26	<--	hexagoxel (~hexagoxel@p5B29AC2B.dip0.t-ipconnect.de) has quit (Ping timeout: 244 seconds)
2016-09-18 16:57:03	<--	anton02_ (~quassel@lal1651212.lnk.telstra.net) has quit (Ping timeout: 272 seconds)
2016-09-18 16:57:05	-->	skweek (~skweek@68-200-146-225.res.bhn.net) has joined ##c++
2016-09-18 16:57:05		[16:57]
2016-09-18 16:57:18	<--	chachasmooth (~chachasmo@unaffiliated/chachasmooth) has quit (Ping timeout: 276 seconds)
2016-09-18 16:57:49	-->	hexagoxel (~hexagoxel@p200300798F1C4900021E33FFFE2231E9.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 16:58:39	-->	anton02 (~quassel@lal1651212.lnk.telstra.net) has joined ##c++
2016-09-18 16:59:01	somaReverse	decimad: huh? isn't f(t) an rvalue?
2016-09-18 16:59:39	decimad	somaReverse: I meant the latter case as in: there not copied anything
2016-09-18 16:59:44	decimad	not even moved
2016-09-18 16:59:48	decimad	*possibly*
2016-09-18 17:00:22	decimad	and the former should have read copy/move constructor, but I thought that was clear
2016-09-18 17:01:33	somaReverse	decimad: if there isn't an RVO happening, how many times of move will there be?
2016-09-18 17:01:45	-->	chachasmooth (~chachasmo@unaffiliated/chachasmooth) has joined ##c++
2016-09-18 17:01:55	somaReverse	suppose T has a move constructor\
2016-09-18 17:02:25	decimad	I suppose then it's 2x move
2016-09-18 17:02:26	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 17:02:42	<--	KAHR-Alpha (~Alpha@AReims-652-1-187-168.w92-142.abo.wanadoo.fr) has quit (Ping timeout: 244 seconds)
2016-09-18 17:03:05	<--	justanotheruser (~justanoth@unaffiliated/justanotheruser) has quit (Ping timeout: 248 seconds)
2016-09-18 17:03:46	<--	DigiByteDev (~JT2@31.6.57.106) has quit (Quit: DigiByteDev)
2016-09-18 17:04:13	<--	coius (~coeus@dslb-178-001-004-245.178.001.pools.vodafone-ip.de) has quit (Ping timeout: 244 seconds)
2016-09-18 17:04:44	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 17:05:04	-->	JoshS (~jshjsh@172.56.16.60) has joined ##c++
2016-09-18 17:05:26	somaReverse	decimad: ok. How does RVO decide to use one move or zero?
2016-09-18 17:05:57	<--	zrts (~zarathush@unaffiliated/tolstoi) has quit (Quit: ZNC 1.6.2 - http://znc.in)
2016-09-18 17:06:19	Akahige	If it can, it will completely elide the constructor and not use any
2016-09-18 17:06:27	Akahige	If it can't, it wont.
2016-09-18 17:06:28	-->	justanotheruser (~justanoth@unaffiliated/justanotheruser) has joined ##c++
2016-09-18 17:06:47	<--	jeromelanteri (~jeromelan@cm-119-76-54-163.revip17.asianet.co.th) has quit (Quit: Leaving)
2016-09-18 17:07:07	Akahige	Basically, if there's only one return path, or each return path returns the same object, and the return value is being assigned to an object being constructed. Then you can elide.
2016-09-18 17:07:10	Akahige	Otherwise, nupes.
2016-09-18 17:07:25	-->	jeromelanteri (~jeromelan@cm-119-76-54-163.revip17.asianet.co.th) has joined ##c++
2016-09-18 17:08:38	w3z	updated elision rules: http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0135r1.html
2016-09-18 17:08:52	Akahige	heh
2016-09-18 17:09:51	--	kamog` is now known as kamog
2016-09-18 17:10:03	somaReverse	thanks
2016-09-18 17:11:06	Akahige	w3z: I think I saw you do it before, what was that silly trick you did... It was like...
2016-09-18 17:11:20	Akahige	<< +[]{ return 0xDEADBEEF; }
2016-09-18 17:11:21	geordi	0x40916c
2016-09-18 17:11:22	w3z	i have many silly tricks :)
2016-09-18 17:11:26	Akahige	And it'd print the word
2016-09-18 17:11:44	Akahige	The word that the int read as a char* corresponded to anyway
2016-09-18 17:11:44	<--	plee (~kurt@89.10.219.180) has quit (Read error: Connection reset by peer)
2016-09-18 17:11:45	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-18 17:11:49	<--	m_ben (~m_ben@unaffiliated/m-ben/x-5917362) has quit (Ping timeout: 244 seconds)
2016-09-18 17:11:58	Akahige	The trick is easy enough, I just couldn't remember where the lambda silliness came into it.
2016-09-18 17:12:13	-->	plee (~kurt@89.10.219.180) has joined ##c++
2016-09-18 17:12:13		[17:12]
2016-09-18 17:12:28	w3z	<<[](auto&&a){return(char*)&a;}(0x7a3377)
2016-09-18 17:12:29	geordi	w3z
2016-09-18 17:12:37	-->	interf (~int@unaffiliated/inter) has joined ##c++
2016-09-18 17:12:40	<--	glenfe (~glen@unaffiliated/glenfe) has quit (Read error: Connection reset by peer)
2016-09-18 17:12:47	Akahige	Ah, I see now. :) Thanks.
2016-09-18 17:13:01	w3z	its there to hold the value so i can take its address
2016-09-18 17:13:08	Akahige	I thought it was casting the lambda to a function pointer and getting the string like that. xD
2016-09-18 17:13:47	w3z	<<(char*)&x; unsigned long x=0x7a3377;
2016-09-18 17:13:47	geordi	w3z
2016-09-18 17:14:39	w3z	<<+[]{} //forced decay
2016-09-18 17:14:40	geordi	0x409168
2016-09-18 17:14:49	Akahige	Just thinking... There's no null terminator there, so you're relying on the memory after the stack to be zeroed.
2016-09-18 17:14:59	w3z	of course there is
2016-09-18 17:15:10	w3z	w3z doesnt take up all the bytes
2016-09-18 17:15:25	Akahige	Ah, little endian!
2016-09-18 17:15:30	Akahige	:)
2016-09-18 17:15:31	<--	String (~String@24.42.188.104) has quit (Read error: Connection reset by peer)
2016-09-18 17:15:54	w3z	i have a dft w3z printer too :)
2016-09-18 17:16:14	Akahige	My silly human mind immediately assumed the zeroes were stored before the letters. xD
2016-09-18 17:16:53	<--	f10__ (~flo@2001:470:52af:1:bc25:d260:4fc6:b325) has quit (Read error: Connection reset by peer)
2016-09-18 17:17:14	-->	coius (~coeus@ipservice-092-209-111-144.092.209.pools.vodafone-ip.de) has joined ##c++
2016-09-18 17:17:15	-->	f10__ (~flo@2001:470:52af:1:bc25:d260:4fc6:b325) has joined ##c++
2016-09-18 17:17:19	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Ping timeout: 272 seconds)
2016-09-18 17:17:25	decimad	All the times when I had to care about byte endianess I wished it was big... dunno why... bad luck?
2016-09-18 17:17:30	-->	f10_ (~flo@2001:470:52af:1:242c:2fc9:d40d:50d3) has joined ##c++
2016-09-18 17:18:06	decimad	might have had to do with net code though ;)
2016-09-18 17:18:32	-->	chkm8 (~chkm8@179.43.155.34) has joined ##c++
2016-09-18 17:18:37	-->	arescorpio (~arescorpi@31-236-16-190.fibertel.com.ar) has joined ##c++
2016-09-18 17:18:51	<--	f10 (~flo@2001:470:52af:1:dd12:24db:5df9:c662) has quit (Remote host closed the connection)
2016-09-18 17:19:17	-->	BustyLoliChan (~BustyLoli@2601:680:c201:cd2:6043:8568:1fe6:1bcc) has joined ##c++
2016-09-18 17:20:46	Akahige	You shouldn't really ever have to care about it.
2016-09-18 17:20:51	-->	String (~String@24.42.188.104) has joined ##c++
2016-09-18 17:20:59	Akahige	Just remember to do htos and stoh
2016-09-18 17:21:09	Akahige	They may be no-ops on your system, but do 'em anyway!
2016-09-18 17:21:31	<--	ZMatt2 (~ZMatt2@host149-200-dynamic.59-82-r.retail.telecomitalia.it) has quit (Read error: Connection reset by peer)
2016-09-18 17:22:22	<--	BustyLoli-Chan (~BustyLoli@2601:680:c201:cd2:6043:8568:1fe6:1bcc) has quit (Ping timeout: 255 seconds)
2016-09-18 17:23:07	-->	bushido_ (~bushido@unaffiliated/bursihido) has joined ##c++
2016-09-18 17:24:30	<--	String (~String@24.42.188.104) has quit (Read error: Connection reset by peer)
2016-09-18 17:24:55	<--	vitimiti (~vitimiti@unaffiliated/vitimiti) has quit (Ping timeout: 272 seconds)
2016-09-18 17:25:31	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 17:26:02	-->	UnlikeSuika_mobi (~UnlikeSui@223.38.8.96) has joined ##c++
2016-09-18 17:26:52	<--	f10_ (~flo@2001:470:52af:1:242c:2fc9:d40d:50d3) has quit (Ping timeout: 255 seconds)
2016-09-18 17:26:52	<--	f10__ (~flo@2001:470:52af:1:bc25:d260:4fc6:b325) has quit (Ping timeout: 255 seconds)
2016-09-18 17:27:59	-->	zap0 (~moofy@14-201-222-143.tpgi.com.au) has joined ##c++
2016-09-18 17:27:59		[17:27]
2016-09-18 17:27:59	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 17:28:30	<--	Sasasu (~li@106.47.238.255) has quit (Ping timeout: 260 seconds)
2016-09-18 17:28:42	<--	skweek (~skweek@68-200-146-225.res.bhn.net) has quit (Ping timeout: 264 seconds)
2016-09-18 17:29:22	-->	ScorpionJack (~Scorpion@unaffiliated/scorpionjack) has joined ##c++
2016-09-18 17:30:03	-->	ZMatt2 (~ZMatt2@host149-200-dynamic.59-82-r.retail.telecomitalia.it) has joined ##c++
2016-09-18 17:31:52	symm-	<<sizeof(long)
2016-09-18 17:31:53	geordi	8
2016-09-18 17:32:05	<--	zmack (~zmack@pool-72-74-144-215.bstnma.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-18 17:32:19	symm-	<<(char*)&x; unsigned long x = 0x6d6d7973;
2016-09-18 17:32:20	geordi	symm
2016-09-18 17:32:35	<--	neurodrone (~neurodron@unaffiliated/neurodrone) has quit (Quit: neurodrone)
2016-09-18 17:32:36	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 17:34:42	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 17:36:33	<--	andyhuzhill (~Thunderbi@14.23.45.178) has quit (Quit: andyhuzhill)
2016-09-18 17:37:15	<--	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has quit (Ping timeout: 260 seconds)
2016-09-18 17:38:43	<--	jbud (~jbud@ip-24-54-73-229.user.start.ca) has quit (Quit: leaving)
2016-09-18 17:39:02	-->	Unee0x (~Unee0x@mobile-166-173-249-056.mycingular.net) has joined ##c++
2016-09-18 17:39:36	w3z	<<[](initializer_list<size_t> a){return (char*)&*begin(a);}({7598247002043281256, 111559249781110})
2016-09-18 17:39:37	geordi	how derivative
2016-09-18 17:41:19	-->	Samdjo (~Samdjo@73.114.24.253) has joined ##c++
2016-09-18 17:42:10	-->	String (~String@24.42.188.104) has joined ##c++
2016-09-18 17:43:36	-->	lakin (~lakin@d108-173-185-33.abhsia.telus.net) has joined ##c++
2016-09-18 17:43:36		[17:43]
2016-09-18 17:45:11	<--	dgarnold (~dga@c-73-90-67-117.hsd1.ca.comcast.net) has quit (Ping timeout: 272 seconds)
2016-09-18 17:46:03	-->	logan_e_ (uid164592@gateway/web/irccloud.com/x-gcorrblkxdvaurtg) has joined ##c++
2016-09-18 17:47:00	-->	dgarnold (~dga@c-73-90-67-117.hsd1.ca.comcast.net) has joined ##c++
2016-09-18 17:47:34	<--	froggey (~froggey@unaffiliated/froggey) has quit (Ping timeout: 255 seconds)
2016-09-18 17:47:43	<--	cbissonn (~cbissonn@104.221.125.44) has quit (Quit: Leaving)
2016-09-18 17:49:21	-->	froggey (~froggey@unaffiliated/froggey) has joined ##c++
2016-09-18 17:52:23	symm-	<<(char*)f; void f() { exit(0); }
2016-09-18 17:52:24	geordi	UH��H��[\DLE]dH�[\EOT]%(
2016-09-18 17:53:11	-->	ARCADIVS (~RMM@97.84.20.251) has joined ##c++
2016-09-18 17:55:11	<--	UnlikeSuika_mobi (~UnlikeSui@223.38.8.96) has quit (Quit: RIP)
2016-09-18 17:55:23	-->	UnlikeSuika_mobi (~UnlikeSui@211.210.101.55) has joined ##c++
2016-09-18 17:56:00	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-18 17:56:07	-->	bkboggy (~bkboggy@cpe-172-250-147-60.socal.res.rr.com) has joined ##c++
2016-09-18 17:57:41	<--	skoocda (~skoocda@76.74.139.126) has quit (Quit: Leaving)
2016-09-18 17:58:17	<--	a3Dman (~3Dman@unaffiliated/a3dman) has quit (Ping timeout: 240 seconds)
2016-09-18 17:59:09	<--	hey2 (~hey2@c-71-193-232-55.hsd1.or.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-18 17:59:09		[17:59]
2016-09-18 18:00:30	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Ping timeout: 265 seconds)
2016-09-18 18:00:51	-->	DigiByteDev (~JT2@185.29.164.23) has joined ##c++
2016-09-18 18:01:14	-->	fk_007 (~michael@cpe-69-133-3-170.cinci.res.rr.com) has joined ##c++
2016-09-18 18:04:13	<--	fk_007 (~michael@cpe-69-133-3-170.cinci.res.rr.com) has quit (Quit: Ex-Chat)
2016-09-18 18:04:34	-->	fk_007 (~michael@cpe-69-133-3-170.cinci.res.rr.com) has joined ##c++
2016-09-18 18:04:59	-->	anton02_ (~quassel@lal1651212.lnk.telstra.net) has joined ##c++
2016-09-18 18:05:02	<--	fk_007 (~michael@cpe-69-133-3-170.cinci.res.rr.com) has quit (Read error: Connection reset by peer)
2016-09-18 18:06:08	<--	DigiByteDev (~JT2@185.29.164.23) has left ##c++
2016-09-18 18:06:34	-->	anton02__ (~quassel@lal1651212.lnk.telstra.net) has joined ##c++
2016-09-18 18:07:09	-->	karab44 (~karab44@unaffiliated/karab44) has joined ##c++
2016-09-18 18:07:24	<--	Nilesh_ (uid116340@gateway/web/irccloud.com/x-hhrrpsgwusvunmmh) has quit (Quit: Connection closed for inactivity)
2016-09-18 18:07:43	<--	anton02 (~quassel@lal1651212.lnk.telstra.net) has quit (Ping timeout: 265 seconds)
2016-09-18 18:09:39	<--	anton02_ (~quassel@lal1651212.lnk.telstra.net) has quit (Ping timeout: 265 seconds)
2016-09-18 18:10:28	<--	nikki93 (~nikki93@173.247.196.42) has quit (Remote host closed the connection)
2016-09-18 18:11:14	-->	z8z (~x@ac230029.ppp.asahi-net.or.jp) has joined ##c++
2016-09-18 18:11:51	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-18 18:12:14	<--	ryxai (~Jonathan@pool-72-89-246-128.nycmny.fios.verizon.net) has quit (Quit: Leaving)
2016-09-18 18:12:39	-->	ryxai (~Jonathan@pool-72-89-246-128.nycmny.fios.verizon.net) has joined ##c++
2016-09-18 18:13:57	<--	codercodi (~codercodi@108-192-148-40.lightspeed.gnvlsc.sbcglobal.net) has quit (Quit: Leaving)
2016-09-18 18:14:59	<--	tachoknight (~tachoknig@2601:241:102:60a6:8e70:5aff:fe24:3cb0) has quit (Ping timeout: 250 seconds)
2016-09-18 18:14:59		[18:14]
2016-09-18 18:15:31	symm-	<<(char*)f+4;void f(){asm("push %rbx;rex.WRXB;push %rdx;push %rdx;pop %rcx");}
2016-09-18 18:15:32	geordi	H��[\DLE]dH�[\EOT]%(
2016-09-18 18:15:39	-->	SiN_Bizkit (~SiN_Bizki@88.204.115.47) has joined ##c++
2016-09-18 18:15:58	<--	argoneus (~argoneus@unaffiliated/argoneus) has quit (Remote host closed the connection)
2016-09-18 18:17:47	<--	zrneely (~zrneely@dhcp-18-189-127-98.dyn.mit.edu) has quit (Quit: Leaving)
2016-09-18 18:18:39	<--	SiN_Bizk1t (~SiN_Bizki@host-94-251-111-51.bbcustomer.zsttk.net) has quit (Ping timeout: 244 seconds)
2016-09-18 18:21:24	decimad	Akahige: I wrote a template lib that can unpack any sequence of unaligned integers... I had to respect byte ordering there
2016-09-18 18:21:35	-->	FreeBirdLjj (~freebirdl@223.65.168.137) has joined ##c++
2016-09-18 18:21:43	Akahige	I actually made a similar function.
2016-09-18 18:22:39	Akahige	However, the way I actually did it was to read it to big endian, and call ntoh on it
2016-09-18 18:22:56	Akahige	So in the rare case it's used on a big endian system, it'll still work.
2016-09-18 18:23:50	decimad	well, my lib is configured with source order and host order and can transform a sequential packet definition into a struct
2016-09-18 18:25:23	<--	nkr (Elite14718@gateway/shell/elitebnc/x-gydfwuwaaxlrayoq) has quit (Ping timeout: 250 seconds)
2016-09-18 18:25:52	-->	Cohedrin (~textual@192.77.237.205) has joined ##c++
2016-09-18 18:26:05	<--	FreeBirdLjj (~freebirdl@223.65.168.137) has quit (Ping timeout: 265 seconds)
2016-09-18 18:27:47	-->	tachoknight (~tachoknig@2601:241:102:60a6:8e70:5aff:fe24:3cb0) has joined ##c++
2016-09-18 18:28:02	-->	FreeBirdLjj (~freebirdl@223.65.168.137) has joined ##c++
2016-09-18 18:29:23	-->	itaitb (~itaitb@101.71.200.159) has joined ##c++
2016-09-18 18:30:13	-->	Nilesh_ (uid116340@gateway/web/irccloud.com/x-fyzhldodzweldrwu) has joined ##c++
2016-09-18 18:30:13		[18:30]
2016-09-18 18:32:43	-->	nilg (~user@77.70.2.229) has joined ##c++
2016-09-18 18:32:59	<--	tachoknight (~tachoknig@2601:241:102:60a6:8e70:5aff:fe24:3cb0) has quit (Max SendQ exceeded)
2016-09-18 18:33:05	-->	anton02 (~quassel@lal1651212.lnk.telstra.net) has joined ##c++
2016-09-18 18:33:49	-->	tachoknight (~tachoknig@2601:241:102:60a6:8e70:5aff:fe24:3cb0) has joined ##c++
2016-09-18 18:34:35	<--	anton02__ (~quassel@lal1651212.lnk.telstra.net) has quit (Ping timeout: 272 seconds)
2016-09-18 18:36:48	-->	a3Dman (~3Dman@unaffiliated/a3dman) has joined ##c++
2016-09-18 18:36:54	-->	DigiByteDev (~JT2@185.29.164.141) has joined ##c++
2016-09-18 18:37:12	<--	tristanseifert (~tristanse@128.194.3.4) has quit (Quit: WeeChat 1.0-dev)
2016-09-18 18:39:01	<--	tachoknight (~tachoknig@2601:241:102:60a6:8e70:5aff:fe24:3cb0) has quit (Ping timeout: 272 seconds)
2016-09-18 18:39:40	<--	DigiByteDev (~JT2@185.29.164.141) has quit (Client Quit)
2016-09-18 18:41:48	<--	Rudolf (~rodolfo@unaffiliated/rudolf) has quit (Quit: [IRSSI])
2016-09-18 18:43:57	<--	blueness (~blueness@gentoo/developer/blueness) has quit (Quit: blueness)
2016-09-18 18:45:02	-->	TheSeven (~quassel@rockbox/developer/TheSeven) has joined ##c++
2016-09-18 18:46:00	<--	xnavor (~xnavor@78-70-4-240-no171.business.telia.com) has quit (Quit: This computer has gone to sleep)
2016-09-18 18:46:00		[18:46]
2016-09-18 18:46:23	<--	knaesig (knaesig@191-104-254-51.static.panicbnc.eu) has quit (Quit: Account terminated by the PanicBNC Staff Team.)
2016-09-18 18:46:33	<--	CrypticSquared (~CrypticS_@unaffiliated/crypticsquared) has quit (Ping timeout: 244 seconds)
2016-09-18 18:47:03	<--	Unee0x (~Unee0x@mobile-166-173-249-056.mycingular.net) has quit (Remote host closed the connection)
2016-09-18 18:47:50	<--	justanotheruser (~justanoth@unaffiliated/justanotheruser) has quit (Ping timeout: 260 seconds)
2016-09-18 18:48:06	-->	nkr (Elite14718@gateway/shell/elitebnc/x-nstqfymoduxssizz) has joined ##c++
2016-09-18 18:50:10	<--	Sculptor (~Sculptor@trivialand/master/sculptor) has quit (Ping timeout: 260 seconds)
2016-09-18 18:52:41	<--	Cabanossi (~Cabanossi@p5DD7BF92.dip0.t-ipconnect.de) has quit (Ping timeout: 265 seconds)
2016-09-18 18:52:45	-->	CrypticSquared (~CrypticS_@unaffiliated/crypticsquared) has joined ##c++
2016-09-18 18:54:23	-->	UnripeSuica_mobi (~UnlikeSui@223.38.8.96) has joined ##c++
2016-09-18 18:54:46	-->	Cabanossi (~Cabanossi@p5DD7A781.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 18:54:51	-->	justanotheruser (~justanoth@unaffiliated/justanotheruser) has joined ##c++
2016-09-18 18:55:25	-->	baudejogos (~achubergs@pool-108-54-98-223.nycmny.fios.verizon.net) has joined ##c++
2016-09-18 18:56:33	<--	UnlikeSuika_mobi (~UnlikeSui@211.210.101.55) has quit (Ping timeout: 240 seconds)
2016-09-18 18:56:47	<--	UnripeSuica_mobi (~UnlikeSui@223.38.8.96) has quit (Client Quit)
2016-09-18 18:56:58	-->	UnlikeSuika_mobi (~UnlikeSui@211.210.73.85) has joined ##c++
2016-09-18 18:57:03	<--	o] (~achubergs@pool-108-54-98-223.nycmny.fios.verizon.net) has quit (Ping timeout: 265 seconds)
2016-09-18 18:58:06	-->	UnripeSuica_mobi (~UnlikeSui@211.210.90.198) has joined ##c++
2016-09-18 18:59:28	-->	tachoknight (~tachoknig@2601:241:102:60a6:8e70:5aff:fe24:3cb0) has joined ##c++
2016-09-18 19:00:47	-->	MoziM (~nonroot@cpe-76-169-22-126.socal.res.rr.com) has joined ##c++
2016-09-18 19:01:16	-->	code_zombie (~code_zomb@136.63.230.43) has joined ##c++
2016-09-18 19:01:16		[19:01]
2016-09-18 19:01:29	<--	UnlikeSuika_mobi (~UnlikeSui@211.210.73.85) has quit (Ping timeout: 240 seconds)
2016-09-18 19:01:31	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Remote host closed the connection)
2016-09-18 19:02:54	<--	UnripeSuica_mobi (~UnlikeSui@211.210.90.198) has quit (Ping timeout: 265 seconds)
2016-09-18 19:04:36	<--	itaitb (~itaitb@101.71.200.159) has quit (Read error: Connection reset by peer)
2016-09-18 19:06:47	-->	tdam (~TDAM@p200300624808E100294EB00B1CAEA3A5.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 19:07:24	-->	blueness (~blueness@gentoo/developer/blueness) has joined ##c++
2016-09-18 19:08:15	-->	karts (43a45b4e@gateway/web/cgi-irc/kiwiirc.com/ip.67.164.91.78) has joined ##c++
2016-09-18 19:10:37	<--	anton02 (~quassel@lal1651212.lnk.telstra.net) has quit (Ping timeout: 265 seconds)
2016-09-18 19:10:48	-->	UnlikeSuika_mobi (~UnlikeSui@223.38.8.96) has joined ##c++
2016-09-18 19:11:47	-->	anton02 (~quassel@lal1651212.lnk.telstra.net) has joined ##c++
2016-09-18 19:12:41	<--	snowkidind (~textual@pool-96-255-207-158.washdc.fios.verizon.net) has quit (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
2016-09-18 19:12:53	<--	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has quit (Quit: Leaving.)
2016-09-18 19:13:29	<--	YungRaj (~YungRaj@50-24-71-159.bcstcmtk01.res.dyn.suddenlink.net) has quit (Ping timeout: 240 seconds)
2016-09-18 19:13:56	-->	itaitb (~itaitb@101.71.200.159) has joined ##c++
2016-09-18 19:13:57	-->	Palsson (~Palsson@pc-193-235-91-227.norrkoping.se) has joined ##c++
2016-09-18 19:14:05	-->	trw (~twa@184.250.132.115) has joined ##c++
2016-09-18 19:14:34	<--	itaitb (~itaitb@101.71.200.159) has quit (Changing host)
2016-09-18 19:14:34	-->	itaitb (~itaitb@unaffiliated/itaitb) has joined ##c++
2016-09-18 19:15:18	<--	Samdjo (~Samdjo@73.114.24.253) has quit (Quit:  HydraIRC -> http://www.hydrairc.com <- Now with extra fish!)
2016-09-18 19:16:06	<--	ryxai (~Jonathan@pool-72-89-246-128.nycmny.fios.verizon.net) has quit (Ping timeout: 264 seconds)
2016-09-18 19:17:05	-->	ryxai (~Jonathan@pool-72-89-246-128.nycmny.fios.verizon.net) has joined ##c++
2016-09-18 19:17:05		[19:17]
2016-09-18 19:17:30	<--	SecondForm_Glenn (~Thunderbi@108.189.70.212) has quit (Remote host closed the connection)
2016-09-18 19:18:51	<--	trw (~twa@184.250.132.115) has quit (Ping timeout: 265 seconds)
2016-09-18 19:19:16	<--	arescorpio (~arescorpi@31-236-16-190.fibertel.com.ar) has quit (Quit: Leaving.)
2016-09-18 19:19:33	<--	rimdeker (~rimdeker@unaffiliated/rimdeker) has quit (Remote host closed the connection)
2016-09-18 19:20:05	-->	lolek (~lolek@unaffiliated/marcin) has joined ##c++
2016-09-18 19:20:20	<--	lolek (~lolek@unaffiliated/marcin) has left ##c++
2016-09-18 19:21:26	<--	wolf_mozart (wolf_mozar@gateway/shell/panicbnc/x-awwowrfrcqzkrcgy) has quit (Quit: Account terminated by the PanicBNC Staff Team.)
2016-09-18 19:22:00	-->	mss_cyclist (~MSe@89-250-189-210.tangos.nl) has joined ##c++
2016-09-18 19:23:21	<--	w3z (~w3z@173-169-121-88.res.bhn.net) has quit (Ping timeout: 248 seconds)
2016-09-18 19:24:21	-->	EvilPenguin (~EvilPengu@2605:e000:6189:9600:506d:9beb:64af:ce0c) has joined ##c++
2016-09-18 19:24:23	-->	Akimb (~Akimb@88-119-138-154.static.zebra.lt) has joined ##c++
2016-09-18 19:25:55	<--	tdam (~TDAM@p200300624808E100294EB00B1CAEA3A5.dip0.t-ipconnect.de) has quit (Quit: Mutter: http://www.mutterirc.com)
2016-09-18 19:26:36	<--	SwiftMatt (~Objective@162.242.95.154) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-18 19:26:42	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 19:28:37	<--	ddboline (~quassel@pool-72-80-130-28.nycmny.fios.verizon.net) has quit (Read error: Connection reset by peer)
2016-09-18 19:28:38	-->	xaxxon (~xaxxon@2601:602:9d00:d58b:c55f:ab79:c443:1392) has joined ##c++
2016-09-18 19:28:53	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 19:29:09	-->	w3z (~w3z@173-169-121-88.res.bhn.net) has joined ##c++
2016-09-18 19:29:36	-->	PaSaSaP (~PaSaSaP@nat.ds14.agh.edu.pl) has joined ##c++
2016-09-18 19:29:47	-->	Hellosun_ (~Hellosun@moon.cse.yzu.edu.tw) has joined ##c++
2016-09-18 19:30:35	-->	EricWF (~EricwF@50.206.78.205) has joined ##c++
2016-09-18 19:30:37	-->	Unee0x (~Unee0x@mobile-166-173-249-056.mycingular.net) has joined ##c++
2016-09-18 19:30:40	-->	ddboline (~quassel@pool-72-80-130-28.nycmny.fios.verizon.net) has joined ##c++
2016-09-18 19:30:45	<--	Unee0x (~Unee0x@mobile-166-173-249-056.mycingular.net) has quit (Remote host closed the connection)
2016-09-18 19:34:36	<--	lmat (~lmat@c-68-50-32-125.hsd1.in.comcast.net) has quit (Ping timeout: 244 seconds)
2016-09-18 19:34:36		[19:34]
2016-09-18 19:34:44	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 19:36:59	<--	z8z (~x@ac230029.ppp.asahi-net.or.jp) has quit (Quit: Quitting)
2016-09-18 19:37:09	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 19:37:53	<--	Leovale (~Leovale@45.72.141.66) has quit (Read error: Connection reset by peer)
2016-09-18 19:38:20	-->	asc232 (~Keith@179.38.236.154) has joined ##c++
2016-09-18 19:40:28	-->	kasper^ (~safaf@82.137.10.234) has joined ##c++
2016-09-18 19:40:42	<--	w3z (~w3z@173-169-121-88.res.bhn.net) has quit (Ping timeout: 264 seconds)
2016-09-18 19:43:22	-->	calincru (~calin@c-73-231-85-3.hsd1.ca.comcast.net) has joined ##c++
2016-09-18 19:43:42	-->	SwiftMatt (~Objective@162.242.95.33) has joined ##c++
2016-09-18 19:43:50	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 19:43:54	<--	fury__ (~fury@znc.codexterous.com) has quit (Ping timeout: 244 seconds)
2016-09-18 19:44:15	<--	wget (~wget@unaffiliated/wget) has quit (Ping timeout: 250 seconds)
2016-09-18 19:44:31	-->	kaffeetrauma (~Thunderbi@n37.informatik.fh-dortmund.de) has joined ##c++
2016-09-18 19:45:31	-->	fury_ (~fury@znc.codexterous.com) has joined ##c++
2016-09-18 19:45:37	--	freesp33ch is now known as [Press_Here]
2016-09-18 19:45:56	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 19:47:50	<--	c0le (~c0le@59.99.251.45) has quit (Quit: "This is the end.. My beautiful friend.. The end.")
2016-09-18 19:48:01	-->	lmat (~lmat@c-68-50-32-125.hsd1.in.comcast.net) has joined ##c++
2016-09-18 19:48:58	-->	tis_me (~duane@S0106602ad071a37a.ed.shawcable.net) has joined ##c++
2016-09-18 19:49:27	<--	xiaojunyu (~lunaw@113.57.28.133) has quit (Ping timeout: 250 seconds)
2016-09-18 19:49:50	-->	xiaojunyu (~lunaw@113.57.28.133) has joined ##c++
2016-09-18 19:49:50		[19:49]
2016-09-18 19:49:51	-->	casscode (~bru@169-0-91-62.ip.afrihost.co.za) has joined ##c++
2016-09-18 19:50:15	--	xiaojunyu is now known as Guest70718
2016-09-18 19:50:32	<--	karts (43a45b4e@gateway/web/cgi-irc/kiwiirc.com/ip.67.164.91.78) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-09-18 19:50:41	<--	Crazylemon64 (~Crazylemo@c-98-237-179-255.hsd1.wa.comcast.net) has quit (Ping timeout: 265 seconds)
2016-09-18 19:52:12	-->	Paradisee (~quassel@93-47-186-74.ip114.fastwebnet.it) has joined ##c++
2016-09-18 19:52:18	-->	Paradisee_ (~quassel@93-47-186-74.ip114.fastwebnet.it) has joined ##c++
2016-09-18 19:52:22	<--	Paradisee (~quassel@93-47-186-74.ip114.fastwebnet.it) has quit (Read error: Connection reset by peer)
2016-09-18 19:54:15	<--	Palsson (~Palsson@pc-193-235-91-227.norrkoping.se) has quit (Read error: Connection reset by peer)
2016-09-18 19:55:02	-->	Palsson (~Palsson@pc-193-235-91-227.norrkoping.se) has joined ##c++
2016-09-18 19:55:14	-->	ZexZee (~ZexZee@77-110-193-116.inet.signal.no) has joined ##c++
2016-09-18 19:57:07	-->	jshjsh (~jshjsh@172.56.16.60) has joined ##c++
2016-09-18 19:57:32	<--	orbiter (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has quit (Read error: Connection reset by peer)
2016-09-18 19:58:11	-->	de-facto (~de-facto@unaffiliated/de-facto) has joined ##c++
2016-09-18 19:58:17	<--	Guest64580 (skarn@gateway/shell/firrre/x-aboggcpuimkjokjd) has quit (Excess Flood)
2016-09-18 19:58:18	-->	SorcererX (~SorcererX@cm-84.212.210.160.getinternet.no) has joined ##c++
2016-09-18 19:58:44	-->	giraffe (skarn@gateway/shell/firrre/x-miuhetggxgdvxmpq) has joined ##c++
2016-09-18 19:59:02	<--	JoshS (~jshjsh@172.56.16.60) has quit (Disconnected by services)
2016-09-18 19:59:06	--	giraffe is now known as Guest83809
2016-09-18 19:59:07	--	jshjsh is now known as JoshS
2016-09-18 20:00:06	-->	mmlac (c757542c@gateway/web/cgi-irc/kiwiirc.com/ip.199.87.84.44) has joined ##c++
2016-09-18 20:01:24	-->	mfc (~mfc@unaffiliated/mfc) has joined ##c++
2016-09-18 20:02:00	-->	Tachyon_ (56227f36@gateway/web/freenode/ip.86.34.127.54) has joined ##c++
2016-09-18 20:02:14	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-18 20:02:45	<--	Referencer (~reference@95.154.201.147) has quit (Quit: connection reset by a robot, using wire cutters)
2016-09-18 20:03:11	-->	nikki93 (~nikki93@2601:645:8104:cb10:ca0:ac51:dd45:bfb) has joined ##c++
2016-09-18 20:03:19	<--	ZexZee (~ZexZee@77-110-193-116.inet.signal.no) has quit (Quit: Buh-bye)
2016-09-18 20:04:11	-->	c0le (~c0le@59.99.251.45) has joined ##c++
2016-09-18 20:04:15	-->	Crazylemon64 (~Crazylemo@c-98-237-179-255.hsd1.wa.comcast.net) has joined ##c++
2016-09-18 20:05:09	kstar	Sorry for the stupid question, but can you return a reference?
2016-09-18 20:05:09		[20:05]
2016-09-18 20:05:44	-->	mmlac1 (~mmlac@199.87.84.44) has joined ##c++
2016-09-18 20:06:02	<--	interf (~int@unaffiliated/inter) has quit (Remote host closed the connection)
2016-09-18 20:06:14	kstar	Never mind. Found the answer.
2016-09-18 20:06:15	xaxxon	kstar:  sort of.   depends on exactly what you ean
2016-09-18 20:06:17	xaxxon	mean
2016-09-18 20:06:30	<--	mmlac (c757542c@gateway/web/cgi-irc/kiwiirc.com/ip.199.87.84.44) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-09-18 20:06:37	kstar	xaxxon: Well, I wanted to return a reference to a local variable, that goes out of scope at the end of the method.
2016-09-18 20:06:53	xaxxon	yeah, no.
2016-09-18 20:07:00	kstar	Let's say I want to return a std::string, what's the most efficient way of doing it without having to copy the string?
2016-09-18 20:07:01	xaxxon	return it by value.
2016-09-18 20:07:05	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Ping timeout: 240 seconds)
2016-09-18 20:07:06	xaxxon	return it by value
2016-09-18 20:07:10	kstar	std::string copies on write?
2016-09-18 20:07:13	xaxxon	no
2016-09-18 20:07:20	xaxxon	NRVO + move semantics = no copy
2016-09-18 20:07:27	xaxxon	NVRO?  I can never remembe
2016-09-18 20:07:34	kstar	Wow, what's that?
2016-09-18 20:07:40	xaxxon	in c++, if you made it in a function, return it by value.
2016-09-18 20:07:53	xaxxon	if you allocated memory for it on the heap, return a unique_ptr
2016-09-18 20:07:57	xaxxon	if it's on the stack, return it by value
2016-09-18 20:08:14	xaxxon	if it exists somewhere else, return a reference (or pointer if it can be null)
2016-09-18 20:08:15	kstar	What's the difference between on the stack vs. made it in a function?
2016-09-18 20:08:32	xaxxon	kstar:  a lexically scoped variable in a function is "on the stack"
2016-09-18 20:08:45	-->	pavshn (~pavshn@ppp95-165-153-84.pppoe.spdop.ru) has joined ##c++
2016-09-18 20:08:54	-->	Markow (~Markow@176.122.215.103) has joined ##c++
2016-09-18 20:09:03	kstar	Right. Okay.
2016-09-18 20:09:05	xaxxon	kstar:  http://en.cppreference.com/w/cpp/language/copy_elision
2016-09-18 20:09:14	<--	mmlac1 (~mmlac@199.87.84.44) has left ##c++
2016-09-18 20:09:20	<--	asc232 (~Keith@179.38.236.154) has quit (Remote host closed the connection)
2016-09-18 20:09:54	xaxxon	kstar:  When that local object is constructed, it is constructed directly in the storage where the function's return value would otherwise be moved or copied to
2016-09-18 20:10:17	kstar	Wow! Nice!
2016-09-18 20:10:27	kstar	So this is also part of the standard, which means, it's not compiler specific?
2016-09-18 20:11:29	xaxxon	technically it's "permitted": Under the following circumstances, the compilers are permitted to omit the copy- and move-constructors of class objects even if copy/move constructor and the destructor have observable side-effects.
2016-09-18 20:11:48	xaxxon	kstar:  but you won't find a compiler that doesn't because the impact of not doing it is immense.
2016-09-18 20:12:17	<--	SiN_Bizkit (~SiN_Bizki@88.204.115.47) has quit (Quit: Lost terminal)
2016-09-18 20:12:48	xaxxon	the beneift to code clarity is immense.  Also, it allows optimizers to optimize better
2016-09-18 20:12:57	<--	Valdaris (~Gabe@75-170-43-116.eugn.qwest.net) has quit (Ping timeout: 248 seconds)
2016-09-18 20:13:03	kstar	I see. Makes total sense.
2016-09-18 20:13:35	-->	AquaL1te (~AquaL1te@unaffiliated/aqual1te) has joined ##c++
2016-09-18 20:13:50	<--	mfc (~mfc@unaffiliated/mfc) has quit (Read error: Connection reset by peer)
2016-09-18 20:13:52	xaxxon	kstar:  also, never say "return std::move(variable_defined_in_function);"
2016-09-18 20:13:59	<--	EricWF (~EricwF@50.206.78.205) has quit (Quit: EricWF)
2016-09-18 20:14:10	 *	kstar still hasn't wrapped his head around std::move
2016-09-18 20:15:57	-->	Kn|t3 (~agarwalvi@104.132.196.76) has joined ##c++
2016-09-18 20:15:57	xaxxon	technically it doesn't do much, it just casts your type to a slightly different type.. but then there are things that pick up on that slightly different type (an rvalue reference) to do nifty things.   std::move() itself, doesn't do anything
2016-09-18 20:16:18	-->	szulak (uid162164@gateway/web/irccloud.com/x-lvgyegjgjniisgqn) has joined ##c++
2016-09-18 20:16:26	kstar	xaxxon: Oh, I see, the example here http://en.cppreference.com/w/cpp/utility/move kinda gave me a feel for what move does.
2016-09-18 20:16:33	-->	jshjsh (~jshjsh@172.56.16.60) has joined ##c++
2016-09-18 20:16:52	k_sze[work]	This is not a busy loop wait, right? http://en.cppreference.com/w/cpp/thread/condition_variable/wait_for
2016-09-18 20:17:15	kstar	So in that particular example (where they're doing std::vector<std::string>::push_back( std::move( std::string ) ) ), I could instead use std::vector<std::string>::emplace_back( std::string ) to achieve the same, couldn't I?
2016-09-18 20:17:55	kstar	An r-value reference would've sounded oxymoronical to me until now.
2016-09-18 20:18:06	<--	CoolBreeze (~CoolBreez@87-228-34.netrunf.cytanet.com.cy) has quit (Read error: Connection reset by peer)
2016-09-18 20:18:28	xaxxon	k_sze[work]:  I don't think it's specified and it can be efficient to do a short busy wait in order to potentially avoid a context switch, but no one is going to make a brain dead impl of it that only spins
2016-09-18 20:18:44	-->	wget (~wget@unaffiliated/wget) has joined ##c++
2016-09-18 20:19:02	<--	JoshS (~jshjsh@172.56.16.60) has quit (Ping timeout: 244 seconds)
2016-09-18 20:19:03	xaxxon	kstar:  that's not valid code, so I don't quite get what you're saying
2016-09-18 20:19:23	xaxxon	push_back doesn't have a specialization between rvalue and lvalue references, so it doesn't matter if you std::move it
2016-09-18 20:19:46	xaxxon	emplace_back simply calls the constructor of the vector's value_type with the same parameters you pass it
2016-09-18 20:19:51	kstar	xaxxon: Well, sorry, I mean std::vector<std::string> a; a.push_back( std::move( "Hello" ) ) vs. a.emplace_back( "Hello" )
2016-09-18 20:20:06	-->	segmond (~segmond@2601:40b:8404:fd10:5cf5:d753:50d9:e189) has joined ##c++
2016-09-18 20:20:27	xaxxon	there are no move semantics in what you just typed
2016-09-18 20:20:27		[20:20]
2016-09-18 20:20:29	kstar	xaxxon: Err, what about the example here --> http://en.cppreference.com/w/cpp/utility/move <-- ?
2016-09-18 20:20:54	xaxxon	hrmm
2016-09-18 20:21:23	-->	jablo (~jablo@80.243.123.111) has joined ##c++
2016-09-18 20:21:26	Latexi95	push_back has T&& specialization
2016-09-18 20:21:28	<--	Freze (~Freze@unaffiliated/freze) has quit (Ping timeout: 255 seconds)
2016-09-18 20:21:32	xaxxon	my bad.   push_back DOES have an rvalue ref specialization: http://en.cppreference.com/w/cpp/container/vector/push_back
2016-09-18 20:22:02	-->	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has joined ##c++
2016-09-18 20:22:10	kstar	Okay, so essentially, what the return-value optimization does is very similar to std::move() / returning an rvalue reference implicitly?
2016-09-18 20:22:25	xaxxon	however, push_back will default construct the element before move assigning it (less efficient) vs emplace_back move constructs the object
2016-09-18 20:23:17	xaxxon	kstar:  move semantics only help with dynamically allocated memory.   it doesn't help with the data members in the class.   If you have a huge array inside your class, move semantics don't make it faster.  It still copies the whole thing
2016-09-18 20:23:47	xaxxon	move sematics are good when your class has a pointer and then a bunch of memory is allocated with new
2016-09-18 20:24:02	xaxxon	NVRO, however, makes it so your data members don't have to be copied, either
2016-09-18 20:24:29	xaxxon	becaues the object is actually created where it ends up after the function returns
2016-09-18 20:24:42	-->	mmlac (~mmlac@199.87.84.44) has joined ##c++
2016-09-18 20:24:42	cbreak	depends.
2016-09-18 20:24:54	xaxxon	yay.  I figured if I said enough random stuff, someone smart would show up
2016-09-18 20:25:19	-->	w3z (~w3z@173-169-121-88.res.bhn.net) has joined ##c++
2016-09-18 20:25:21	kstar	xaxxon: But if I have a huge _vector_ inside my class, as opposed to an array, that's on the heap, right?
2016-09-18 20:25:24	xaxxon	oh, and w3z too
2016-09-18 20:25:27	kstar	xaxxon: So then move semantics should make it easy?
2016-09-18 20:25:34	<--	jaafar (~quassel@50-206-78-205-static.hfc.comcastbusiness.net) has quit (Ping timeout: 244 seconds)
2016-09-18 20:25:36	cbreak	yes
2016-09-18 20:25:36	kstar	Ah, I see.
2016-09-18 20:25:42	kstar	Yes, that makes sense that NVRO is more general.
2016-09-18 20:25:50	cbreak	you get move semantic for free if you don't do anything that prevents it
2016-09-18 20:26:08	--	jshjsh is now known as JoshS
2016-09-18 20:26:10	xaxxon	kstar:  things like the location of the memory for the data and the size of it and stuff are on the stack.   btu the actual stuff you've put in the vector is on the heap and std::move makes that cheap to move to another vector
2016-09-18 20:26:28	mmlac	Can anyone tell me if this example 2.37 makes any real world sense or is just used to demonstrate something? (But what?)  https://goo.gl/S6yq9K  - code: decltype( a = b) d = a;  -  even though a is never assigned the value of b?
2016-09-18 20:26:46	-->	Kirrahe (~kirrahe@ip51cc4257.adsl-surfen.hetnet.nl) has joined ##c++
2016-09-18 20:26:47	kstar	xaxxon: Perfect. THanks. It's making a bit more sense now.
2016-09-18 20:26:59	-->	seishun (~Kakera@78.84.135.235) has joined ##c++
2016-09-18 20:27:00	xaxxon	so combining NVRO and move semantics makes it constant time to return stuff
2016-09-18 20:27:13	xaxxon	assuming it's well written
2016-09-18 20:27:30	xaxxon	(there are probably exceptions)
2016-09-18 20:28:40	-->	k_j (~no@151.42.78.158) has joined ##c++
2016-09-18 20:28:43	cbreak	mmlac: looks dumb.
2016-09-18 20:29:03	w3z	mmlac: the exercise is pretty clear ...and spells out the situation .... is it useful in the real world eh
2016-09-18 20:29:28	cbreak	I doubt it's useful anywhere but trick questions
2016-09-18 20:29:54	w3z	well, if you wanted to explicitly hold on to a proxy you might use something like that
2016-09-18 20:30:07	xaxxon	mmlac:  that's just checking to see if you understand the concepts
2016-09-18 20:30:12	w3z	say T's assignment uperator returns U
2016-09-18 20:30:32	cbreak	<< TYPE<decltype(a)>; int a = 5;
2016-09-18 20:30:36	geordi	int
2016-09-18 20:30:48	cbreak	<< TYPE<decltype((a))>; int a = 5;
2016-09-18 20:30:48	geordi	int&
2016-09-18 20:30:58	-->	CoolBreeze (~CoolBreez@87-228-34.netrunf.cytanet.com.cy) has joined ##c++
2016-09-18 20:31:08	w3z	<< TYPE<decltype(a=1)>; int a = 5;
2016-09-18 20:31:09	geordi	int&
2016-09-18 20:31:56	-->	spikebot851 (~lach@58.162.148.70) has joined ##c++
2016-09-18 20:31:58	mmlac	So it's in principle the same as passing it a function that returns an int?
2016-09-18 20:32:01	-->	Vuks (~Vuks@unaffiliated/vuks69) has joined ##c++
2016-09-18 20:32:14	mmlac	as the assignment is never executed by the "return type" is looked at?
2016-09-18 20:32:26	-->	eduardas_m (~eduardas_@213.197.143.19) has joined ##c++
2016-09-18 20:32:34	mmlac	(I understand it's an &int with the assignment op)
2016-09-18 20:32:40	w3z	<< TYPE<decltype(a)>; struct S{int operator=(S){return 0;}}; S a,b;
2016-09-18 20:32:41	geordi	S
2016-09-18 20:32:47	w3z	<< TYPE<decltype(a=b)>; struct S{int operator=(S){return 0;}}; S a,b;
2016-09-18 20:32:47	geordi	int
2016-09-18 20:32:54	cbreak	mmlac: it's type deduction, it gets you the type that assigning to a would result in
2016-09-18 20:33:01	cbreak	the type of the expression
2016-09-18 20:33:02	mmlac	got it.
2016-09-18 20:33:18	w3z	the point is it gives you the result type in an unevaluated expression
2016-09-18 20:33:18	mmlac	Sweet. Thank you everyone, much appreciated! :)
2016-09-18 20:33:39	cbreak	mmlac: it might not compile for some types
2016-09-18 20:33:50	mmlac	Understood. The point of the expression is that it in fact does not do the assignment but just gets the type
2016-09-18 20:34:10	<--	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has quit (Ping timeout: 265 seconds)
2016-09-18 20:34:17	<--	Immune (~Immune@173.55.30.110) has quit (Ping timeout: 272 seconds)
2016-09-18 20:34:55	cbreak	{ S s; decltype(s = 5) t = s; } struct S { struct X {}; X operator=(int) { X x; return x; } };
2016-09-18 20:34:55	geordi	error: conversion from 'S' to non-scalar type 'S::X' requested
2016-09-18 20:35:05	<--	spikebot85 (~lach@58.162.148.70) has quit (Ping timeout: 240 seconds)
2016-09-18 20:35:28	cbreak	here, S::operator= returns something that S can not be assigned to
2016-09-18 20:35:28		[20:35]
2016-09-18 20:35:34	w3z	xaxxon: w3z too what?
2016-09-18 20:35:43	xaxxon	oh nothing
2016-09-18 20:35:50	xaxxon	fahgit abou it
2016-09-18 20:35:54	cbreak	{ S s; decltype(s = 5) t = s; } struct S { void operator=(int) { X x; return x; } };
2016-09-18 20:35:55	geordi	error: 'X' was not declared in this scope
2016-09-18 20:36:02	cbreak	{ S s; decltype(s = 5) t = s; } struct S { void operator=(int) { } };
2016-09-18 20:36:02	geordi	error: variable or field 't' declared void
2016-09-18 20:36:40	<--	spikebot851 (~lach@58.162.148.70) has quit (Ping timeout: 265 seconds)
2016-09-18 20:37:41	-->	rmunoz (~ricardo@217.124.142.50) has joined ##c++
2016-09-18 20:37:44	<--	tis_me (~duane@S0106602ad071a37a.ed.shawcable.net) has quit (Quit: Leaving)
2016-09-18 20:37:48	-->	Paradisee (~quassel@93-47-186-74.ip114.fastwebnet.it) has joined ##c++
2016-09-18 20:37:50	<--	Tachyon_ (56227f36@gateway/web/freenode/ip.86.34.127.54) has quit (Quit: Page closed)
2016-09-18 20:38:34	-->	drozdziak1 (~drozdziak@do-atman.cubiware.com) has joined ##c++
2016-09-18 20:38:38	xaxxon	why can't the compiler use things known at compile time to remove code from conditional blocks?   so that if (is_copy_constructable<T>::value) {...copy stuff...} else {...move stuff} can work?
2016-09-18 20:38:55	xaxxon	as in.. is there a technical limitation stopping something like that from being added to the spec?
2016-09-18 20:39:07	-->	asc232 (~Keith@179.38.236.154) has joined ##c++
2016-09-18 20:39:07	-->	Anodl (~Anodl@p2003007A2F166200A51808241D8946AD.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 20:39:25	<--	asc232 (~Keith@179.38.236.154) has quit (Remote host closed the connection)
2016-09-18 20:39:36	-->	Sceorem (~Sceorem@xbn44-3-82-232-76-9.fbx.proxad.net) has joined ##c++
2016-09-18 20:40:02	<--	Paradisee_ (~quassel@93-47-186-74.ip114.fastwebnet.it) has quit (Ping timeout: 244 seconds)
2016-09-18 20:40:13	-->	Paradisee_ (~quassel@93-47-186-74.ip114.fastwebnet.it) has joined ##c++
2016-09-18 20:41:36	<--	ScorpionJack (~Scorpion@unaffiliated/scorpionjack) has quit (Quit: ScorpionJack)
2016-09-18 20:42:41	-->	jamesaxl (~jamesaxl@176.98.129.195) has joined ##c++
2016-09-18 20:43:04	urdh	xaxxon, i'm pretty sure compilers do that
2016-09-18 20:43:09	urdh	it's called optimization
2016-09-18 20:43:19	xaxxon	urdh:  no, the compiler checks types for everything.
2016-09-18 20:43:30	xaxxon	and the types fail
2016-09-18 20:43:42	xaxxon	since stuff that isn't copy constructible can't be copy constructed
2016-09-18 20:43:42	<--	Paradisee (~quassel@93-47-186-74.ip114.fastwebnet.it) has quit (Ping timeout: 264 seconds)
2016-09-18 20:43:50	xaxxon	i.e. it fails before it gets to the optimzier
2016-09-18 20:44:01	urdh	oh you want to write invalid code in one of the branches
2016-09-18 20:44:13	urdh	maybe constexpr if will do what you want?
2016-09-18 20:44:13	xaxxon	invalid for some instantiations
2016-09-18 20:44:32	xaxxon	wouldn't type traits all be constexpr?
2016-09-18 20:45:35	xaxxon	anyhow I'm pretty sure it doesn't matter.
2016-09-18 20:46:40	xaxxon	geordi:  {if(false){unique_ptr<int>a; unique_ptr<int>b = a;}}
2016-09-18 20:46:40	geordi	error: use of deleted function 'unique_ptr<_Tp, _Dp>::unique_ptr(const unique_ptr<_Tp, _Dp>&) [with _Tp = int; _Dp = default_delete<int>]'
2016-09-18 20:48:03	-->	fprophet (~fprophet@209.99.209.7) has joined ##c++
2016-09-18 20:49:12	-->	swatti (~memory@194.88.49.178) has joined ##c++
2016-09-18 20:49:21	w3z	unfortunately constexpr if falls a bit short there, the discarded branch still has to be legal but no definition need be available
2016-09-18 20:50:39	<--	Vuks (~Vuks@unaffiliated/vuks69) has quit (Ping timeout: 276 seconds)
2016-09-18 20:50:39		[20:50]
2016-09-18 20:50:59	w3z	geordi --clang {if constexpr(false) f(0);} template<class T> void f(T);
2016-09-18 20:50:59	geordi	<no output>
2016-09-18 20:51:04	<--	zap0 (~moofy@14-201-222-143.tpgi.com.au) has quit (Quit: zap0)
2016-09-18 20:51:44	-->	Paradisee (~quassel@93-47-186-74.ip114.fastwebnet.it) has joined ##c++
2016-09-18 20:51:49	xaxxon	w3z:  any idea why it the standard says it has to be legal?
2016-09-18 20:52:20	w3z	dunno, iasked V-ille about it, he grumbled and said he didnt get his way
2016-09-18 20:52:25	xaxxon	ha
2016-09-18 20:52:57	V-ille	no, I just wasn't enthusiastic about if constexpr in non-dependent contexts, and I'm not up to speed on what exactly it means
2016-09-18 20:52:58	xaxxon	it leads to a lot of confusion as well as ugly common practices and seems like it could be changed.
2016-09-18 20:53:29	xaxxon	which is why I was wondering if there is a technical limitation
2016-09-18 20:53:45	-->	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has joined ##c++
2016-09-18 20:53:55	<--	Paradisee_ (~quassel@93-47-186-74.ip114.fastwebnet.it) has quit (Ping timeout: 248 seconds)
2016-09-18 20:54:06	fprophet	if I am sending a char array over the network and receiving it as a char[64] or whatever, do I need to worry about overflow if the sent data is larger than expected?
2016-09-18 20:54:22	xaxxon	!give fprophet general
2016-09-18 20:54:24	nolyc	fprophet: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2016-09-18 20:54:28	xaxxon	also "maybe"
2016-09-18 20:54:54	fprophet	can you explain
2016-09-18 20:55:00	xaxxon	yep.   in ##c++-general
2016-09-18 20:55:26	fprophet	:/
2016-09-18 20:55:53	-->	oxbb5c (~Thunderbi@95.10.223.190) has joined ##c++
2016-09-18 20:56:08	megaTherion	fprophet: you basically only read as much as you expect to get
2016-09-18 20:57:05	w3z	geordi --clang {f("wee"s);} void g(int){} template<class T> void f(T t){if constexpr(is_integral_v<T>) g(t);} //ok thats more interesting/cool
2016-09-18 20:57:06	geordi	<no output>
2016-09-18 20:57:21	<--	logan_e_ (uid164592@gateway/web/irccloud.com/x-gcorrblkxdvaurtg) has quit (Quit: Connection closed for inactivity)
2016-09-18 20:57:26	<--	UnlikeSuika_mobi (~UnlikeSui@223.38.8.96) has quit (Quit: RIP)
2016-09-18 20:57:38	-->	UnlikeSuika_mobi (~UnlikeSui@147.47.140.165) has joined ##c++
2016-09-18 20:58:04	<--	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has quit (Ping timeout: 240 seconds)
2016-09-18 20:58:04	w3z	oh, gcc has if constexpr working too
2016-09-18 20:59:08	et	xaxxon: in a template, with type traits, you should be able to do things like you want
2016-09-18 20:59:22	-->	UnripeSuica_mobi (~UnlikeSui@223.38.8.96) has joined ##c++
2016-09-18 20:59:48	et	it's just ill-formed if there can't be any valid specialization
2016-09-18 20:59:50	-->	mitch0 (~mitch@62-165-210-190.pool.digikabel.hu) has joined ##c++
2016-09-18 20:59:53	-->	forgottenone (~forgotten@195.142.42.54) has joined ##c++
2016-09-18 21:00:07	et	(like if you do static_assert(false))
2016-09-18 21:00:17	-->	slawas (~slawas@postfw01.ps01.plo.tdch.dk) has joined ##c++
2016-09-18 21:00:19	<--	oxbb5c (~Thunderbi@95.10.223.190) has quit (Remote host closed the connection)
2016-09-18 21:00:29	<--	slawas (~slawas@postfw01.ps01.plo.tdch.dk) has left ##c++
2016-09-18 21:00:39	-->	oxbb5c (~Thunderbi@95.10.223.190) has joined ##c++
2016-09-18 21:00:42	V-ille	xaxxon: allowing the discarded branch to contain ill-formed stuff in non-dependent cases apparently causes trouble with how AST compilers normally work
2016-09-18 21:01:04	-->	Ben2560 (~quassel@137.154.197.127) has joined ##c++
2016-09-18 21:02:14	<--	UnlikeSuika_mobi (~UnlikeSui@147.47.140.165) has quit (Ping timeout: 265 seconds)
2016-09-18 21:02:34	<--	UnripeSuica_mobi (~UnlikeSui@223.38.8.96) has quit (Client Quit)
2016-09-18 21:02:37	-->	hatter (~hatter@h-90-120.a137.corp.bahnhof.se) has joined ##c++
2016-09-18 21:02:45	-->	UnlikeSuika_mobi (~UnlikeSui@147.46.113.63) has joined ##c++
2016-09-18 21:03:13	-->	UnlikeSuika (~UnlikeSui@147.46.113.63) has joined ##c++
2016-09-18 21:03:20	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-18 21:03:33	<--	EvilPenguin (~EvilPengu@2605:e000:6189:9600:506d:9beb:64af:ce0c) has quit (Ping timeout: 250 seconds)
2016-09-18 21:03:35	<--	UnlikeSuika (~UnlikeSui@147.46.113.63) has quit (Read error: Connection reset by peer)
2016-09-18 21:03:58	-->	coco (~coco@53541674.cm-6-5a.dynamic.ziggo.nl) has joined ##c++
2016-09-18 21:04:03	<--	nwkj86 (~nwkj86@144.66.6.51.dyn.plus.net) has quit (Ping timeout: 248 seconds)
2016-09-18 21:05:20	xaxxon	V-ille:  interesting.   thank you
2016-09-18 21:07:47	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Ping timeout: 248 seconds)
2016-09-18 21:07:47		[21:07]
2016-09-18 21:07:54	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 21:07:59	-->	Ben2560_ (~quassel@137.154.246.113) has joined ##c++
2016-09-18 21:08:47	-->	UnlikeSuika (~UnlikeSui@147.46.113.63) has joined ##c++
2016-09-18 21:09:45	<--	suppahsrv (~mopmop@host226-206-dynamic.37-79-r.retail.telecomitalia.it) has quit (Quit: Sono gli uomini che conferiscono potere ai simboli... da solo un simbolo � privo di significato)
2016-09-18 21:09:56	<--	ferdna (~ferdna@cpe-69-23-141-130.elp.res.rr.com) has quit (Quit: Leaving)
2016-09-18 21:10:03	<--	Ben2560 (~quassel@137.154.197.127) has quit (Ping timeout: 250 seconds)
2016-09-18 21:10:09	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 21:10:13	<--	oxbb5c (~Thunderbi@95.10.223.190) has quit (Remote host closed the connection)
2016-09-18 21:10:58	-->	h_enke (5eea2101@gateway/web/freenode/ip.94.234.33.1) has joined ##c++
2016-09-18 21:11:56	-->	kasper_ (~safaf@82.137.15.165) has joined ##c++
2016-09-18 21:12:10	-->	Jiwan (~jeangu@212.247.124.2) has joined ##c++
2016-09-18 21:12:21	<--	kasper^ (~safaf@82.137.10.234) has quit (Ping timeout: 265 seconds)
2016-09-18 21:12:39	<--	Cohedrin (~textual@192.77.237.205) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-09-18 21:13:21	<--	Goplat (~goplat@reactos/developer/Goplat) has quit (Remote host closed the connection)
2016-09-18 21:14:16	-->	suppahsrv (~mopmop@host226-206-dynamic.37-79-r.retail.telecomitalia.it) has joined ##c++
2016-09-18 21:14:39	<--	hyacinth (~yhyacinth@61.111.255.109) has quit (Remote host closed the connection)
2016-09-18 21:16:21	-->	hyacinth (~yhyacinth@61.111.255.109) has joined ##c++
2016-09-18 21:16:35	-->	Vuks (~Vuks@unaffiliated/vuks69) has joined ##c++
2016-09-18 21:16:49	<--	decimad (~deci@ip5f5be505.dynamic.kabel-deutschland.de) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-09-18 21:16:57	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 21:19:27	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 21:20:29	<--	nealshire (~Nealshire@unaffiliated/nealshire) has quit (Ping timeout: 244 seconds)
2016-09-18 21:21:03	-->	biberu (~biberu@c-cf2d72d5.08-441-7570702.cust.bredbandsbolaget.se) has joined ##c++
2016-09-18 21:22:36	k_sze[work]	Can somebody tell me what's "iterator->second"? I can't seem to find something like that on cppreference.com
2016-09-18 21:23:14	k_sze[work]	I mean, when I have a pointer to an iterator `it`, what's `it->second`?
2016-09-18 21:23:14		[21:23]
2016-09-18 21:24:23	k_sze[work]	oh wait...
2016-09-18 21:24:28	k_sze[work]	-> is overloaded. ok
2016-09-18 21:26:03	w3z	your iterator likely has a value type of pair ....
2016-09-18 21:28:16	-->	Miroboru (~myrvoll@78.91.103.24) has joined ##c++
2016-09-18 21:29:03	-->	velco (~chill@vlan-185-78-38-153.comnet.bg) has joined ##c++
2016-09-18 21:30:05	-->	elderK (7def4961@pdpc/supporter/active/elderk) has joined ##c++
2016-09-18 21:30:25	elderK	Hey people. I have a question regarding shared libraries / DLLs in C++.
2016-09-18 21:30:46	k_sze[work]	w3z: it comes from an std::map<X,Y>'s begin() , so yes, value type of pair. I'm not sure how I'm supposed to figure that out by reading e.g. cppreference.com though. I only just found out by searching StackOverflow.
2016-09-18 21:30:47	kstar	k_sze[work]: Yeah, look up std::pair
2016-09-18 21:30:56	elderK	I was wondering how many of you create SOs/DLLs using C++ - and how you deal with ABI issues? Do you all just flatten the classes and export C functions that work on them?
2016-09-18 21:31:10	elderK	Or do you just use C++'s features directly in the client and the DLL itself.
2016-09-18 21:31:23	V-ille	depends :)
2016-09-18 21:31:24	kstar	You can also ask geordi I think
2016-09-18 21:31:27	elderK	Say, exporting classes directly and using STL types across boundaries.
2016-09-18 21:31:48	<--	Kn|t3 (~agarwalvi@104.132.196.76) has quit (Quit: Kn|t3)
2016-09-18 21:31:56	V-ille	I don't "flatten classes"
2016-09-18 21:32:19	<--	rsampaio_ (~rodrigo@2601:643:8200:a3f0::f927) has quit (Ping timeout: 248 seconds)
2016-09-18 21:32:35	-->	trw (~twa@184.250.132.115) has joined ##c++
2016-09-18 21:32:36	kstar	{ std::map<int, std::string> a; a.insert( 3, "ABC" ); auto it = a.begin(); TYPE( *it ); }
2016-09-18 21:32:36	geordi	error: no matching function for call to 'map<int, string >::insert(int, const char [4])'
2016-09-18 21:32:41	elderK	V-ille: Would you mind elaborating? I'm curious to your apprach :)
2016-09-18 21:32:49	--	Vuks is now known as Vump
2016-09-18 21:32:59	V-ille	elderK: first define what such flattening means :)
2016-09-18 21:33:05	kstar	Oh, I have to make_pair. LOL.
2016-09-18 21:33:16	kstar	{ std::map<int, std::string> a; auto it = a.begin(); TYPE( *it ); }
2016-09-18 21:33:17	geordi	<no output>
2016-09-18 21:33:23	kstar	{ std::map<int, std::string> a; auto it = a.begin(); << TYPE( *it ); }
2016-09-18 21:33:23	geordi	error: expected primary-expression before '<<' token
2016-09-18 21:33:28	kstar	{ std::map<int, std::string> a; auto it = a.begin(); std::cout << TYPE( *it ); }
2016-09-18 21:33:29	--	Vump is now known as Vuks
2016-09-18 21:33:29	geordi	lvalue pair<int const, string >
2016-09-18 21:33:33	kstar	There, finally.
2016-09-18 21:33:34	V-ille	if I need a C interface, I expose the class types as opaque types, so I can have pointers to them on the C side
2016-09-18 21:33:36	elderK	V-ille: You create helper functions that are visible from C - these functions create or destroy the object and perform the methods.
2016-09-18 21:33:37	-->	deekej (deekej@nat/redhat/x-tfrtuspoejkenera) has joined ##c++
2016-09-18 21:33:37	kstar	k_sze[work]: ^ see above.
2016-09-18 21:33:54	V-ille	elderK: well, sure, if that's what you mean by flattening, then yes, when I need to expose a C interface
2016-09-18 21:34:00	elderK	V-ille: I got the "flatten" term from MSDN.
2016-09-18 21:34:03	-->	ville (~ville@37-33-127-122.bb.dnainternet.fi) has joined ##c++
2016-09-18 21:34:21	elderK	V-ille: What if you don't need a C interface?
2016-09-18 21:34:32	V-ille	I don't always expose a C interface, I write fair amounts of C++ libraries that do not suffer from abi issues
2016-09-18 21:34:37	-->	ibouvousaime (~ibouvousa@41.82.44.97) has joined ##c++
2016-09-18 21:34:39	<--	karakedi (~eAC53C340@unaffiliated/orphan) has quit (Read error: Connection reset by peer)
2016-09-18 21:34:53	V-ille	the abi issues tend to arise on windows with msvc vs. non-msvc compilers being mixed, not much otherwise
2016-09-18 21:35:06	elderK	V-ille: Interesting. Are you able to create subclasses of classes that exist in the DLL?
2016-09-18 21:35:14	V-ille	yes
2016-09-18 21:35:29	elderK	V-ille: Do you pass STL types between modules?
2016-09-18 21:35:42	V-ille	yes
2016-09-18 21:35:59	-->	lyindArk (~jzeiger@mail.talpidae.net) has joined ##c++
2016-09-18 21:36:01	elderK	V-ille: I'm worried about cross-compiler compatibility as well as compatibilty between DLLs and clients built using different compiler settings, say, release vs. debug.
2016-09-18 21:36:02	<--	coco (~coco@53541674.cm-6-5a.dynamic.ziggo.nl) has quit (Quit: WeeChat 1.5)
2016-09-18 21:36:04	V-ille	oh, on msvc there's an abi issue between debug/release as well
2016-09-18 21:36:24	V-ille	there are ways to avoid that
2016-09-18 21:36:38	-->	ubsan__ (~ubsan@ehsclark303.e.subnet.rcn.com) has joined ##c++
2016-09-18 21:36:41	<--	trw (~twa@184.250.132.115) has quit (Ping timeout: 240 seconds)
2016-09-18 21:36:45	elderK	V-ille: Would you mind explaining them? I'd be very interested.
2016-09-18 21:36:47	et	there's also an issue with different versions of the standard library
2016-09-18 21:36:49	-->	lsk (~lsk@enucs/member/lsk) has joined ##c++
2016-09-18 21:37:16	w3z	theres also an issue with late binding ....
2016-09-18 21:37:20	-->	AndyBotwin (~Gustavo@177.96.90.23) has joined ##c++
2016-09-18 21:37:20	<--	AndyBotwin (~Gustavo@177.96.90.23) has quit (Changing host)
2016-09-18 21:37:20	-->	AndyBotwin (~Gustavo@unaffiliated/andybotwin) has joined ##c++
2016-09-18 21:37:28	V-ille	elderK: well, you potentially need to avoid some (not necessarily all) 'stl' types at dll boundaries, and in some cases you want to write class-specific new operators
2016-09-18 21:37:31	w3z	dlsym is no bueno for c++ types
2016-09-18 21:37:33	elderK	It is these problems I'm concerned with.
2016-09-18 21:37:42	V-ille	so as to avoid the differences between release/debug allocation
2016-09-18 21:38:07	-->	coco (~coco@53541674.cm-6-5a.dynamic.ziggo.nl) has joined ##c++
2016-09-18 21:38:24	w3z	on windows you have other issues too, like different free stores
2016-09-18 21:38:24		[21:38]
2016-09-18 21:38:31	elderK	w3z: Exactly.
2016-09-18 21:38:42	V-ille	yes, that would be the difference between release/debug allocation
2016-09-18 21:38:46	<--	ville (~ville@37-33-127-122.bb.dnainternet.fi) has quit (Client Quit)
2016-09-18 21:38:57	elderK	V-ille: Not only - DLLs have their own heaps.
2016-09-18 21:39:03	V-ille	ah, that one
2016-09-18 21:39:04	V-ille	!windows
2016-09-18 21:39:05	nolyc	You should ask your Windows programming questions in ##c++-general, #winapi, ##windows-coding or irc://irc.efnet.org/winprog
2016-09-18 21:39:27	elderK	nolyc: It's not really specific to Windows - imagine a Linux system using multiple C/C++ runtimes.
2016-09-18 21:39:56	w3z	if they all use the same version of the shared crt, then you get a little windows magic that maps a segment between all the instances of the crt dll, its whack-a-doo and yes off-topic
2016-09-18 21:40:01	elderK	V-ille: I mean this problem could technically happen in Linux too, if you were using multiple runtimes.
2016-09-18 21:40:05	V-ille	you can imagine such things all you want, but because linux has abi standards, these issues don't arise
2016-09-18 21:40:50	elderK	Yes - but even so, the runtimes could be different - and how templates are defined, etc, also different?
2016-09-18 21:40:51	<--	seishun (~Kakera@78.84.135.235) has quit (Ping timeout: 248 seconds)
2016-09-18 21:40:51	<--	bocaneri (~bocaneri@about/linux/staff/sauvin) has quit (Ping timeout: 248 seconds)
2016-09-18 21:40:52	V-ille	also, libstdc++ cares about its abi, microsoft is just beginning to do so
2016-09-18 21:41:03	elderK	It's just we're used to glibc and such being "the runtime."?
2016-09-18 21:41:17	V-ille	clang's runtime has the same abi as gcc's runtime
2016-09-18 21:41:18	w3z	again, off-topic, but in linux the big problem is late binding and dynamically gathering type information
2016-09-18 21:41:35	elderK	V-ille: Yes - but what about how the templates expand for say std::string?
2016-09-18 21:41:40	elderK	That's part of the problem too.
2016-09-18 21:42:26	w3z	anyway,
2016-09-18 21:42:39	w3z	!give elderK general
2016-09-18 21:42:40	nolyc	elderK: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2016-09-18 21:42:54	elderK	Thanks.
2016-09-18 21:42:59	elderK	I'll go over there and ask for ideas :)
2016-09-18 21:43:06	elderK	Thanks for your time, guys.
2016-09-18 21:43:06	V-ille	"how templates expand" is just one aspect of the abi stability, and they don't "expand" in incompatible ways
2016-09-18 21:43:15	elderK	Ah, okay. Cool :)
2016-09-18 21:44:04	<--	calincru (~calin@c-73-231-85-3.hsd1.ca.comcast.net) has quit (Ping timeout: 240 seconds)
2016-09-18 21:44:05	k_sze[work]	{ std::map<int, std::string> a; auto it = a.begin(); std::cout << TYPE( it ); }
2016-09-18 21:44:05	geordi	lvalue map<int, string>::iterator
2016-09-18 21:44:10	<--	mangolisk (~mangolisk@S0106848dc7ebaa06.vc.shawcable.net) has quit (Read error: Connection reset by peer)
2016-09-18 21:45:13	-->	Immune (~Immune@173.55.30.110) has joined ##c++
2016-09-18 21:45:27	k_sze[work]	If an iterator of pairs `it` is going out of scope, and the map will be clear()'ed immediately afterward, why set it->second = 0 at all?
2016-09-18 21:45:54	z16	k_sze[work]: Who does that?
2016-09-18 21:46:04	k_sze[work]	This is something I see in libfreenect2.
2016-09-18 21:47:09	k_sze[work]	https://github.com/OpenKinect/libfreenect2/blob/master/src/frame_listener_impl.cpp#L152
2016-09-18 21:47:29	<--	zero_byte (~zer0@ip-89-103-110-138.net.upcbroadband.cz) has quit (Ping timeout: 240 seconds)
2016-09-18 21:47:45	-->	blablablub (~howlymowl@euler.ilr.tu-berlin.de) has joined ##c++
2016-09-18 21:48:09	-->	bjz (~bjz@pa49-199-85-120.pa.vic.optusnet.com.au) has joined ##c++
2016-09-18 21:48:28	-->	match_ita (~Giovanni@dynamic-adsl-78-14-227-127.clienti.tiscali.it) has joined ##c++
2016-09-18 21:49:19	-->	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has joined ##c++
2016-09-18 21:49:23	-->	interop_madness (~interop_m@unaffiliated/interop-madness/x-8858653) has joined ##c++
2016-09-18 21:49:33	et	some people just set everything to 0 after deleting it
2016-09-18 21:49:52	-->	bocaneri (~bocaneri@about/linux/staff/sauvin) has joined ##c++
2016-09-18 21:49:58	-->	a3pq51 (~a3pq51@250-36-179-94.pool.ukrtel.net) has joined ##c++
2016-09-18 21:50:25	<--	DEElekgolo (~DEElekgol@2602:30a:2e0e:a7a0:2584:5b18:1caa:cc3) has quit (Quit: Leaving)
2016-09-18 21:50:41	velco	k_sze[work]: just stupidity
2016-09-18 21:50:46	velco	cargo cult
2016-09-18 21:50:59	<--	reveredge (~reveredge@111.119.209.219) has quit (Ping timeout: 248 seconds)
2016-09-18 21:51:18	z16	Yeah, don't do that
2016-09-18 21:51:42	-->	pylbrecht (~pylbrecht@hotsplots-blu1-ip14.cust.syseleven.net) has joined ##c++
2016-09-18 21:52:20	<--	Ropeney (~Ropeney@tank.mindvision.com.au) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-18 21:52:41	<--	bkboggy (~bkboggy@cpe-172-250-147-60.socal.res.rr.com) has quit (Quit: Leaving)
2016-09-18 21:52:46	-->	reveredge (~reveredge@111.119.209.219) has joined ##c++
2016-09-18 21:53:22	<--	reveredge (~reveredge@111.119.209.219) has quit (Max SendQ exceeded)
2016-09-18 21:53:45	<--	TreyG (~nobody@182.75.45.225) has quit (Ping timeout: 248 seconds)
2016-09-18 21:53:45		[21:53]
2016-09-18 21:53:51	-->	reveredge (~reveredge@111.119.209.219) has joined ##c++
2016-09-18 21:53:57	-->	Anticom (~quassel@217.6.33.234) has joined ##c++
2016-09-18 21:54:29	<--	reveredge (~reveredge@111.119.209.219) has quit (Max SendQ exceeded)
2016-09-18 21:55:00	-->	reveredge (~reveredge@111.119.209.219) has joined ##c++
2016-09-18 21:55:31	<--	biberu (~biberu@c-cf2d72d5.08-441-7570702.cust.bredbandsbolaget.se) has quit (Read error: Connection reset by peer)
2016-09-18 21:55:46	-->	ambro718 (~ambro@unaffiliated/ambro718) has joined ##c++
2016-09-18 21:56:08	<--	pylbrecht (~pylbrecht@hotsplots-blu1-ip14.cust.syseleven.net) has quit (Ping timeout: 244 seconds)
2016-09-18 21:56:22	<--	reveredge (~reveredge@111.119.209.219) has quit (Max SendQ exceeded)
2016-09-18 21:56:56	-->	reveredge (~reveredge@111.119.209.219) has joined ##c++
2016-09-18 21:57:31	-->	magnicida (~raskolnik@2a02:8109:8c80:231:ea39:dfff:fe4d:275b) has joined ##c++
2016-09-18 21:57:37	-->	UnripeSuica_mobi (~UnlikeSui@223.38.8.96) has joined ##c++
2016-09-18 21:58:12	<--	reveredge (~reveredge@111.119.209.219) has quit (Max SendQ exceeded)
2016-09-18 21:58:18	-->	kw01f (~kw01f@merlin.mvtec.com) has joined ##c++
2016-09-18 21:58:46	-->	reveredge (~reveredge@111.119.209.219) has joined ##c++
2016-09-18 21:58:54	-->	KAHR-Alpha (~Alpha@AReims-652-1-187-168.w92-142.abo.wanadoo.fr) has joined ##c++
2016-09-18 21:59:07	-->	Ben2560 (~quassel@137.154.246.113) has joined ##c++
2016-09-18 21:59:43	<--	UnlikeSuika_mobi (~UnlikeSui@147.46.113.63) has quit (Ping timeout: 265 seconds)
2016-09-18 21:59:53	-->	Mare (~MareLucio@p5DE310DE.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 22:00:03	<--	reveredge (~reveredge@111.119.209.219) has quit (Max SendQ exceeded)
2016-09-18 22:00:04	-->	scs (~joseph@82.20.74.94) has joined ##c++
2016-09-18 22:00:34	-->	reveredge (~reveredge@111.119.209.219) has joined ##c++
2016-09-18 22:00:42	<--	UnlikeSuika (~UnlikeSui@147.46.113.63) has quit (Ping timeout: 265 seconds)
2016-09-18 22:00:56	-->	Kn|t3 (~agarwalvi@104.132.196.76) has joined ##c++
2016-09-18 22:01:03	<--	ctnguyen (~chau@cpe-107-185-147-68.socal.res.rr.com) has quit (Remote host closed the connection)
2016-09-18 22:01:12	<--	silent_freak_ (672b7062@gateway/web/freenode/ip.103.43.112.98) has quit (Ping timeout: 240 seconds)
2016-09-18 22:01:17	<--	UnripeSuica_mobi (~UnlikeSui@223.38.8.96) has quit (Client Quit)
2016-09-18 22:01:51	-->	UnlikeSuika_mobi (~UnlikeSui@223.38.8.96) has joined ##c++
2016-09-18 22:02:09	<--	Ben2560_ (~quassel@137.154.246.113) has quit (Ping timeout: 276 seconds)
2016-09-18 22:02:24	<--	Mare (~MareLucio@p5DE310DE.dip0.t-ipconnect.de) has left ##c++
2016-09-18 22:03:29	<--	Anticom (~quassel@217.6.33.234) has quit (Remote host closed the connection)
2016-09-18 22:03:47	-->	biberu (~biberu@c-cf2d72d5.08-441-7570702.cust.bredbandsbolaget.se) has joined ##c++
2016-09-18 22:03:51	-->	Mare (~MareLucio@p5DE310DE.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 22:04:18	-->	nacon (~nacon@unaffiliated/nacon) has joined ##c++
2016-09-18 22:04:19	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-18 22:04:29	<--	bjz (~bjz@pa49-199-85-120.pa.vic.optusnet.com.au) has quit (Read error: Connection reset by peer)
2016-09-18 22:04:54	-->	zap0 (~moofy@14-201-222-143.tpgi.com.au) has joined ##c++
2016-09-18 22:04:54	-->	UnripeSuica_mobi (~UnlikeSui@223.38.8.96) has joined ##c++
2016-09-18 22:05:11	<--	UnlikeSuika_mobi (~UnlikeSui@223.38.8.96) has quit (Client Quit)
2016-09-18 22:05:13	-->	blaxter (~blaxter@33.red-83-49-39.dynamicip.rima-tde.net) has joined ##c++
2016-09-18 22:05:25	-->	Anticom_ (~quassel@217.6.33.234) has joined ##c++
2016-09-18 22:05:43	-->	bjz (~bjz@versent.cust.bdr01.mel11.vic.VOCUS.net.au) has joined ##c++
2016-09-18 22:05:45	<--	bjz (~bjz@versent.cust.bdr01.mel11.vic.VOCUS.net.au) has quit (Client Quit)
2016-09-18 22:05:53	<--	dinfuehr (~dinfuehr@194-166-119-89.adsl.highway.telekom.at) has quit (Ping timeout: 240 seconds)
2016-09-18 22:05:54	<--	danieli (~duniel@213.52.4.149) has quit (Max SendQ exceeded)
2016-09-18 22:06:07	<--	Guest83809 (skarn@gateway/shell/firrre/x-miuhetggxgdvxmpq) has quit (Excess Flood)
2016-09-18 22:06:16	-->	danieli (~duniel@213.52.4.149) has joined ##c++
2016-09-18 22:06:55	<--	Mare (~MareLucio@p5DE310DE.dip0.t-ipconnect.de) has left ##c++
2016-09-18 22:06:57	-->	Mare (~MareLucio@p5DE310DE.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 22:07:01	<--	Mare (~MareLucio@p5DE310DE.dip0.t-ipconnect.de) has left ##c++
2016-09-18 22:08:20	-->	giraffe (skarn@gateway/shell/firrre/x-rwrizjrsdeqryixp) has joined ##c++
2016-09-18 22:08:21	<--	giraffe (skarn@gateway/shell/firrre/x-rwrizjrsdeqryixp) has quit (Max SendQ exceeded)
2016-09-18 22:08:35	-->	dinfuehr (~dinfuehr@91-113-34-173.adsl.highway.telekom.at) has joined ##c++
2016-09-18 22:09:05	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Ping timeout: 260 seconds)
2016-09-18 22:09:05		[22:09]
2016-09-18 22:09:51	<--	Raziel (~Raziel@unaffiliated/raziel) has quit (Read error: Connection reset by peer)
2016-09-18 22:10:15	-->	Raziel (~Raziel@unaffiliated/raziel) has joined ##c++
2016-09-18 22:11:06	-->	giraffe (skarn@gateway/shell/firrre/x-jbgypusomgjgvzwy) has joined ##c++
2016-09-18 22:11:14	-->	petterk (~petterk@179.43.177.66) has joined ##c++
2016-09-18 22:11:28	--	giraffe is now known as Guest98158
2016-09-18 22:12:11	<--	Cabanossi (~Cabanossi@p5DD7A781.dip0.t-ipconnect.de) has quit (Ping timeout: 244 seconds)
2016-09-18 22:12:11	<--	Jokler (~Jokler@46.101.144.183) has quit (Ping timeout: 244 seconds)
2016-09-18 22:12:42	<--	swatti (~memory@194.88.49.178) has quit (Ping timeout: 244 seconds)
2016-09-18 22:12:46	-->	mmlac1 (~mmlac@199.87.84.44) has joined ##c++
2016-09-18 22:13:13	<--	Diyar (~Diyar@unaffiliated/diyar) has quit (Ping timeout: 244 seconds)
2016-09-18 22:13:13	<--	sfan786_ (sid143344@gateway/web/irccloud.com/x-jznnlzjaprrzpezp) has quit (Ping timeout: 244 seconds)
2016-09-18 22:13:13	<--	rhol (~rhol@devinschwab.com) has quit (Ping timeout: 244 seconds)
2016-09-18 22:13:26	<--	AndrewPRS (AndrewPRS@gateway/shell/elitebnc/x-lwanucxcydxdomjm) has quit (Quit: Cya soon! :D)
2016-09-18 22:13:34	-->	swatti (~memory@194.88.49.178) has joined ##c++
2016-09-18 22:13:42	<--	elderK (7def4961@pdpc/supporter/active/elderk) has left ##c++
2016-09-18 22:13:44	<--	mountaingoat (~mountaing@unaffiliated/mountaingoat) has quit (Ping timeout: 244 seconds)
2016-09-18 22:13:44	<--	bx2_ (~bx2@46.140.123.246) has quit (Ping timeout: 244 seconds)
2016-09-18 22:13:44	<--	bipul (~bipul7@linuxpadawan/padawan/bipul) has quit (Ping timeout: 244 seconds)
2016-09-18 22:13:44	<--	TommyC (~TommyC@unaffiliated/sepulchralbloom) has quit (Ping timeout: 244 seconds)
2016-09-18 22:14:01	-->	Cabanossi (~Cabanossi@p5DD7A781.dip0.t-ipconnect.de) has joined ##c++
2016-09-18 22:14:04	<--	ambro718 (~ambro@unaffiliated/ambro718) has quit (Ping timeout: 244 seconds)
2016-09-18 22:14:10	-->	Diyar (~Diyar@unaffiliated/diyar) has joined ##c++
2016-09-18 22:14:10	-->	rhol (~rhol@devinschwab.com) has joined ##c++
2016-09-18 22:14:15	<--	zap0 (~moofy@14-201-222-143.tpgi.com.au) has quit (Ping timeout: 244 seconds)
2016-09-18 22:14:15	<--	mmlac (~mmlac@199.87.84.44) has quit (Ping timeout: 244 seconds)
2016-09-18 22:14:15	<--	wayne (~wayne@consume.rocks) has quit (Ping timeout: 244 seconds)
2016-09-18 22:14:15	<--	geordi (~geordi@v.eelis.net) has quit (Ping timeout: 244 seconds)
2016-09-18 22:14:16	-->	AndrewPRS (AndrewPRS@gateway/shell/elitebnc/x-syvpwuzhzkakybob) has joined ##c++
2016-09-18 22:14:19	-->	Jokler (~Jokler@46.101.144.183) has joined ##c++
2016-09-18 22:14:21	-->	TommyC (~TommyC@unaffiliated/sepulchralbloom) has joined ##c++
2016-09-18 22:14:27	-->	Munnu (~timo@91-158-145-247.elisa-laajakaista.fi) has joined ##c++
2016-09-18 22:14:28	-->	mountaingoat (~mountaing@unaffiliated/mountaingoat) has joined ##c++
2016-09-18 22:14:36	-->	ascii-soup (~nils@unaffiliated/ascii-soup) has joined ##c++
2016-09-18 22:14:46	<--	tuxdev (~tuxdev@unaffiliated/tuxdev) has quit (Ping timeout: 244 seconds)
2016-09-18 22:14:46	<--	yeltzooo9 (~yeltzooo@162.243.110.169) has quit (Ping timeout: 244 seconds)
2016-09-18 22:14:47	-->	wayne (~wayne@unaffiliated/wayne) has joined ##c++
2016-09-18 22:15:00	-->	yeltzooo (~yeltzooo@162.243.110.169) has joined ##c++
2016-09-18 22:15:04	-->	bx2 (~bx2@46.140.123.246) has joined ##c++
2016-09-18 22:15:14	-->	sfan786_ (sid143344@gateway/web/irccloud.com/x-wsfvulyouviozpfu) has joined ##c++
2016-09-18 22:15:23	-->	tuxdev (~tuxdev@unaffiliated/tuxdev) has joined ##c++
2016-09-18 22:15:52	-->	geordi (~geordi@v.eelis.net) has joined ##c++
2016-09-18 22:15:53	-->	bipul (~bipul7@139.59.5.42) has joined ##c++
2016-09-18 22:16:35	-->	francoisk (~francoisk@154.66.250.11) has joined ##c++
2016-09-18 22:17:34	-->	TreyG (~nobody@182.75.45.1) has joined ##c++
2016-09-18 22:17:42	<--	h_enke (5eea2101@gateway/web/freenode/ip.94.234.33.1) has quit (Ping timeout: 240 seconds)
2016-09-18 22:18:48	-->	riemann (~riemann@84-10-11-234.static.chello.pl) has joined ##c++
2016-09-18 22:18:57	<--	ghostlight (~ghostligh@ec2-54-187-97-144.us-west-2.compute.amazonaws.com) has quit (Ping timeout: 250 seconds)
2016-09-18 22:20:25	<--	roentgen (~roentgen@unaffiliated/roentgen) has quit (Ping timeout: 248 seconds)
2016-09-18 22:20:34	<--	ibouvousaime (~ibouvousa@41.82.44.97) has quit (Remote host closed the connection)
2016-09-18 22:20:42	-->	Sasasu (~li@106.47.233.191) has joined ##c++
2016-09-18 22:20:52	-->	haa123 (d8b92740@gateway/web/cgi-irc/kiwiirc.com/ip.216.185.39.64) has joined ##c++
2016-09-18 22:20:53	-->	ibouvousaime (~ibouvousa@41.82.44.97) has joined ##c++
2016-09-18 22:20:58	-->	Beetny (~Beetny@14-202-48-200.tpgi.com.au) has joined ##c++
2016-09-18 22:21:55	<--	przemkovv-bis (~przemkovv@d83-37.icpnet.pl) has quit (Ping timeout: 260 seconds)
2016-09-18 22:22:11	<--	haa123 (d8b92740@gateway/web/cgi-irc/kiwiirc.com/ip.216.185.39.64) has quit (Client Quit)
2016-09-18 22:22:46	<--	TMM (~hp@fsf/member/pdpc.professional.tmm) has quit (Quit: Ex-Chat)
2016-09-18 22:23:24	-->	haa123 (171bf4ca@gateway/web/cgi-irc/kiwiirc.com/ip.23.27.244.202) has joined ##c++
2016-09-18 22:24:08	-->	ghostlight (~ghostligh@ec2-54-187-97-144.us-west-2.compute.amazonaws.com) has joined ##c++
2016-09-18 22:24:08		[22:24]
2016-09-18 22:25:43	-->	zero_byte (zer0@nat/redhat/x-zamvwonavuutqnax) has joined ##c++
2016-09-18 22:26:34	-->	MaBunny (~Peter@117.194.193.47) has joined ##c++
2016-09-18 22:26:39	<--	haa123 (171bf4ca@gateway/web/cgi-irc/kiwiirc.com/ip.23.27.244.202) has quit (Client Quit)
2016-09-18 22:26:54	<--	coco (~coco@53541674.cm-6-5a.dynamic.ziggo.nl) has quit (Quit: WeeChat 1.5)
2016-09-18 22:27:40	--	MaBunny is now known as ByteStorm
2016-09-18 22:28:00	-->	SweetPear (uid144596@gateway/web/irccloud.com/x-bewctylosqcbqukf) has joined ##c++
2016-09-18 22:29:25	-->	gagbo (~gagbo@unaffiliated/gagbo) has joined ##c++
2016-09-18 22:30:14	-->	anton02_ (~quassel@lal1651212.lnk.telstra.net) has joined ##c++
2016-09-18 22:30:22	-->	rendar (~I@host92-69-dynamic.171-212-r.retail.telecomitalia.it) has joined ##c++
2016-09-18 22:30:45	<--	Sasasu (~li@106.47.233.191) has quit (Ping timeout: 276 seconds)
2016-09-18 22:31:49	-->	navidr (uid112413@gateway/web/irccloud.com/x-glmtgdkrhpynmewo) has joined ##c++
2016-09-18 22:32:18	-->	Krixano (601275b0@gateway/web/cgi-irc/kiwiirc.com/ip.96.18.117.176) has joined ##c++
2016-09-18 22:32:41	-->	GrayArea (~GrayArea@cpc73846-dals21-2-0-cust384.20-2.cable.virginm.net) has joined ##c++
2016-09-18 22:32:51	<--	interop_madness (~interop_m@unaffiliated/interop-madness/x-8858653) has quit (Quit: Leaving)
2016-09-18 22:33:04	<--	anton02 (~quassel@lal1651212.lnk.telstra.net) has quit (Ping timeout: 265 seconds)
2016-09-18 22:33:42	<--	elnormous (~elnormous@91.105.17.158) has quit (Remote host closed the connection)
2016-09-18 22:34:00	-->	roentgen (~roentgen@unaffiliated/roentgen) has joined ##c++
2016-09-18 22:34:27	-->	TheJapsAreComing (~Hate-Japs@103.15.184.249) has joined ##c++
2016-09-18 22:34:34	<--	TheJapsAreComing (~Hate-Japs@103.15.184.249) has left ##c++
2016-09-18 22:34:42	-->	fedepad (~fedepad@eduroam-97-27.zdv.uni-mainz.de) has joined ##c++
2016-09-18 22:36:28	<--	BustyLoliChan (~BustyLoli@2601:680:c201:cd2:6043:8568:1fe6:1bcc) has quit (Ping timeout: 255 seconds)
2016-09-18 22:36:41	-->	jkhl (~j@host86-166-214-159.range86-166.btcentralplus.com) has joined ##c++
2016-09-18 22:38:49	-->	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has joined ##c++
2016-09-18 22:38:50	ibouvousaime	hello can someone help me for this error http://i.imgur.com/bQ8alOJ.png Im getting in this file https://gist.github.com/ibouvousaime/07038e45d34737e3b6144429f2ecc4ea , the compilation works but flycheck is showing that error there
2016-09-18 22:39:05	-->	coincoin4ever (~coincoin@178.16.163.28) has joined ##c++
2016-09-18 22:39:31	-->	pylbrecht (~pylbrecht@hotsplots-blu1-ip14.cust.syseleven.net) has joined ##c++
2016-09-18 22:39:31		[22:39]
2016-09-18 22:39:48	-->	tocka (~tocka@78-56-107-170.static.zebra.lt) has joined ##c++
2016-09-18 22:39:58	KrzaQ	in an expression `a = b`, with a and b being of type int, what does "value computation" entail? Especially for a - is it even applied?
2016-09-18 22:41:09	-->	Elirips (~Elirips@242.109.22.178.ftth.as8758.net) has joined ##c++
2016-09-18 22:41:32	-->	PlasmaHH (~plasmahh@213.61.9.75) has joined ##c++
2016-09-18 22:42:25	-->	zenx (~serj@77.95.183.158) has joined ##c++
2016-09-18 22:42:42	-->	DigiByteDev (~JT2@118.140.106.58) has joined ##c++
2016-09-18 22:43:16	KrzaQ	Especially in this context: "If a side effect on a scalar object is unsequenced relative to [..] a value computation using the value of the same scalar object, the behavior is undefined."
2016-09-18 22:43:52	KrzaQ	int a; a = a = 42; // (a) = (a = 42);
2016-09-18 22:44:19	-->	sh4z (lml@unaffiliated/sh4z) has joined ##c++
2016-09-18 22:44:42	KrzaQ	only one of those has a side effect and the left (a) definitely doesn't need to know its value, but I'm not sure if value computation can also mean accessing an lvalue for writing
2016-09-18 22:44:47	<--	EmeraldExplorer (uid87039@gateway/web/irccloud.com/x-widrpevcelujfptd) has quit (Quit: Connection closed for inactivity)
2016-09-18 22:44:57	<--	DigiByteDev (~JT2@118.140.106.58) has quit (Client Quit)
2016-09-18 22:45:08	<--	petterk (~petterk@179.43.177.66) has quit (Quit: petterk)
2016-09-18 22:45:22	-->	losh (~losh@nat-01-06.vty.dailymotion.com) has joined ##c++
2016-09-18 22:45:45	--	losh is now known as Guest46903
2016-09-18 22:46:01	<--	mmlac1 (~mmlac@199.87.84.44) has quit (Quit: WeeChat 1.5)
2016-09-18 22:46:11	<--	gagbo (~gagbo@unaffiliated/gagbo) has quit (Read error: Connection reset by peer)
2016-09-18 22:46:40	-->	Sasasu (~li@106.47.233.191) has joined ##c++
2016-09-18 22:46:50	-->	gagbo (~gagbo@unaffiliated/gagbo) has joined ##c++
2016-09-18 22:46:52	<--	Guest46903 (~losh@nat-01-06.vty.dailymotion.com) has left ##c++
2016-09-18 22:49:04	w3z	just pulling stuff out of my butt, i assume it can mean retrieving the value, consider the alternate case of volatile scalars and how the value computation is different
2016-09-18 22:49:37	KrzaQ	I'm still on the a = a = 42 case ;)
2016-09-18 22:49:43	<--	Vuks (~Vuks@unaffiliated/vuks69) has quit (Ping timeout: 244 seconds)
2016-09-18 22:50:15	KrzaQ	the closest thing to the definition of value computation I found is: Evaluation of an expression (or a sub-expression) in general includes both value computations (including determining the identity of an object for glvalue evaluation and fetching a value previously assigned to an object for prvalue evaluation)
2016-09-18 22:50:22	<--	SoItBegins (~SoItBegin@184.71.5.142) has left ##c++
2016-09-18 22:51:10	w3z	that sounds right
2016-09-18 22:51:32	KrzaQ	so, for int i; int& j = i; i = j = 42;
2016-09-18 22:51:43	KrzaQ	is value computation of i performed?
2016-09-18 22:51:57	-->	elnormous (~elnormous@gateway.evolutiongaming.com) has joined ##c++
2016-09-18 22:52:08	w3z	yes, the abstract machine must determine where to put the value
2016-09-18 22:52:13	w3z	thats assigned
2016-09-18 22:52:31	KrzaQ	then to the best of my knowledge its undefined in C++11,14,17 too
2016-09-18 22:52:58	<--	fluter (~fluter@fedora/fluter) has quit (Ping timeout: 265 seconds)
2016-09-18 22:53:14	w3z	why? if its evaluated right to left?
2016-09-18 22:53:14	<--	Krixano (601275b0@gateway/web/cgi-irc/kiwiirc.com/ip.96.18.117.176) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-09-18 22:53:39	KrzaQ	i and j = 42 are unsequenced
2016-09-18 22:53:55	<--	SorcererX (~SorcererX@cm-84.212.210.160.getinternet.no) has quit (Ping timeout: 248 seconds)
2016-09-18 22:54:10	KrzaQ	If a side effect on a memory location (1.7) is unsequenced relative to either another side effect on the same memory location or a value computation using the value of any object in the same memory location, and they are not potentially concurrent (1.10), the behavior is undefined.
2016-09-18 22:54:30	KrzaQ	j = 42 has a side effect, which is unsequenced relative to value computation of i
2016-09-18 22:54:49	<--	pylbrecht (~pylbrecht@hotsplots-blu1-ip14.cust.syseleven.net) has quit (Ping timeout: 265 seconds)
2016-09-18 22:54:49		[22:54]
2016-09-18 22:55:04	w3z	im not sure i agree that theyre not sequenced there
2016-09-18 22:55:21	KrzaQ	they're both sequenced before the assignment
2016-09-18 22:55:27	-->	brendel (~brice@LAubervilliers-656-1-215-246.w217-128.abo.wanadoo.fr) has joined ##c++
2016-09-18 22:55:27	mitch0	erm, I don't think this is UB. but anyway, just don't do things like that?
2016-09-18 22:56:00	KrzaQ	but I can't see any proof of them being sequenced relative to each other
2016-09-18 22:56:40	KrzaQ	mitch0: just arguing an abstract case that I wouldn't write in real-life code. afaict language-lawyering is exactly within focus of this channel
2016-09-18 22:56:49	-->	King_Hual (~failed@unaffiliated/king-hual/x-1207580) has joined ##c++
2016-09-18 22:56:50	-->	xnavor (~xnavor@vbg-gw.proceranetworks.com) has joined ##c++
2016-09-18 22:57:10	KrzaQ	w3z: you have this: Except where noted, evaluations of operands of individual operators and of subexpressions of individual expressions are unsequenced.
2016-09-18 22:57:17	KrzaQ	http://eel.is/c++draft/intro.execution#15
2016-09-18 22:57:31	KrzaQ	and I can't find that exception for operator='s arguments
2016-09-18 22:57:56	-->	sanct (~sanct@212.35.67.11) has joined ##c++
2016-09-18 22:57:59	w3z	youre asserting that the value computation of a=b is unsequnced, the strcter evaluation order paper contradicts that
2016-09-18 22:58:07	w3z	i thought your concern was with older standards
2016-09-18 22:58:28	-->	elnormou_ (~elnormous@gateway.evolutiongaming.com) has joined ##c++
2016-09-18 22:58:34	KrzaQ	it's with all of them, tbh
2016-09-18 22:59:28	<--	TikityTik (~TikityTik@162.223.44.49) has quit (Read error: Connection reset by peer)
2016-09-18 22:59:31	-->	elnormo__ (~elnormous@gateway.evolutiongaming.com) has joined ##c++
2016-09-18 22:59:34	KrzaQ	The quote I pasted is identical in n3337 which is more or less C++11
2016-09-18 22:59:53	<--	hatter (~hatter@h-90-120.a137.corp.bahnhof.se) has quit (Ping timeout: 248 seconds)
2016-09-18 23:00:15	KrzaQ	You're right though, I missed the explicit "The right operand is sequenced before the left operand." in n4606
2016-09-18 23:00:28	KrzaQ	so it's totally fine in C++17
2016-09-18 23:00:31	w3z	hmm, the paper claims that Explicit use of the phrasing “value computation and side effects associated with” was introduced now
2016-09-18 23:01:07	-->	vicenteH (~user@96.235.15.37.dynamic.jazztel.es) has joined ##c++
2016-09-18 23:01:35	<--	elnormous (~elnormous@gateway.evolutiongaming.com) has quit (Ping timeout: 265 seconds)
2016-09-18 23:01:37	KrzaQ	http://i.imgur.com/S59EanC.png
2016-09-18 23:01:46	KrzaQ	that's n3337. Pardon the screenshot
2016-09-18 23:01:50	-->	snyp (~Snyp@14.99.167.191) has joined ##c++
2016-09-18 23:02:23	<--	sphenxes01 (~sphenxes@192-164-155-49.hdsl.highway.telekom.at) has quit (Remote host closed the connection)
2016-09-18 23:02:59	<--	elnormou_ (~elnormous@gateway.evolutiongaming.com) has quit (Ping timeout: 248 seconds)
2016-09-18 23:03:02	w3z	5.18/1
2016-09-18 23:03:25	KrzaQ	yeah, 17 added The right operand is sequenced before the left operand. that makes it fine
2016-09-18 23:03:30	<--	Guest70718 (~lunaw@113.57.28.133) has quit (Quit: leaving)
2016-09-18 23:03:39	KrzaQ	so you were right from the start, I think
2016-09-18 23:04:51	-->	xiaojunyu (~root@101.200.209.126) has joined ##c++
2016-09-18 23:05:02	<--	elnormo__ (~elnormous@gateway.evolutiongaming.com) has quit (Read error: Connection reset by peer)
2016-09-18 23:05:03	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-18 23:05:04	<--	Akimb (~Akimb@88-119-138-154.static.zebra.lt) has quit (Ping timeout: 240 seconds)
2016-09-18 23:05:28	-->	elnormous (~elnormous@gateway.evolutiongaming.com) has joined ##c++
2016-09-18 23:05:40	KrzaQ	Welp. Thank you for being helpful.
2016-09-18 23:05:45	w3z	kind of crazy that it took 30 years to make that explicit, anyway
2016-09-18 23:05:50	-->	pylbrecht (~pylbrecht@hotsplots-blu1-ip14.cust.syseleven.net) has joined ##c++
2016-09-18 23:07:22	-->	sphenxes (~sphenxes@192-164-155-49.hdsl.highway.telekom.at) has joined ##c++
2016-09-18 23:07:43	<--	sphenxes (~sphenxes@192-164-155-49.hdsl.highway.telekom.at) has quit (Max SendQ exceeded)
2016-09-18 23:09:15	<--	snyp (~Snyp@14.99.167.191) has quit (Quit: WeeChat 1.5)
2016-09-18 23:09:32	-->	fluter (~fluter@fedora/fluter) has joined ##c++
2016-09-18 23:09:45	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Ping timeout: 276 seconds)
2016-09-18 23:11:57	-->	SorcererX (~SorcererX@cm-84.212.210.160.getinternet.no) has joined ##c++
2016-09-18 23:11:57		[23:11]
2016-09-18 23:11:58	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 23:12:22	--	SorcererX is now known as Guest17833
2016-09-18 23:13:46	-->	AndyD (~AndyD@host-78-144-129-183.as13285.net) has joined ##c++
2016-09-18 23:14:03	-->	trw (~twa@184.250.132.115) has joined ##c++
2016-09-18 23:14:09	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 23:14:16	<--	coincoin169 (~coincoin1@193.55.29.209) has quit (Ping timeout: 255 seconds)
2016-09-18 23:14:39	-->	it_ (~it_@212.243.190.164) has joined ##c++
2016-09-18 23:14:40	-->	einarelen (~user@c-31-208-80-215.cust.bredband2.com) has joined ##c++
2016-09-18 23:14:57	<--	AndyDD (~AndyD@host-2-100-222-179.as13285.net) has quit (Ping timeout: 276 seconds)
2016-09-18 23:15:12	<--	biberu (~biberu@c-cf2d72d5.08-441-7570702.cust.bredbandsbolaget.se) has quit
2016-09-18 23:15:42	<--	a3pq51 (~a3pq51@250-36-179-94.pool.ukrtel.net) has quit (Read error: Connection reset by peer)
2016-09-18 23:16:33	<--	Paradisee (~quassel@93-47-186-74.ip114.fastwebnet.it) has quit (Remote host closed the connection)
2016-09-18 23:17:01	<--	KiNgMaR (~ingmar@cake.irsoft.de) has quit (Ping timeout: 250 seconds)
2016-09-18 23:18:06	<--	oftc_ftw (~oftc_ftw@unaffiliated/oftc-ftw/x-3443471) has quit (Ping timeout: 265 seconds)
2016-09-18 23:18:24	-->	a3pq51 (~a3pq51@232-25-179-94.pool.ukrtel.net) has joined ##c++
2016-09-18 23:18:58	<--	trw (~twa@184.250.132.115) has quit (Ping timeout: 272 seconds)
2016-09-18 23:19:54	-->	KiNgMaR (~ingmar@cake.irsoft.de) has joined ##c++
2016-09-18 23:20:19	-->	CtrlC- (~CtrlC@5.196.252.236) has joined ##c++
2016-09-18 23:23:02	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 23:23:10	-->	DigiByteDev (~JT2@n218250011174.netvigator.com) has joined ##c++
2016-09-18 23:23:42	-->	andyhuzhill (~Thunderbi@14.23.45.178) has joined ##c++
2016-09-18 23:24:35	<--	przemkovv (~przemkovv@gandalf.kari.put.poznan.pl) has quit (Quit: WeeChat 1.5)
2016-09-18 23:24:36	<--	plee (~kurt@89.10.219.180) has quit (Read error: Connection reset by peer)
2016-09-18 23:24:52	Eelis	not really. just shows that for 30 years nobody cared enough about defining the semantics of something horrible you shouldn't be doing anyway
2016-09-18 23:25:03	-->	coincoin169 (~coincoin1@193.55.29.209) has joined ##c++
2016-09-18 23:25:12	Eelis	hardly surprising
2016-09-18 23:25:20	-->	sag3 (~O@91.214.169.69) has joined ##c++
2016-09-18 23:25:22	-->	plee (~kurt@89.10.219.180) has joined ##c++
2016-09-18 23:25:31	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 23:26:55	-->	sphenxes (~sphenxes@192-164-155-49.hdsl.highway.telekom.at) has joined ##c++
2016-09-18 23:27:36	<--	FreeBirdLjj (~freebirdl@223.65.168.137) has quit (Remote host closed the connection)
2016-09-18 23:27:36		[23:27]
2016-09-18 23:28:11	-->	przemkovv (~przemkovv@gandalf.kari.put.poznan.pl) has joined ##c++
2016-09-18 23:28:15	<--	chkm8 (~chkm8@179.43.155.34) has quit (Ping timeout: 265 seconds)
2016-09-18 23:28:31	<--	sphenxes (~sphenxes@192-164-155-49.hdsl.highway.telekom.at) has quit (Remote host closed the connection)
2016-09-18 23:28:32	-->	hatter (~hatter@h-90-120.a137.corp.bahnhof.se) has joined ##c++
2016-09-18 23:28:40	<--	Sasasu (~li@106.47.233.191) has quit (Ping timeout: 265 seconds)
2016-09-18 23:29:17	<--	pylbrecht (~pylbrecht@hotsplots-blu1-ip14.cust.syseleven.net) has quit (Quit: WeeChat 1.5)
2016-09-18 23:29:54	-->	sphenxes (~sphenxes@192-164-155-49.hdsl.highway.telekom.at) has joined ##c++
2016-09-18 23:29:58	-->	oftc_ftw (~oftc_ftw@unaffiliated/oftc-ftw/x-3443471) has joined ##c++
2016-09-18 23:31:57	-->	AndyDD (~AndyD@host-78-144-139-144.as13285.net) has joined ##c++
2016-09-18 23:32:17	<--	AndyD (~AndyD@host-78-144-129-183.as13285.net) has quit (Ping timeout: 240 seconds)
2016-09-18 23:33:32	<--	Zxpr1jk (~zxpr1jk@24.214.61.47) has quit (Read error: Connection reset by peer)
2016-09-18 23:33:39	-->	AndyD (~AndyD@host-2-97-111-71.as13285.net) has joined ##c++
2016-09-18 23:33:56	<--	AndyD (~AndyD@host-2-97-111-71.as13285.net) has quit (Read error: Connection reset by peer)
2016-09-18 23:34:17	<--	andyhuzhill (~Thunderbi@14.23.45.178) has quit (Quit: andyhuzhill)
2016-09-18 23:35:21	-->	ppf (~pfaffe@i41pc78.ipd.uni-karlsruhe.de) has joined ##c++
2016-09-18 23:35:38	-->	flavi0 (~anon@unaffiliated/flavi0) has joined ##c++
2016-09-18 23:36:15	<--	kasper_ (~safaf@82.137.15.165) has quit (Ping timeout: 244 seconds)
2016-09-18 23:36:29	<--	CtrlC- (~CtrlC@5.196.252.236) has left ##c++
2016-09-18 23:36:35	<--	AndyDD (~AndyD@host-78-144-139-144.as13285.net) has quit (Ping timeout: 248 seconds)
2016-09-18 23:38:15	-->	CtrlC (~CtrlC@unaffiliated/ctrlc) has joined ##c++
2016-09-18 23:38:45	<--	corsaere (~corsaere@unaffiliated/corsaere) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-09-18 23:39:05	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 23:39:56	-->	zwliew (uid161395@gateway/web/irccloud.com/x-dmjqmtwveezsvydq) has joined ##c++
2016-09-18 23:40:42	<--	KAHR-Alpha (~Alpha@AReims-652-1-187-168.w92-142.abo.wanadoo.fr) has quit (Ping timeout: 264 seconds)
2016-09-18 23:41:14	-->	RazielZ (~Raziel@unaffiliated/raziel) has joined ##c++
2016-09-18 23:41:30	-->	AndyDD (AndyDD@host-2-97-104-87.as13285.net) has joined ##c++
2016-09-18 23:41:32	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 23:41:50	<--	xiaojunyu (~root@101.200.209.126) has quit (Quit: leaving)
2016-09-18 23:42:53	-->	unK_ (~drunK@dynamic-78-8-10-212.ssp.dialog.net.pl) has joined ##c++
2016-09-18 23:42:53		[23:42]
2016-09-18 23:44:29	<--	Raziel (~Raziel@unaffiliated/raziel) has quit (Ping timeout: 244 seconds)
2016-09-18 23:44:32	-->	AndyD (AndyDD@host-78-144-129-187.as13285.net) has joined ##c++
2016-09-18 23:45:09	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-18 23:46:03	<--	AndyDD (AndyDD@host-2-97-104-87.as13285.net) has quit (Ping timeout: 240 seconds)
2016-09-18 23:46:08	-->	djcb (~user@85-76-16-54-nat.elisa-mobile.fi) has joined ##c++
2016-09-18 23:46:44	-->	interop_madness (~interop_m@unaffiliated/interop-madness/x-8858653) has joined ##c++
2016-09-18 23:47:01	-->	Akimb (~Akimb@88-119-138-154.static.zebra.lt) has joined ##c++
2016-09-18 23:47:13	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-18 23:47:15	-->	aethersis (~aeth@host89252161.fp.3s.pl) has joined ##c++
2016-09-18 23:47:41	aethersis	hello - which channel for code optimizatoin related questions?
2016-09-18 23:47:45	-->	SHC (~quassel@59.93.127.100) has joined ##c++
2016-09-18 23:48:33	-->	Tempesta_ (~Tempesta@121.131.185.96) has joined ##c++
2016-09-18 23:50:03	<--	symm- (~symm-@86.127.152.32) has quit (Ping timeout: 276 seconds)
2016-09-18 23:50:07	-->	ville (~ville@188-67-98-247.bb.dnainternet.fi) has joined ##c++
2016-09-18 23:50:23	-->	seru76 (~seru76@77.89.191.179) has joined ##c++
2016-09-18 23:50:33	<--	Tempesta (~Tempesta@unaffiliated/tempesta) has quit (Ping timeout: 248 seconds)
2016-09-18 23:51:50	-->	bergesenha (~harald@90.149.192.21) has joined ##c++
2016-09-18 23:53:59	-->	TMM (~hp@fsf/member/pdpc.professional.tmm) has joined ##c++
2016-09-18 23:54:32	-->	jefcolbi (~Thunderbi@188.166.147.168) has joined ##c++
2016-09-18 23:55:04	<--	DigiByteDev (~JT2@n218250011174.netvigator.com) has quit (Ping timeout: 240 seconds)
2016-09-18 23:55:31	<--	geordi (~geordi@v.eelis.net) has quit (Ping timeout: 244 seconds)
2016-09-18 23:55:31	<--	disgusting[m] (disgusting@gateway/shell/matrix.org/x-iyahkzvudtuamezs) has quit (Ping timeout: 244 seconds)
2016-09-18 23:56:02	<--	knittl (~knittl@unaffiliated/knittl) has quit (Ping timeout: 244 seconds)
2016-09-18 23:56:33	<--	archheretic (~archheret@cm-84.213.214.158.getinternet.no) has quit (Ping timeout: 244 seconds)
2016-09-18 23:56:42	-->	knittl (~knittl@unaffiliated/knittl) has joined ##c++
2016-09-18 23:57:04	<--	strtok (~strtok@thales.strtok.net) has quit (Ping timeout: 244 seconds)
2016-09-18 23:57:04	<--	zhr (~aleksi@107.170.226.29) has quit (Ping timeout: 244 seconds)
2016-09-18 23:57:04	<--	smspillaz (smspillaz@motsugo.ucc.gu.uwa.edu.au) has quit (Ping timeout: 244 seconds)
2016-09-18 23:57:04	<--	Moult (~Moult@gentoo/developer/moult) has quit (Ping timeout: 244 seconds)
2016-09-18 23:57:11	-->	archheretic (~archheret@cm-84.213.214.158.getinternet.no) has joined ##c++
2016-09-18 23:57:23	-->	geordi (~geordi@v.eelis.net) has joined ##c++
2016-09-18 23:57:29	<--	code_zombie (~code_zomb@136.63.230.43) has quit (Quit: Leaving)
2016-09-18 23:57:37	-->	DigiByteDev (~JT2@n218250011174.netvigator.com) has joined ##c++
2016-09-18 23:57:58	-->	smspillaz (smspillaz@motsugo.ucc.gu.uwa.edu.au) has joined ##c++
2016-09-18 23:57:58		[23:57]
2016-09-18 23:58:00	-->	strtok (~strtok@thales.strtok.net) has joined ##c++
2016-09-18 23:58:03	<--	ph88_ (~h88@095-097-065-054.static.chello.nl) has quit (Killed (Sigyn (Spam is off topic on freenode.)))
2016-09-18 23:58:04	-->	zhr (~aleksi@107.170.226.29) has joined ##c++
2016-09-18 23:58:26	-->	ph88_ (~h88@145.131.171.178) has joined ##c++
2016-09-18 23:59:11	-->	Moult (~Moult@static.88-198-98-200.clients.your-server.de) has joined ##c++
2016-09-18 23:59:31	-->	vitimiti (~vitimiti@unaffiliated/vitimiti) has joined ##c++
2016-09-19 00:02:01	-->	disgusting[m] (disgusting@gateway/shell/matrix.org/x-madgadldufdlqfkk) has joined ##c++
2016-09-19 00:02:51	-->	biberu (~biberu@c-cf2d72d5.08-441-7570702.cust.bredbandsbolaget.se) has joined ##c++
2016-09-19 00:04:26	<--	DigiByteDev (~JT2@n218250011174.netvigator.com) has quit (Quit: DigiByteDev)
2016-09-19 00:05:36	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-19 00:05:48	-->	zack_s_ (57ea344a@gateway/web/freenode/ip.87.234.52.74) has joined ##c++
2016-09-19 00:05:53	KrzaQ	there was a struct that was supposed to replace the __FILE__ and __LINE__ macros. I can't remember the name and I can't google it. Is it in 17?
2016-09-19 00:06:34	zack_s_	can anybody explain me the example of std::condition_variable::wait http://en.cppreference.com/w/cpp/thread/condition_variable/wait
2016-09-19 00:07:14	zack_s_	mostly the usage of std::unique_lock<std::mutex> lock(m); in collaboration with "wait"
2016-09-19 00:07:20	<--	blaxter (~blaxter@33.red-83-49-39.dynamicip.rima-tde.net) has quit (Quit: foo)
2016-09-19 00:07:23	<--	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has quit (Read error: Connection reset by peer)
2016-09-19 00:07:32	V-ille	wait must be called with a locked lock
2016-09-19 00:07:40	V-ille	wait will then unlock and re-lock the lock
2016-09-19 00:08:39	V-ille	it's quite similar to how pthread_mutex_t and pthread_cond_t work together
2016-09-19 00:08:45	-->	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has joined ##c++
2016-09-19 00:09:10	-->	AndyDD (AndyDD@78.144.129.242) has joined ##c++
2016-09-19 00:09:45	<--	fluter (~fluter@fedora/fluter) has quit (Ping timeout: 248 seconds)
2016-09-19 00:10:04	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Ping timeout: 255 seconds)
2016-09-19 00:10:47	<--	AndyD (AndyDD@host-78-144-129-187.as13285.net) has quit (Ping timeout: 265 seconds)
2016-09-19 00:10:53	zack_s_	V-ille: I didnt read it that wait must be called with a locked mutex?
2016-09-19 00:11:18	KrzaQ	Notes
2016-09-19 00:11:19	KrzaQ	Calling this function if lock.mutex() is not locked by the current thread is undefined behavior.
2016-09-19 00:11:39	KrzaQ	lock 	- 	an object of type std::unique_lock<std::mutex>, which must be locked by the current thread
2016-09-19 00:11:47	KrzaQ	it's there, more than once ;)
2016-09-19 00:12:12	-->	benergy (~benergy@2a02:2028:72b:5a01:fd78:fef6:9090:8a37) has joined ##c++
2016-09-19 00:12:45	velco	zack_s_: https://www.manning.com/books/c-plus-plus-concurrency-in-action
2016-09-19 00:12:57	<--	V-ille (~ville@81-175-149-170.bb.dnainternet.fi) has quit (Ping timeout: 248 seconds)
2016-09-19 00:13:35	-->	Xeshi (~root@46.101.237.93) has joined ##c++
2016-09-19 00:13:35		[00:13]
2016-09-19 00:13:36	<--	AndyDD (AndyDD@78.144.129.242) has quit (Ping timeout: 244 seconds)
2016-09-19 00:14:09	-->	qis (~qis@ip-178-200-100-75.hsi07.unitymediagroup.de) has joined ##c++
2016-09-19 00:14:11	<--	it_ (~it_@212.243.190.164) has quit (Quit: Nettalk6 - www.ntalk.de)
2016-09-19 00:15:33	<--	HobGoblin (~jaa@yatima.uukgoblin.net) has quit (Changing host)
2016-09-19 00:15:33	-->	HobGoblin (~jaa@unaffiliated/uukgoblin) has joined ##c++
2016-09-19 00:15:39	--	HobGoblin is now known as UukGoblin
2016-09-19 00:15:49	KrzaQ	velco: have you read this book?
2016-09-19 00:16:15	<--	SwiftMatt (~Objective@162.242.95.33) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-19 00:16:25	-->	w41 (~w41@unaffiliated/w41) has joined ##c++
2016-09-19 00:16:45	-->	AndyDD (AndyDD@host-78-144-133-56.as13285.net) has joined ##c++
2016-09-19 00:16:47	xaxxon	KrzaQ:  a lot of people swear by it.  I found it meh
2016-09-19 00:17:17	KrzaQ	It's been sitting on my shelf for a year now. I've yet to touch it
2016-09-19 00:17:26	velco	zack_s_: tl;dr mutex is there to prevent concurrent modifications to the condition (in the example, the value of variable `i`); hence both these who read and these who modify `i` must lock the  mutex. The condition wait *atomically* unlocks the mutex and blocks the thread: that means that when if someone changes the condition (while holding the lock) a su sequent notify will in fact wake up the thread
2016-09-19 00:17:58	velco	KrzaQ: I've browsed it, to get an impression; haven't read it, nor I intend to do so.
2016-09-19 00:17:58	-->	fluter (~fluter@fedora/fluter) has joined ##c++
2016-09-19 00:18:01	 *	KrzaQ is going through the SO book list in random order
2016-09-19 00:18:05	RokerHRO	"foo @ bar"@domain.de
2016-09-19 00:18:10	-->	silent_freak_ (672b7062@gateway/web/freenode/ip.103.43.112.98) has joined ##c++
2016-09-19 00:18:17	KrzaQ	so what's your impression then? :)
2016-09-19 00:18:32	velco	good for basic API description
2016-09-19 00:18:43	velco	not a concurrent programming textbook
2016-09-19 00:18:49	KrzaQ	mhm
2016-09-19 00:19:03	cbreak	RokerHRO: I tried using a similar e-mail address with my hoster... turned out to not work there (bad software probably), and now I can't delete it anymore :)
2016-09-19 00:19:10	KrzaQ	Well, a lot of people are saying that Alexandrescu's book is pretty outdated. I found it great
2016-09-19 00:19:45	RokerHRO	cbreak: har har. Great. But it reduces the number of mail addresses you got from your hoster?
2016-09-19 00:19:59	xaxxon	KrzaQ:  well, the concepts are all solid, but the tools to achieve those concepts are much better now
2016-09-19 00:20:06	-->	DigiByteDev (~JT2@31.6.57.146) has joined ##c++
2016-09-19 00:20:14	KrzaQ	I agree completely
2016-09-19 00:20:19	velco	yeah
2016-09-19 00:20:20	<--	Immune (~Immune@173.55.30.110) has quit (Ping timeout: 260 seconds)
2016-09-19 00:20:29	KrzaQ	It's painful to read TYPELIST_3 and etc
2016-09-19 00:20:31	cbreak	RokerHRO: I have an unlimited number of them. Just looks annoying in the web UI
2016-09-19 00:21:30	RokerHRO	cbreak: ah okay. so you can register "–––––––––––––––"@domain.de to have some kind of delimiter between the invalid and the valid addresses :-D
2016-09-19 00:21:37	KrzaQ	Or there was a passage about a bug in C++98 standard that has been fixed since 03
2016-09-19 00:21:43	RokerHRO	just for UI purposes, of course.
2016-09-19 00:21:54	<--	zero_byte (zer0@nat/redhat/x-zamvwonavuutqnax) has quit (Ping timeout: 276 seconds)
2016-09-19 00:22:45	<--	w41 (~w41@unaffiliated/w41) has quit (Read error: Connection reset by peer)
2016-09-19 00:22:52	cbreak	RokerHRO: my test was something like "日本語”@domain.com
2016-09-19 00:22:58	cbreak	that's probably after --- :)
2016-09-19 00:23:19	<--	a3Dman (~3Dman@unaffiliated/a3dman) has quit (Ping timeout: 250 seconds)
2016-09-19 00:26:11	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-19 00:26:57	<--	benergy (~benergy@2a02:2028:72b:5a01:fd78:fef6:9090:8a37) has quit (Quit: Leaving)
2016-09-19 00:27:48	-->	MrP[Home] (~Palsson@c-a46fe555.06-213-6e6b701.cust.bredbandsbolaget.se) has joined ##c++
2016-09-19 00:28:33	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-19 00:28:47	<--	systemfault (~rcyr@unaffiliated/rcyr) has quit (Quit: Bye!)
2016-09-19 00:28:47		[00:28]
2016-09-19 00:29:04	<--	jefcolbi (~Thunderbi@188.166.147.168) has quit (Ping timeout: 240 seconds)
2016-09-19 00:29:24	-->	systemfault (~rcyr@unaffiliated/rcyr) has joined ##c++
2016-09-19 00:29:36	<--	Anticom_ (~quassel@217.6.33.234) has quit (Read error: Connection reset by peer)
2016-09-19 00:31:58	-->	Anticom_ (~quassel@217.6.33.234) has joined ##c++
2016-09-19 00:32:22	<--	pixelate (~pixelate@139.228.167.19) has quit (Quit: WeeChat 1.5)
2016-09-19 00:33:52	-->	f10_ (~flo@2001:470:52af:1:242c:2fc9:d40d:50d3) has joined ##c++
2016-09-19 00:34:56	<--	Adbray (~Adbtay@2001:470:1f11:def:815e:89c2:7098:d5ed) has quit (Remote host closed the connection)
2016-09-19 00:35:05	<--	enk0_ (~enk0@cpe-76-168-177-40.socal.res.rr.com) has quit (Ping timeout: 240 seconds)
2016-09-19 00:35:32	-->	Nitrodev (~Nitrodev@85-23-77-207.bb.dnainternet.fi) has joined ##c++
2016-09-19 00:35:34	-->	jefcolbi (~Thunderbi@188.166.147.168) has joined ##c++
2016-09-19 00:35:44	-->	zero_byte (zer0@nat/redhat/x-ikecghpjtbtcleut) has joined ##c++
2016-09-19 00:35:46	-->	V-ille (~ville@59ec7803.symbio.com) has joined ##c++
2016-09-19 00:38:01	-->	BustyLoli-Chan (~BustyLoli@c-67-163-66-115.hsd1.ut.comcast.net) has joined ##c++
2016-09-19 00:38:03	-->	pixelate (~pixelate@139.228.167.19) has joined ##c++
2016-09-19 00:38:13	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-19 00:38:19	RokerHRO	cbreak: some emojis come after U+FFFF
2016-09-19 00:38:19	-->	pasasap_ (d943c9a2@gateway/web/freenode/ip.217.67.201.162) has joined ##c++
2016-09-19 00:39:05	<--	elh9 (~elh9___@110-175-114-60.tpgi.com.au) has quit (Read error: Connection reset by peer)
2016-09-19 00:39:26	<--	itaitb (~itaitb@unaffiliated/itaitb) has quit (Ping timeout: 244 seconds)
2016-09-19 00:40:07	-->	elh9 (~elh9___@110-175-114-60.tpgi.com.au) has joined ##c++
2016-09-19 00:40:26	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-19 00:41:36	-->	enk0 (~enk0@cpe-76-168-177-40.socal.res.rr.com) has joined ##c++
2016-09-19 00:44:19	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-19 00:44:19		[00:44]
2016-09-19 00:44:39	<--	zero_byte (zer0@nat/redhat/x-ikecghpjtbtcleut) has quit (Ping timeout: 276 seconds)
2016-09-19 00:46:38	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-19 00:47:09	-->	zap0 (~moofy@14-201-222-143.tpgi.com.au) has joined ##c++
2016-09-19 00:47:11	-->	GenteelBen (~GenteelBe@cpc70133-lutn12-2-0-cust324.9-3.cable.virginm.net) has joined ##c++
2016-09-19 00:47:38	TinoDidriksen	Most of them, actually.
2016-09-19 00:48:02	<--	UnripeSuica_mobi (~UnlikeSui@223.38.8.96) has quit (Quit: RIP)
2016-09-19 00:48:08	<--	Gluesticky (~nobody@unaffiliated/gluesticky) has quit (Quit: This is the end. Goodbye cruel world!)
2016-09-19 00:48:22	-->	UnlikeSuika_mobi (~UnlikeSui@223.38.8.96) has joined ##c++
2016-09-19 00:48:46	-->	tlaxkit (~hexchat@92.185.154.236) has joined ##c++
2016-09-19 00:49:09	-->	Tempesta (~Tempesta@121.131.185.96) has joined ##c++
2016-09-19 00:49:10	<--	Tempesta (~Tempesta@121.131.185.96) has quit (Changing host)
2016-09-19 00:49:10	-->	Tempesta (~Tempesta@unaffiliated/tempesta) has joined ##c++
2016-09-19 00:50:09	-->	Adbray (~Adbtay@2001:470:1f11:def:815e:89c2:7098:d5ed) has joined ##c++
2016-09-19 00:50:24	<--	dropaty (irssi@095-096-170-125.static.chello.nl) has quit (Quit: leaving)
2016-09-19 00:50:30	<--	zenx (~serj@77.95.183.158) has quit (Ping timeout: 276 seconds)
2016-09-19 00:50:48	-->	zenx (~serj@77.95.183.158) has joined ##c++
2016-09-19 00:50:50	<--	Betal (~Betal@unaffiliated/betal) has quit (Remote host closed the connection)
2016-09-19 00:51:00	<--	SweetPear (uid144596@gateway/web/irccloud.com/x-bewctylosqcbqukf) has quit (Quit: Connection closed for inactivity)
2016-09-19 00:51:25	-->	Burgundy (~burgundy@86.121.178.118) has joined ##c++
2016-09-19 00:51:26	-->	Henke37 (~Henrik@81-227-16-59-no133.bredband.skanova.com) has joined ##c++
2016-09-19 00:51:47	<--	Tempesta_ (~Tempesta@121.131.185.96) has quit (Ping timeout: 265 seconds)
2016-09-19 00:52:17	-->	bjz (~bjz@pa49-199-85-120.pa.vic.optusnet.com.au) has joined ##c++
2016-09-19 00:53:52	-->	chocolateman (b91a1134@gateway/web/cgi-irc/kiwiirc.com/ip.185.26.17.52) has joined ##c++
2016-09-19 00:54:38	-->	aeth_ (~aeth@host89252161.fp.3s.pl) has joined ##c++
2016-09-19 00:54:41	-->	tachoknight_ (~tachoknig@c-73-246-129-13.hsd1.il.comcast.net) has joined ##c++
2016-09-19 00:55:02	--	aeth_ is now known as Guest94959
2016-09-19 00:56:18	<--	zenx (~serj@77.95.183.158) has quit (Ping timeout: 264 seconds)
2016-09-19 00:56:18	<--	tachoknight__ (~tachoknig@c-73-246-129-13.hsd1.il.comcast.net) has quit (Ping timeout: 264 seconds)
2016-09-19 00:56:41	<--	tachoknight (~tachoknig@2601:241:102:60a6:8e70:5aff:fe24:3cb0) has quit (Ping timeout: 250 seconds)
2016-09-19 00:56:50	-->	Spagoolie (b91a1134@gateway/web/cgi-irc/kiwiirc.com/ip.185.26.17.52) has joined ##c++
2016-09-19 00:56:54	-->	zero_byte (zer0@nat/redhat/x-zjfghenonhnilwyl) has joined ##c++
2016-09-19 00:56:58	<--	aethersis (~aeth@host89252161.fp.3s.pl) has quit (Ping timeout: 244 seconds)
2016-09-19 00:57:02	<--	Carbonflux (~Bob@75-172-112-206.tukw.qwest.net) has quit (Quit: Leaving)
2016-09-19 00:57:21	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-19 00:57:28	lh_mouse	does it make sense to make a wait operation on a condition variable abandon the mutex upon timeout ?
2016-09-19 00:57:50	-->	zenx (~serj@77.95.183.158) has joined ##c++
2016-09-19 00:57:53	<--	jefcolbi (~Thunderbi@188.166.147.168) has quit (Read error: Connection reset by peer)
2016-09-19 00:58:17	<--	Spagoolie (b91a1134@gateway/web/cgi-irc/kiwiirc.com/ip.185.26.17.52) has quit (Client Quit)
2016-09-19 00:58:27	-->	xnavor_ (~xnavor@vbg-gw.proceranetworks.com) has joined ##c++
2016-09-19 00:58:29	-->	rorro (~rorro@c-227-189.eduroam.liu.se) has joined ##c++
2016-09-19 00:59:33	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-19 00:59:33		[00:59]
2016-09-19 00:59:36	-->	jshjsh (~jshjsh@172.56.16.60) has joined ##c++
2016-09-19 00:59:44	<--	JoshS (~jshjsh@172.56.16.60) has quit (Disconnected by services)
2016-09-19 00:59:52	--	jshjsh is now known as JoshS
2016-09-19 01:00:33	<--	riemann (~riemann@84-10-11-234.static.chello.pl) has quit (Ping timeout: 240 seconds)
2016-09-19 01:00:37	Adrinael	lh_mouse, yes. The lock is already released if it needs to wait, anyway. As long as it's clear after returning from wait what the lock state is
2016-09-19 01:01:27	<--	xnavor (~xnavor@vbg-gw.proceranetworks.com) has quit (Ping timeout: 250 seconds)
2016-09-19 01:01:27	<--	systemfault (~rcyr@unaffiliated/rcyr) has quit (Read error: Connection reset by peer)
2016-09-19 01:01:55	-->	systemfault (~rcyr@unaffiliated/rcyr) has joined ##c++
2016-09-19 01:02:25	<--	regedit (uid150526@gateway/web/irccloud.com/x-phduuhwkmwsmaxkw) has quit (Quit: Connection closed for inactivity)
2016-09-19 01:03:41	<--	zenx (~serj@77.95.183.158) has quit (Ping timeout: 244 seconds)
2016-09-19 01:03:57	<--	systemfault (~rcyr@unaffiliated/rcyr) has quit (Read error: Connection reset by peer)
2016-09-19 01:03:58	-->	aindros (~jacknife@93-57-35-194.ip162.fastwebnet.it) has joined ##c++
2016-09-19 01:04:10	-->	trw (~twa@184.250.132.115) has joined ##c++
2016-09-19 01:04:27	-->	systemfault (~rcyr@unaffiliated/rcyr) has joined ##c++
2016-09-19 01:04:49	<--	bergesenha (~harald@90.149.192.21) has quit (Quit: leaving)
2016-09-19 01:05:11	-->	MulleDK19 (MulleDK19@unaffiliated/mulledk19) has joined ##c++
2016-09-19 01:05:12	lh_mouse	I am trying implementing a semaphore using a condition variable and a mutex.
2016-09-19 01:05:22	-->	jefcolbi (~Thunderbi@188.166.147.168) has joined ##c++
2016-09-19 01:05:41	-->	itaitb (~itaitb@101.71.200.159) has joined ##c++
2016-09-19 01:05:49	<--	przemkovv (~przemkovv@gandalf.kari.put.poznan.pl) has quit (Ping timeout: 265 seconds)
2016-09-19 01:06:11	<--	xnavor_ (~xnavor@vbg-gw.proceranetworks.com) has quit (Ping timeout: 248 seconds)
2016-09-19 01:06:25	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-19 01:06:33	<--	systemfault (~rcyr@unaffiliated/rcyr) has quit (Read error: Connection reset by peer)
2016-09-19 01:07:00	-->	systemfault (~rcyr@unaffiliated/rcyr) has joined ##c++
2016-09-19 01:07:15	-->	frib (~dynorsau@host42-232-dynamic.12-79-r.retail.telecomitalia.it) has joined ##c++
2016-09-19 01:07:20	-->	Isl (~Isl@prz29-1-78-205-58-16.fbx.proxad.net) has joined ##c++
2016-09-19 01:07:31	-->	f10__ (~flo@2001:470:52af:1:bc25:d260:4fc6:b325) has joined ##c++
2016-09-19 01:07:37	lh_mouse	The problem is in the timed function. If the current thread waits on the condition variable and the wait times out, it tries to re-lock the mutex, but the mutex is to be unlocked very soon. So I think it is useless work.
2016-09-19 01:07:59	<--	bjz (~bjz@pa49-199-85-120.pa.vic.optusnet.com.au) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-19 01:08:00	lh_mouse	Adrinael, so you agree with me?
2016-09-19 01:08:41	-->	xnavor (~xnavor@2001:67c:22e0:1131::18f8) has joined ##c++
2016-09-19 01:09:01	<--	bernalex (~alexander@gentoo/developer/fsf.member.bernalex) has quit (Ping timeout: 255 seconds)
2016-09-19 01:09:01	-->	tachoknight (~tachoknig@2601:241:102:60a6:8e70:5aff:fe24:3cb0) has joined ##c++
2016-09-19 01:09:21	<--	trw (~twa@184.250.132.115) has quit (Ping timeout: 276 seconds)
2016-09-19 01:09:32	-->	zenx (~serj@77.95.183.158) has joined ##c++
2016-09-19 01:09:42	Adrinael	Yes
2016-09-19 01:10:01	Adrinael	Apparently std::condition_variable::wait_until also grabs the lock even on timeout
2016-09-19 01:11:01	<--	systemfault (~rcyr@unaffiliated/rcyr) has quit (Read error: Connection reset by peer)
2016-09-19 01:11:03	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Ping timeout: 240 seconds)
2016-09-19 01:11:04	-->	systemfa_ (~rcyr@unaffiliated/rcyr) has joined ##c++
2016-09-19 01:11:34	<--	tlaxkit (~hexchat@92.185.154.236) has quit (Read error: Connection reset by peer)
2016-09-19 01:12:01	<--	systemfa_ (~rcyr@unaffiliated/rcyr) has quit (Client Quit)
2016-09-19 01:12:09	-->	tlaxkit (~hexchat@92.185.154.236) has joined ##c++
2016-09-19 01:12:20	<--	nikki93 (~nikki93@2601:645:8104:cb10:ca0:ac51:dd45:bfb) has quit (Remote host closed the connection)
2016-09-19 01:12:23	xaxxon	you cannot return from a condition variable wait without the lock, since it was locked when you entered
2016-09-19 01:12:44	<--	tlaxkit (~hexchat@92.185.154.236) has quit (Remote host closed the connection)
2016-09-19 01:12:54	-->	alexander__b (~alexander@149.223.189.109.customer.cdi.no) has joined ##c++
2016-09-19 01:12:58	lh_mouse	I hope I could if the wait times out.
2016-09-19 01:13:12	xaxxon	the wait is on the condition
2016-09-19 01:13:18	xaxxon	not on the mutex
2016-09-19 01:13:23	xaxxon	you already HAD the mutex
2016-09-19 01:13:55	xaxxon	unless I'm totally misremembeing
2016-09-19 01:14:13	<--	navidr (uid112413@gateway/web/irccloud.com/x-glmtgdkrhpynmewo) has quit (Quit: Connection closed for inactivity)
2016-09-19 01:14:15	-->	riemann (~riemann@84-10-11-234.static.chello.pl) has joined ##c++
2016-09-19 01:14:25	Adrinael	That is true
2016-09-19 01:14:42	Adrinael	But, if the condvar wait times out, you don't need to mutex anymore
2016-09-19 01:14:42		[01:14]
2016-09-19 01:14:49	<--	enk0 (~enk0@cpe-76-168-177-40.socal.res.rr.com) has quit (Ping timeout: 248 seconds)
2016-09-19 01:14:51	Adrinael	For safety it should lock it again before your code continues
2016-09-19 01:15:00	Adrinael	But a good argument can be made for the other behaviour too
2016-09-19 01:15:03	velco	you are not sure if you need or not the mutex
2016-09-19 01:15:45	<--	chapui_s (~chapui_s@219.ip-51-255-51.eu) has quit (Ping timeout: 250 seconds)
2016-09-19 01:16:03	xaxxon	this is just fundamentla behavior of condition variable waits -- they don't act like they ever unlocked your mutex
2016-09-19 01:16:06	lh_mouse	velco, basically you are correct. But if I am sure I need the mutex I could lock it explicitly thereafter.
2016-09-19 01:16:50	lh_mouse	If I am sure I don't need it I just won't do that, instead of letting the cond var lock the mutex implicitly then unlock it explicitly.
2016-09-19 01:17:09	Adrinael	It makes some sense to be able to just if (bool got_it = timed_wait_on_condvar()) { do stuff } else { return "fuck"; }
2016-09-19 01:17:47	velco	if you are sure you won;t need it in the case of timeout, you could pass some flag to the cond, indeed; but that seems awkward and also throws the lock RAII out of the window
2016-09-19 01:17:48	xaxxon	how do you know why your condvar returned, though?
2016-09-19 01:17:50	Adrinael	But: Any scoped_locks that locked your mutex on that condvar wait will attempt to unlock it again
2016-09-19 01:17:53	Adrinael	So there you have it
2016-09-19 01:18:06	xaxxon	ah
2016-09-19 01:18:19	<--	Guest94959 (~aeth@host89252161.fp.3s.pl) has left ##c++
2016-09-19 01:18:37	Adrinael	xaxxon, std::condition_variable::wait_until returns the reason
2016-09-19 01:18:42	Adrinael	As an example
2016-09-19 01:18:42	lh_mouse	velco, > and also throws the lock RAII out of the window // not really. It could leave the `unique_lock` in an unlocked state.
2016-09-19 01:18:48	xaxxon	Adrinael:  yeah, just saw that
2016-09-19 01:19:11	<--	tachoknight (~tachoknig@2601:241:102:60a6:8e70:5aff:fe24:3cb0) has quit (Quit: Leaving)
2016-09-19 01:19:20	Adrinael	lh_mouse, so you pass your lock, not your mutex, to your timed wait function?
2016-09-19 01:19:37	-->	trw (~twa@184.250.132.115) has joined ##c++
2016-09-19 01:19:45	lh_mouse	Yes. That is typically what I do.
2016-09-19 01:20:18	 *	Adrinael trying frantically to come up with reasons why that's bs
2016-09-19 01:20:30	lh_mouse	doesn't std::condition_variable::wait() take a unique_lock ?
2016-09-19 01:20:33	velco	lh_mouse: theoretically yes; in practice, if it's implemented on top of pthreads (or some other threading api) this is not an option
2016-09-19 01:20:54	lh_mouse	velco, correct. I am implementing something not pthread.
2016-09-19 01:20:57	-->	bjz (~bjz@14-201-215-168.tpgi.com.au) has joined ##c++
2016-09-19 01:21:12	-->	enk0 (~enk0@cpe-76-168-177-40.socal.res.rr.com) has joined ##c++
2016-09-19 01:21:32	<--	Isl (~Isl@prz29-1-78-205-58-16.fbx.proxad.net) has quit (Remote host closed the connection)
2016-09-19 01:21:37	Adrinael	You're right, it does take a lock!
2016-09-19 01:21:51	Adrinael	Hrmph
2016-09-19 01:21:54	xaxxon	does the condition variable need the mutex in order to protect some of the stuff it is doing?
2016-09-19 01:21:58	-->	Sasasu (~li@180.212.140.254) has joined ##c++
2016-09-19 01:22:10	lh_mouse	xaxxon, it needs the mutex to protect itself.
2016-09-19 01:22:39	<--	alexander__b (~alexander@149.223.189.109.customer.cdi.no) has quit (Changing host)
2016-09-19 01:22:39	-->	alexander__b (~alexander@gentoo/developer/fsf.member.bernalex) has joined ##c++
2016-09-19 01:22:40	-->	iaup (~iaup@nag77-2-83-152-154-106.fbx.proxad.net) has joined ##c++
2016-09-19 01:22:42	xaxxon	so when it wakes up, in order to return, doesn't it need to have a lock on the mutex to "deregister" itself from being notified on a condvar notify?
2016-09-19 01:23:03	lh_mouse	otherwise another thread could signal the condition variable when no thread is waiting on it before some thread goes sleep on it and results in deadlock, potentially.
2016-09-19 01:23:11	--	alexander__b is now known as bernalex
2016-09-19 01:23:11	Adrinael	xaxxon, it needs the mutex to unlock it atomically
2016-09-19 01:23:17	xaxxon	right
2016-09-19 01:23:18	Adrinael	Along with going to wait mode
2016-09-19 01:23:20	velco	yeah
2016-09-19 01:23:31	Adrinael	what lh_mouse said there
2016-09-19 01:23:51	xaxxon	so if it times out, doesn't it still need to acquire the mutex in order to remove itself?
2016-09-19 01:23:52	Adrinael	... and to relock it again after waiting :P
2016-09-19 01:24:03	<--	trw (~twa@184.250.132.115) has quit (Ping timeout: 240 seconds)
2016-09-19 01:24:26	Adrinael	No, the mutex lock is only to prevent the race condition of notify() / wait() at the same time
2016-09-19 01:24:31	velco	not sure what is that "registering"
2016-09-19 01:24:42	 *	lh_mouse goes for supper and will return to think about two hours later.
2016-09-19 01:24:47	xaxxon	somewhere there is a list of what to wake up when there's a notification
2016-09-19 01:24:48	lh_mouse	XD
2016-09-19 01:25:21	Adrinael	That list is protected by whatever internally
2016-09-19 01:25:27	Adrinael	In the kernel or whatever
2016-09-19 01:25:45	<--	zenx (~serj@77.95.183.158) has quit (Ping timeout: 244 seconds)
2016-09-19 01:25:45	velco	mutex lock is the prevent data races on the condition, atomic unlock-and-sleep is top prevent race conditions, leading to a deadlock
2016-09-19 01:26:03	-->	Gathis (~TheBlack@unaffiliated/gathis) has joined ##c++
2016-09-19 01:26:03	velco	damn overloading of terms
2016-09-19 01:26:09	<--	ibouvousaime (~ibouvousa@41.82.44.97) has quit (Read error: Connection reset by peer)
2016-09-19 01:26:29	xaxxon	if you notify and it "wakes up" a timed out wait, that could cause a deadlock
2016-09-19 01:26:53	-->	ibouvousaime (~ibouvousa@41.82.44.97) has joined ##c++
2016-09-19 01:27:24	xaxxon	but hrmm... it's late and I'm tired.
2016-09-19 01:27:24	velco	neither operation is blocking...
2016-09-19 01:27:31	<--	Crazylemon64 (~Crazylemo@c-98-237-179-255.hsd1.wa.comcast.net) has quit (Ping timeout: 272 seconds)
2016-09-19 01:27:35	<--	iaup (~iaup@nag77-2-83-152-154-106.fbx.proxad.net) has quit (Remote host closed the connection)
2016-09-19 01:27:50	-->	Vuks (~Vuks@unaffiliated/vuks69) has joined ##c++
2016-09-19 01:28:04	ph88_	is it possible to have two different types and then assign a value from one type to another without a cast ?
2016-09-19 01:28:18	-->	Wesgu (~Wesgu@nag77-2-83-152-154-106.fbx.proxad.net) has joined ##c++
2016-09-19 01:28:24	xaxxon	not without at least an implicit cast
2016-09-19 01:28:32	-->	it_ (~it_@212.243.190.164) has joined ##c++
2016-09-19 01:28:40	-->	tachoknight (~tachoknig@2601:241:102:60a6:8e70:5aff:fe24:3cb0) has joined ##c++
2016-09-19 01:28:46	ph88_	what controls the implicit cast ?
2016-09-19 01:28:57	xaxxon	ph88_:  rules.   lots of rules
2016-09-19 01:29:00	ph88_	if you have two custom types it must be defined somewhere
2016-09-19 01:29:03	xaxxon	why don't you say what you want
2016-09-19 01:29:11	xaxxon	!give ph88_ xy
2016-09-19 01:29:12	nolyc	ph88_: You're trying to do X, and you thought of solution Y. So you're asking about solution Y, without even mentioning X. The problem is, there might be a better solution, but we can't know that unless you describe what X is.
2016-09-19 01:29:13	ph88_	is there an assignment operator you have to overload or something
2016-09-19 01:29:39	cbreak	ph88_: there is
2016-09-19 01:29:48	ph88_	assignment1: t_Complex<InW, InI> In1 = InputBuffer[1];   assignment 2: InputBuffer[0] = In1;
2016-09-19 01:29:48		[01:29]
2016-09-19 01:29:54	cbreak	ph88_: there are also conversion constructors
2016-09-19 01:30:06	cbreak	ph88_: the first one is not an assignment
2016-09-19 01:30:09	cbreak	it's an initialization
2016-09-19 01:30:10	<--	jefcolbi (~Thunderbi@188.166.147.168) has quit (Ping timeout: 255 seconds)
2016-09-19 01:30:23	ph88_	i'm just reading code and i'm a bit puzzled how this could ever work (but it obviously does because it's already proven)
2016-09-19 01:31:02	cbreak	T::T(X const & x) ... // conversion constructor
2016-09-19 01:31:21	<--	hatter (~hatter@h-90-120.a137.corp.bahnhof.se) has quit (Remote host closed the connection)
2016-09-19 01:31:24	cbreak	T & T::operator=(X const & x) // assignment operator
2016-09-19 01:32:13	<--	Kn|t3 (~agarwalvi@104.132.196.76) has quit (Quit: Kn|t3)
2016-09-19 01:32:30	ph88_	so that makes it possible to do   InputBuffer[0] = In1;   even though left of = and right of = are different types ?
2016-09-19 01:32:52	cbreak	ph88_: maybe
2016-09-19 01:33:10	cbreak	maybe they also use T::operator X()
2016-09-19 01:33:19	-->	JSharpe (~JSharpe@104.238.169.117) has joined ##c++
2016-09-19 01:33:25	ph88_	how you call that ?
2016-09-19 01:33:37	cbreak	conversion operator (that's not the correct name, but I forgot that one)
2016-09-19 01:33:44	<--	sh4z (lml@unaffiliated/sh4z) has quit (Read error: Connection reset by peer)
2016-09-19 01:33:50	<--	bernalex (~alexander@gentoo/developer/fsf.member.bernalex) has quit (Ping timeout: 260 seconds)
2016-09-19 01:33:54	ph88_	oki thx
2016-09-19 01:34:54	cbreak	http://eel.is/c++draft/class.conv.fct#conversion!user-defined
2016-09-19 01:35:00	<--	blackbeard420 (~blackbear@dynamic-acs-24-154-82-158.zoominternet.net) has quit (Quit: leaving)
2016-09-19 01:35:47	cbreak	also look at http://eel.is/c++draft/class.conv#conversion!user-defined and http://eel.is/c++draft/expr.ass#assignment!conversion~by
2016-09-19 01:35:58	<--	frib (~dynorsau@host42-232-dynamic.12-79-r.retail.telecomitalia.it) has quit (Quit: Leaving)
2016-09-19 01:36:09	-->	trw (~twa@184.250.132.115) has joined ##c++
2016-09-19 01:39:01	<--	chocolateman (b91a1134@gateway/web/cgi-irc/kiwiirc.com/ip.185.26.17.52) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-09-19 01:39:05	<--	enk0 (~enk0@cpe-76-168-177-40.socal.res.rr.com) has quit (Ping timeout: 260 seconds)
2016-09-19 01:39:51	-->	Betal (~Betal@unaffiliated/betal) has joined ##c++
2016-09-19 01:40:13	<--	hyacinth (~yhyacinth@61.111.255.109) has quit (Remote host closed the connection)
2016-09-19 01:40:19	<--	trw (~twa@184.250.132.115) has quit (Ping timeout: 248 seconds)
2016-09-19 01:40:29	-->	kimundi (~Kimundi@dynip-129-217-065-035.wifi.tu-dortmund.de) has joined ##c++
2016-09-19 01:42:20	<--	zwf (~Thunderbi@modemcable076.238-20-96.mc.videotron.ca) has quit (Quit: zwf)
2016-09-19 01:42:22	<--	zwf2 (zwoof@modemcable076.238-20-96.mc.videotron.ca) has quit
2016-09-19 01:45:02	<--	Sceorem (~Sceorem@xbn44-3-82-232-76-9.fbx.proxad.net) has quit (Read error: Connection reset by peer)
2016-09-19 01:45:02		[01:45]
2016-09-19 01:45:02	-->	Melite (~Melite@218.51.34.198) has joined ##c++
2016-09-19 01:46:17	-->	enk0 (~enk0@cpe-76-168-177-40.socal.res.rr.com) has joined ##c++
2016-09-19 01:48:09	-->	bernalex (~alexander@149.223.189.109.customer.cdi.no) has joined ##c++
2016-09-19 01:48:30	<--	DigiByteDev (~JT2@31.6.57.146) has quit (Ping timeout: 264 seconds)
2016-09-19 01:49:17	<--	UnlikeSuika_mobi (~UnlikeSui@223.38.8.96) has quit (Quit: RIP)
2016-09-19 01:49:18	<--	kw01f (~kw01f@merlin.mvtec.com) has quit (Remote host closed the connection)
2016-09-19 01:49:29	-->	UnlikeSuika_mobi (~UnlikeSui@115.93.122.107) has joined ##c++
2016-09-19 01:50:10	-->	kw01f (~kw01f@merlin.mvtec.com) has joined ##c++
2016-09-19 01:52:19	<--	araml (~araml@unaffiliated/araml) has quit (Quit: WeeChat 1.0.1)
2016-09-19 01:53:05	<--	match_ita (~Giovanni@dynamic-adsl-78-14-227-127.clienti.tiscali.it) has quit (Ping timeout: 260 seconds)
2016-09-19 01:53:49	-->	trw (~twa@184.250.132.115) has joined ##c++
2016-09-19 01:54:27	-->	Furkiepurkie (~Furkie@2001:1af8:4700:a03c:7::) has joined ##c++
2016-09-19 01:54:28	-->	PJBoy (~PJBoy_@unaffiliated/pjboy) has joined ##c++
2016-09-19 01:54:29	<--	xnavor (~xnavor@2001:67c:22e0:1131::18f8) has quit (Quit: This computer has gone to sleep)
2016-09-19 01:54:46	-->	xnavor (~xnavor@vbg-gw.proceranetworks.com) has joined ##c++
2016-09-19 01:54:57	<--	zap0 (~moofy@14-201-222-143.tpgi.com.au) has quit (Quit: zap0)
2016-09-19 01:54:58	<--	bernalex (~alexander@149.223.189.109.customer.cdi.no) has quit (Changing host)
2016-09-19 01:54:58	-->	bernalex (~alexander@gentoo/developer/fsf.member.bernalex) has joined ##c++
2016-09-19 01:55:11	-->	jshjsh (~jshjsh@172.56.16.60) has joined ##c++
2016-09-19 01:55:17	<--	JoshS (~jshjsh@172.56.16.60) has quit (Disconnected by services)
2016-09-19 01:55:22	-->	slavanap (~slavanap@5.145.251.251) has joined ##c++
2016-09-19 01:55:23	--	jshjsh is now known as JoshS
2016-09-19 01:55:38	slavanap	Is that possible to compile logarithm as constexpr?
2016-09-19 01:55:46	slavanap	*compute
2016-09-19 01:55:53	-->	tlaxkit (~Thunderbi@92.185.154.236) has joined ##c++
2016-09-19 01:56:25	cbreak	not with std::log
2016-09-19 01:57:12	-->	zipace (~anon@unaffiliated/zipace) has joined ##c++
2016-09-19 01:57:51	-->	kawaCat (~kawaCat@KD106132218103.au-net.ne.jp) has joined ##c++
2016-09-19 01:57:53	slavanap	well, that's a really PITY because you can't write scientific computations as constexpr....
2016-09-19 01:57:56	<--	trw (~twa@184.250.132.115) has quit (Ping timeout: 244 seconds)
2016-09-19 01:58:18	slavanap	going to use some M_LN2
2016-09-19 01:58:21	slavanap	constants
2016-09-19 01:59:03	<--	GinoMan2440 (~GinoMan@2601:41:c101:487a:18b6:1e2:d0a0:624d) has quit (Ping timeout: 265 seconds)
2016-09-19 01:59:28	cbreak	slavanap: why do you care?
2016-09-19 02:00:15	slavanap	for example, how to compute log(10^28) / log(2) at compile time. I just need it to make my code cleaner.
2016-09-19 02:00:15		[02:00]
2016-09-19 02:00:23	-->	match_ita (~Giovanni@dynamic-adsl-78-14-227-127.clienti.tiscali.it) has joined ##c++
2016-09-19 02:00:57	-->	zwf (~Thunderbi@modemcable076.238-20-96.mc.videotron.ca) has joined ##c++
2016-09-19 02:00:58	slavanap	operator"" was added for some reason, why not mathematical constexpr-s?
2016-09-19 02:01:21	cbreak	slavanap: https://godbolt.org/g/trbYww
2016-09-19 02:01:29	<--	forgottenone (~forgotten@195.142.42.54) has quit (Ping timeout: 240 seconds)
2016-09-19 02:01:36	cbreak	slavanap: operator"" was added for flexibility
2016-09-19 02:01:44	PJBoy	seems to compile as constexpr on gcc anyway
2016-09-19 02:01:45	-->	Borkr (~Borkr@83.243.155.126) has joined ##c++
2016-09-19 02:02:30	cbreak	PJBoy: there's a difference between being optimized and being constexpr
2016-09-19 02:02:34	cbreak	they are orthogonal issues :)
2016-09-19 02:02:53	cbreak	there's no need for it to be constexpr, as  you can see in my example, to be optimized.
2016-09-19 02:03:02	PJBoy	it doesn't complain about constexpr float constLog(float a){ return std::log(a); }
2016-09-19 02:03:14	<--	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has quit (Read error: Connection reset by peer)
2016-09-19 02:03:38	-->	inad922 (~inad925@178-164-137-199.pool.digikabel.hu) has joined ##c++
2016-09-19 02:03:43	slavanap	PJBoy, that's interesting. investigating why I got a compile error.
2016-09-19 02:04:17	cbreak	I don't think slavanap really needs it to be constexpr
2016-09-19 02:04:25	-->	rriemann_ (~rriemann@dhcp-67-135.ixxi.ens-lyon.fr) has joined ##c++
2016-09-19 02:04:38	-->	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has joined ##c++
2016-09-19 02:04:53	<--	Wesgu (~Wesgu@nag77-2-83-152-154-106.fbx.proxad.net) has quit (Remote host closed the connection)
2016-09-19 02:04:54	<--	re1 (~reiser@178.220.4.176) has quit (Quit: Leaving)
2016-09-19 02:04:56	slavanap	{ constexpr auto ret = std::log(1e28) / std::log(2); }
2016-09-19 02:04:57	geordi	<no output>
2016-09-19 02:05:10	slavanap	WTF? MSVS complains with error C2131: expression did not evaluate to a constant
2016-09-19 02:05:18	-->	Ytm (~Ytm@prz29-1-78-205-58-16.fbx.proxad.net) has joined ##c++
2016-09-19 02:05:25	cbreak	{ constexpr auto ret = std::rand(); }
2016-09-19 02:05:26	geordi	error: call to non-constexpr function 'int rand()'
2016-09-19 02:05:33	<--	Ytm (~Ytm@prz29-1-78-205-58-16.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-19 02:05:43	cbreak	slavanap: as it should, log isn't constexpr
2016-09-19 02:05:44	<--	inad922 (~inad925@178-164-137-199.pool.digikabel.hu) has quit (Client Quit)
2016-09-19 02:05:50	-->	DingoSaar (~hagen@pD9E08566.dip0.t-ipconnect.de) has joined ##c++
2016-09-19 02:05:52	-->	Ygie (~Ygie@nag77-2-83-152-154-106.fbx.proxad.net) has joined ##c++
2016-09-19 02:05:59	slavanap	{ constexpr auto ret = std::log(1e28) / std::log(2); cout << ret}
2016-09-19 02:05:59	geordi	error: expected ';' before '}' (fix known)
2016-09-19 02:06:01	slavanap	{ constexpr auto ret = std::log(1e28) / std::log(2); cout << ret; }
2016-09-19 02:06:01	geordi	93.014
2016-09-19 02:06:11	<--	Ygie (~Ygie@nag77-2-83-152-154-106.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-19 02:06:15	slavanap	geordi knows something
2016-09-19 02:06:25	cbreak	slavanap: look at my paste ;)
2016-09-19 02:06:26	-->	Hxou (~Hxou@prz29-1-78-205-58-16.fbx.proxad.net) has joined ##c++
2016-09-19 02:06:38	cbreak	slavanap: and look at the std
2016-09-19 02:06:43	<--	Hxou (~Hxou@prz29-1-78-205-58-16.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-19 02:06:58	cbreak	slavanap: http://en.cppreference.com/w/cpp/numeric/math/log
2016-09-19 02:07:11	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-19 02:07:20	slavanap	cbreak, I did. but constexpr looks more explicit. Looks I have to use const global vars for compatibility with MSVS
2016-09-19 02:07:59	cbreak	slavanap: why do you not use log2?
2016-09-19 02:08:41	slavanap	cbreak, where is that function defined?
2016-09-19 02:08:41	<--	bernalex (~alexander@gentoo/developer/fsf.member.bernalex) has quit (Ping timeout: 272 seconds)
2016-09-19 02:08:53	cbreak	slavanap: in the C++ standard
2016-09-19 02:08:55	cbreak	http://en.cppreference.com/w/cpp/numeric/math/log2
2016-09-19 02:08:56	PJBoy	!stdref log2
2016-09-19 02:08:57	refbot	std::log: http://en.cppreference.com/w/cpp/numeric/math/log
2016-09-19 02:09:04	PJBoy	d'oh
2016-09-19 02:09:22	slavanap	cbreak, oh missed that in c++11
2016-09-19 02:09:32	slavanap	cbreak, too familiar with c++0x. my bad
2016-09-19 02:09:45	<--	spiderkeys (~quassel@103.16.128.120) has quit (Ping timeout: 248 seconds)
2016-09-19 02:10:15	-->	spiderkeys (~quassel@103.16.128.120) has joined ##c++
2016-09-19 02:11:44	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Ping timeout: 244 seconds)
2016-09-19 02:12:15	-->	Ngf (~Ngf@cac94-8-82-245-27-76.fbx.proxad.net) has joined ##c++
2016-09-19 02:12:32	<--	Ngf (~Ngf@cac94-8-82-245-27-76.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-19 02:12:54	-->	Fuaq (~Fuaq@cac94-8-82-245-27-76.fbx.proxad.net) has joined ##c++
2016-09-19 02:12:55	<--	k4rtik (~k4rtik@unaffiliated/k4rtik) has quit (Ping timeout: 260 seconds)
2016-09-19 02:13:09	<--	Fuaq (~Fuaq@cac94-8-82-245-27-76.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-19 02:13:15	-->	trw (~twa@184.250.132.115) has joined ##c++
2016-09-19 02:13:49	<--	dv_ (~quassel@62.178.118.86) has quit (Ping timeout: 250 seconds)
2016-09-19 02:13:59	-->	zenx (~serj@77.95.183.158) has joined ##c++
2016-09-19 02:14:36	-->	dv_ (~quassel@62.178.118.86) has joined ##c++
2016-09-19 02:15:16	<--	zenx (~serj@77.95.183.158) has quit (Client Quit)
2016-09-19 02:15:16		[02:15]
2016-09-19 02:17:22	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-19 02:17:31	-->	Sceorem (~Sceorem@xbn44-3-82-232-76-9.fbx.proxad.net) has joined ##c++
2016-09-19 02:17:33	<--	trw (~twa@184.250.132.115) has quit (Ping timeout: 240 seconds)
2016-09-19 02:18:24	-->	m_ben (~m_ben@unaffiliated/m-ben/x-5917362) has joined ##c++
2016-09-19 02:18:25	-->	UnripeSuica_mobi (~UnlikeSui@223.38.8.96) has joined ##c++
2016-09-19 02:18:59	-->	Tachyon_ (~Thunderbi@95.76.184.120) has joined ##c++
2016-09-19 02:19:02	-->	tadaa (~tadaaa@nat-wh-wz4-12.rz.uni-karlsruhe.de) has joined ##c++
2016-09-19 02:19:08	ibouvousaime	hello can someone look at my code https://gist.github.com/ibouvousaime/a3ff87753e2e7bf3d415816963c079c0 and help me understand me why Im getting a "new types may not be defined in a return type " error, I checked my semicolons there are there and i dont see what could be causing it
2016-09-19 02:19:16	<--	UnlikeSuika_mobi (~UnlikeSui@115.93.122.107) has quit (Ping timeout: 265 seconds)
2016-09-19 02:19:30	KrzaQ	!give ibouvousaime testcase
2016-09-19 02:19:31	nolyc	ibouvousaime: A testcase is the _least_ amount of code that replicates your problem, paste it to http://coliru.stacked-crooked.com and give us the link. Do _not_ paste code to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
2016-09-19 02:19:38	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-19 02:19:50	-->	Zunino (~Zunino@200.175.61.231) has joined ##c++
2016-09-19 02:20:25	KrzaQ	2 spaces is not enough for indentation
2016-09-19 02:20:30	ibouvousaime	ohh its on line 122:3
2016-09-19 02:20:32	ibouvousaime	btw
2016-09-19 02:20:36	ibouvousaime	I forgot to mention that
2016-09-19 02:20:42	va	spaces. are you still on that?
2016-09-19 02:21:02	cbreak	ibouvousaime: that code is quite terrible
2016-09-19 02:21:10	cbreak	ibouvousaime: don't write this-> all over the place
2016-09-19 02:21:14	cbreak	ibouvousaime: use constructor initializer list
2016-09-19 02:22:01	ibouvousaime	ohh
2016-09-19 02:22:05	-->	vuoto (~vuoto@80-71-135-9.u.parknet.dk) has joined ##c++
2016-09-19 02:22:05	cbreak	ibouvousaime: avoid passing arguments by value for operator+ and co for complex types like this
2016-09-19 02:22:09	<--	xnavor (~xnavor@vbg-gw.proceranetworks.com) has quit (Ping timeout: 276 seconds)
2016-09-19 02:22:21	slavanap	ibouvousaime, maybe you have vec4 defined in some include.
2016-09-19 02:22:36	<--	ARCADIVS (~RMM@97.84.20.251) has quit (Quit: ARCADIVS)
2016-09-19 02:22:40	KrzaQ	isn't by value better for small types like those, cbreak?
2016-09-19 02:22:51	cbreak	KrzaQ: those aren't small
2016-09-19 02:22:58	slavanap	ibouvousaime, ideone doesn't see any errors https://ideone.com/M5tiLi
2016-09-19 02:23:02	KrzaQ	8-16 bytes
2016-09-19 02:23:33	-->	bernalex (~alexander@149.223.189.109.customer.cdi.no) has joined ##c++
2016-09-19 02:23:39	-->	DigiByteDev (~JT2@n218250011174.netvigator.com) has joined ##c++
2016-09-19 02:23:41	KrzaQ	well, except for mat4
2016-09-19 02:23:44	<--	vuoto (~vuoto@80-71-135-9.u.parknet.dk) has quit (Remote host closed the connection)
2016-09-19 02:23:49	KrzaQ	but vec[2,3,4]?
2016-09-19 02:23:53	ibouvousaime	flycheck was complaining about that too and suggested me something similar to that ( "constructor initializer list" ) now i get it
2016-09-19 02:24:00	-->	vuoto (~vuoto@80-71-135-9.u.parknet.dk) has joined ##c++
2016-09-19 02:24:09	-->	Kizl (~Kizl@LCaen-656-1-228-29.w193-253.abo.wanadoo.fr) has joined ##c++
2016-09-19 02:24:12	-->	neurodrone (~neurodron@unaffiliated/neurodrone) has joined ##c++
2016-09-19 02:24:27	<--	Kizl (~Kizl@LCaen-656-1-228-29.w193-253.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-19 02:24:37	ibouvousaime	cbreak:  okay I will avoid that
2016-09-19 02:24:55	cbreak	ibouvousaime: also, run your code through a code styler
2016-09-19 02:24:56	<--	vuoto (~vuoto@80-71-135-9.u.parknet.dk) has quit (Remote host closed the connection)
2016-09-19 02:25:08	cbreak	even auto indent in xcode or what ever will do
2016-09-19 02:25:15	-->	vuoto (~vuoto@80-71-135-9.u.parknet.dk) has joined ##c++
2016-09-19 02:25:36	-->	zfbx (~zfbx@LCaen-656-1-228-29.w193-253.abo.wanadoo.fr) has joined ##c++
2016-09-19 02:25:51	<--	zfbx (~zfbx@LCaen-656-1-228-29.w193-253.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-19 02:25:56	<--	kawaCat (~kawaCat@KD106132218103.au-net.ne.jp) has quit (Read error: Connection reset by peer)
2016-09-19 02:25:58	ibouvousaime	okay cbreak
2016-09-19 02:25:59	<--	UnripeSuica_mobi (~UnlikeSui@223.38.8.96) has quit (Quit: RIP)
2016-09-19 02:26:08	ibouvousaime	I will try "flycheck-google-cpplint"
2016-09-19 02:26:12	<--	silent_freak_ (672b7062@gateway/web/freenode/ip.103.43.112.98) has quit (Ping timeout: 240 seconds)
2016-09-19 02:26:18	ibouvousaime	since Im using emacs
2016-09-19 02:26:29	-->	kawaCat (~kawaCat@KD106132218103.au-net.ne.jp) has joined ##c++
2016-09-19 02:26:37	cbreak	the document contains a mess of tabs, spaces, and inconsistent indenting
2016-09-19 02:26:43	<--	casscode (~bru@169-0-91-62.ip.afrihost.co.za) has quit (Quit: No Ping reply in 180 seconds.)
2016-09-19 02:26:47	-->	UnlikeSuika_mobi (~UnlikeSui@223.38.8.96) has joined ##c++
2016-09-19 02:27:56	cbreak	not sure where the error you complain about is, but try to reproduce it on ideone or similar
2016-09-19 02:28:51	<--	hoshi (~hoshi@com249.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 248 seconds)
2016-09-19 02:28:53	ibouvousaime	ookay
2016-09-19 02:30:17	-->	hoshi (~hoshi@acge236.neoplus.adsl.tpnet.pl) has joined ##c++
2016-09-19 02:30:17		[02:30]
2016-09-19 02:30:49	zack_s_	I have a again a question to the example: http://en.cppreference.com/w/cpp/thread/condition_variable/wait
2016-09-19 02:30:57	zack_s_	should there not be a lock before? std::cerr << "...finished waiting. i == 1\n";
2016-09-19 02:31:06	<--	bernalex (~alexander@149.223.189.109.customer.cdi.no) has quit (Changing host)
2016-09-19 02:31:06	-->	bernalex (~alexander@gentoo/developer/fsf.member.bernalex) has joined ##c++
2016-09-19 02:31:27	zack_s_	when the thread finished waiting, multiple thread will write to std::cerr?
2016-09-19 02:31:37	cbreak	zack_s_: no
2016-09-19 02:31:37	zack_s_	or am I wrong?
2016-09-19 02:31:51	cbreak	lk holds the lock
2016-09-19 02:32:28	-->	trw (~twa@184.250.132.115) has joined ##c++
2016-09-19 02:33:03	zack_s_	cbreak: I dont understand your answer
2016-09-19 02:33:16	cbreak	do you know what lk is?
2016-09-19 02:33:18	-->	nikki93 (~nikki93@2601:645:8104:cb10:ca0:ac51:dd45:bfb) has joined ##c++
2016-09-19 02:33:31	zack_s_	a wrapper for locking a mutex
2016-09-19 02:33:35	cbreak	yes
2016-09-19 02:33:47	cbreak	it holds the "locked" state on the mutex
2016-09-19 02:34:01	zack_s_	it blocks when the mutex is already locked
2016-09-19 02:34:33	<--	DigiByteDev (~JT2@n218250011174.netvigator.com) has quit (Quit: DigiByteDev)
2016-09-19 02:34:36	zack_s_	so it will sync the call to "std::cerr << "Waiting... \n";"
2016-09-19 02:34:44	<--	Beetny (~Beetny@14-202-48-200.tpgi.com.au) has quit (Ping timeout: 265 seconds)
2016-09-19 02:34:49	cbreak	a unique_lock will lock in construction, unlock in destruction (unless required otherwise)
2016-09-19 02:35:14	zack_s_	calling cv.wait, will release the lock
2016-09-19 02:35:19	zack_s_	right?
2016-09-19 02:35:25	Tachyon_	std cout, cerr, etc. are thread-safe, right ?
2016-09-19 02:35:26	cbreak	it will also reacquire the lock
2016-09-19 02:35:39	zack_s_	what means reacquire ?
2016-09-19 02:35:48	cbreak	Tachyon_: individual calls: yes. Separate calls: you can expect garbled output
2016-09-19 02:36:08	cbreak	zack_s_: once wait returns, the unique_lock holds the lock on the mutex
2016-09-19 02:36:11	Tachyon_	cbreak: yep thanks
2016-09-19 02:36:18	-->	SecondForm_Glenn (~Thunderbi@108.189.70.212) has joined ##c++
2016-09-19 02:36:19	<--	rorro (~rorro@c-227-189.eduroam.liu.se) has quit (Ping timeout: 255 seconds)
2016-09-19 02:36:23	-->	zenx (~serj@77.95.183.158) has joined ##c++
2016-09-19 02:37:06	<--	trw (~twa@184.250.132.115) has quit (Ping timeout: 264 seconds)
2016-09-19 02:37:26	-->	rorro (~rorro@c-227-189.eduroam.liu.se) has joined ##c++
2016-09-19 02:37:27	-->	GinoMan (~GinoMan@50-251-53-110-static.hfc.comcastbusiness.net) has joined ##c++
2016-09-19 02:37:28	-->	xnavor (~xnavor@vbg-gw.proceranetworks.com) has joined ##c++
2016-09-19 02:37:28	zack_s_	cbreak: ok, and how does this help to block the "std::cerr << "...finished waiting. i == 1\n";" =
2016-09-19 02:37:32	zack_s_	?
2016-09-19 02:38:03	cbreak	zack_s_: the mutex is locked
2016-09-19 02:38:08	-->	GinoMan2440 (~GinoMan@50-251-53-110-static.hfc.comcastbusiness.net) has joined ##c++
2016-09-19 02:38:08	<--	GinoMan2440 (~GinoMan@50-251-53-110-static.hfc.comcastbusiness.net) has quit (Client Quit)
2016-09-19 02:38:11	cbreak	that's how it helps
2016-09-19 02:38:16	cbreak	only one thread holds the mutex lock
2016-09-19 02:39:03	zack_s_	you seem not the understand me
2016-09-19 02:39:19	zack_s_	calling cv.wait(lk, []{return i == 1; }); will make the current thread wait at this position in the code
2016-09-19 02:39:32	zack_s_	the next line is: std::cerr << "...finished waiting. i == 1\n";
2016-09-19 02:39:43	-->	Migi32 (9dc18c19@gateway/web/freenode/ip.157.193.140.25) has joined ##c++
2016-09-19 02:39:44	zack_s_	now the other thread is calling "cv.notify_all();"
2016-09-19 02:39:51	<--	nikki93 (~nikki93@2601:645:8104:cb10:ca0:ac51:dd45:bfb) has quit (Remote host closed the connection)
2016-09-19 02:40:03	zack_s_	all will wake up simultaneously
2016-09-19 02:40:14	zack_s_	and will try to print "std::cerr << "...finished waiting. i == 1\n";"
2016-09-19 02:40:18	-->	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has joined ##c++
2016-09-19 02:40:19	cbreak	zack_s_: no
2016-09-19 02:40:22	cbreak	read what I wrote
2016-09-19 02:40:28	-->	nikki93 (~nikki93@2601:645:8104:cb10:ca0:ac51:dd45:bfb) has joined ##c++
2016-09-19 02:40:38	cbreak	zack_s_: once wait returns, the unique_lock holds the lock on the mutex
2016-09-19 02:40:57	cbreak	only one single thread will hold the lock on the mutex
2016-09-19 02:41:06	zack_s_	yeah, I read this
2016-09-19 02:41:10	Migi32	Hi. If you write A<B>::c, you have to specify to the compiler if that's a value or a type (using "typename"). But is there a way to specify that A<B>::c is a template type?
2016-09-19 02:41:13	zack_s_	and I unserstand it
2016-09-19 02:41:30	cbreak	Migi32: yes. template.
2016-09-19 02:41:34	zack_s_	but all threads are going to execute: std::cerr << "...finished waiting. i == 1\n";
2016-09-19 02:41:46	zack_s_	there is no lock before that
2016-09-19 02:41:48	Migi32	cbreak: can you show me: https://ideone.com/dGv8bd
2016-09-19 02:41:52	<--	GinoMan (~GinoMan@50-251-53-110-static.hfc.comcastbusiness.net) has quit (Ping timeout: 244 seconds)
2016-09-19 02:41:53	cbreak	zack_s_: there is. Inside wait.
2016-09-19 02:43:43	-->	alyptik (~alyptik@unaffiliated/alyptik) has joined ##c++
2016-09-19 02:43:43		[02:43]
2016-09-19 02:43:43	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || https://isocpp.org/faq || pastes: http://melpon.org/wandbox"
2016-09-19 02:43:43	--	Topic set by V-ille (~ville@81-175-149-170.bb.dnainternet.fi) on Fri, 18 Sep 2015 07:13:01
2016-09-19 02:43:43	--	Channel ##c++: 1010 nicks (0 ops, 0 voices, 1010 normals)
2016-09-19 02:43:43	***	Buffer Playback...
2016-09-19 02:43:43	ibouvousaime	[12:28:53] ookay [12:28:53]
2016-09-19 02:43:43	zack_s_	[12:30:49] I have a again a question to the example: http://en.cppreference.com/w/cpp/thread/condition_variable/wait [12:30:49]
2016-09-19 02:43:43	zack_s_	[12:30:57] should there not be a lock before? std::cerr << "...finished waiting. i == 1\n"; [12:30:57]
2016-09-19 02:43:43	zack_s_	[12:31:27] when the thread finished waiting, multiple thread will write to std::cerr? [12:31:27]
2016-09-19 02:43:43	cbreak	[12:31:37] zack_s_: no [12:31:37]
2016-09-19 02:43:43	zack_s_	[12:31:37] or am I wrong? [12:31:37]
2016-09-19 02:43:43	cbreak	[12:31:51] lk holds the lock [12:31:51]
2016-09-19 02:43:43	zack_s_	[12:33:03] cbreak: I dont understand your answer [12:33:03]
2016-09-19 02:43:43	cbreak	[12:33:15] do you know what lk is? [12:33:15]
2016-09-19 02:43:43	zack_s_	[12:33:31] a wrapper for locking a mutex [12:33:31]
2016-09-19 02:43:43	cbreak	[12:33:35] yes [12:33:35]
2016-09-19 02:43:43	cbreak	[12:33:47] it holds the "locked" state on the mutex [12:33:47]
2016-09-19 02:43:43	zack_s_	[12:34:01] it blocks when the mutex is already locked [12:34:01]
2016-09-19 02:43:43	zack_s_	[12:34:36] so it will sync the call to "std::cerr << "Waiting... \n";" [12:34:36]
2016-09-19 02:43:43	cbreak	[12:34:49] a unique_lock will lock in construction, unlock in destruction (unless required otherwise) [12:34:49]
2016-09-19 02:43:43	zack_s_	[12:35:14] calling cv.wait, will release the lock [12:35:14]
2016-09-19 02:43:43	zack_s_	[12:35:19] right? [12:35:19]
2016-09-19 02:43:43	Tachyon_	[12:35:25] std cout, cerr, etc. are thread-safe, right ? [12:35:25]
2016-09-19 02:43:43	cbreak	[12:35:26] it will also reacquire the lock [12:35:26]
2016-09-19 02:43:43	zack_s_	[12:35:39] what means reacquire ? [12:35:39]
2016-09-19 02:43:43	cbreak	[12:35:48] Tachyon_: individual calls: yes. Separate calls: you can expect garbled output [12:35:48]
2016-09-19 02:43:43	cbreak	[12:36:08] zack_s_: once wait returns, the unique_lock holds the lock on the mutex [12:36:08]
2016-09-19 02:43:43	Tachyon_	[12:36:11] cbreak: yep thanks [12:36:11]
2016-09-19 02:43:43	zack_s_	[12:37:28] cbreak: ok, and how does this help to block the "std::cerr << "...finished waiting. i == 1\n";" = [12:37:28]
2016-09-19 02:43:43	zack_s_	[12:37:32] ? [12:37:32]
2016-09-19 02:43:44	cbreak	[12:38:03] zack_s_: the mutex is locked [12:38:03]
2016-09-19 02:43:44	cbreak	[12:38:10] that's how it helps [12:38:10]
2016-09-19 02:43:44	cbreak	[12:38:16] only one thread holds the mutex lock [12:38:16]
2016-09-19 02:43:44	zack_s_	[12:39:03] you seem not the understand me [12:39:03]
2016-09-19 02:43:44	zack_s_	[12:39:19] calling cv.wait(lk, []{return i == 1; }); will make the current thread wait at this position in the code [12:39:19]
2016-09-19 02:43:44	zack_s_	[12:39:32] the next line is: std::cerr << "...finished waiting. i == 1\n"; [12:39:32]
2016-09-19 02:43:44	zack_s_	[12:39:44] now the other thread is calling "cv.notify_all();" [12:39:44]
2016-09-19 02:43:44	zack_s_	[12:40:03] all will wake up simultaneously [12:40:03]
2016-09-19 02:43:44	zack_s_	[12:40:14] and will try to print "std::cerr << "...finished waiting. i == 1\n";" [12:40:14]
2016-09-19 02:43:44	cbreak	[12:40:19] zack_s_: no [12:40:19]
2016-09-19 02:43:44	cbreak	[12:40:22] read what I wrote [12:40:22]
2016-09-19 02:43:44	cbreak	[12:40:38] zack_s_: once wait returns, the unique_lock holds the lock on the mutex [12:40:38]
2016-09-19 02:43:44	cbreak	[12:40:57] only one single thread will hold the lock on the mutex [12:40:57]
2016-09-19 02:43:44	zack_s_	[12:41:06] yeah, I read this [12:41:06]
2016-09-19 02:43:44	Migi32	[12:41:10] Hi. If you write A<B>::c, you have to specify to the compiler if that's a value or a type (using "typename"). But is there a way to specify that A<B>::c is a template type? [12:41:10]
2016-09-19 02:43:44	zack_s_	[12:41:13] and I unserstand it [12:41:13]
2016-09-19 02:43:44	cbreak	[12:41:30] Migi32: yes. template. [12:41:30]
2016-09-19 02:43:44	zack_s_	[12:41:34] but all threads are going to execute: std::cerr << "...finished waiting. i == 1\n"; [12:41:34]
2016-09-19 02:43:44	zack_s_	[12:41:46] there is no lock before that [12:41:46]
2016-09-19 02:43:44	Migi32	[12:41:48] cbreak: can you show me: https://ideone.com/dGv8bd [12:41:48]
2016-09-19 02:43:44	cbreak	[12:41:53] zack_s_: there is. Inside wait. [12:41:53]
2016-09-19 02:43:44	cbreak	[12:43:11] Migi32: https://ideone.com/CErKvX [12:43:11]
2016-09-19 02:43:44	zack_s_	[12:43:21] ahhh [12:43:21]
2016-09-19 02:43:44	cbreak	[12:43:25] zack_s_: as I said, when wait returns, the mutex is locked [12:43:25]
2016-09-19 02:43:44	cbreak	[12:43:35] it will NOT RETURN before it has the lock [12:43:35]
2016-09-19 02:43:44	***	Playback Complete.
2016-09-19 02:44:10	Migi32	cbreak: ohhh. That's a weird place to put the "template". Thanks :)
2016-09-19 02:44:10	--	Channel created on Fri, 14 Sep 2001 17:15:35
2016-09-19 02:44:10	cbreak	Migi32: directly in front of the template? :)
2016-09-19 02:44:19	Migi32	cbreak: well I'd put it in front of the "typename"
2016-09-19 02:44:35	<--	nikki93 (~nikki93@2601:645:8104:cb10:ca0:ac51:dd45:bfb) has quit (Ping timeout: 250 seconds)
2016-09-19 02:44:39	Migi32	I mean that's what I tried
2016-09-19 02:44:52	<--	kw01f (~kw01f@merlin.mvtec.com) has quit (Ping timeout: 255 seconds)
2016-09-19 02:45:04	<--	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has quit (Ping timeout: 240 seconds)
2016-09-19 02:46:42	<--	kaldoran (~kaldoran@cable-192.222.223.163.electronicbox.net) has quit (Ping timeout: 264 seconds)
2016-09-19 02:46:51	-->	araml (~araml@unaffiliated/araml) has joined ##c++
2016-09-19 02:46:53	<--	itaitb (~itaitb@101.71.200.159) has quit (Quit: Leaving)
2016-09-19 02:47:04	-->	casscode (~bru@169-0-91-62.ip.afrihost.co.za) has joined ##c++
2016-09-19 02:47:43	<--	UnlikeSuika_mobi (~UnlikeSui@223.38.8.96) has quit (Read error: Connection reset by peer)
2016-09-19 02:47:46	-->	UnripeSuica_mobi (~UnlikeSui@147.46.113.63) has joined ##c++
2016-09-19 02:50:32	-->	nilof (~saolof@92-32-80-134.tn.glocalnet.net) has joined ##c++
2016-09-19 02:51:21	<--	bjz (~bjz@14-201-215-168.tpgi.com.au) has quit (Ping timeout: 248 seconds)
2016-09-19 02:51:27	<--	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has quit (Read error: Connection reset by peer)
2016-09-19 02:51:31	<--	zenx (~serj@77.95.183.158) has quit (Ping timeout: 244 seconds)
2016-09-19 02:51:39	-->	bjz (~bjz@104.222.140.123) has joined ##c++
2016-09-19 02:52:30	<--	anton02_ (~quassel@lal1651212.lnk.telstra.net) has quit (Remote host closed the connection)
2016-09-19 02:53:01	-->	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has joined ##c++
2016-09-19 02:53:20	-->	zenx (~serj@77.95.183.158) has joined ##c++
2016-09-19 02:54:15	<--	lh_not_bot (~lh_bot@114.215.147.2) has quit (Ping timeout: 244 seconds)
2016-09-19 02:54:31	-->	lh_not_bot (~lh_bot@114.215.147.2) has joined ##c++
2016-09-19 02:57:28	<--	f10__ (~flo@2001:470:52af:1:bc25:d260:4fc6:b325) has quit (Ping timeout: 255 seconds)
2016-09-19 02:57:28	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-19 02:57:32	-->	trw (~twa@184.250.132.115) has joined ##c++
2016-09-19 02:57:55	<--	blackwind_123 (~IceChat9@59.99.105.150) has quit (Ping timeout: 255 seconds)
2016-09-19 02:57:59	-->	adrian_1908 (~adrian_19@unaffiliated/adrian-1908/x-1980224) has joined ##c++
2016-09-19 02:59:54	-->	decimad (~deci@ip5f5be505.dynamic.kabel-deutschland.de) has joined ##c++
2016-09-19 02:59:54		[02:59]
2016-09-19 02:59:56	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-19 03:02:02	<--	trw (~twa@184.250.132.115) has quit (Ping timeout: 244 seconds)
2016-09-19 03:02:38	-->	saedelaere (~saedelaer@unaffiliated/saedelaere) has joined ##c++
2016-09-19 03:05:17	-->	kiroma (~kiroma@apn-31-0-41-242.dynamic.gprs.plus.pl) has joined ##c++
2016-09-19 03:05:47	<--	jablo (~jablo@80.243.123.111) has quit (Quit: jablo)
2016-09-19 03:06:01	-->	Kn|t3 (~agarwalvi@49.207.53.8) has joined ##c++
2016-09-19 03:07:43	-->	kaldoran (~kaldoran@cable-192.222.223.163.electronicbox.net) has joined ##c++
2016-09-19 03:07:55	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-19 03:09:14	<--	Tachyon_ (~Thunderbi@95.76.184.120) has quit (Ping timeout: 244 seconds)
2016-09-19 03:09:23	<--	Mnkras (~Mnkras@concrete5/781/Mnkras) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-09-19 03:09:33	<--	neurodrone (~neurodron@unaffiliated/neurodrone) has quit (Quit: neurodrone)
2016-09-19 03:10:59	-->	kw01f (~kw01f@merlin.mvtec.com) has joined ##c++
2016-09-19 03:11:13	-->	jshjsh (~jshjsh@172.56.16.60) has joined ##c++
2016-09-19 03:12:26	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Ping timeout: 265 seconds)
2016-09-19 03:12:40	<--	a3pq51 (~a3pq51@232-25-179-94.pool.ukrtel.net) has quit (Remote host closed the connection)
2016-09-19 03:14:04	<--	JoshS (~jshjsh@172.56.16.60) has quit (Ping timeout: 240 seconds)
2016-09-19 03:15:17	-->	FreeBirdLjj (~freebirdl@183.206.165.238) has joined ##c++
2016-09-19 03:15:17		[03:15]
2016-09-19 03:16:30	-->	anton02 (~quassel@lal1651212.lnk.telstra.net) has joined ##c++
2016-09-19 03:16:49	-->	trw (~twa@184.250.132.115) has joined ##c++
2016-09-19 03:17:04	-->	regedit (uid150526@gateway/web/irccloud.com/x-qbhkenobzqariohz) has joined ##c++
2016-09-19 03:17:45	<--	ibouvousaime (~ibouvousa@41.82.44.97) has quit (Ping timeout: 265 seconds)
2016-09-19 03:18:01	<--	Amaranth (~Amaranth@ubuntu/member/Amaranth) has quit (Quit: So long!)
2016-09-19 03:18:35	-->	ibouvousaime (~ibouvousa@41.82.54.177) has joined ##c++
2016-09-19 03:19:12	<--	Borkr (~Borkr@83.243.155.126) has quit (Read error: Connection reset by peer)
2016-09-19 03:19:31	-->	Amaranth (~Amaranth@ubuntu/member/Amaranth) has joined ##c++
2016-09-19 03:19:34	<--	kaldoran (~kaldoran@cable-192.222.223.163.electronicbox.net) has quit (Ping timeout: 240 seconds)
2016-09-19 03:21:04	-->	CEnnis91 (uid3543@gateway/web/irccloud.com/x-gliikelnbsnysnwq) has joined ##c++
2016-09-19 03:21:13	-->	Freze (~Freze@c-73-167-60-180.hsd1.ma.comcast.net) has joined ##c++
2016-09-19 03:21:30	<--	voidah (~voidah@unaffiliated/voider) has quit (Remote host closed the connection)
2016-09-19 03:21:57	<--	trw (~twa@184.250.132.115) has quit (Ping timeout: 276 seconds)
2016-09-19 03:22:17	<--	kiroma (~kiroma@apn-31-0-41-242.dynamic.gprs.plus.pl) has quit (Ping timeout: 248 seconds)
2016-09-19 03:24:42	<--	anton02 (~quassel@lal1651212.lnk.telstra.net) has quit (Remote host closed the connection)
2016-09-19 03:25:15	-->	kaldoran (~kaldoran@cable-192.222.223.163.electronicbox.net) has joined ##c++
2016-09-19 03:26:11	<--	spindle (~spindle@27-33-39-55.static.tpgi.com.au) has quit (Quit: Leaving)
2016-09-19 03:28:06	-->	bergesenha (~harald@90.149.192.21) has joined ##c++
2016-09-19 03:29:12	-->	akshaydixi (~akshaydix@14.140.69.161) has joined ##c++
2016-09-19 03:29:27	<--	Palsson (~Palsson@pc-193-235-91-227.norrkoping.se) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-09-19 03:31:45	<--	Guest17833 (~SorcererX@cm-84.212.210.160.getinternet.no) has quit (Quit: brb.)
2016-09-19 03:31:45		[03:31]
2016-09-19 03:32:36	-->	SorcererX (~SorcererX@cm-84.212.210.160.getinternet.no) has joined ##c++
2016-09-19 03:33:01	<--	PeterRabbit (~Peter@pool-71-162-72-9.bstnma.east.verizon.net) has quit (Read error: Connection reset by peer)
2016-09-19 03:33:50	<--	plee (~kurt@89.10.219.180) has quit (Read error: Connection reset by peer)
2016-09-19 03:34:18	-->	plee (~kurt@89.10.219.180) has joined ##c++
2016-09-19 03:34:29	Nitrodev	i got a C++ book that's been printed in 1999
2016-09-19 03:34:43	Nitrodev	the bad thing is that the library only ahd this book on c++
2016-09-19 03:34:49	Nitrodev	had*
2016-09-19 03:35:32	Eelis	this channel is for questions about C++, not for questions about how to acquire books in modern society
2016-09-19 03:35:33	<--	kw01f (~kw01f@merlin.mvtec.com) has quit
2016-09-19 03:35:57	Eelis	(in case you're asking, such a book is quite obsolete)
2016-09-19 03:36:16	-->	trw (~twa@184.250.132.115) has joined ##c++
2016-09-19 03:36:20	Nitrodev	exactly what i was asking
2016-09-19 03:36:25	Nitrodev	goign to ask rather
2016-09-19 03:36:29	Nitrodev	well shit
2016-09-19 03:37:12	Nitrodev	well that's that then
2016-09-19 03:37:17	Nitrodev	no C++ for em
2016-09-19 03:37:20	velco	which book?
2016-09-19 03:38:22	<--	plusone (~plusone@176.24.26.166) has quit (Quit: WeeChat 1.5)
2016-09-19 03:38:56	-->	daniel-s (~daniel-s@bla31-1-82-241-231-138.fbx.proxad.net) has joined ##c++
2016-09-19 03:39:27	Nitrodev	C++ Trainer by Jesse Liberty
2016-09-19 03:40:08	Nitrodev	actually it's printed in 1997, the finnish version was in 1999
2016-09-19 03:40:14	Nitrodev	so even older than what i said
2016-09-19 03:41:27	<--	trw (~twa@184.250.132.115) has quit (Ping timeout: 276 seconds)
2016-09-19 03:41:35	-->	plusone (~plusone@176.24.26.166) has joined ##c++
2016-09-19 03:41:53	-->	erbse (~test@unaffiliated/erbse) has joined ##c++
2016-09-19 03:42:33	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-19 03:42:46	-->	SweetPear (uid144596@gateway/web/irccloud.com/x-tihryncguylnstrd) has joined ##c++
2016-09-19 03:43:16	cbreak	Nitrodev: C++ was first released as standard in 1998
2016-09-19 03:44:13	Nitrodev	oh eyah
2016-09-19 03:44:17	Nitrodev	hold on
2016-09-19 03:44:31	-->	Mnkras (~Mnkras@concrete5/781/Mnkras) has joined ##c++
2016-09-19 03:44:48	-->	arif1 (d8b92764@gateway/web/cgi-irc/kiwiirc.com/ip.216.185.39.100) has joined ##c++
2016-09-19 03:44:51	urdh	Nitrodev, buy a book?
2016-09-19 03:44:53	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-19 03:44:53	urdh	!books
2016-09-19 03:44:55	nolyc	A nice C++ book guide and list can be found at http://stackoverflow.com/q/388242/1090079
2016-09-19 03:45:26	Nitrodev	please notice i live in FInaln d
2016-09-19 03:45:29	Nitrodev	Finland
2016-09-19 03:45:34	Nitrodev	and my money is short atm
2016-09-19 03:45:36	urdh	(or tell the library to acquire one, if that works)
2016-09-19 03:45:37	<--	ezzieyguywuf (~wolfie@unaffiliated/ezzieyguywuf) has quit (Read error: Connection reset by peer)
2016-09-19 03:46:14	Nitrodev	how old is Visual C++ 6.0?
2016-09-19 03:46:29	-->	ezzieyguywuf (~wolfie@unaffiliated/ezzieyguywuf) has joined ##c++
2016-09-19 03:46:43	urdh	very
2016-09-19 03:46:51	Nitrodev	okay so obsolete
2016-09-19 03:46:51		[03:46]
2016-09-19 03:46:54	<--	Kn|t3 (~agarwalvi@49.207.53.8) has quit (Quit: Kn|t3)
2016-09-19 03:46:56	-->	blaxter (~blaxter@83.138.251.1.dyn.user.ono.com) has joined ##c++
2016-09-19 03:47:26	Nitrodev	i'll checkt he online page of the library
2016-09-19 03:47:43	-->	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has joined ##c++
2016-09-19 03:47:49	cbreak	Nitrodev: if you're forced to use windows, consider visual studio 2015, it's free. Otherwise, get a mac and xcode. Or get clang...
2016-09-19 03:48:00	Nitrodev	that's not the problem
2016-09-19 03:48:16	Nitrodev	the problem is a book
2016-09-19 03:48:19	-->	trw (~twa@184.250.132.115) has joined ##c++
2016-09-19 03:48:29	adrian_1908	while learning from free online sources doesn't give you a complete picture, it's good enough to get your started. learncpp.com offers a gentle introduction for instance.
2016-09-19 03:49:40	Nitrodev	okya buying is the only way
2016-09-19 03:49:49	Nitrodev	the library system doesn't have any
2016-09-19 03:49:57	<--	pavshn (~pavshn@ppp95-165-153-84.pppoe.spdop.ru) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2016-09-19 03:49:58	<--	urdh (~urdh@unaffiliated/urdh) has left ##c++ ("Leaving")
2016-09-19 03:50:08	<--	ascii-soup (~nils@unaffiliated/ascii-soup) has left ##c++ ("Konversation terminated!")
2016-09-19 03:50:09	-->	forgottenone (~forgotten@176.234.125.129) has joined ##c++
2016-09-19 03:50:14	-->	urdh (~urdh@unaffiliated/urdh) has joined ##c++
2016-09-19 03:51:03	-->	Mia2 (~Mia2@mar13-2-82-246-223-195.fbx.proxad.net) has joined ##c++
2016-09-19 03:51:18	<--	Mia2 (~Mia2@mar13-2-82-246-223-195.fbx.proxad.net) has quit (Remote host closed the connection)
2016-09-19 03:51:25	-->	jackyuke (~user@101.228.100.23) has joined ##c++
2016-09-19 03:51:30	<--	rorro (~rorro@c-227-189.eduroam.liu.se) has quit (Ping timeout: 264 seconds)
2016-09-19 03:52:05	<--	m_ben (~m_ben@unaffiliated/m-ben/x-5917362) has quit (Ping timeout: 265 seconds)
2016-09-19 03:52:29	<--	kaldoran (~kaldoran@cable-192.222.223.163.electronicbox.net) has quit (Ping timeout: 244 seconds)
2016-09-19 03:52:33	Nitrodev	would 2006 be too old?
2016-09-19 03:52:37	<--	trw (~twa@184.250.132.115) has quit (Ping timeout: 250 seconds)
2016-09-19 03:52:42	cbreak	I'd say: too old.
2016-09-19 03:52:44	<--	arif1 (d8b92764@gateway/web/cgi-irc/kiwiirc.com/ip.216.185.39.100) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-09-19 03:52:52	cbreak	Nitrodev: C++11 was a quite significant change in the C++ language.
2016-09-19 03:52:53	<--	msb (~msb@unaffiliated/detergnet) has quit (Read error: Connection reset by peer)
2016-09-19 03:52:55	-->	esas (~esas@unaffiliated/esas) has joined ##c++
2016-09-19 03:52:56	cbreak	that's 2011.
2016-09-19 03:53:06	cbreak	anything before that is probably outdated.
2016-09-19 03:53:10	Nitrodev	got it
2016-09-19 03:53:16	<--	Sasasu (~li@180.212.140.254) has quit (Quit: WeeChat 1.5)
2016-09-19 03:53:43	Nitrodev	i have a suspicion i need to get a book from outside my country
2016-09-19 03:53:58	ville	Nitrodev: finland probably has reasoable library system
2016-09-19 03:54:32	Nitrodev	not really
2016-09-19 03:54:44	-->	knzhc (~knzhc@mar13-2-82-246-223-195.fbx.proxad.net) has joined ##c++
2016-09-19 03:54:46	ville	as in you can get books from other libraries through your local one
2016-09-19 03:54:59	<--	knzhc (~knzhc@mar13-2-82-246-223-195.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-19 03:55:13	Nitrodev	the koha system?
2016-09-19 03:55:22	ville	anyways off-topic
2016-09-19 03:56:03	<--	mss_cyclist (~MSe@89-250-189-210.tangos.nl) has quit (Ping timeout: 240 seconds)
2016-09-19 03:56:20	-->	msb (~msb@unaffiliated/detergnet) has joined ##c++
2016-09-19 03:56:29	<--	it_ (~it_@212.243.190.164) has quit (Quit: Nettalk6 - www.ntalk.de)
2016-09-19 03:56:40	<--	Nitrodev (~Nitrodev@85-23-77-207.bb.dnainternet.fi) has left ##c++ ("Veni, Vidi, Non reliquit in")
2016-09-19 03:57:01	-->	voidah (~voidah@unaffiliated/voider) has joined ##c++
2016-09-19 03:57:29	<--	ByteStorm (~Peter@117.194.193.47) has quit (Ping timeout: 240 seconds)
2016-09-19 03:58:19	-->	kaldoran (~kaldoran@cable-192.222.223.163.electronicbox.net) has joined ##c++
2016-09-19 03:58:31	<--	Miroboru (~myrvoll@78.91.103.24) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-09-19 03:59:03	<--	AquaL1te (~AquaL1te@unaffiliated/aqual1te) has quit (Quit: leaving)
2016-09-19 04:00:07	<--	jackyuke (~user@101.228.100.23) has left ##c++ ("ERC (IRC client for Emacs 25.1.1)")
2016-09-19 04:00:58	<--	Akimb (~Akimb@88-119-138-154.static.zebra.lt) has quit (Read error: Connection reset by peer)
2016-09-19 04:01:34	-->	a3Dman (~3Dman@unaffiliated/a3dman) has joined ##c++
2016-09-19 04:01:42	-->	huhze (~quassel@dslb-188-106-107-023.188.106.pools.vodafone-ip.de) has joined ##c++
2016-09-19 04:01:49	-->	Kn|t3 (~agarwalvi@49.207.53.8) has joined ##c++
2016-09-19 04:02:35	<--	Migi32 (9dc18c19@gateway/web/freenode/ip.157.193.140.25) has quit (Quit: Page closed)
2016-09-19 04:02:35		[04:02]
2016-09-19 04:03:38	-->	trw (~twa@184.250.132.115) has joined ##c++
2016-09-19 04:06:28	-->	xkpe (~xkpe@host86-151-105-229.range86-151.btcentralplus.com) has joined ##c++
2016-09-19 04:07:22	-->	snover (~Adium@unaffiliated/snover) has joined ##c++
2016-09-19 04:08:03	<--	trw (~twa@184.250.132.115) has quit (Ping timeout: 248 seconds)
2016-09-19 04:08:03	<--	ibouvousaime (~ibouvousa@41.82.54.177) has quit (Ping timeout: 240 seconds)
2016-09-19 04:08:34	xkpe	what's the difference between a std::optional and std::unique_ptr?
2016-09-19 04:08:34	-->	a3pq51 (~a3pq51@232-25-179-94.pool.ukrtel.net) has joined ##c++
2016-09-19 04:08:44	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-19 04:08:49	Eelis	one uses internal storage, the other the free store
2016-09-19 04:09:05	cbreak	unique_ptr owns memory, and gives you a pointer like API to it
2016-09-19 04:09:34	cbreak	that's its main purpose
2016-09-19 04:10:00	-->	zacts (~zacts@dragora/developer/zacts) has joined ##c++
2016-09-19 04:10:00	cbreak	optional represents a value that might not exist.
2016-09-19 04:11:44	-->	EvilPenguin (~EvilPengu@2605:e000:6189:9600:8db4:4219:125c:58bc) has joined ##c++
2016-09-19 04:11:44	<--	Chais (~Chais@unaffiliated/chais) has quit (Read error: Connection reset by peer)
2016-09-19 04:11:51	-->	Brklyn (~truthbk@38.122.226.210) has joined ##c++
2016-09-19 04:12:03	-->	Chais (~Chais@unaffiliated/chais) has joined ##c++
2016-09-19 04:13:25	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Ping timeout: 250 seconds)
2016-09-19 04:14:34	xkpe	i see
2016-09-19 04:14:39	-->	om3n (~jakub@wloch.co) has joined ##c++
2016-09-19 04:15:14	-->	frib (~dynorsau@host42-232-dynamic.12-79-r.retail.telecomitalia.it) has joined ##c++
2016-09-19 04:15:41	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-19 04:15:45	-->	josef__k (~jeremy@59.102.31.229) has joined ##c++
2016-09-19 04:17:15	-->	Gluesticky (~nobody@unaffiliated/gluesticky) has joined ##c++
2016-09-19 04:17:48	-->	trw (~twa@184.250.132.115) has joined ##c++
2016-09-19 04:17:48		[04:17]
2016-09-19 04:17:57	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-19 04:18:02	-->	snowkidind (~textual@pool-96-255-207-158.washdc.fios.verizon.net) has joined ##c++
2016-09-19 04:18:05	<--	madpat (~AndChat57@host-091-097-170-097.ewe-ip-backbone.de) has quit (Read error: No route to host)
2016-09-19 04:18:43	<--	gagbo (~gagbo@unaffiliated/gagbo) has quit (Quit: Konversation terminated!)
2016-09-19 04:19:34	-->	jaafar (~quassel@50-206-78-205-static.hfc.comcastbusiness.net) has joined ##c++
2016-09-19 04:20:06	-->	Valdaris (~Gabe@75-170-43-116.eugn.qwest.net) has joined ##c++
2016-09-19 04:20:22	ville	virtual functions and whatnot
2016-09-19 04:22:25	<--	trw (~twa@184.250.132.115) has quit (Ping timeout: 260 seconds)
2016-09-19 04:22:40	-->	ibouvousaime (~ibouvousa@41.82.56.171) has joined ##c++
2016-09-19 04:23:00	-->	DigiByteDev (~JT2@n218250011174.netvigator.com) has joined ##c++
2016-09-19 04:23:08	<--	ibouvousaime (~ibouvousa@41.82.56.171) has quit (Client Quit)
2016-09-19 04:25:02	-->	TehWan_ (~TehWan@smtp.securiglobe.com) has joined ##c++
2016-09-19 04:25:39	-->	ibouvousaime (~ibouvousa@41.82.56.171) has joined ##c++
2016-09-19 04:26:49	-->	ubsan_ (~ubsan@ehsclark503.e.subnet.rcn.com) has joined ##c++
2016-09-19 04:28:42	<--	TehWan (~TehWan@modemcable033.235-81-70.mc.videotron.ca) has quit (Ping timeout: 264 seconds)
2016-09-19 04:28:47	-->	hatter (~hatter@h-90-120.a137.corp.bahnhof.se) has joined ##c++
2016-09-19 04:28:48	<--	UnripeSuica_mobi (~UnlikeSui@147.46.113.63) has quit (Ping timeout: 244 seconds)
2016-09-19 04:28:57	<--	roentgen (~roentgen@unaffiliated/roentgen) has quit (Ping timeout: 248 seconds)
2016-09-19 04:29:01	-->	UnlikeSuika_mobi (~UnlikeSui@147.46.113.63) has joined ##c++
2016-09-19 04:29:13	<--	eduardas_m (~eduardas_@213.197.143.19) has quit (Quit: Leaving)
2016-09-19 04:29:29	-->	roentgen (~roentgen@unaffiliated/roentgen) has joined ##c++
2016-09-19 04:29:55	<--	josef__k (~jeremy@59.102.31.229) has quit (Ping timeout: 248 seconds)
2016-09-19 04:30:12	<--	ubsan__ (~ubsan@ehsclark303.e.subnet.rcn.com) has quit (Ping timeout: 276 seconds)
2016-09-19 04:31:19	<--	c0le (~c0le@59.99.251.45) has quit (Quit: "This is the end.. My beautiful friend.. The end.")
2016-09-19 04:31:30	<--	gioerr (~gioerr@athedsl-4535808.home.otenet.gr) has quit (Ping timeout: 276 seconds)
2016-09-19 04:32:22	<--	voidah (~voidah@unaffiliated/voider) has quit (Remote host closed the connection)
2016-09-19 04:33:18	<--	xaxxon (~xaxxon@2601:602:9d00:d58b:c55f:ab79:c443:1392) has quit (Quit: This computer has gone to sleep)
2016-09-19 04:33:18		[04:33]
2016-09-19 04:34:03	-->	trw (~twa@184.250.132.115) has joined ##c++
2016-09-19 04:36:03	<--	drozdziak1 (~drozdziak@do-atman.cubiware.com) has quit (Quit: WeeChat 1.5)
2016-09-19 04:36:47	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-19 04:36:57	<--	kaldoran (~kaldoran@cable-192.222.223.163.electronicbox.net) has quit (Ping timeout: 248 seconds)
2016-09-19 04:38:20	somaReverse	Hi, should I use "volatile atomic<int> " or "atomic<volatile int> " ?
2016-09-19 04:38:33	<--	trw (~twa@184.250.132.115) has quit (Ping timeout: 248 seconds)
2016-09-19 04:38:42	cbreak	somaReverse: neither
2016-09-19 04:39:08	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-19 04:39:13	cbreak	it is very unlikely you need volatile anywhere
2016-09-19 04:39:32	-->	treehug88 (~textual@cpe-68-173-227-135.nyc.res.rr.com) has joined ##c++
2016-09-19 04:39:52	<--	hatter (~hatter@h-90-120.a137.corp.bahnhof.se) has quit (Read error: No route to host)
2016-09-19 04:41:02	somaReverse	Which one is correct theoretically?
2016-09-19 04:42:15	cbreak	somaReverse: atomic<int>
2016-09-19 04:42:24	<--	Mnkras (~Mnkras@concrete5/781/Mnkras) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-09-19 04:42:40	M-ou-se	somaReverse: why do you need both volatile and atomic?
2016-09-19 04:42:58	somaReverse	effective modern c++ gives an example of volatile atomic<int>
2016-09-19 04:43:15	somaReverse	I was just curiouse
2016-09-19 04:43:18	<--	ZMatt2 (~ZMatt2@host149-200-dynamic.59-82-r.retail.telecomitalia.it) has quit (Ping timeout: 244 seconds)
2016-09-19 04:44:20	-->	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has joined ##c++
2016-09-19 04:44:34	-->	RubberDog (~GodsDecei@p50835E9E.dip0.t-ipconnect.de) has joined ##c++
2016-09-19 04:45:11	-->	yomon_ (~burgundy@86.121.178.118) has joined ##c++
2016-09-19 04:45:22	<--	frib (~dynorsau@host42-232-dynamic.12-79-r.retail.telecomitalia.it) has quit (Quit: Leaving)
2016-09-19 04:45:54	-->	corsaere (~corsaere@unaffiliated/corsaere) has joined ##c++
2016-09-19 04:46:20	-->	zmack (~zmack@pool-72-74-144-215.bstnma.fios.verizon.net) has joined ##c++
2016-09-19 04:46:37	-->	asc232 (~Keith@179.38.236.154) has joined ##c++
2016-09-19 04:46:50	-->	jackhum (uid97400@gateway/web/irccloud.com/x-guoyvfudxmdwqdsh) has joined ##c++
2016-09-19 04:47:01	<--	Burgundy (~burgundy@86.121.178.118) has quit (Ping timeout: 272 seconds)
2016-09-19 04:47:15	-->	trw (~twa@184.250.132.115) has joined ##c++
2016-09-19 04:48:38	-->	skweek (~skweek@2607:fe50:0:810b:a414:1cf9:8eb8:f755) has joined ##c++
2016-09-19 04:48:38		[04:48]
2016-09-19 04:49:39	<--	huhze (~quassel@dslb-188-106-107-023.188.106.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2016-09-19 04:49:56	-->	Sculptor (~Sculptor@cable-24-135-26-151.dynamic.sbb.rs) has joined ##c++
2016-09-19 04:50:12	V-ille	if you need a volatile, you need a volatile with an atomic as well, so a volatile atomic<int>
2016-09-19 04:50:17	V-ille	but you will not need volatile
2016-09-19 04:50:26	<--	kaffeetrauma (~Thunderbi@n37.informatik.fh-dortmund.de) has quit (Quit: kaffeetrauma)
2016-09-19 04:50:52	<--	Freze (~Freze@c-73-167-60-180.hsd1.ma.comcast.net) has quit (Ping timeout: 255 seconds)
2016-09-19 04:51:04	-->	pavshn (~pavshn@ppp95-165-153-84.pppoe.spdop.ru) has joined ##c++
2016-09-19 04:51:34	<--	trw (~twa@184.250.132.115) has quit (Ping timeout: 240 seconds)
2016-09-19 04:52:19	-->	xarxer (~xarxer@90-230-93-77-no148.tbcn.telia.com) has joined ##c++
2016-09-19 04:52:54	-->	kaldoran (~kaldoran@cable-192.222.223.163.electronicbox.net) has joined ##c++
2016-09-19 04:53:05	-->	ZMatt2 (~ZMatt2@host149-200-dynamic.59-82-r.retail.telecomitalia.it) has joined ##c++
2016-09-19 04:55:28	<--	TMM (~hp@fsf/member/pdpc.professional.tmm) has quit (Quit: Ex-Chat)
2016-09-19 04:55:58	-->	ubsan__ (~ubsan@ehsclark504.e.subnet.rcn.com) has joined ##c++
2016-09-19 04:55:59	<--	ubsan_ (~ubsan@ehsclark503.e.subnet.rcn.com) has quit (Read error: Connection reset by peer)
2016-09-19 04:56:58	-->	xexio (~xexio@98.red-79-152-206.dynamicip.rima-tde.net) has joined ##c++
2016-09-19 04:57:06	-->	syem (~s@unaffiliated/syem) has joined ##c++
2016-09-19 04:57:22	<--	Furkiepurkie (~Furkie@2001:1af8:4700:a03c:7::) has quit (Quit: leaving)
2016-09-19 04:57:38	<--	rbern (~rbern@unaffiliated/rbern) has quit (Read error: Connection reset by peer)
2016-09-19 04:58:58	<--	fedepad (~fedepad@eduroam-97-27.zdv.uni-mainz.de) has quit (Ping timeout: 255 seconds)
2016-09-19 05:00:13	-->	chardan (~chardan@67.135.43.183) has joined ##c++
2016-09-19 05:00:18	<--	ZMatt2 (~ZMatt2@host149-200-dynamic.59-82-r.retail.telecomitalia.it) has quit (Ping timeout: 265 seconds)
2016-09-19 05:00:25	-->	trw (~twa@184.250.132.115) has joined ##c++
2016-09-19 05:01:00	<--	zmack (~zmack@pool-72-74-144-215.bstnma.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-19 05:01:12	<--	sctt (~sctt@91.236.116.233) has quit (Ping timeout: 244 seconds)
2016-09-19 05:01:18	<--	[Press_Here] (~sophia7@unaffiliated/sophia7) has quit (Quit: [Press_Here])
2016-09-19 05:01:24	-->	fedepad (~fedepad@eduroam-97-27.zdv.uni-mainz.de) has joined ##c++
2016-09-19 05:01:58	<--	riemann (~riemann@84-10-11-234.static.chello.pl) has quit (Quit: Leaving)
2016-09-19 05:02:11	<--	FreeBirdLjj (~freebirdl@183.206.165.238) has quit (Ping timeout: 265 seconds)
2016-09-19 05:02:40	-->	FreeBirdLjj (~freebirdl@112.20.80.252) has joined ##c++
2016-09-19 05:04:43	veverak	ok, so I have two structs that uses each other inside (and as attribute)
2016-09-19 05:04:43		[05:04]
2016-09-19 05:04:53	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-19 05:05:10	veverak	so, I tried to make forward declaration of one (with only methods declaration that are used by other struct)
2016-09-19 05:05:16	veverak	still got  error: redefinition of .....
2016-09-19 05:05:48	<--	daniel-s (~daniel-s@bla31-1-82-241-231-138.fbx.proxad.net) has quit (Quit: Konversation terminated!)
2016-09-19 05:05:51	<--	trw (~twa@184.250.132.115) has quit (Ping timeout: 250 seconds)
2016-09-19 05:05:56	-->	ZMatt2 (~ZMatt2@host62-146-dynamic.59-82-r.retail.telecomitalia.it) has joined ##c++
2016-09-19 05:06:02	<--	casscode (~bru@169-0-91-62.ip.afrihost.co.za) has quit (Ping timeout: 265 seconds)
2016-09-19 05:06:04	-->	daniel-s (~daniel-s@bla31-1-82-241-231-138.fbx.proxad.net) has joined ##c++
2016-09-19 05:06:07	-->	Tungki (~kvirc@114.4.78.214) has joined ##c++
2016-09-19 05:06:09	-->	occamsblazer (~occamsbla@131.228.197.2) has joined ##c++
2016-09-19 05:06:22	<--	jaafar (~quassel@50-206-78-205-static.hfc.comcastbusiness.net) has quit (Ping timeout: 244 seconds)
2016-09-19 05:06:23	cbreak	veverak: that's not possible
2016-09-19 05:06:40	veverak	assert( veverak_did_everything_right_way );
2016-09-19 05:06:48	cbreak	fail
2016-09-19 05:06:51	veverak	https://github.com/Schpin/schpin-ros/blob/master/schpin_stg/src/path.hpp
2016-09-19 05:06:54	-->	rbern (~rbern@unaffiliated/rbern) has joined ##c++
2016-09-19 05:07:02	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-19 05:07:03	veverak	struct Waypoint is the one where I get errors
2016-09-19 05:07:10	-->	licnep_ (uid4387@gateway/web/irccloud.com/x-yqmdnykcpmtjgvaa) has joined ##c++
2016-09-19 05:07:11	cbreak	veverak: if A contains B, then sizeof(A) >= sizeof(B), and vice versa
2016-09-19 05:07:13	-->	lolek1 (~lolek@ip-91-244-230-76.simant.pl) has joined ##c++
2016-09-19 05:07:14	<--	zipace (~anon@unaffiliated/zipace) has quit (Disconnected by services)
2016-09-19 05:07:14	-->	ziprar (~anon@unaffiliated/zipace) has joined ##c++
2016-09-19 05:07:19	<--	elnormous (~elnormous@gateway.evolutiongaming.com) has quit (Remote host closed the connection)
2016-09-19 05:07:20	veverak	struct Paths uses it
2016-09-19 05:07:28	cbreak	so, if either A or B is not empty, the size will be infinite :)
2016-09-19 05:07:29	<--	lolek1 (~lolek@ip-91-244-230-76.simant.pl) has left ##c++
2016-09-19 05:07:37	veverak	cbreak: ah, one got reference to the other ;)
2016-09-19 05:07:47	cbreak	then forward declare it there
2016-09-19 05:07:47	<--	UnlikeSuika_mobi (~UnlikeSui@147.46.113.63) has quit (Ping timeout: 248 seconds)
2016-09-19 05:07:53	cbreak	instead of trying to #include the header
2016-09-19 05:08:02	veverak	both are in same file
2016-09-19 05:08:02	<--	Ben2560 (~quassel@137.154.246.113) has quit (Ping timeout: 265 seconds)
2016-09-19 05:08:06	veverak	maybe that's the problem?
2016-09-19 05:08:21	cbreak	then forward declare it in there
2016-09-19 05:08:26	veverak	did that...
2016-09-19 05:08:48	-->	UnlikeSuika_mobi (~UnlikeSui@147.46.113.63) has joined ##c++
2016-09-19 05:09:17	veverak	https://github.com/Schpin/schpin-ros/blob/master/schpin_stg/src/path.hpp line 37: forward decalration, line 162: actual implementation
2016-09-19 05:09:29	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-19 05:09:59	cbreak	37 is not a forward declaration, it's a definition
2016-09-19 05:10:28	cbreak	waypoint doesn't seem to need Path
2016-09-19 05:10:34	<--	Sceorem (~Sceorem@xbn44-3-82-232-76-9.fbx.proxad.net) has quit (Quit: Leaving)
2016-09-19 05:10:35	-->	mindandsky (~mindandsk@50-232-5-123-static.hfc.comcastbusiness.net) has joined ##c++
2016-09-19 05:10:44	-->	lolek (~lolek@unaffiliated/marcin) has joined ##c++
2016-09-19 05:10:55	<--	lolek (~lolek@unaffiliated/marcin) has left ##c++
2016-09-19 05:10:58	veverak	well, it's true it needs it only to call one method of it
2016-09-19 05:11:08	-->	strelox (~user@p200300754F3E21003D549C124847E5F4.dip0.t-ipconnect.de) has joined ##c++
2016-09-19 05:11:13	cbreak	veverak: then that's irrelevant
2016-09-19 05:11:19	veverak	and than making the "forward dec" magic, it maybe would be better to pass callback
2016-09-19 05:11:21	veverak	hmm
2016-09-19 05:11:25	cbreak	implement the function after both classes have been defined
2016-09-19 05:11:30	-->	illerucis (~illerucis@2620:10d:c091:200::9:e38) has joined ##c++
2016-09-19 05:11:56	-->	calincru (~calin@c-73-231-85-3.hsd1.ca.comcast.net) has joined ##c++
2016-09-19 05:12:31	-->	Freze (~Freze@dhcp-18-189-77-44.dyn.MIT.EDU) has joined ##c++
2016-09-19 05:12:59	-->	YungRaj (~YungRaj@50-24-71-159.bcstcmtk01.res.dyn.suddenlink.net) has joined ##c++
2016-09-19 05:13:34	-->	Freze_ (~Freze@dhcp-18-189-107-137.dyn.mit.edu) has joined ##c++
2016-09-19 05:13:53	-->	trw (~twa@184.250.132.115) has joined ##c++
2016-09-19 05:14:18	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Ping timeout: 264 seconds)
2016-09-19 05:15:09	-->	blackbeard420 (~blackbear@dynamic-acs-24-154-82-158.zoominternet.net) has joined ##c++
2016-09-19 05:15:10	-->	rena_ (~rena@62.4.211.155) has joined ##c++
2016-09-19 05:15:19	-->	sctt (~sctt@91.236.116.233) has joined ##c++
2016-09-19 05:15:37	<--	zacts (~zacts@dragora/developer/zacts) has quit (Ping timeout: 255 seconds)
2016-09-19 05:15:45	<--	yomon_ (~burgundy@86.121.178.118) has quit (Remote host closed the connection)
2016-09-19 05:15:49	-->	blop (3e04d39b@gateway/web/cgi-irc/kiwiirc.com/ip.62.4.211.155) has joined ##c++
2016-09-19 05:15:55	<--	blop (3e04d39b@gateway/web/cgi-irc/kiwiirc.com/ip.62.4.211.155) has quit (Client Quit)
2016-09-19 05:16:02	<--	corsaere (~corsaere@unaffiliated/corsaere) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-09-19 05:16:15	-->	Burgundy (~burgundy@86.121.178.118) has joined ##c++
2016-09-19 05:16:15	-->	afefwfewwqe (3e04d39b@gateway/web/cgi-irc/kiwiirc.com/ip.62.4.211.155) has joined ##c++
2016-09-19 05:16:53	-->	Elirips_ (~Elirips@242.109.22.178.ftth.as8758.net) has joined ##c++
2016-09-19 05:16:58	<--	Tungki (~kvirc@114.4.78.214) has quit (Ping timeout: 255 seconds)
2016-09-19 05:17:42	<--	Freze (~Freze@dhcp-18-189-77-44.dyn.MIT.EDU) has quit (Ping timeout: 265 seconds)
2016-09-19 05:17:50	<--	afefwfewwqe (3e04d39b@gateway/web/cgi-irc/kiwiirc.com/ip.62.4.211.155) has quit (Client Quit)
2016-09-19 05:17:54	-->	frib (~dynorsau@host42-232-dynamic.12-79-r.retail.telecomitalia.it) has joined ##c++
2016-09-19 05:18:07	-->	hey5 (~hey5@c-71-193-232-55.hsd1.or.comcast.net) has joined ##c++
2016-09-19 05:18:16	<--	Markow (~Markow@176.122.215.103) has quit (Remote host closed the connection)
2016-09-19 05:18:17	-->	Tungki (~kvirc@120.188.7.150) has joined ##c++
2016-09-19 05:18:25	<--	elh9 (~elh9___@110-175-114-60.tpgi.com.au) has quit (Ping timeout: 250 seconds)
2016-09-19 05:18:37	<--	trw (~twa@184.250.132.115) has quit (Ping timeout: 265 seconds)
2016-09-19 05:19:05	<--	Elirips (~Elirips@242.109.22.178.ftth.as8758.net) has quit (Ping timeout: 240 seconds)
2016-09-19 05:19:18	<--	Haxxa (~Harrison@120.147.48.206) has quit (Quit: ZNC 1.6.2+deb1+jessie0 - http://znc.in)
2016-09-19 05:20:02	-->	karts (43a45b4e@gateway/web/cgi-irc/kiwiirc.com/ip.67.164.91.78) has joined ##c++
2016-09-19 05:20:02		[05:20]
2016-09-19 05:20:12	<--	karts (43a45b4e@gateway/web/cgi-irc/kiwiirc.com/ip.67.164.91.78) has quit (Client Quit)
2016-09-19 05:20:34	-->	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has joined ##c++
2016-09-19 05:20:38	<--	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has quit (Max SendQ exceeded)
2016-09-19 05:20:46	-->	Meszias (~quassel@2804:7f1:2080:2112:f021:bf6c:1dc0:240d) has joined ##c++
2016-09-19 05:21:01	<--	rena_ (~rena@62.4.211.155) has quit (Quit: Leaving)
2016-09-19 05:21:44	-->	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has joined ##c++
2016-09-19 05:22:46	-->	InfoTest (~Thunderbi@tgn.126.66.51.dts.mg) has joined ##c++
2016-09-19 05:22:53	<--	drizbit (~drizbit@128.199.183.1) has quit (Quit: WeeChat 1.0.1)
2016-09-19 05:23:43	-->	drizbit (~drizbit@128.199.183.1) has joined ##c++
2016-09-19 05:23:45	<--	Arimil (Renari@70.44.83.23.res-cmts.bgr.ptd.net) has quit (Read error: Connection reset by peer)
2016-09-19 05:23:54	-->	Renari (Renari@70.44.83.23.res-cmts.bgr.ptd.net) has joined ##c++
2016-09-19 05:24:22	<--	drizbit (~drizbit@128.199.183.1) has quit (Client Quit)
2016-09-19 05:28:12	-->	drizbit (~drizbit@128.199.183.1) has joined ##c++
2016-09-19 05:28:20	<--	ibouvousaime (~ibouvousa@41.82.56.171) has quit (Ping timeout: 265 seconds)
2016-09-19 05:28:37	-->	trw (~twa@184.250.132.115) has joined ##c++
2016-09-19 05:28:41	<--	xnavor (~xnavor@vbg-gw.proceranetworks.com) has quit (Quit: This computer has gone to sleep)
2016-09-19 05:29:20	<--	erbse (~test@unaffiliated/erbse) has left ##c++
2016-09-19 05:30:50	<--	asc232 (~Keith@179.38.236.154) has quit (Read error: Connection reset by peer)
2016-09-19 05:31:14	<--	Anodl (~Anodl@p2003007A2F166200A51808241D8946AD.dip0.t-ipconnect.de) has quit (Ping timeout: 265 seconds)
2016-09-19 05:31:44	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-19 05:31:54	-->	Anodl (~Anodl@p2003007A2F56E700A51808241D8946AD.dip0.t-ipconnect.de) has joined ##c++
2016-09-19 05:32:43	<--	trw (~twa@184.250.132.115) has quit (Ping timeout: 244 seconds)
2016-09-19 05:32:57	<--	xexio (~xexio@98.red-79-152-206.dynamicip.rima-tde.net) has quit (Quit: Konversation terminated!)
2016-09-19 05:33:10	<--	calincru (~calin@c-73-231-85-3.hsd1.ca.comcast.net) has quit (Ping timeout: 265 seconds)
2016-09-19 05:33:54	<--	karab44 (~karab44@unaffiliated/karab44) has quit (Quit: Bye bye! o/)
2016-09-19 05:34:16	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Remote host closed the connection)
2016-09-19 05:34:32	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-19 05:35:25	<--	skweek (~skweek@2607:fe50:0:810b:a414:1cf9:8eb8:f755) has quit (Ping timeout: 255 seconds)
2016-09-19 05:35:25		[05:35]
2016-09-19 05:35:37	<--	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has quit (Quit: Leaving.)
2016-09-19 05:36:01	-->	pandaant (~batman@149.201.240.93) has joined ##c++
2016-09-19 05:36:17	-->	ibouvousaime (~ibouvousa@41.83.3.116) has joined ##c++
2016-09-19 05:36:17	<--	frib (~dynorsau@host42-232-dynamic.12-79-r.retail.telecomitalia.it) has quit (Quit: Leaving)
2016-09-19 05:39:19	-->	wds (~wds@cpe-72-227-132-127.nyc.res.rr.com) has joined ##c++
2016-09-19 05:41:17	<--	MulleDK19 (MulleDK19@unaffiliated/mulledk19) has quit
2016-09-19 05:42:00	-->	trw (~twa@184.250.132.115) has joined ##c++
2016-09-19 05:43:10	-->	seishun (~Kakera@78.84.135.235) has joined ##c++
2016-09-19 05:43:34	<--	hey5 (~hey5@c-71-193-232-55.hsd1.or.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-19 05:44:13	<--	pandaant (~batman@149.201.240.93) has quit (Ping timeout: 265 seconds)
2016-09-19 05:44:21	-->	fahadash (uid44972@gateway/web/irccloud.com/x-htvlolmxfwdsebea) has joined ##c++
2016-09-19 05:44:34	<--	kimundi (~Kimundi@dynip-129-217-065-035.wifi.tu-dortmund.de) has quit (Ping timeout: 240 seconds)
2016-09-19 05:44:36	-->	MulleDK20 (MulleDK19@unaffiliated/mulledk19) has joined ##c++
2016-09-19 05:45:08	-->	jaafar (~quassel@mobile-166-176-186-180.mycingular.net) has joined ##c++
2016-09-19 05:45:47	-->	zmack (~zmack@pool-72-74-144-215.bstnma.fios.verizon.net) has joined ##c++
2016-09-19 05:46:02	-->	pandaant (~batman@149.201.240.93) has joined ##c++
2016-09-19 05:46:35	<--	trw (~twa@184.250.132.115) has quit (Ping timeout: 250 seconds)
2016-09-19 05:46:39	<--	Jiwan (~jeangu@212.247.124.2) has quit (Quit: Leaving.)
2016-09-19 05:47:47	-->	kw01f (~kw01f@pD9FB2169.dip0.t-ipconnect.de) has joined ##c++
2016-09-19 05:47:55	-->	re1 (~reiser@178.220.4.176) has joined ##c++
2016-09-19 05:48:13	<--	blablablub (~howlymowl@euler.ilr.tu-berlin.de) has quit (Quit: Konversation terminated!)
2016-09-19 05:48:28	<--	adrian_1908 (~adrian_19@unaffiliated/adrian-1908/x-1980224) has quit (Quit: https://youtu.be/CuYNkH6zvHE?t=9s)
2016-09-19 05:48:32	-->	Haxxa (~Harrison@120.147.48.206) has joined ##c++
2016-09-19 05:49:05	<--	EvilPenguin (~EvilPengu@2605:e000:6189:9600:8db4:4219:125c:58bc) has quit (Ping timeout: 272 seconds)
2016-09-19 05:50:03	--	PJBoy is now known as Guest83166
2016-09-19 05:50:03	<--	Guest83166 (~PJBoy_@unaffiliated/pjboy) has quit (Killed (hitchcock.freenode.net (Nickname regained by services)))
2016-09-19 05:50:10	-->	PJBoy (~PJBoy_@unaffiliated/pjboy) has joined ##c++
2016-09-19 05:50:29	<--	zmack (~zmack@pool-72-74-144-215.bstnma.fios.verizon.net) has quit (Ping timeout: 250 seconds)
2016-09-19 05:50:29		[05:50]
2016-09-19 05:50:34	-->	madpat (~AndChat57@89.15.237.216) has joined ##c++
2016-09-19 05:50:37	<--	Tungki (~kvirc@120.188.7.150) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2016-09-19 05:50:59	<--	madpat (~AndChat57@89.15.237.216) has quit (Max SendQ exceeded)
2016-09-19 05:51:43	-->	skweek (~skweek@2607:fe50:0:810b:a414:1cf9:8eb8:f755) has joined ##c++
2016-09-19 05:52:49	-->	Ropeney (~Ropeney@CPE-58-170-196-106.lns2.lon.bigpond.net.au) has joined ##c++
2016-09-19 05:53:52	<--	chardan (~chardan@67.135.43.183) has quit (Ping timeout: 265 seconds)
2016-09-19 05:54:04	-->	madpat (~AndChat57@89.15.237.216) has joined ##c++
2016-09-19 05:54:05	<--	ziprar (~anon@unaffiliated/zipace) has quit (Ping timeout: 244 seconds)
2016-09-19 05:54:17	<--	CuriousErnestBro (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has quit (Ping timeout: 248 seconds)
2016-09-19 05:54:41	<--	madpat (~AndChat57@89.15.237.216) has quit (Max SendQ exceeded)
2016-09-19 05:54:59	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-19 05:55:07	<--	kaldoran (~kaldoran@cable-192.222.223.163.electronicbox.net) has quit (Ping timeout: 244 seconds)
2016-09-19 05:55:13	-->	madpat (~AndChat57@89.15.237.216) has joined ##c++
2016-09-19 05:55:23	<--	Anticom_ (~quassel@217.6.33.234) has quit (Remote host closed the connection)
2016-09-19 05:55:26	<--	madpat (~AndChat57@89.15.237.216) has quit (Max SendQ exceeded)
2016-09-19 05:55:42	-->	trw (~twa@184.250.132.115) has joined ##c++
2016-09-19 05:55:47	-->	rorro (~rorro@h-170-152-58.a163.priv.bahnhof.se) has joined ##c++
2016-09-19 05:55:59	-->	wolfcub (~henrique_@177.55.195.40) has joined ##c++
2016-09-19 05:56:03	-->	madpat (~AndChat57@89.15.237.216) has joined ##c++
2016-09-19 05:56:10	<--	madpat (~AndChat57@89.15.237.216) has quit (Max SendQ exceeded)
2016-09-19 05:56:18	-->	scellow (~quassel@bly33-1-78-246-251-30.fbx.proxad.net) has joined ##c++
2016-09-19 05:56:53	-->	madpat (~AndChat57@89.15.237.216) has joined ##c++
2016-09-19 05:57:00	<--	madpat (~AndChat57@89.15.237.216) has quit (Max SendQ exceeded)
2016-09-19 05:57:02	-->	marcofe (~marcofe@test-centre4-gw.estec.esa.int) has joined ##c++
2016-09-19 05:57:09	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-19 05:57:48	<--	occamsblazer (~occamsbla@131.228.197.2) has quit (Quit: adios he zaijian)
2016-09-19 05:58:46	-->	EricWF (~EricwF@67.135.43.183) has joined ##c++
2016-09-19 05:59:02	<--	deekej (deekej@nat/redhat/x-tfrtuspoejkenera) has quit (Remote host closed the connection)
2016-09-19 05:59:48	<--	lsk (~lsk@enucs/member/lsk) has quit (Read error: Connection reset by peer)
2016-09-19 06:00:30	<--	trw (~twa@184.250.132.115) has quit (Ping timeout: 264 seconds)
2016-09-19 06:00:31	-->	kaldoran (~kaldoran@cable-192.222.223.163.electronicbox.net) has joined ##c++
2016-09-19 06:00:46	-->	elnormous (~elnormous@gateway.evolutiongaming.com) has joined ##c++
2016-09-19 06:01:11	-->	narendraj9 (~user@157.119.170.109) has joined ##c++
2016-09-19 06:01:12	<--	xkpe (~xkpe@host86-151-105-229.range86-151.btcentralplus.com) has quit (Ping timeout: 276 seconds)
2016-09-19 06:01:33	-->	raphaelsc (~raphaelsc@189.115.123.240) has joined ##c++
2016-09-19 06:01:41	<--	rorro (~rorro@h-170-152-58.a163.priv.bahnhof.se) has quit (Ping timeout: 265 seconds)
2016-09-19 06:01:51	-->	xkpe (~xkpe@host86-151-105-229.range86-151.btcentralplus.com) has joined ##c++
2016-09-19 06:01:53	-->	MicroCheapFx_ (~quassel@230-95-190-109.dsl.ovh.fr) has joined ##c++
2016-09-19 06:02:29	<--	Betal (~Betal@unaffiliated/betal) has quit (Remote host closed the connection)
2016-09-19 06:02:38	-->	bumbar (~bumbar@unaffiliated/bumbar) has joined ##c++
2016-09-19 06:03:22	<--	Elirips_ (~Elirips@242.109.22.178.ftth.as8758.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2016-09-19 06:03:37	<--	jaafar (~quassel@mobile-166-176-186-180.mycingular.net) has quit (Ping timeout: 265 seconds)
2016-09-19 06:05:04	<--	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has quit (Ping timeout: 265 seconds)
2016-09-19 06:05:33	<--	elnormous (~elnormous@gateway.evolutiongaming.com) has quit (Ping timeout: 272 seconds)
2016-09-19 06:05:33		[06:05]
2016-09-19 06:05:38	-->	ubsan_ (~ubsan@2607:fb90:24a8:7d30:d48e:9e82:7c10:edd1) has joined ##c++
2016-09-19 06:06:34	-->	jaafar (~quassel@mobile-166-176-186-180.mycingular.net) has joined ##c++
2016-09-19 06:07:29	<--	ubsan__ (~ubsan@ehsclark504.e.subnet.rcn.com) has quit (Ping timeout: 240 seconds)
2016-09-19 06:07:44	<--	danieli (~duniel@213.52.4.149) has quit (Changing host)
2016-09-19 06:07:44	-->	danieli (~duniel@unaffiliated/danieli) has joined ##c++
2016-09-19 06:07:52	<--	kamog (~user@95.73.82.243) has quit (Remote host closed the connection)
2016-09-19 06:07:56	<--	rriemann_ (~rriemann@dhcp-67-135.ixxi.ens-lyon.fr) has quit (Quit: Konversation terminated!)
2016-09-19 06:08:01	<--	aindros (~jacknife@93-57-35-194.ip162.fastwebnet.it) has quit (Quit: Sto andando via)
2016-09-19 06:08:08	-->	symm- (~symm-@86.127.152.32) has joined ##c++
2016-09-19 06:08:21	<--	zero_byte (zer0@nat/redhat/x-zjfghenonhnilwyl) has quit (Ping timeout: 276 seconds)
2016-09-19 06:08:26	<--	tlaxkit (~Thunderbi@92.185.154.236) has quit (Quit: tlaxkit)
2016-09-19 06:08:39	-->	rtkt (~rtkt@ptr-2hj4tbw74k45pzp61238v5cdb.ip6.access.telenet.be) has joined ##c++
2016-09-19 06:11:02	-->	JoshS (~jshjsh@172.56.16.60) has joined ##c++
2016-09-19 06:11:05	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-19 06:11:31	<--	rmunoz (~ricardo@217.124.142.50) has quit (Quit: leaving)
2016-09-19 06:11:55	<--	velco (~chill@vlan-185-78-38-153.comnet.bg) has quit (Quit: Leaving...)
2016-09-19 06:12:11	<--	zack_s_ (57ea344a@gateway/web/freenode/ip.87.234.52.74) has quit (Quit: Page closed)
2016-09-19 06:12:15	<--	Gluesticky (~nobody@unaffiliated/gluesticky) has quit (Quit: This is the end. Goodbye cruel world!)
2016-09-19 06:13:10	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-19 06:13:16	-->	velco (~chill@vlan-185-78-38-153.comnet.bg) has joined ##c++
2016-09-19 06:13:19	-->	occamsblazer (~occamsbla@131.228.197.2) has joined ##c++
2016-09-19 06:13:43	<--	marcofe (~marcofe@test-centre4-gw.estec.esa.int) has quit (Quit: Konversation terminated!)
2016-09-19 06:13:47	<--	jaafar (~quassel@mobile-166-176-186-180.mycingular.net) has quit (Ping timeout: 272 seconds)
2016-09-19 06:14:10	<--	jshjsh (~jshjsh@172.56.16.60) has quit (Ping timeout: 265 seconds)
2016-09-19 06:15:13	-->	jshjsh (~jshjsh@172.56.16.60) has joined ##c++
2016-09-19 06:15:37	-->	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has joined ##c++
2016-09-19 06:15:47	-->	inyk (~inyk@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has joined ##c++
2016-09-19 06:16:02	<--	inyk (~inyk@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-19 06:16:03	-->	madpat (~AndChat57@89.15.237.216) has joined ##c++
2016-09-19 06:16:03	<--	madpat (~AndChat57@89.15.237.216) has quit (Client Quit)
2016-09-19 06:16:24	-->	trw (~twa@184.250.132.115) has joined ##c++
2016-09-19 06:16:45	<--	JoshS (~jshjsh@172.56.16.60) has quit (Ping timeout: 260 seconds)
2016-09-19 06:16:59	<--	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has quit (Read error: Connection reset by peer)
2016-09-19 06:17:37	<--	seru76 (~seru76@77.89.191.179) has quit (Quit: Leaving)
2016-09-19 06:17:41	-->	Uvf4 (~Uvf4@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has joined ##c++
2016-09-19 06:17:59	<--	Uvf4 (~Uvf4@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-19 06:18:36	<--	MicroCheapFx_ (~quassel@230-95-190-109.dsl.ovh.fr) has quit (Ping timeout: 265 seconds)
2016-09-19 06:18:41	-->	scai (~scai@p4FF0FFFE.dip0.t-ipconnect.de) has joined ##c++
2016-09-19 06:19:02	-->	k4rtik (~k4rtik@unaffiliated/k4rtik) has joined ##c++
2016-09-19 06:19:16	<--	ubsan_ (~ubsan@2607:fb90:24a8:7d30:d48e:9e82:7c10:edd1) has quit (Quit: <3)
2016-09-19 06:19:33	-->	ubsan_ (~ubsan@NYUFWA-WLESSAUTHCLIENTS-01.NATPOOL.NYU.EDU) has joined ##c++
2016-09-19 06:19:49	-->	TMM (~hp@fsf/member/pdpc.professional.tmm) has joined ##c++
2016-09-19 06:20:33	<--	trw (~twa@184.250.132.115) has quit (Ping timeout: 240 seconds)
2016-09-19 06:20:33		[06:20]
2016-09-19 06:21:29	-->	m_ben (~m_ben@unaffiliated/m-ben/x-5917362) has joined ##c++
2016-09-19 06:22:06	-->	MicroCheapFx_ (~quassel@230-95-190-109.dsl.ovh.fr) has joined ##c++
2016-09-19 06:22:07	-->	kawaCat_ (~kawaCat@KD106132207158.au-net.ne.jp) has joined ##c++
2016-09-19 06:22:33	<--	kawaCat (~kawaCat@KD106132218103.au-net.ne.jp) has quit (Ping timeout: 248 seconds)
2016-09-19 06:22:46	-->	CuriousErnestBro (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has joined ##c++
2016-09-19 06:22:50	-->	dextertzu (~dexter@S0106bcd1656573c8.vs.shawcable.net) has joined ##c++
2016-09-19 06:24:34	-->	phinxy (~tehhhd@unaffiliated/phinxy) has joined ##c++
2016-09-19 06:24:42	<--	YungRaj (~YungRaj@50-24-71-159.bcstcmtk01.res.dyn.suddenlink.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-19 06:24:52	<--	DigiByteDev (~JT2@n218250011174.netvigator.com) has quit (Quit: DigiByteDev)
2016-09-19 06:24:53	<--	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has quit (Ping timeout: 265 seconds)
2016-09-19 06:25:49	<--	kaldoran (~kaldoran@cable-192.222.223.163.electronicbox.net) has quit (Ping timeout: 272 seconds)
2016-09-19 06:27:03	<--	ZMatt2 (~ZMatt2@host62-146-dynamic.59-82-r.retail.telecomitalia.it) has quit (Read error: Connection reset by peer)
2016-09-19 06:27:21	-->	kimundi (~Kimundi@p57BC6A98.dip0.t-ipconnect.de) has joined ##c++
2016-09-19 06:28:00	<--	irrenhaus3 (~xenon@HSI-KBW-046-005-253-022.hsi8.kabel-badenwuerttemberg.de) has quit (Quit: Lost terminal)
2016-09-19 06:28:11	<--	Haruno (~Haruno@unaffiliated/haruno) has quit (Ping timeout: 250 seconds)
2016-09-19 06:30:15	<--	Freze_ (~Freze@dhcp-18-189-107-137.dyn.mit.edu) has quit (Changing host)
2016-09-19 06:30:15	-->	Freze_ (~Freze@unaffiliated/freze) has joined ##c++
2016-09-19 06:30:33	<--	PJBoy (~PJBoy_@unaffiliated/pjboy) has quit (Read error: Connection reset by peer)
2016-09-19 06:30:44	-->	jaafar (~quassel@166.176.186.180) has joined ##c++
2016-09-19 06:30:57	--	Freze_ is now known as Freze
2016-09-19 06:31:27	-->	rhl (~rhl@66.201.45.138) has joined ##c++
2016-09-19 06:32:07	-->	blackwind_123 (~IceChat9@117.192.137.83) has joined ##c++
2016-09-19 06:32:11	<--	snover (~Adium@unaffiliated/snover) has quit (Quit: Leaving.)
2016-09-19 06:32:21	<--	blackwind_123 (~IceChat9@117.192.137.83) has quit (Remote host closed the connection)
2016-09-19 06:32:39	-->	skeletorofsquids (~skeletoro@bb121-6-185-204.singnet.com.sg) has joined ##c++
2016-09-19 06:32:50	rhl	Hi, how can you diagnose why a class does not get auto generated constructors/assignment operators ? I have a class which wraps a std::vector<> of structs to POD, I defined only one nonstandard constructor taking only and int. It inherits from nothing, and it doesn't get a default actor
2016-09-19 06:32:56	rhl	ctor* rather.
2016-09-19 06:33:30	<--	V-ille (~ville@59ec7803.symbio.com) has quit (Ping timeout: 264 seconds)
2016-09-19 06:33:36	-->	blackwind_123 (~IceChat9@117.192.137.83) has joined ##c++
2016-09-19 06:33:38	<--	skeletorofsquids (~skeletoro@bb121-6-185-204.singnet.com.sg) has quit (Remote host closed the connection)
2016-09-19 06:34:19	-->	xaxxon (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has joined ##c++
2016-09-19 06:34:30	<--	xaxxon (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has quit (Remote host closed the connection)
2016-09-19 06:34:58	<--	fedepad (~fedepad@eduroam-97-27.zdv.uni-mainz.de) has quit (Quit: Leaving...)
2016-09-19 06:35:04	-->	kaldoran (~kaldoran@cable-192.222.223.163.electronicbox.net) has joined ##c++
2016-09-19 06:35:06	<--	pandaant (~batman@149.201.240.93) has quit (Remote host closed the connection)
2016-09-19 06:35:07	-->	alexmh (~alex@c-67-166-124-41.hsd1.ut.comcast.net) has joined ##c++
2016-09-19 06:35:22	<--	pavshn (~pavshn@ppp95-165-153-84.pppoe.spdop.ru) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2016-09-19 06:35:24	-->	hackish (b8a398f5@gateway/web/freenode/ip.184.163.152.245) has joined ##c++
2016-09-19 06:35:28	-->	trw (~twa@184.250.132.115) has joined ##c++
2016-09-19 06:35:55	-->	ZMatt2 (~ZMatt2@host80-146-dynamic.59-82-r.retail.telecomitalia.it) has joined ##c++
2016-09-19 06:35:55		[06:35]
2016-09-19 06:36:26	-->	NoShlomo (~NoShlomo@90.74.151.136) has joined ##c++
2016-09-19 06:37:17	-->	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has joined ##c++
2016-09-19 06:37:38	hackish	http://pastebin.com/0zsZKDbJ
2016-09-19 06:37:51	hackish	clang doesn't like this: bool contains( T const &s ) const { return find( s ) != this->end(); }
2016-09-19 06:37:55	<--	EricWF (~EricwF@67.135.43.183) has quit (Quit: EricWF)
2016-09-19 06:38:04	hackish	./my_set.h:54:45: error: use of undeclared identifier 'find'
2016-09-19 06:38:36	hackish	it's an old library that compiled correctly with g++ for years. Can anyone point out what is wrong with the find call?
2016-09-19 06:38:48	<--	roentgen (~roentgen@unaffiliated/roentgen) has quit (Quit: WeeChat 1.5)
2016-09-19 06:39:08	kalven	this->find should work
2016-09-19 06:39:33	-->	ambro718 (~ambro@unaffiliated/ambro718) has joined ##c++
2016-09-19 06:39:47	hackish	wow that was easy.
2016-09-19 06:39:56	hackish	thank kalven that did fix it.
2016-09-19 06:40:21	<--	trw (~twa@184.250.132.115) has quit (Ping timeout: 265 seconds)
2016-09-19 06:40:21	<--	MicroCheapFx_ (~quassel@230-95-190-109.dsl.ovh.fr) has quit (Ping timeout: 265 seconds)
2016-09-19 06:41:16	-->	przemkovv (~przemkovv@gandalf.kari.put.poznan.pl) has joined ##c++
2016-09-19 06:41:48	<--	rtkt (~rtkt@ptr-2hj4tbw74k45pzp61238v5cdb.ip6.access.telenet.be) has quit (Ping timeout: 265 seconds)
2016-09-19 06:42:11	-->	Tectu (~Tectu@193.231.195.178.dynamic.wline.res.cust.swisscom.ch) has joined ##c++
2016-09-19 06:42:11	-->	rtkt (~rtkt@ptr-2hj4tbw74k45pzp61238v5cdb.ip6.access.telenet.be) has joined ##c++
2016-09-19 06:44:00	-->	hk238 (~kvirc@unaffiliated/hk238) has joined ##c++
2016-09-19 06:44:21	-->	glad (~quassel@dynamic-vpdn-93-125-63-166.telecom.by) has joined ##c++
2016-09-19 06:45:53	<--	InfoTest (~Thunderbi@tgn.126.66.51.dts.mg) has quit (Quit: InfoTest)
2016-09-19 06:45:57	-->	MicroCheapFx_ (~quassel@230-95-190-109.dsl.ovh.fr) has joined ##c++
2016-09-19 06:48:18	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-19 06:48:34	<--	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has quit (Ping timeout: 265 seconds)
2016-09-19 06:49:16	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Remote host closed the connection)
2016-09-19 06:49:47	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-19 06:49:51	-->	f10 (~flo@2001:470:52af:1:1883:b70e:19db:f1db) has joined ##c++
2016-09-19 06:51:01	-->	trw (~twa@184.250.132.115) has joined ##c++
2016-09-19 06:51:01		[06:51]
2016-09-19 06:51:50	-->	xnavor (~xnavor@78-70-4-240-no171.business.telia.com) has joined ##c++
2016-09-19 06:52:26	<--	blaxter (~blaxter@83.138.251.1.dyn.user.ono.com) has quit (Quit: foo)
2016-09-19 06:52:57	-->	anotherguy (2ec5b8ed@gateway/web/freenode/ip.46.197.184.237) has joined ##c++
2016-09-19 06:53:07	-->	Haruno (~Haruno@unaffiliated/haruno) has joined ##c++
2016-09-19 06:53:55	rhl	if anyone is listening, so I have a class which I believe should get auto created default copy/move ctors. They do not, but, when I force the compiler to create them, they exist.
2016-09-19 06:54:22	<--	MicroCheapFx_ (~quassel@230-95-190-109.dsl.ovh.fr) has quit (Ping timeout: 265 seconds)
2016-09-19 06:54:33	-->	PJBoy (~PJBoy_@unaffiliated/pjboy) has joined ##c++
2016-09-19 06:54:39	-->	roentgen (~roentgen@unaffiliated/roentgen) has joined ##c++
2016-09-19 06:54:40	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Ping timeout: 260 seconds)
2016-09-19 06:55:05	<--	trw (~twa@184.250.132.115) has quit (Ping timeout: 240 seconds)
2016-09-19 06:55:17	hs_	show us the class
2016-09-19 06:55:18	-->	willy23123 (~willy2312@s147-109.psd.vodafone.ie) has joined ##c++
2016-09-19 06:56:09	<--	willy23123 (~willy2312@s147-109.psd.vodafone.ie) has quit (Client Quit)
2016-09-19 06:59:04	<--	interop_madness (~interop_m@unaffiliated/interop-madness/x-8858653) has quit (Quit: Leaving)
2016-09-19 06:59:23	-->	V-ille (~ville@81-175-149-170.bb.dnainternet.fi) has joined ##c++
2016-09-19 07:00:29	-->	Tehwan__ (~TehWan@modemcable033.235-81-70.mc.videotron.ca) has joined ##c++
2016-09-19 07:00:42	-->	elnormous (~elnormous@91.105.17.158) has joined ##c++
2016-09-19 07:01:02	-->	orbiter (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has joined ##c++
2016-09-19 07:01:52	-->	TehWan (~TehWan@modemcable033.235-81-70.mc.videotron.ca) has joined ##c++
2016-09-19 07:02:30	-->	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has joined ##c++
2016-09-19 07:02:45	-->	Blyoff (~Bly@173-243-73-90.pppoe.customer.softcom.net) has joined ##c++
2016-09-19 07:02:58	-->	EricWF (~EricwF@67.135.43.183) has joined ##c++
2016-09-19 07:03:10	<--	Levitator (~Meh@cpe-2606-A000-E182-FB00-A91B-BEB6-54EA-1963.dyn6.twc.com) has quit (Ping timeout: 255 seconds)
2016-09-19 07:04:23	<--	TehWan (~TehWan@modemcable033.235-81-70.mc.videotron.ca) has quit (Client Quit)
2016-09-19 07:04:35	<--	TehWan_ (~TehWan@smtp.securiglobe.com) has quit (Ping timeout: 248 seconds)
2016-09-19 07:04:38	-->	TehWan (~TehWan@modemcable033.235-81-70.mc.videotron.ca) has joined ##c++
2016-09-19 07:04:41	-->	blackbird1 (~blackbird@197.0.2.245) has joined ##c++
2016-09-19 07:04:42	<--	pasasap_ (d943c9a2@gateway/web/freenode/ip.217.67.201.162) has quit (Ping timeout: 240 seconds)
2016-09-19 07:05:18	<--	Tehwan__ (~TehWan@modemcable033.235-81-70.mc.videotron.ca) has quit (Ping timeout: 264 seconds)
2016-09-19 07:06:17	-->	Adva (~Hyrule@2a02:810a:12c0:5068:c9d:90db:7a62:c8ba) has joined ##c++
2016-09-19 07:06:17		[07:06]
2016-09-19 07:06:20	<--	Bly (~Bly@173-243-73-90.pppoe.customer.softcom.net) has quit (Ping timeout: 260 seconds)
2016-09-19 07:06:21	<--	spjoe (~spjoe@vserver1877.vserver-on.de) has quit (Quit: ZNC 1.6.2 - http://znc.in)
2016-09-19 07:07:01	-->	SteffanW (~steffanw@ip4da40774.direct-adsl.nl) has joined ##c++
2016-09-19 07:07:15	<--	rtkt (~rtkt@ptr-2hj4tbw74k45pzp61238v5cdb.ip6.access.telenet.be) has quit (Ping timeout: 248 seconds)
2016-09-19 07:07:23	-->	trw (~twa@184.250.132.115) has joined ##c++
2016-09-19 07:07:43	<--	lyindArk (~jzeiger@mail.talpidae.net) has quit (Remote host closed the connection)
2016-09-19 07:09:53	-->	Crazylemon64 (~Crazylemo@c-98-237-179-255.hsd1.wa.comcast.net) has joined ##c++
2016-09-19 07:10:09	<--	vuoto (~vuoto@80-71-135-9.u.parknet.dk) has quit (Remote host closed the connection)
2016-09-19 07:11:53	-->	gelignite (~gelignite@x4e3070cd.dyn.telefonica.de) has joined ##c++
2016-09-19 07:12:03	<--	trw (~twa@184.250.132.115) has quit (Ping timeout: 272 seconds)
2016-09-19 07:12:34	-->	rtkt (~rtkt@ptr-2hj4tbw74k45pzp61238v5cdb.ip6.access.telenet.be) has joined ##c++
2016-09-19 07:14:55	-->	AbleBacon (~AbleBacon@unaffiliated/ablebacon) has joined ##c++
2016-09-19 07:15:05	-->	Cohedrin (~textual@c-73-170-239-253.hsd1.ca.comcast.net) has joined ##c++
2016-09-19 07:18:19	<--	Melite (~Melite@218.51.34.198) has quit (Quit: Leaving)
2016-09-19 07:18:58	-->	Meszias_ (~quassel@2804:7f1:2080:2112:f021:bf6c:1dc0:240d) has joined ##c++
2016-09-19 07:19:25	<--	match_ita (~Giovanni@dynamic-adsl-78-14-227-127.clienti.tiscali.it) has quit (Quit: It 's better to be optimistic and be wrong , than to be pessimistic and to be right - Albert Einstein)
2016-09-19 07:19:45	<--	josh (~josh@c-67-182-242-240.hsd1.ut.comcast.net) has quit (Ping timeout: 250 seconds)
2016-09-19 07:21:05	<--	ibouvousaime (~ibouvousa@41.83.3.116) has quit (Read error: Connection reset by peer)
2016-09-19 07:21:16	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-19 07:21:23	<--	Meszias (~quassel@2804:7f1:2080:2112:f021:bf6c:1dc0:240d) has quit (Ping timeout: 265 seconds)
2016-09-19 07:21:23		[07:21]
2016-09-19 07:21:44	<--	xarxer (~xarxer@90-230-93-77-no148.tbcn.telia.com) has quit (Quit: Leaving)
2016-09-19 07:22:30	<--	Ropeney (~Ropeney@CPE-58-170-196-106.lns2.lon.bigpond.net.au) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-09-19 07:22:56	-->	Tempesta_ (~Tempesta@121.131.185.96) has joined ##c++
2016-09-19 07:23:11	rhl	hs_: http://ideone.com/TjRtDN
2016-09-19 07:25:04	<--	Tempesta (~Tempesta@unaffiliated/tempesta) has quit (Ping timeout: 240 seconds)
2016-09-19 07:26:25	hs_	what a mess
2016-09-19 07:26:59	<--	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has quit (Ping timeout: 248 seconds)
2016-09-19 07:27:48	hs_	rhl, I take it you know the basic idea that in certain circumstances the implicit copy/move ctors are suppressed?
2016-09-19 07:27:55	<--	bushido_ (~bushido@unaffiliated/bursihido) has quit (Ping timeout: 255 seconds)
2016-09-19 07:27:59	hs_	like if you provide your own
2016-09-19 07:29:55	<--	araml (~araml@unaffiliated/araml) has quit (Quit: WeeChat 1.4)
2016-09-19 07:30:41	<--	aceahmedmoh (~aceahmedm@104.131.98.28) has quit (Changing host)
2016-09-19 07:30:41	-->	aceahmedmoh (~aceahmedm@unaffiliated/aceahmedmoh) has joined ##c++
2016-09-19 07:31:16	rhl	hs_: but I did not provide my own of those.
2016-09-19 07:31:26	rhl	hs_ why are you calling it a mess?
2016-09-19 07:31:41	<--	Moose (~moose@unaffiliated/moose) has quit (Quit: Leaving)
2016-09-19 07:31:53	francoisk	rhl, that seems to be the done thing in this channel, don't take it too seriously
2016-09-19 07:32:34	hs_	rhl, because the formatting is broken and it's loaded with extra cruft and it isn't demonstrating anything (like a missing ctor)
2016-09-19 07:32:59	-->	vuoto (~vuoto@80-71-135-9.u.parknet.dk) has joined ##c++
2016-09-19 07:33:18	-->	JoshS (~jshjsh@172.56.16.60) has joined ##c++
2016-09-19 07:33:23	<--	justanotheruser (~justanoth@unaffiliated/justanotheruser) has quit (Ping timeout: 248 seconds)
2016-09-19 07:33:53	<--	zwliew (uid161395@gateway/web/irccloud.com/x-dmjqmtwveezsvydq) has quit (Quit: Connection closed for inactivity)
2016-09-19 07:34:28	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Remote host closed the connection)
2016-09-19 07:34:59	<--	kaldoran (~kaldoran@cable-192.222.223.163.electronicbox.net) has quit (Ping timeout: 248 seconds)
2016-09-19 07:35:01	hs_	francoisk, thanks for chiming in
2016-09-19 07:35:04	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-19 07:36:33	<--	jshjsh (~jshjsh@172.56.16.60) has quit (Ping timeout: 240 seconds)
2016-09-19 07:36:33		[07:36]
2016-09-19 07:36:43	<--	forgottenone (~forgotten@176.234.125.129) has quit (Quit: Konversation terminated!)
2016-09-19 07:36:50	hs_	http://ideone.com/0rdMGR // rhl, what's the issue?
2016-09-19 07:37:15	-->	ubsan__ (~ubsan@2607:fb90:5430:409f:5bd8:7fdf:7ab2:aa9) has joined ##c++
2016-09-19 07:37:15	<--	ubsan__ (~ubsan@2607:fb90:5430:409f:5bd8:7fdf:7ab2:aa9) has quit (Client Quit)
2016-09-19 07:37:15	<--	ubsan_ (~ubsan@NYUFWA-WLESSAUTHCLIENTS-01.NATPOOL.NYU.EDU) has quit (Read error: Connection reset by peer)
2016-09-19 07:37:31	-->	ubsan_ (~ubsan@NYUFWA-WLESSAUTHCLIENTS-01.NATPOOL.NYU.EDU) has joined ##c++
2016-09-19 07:37:49	-->	forgottenone (~forgotten@176.234.125.129) has joined ##c++
2016-09-19 07:38:18	-->	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has joined ##c++
2016-09-19 07:38:39	<--	unK_ (~drunK@dynamic-78-8-10-212.ssp.dialog.net.pl) has quit (Ping timeout: 272 seconds)
2016-09-19 07:38:40	-->	pavshn (~pavshn@ppp95-165-153-84.pppoe.spdop.ru) has joined ##c++
2016-09-19 07:39:35	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Ping timeout: 260 seconds)
2016-09-19 07:41:59	-->	ubsan__ (~ubsan@NYUFWA-WLESSAUTHCLIENTS-01.NATPOOL.NYU.EDU) has joined ##c++
2016-09-19 07:41:59	<--	ubsan_ (~ubsan@NYUFWA-WLESSAUTHCLIENTS-01.NATPOOL.NYU.EDU) has quit (Read error: Connection reset by peer)
2016-09-19 07:42:11	-->	kaldoran (~kaldoran@cable-192.222.223.163.electronicbox.net) has joined ##c++
2016-09-19 07:42:11	<--	plee (~kurt@89.10.219.180) has quit (Read error: Connection reset by peer)
2016-09-19 07:42:38	-->	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has joined ##c++
2016-09-19 07:42:43	-->	plee (~kurt@89.10.219.180) has joined ##c++
2016-09-19 07:43:39	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-19 07:44:36	k_j	hmm I have a doubt
2016-09-19 07:45:37	xkpe	optional::value_or doesn't allow RVO? http://melpon.org/wandbox/permlink/Y3M9FzXBb09MY2qP
2016-09-19 07:46:04	<--	flavi0 (~anon@unaffiliated/flavi0) has quit (Quit: leaving)
2016-09-19 07:46:24	-->	MicroCheapFx_ (~quassel@230-95-190-109.dsl.ovh.fr) has joined ##c++
2016-09-19 07:46:24	Cohedrin	hoping someone can clear something up for me:
2016-09-19 07:46:48	Cohedrin	here, it looks like VectorTransform is being called with an single float argument: https://github.com/ValveSoftware/source-sdk-2013/blob/0d8dceea4310fde5706b3ce1c70609d72a38efdf/mp/src/public/mathlib/mathlib.h#L899
2016-09-19 07:47:12	Cohedrin	however, VectorTransform takes an array of floats as its first argument: https://github.com/ValveSoftware/source-sdk-2013/blob/0d8dceea4310fde5706b3ce1c70609d72a38efdf/mp/src/mathlib/mathlib_base.cpp#L259
2016-09-19 07:47:22	Cohedrin	is there something I'm misunderstanding here?
2016-09-19 07:47:29	rhl	hs__ if I remove the 3 lines that force ctors to appear, then I get compile errors when I try to use the ctors. i'm just wondering why.
2016-09-19 07:47:43	<--	Zunino (~Zunino@200.175.61.231) has quit (Ping timeout: 255 seconds)
2016-09-19 07:47:55	<--	symm- (~symm-@86.127.152.32) has quit (Ping timeout: 250 seconds)
2016-09-19 07:48:10	k_j	consider a .h with   an   inline map<int,int>& f() {static map<int,int> m={{1,1,}...etc...}; return m;}   ok.     now instead of inlining consider the alternative  with an anonymous namespace in the .h       namespace { map<int,int>& f() {static map<int,int> m={{1,1,}...etc...}; return m;} }  .   the question is:  in the latter case, would  a (different) map will be allocated each time f() is invoked by a different compilation unit, once, as it is static
2016-09-19 07:48:45	-->	Moose (~moose@unaffiliated/moose) has joined ##c++
2016-09-19 07:50:10	<--	EricWF (~EricwF@67.135.43.183) has quit (Quit: EricWF)
2016-09-19 07:50:19	<--	hk238 (~kvirc@unaffiliated/hk238) has quit (Quit: http://www.kvirc.net/ 4.9.2 Aria)
2016-09-19 07:50:23	xkpe	Cohedrin: that code is passing a pointer to the element x, I think it assumes that the calss Vector has its components stored as an array of floats
2016-09-19 07:50:41	-->	Freze_ (~Freze@18.189.55.163) has joined ##c++
2016-09-19 07:50:51	hs_	rhl, I cannot reproduce your error there
2016-09-19 07:50:58	k_j	essentially, in one case i have a static object defined inside an inline function, in the other case i have a static object defined in a non-inlined function, which is part of an anoymous namespace
2016-09-19 07:51:24	rhl	hs_ you have the = default line
2016-09-19 07:52:12	k_j	I wonder about how many instances of the non-constexpr static objects are allocated if i call the function from functions defined in different compilation unit
2016-09-19 07:52:12		[07:52]
2016-09-19 07:52:13	<--	xnavor (~xnavor@78-70-4-240-no171.business.telia.com) has quit (Quit: This computer has gone to sleep)
2016-09-19 07:52:16	rhl	hs_ : also i was using c++11.
2016-09-19 07:52:27	hs_	rhl, on the default ctor -- but you can remove it as well
2016-09-19 07:52:47	rhl	yeah, I just did, hm, how odd. must be an oddity of the compiler on my system?
2016-09-19 07:53:15	<--	Freze (~Freze@unaffiliated/freze) has quit (Ping timeout: 265 seconds)
2016-09-19 07:53:52	Cohedrin	xkpe: x y and z are floats (well floats typedef'd as the type (vec_t)
2016-09-19 07:54:18	Cohedrin	xkpe: The definition is here: https://github.com/ValveSoftware/source-sdk-2013/blob/0d8dceea4310fde5706b3ce1c70609d72a38efdf/mp/src/public/mathlib/vector.h#L86
2016-09-19 07:54:28	<--	jaafar (~quassel@166.176.186.180) has quit (Ping timeout: 244 seconds)
2016-09-19 07:54:42	Cohedrin	I don't see any way they could be accessing an array from the reference to x...
2016-09-19 07:55:26	Cohedrin	whatever they're doing works fine, I just tested it, but trying to understand whats going on here
2016-09-19 07:55:53	xkpe	The code is obviously assuming that they are packed sequentially in memory, and it provides a pointer to x
2016-09-19 07:56:02	-->	trw (~twa@184.250.132.115) has joined ##c++
2016-09-19 07:56:31	<--	fahadash (uid44972@gateway/web/irccloud.com/x-htvlolmxfwdsebea) has quit (Quit: Connection closed for inactivity)
2016-09-19 07:56:44	-->	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has joined ##c++
2016-09-19 07:57:03	-->	Freze (~Freze@dhcp-18-189-55-163.dyn.MIT.EDU) has joined ##c++
2016-09-19 07:57:10	<--	blueness (~blueness@gentoo/developer/blueness) has quit (Quit: blueness)
2016-09-19 07:57:34	k_j	guys, can you answer my question: short version is   :     a static non-constexpr object in an inline function defined in a .h, how many instances can be of it in a program?
2016-09-19 07:57:45	<--	dgarnold (~dga@c-73-90-67-117.hsd1.ca.comcast.net) has quit (Quit: leaving)
2016-09-19 07:58:27	RokerHRO	?
2016-09-19 07:58:45	-->	araml (~araml@unaffiliated/araml) has joined ##c++
2016-09-19 07:58:54	hs_	k_j, depends on what you mean by "how many instances can be of it in a program?"
2016-09-19 07:58:54	ville	1
2016-09-19 07:58:59	hs_	are you asking how many will there be?
2016-09-19 07:59:09	ville	well 0 or 1
2016-09-19 07:59:21	ville	if the function is never called 0. if the function is called then 1.
2016-09-19 07:59:24	hs_	depends on the linkage of the function
2016-09-19 07:59:33	xkpe	Cohedrin: it's ugly code, but it's likely to work on most modern hardware, for now, but not guaranteed: http://stackoverflow.com/questions/5397447/struct-padding-in-c
2016-09-19 07:59:36	<--	simius (~simius@unaffiliated/simius) has quit (Ping timeout: 244 seconds)
2016-09-19 07:59:39	k_j	yes, suppose the .h is included in many compilation units, where there is at least one function defined calling this inlined function
2016-09-19 07:59:58	-->	ubsan_ (~ubsan@2607:fb90:5430:409f:3a75:b3e8:b8c2:924f) has joined ##c++
2016-09-19 08:00:00	ville	k_j: it's a question whether it is called at runtime
2016-09-19 08:00:06	<--	MicroCheapFx_ (~quassel@230-95-190-109.dsl.ovh.fr) has quit (Ping timeout: 265 seconds)
2016-09-19 08:00:06	hs_	k_j, if it has external linkage then there will be 1, if it has internal linkage then each gets its own
2016-09-19 08:00:18	k_j	yes, suppose it is called by each "compilation unit"
2016-09-19 08:00:30	<--	Freze_ (~Freze@18.189.55.163) has quit (Ping timeout: 264 seconds)
2016-09-19 08:00:35	-->	Leovale (~Leovale@45.72.141.66) has joined ##c++
2016-09-19 08:00:45	k_j	or from one func per compilation unit
2016-09-19 08:00:52	<--	ubsan_ (~ubsan@2607:fb90:5430:409f:3a75:b3e8:b8c2:924f) has quit (Client Quit)
2016-09-19 08:01:00	<--	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has quit (Ping timeout: 244 seconds)
2016-09-19 08:01:01	<--	trw (~twa@184.250.132.115) has quit (Ping timeout: 265 seconds)
2016-09-19 08:01:21	-->	jaafar (~quassel@mobile-166-176-186-180.mycingular.net) has joined ##c++
2016-09-19 08:01:27	k_j	unanonymous namespace does not provide external linkage, right?
2016-09-19 08:01:38	-->	ubsan_ (~ubsan@NYUFWA-WLESSAUTHCLIENTS-01.NATPOOL.NYU.EDU) has joined ##c++
2016-09-19 08:01:39	<--	ubsan__ (~ubsan@NYUFWA-WLESSAUTHCLIENTS-01.NATPOOL.NYU.EDU) has quit (Read error: Connection reset by peer)
2016-09-19 08:01:54	Cohedrin	xkpe: I see, so basically: it passes the reference to x then VectorTransform(float *in1 ...) loads the entire array of [x,y,z] as the argument?
2016-09-19 08:02:09	k_j	if remove the inline and put the definition in an anonymous namespace, what will happen
2016-09-19 08:02:18	<--	RoBo_V (~robo@27.255.163.72) has quit (Ping timeout: 264 seconds)
2016-09-19 08:02:19	Cohedrin	I'm not quite understanding how thats happening, a bit new to C++, sorry if that's a dumb question
2016-09-19 08:02:21	hs_	k_j, that forces internal linkage, yes
2016-09-19 08:02:30	k_j	ok, so it's not an option
2016-09-19 08:02:43	k_j	now the problem is understaning the effects of inline
2016-09-19 08:02:51	-->	Rialynn (~Rialynn@unaffiliated/rialynn) has joined ##c++
2016-09-19 08:02:57	hs_	{ durr(); blah(); } inline void blah() { static tracked::B b; } void durr(); \\ inline void blah() { static tracked::B b; } void durr() { blah(); } // demo
2016-09-19 08:02:59	geordi	B0* B0~
2016-09-19 08:03:01	<--	narendraj9 (~user@157.119.170.109) has quit (Ping timeout: 255 seconds)
2016-09-19 08:03:08	hs_	{ durr(); blah(); } static inline void blah() { static tracked::B b; } void durr(); \\ static inline void blah() { static tracked::B b; } void durr() { blah(); } // demo
2016-09-19 08:03:09	geordi	B0* B1* B1~ B0~
2016-09-19 08:03:26	-->	AnarchyAo (~andrew@8.18.217.202) has joined ##c++
2016-09-19 08:03:59	hs_	{ durr(); blah(); } namespace { inline void blah() { static tracked::B b; }  } void durr(); \\ namespace { inline void blah() { static tracked::B b; } } void durr() { blah(); } // same story
2016-09-19 08:04:00	geordi	B0* B1* B1~ B0~
2016-09-19 08:04:25	-->	Zunino (~Zunino@201.49.127.2) has joined ##c++
2016-09-19 08:04:37	-->	RoBo_V (~robo@27.255.218.76) has joined ##c++
2016-09-19 08:04:40	k_j	hs_, it seems that i can go with the inline MyType& f() { static MyType obj; return obj; }  and have it included in each .cpp
2016-09-19 08:04:51	<--	Tectu (~Tectu@193.231.195.178.dynamic.wline.res.cust.swisscom.ch) has quit (Quit: Leaving)
2016-09-19 08:05:04	k_j	(by your first example)
2016-09-19 08:05:29	-->	chardan (~chardan@67.135.43.183) has joined ##c++
2016-09-19 08:05:44	-->	KAHR-Alpha (~Alpha@AReims-652-1-187-168.w92-142.abo.wanadoo.fr) has joined ##c++
2016-09-19 08:06:17	-->	blueness (~blueness@gentoo/developer/blueness) has joined ##c++
2016-09-19 08:06:38	-->	Tachyon_ (~Thunderbi@95.76.184.120) has joined ##c++
2016-09-19 08:07:16	-->	CaptainPi (~edx@dslb-188-099-059-009.188.099.pools.vodafone-ip.de) has joined ##c++
2016-09-19 08:07:16		[08:07]
2016-09-19 08:07:57	<--	chardan (~chardan@67.135.43.183) has left ##c++
2016-09-19 08:08:23	-->	simius (~simius@unaffiliated/simius) has joined ##c++
2016-09-19 08:08:40	k_j	    A static local variable in an extern inline function always refers to the same object.
2016-09-19 08:08:40	k_j	    7.1.2/4 - C++98/C++14 (n3797)
2016-09-19 08:08:52	hs_	if f has external linkage then you get one version of obj
2016-09-19 08:09:05	<--	re1 (~reiser@178.220.4.176) has quit (Ping timeout: 240 seconds)
2016-09-19 08:10:14	<--	CaptainPi (~edx@dslb-188-099-059-009.188.099.pools.vodafone-ip.de) has quit (Client Quit)
2016-09-19 08:10:53	-->	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has joined ##c++
2016-09-19 08:13:09	-->	re1 (~reiser@178.220.4.176) has joined ##c++
2016-09-19 08:13:17	<--	heatmeiser (sid112556@gateway/web/irccloud.com/x-nqqrnavjbnzivzhv) has quit (Quit: Updating details, brb)
2016-09-19 08:13:33	-->	heatmis3r (sid112556@gateway/web/irccloud.com/x-kashyxvctwxoqykh) has joined ##c++
2016-09-19 08:13:44	-->	Markow (~Markow@176.122.215.103) has joined ##c++
2016-09-19 08:14:50	<--	bocaneri (~bocaneri@about/linux/staff/sauvin) has quit (Remote host closed the connection)
2016-09-19 08:16:11	-->	josh (~josh@168.103.191.142) has joined ##c++
2016-09-19 08:16:59	-->	happahappa (~happahapp@62.178.189.8) has joined ##c++
2016-09-19 08:17:04	<--	blueness (~blueness@gentoo/developer/blueness) has quit (Quit: blueness)
2016-09-19 08:17:42	<--	Rialynn (~Rialynn@unaffiliated/rialynn) has quit (Ping timeout: 276 seconds)
2016-09-19 08:17:52	-->	golu (~golu@124.40.246.86) has joined ##c++
2016-09-19 08:17:57	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Remote host closed the connection)
2016-09-19 08:18:30	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-19 08:19:08	<--	happahappa (~happahapp@62.178.189.8) has quit (Client Quit)
2016-09-19 08:19:42	-->	symm- (~symm-@86.127.152.32) has joined ##c++
2016-09-19 08:20:00	<--	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has quit (Quit: WeeChat 1.5)
2016-09-19 08:21:34	<--	kw01f (~kw01f@pD9FB2169.dip0.t-ipconnect.de) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-09-19 08:21:47	-->	mindands1 (~mindandsk@50-232-5-123-static.hfc.comcastbusiness.net) has joined ##c++
2016-09-19 08:22:52	-->	lyindArk (~jzeiger@mail.talpidae.net) has joined ##c++
2016-09-19 08:22:52		[08:22]
2016-09-19 08:23:20	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Ping timeout: 260 seconds)
2016-09-19 08:23:59	-->	AkaiSora (~quassel@197.17.48.239) has joined ##c++
2016-09-19 08:24:56	-->	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has joined ##c++
2016-09-19 08:25:09	<--	mindandsky (~mindandsk@50-232-5-123-static.hfc.comcastbusiness.net) has quit (Ping timeout: 265 seconds)
2016-09-19 08:25:16	-->	Arlen0 (~Arlen0@38-103-219-200.alamobb.net) has joined ##c++
2016-09-19 08:26:28	-->	Groscheri (~Dyonisos@unaffiliated/dyonisos) has joined ##c++
2016-09-19 08:26:59	<--	Arlen0 (~Arlen0@38-103-219-200.alamobb.net) has quit (Client Quit)
2016-09-19 08:27:47	<--	RubberDog (~GodsDecei@p50835E9E.dip0.t-ipconnect.de) has quit (Quit: A TLS packet with unexpected length was received.)
2016-09-19 08:30:26	<--	Tempesta_ (~Tempesta@121.131.185.96) has quit (Read error: Connection reset by peer)
2016-09-19 08:30:29	<--	jmnk (jargonmonk@gateway/shell/blinkenshell.org/x-jdttmspyzlnjfszg) has quit (Quit: jmnk)
2016-09-19 08:30:29	-->	Rialynn (~Rialynn@unaffiliated/rialynn) has joined ##c++
2016-09-19 08:31:01	<--	SweetPear (uid144596@gateway/web/irccloud.com/x-tihryncguylnstrd) has quit (Quit: Connection closed for inactivity)
2016-09-19 08:31:05	<--	FreeBirdLjj (~freebirdl@112.20.80.252) has quit (Remote host closed the connection)
2016-09-19 08:31:08	<--	kawaCat_ (~kawaCat@KD106132207158.au-net.ne.jp) has quit (Quit: my IRC Client is Buggy :()
2016-09-19 08:32:07	-->	jshjsh (~jshjsh@172.56.16.60) has joined ##c++
2016-09-19 08:32:34	<--	davidstone (~davidston@75-166-170-107.hlrn.qwest.net) has quit (Quit: Leaving)
2016-09-19 08:33:04	<--	re1 (~reiser@178.220.4.176) has quit (Read error: Connection reset by peer)
2016-09-19 08:33:23	-->	re1 (~reiser@178.220.4.176) has joined ##c++
2016-09-19 08:33:39	-->	ibouvousaime (~ibouvousa@41.82.12.149) has joined ##c++
2016-09-19 08:34:01	<--	comando (uid185287@gateway/web/irccloud.com/x-emblqcigwseglrxi) has quit (Quit: Connection closed for inactivity)
2016-09-19 08:35:29	-->	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has joined ##c++
2016-09-19 08:35:40	<--	JoshS (~jshjsh@172.56.16.60) has quit (Ping timeout: 272 seconds)
2016-09-19 08:36:08	-->	satifant (~sati@unaffiliated/satifant) has joined ##c++
2016-09-19 08:36:32	<--	mackal (~mike@pool-96-237-144-12.bstnma.fios.verizon.net) has quit (Quit: BE VIGILANT.)
2016-09-19 08:37:07	Tachyon_	I see in a lot of project method with no parameters that have void like:
2016-09-19 08:37:08	Tachyon_	void SendHealth(void)
2016-09-19 08:37:08	Tachyon_	is it a good practice to put it or what ? something historical ?
2016-09-19 08:38:06	-->	sh1znc (~sh1znc@gateway/shell/xshellz/x-rwxcyphcfbreiutv) has joined ##c++
2016-09-19 08:38:06		[08:38]
2016-09-19 08:38:10	urdh	it's an old C thing IIRC
2016-09-19 08:38:12	xkpe	Tachyon_: C requires void if there are nother parameters
2016-09-19 08:38:14	urdh	don't do it
2016-09-19 08:38:22	<--	sharkz_ (~sharkz@linux7.csie.ntu.edu.tw) has quit (Ping timeout: 250 seconds)
2016-09-19 08:39:02	-->	sharkz_ (~sharkz@linux7.csie.ntu.edu.tw) has joined ##c++
2016-09-19 08:39:04	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-19 08:39:11	AbleBacon	is there no template function for absolute value that returns the same type that you give it?
2016-09-19 08:39:40	<--	Flandre_ (~condy@unaffiliated/condy) has quit (Ping timeout: 250 seconds)
2016-09-19 08:40:44	xkpe	AbleBacon: i believe there is overload for float, double and long double, but not templated
2016-09-19 08:40:47	<--	PJBoy (~PJBoy_@unaffiliated/pjboy) has quit (Read error: Connection reset by peer)
2016-09-19 08:40:52	-->	Guest92333 (~condy@115.28.150.204) has joined ##c++
2016-09-19 08:40:57	AbleBacon	weird. seems like there should be one
2016-09-19 08:41:04	xkpe	what would it do for other types?
2016-09-19 08:41:12	<--	francoisk (~francoisk@154.66.250.11) has quit (Quit: Leaving)
2016-09-19 08:41:15	-->	kadoban (~mud@unaffiliated/kadoban) has joined ##c++
2016-09-19 08:42:31	-->	blueness (~blueness@gentoo/developer/blueness) has joined ##c++
2016-09-19 08:42:42	-->	PJBoy (~PJBoy_@unaffiliated/pjboy) has joined ##c++
2016-09-19 08:43:06	-->	bigd0g (~bigd0g@ip72-221-88-40.ri.ri.cox.net) has joined ##c++
2016-09-19 08:43:10	<--	kaldoran (~kaldoran@cable-192.222.223.163.electronicbox.net) has quit (Ping timeout: 260 seconds)
2016-09-19 08:44:33	<--	syem (~s@unaffiliated/syem) has quit (Quit: Lost terminal)
2016-09-19 08:45:17	-->	SwiftMatt (~Objective@162.242.94.186) has joined ##c++
2016-09-19 08:45:31	--	PJBoy is now known as PJBoy_
2016-09-19 08:45:48	<--	Haruno (~Haruno@unaffiliated/haruno) has quit (Ping timeout: 272 seconds)
2016-09-19 08:45:50	-->	jargonmonk (jargonmonk@gateway/shell/blinkenshell.org/x-kvecepuxxriikifz) has joined ##c++
2016-09-19 08:46:22	-->	navidr (uid112413@gateway/web/irccloud.com/x-pnemjycdcfwbynmn) has joined ##c++
2016-09-19 08:46:23	--	jargonmonk is now known as jmnk
2016-09-19 08:47:08	-->	zipace (~anon@unaffiliated/zipace) has joined ##c++
2016-09-19 08:47:27	<--	ville (~ville@188-67-98-247.bb.dnainternet.fi) has quit (Quit: Lost terminal)
2016-09-19 08:47:31	-->	CJKay (~Chris@cpc92318-cmbg19-2-0-cust507.5-4.cable.virginm.net) has joined ##c++
2016-09-19 08:47:39	-->	flavi0 (~anon@unaffiliated/flavi0) has joined ##c++
2016-09-19 08:47:49	-->	kaldoran (~kaldoran@cable-192.222.223.163.electronicbox.net) has joined ##c++
2016-09-19 08:47:57	<--	vitimiti (~vitimiti@unaffiliated/vitimiti) has quit (Quit: Meows out)
2016-09-19 08:51:30	-->	ubsan__ (~ubsan@2607:fb90:5430:409f:e489:8a13:56ce:25ce) has joined ##c++
2016-09-19 08:52:11	-->	DEElekgolo (~DEElekgol@2602:30a:2e0e:a7a0:a43b:2ca4:689f:b0cd) has joined ##c++
2016-09-19 08:52:47	<--	ubsan__ (~ubsan@2607:fb90:5430:409f:e489:8a13:56ce:25ce) has quit (Client Quit)
2016-09-19 08:52:48	-->	przemkovv-bis (~przemkovv@d83-37.icpnet.pl) has joined ##c++
2016-09-19 08:52:54	<--	Moose (~moose@unaffiliated/moose) has quit (Quit: Leaving)
2016-09-19 08:53:04	-->	ubsan__ (~ubsan@NYUFWA-WLESSAUTHCLIENTS-01.NATPOOL.NYU.EDU) has joined ##c++
2016-09-19 08:53:08	-->	kw01f (~kw01f@pD9FB2169.dip0.t-ipconnect.de) has joined ##c++
2016-09-19 08:53:08		[08:53]
2016-09-19 08:53:10	-->	vitimiti (~vitimiti@unaffiliated/vitimiti) has joined ##c++
2016-09-19 08:53:29	<--	ubsan_ (~ubsan@NYUFWA-WLESSAUTHCLIENTS-01.NATPOOL.NYU.EDU) has quit (Ping timeout: 248 seconds)
2016-09-19 08:53:42	-->	JoshS (~jshjsh@172.56.16.60) has joined ##c++
2016-09-19 08:53:55	-->	unK_ (~drunK@dynamic-78-8-10-212.ssp.dialog.net.pl) has joined ##c++
2016-09-19 08:54:15	-->	Moose (~moose@unaffiliated/moose) has joined ##c++
2016-09-19 08:54:15	<--	rendar (~I@host92-69-dynamic.171-212-r.retail.telecomitalia.it) has quit (Ping timeout: 260 seconds)
2016-09-19 08:54:27	-->	anothermoron (~anothermo@243.ip-149-56-135.net) has joined ##c++
2016-09-19 08:55:46	<--	jshjsh (~jshjsh@172.56.16.60) has quit (Ping timeout: 244 seconds)
2016-09-19 08:56:23	-->	wnklmnn (~pascal@p4FEF64DC.dip0.t-ipconnect.de) has joined ##c++
2016-09-19 08:56:32	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Remote host closed the connection)
2016-09-19 08:57:07	-->	robmurrer (~robmurrer@75.172.95.19) has joined ##c++
2016-09-19 08:57:15	<--	robmurrer (~robmurrer@75.172.95.19) has quit (Remote host closed the connection)
2016-09-19 08:57:28	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-19 08:58:03	<--	JoshS (~jshjsh@172.56.16.60) has quit (Ping timeout: 240 seconds)
2016-09-19 08:58:29	<--	licnep_ (uid4387@gateway/web/irccloud.com/x-yqmdnykcpmtjgvaa) has quit (Quit: Connection closed for inactivity)
2016-09-19 08:58:33	<--	Moose (~moose@unaffiliated/moose) has quit (Client Quit)
2016-09-19 08:58:38	-->	JoshS (~jshjsh@172.56.16.60) has joined ##c++
2016-09-19 08:59:04	-->	Moose (~moose@unaffiliated/moose) has joined ##c++
2016-09-19 08:59:47	<--	jaafar (~quassel@mobile-166-176-186-180.mycingular.net) has quit (Ping timeout: 248 seconds)
2016-09-19 09:01:03	<--	reveredge (~reveredge@111.119.209.219) has quit (Read error: Connection reset by peer)
2016-09-19 09:01:51	-->	CAPITANOOO (~CAPITANOO@host122-156-static.117-2-b.business.telecomitalia.it) has joined ##c++
2016-09-19 09:02:16	<--	Diyar (~Diyar@unaffiliated/diyar) has quit (Quit: Leaving)
2016-09-19 09:03:03	-->	xnavor (~xnavor@78-70-4-240-no171.business.telia.com) has joined ##c++
2016-09-19 09:03:20	<--	unreal (~unreal@unaffiliated/unreal) has quit (Ping timeout: 265 seconds)
2016-09-19 09:03:57	-->	syem (~s@unaffiliated/syem) has joined ##c++
2016-09-19 09:04:21	-->	zezeon (~Mutter@121.160.146.101) has joined ##c++
2016-09-19 09:05:02	-->	corebob (~corebob@cm-84.213.41.214.getinternet.no) has joined ##c++
2016-09-19 09:08:08	<--	xnavor (~xnavor@78-70-4-240-no171.business.telia.com) has quit (Quit: This computer has gone to sleep)
2016-09-19 09:08:08		[09:08]
2016-09-19 09:08:21	-->	Enhex (~Enhex@82.252.138.77.rev.sfr.net) has joined ##c++
2016-09-19 09:08:56	-->	jaafar (~quassel@50-206-78-205-static.hfc.comcastbusiness.net) has joined ##c++
2016-09-19 09:10:05	-->	pheenx (~pheenx@2a02:8071:b68a:1c00:225:22ff:fee7:7dc5) has joined ##c++
2016-09-19 09:10:11	<--	pheenx (~pheenx@2a02:8071:b68a:1c00:225:22ff:fee7:7dc5) has quit (Remote host closed the connection)
2016-09-19 09:10:20	-->	pheenx (~pheenx@2a02:8071:b68a:1c00:225:22ff:fee7:7dc5) has joined ##c++
2016-09-19 09:10:49	-->	z3r0_ (~z3r0@197.234.219.53) has joined ##c++
2016-09-19 09:11:24	<--	z3r0_ (~z3r0@197.234.219.53) has quit (Max SendQ exceeded)
2016-09-19 09:11:50	-->	z3r0_ (~z3r0@197.234.219.53) has joined ##c++
2016-09-19 09:12:52	<--	przemkovv-bis (~przemkovv@d83-37.icpnet.pl) has quit (Quit: WeeChat 1.5)
2016-09-19 09:12:54	-->	nwkj86 (~nwkj86@144.66.6.51.dyn.plus.net) has joined ##c++
2016-09-19 09:13:34	-->	cruxeternus (~cruxetern@secspeed.com) has joined ##c++
2016-09-19 09:14:00	-->	ouss (696e2a97@gateway/web/freenode/ip.105.110.42.151) has joined ##c++
2016-09-19 09:14:26	<--	ouss (696e2a97@gateway/web/freenode/ip.105.110.42.151) has quit (Client Quit)
2016-09-19 09:14:37	-->	przemkovv-bis (~przemkovv@d83-37.icpnet.pl) has joined ##c++
2016-09-19 09:14:55	<--	Tachyon_ (~Thunderbi@95.76.184.120) has quit (Quit: Tachyon_)
2016-09-19 09:17:15	<--	pheenx (~pheenx@2a02:8071:b68a:1c00:225:22ff:fee7:7dc5) has quit (Quit: Leaving)
2016-09-19 09:17:28	-->	pheenx (~pheenx@2a02:8071:b68a:1c00:225:22ff:fee7:7dc5) has joined ##c++
2016-09-19 09:18:09	<--	elnormous (~elnormous@91.105.17.158) has quit (Remote host closed the connection)
2016-09-19 09:18:28	-->	EmeraldExplorer (uid87039@gateway/web/irccloud.com/x-ukagwhutnnngaqis) has joined ##c++
2016-09-19 09:19:15	-->	Hannibal_Smith (~nico@host215-56-dynamic.44-79-r.retail.telecomitalia.it) has joined ##c++
2016-09-19 09:20:25	-->	TSS_ (~TSS@2a02:2f0a:4030:1218:d250:99ff:fe83:4a0a) has joined ##c++
2016-09-19 09:23:11	<--	zezeon (~Mutter@121.160.146.101) has quit (Quit: Mutter: http://www.mutterirc.com)
2016-09-19 09:23:11		[09:23]
2016-09-19 09:23:31	-->	zezeon (~Mutter@121.160.146.101) has joined ##c++
2016-09-19 09:23:41	-->	rendar (~I@host92-69-dynamic.171-212-r.retail.telecomitalia.it) has joined ##c++
2016-09-19 09:24:01	-->	EvilPenguin (~EvilPengu@2605:e000:6189:9600:e910:2ce2:8492:2b17) has joined ##c++
2016-09-19 09:26:16	<--	skweek (~skweek@2607:fe50:0:810b:a414:1cf9:8eb8:f755) has quit (Ping timeout: 255 seconds)
2016-09-19 09:27:21	-->	Freze_ (~Freze@dhcp-18-189-77-44.dyn.mit.edu) has joined ##c++
2016-09-19 09:28:42	<--	Freze (~Freze@dhcp-18-189-55-163.dyn.MIT.EDU) has quit (Ping timeout: 264 seconds)
2016-09-19 09:28:44	<--	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has quit (Quit: Leaving.)
2016-09-19 09:31:10	-->	Moto-chan (~Rob@unaffiliated/moto-chan) has joined ##c++
2016-09-19 09:31:23	<--	refbot (~MotoBot@unaffiliated/moto-chan/bot/refbot) has quit (Ping timeout: 272 seconds)
2016-09-19 09:31:55	<--	z3r0_ (~z3r0@197.234.219.53) has quit (Quit: Leaving)
2016-09-19 09:32:39	<--	Akahige (~Rob@unaffiliated/moto-chan) has quit (Ping timeout: 272 seconds)
2016-09-19 09:32:43	-->	refbot (~MotoBot@78.16.153.222) has joined ##c++
2016-09-19 09:32:43	<--	refbot (~MotoBot@78.16.153.222) has quit (Changing host)
2016-09-19 09:32:43	-->	refbot (~MotoBot@unaffiliated/moto-chan/bot/refbot) has joined ##c++
2016-09-19 09:32:49	<--	Freze_ (~Freze@dhcp-18-189-77-44.dyn.mit.edu) has quit (Ping timeout: 265 seconds)
2016-09-19 09:33:23	<--	TSS_ (~TSS@2a02:2f0a:4030:1218:d250:99ff:fe83:4a0a) has quit (Ping timeout: 248 seconds)
2016-09-19 09:34:37	CuriousErnestBro	"C++ is a badly designed and ugly language. It would be a shame to use it in Emacs. " -RMS
2016-09-19 09:34:54	<--	zezeon (~Mutter@121.160.146.101) has quit (Remote host closed the connection)
2016-09-19 09:35:28	<--	Ranhir (~Ranhir@46.244.50.236) has quit (Remote host closed the connection)
2016-09-19 09:36:53	<--	SteffanW (~steffanw@ip4da40774.direct-adsl.nl) has quit (Quit: Nettalk6 - www.ntalk.de)
2016-09-19 09:37:16	<--	velco (~chill@vlan-185-78-38-153.comnet.bg) has quit (Quit: Leaving)
2016-09-19 09:38:38	<--	rtkt (~rtkt@ptr-2hj4tbw74k45pzp61238v5cdb.ip6.access.telenet.be) has quit (Ping timeout: 265 seconds)
2016-09-19 09:38:38		[09:38]
2016-09-19 09:39:13	-->	bushido_ (~bushido@unaffiliated/bursihido) has joined ##c++
2016-09-19 09:39:17	<--	EvilPenguin (~EvilPengu@2605:e000:6189:9600:e910:2ce2:8492:2b17) has quit (Ping timeout: 250 seconds)
2016-09-19 09:39:24	m0shbear	CuriousErnestBro: when has RMS been relevant for things beside authoritarian left licenses?
2016-09-19 09:39:28	-->	lsferreira (~ljmf00@bl18-215-204.dsl.telepac.pt) has joined ##c++
2016-09-19 09:39:44	-->	TSS_ (~TSS@86.127.142.242) has joined ##c++
2016-09-19 09:41:32	-->	Sylph-DS (~Sylph@145.136.48.182) has joined ##c++
2016-09-19 09:42:06	-->	mrBen2k2k2k_____ (~logstash@ec2-52-90-90-33.compute-1.amazonaws.com) has joined ##c++
2016-09-19 09:42:28	<--	SHC (~quassel@59.93.127.100) has quit (Remote host closed the connection)
2016-09-19 09:42:48	-->	Vincent7 (~NoIdent@dslb-088-077-121-042.088.077.pools.vodafone-ip.de) has joined ##c++
2016-09-19 09:42:58	<--	nilg (~user@77.70.2.229) has quit (Remote host closed the connection)
2016-09-19 09:43:10	-->	trw (~twa@184.250.132.115) has joined ##c++
2016-09-19 09:43:15	-->	drozdziak1 (~drozdziak@89-70-116-45.dynamic.chello.pl) has joined ##c++
2016-09-19 09:43:19	<--	syem (~s@unaffiliated/syem) has quit (Quit: leaving)
2016-09-19 09:43:25	-->	Freze (~Freze@dhcp-18-189-77-44.dyn.mit.edu) has joined ##c++
2016-09-19 09:43:41	<--	xcor (~xcor@2a02:c7d:c07:7f00:98ee:e5d3:9880:f241) has quit (Quit: No Ping reply in 180 seconds.)
2016-09-19 09:43:53	<--	Anodl (~Anodl@p2003007A2F56E700A51808241D8946AD.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2016-09-19 09:44:26	-->	Anodl (~Anodl@p2003007A2F56E700A51808241D8946AD.dip0.t-ipconnect.de) has joined ##c++
2016-09-19 09:45:03	<--	anothermoron (~anothermo@243.ip-149-56-135.net) has quit (Quit: leaving)
2016-09-19 09:45:24	<--	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has quit (Ping timeout: 265 seconds)
2016-09-19 09:45:56	-->	xcor (~xcor@2a02:c7d:c07:7f00:5dce:636a:ea27:b411) has joined ##c++
2016-09-19 09:46:22	-->	jshjsh (~jshjsh@172.56.16.60) has joined ##c++
2016-09-19 09:47:21	<--	trw (~twa@184.250.132.115) has quit (Ping timeout: 248 seconds)
2016-09-19 09:48:41	-->	zero_byte (~zer0@ip-89-103-110-138.net.upcbroadband.cz) has joined ##c++
2016-09-19 09:49:07	<--	Anodl (~Anodl@p2003007A2F56E700A51808241D8946AD.dip0.t-ipconnect.de) has quit (Ping timeout: 272 seconds)
2016-09-19 09:49:34	<--	JoshS (~jshjsh@172.56.16.60) has quit (Ping timeout: 240 seconds)
2016-09-19 09:49:36	<--	CAPITANOOO (~CAPITANOO@host122-156-static.117-2-b.business.telecomitalia.it) has quit (Quit: CAPITANOOO)
2016-09-19 09:50:42	-->	sadf32f32 (~sadf32f32@68-200-189-166.res.bhn.net) has joined ##c++
2016-09-19 09:50:48	-->	marcofe (~marcofe@31.161.52.18) has joined ##c++
2016-09-19 09:51:04	<--	Hannibal_Smith (~nico@host215-56-dynamic.44-79-r.retail.telecomitalia.it) has quit (Ping timeout: 240 seconds)
2016-09-19 09:52:04	<--	sanct (~sanct@212.35.67.11) has quit (Ping timeout: 240 seconds)
2016-09-19 09:52:16	<--	trfl (~im@62-210-82-123.rev.poneytelecom.eu) has quit (Ping timeout: 244 seconds)
2016-09-19 09:52:32	<--	Crazylemon64 (~Crazylemo@c-98-237-179-255.hsd1.wa.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-19 09:53:25	-->	trfl (~im@62.210.82.123) has joined ##c++
2016-09-19 09:53:58	<--	szulak (uid162164@gateway/web/irccloud.com/x-lvgyegjgjniisgqn) has quit (Quit: Connection closed for inactivity)
2016-09-19 09:53:58		[09:53]
2016-09-19 09:54:53	-->	Enhex_ (~Enhex@82.252.138.77.rev.sfr.net) has joined ##c++
2016-09-19 09:55:04	-->	tristanseifert (~tristanse@128.194.3.4) has joined ##c++
2016-09-19 09:55:11	-->	Crazylemon64 (~Crazylemo@c-98-237-179-255.hsd1.wa.comcast.net) has joined ##c++
2016-09-19 09:55:29	<--	tristanseifert (~tristanse@128.194.3.4) has quit (Client Quit)
2016-09-19 09:55:44	<--	jackhum (uid97400@gateway/web/irccloud.com/x-guoyvfudxmdwqdsh) has quit (Quit: Connection closed for inactivity)
2016-09-19 09:55:54	-->	nopenever (~tourist@rrcs-173-197-104-130.west.biz.rr.com) has joined ##c++
2016-09-19 09:56:18	-->	CAPITANOOO (~CAPITANOO@host122-156-static.117-2-b.business.telecomitalia.it) has joined ##c++
2016-09-19 09:56:22	<--	Guest92333 (~condy@115.28.150.204) has quit (Ping timeout: 250 seconds)
2016-09-19 09:56:34	<--	PJBoy_ (~PJBoy_@unaffiliated/pjboy) has quit (Ping timeout: 240 seconds)
2016-09-19 09:56:38	-->	ville (~ville@176-93-29-161.bb.dnainternet.fi) has joined ##c++
2016-09-19 09:56:40	<--	Freze (~Freze@dhcp-18-189-77-44.dyn.mit.edu) has quit (Ping timeout: 260 seconds)
2016-09-19 09:56:43	-->	nilg (~user@77.70.2.229) has joined ##c++
2016-09-19 09:56:51	-->	PJBoy (~PJBoy_@unaffiliated/pjboy) has joined ##c++
2016-09-19 09:57:03	<--	mrBen2k2k2k_____ (~logstash@ec2-52-90-90-33.compute-1.amazonaws.com) has quit (Max SendQ exceeded)
2016-09-19 09:57:29	<--	symm- (~symm-@86.127.152.32) has quit (Ping timeout: 265 seconds)
2016-09-19 09:57:52	-->	ASOLAr (~ACSolar@2601:18e:c300:1710:88f0:e8d3:77a6:4c9c) has joined ##c++
2016-09-19 09:57:55	<--	Enhex (~Enhex@82.252.138.77.rev.sfr.net) has quit (Ping timeout: 248 seconds)
2016-09-19 09:58:21	<--	simius (~simius@unaffiliated/simius) has quit (Ping timeout: 250 seconds)
2016-09-19 09:58:27	-->	nonroot_ (~nonroot@cpe-76-169-22-126.socal.res.rr.com) has joined ##c++
2016-09-19 09:58:37	k_j	who is rms?
2016-09-19 09:58:44	AbleBacon	why can't user-defined literals be templates? like this: template <typename T> constexpr std::bitset<8> operator"" _bit (T b) { return {b}; }
2016-09-19 09:58:50	ubsan	k_j: a person
2016-09-19 09:59:03	k_j	it's hard to teach old dogs new tricks
2016-09-19 09:59:13	<--	Zunino (~Zunino@201.49.127.2) has left ##c++
2016-09-19 09:59:17	w3z	https://en.wikipedia.org/wiki/Richard_Stallman
2016-09-19 09:59:22	ubsan	!topic
2016-09-19 09:59:24	nolyc	Welcome to ##c++. This channel is for the discussion of standard C++, including potential and future standardizations. This channel is NOT for discussion of: development platforms (OSes and other tools not directly related to C++), non-standard libraries, programs written in C++, other programming languages, a/s/l, or anything else that isn't C++.
2016-09-19 09:59:41	k_j	C is dead
2016-09-19 09:59:48	k_j	it's useful to nothing
2016-09-19 10:00:04	k_j	except to maintaining operating systems
2016-09-19 10:00:10	ville	k_j: either have some c++ material or drop it
2016-09-19 10:00:23	<--	lsferreira (~ljmf00@bl18-215-204.dsl.telepac.pt) has quit (Quit: Leaving)
2016-09-19 10:00:32	-->	bkboggy (~bkboggy@cpe-172-250-147-60.socal.res.rr.com) has joined ##c++
2016-09-19 10:00:59	-->	Anodl (~Anodl@p57B24246.dip0.t-ipconnect.de) has joined ##c++
2016-09-19 10:01:25	<--	MoziM (~nonroot@cpe-76-169-22-126.socal.res.rr.com) has quit (Ping timeout: 265 seconds)
2016-09-19 10:01:26	-->	symm- (~symm-@86.127.152.32) has joined ##c++
2016-09-19 10:01:42	<--	wnklmnn (~pascal@p4FEF64DC.dip0.t-ipconnect.de) has quit (Ping timeout: 276 seconds)
2016-09-19 10:01:54	<--	wallen (~wallen@2a04:1980:3100:1aac:e61d:2dff:feb1:7871) has quit (Ping timeout: 265 seconds)
2016-09-19 10:02:09	-->	EvilPeng1 (~EvilPengu@2605:e000:6189:9600:a508:ca1:1e28:db39) has joined ##c++
2016-09-19 10:02:41	-->	willy23123 (~willy2312@s147-109.psd.vodafone.ie) has joined ##c++
2016-09-19 10:02:42	-->	Anodl1 (~Anodl@213.157.2.74) has joined ##c++
2016-09-19 10:02:47	-->	simius (~simius@unaffiliated/simius) has joined ##c++
2016-09-19 10:03:22	<--	Anodl1 (~Anodl@213.157.2.74) has quit (Client Quit)
2016-09-19 10:03:40	<--	AkaiSora (~quassel@197.17.48.239) has quit (Read error: Connection reset by peer)
2016-09-19 10:04:13	-->	dennisvennink (~dv@92.109.221.191) has joined ##c++
2016-09-19 10:05:46	<--	AnarchyAo (~andrew@8.18.217.202) has quit (Read error: Connection reset by peer)
2016-09-19 10:06:09	<--	bounce (bounce@unaffiliated/bounce) has quit (Ping timeout: 250 seconds)
2016-09-19 10:06:11	-->	wallen (~wallen@2a04:1980:3100:1aac:e61d:2dff:feb1:7871) has joined ##c++
2016-09-19 10:06:20	-->	zacts (~zacts@dragora/developer/zacts) has joined ##c++
2016-09-19 10:06:23	-->	Freze (~Freze@dhcp-18-189-107-137.dyn.MIT.EDU) has joined ##c++
2016-09-19 10:06:37	-->	doppel (~chatzilla@ip70-189-197-158.lv.lv.cox.net) has joined ##c++
2016-09-19 10:07:38	<--	Anodl (~Anodl@p57B24246.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2016-09-19 10:07:56	et	<< 42_question; template <char... X> std::string operator""_question() { return "What do you get when you multiply 6 by 9?"; }
2016-09-19 10:07:57	geordi	What do you get when you multiply 6 by 9?
2016-09-19 10:08:05	et	AbleBacon: but they can be templates ^
2016-09-19 10:08:08	doppel	54.
2016-09-19 10:08:15	<--	idontcarebear (~idontcare@50.35.14.24) has quit (Ping timeout: 244 seconds)
2016-09-19 10:08:34	<--	rhl (~rhl@66.201.45.138) has quit (Ping timeout: 240 seconds)
2016-09-19 10:08:43	AbleBacon	how could i fix the example i pasted in order to make it work?
2016-09-19 10:08:54	k_j	how would you call an object that you pass to an opaque subsystem which fills it with data depending on its status  and gives it back to you, like   Data someobj;   subsytem->process(someobj);
2016-09-19 10:09:01	-->	rhl (~rhl@66.201.45.138) has joined ##c++
2016-09-19 10:09:01		[10:09]
2016-09-19 10:09:17	-->	idontcarebear (~idontcare@50.35.14.24) has joined ##c++
2016-09-19 10:09:41	<--	Leovale (~Leovale@45.72.141.66) has quit (Read error: Connection reset by peer)
2016-09-19 10:09:53	et	AbleBacon: it's unclear what you want, so no chance to make it "work"
2016-09-19 10:09:54	<--	orbiter (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has quit (Ping timeout: 240 seconds)
2016-09-19 10:09:55	k_j	Data biscuit? is it a good name?
2016-09-19 10:10:10	-->	Leovale (~Leovale@45.72.141.66) has joined ##c++
2016-09-19 10:10:24	AbleBacon	i want it to accept a wide range of values as its argument
2016-09-19 10:10:25	<--	CJKay (~Chris@cpc92318-cmbg19-2-0-cust507.5-4.cable.virginm.net) has quit (Read error: Connection reset by peer)
2016-09-19 10:10:33	AbleBacon	like "unsigned char" "unsigned int", etc
2016-09-19 10:10:42	AbleBacon	instead of having to make it "unsigned long long" to cover all the bases
2016-09-19 10:10:49	-->	JoshS (~jshjsh@172.56.16.60) has joined ##c++
2016-09-19 10:10:51	-->	voidah (~voidah@unaffiliated/voider) has joined ##c++
2016-09-19 10:10:54	-->	CJKay (~Chris@cpc92318-cmbg19-2-0-cust507.5-4.cable.virginm.net) has joined ##c++
2016-09-19 10:11:00	<--	ASOLAr (~ACSolar@2601:18e:c300:1710:88f0:e8d3:77a6:4c9c) has quit (Quit: This computer has gone to sleep)
2016-09-19 10:11:30	et	unsigned long long is the only one you need
2016-09-19 10:12:27	AbleBacon	conversion won't be inefficient?
2016-09-19 10:12:39	<--	CJKay (~Chris@cpc92318-cmbg19-2-0-cust507.5-4.cable.virginm.net) has quit (Read error: Connection reset by peer)
2016-09-19 10:12:56	<--	jshjsh (~jshjsh@172.56.16.60) has quit (Ping timeout: 244 seconds)
2016-09-19 10:13:38	et	at compile time?
2016-09-19 10:13:53	<--	willy23123 (~willy2312@s147-109.psd.vodafone.ie) has quit (Quit: Colloquy for iPhone - http://colloquy.mobi)
2016-09-19 10:14:22	-->	mrBen2k2k2k_____ (~logstash@ec2-52-90-90-33.compute-1.amazonaws.com) has joined ##c++
2016-09-19 10:14:37	AbleBacon	oh right... because 'constexpr'
2016-09-19 10:14:42	et	unsigned long and char* and the template I showed are the only valid forms for integer
2016-09-19 10:14:44	w3z	hah...derp
2016-09-19 10:14:46	et	+s
2016-09-19 10:15:27	-->	bitlord (~bitlord@unaffiliated/bitlord) has joined ##c++
2016-09-19 10:15:51	AbleBacon	gotcha thanks
2016-09-19 10:16:22	<--	ejnahc (~hello@chan.je) has quit (Ping timeout: 244 seconds)
2016-09-19 10:16:34	-->	ejnahc (~hello@chan.je) has joined ##c++
2016-09-19 10:16:37	<--	illerucis (~illerucis@2620:10d:c091:200::9:e38) has quit (Remote host closed the connection)
2016-09-19 10:16:57	<--	scai (~scai@p4FF0FFFE.dip0.t-ipconnect.de) has left ##c++ ("[IRSSI]")
2016-09-19 10:17:50	-->	snover (~Adium@unaffiliated/snover) has joined ##c++
2016-09-19 10:17:53	<--	ibouvousaime (~ibouvousa@41.82.12.149) has quit (Ping timeout: 240 seconds)
2016-09-19 10:18:19	-->	Guest92333 (~condy@115.28.150.204) has joined ##c++
2016-09-19 10:18:36	-->	elnormous (~elnormous@91.105.17.158) has joined ##c++
2016-09-19 10:18:47	-->	wnklmnn (~pascal@p4FEF608C.dip0.t-ipconnect.de) has joined ##c++
2016-09-19 10:19:11	-->	P1RATEZ (piratez@unaffiliated/p1ratez) has joined ##c++
2016-09-19 10:20:37	et	doppel: and you should read all 5 books of the hitchhiker trilogy ;)
2016-09-19 10:20:55	doppel	:-P
2016-09-19 10:21:04	<--	rhl (~rhl@66.201.45.138) has quit (Quit: This computer has gone to sleep)
2016-09-19 10:21:52	doppel	don't you mean the hitchhiker pentalogy?
2016-09-19 10:21:57	-->	rhl (~rhl@66.201.45.138) has joined ##c++
2016-09-19 10:21:58	<--	bx2 (~bx2@46.140.123.246) has quit (Remote host closed the connection)
2016-09-19 10:22:06	-->	skweek (~skweek@2607:fe50:0:810b:a414:1cf9:8eb8:f755) has joined ##c++
2016-09-19 10:22:12	<--	step1step2 (~step1step@p54B9261E.dip0.t-ipconnect.de) has quit (Ping timeout: 244 seconds)
2016-09-19 10:22:45	<--	P1RATEZ (piratez@unaffiliated/p1ratez) has quit
2016-09-19 10:23:29	et	it says on the front "The fifth book in the increasingly inaccurately named Hitchhikers Trilogy"
2016-09-19 10:23:57	<--	elnormous (~elnormous@91.105.17.158) has quit (Ping timeout: 272 seconds)
2016-09-19 10:24:00	<--	ubsan__ (~ubsan@NYUFWA-WLESSAUTHCLIENTS-01.NATPOOL.NYU.EDU) has quit (Read error: Connection reset by peer)
2016-09-19 10:24:00	-->	ubsan_ (~ubsan@NYUFWA-WLESSAUTHCLIENTS-01.NATPOOL.NYU.EDU) has joined ##c++
2016-09-19 10:24:16	<--	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has quit (Quit: deeb)
2016-09-19 10:24:16		[10:24]
2016-09-19 10:24:30	-->	ubsan__ (~ubsan@2607:fb90:24ad:cfdd:2163:4c97:fcea:22ef) has joined ##c++
2016-09-19 10:24:50	-->	ted_ (~tehhhd@78-68-207-219-no225.tbcn.telia.com) has joined ##c++
2016-09-19 10:24:58	<--	a3pq51 (~a3pq51@232-25-179-94.pool.ukrtel.net) has quit (Remote host closed the connection)
2016-09-19 10:24:58	<--	ted_ (~tehhhd@78-68-207-219-no225.tbcn.telia.com) has quit (Read error: Connection reset by peer)
2016-09-19 10:25:01	-->	syem (~s@unaffiliated/syem) has joined ##c++
2016-09-19 10:25:21	<--	ubsan__ (~ubsan@2607:fb90:24ad:cfdd:2163:4c97:fcea:22ef) has quit (Client Quit)
2016-09-19 10:25:46	<--	ubsan_ (~ubsan@NYUFWA-WLESSAUTHCLIENTS-01.NATPOOL.NYU.EDU) has quit (Read error: Connection reset by peer)
2016-09-19 10:25:47	-->	ubsan__ (~ubsan@NYUFWA-WLESSAUTHCLIENTS-01.NATPOOL.NYU.EDU) has joined ##c++
2016-09-19 10:26:30	<--	vuoto (~vuoto@80-71-135-9.u.parknet.dk) has quit (Remote host closed the connection)
2016-09-19 10:26:37	doppel	so it even admits its wrongness.
2016-09-19 10:27:39	-->	orbiter (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has joined ##c++
2016-09-19 10:27:51	-->	elnormous (~elnormous@91.105.17.158) has joined ##c++
2016-09-19 10:28:06	<--	mrBen2k2k2k_____ (~logstash@ec2-52-90-90-33.compute-1.amazonaws.com) has quit (Max SendQ exceeded)
2016-09-19 10:28:18	et	you must be fun at parties
2016-09-19 10:28:29	-->	Azusa762 (~roy@89.101.131.177) has joined ##c++
2016-09-19 10:28:34	doppel	:-) dude i am just teasing.
2016-09-19 10:28:40	w3z	dirk gently was also worth reading
2016-09-19 10:28:54	doppel	actually i am very fun at parties.
2016-09-19 10:28:57	w3z	but focus etc
2016-09-19 10:29:04	<--	phinxy (~tehhhd@unaffiliated/phinxy) has quit (Ping timeout: 240 seconds)
2016-09-19 10:29:15	-->	n3n0_G7X (~nemo@24-148-6-27.c3-0.lem-ubr2.chi-lem.il.cable.rcn.com) has joined ##c++
2016-09-19 10:29:42	doppel	particularly if there is booze.
2016-09-19 10:29:54	<--	Enhex_ (~Enhex@82.252.138.77.rev.sfr.net) has quit (Quit: Leaving)
2016-09-19 10:30:27	<--	EvilPeng1 (~EvilPengu@2605:e000:6189:9600:a508:ca1:1e28:db39) has quit (Ping timeout: 248 seconds)
2016-09-19 10:31:42	-->	spindle (~spindle@27-33-39-55.static.tpgi.com.au) has joined ##c++
2016-09-19 10:32:25	<--	wallen (~wallen@2a04:1980:3100:1aac:e61d:2dff:feb1:7871) has quit (Ping timeout: 255 seconds)
2016-09-19 10:32:32	<--	rhl (~rhl@66.201.45.138) has quit (Quit: This computer has gone to sleep)
2016-09-19 10:32:43	<--	nilg (~user@77.70.2.229) has quit (Remote host closed the connection)
2016-09-19 10:32:45	-->	anuxivm (~anuxi@92.185.154.236) has joined ##c++
2016-09-19 10:33:01	-->	illerucis (~illerucis@199.201.65.132) has joined ##c++
2016-09-19 10:34:08	<--	illerucis (~illerucis@199.201.65.132) has quit (Remote host closed the connection)
2016-09-19 10:34:17	<--	symm- (~symm-@86.127.152.32) has quit (Quit: Leaving...)
2016-09-19 10:34:31	-->	illerucis (~illerucis@199.201.65.132) has joined ##c++
2016-09-19 10:35:26	-->	RoKenn (~RoKenn@2001:a61:226e:cb01:6920:4fad:5c4:a1) has joined ##c++
2016-09-19 10:35:29	<--	n3n0_G7X (~nemo@24-148-6-27.c3-0.lem-ubr2.chi-lem.il.cable.rcn.com) has quit (Ping timeout: 240 seconds)
2016-09-19 10:36:00	-->	AkaiSora (~quassel@197.22.128.236) has joined ##c++
2016-09-19 10:37:39	-->	step1step2 (~step1step@p54B914A5.dip0.t-ipconnect.de) has joined ##c++
2016-09-19 10:37:51	<--	raphaelsc (~raphaelsc@189.115.123.240) has quit (Remote host closed the connection)
2016-09-19 10:38:01	-->	StyxAlso (~markg@120.88.147.168) has joined ##c++
2016-09-19 10:38:09	<--	SwiftMatt (~Objective@162.242.94.186) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-19 10:38:14	-->	systemfault (~rcyr@unaffiliated/rcyr) has joined ##c++
2016-09-19 10:38:35	<--	l2esonance (~l2esonanc@c-73-223-132-245.hsd1.ca.comcast.net) has quit (Ping timeout: 244 seconds)
2016-09-19 10:39:10	<--	Blyoff (~Bly@173-243-73-90.pppoe.customer.softcom.net) has quit (Read error: Connection reset by peer)
2016-09-19 10:41:03	<--	UnlikeSuika_mobi (~UnlikeSui@147.46.113.63) has quit (Ping timeout: 260 seconds)
2016-09-19 10:41:03		[10:41]
2016-09-19 10:43:29	<--	einarelen (~user@c-31-208-80-215.cust.bredband2.com) has quit (Read error: Connection reset by peer)
2016-09-19 10:44:48	-->	l_Digi_Dude_l (~l_Digi_Du@2602:30a:c7c3:4370:fbe3:8a06:ff0a:d0f3) has joined ##c++
2016-09-19 10:45:15	-->	UnlikeSuika_mobi (~UnlikeSui@147.46.113.63) has joined ##c++
2016-09-19 10:45:50	<--	saedelaere (~saedelaer@unaffiliated/saedelaere) has quit (Quit: WeeChat 1.5)
2016-09-19 10:46:40	-->	tristanseifert (~tristanse@128.194.3.4) has joined ##c++
2016-09-19 10:47:04	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-19 10:47:28	<--	drozdziak1 (~drozdziak@89-70-116-45.dynamic.chello.pl) has quit (Quit: WeeChat 1.5)
2016-09-19 10:47:32	-->	kaffeetrauma (~Thunderbi@85-22-37-153.ip.dokom21.de) has joined ##c++
2016-09-19 10:47:39	<--	daniel-s (~daniel-s@bla31-1-82-241-231-138.fbx.proxad.net) has quit (Quit: Konversation terminated!)
2016-09-19 10:47:46	<--	kw01f (~kw01f@pD9FB2169.dip0.t-ipconnect.de) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-09-19 10:49:57	<--	bergesenha (~harald@90.149.192.21) has left ##c++
2016-09-19 10:50:49	-->	King_DuckZ (~duckz@cpc97408-hitc6-2-0-cust114.9-2.cable.virginm.net) has joined ##c++
2016-09-19 10:51:33	-->	symm- (~symm-@86.127.152.32) has joined ##c++
2016-09-19 10:52:52	-->	SpaceDanceCJ (~Sasha@37.45.189.125) has joined ##c++
2016-09-19 10:53:08	<--	PJBoy (~PJBoy_@unaffiliated/pjboy) has quit (Quit: ChatZilla 0.9.92 [Firefox 48.0.2/20160823121617])
2016-09-19 10:54:01	-->	riemann (~riemann@ip-222-209.ists.pl) has joined ##c++
2016-09-19 10:55:13	-->	rhl (~rhl@66.201.45.138) has joined ##c++
2016-09-19 10:55:21	<--	Rialynn (~Rialynn@unaffiliated/rialynn) has quit (Quit: ZZZzzz…)
2016-09-19 10:55:58	-->	EricWF (~EricwF@184.151.36.143) has joined ##c++
2016-09-19 10:57:04	King_DuckZ	hi, I have this case in my code http://paste.debian.net/829978/ and I wasn't expecting the compiler to complain this much... if it can't call print() from line 18 why it's not even trying the implicit conversion of B to C?
2016-09-19 10:57:04		[10:57]
2016-09-19 10:57:21	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 244 seconds)
2016-09-19 10:57:38	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-19 10:57:43	<--	jaafar (~quassel@50-206-78-205-static.hfc.comcastbusiness.net) has quit (Ping timeout: 250 seconds)
2016-09-19 10:57:56	-->	ubsan_ (~ubsan@2607:fb90:24ad:cfdd:71f1:6e1c:fd2f:9c70) has joined ##c++
2016-09-19 10:58:05	<--	ubsan_ (~ubsan@2607:fb90:24ad:cfdd:71f1:6e1c:fd2f:9c70) has quit (Client Quit)
2016-09-19 10:58:10	<--	ubsan__ (~ubsan@NYUFWA-WLESSAUTHCLIENTS-01.NATPOOL.NYU.EDU) has quit (Read error: Connection reset by peer)
2016-09-19 10:58:23	-->	ubsan_ (~ubsan@NYUFWA-WLESSAUTHCLIENTS-01.NATPOOL.NYU.EDU) has joined ##c++
2016-09-19 10:58:42	<--	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has quit (Read error: Connection reset by peer)
2016-09-19 10:59:26	-->	wallen (~wallen@2a04:1980:3100:1aac:e61d:2dff:feb1:7871) has joined ##c++
2016-09-19 10:59:31	King_DuckZ	if I comment out the first overload of print then the code works the way I'd expect, so implicit conversion of B->C
2016-09-19 11:00:01	-->	elh9 (~elh9___@110-175-114-60.tpgi.com.au) has joined ##c++
2016-09-19 11:00:01	-->	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has joined ##c++
2016-09-19 11:00:14	<--	rendar (~I@host92-69-dynamic.171-212-r.retail.telecomitalia.it) has quit (Read error: Connection reset by peer)
2016-09-19 11:00:23	w3z	because B privately inherits from A and you have a print for A ....
2016-09-19 11:00:43	<--	ubsan_ (~ubsan@NYUFWA-WLESSAUTHCLIENTS-01.NATPOOL.NYU.EDU) has quit (Read error: Connection reset by peer)
2016-09-19 11:00:44	<--	rhl (~rhl@66.201.45.138) has quit (Quit: This computer has gone to sleep)
2016-09-19 11:00:51	-->	ubsan_ (~ubsan@NYUFWA-WLESSAUTHCLIENTS-01.NATPOOL.NYU.EDU) has joined ##c++
2016-09-19 11:00:53	<--	GinoManWrx (~GinoMan@50-251-53-110-static.hfc.comcastbusiness.net) has quit (Quit: Leaving)
2016-09-19 11:01:38	w3z	an overload was found, the base is inaccessible, end of story
2016-09-19 11:02:06	et	King_DuckZ: accessibility checks happen after overload selection
2016-09-19 11:02:36	<--	marcofe (~marcofe@31.161.52.18) has quit (Quit: Konversation terminated!)
2016-09-19 11:03:03	King_DuckZ	et: ahh I see... so casting to base class has priority over implicit construction of C in overload resolution?
2016-09-19 11:05:12	King_DuckZ	it must be the case since if I change inheritance to public the first overload gets selected
2016-09-19 11:06:03	<--	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has quit (Ping timeout: 276 seconds)
2016-09-19 11:06:48	w3z	http://eel.is/c++draft/over.match.funcs
2016-09-19 11:07:51	-->	AGenericGamer (~AGenericG@cpe-76-88-153-15.hawaii.res.rr.com) has joined ##c++
2016-09-19 11:07:58	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 255 seconds)
2016-09-19 11:08:02	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-19 11:09:21	w3z	hmm, that section doesnt mention that overload matching doesnt take accessibility in to consideration
2016-09-19 11:09:37	<--	EricWF (~EricwF@184.151.36.143) has quit (Quit: EricWF)
2016-09-19 11:09:58	King_DuckZ	w3z: thanks for the link
2016-09-19 11:09:58	-->	kasper93_ (kasper93@unaffiliated/kasper93) has joined ##c++
2016-09-19 11:10:02	-->	rorro (~rorro@h-170-152-58.a163.priv.bahnhof.se) has joined ##c++
2016-09-19 11:10:04	<--	kasper93 (~kasper93@unaffiliated/kasper93) has quit (Disconnected by services)
2016-09-19 11:10:04	--	kasper93_ is now known as kasper93
2016-09-19 11:10:20	-->	velco (~chill@vlan-185-78-38-153.comnet.bg) has joined ##c++
2016-09-19 11:10:25	<--	biberu (~biberu@c-cf2d72d5.08-441-7570702.cust.bredbandsbolaget.se) has quit (Read error: Connection reset by peer)
2016-09-19 11:10:51	<--	Munnu (~timo@91-158-145-247.elisa-laajakaista.fi) has quit (Quit: Follow the white rabbit. Compile the desert of the real. 3301.)
2016-09-19 11:11:05	King_DuckZ	well, clang and gcc agree on this, so either it's like et said or... I hit a double compiler bug?
2016-09-19 11:11:25	w3z	its like et said
2016-09-19 11:11:35	<--	AGenericGamer (~AGenericG@cpe-76-88-153-15.hawaii.res.rr.com) has quit (Client Quit)
2016-09-19 11:11:36	-->	mackal (~mike@pool-96-237-144-12.bstnma.fios.verizon.net) has joined ##c++
2016-09-19 11:11:39	w3z	im just surprised its not explicitly mentionedin that section
2016-09-19 11:12:44	-->	l2esonance (~l2esonanc@c-73-223-132-245.hsd1.ca.comcast.net) has joined ##c++
2016-09-19 11:12:44		[11:12]
2016-09-19 11:12:54	King_DuckZ	it's a bit of a strange rule tho... because print(float) would cause a failed conversion from B to float, so that overload would get discarded... B to A is also failing, altough for a different reason, so I'd expect the overload to also be discarded
2016-09-19 11:13:29	King_DuckZ	a bit inconsistent imho...
2016-09-19 11:13:55	<--	Groscheri (~Dyonisos@unaffiliated/dyonisos) has quit (Quit: Quis custodiet ipsos custodes ?)
2016-09-19 11:14:12	<--	anotherguy (2ec5b8ed@gateway/web/freenode/ip.46.197.184.237) has quit (Ping timeout: 240 seconds)
2016-09-19 11:14:31	-->	Guest92709 (~max@177.242.222.104) has joined ##c++
2016-09-19 11:14:34	<--	hackish (b8a398f5@gateway/web/freenode/ip.184.163.152.245) has quit (Quit: Page closed)
2016-09-19 11:15:48	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 276 seconds)
2016-09-19 11:17:10	-->	Rialynn (~Rialynn@unaffiliated/rialynn) has joined ##c++
2016-09-19 11:17:23	<--	Azusa762 (~roy@89.101.131.177) has quit (Ping timeout: 248 seconds)
2016-09-19 11:17:53	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-19 11:18:15	-->	Azusa762 (~roy@89.101.131.177) has joined ##c++
2016-09-19 11:18:57	<--	skweek (~skweek@2607:fe50:0:810b:a414:1cf9:8eb8:f755) has quit (Ping timeout: 250 seconds)
2016-09-19 11:19:31	<--	Adva (~Hyrule@2a02:810a:12c0:5068:c9d:90db:7a62:c8ba) has quit (Read error: Connection reset by peer)
2016-09-19 11:20:17	<--	a3Dman (~3Dman@unaffiliated/a3dman) has quit (Ping timeout: 240 seconds)
2016-09-19 11:20:29	-->	logan_e_ (uid164592@gateway/web/irccloud.com/x-ezoelgetlupibgjk) has joined ##c++
2016-09-19 11:24:13	<--	golu (~golu@124.40.246.86) has quit (Quit: Leaving)
2016-09-19 11:24:57	<--	jamesaxl (~jamesaxl@176.98.129.195) has quit (Quit: Leaving)
2016-09-19 11:25:23	-->	jshjsh (~jshjsh@172.56.16.60) has joined ##c++
2016-09-19 11:25:45	-->	skweek (~skweek@2607:fe50:0:810b:a414:1cf9:8eb8:f755) has joined ##c++
2016-09-19 11:26:03	King_DuckZ	what I'm trying to achieve in my real-world code is: I have a Vec<float, 3> class and a simd::Vec<float, 3> class that is meant to use simd intrinsics
2016-09-19 11:26:54	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-19 11:27:23	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 265 seconds)
2016-09-19 11:27:25	King_DuckZ	simd::Vec is still a Vec, so it publicly inherits from Vec, and so I get all the .x(), .y() etc for free in simd::Vec
2016-09-19 11:27:51	<--	m_ben (~m_ben@unaffiliated/m-ben/x-5917362) has quit (Ping timeout: 244 seconds)
2016-09-19 11:27:51		[11:27]
2016-09-19 11:28:29	-->	bastien__ (~chatzilla@AMontpellier-652-1-144-26.w81-251.abo.wanadoo.fr) has joined ##c++
2016-09-19 11:28:33	<--	JoshS (~jshjsh@172.56.16.60) has quit (Ping timeout: 272 seconds)
2016-09-19 11:28:39	-->	sphenxes01 (~sphenxes@192-164-144-101.hdsl.highway.telekom.at) has joined ##c++
2016-09-19 11:28:50	<--	kaffeetrauma (~Thunderbi@85-22-37-153.ip.dokom21.de) has quit (Quit: kaffeetrauma)
2016-09-19 11:30:00	King_DuckZ	then I'm trying out something for which I wrote a VecPack class that is constructible from a simd::Vec, and I want simd::Vec()+simd::Vec() to call operator+(VecPack, VecPack)
2016-09-19 11:30:32	King_DuckZ	instead I get the problem where the non-simd operator+ gets called
2016-09-19 11:30:33	-->	Lowl3v3l (~Lowl3v3l@ipservice-092-208-080-178.092.208.pools.vodafone-ip.de) has joined ##c++
2016-09-19 11:30:38	-->	imMute (~immute@about/networking/240.255.255.0/imMute) has joined ##c++
2016-09-19 11:31:00	<--	bastien__ (~chatzilla@AMontpellier-652-1-144-26.w81-251.abo.wanadoo.fr) has left ##c++
2016-09-19 11:31:35	King_DuckZ	now I'm not sure if my architecture is wrong, or what else I can do... short of writing all the 4 combinations of operator+(simd::Vec/VecPack, simd::Vec/VecPack)
2016-09-19 11:31:41	-->	bastien__ (~chatzilla@AMontpellier-652-1-144-26.w81-251.abo.wanadoo.fr) has joined ##c++
2016-09-19 11:31:54	<--	treehug88 (~textual@cpe-68-173-227-135.nyc.res.rr.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-19 11:32:10	-->	xaxxon (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has joined ##c++
2016-09-19 11:32:11	<--	bastien__ (~chatzilla@AMontpellier-652-1-144-26.w81-251.abo.wanadoo.fr) has left ##c++
2016-09-19 11:32:14	<--	sphenxes (~sphenxes@192-164-155-49.hdsl.highway.telekom.at) has quit (Ping timeout: 265 seconds)
2016-09-19 11:32:51	<--	Azusa762 (~roy@89.101.131.177) has quit (Ping timeout: 248 seconds)
2016-09-19 11:33:10	<--	riemann (~riemann@ip-222-209.ists.pl) has quit (Ping timeout: 255 seconds)
2016-09-19 11:33:28	-->	Immune (~Immune@173.55.30.110) has joined ##c++
2016-09-19 11:33:30	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-19 11:33:49	-->	rendar (~I@host92-69-dynamic.171-212-r.retail.telecomitalia.it) has joined ##c++
2016-09-19 11:33:51	hs_	King_DuckZ, did you paste a testcase for your operator+?
2016-09-19 11:34:01	-->	ubsan__ (~ubsan@2607:fb90:24ad:cfdd:23d6:fe93:7199:623c) has joined ##c++
2016-09-19 11:34:09	-->	a3Dman (~3Dman@unaffiliated/a3dman) has joined ##c++
2016-09-19 11:34:11	King_DuckZ	hs_: same case as my previous example really
2016-09-19 11:34:12	<--	ubsan__ (~ubsan@2607:fb90:24ad:cfdd:23d6:fe93:7199:623c) has quit (Client Quit)
2016-09-19 11:34:22	<--	ubsan_ (~ubsan@NYUFWA-WLESSAUTHCLIENTS-01.NATPOOL.NYU.EDU) has quit (Read error: Connection reset by peer)
2016-09-19 11:34:44	King_DuckZ	hs_: this was more of an architecture question
2016-09-19 11:34:47	hs_	I see a previous "example" about some conversion
2016-09-19 11:34:51	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-19 11:35:00	hs_	ok but what is the question exactly?
2016-09-19 11:36:03	-->	theosirian (~theosiria@191.248.121.210) has joined ##c++
2016-09-19 11:36:14	imMute	Is it possible for a compiler/CPU that would make a write to a struct element that is accessed through a volatile pointer to cause a Read-Modify-Write of the *entire* structure?  (semi example code: http://melpon.org/wandbox/permlink/LOvEvcKl500NHK3h )
2016-09-19 11:36:20	<--	Rialynn (~Rialynn@unaffiliated/rialynn) has quit (Quit: ZZZzzz…)
2016-09-19 11:36:44	hs_	and by "simd::Vec() + simd::Vec()" are you specifically talking about an operator+(simd::Vec&&,simd::Vec&&) ?
2016-09-19 11:36:48	hs_	with rvalues?
2016-09-19 11:38:36	King_DuckZ	hs_: no, there is no such overload, there is rather a operator+(VecPack, VecPack), some strategy I came up with for cases like v1 + v2 + ... + vn
2016-09-19 11:38:51	-->	jackhum (uid97400@gateway/web/irccloud.com/x-jajzniitmctrnnok) has joined ##c++
2016-09-19 11:38:57	King_DuckZ	maybe the mistake is that simd::Vec should *not* be a Vec, after all
2016-09-19 11:39:01	King_DuckZ	?
2016-09-19 11:39:05	hs_	King_DuckZ, your question isn't clear
2016-09-19 11:39:15	et	imMute: https://gcc.gnu.org/onlinedocs/gcc/Volatiles.html last paragraph
2016-09-19 11:40:05	King_DuckZ	hs_: ah sorry... it's proving very hard to explain, but I've got an idea and if it works and you're interested I can show you the code (open source on github)
2016-09-19 11:40:31	hs_	interested in what?
2016-09-19 11:41:18	<--	velco (~chill@vlan-185-78-38-153.comnet.bg) has quit (Quit: Leaving)
2016-09-19 11:42:03	King_DuckZ	hs_: in seeing the actual code ;) that might better explain what I was trying to do
2016-09-19 11:42:22	King_DuckZ	hs_: if you're interested = if you're curious to see it
2016-09-19 11:42:26	<--	pheenx (~pheenx@2a02:8071:b68a:1c00:225:22ff:fee7:7dc5) has quit (Ping timeout: 265 seconds)
2016-09-19 11:42:30	-->	riemann (~riemann@ip-222-209.ists.pl) has joined ##c++
2016-09-19 11:42:46	<--	Gathis (~TheBlack@unaffiliated/gathis) has quit (Remote host closed the connection)
2016-09-19 11:42:55	hs_	since I have no real idea what "it" is, it is hard to be curious
2016-09-19 11:42:55		[11:42]
2016-09-19 11:43:24	-->	velco (~chill@vlan-185-78-38-153.comnet.bg) has joined ##c++
2016-09-19 11:43:25	-->	m_ben (~m_ben@unaffiliated/m-ben/x-5917362) has joined ##c++
2016-09-19 11:43:33	King_DuckZ	hs_: https://github.com/KingDuckZ/vectorwrapper/
2016-09-19 11:44:34	King_DuckZ	hs_: I'm adding classes for taking advantage of simd instructions on cpus that support sse3
2016-09-19 11:44:52	<--	GrayArea (~GrayArea@cpc73846-dals21-2-0-cust384.20-2.cable.virginm.net) has quit (Ping timeout: 244 seconds)
2016-09-19 11:45:01	King_DuckZ	hs_: neon later, if I can get sse3 to work :)
2016-09-19 11:46:42	<--	symm- (~symm-@86.127.152.32) has quit (Ping timeout: 265 seconds)
2016-09-19 11:47:47	<--	Appleman1234 (~Appleman1@KD119104045198.au-net.ne.jp) has quit (Ping timeout: 248 seconds)
2016-09-19 11:47:48	imMute	et: so the bitfields make sense, but the struct that I'm working with is 14*8 bytes long, so "adjacent bit-fields" shouldn't cover the entire struct, nor do any of the bitfields cross an 8-byte boundary...
2016-09-19 11:47:54	-->	Gluesticky (~nobody@unaffiliated/gluesticky) has joined ##c++
2016-09-19 11:48:18	hs_	King_DuckZ, I don't see the value in wrapping the vector itself..
2016-09-19 11:48:34	imMute	et: I was expecting the RMW for all the elements in a single 8-byte group (since you *have* to do bitfields at all), though.
2016-09-19 11:48:36	hs_	why don't you just look into iterator adaptors or something (if that's even necessary)?
2016-09-19 11:49:05	<--	forgottenone (~forgotten@176.234.125.129) has quit (Ping timeout: 240 seconds)
2016-09-19 11:49:27	<--	zero_byte (~zer0@ip-89-103-110-138.net.upcbroadband.cz) has quit (Ping timeout: 272 seconds)
2016-09-19 11:49:52	w3z	whats the point of allowing functions to be marked constexpr if they cant be used to initialize a constexpr ...
2016-09-19 11:50:07	w3z	{} constexpr int f(int& r) {return r;}
2016-09-19 11:50:08	geordi	<no output>
2016-09-19 11:50:24	hs_	imMute, if you have a volatile foo why wouldn't a foo access be treated as the volatile access? forget that it eventually results in a member access
2016-09-19 11:50:39	<--	plee (~kurt@89.10.219.180) has quit (Read error: Connection reset by peer)
2016-09-19 11:50:51	w3z	itll of course error correctly when trying to use it incorrectly, but, it should error up front
2016-09-19 11:51:07	imMute	hs_: that.... makes sense actually.  so rather than marking the entire struct volatile, I need to make each element volatile.
2016-09-19 11:51:18	-->	alyptik (~alyptik@unaffiliated/alyptik) has joined ##c++
2016-09-19 11:51:18	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || https://isocpp.org/faq || pastes: http://melpon.org/wandbox"
2016-09-19 11:51:18	--	Topic set by V-ille (~ville@81-175-149-170.bb.dnainternet.fi) on Fri, 18 Sep 2015 07:13:01
2016-09-19 11:51:18	--	Channel ##c++: 957 nicks (0 ops, 0 voices, 957 normals)
2016-09-19 11:51:22	<--	Rickmasta (~Rick@pool-96-246-90-176.nycmny.fios.verizon.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-19 11:51:22	-->	SorcererX (~SorcererX@cm-84.212.210.160.getinternet.no) has joined ##c++
2016-09-19 11:51:22	-->	CoolBreeze (~CoolBreez@87-228-34.netrunf.cytanet.com.cy) has joined ##c++
2016-09-19 11:51:24	-->	Rabbit_ (~Rabbit@ec2-52-41-150-102.us-west-2.compute.amazonaws.com) has joined ##c++
2016-09-19 11:51:24	-->	symm- (~symm-@86.127.152.32) has joined ##c++
2016-09-19 11:51:25	-->	JSharpe (~JSharpe@104.238.169.117) has joined ##c++
2016-09-19 11:51:27	-->	CrypticSquared (~CrypticS_@unaffiliated/crypticsquared) has joined ##c++
2016-09-19 11:51:28	-->	brendel (~brice@LAubervilliers-656-1-215-246.w217-128.abo.wanadoo.fr) has joined ##c++
2016-09-19 11:51:28	-->	cYmen (~quassel@squint.a-oben.org) has joined ##c++
2016-09-19 11:51:29	-->	ZMatt2 (~ZMatt2@host80-146-dynamic.59-82-r.retail.telecomitalia.it) has joined ##c++
2016-09-19 11:51:30	-->	iterati (~vangelis@79.103.112.83.dsl.dyn.forthnet.gr) has joined ##c++
2016-09-19 11:51:30	-->	Aph3x-WL (Aph3x@2600:3c03::f03c:91ff:fe6e:5ed9) has joined ##c++
2016-09-19 11:51:30	-->	Phlow (~Kiss@199.44.8.162) has joined ##c++
2016-09-19 11:51:30	-->	Magnetar (~Mike@pool-108-48-114-242.washdc.fios.verizon.net) has joined ##c++
2016-09-19 11:51:30	-->	mindands1 (~mindandsk@50-232-5-123-static.hfc.comcastbusiness.net) has joined ##c++
2016-09-19 11:51:30	-->	Moonlight-Angel (~Moonlight@eth-east-parth2-46-193-65-193.wb.wifirst.net) has joined ##c++
2016-09-19 11:51:31	-->	pioiytr_ (~pioiytr@c-73-51-13-55.hsd1.il.comcast.net) has joined ##c++
2016-09-19 11:51:31	-->	zhangxaochen (~zhangxaoc@183.157.160.51) has joined ##c++
2016-09-19 11:51:33	-->	oftc_ftw (~oftc_ftw@unaffiliated/oftc-ftw/x-3443471) has joined ##c++
2016-09-19 11:51:33	-->	re1 (~reiser@178.220.4.176) has joined ##c++
2016-09-19 11:51:34	-->	lakin (~lakin@d108-173-185-33.abhsia.telus.net) has joined ##c++
2016-09-19 11:51:35	-->	pingwindyktator (~pingwindy@pingwindyktator.tk) has joined ##c++
2016-09-19 11:51:35	-->	wds (~wds@cpe-72-227-132-127.nyc.res.rr.com) has joined ##c++
2016-09-19 11:51:37	--	Nixx is now known as Guest22228
2016-09-19 11:51:38	-->	Olipro (~Olipro@uncyclopedia/pdpc.21for7.olipro) has joined ##c++
2016-09-19 11:51:38	-->	voidah (~voidah@unaffiliated/voider) has joined ##c++
2016-09-19 11:51:41	<--	iterati (~vangelis@79.103.112.83.dsl.dyn.forthnet.gr) has quit (Max SendQ exceeded)
2016-09-19 11:51:44	--	SorcererX is now known as Guest57069
2016-09-19 11:51:55	-->	dmiles (dmiles@c-24-20-102-245.hsd1.wa.comcast.net) has joined ##c++
2016-09-19 11:52:00	<--	CAPITANOOO (~CAPITANOO@host122-156-static.117-2-b.business.telecomitalia.it) has quit (Quit: CAPITANOOO)
2016-09-19 11:52:01	hs_	w3z, as opposed to f(int const&)? hrmm
2016-09-19 11:52:03	--	Channel created on Fri, 14 Sep 2001 17:15:35
2016-09-19 11:52:10	-->	TMM (~hp@fsf/member/pdpc.professional.tmm) has joined ##c++
2016-09-19 11:52:11	-->	DarkSkyes (~DarkSkyes@unaffiliated/darkskyes) has joined ##c++
2016-09-19 11:52:12	-->	altyr (~nobody@unaffiliated/altyr) has joined ##c++
2016-09-19 11:52:17	-->	Polymorphism (~Astoundin@unaffiliated/polymorphism) has joined ##c++
2016-09-19 11:52:25	-->	pa (~pa@unaffiliated/pa) has joined ##c++
2016-09-19 11:52:27	-->	iterati (~vangelis@79.103.112.83.dsl.dyn.forthnet.gr) has joined ##c++
2016-09-19 11:52:46	-->	justanotheruser (~justanoth@unaffiliated/justanotheruser) has joined ##c++
2016-09-19 11:53:30	<--	ghostlight (~ghostligh@ec2-54-187-97-144.us-west-2.compute.amazonaws.com) has quit (Ping timeout: 244 seconds)
2016-09-19 11:53:33	w3z	itll even let you:
2016-09-19 11:53:34	w3z	{} constexpr int f(int& r) {return r++;}
2016-09-19 11:53:35	geordi	<no output>
2016-09-19 11:53:52	<--	navidr (uid112413@gateway/web/irccloud.com/x-pnemjycdcfwbynmn) has quit (Ping timeout: 255 seconds)
2016-09-19 11:53:55	-->	Rickmasta (~Rick@pool-96-246-90-176.nycmny.fios.verizon.net) has joined ##c++
2016-09-19 11:54:00	-->	hosttor (~user@c-73-68-219-125.hsd1.ma.comcast.net) has joined ##c++
2016-09-19 11:54:14	-->	bitonic (sid61915@gateway/web/irccloud.com/x-umxlmhftdstbpdpa) has joined ##c++
2016-09-19 11:54:17	<--	mehdi__ (sid15567@gateway/web/irccloud.com/x-wvrsgsmkgqqolqlg) has quit (Ping timeout: 248 seconds)
2016-09-19 11:54:31	<--	jackhum (uid97400@gateway/web/irccloud.com/x-jajzniitmctrnnok) has quit (Ping timeout: 265 seconds)
2016-09-19 11:54:54	-->	jeff0x68 (~jimi@50-196-23-215-static.hfc.comcastbusiness.net) has joined ##c++
2016-09-19 11:55:00	<--	wnklmnn (~pascal@p4FEF608C.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2016-09-19 11:55:07	hs_	{ constexpr int i = f(x); } struct foo { }; foo x; constexpr int f(foo&) {return 6;} // w3z -- maybe just to preserve parity with these cases
2016-09-19 11:55:08	geordi	<no output>
2016-09-19 11:55:38	-->	jackhum (uid97400@gateway/web/irccloud.com/x-ymkkzlforsrqrvbl) has joined ##c++
2016-09-19 11:55:39	-->	regedit (uid150526@gateway/web/irccloud.com/x-ccwpkmzsngndwxcj) has joined ##c++
2016-09-19 11:55:40	<--	ambro718 (~ambro@unaffiliated/ambro718) has quit (Ping timeout: 260 seconds)
2016-09-19 11:55:43	hs_	I don't know if there are any rules precluding a function from being constexpr on the grounds that it will not ever be constexpr evaluable
2016-09-19 11:55:55	-->	Nilesh_ (uid116340@gateway/web/irccloud.com/x-dpskqufqxwwptypa) has joined ##c++
2016-09-19 11:55:55	-->	blackbird_ (~blackbird@197.1.103.129) has joined ##c++
2016-09-19 11:56:15	hs_	apart from satisfying the ordinary constraints (though maybe your position is that those constraints ought to rule out the int& parameter..)
2016-09-19 11:57:02	-->	navidr (uid112413@gateway/web/irccloud.com/x-jpoxmpfbrvhjkrvz) has joined ##c++
2016-09-19 11:57:30	-->	mehdi__ (sid15567@gateway/web/irccloud.com/x-rkpewmuxccapcawd) has joined ##c++
2016-09-19 11:57:48	w3z	there are no such rules, and yes it preserves using the function in a non constexpr use, but yes, im contending that its silly to allow it to be marked constexpr if it can never be used in a constexpr case :)
2016-09-19 11:57:51	<--	blackbird1 (~blackbird@197.0.2.245) has quit (Read error: Connection reset by peer)
2016-09-19 11:58:13	w3z	/gripe
2016-09-19 11:58:13		[11:58]
2016-09-19 11:58:20	-->	EmeraldExplorer (uid87039@gateway/web/irccloud.com/x-vcornxpihwlnwzwf) has joined ##c++
2016-09-19 11:59:41	<--	illerucis (~illerucis@199.201.65.132) has quit (Remote host closed the connection)
2016-09-19 12:00:25	V-ille	w3z: what makes you think your f() can never be used in a constexpr case?
2016-09-19 12:00:50	-->	Crazylemon_x86 (~Crazylemo@c-98-237-179-255.hsd1.wa.comcast.net) has joined ##c++
2016-09-19 12:01:04	w3z	because it modifies the argument?
2016-09-19 12:01:21	V-ille	geordi: constexpr int f(int& r) {return r++;} constexpr int g() {int x = 42; f(x); return x;} int main() {constexpr int z = g(); cout << z;} // w3z, so what?
2016-09-19 12:01:22	geordi	43
2016-09-19 12:02:02	w3z	hmm
2016-09-19 12:02:02	King_DuckZ	I seem to be hitting one problem after the other tonight http://paste.debian.net/830006/ so imlicit constructor is not considered if template substitution is involved first? do I understand right?
2016-09-19 12:02:15	<--	doppel (~chatzilla@ip70-189-197-158.lv.lv.cox.net) has quit (Quit: ChatZilla 0.9.92 [Firefox 48.0.2/20160823121617])
2016-09-19 12:02:22	w3z	{} constexpr int f(int& r) {return r++;} int x=0; constexpr c=f(x);
2016-09-19 12:02:22	geordi	error: 'c' does not name a type
2016-09-19 12:02:35	w3z	{} constexpr int f(int& r) {return r++;} int x=0; constexpr int c=f(x);
2016-09-19 12:02:36	geordi	error: the value of 'x' is not usable in a constant expression
2016-09-19 12:02:53	w3z	so, it can be used within the context of another constexpr function, hmm
2016-09-19 12:03:06	-->	nemesit|znc (~nemesit@2a01:488:66:1000:5bfa:72aa:0:1) has joined ##c++
2016-09-19 12:03:11	-->	bounce (bounce@unaffiliated/bounce) has joined ##c++
2016-09-19 12:03:17	hs_	King_DuckZ, you should paste your examples to a compilable site, like melpon.org/wandbox
2016-09-19 12:03:20	<--	StyxAlso (~markg@120.88.147.168) has quit (Quit: StyxAlso)
2016-09-19 12:03:27	-->	hasanin (hasanin@gateway/shell/panicbnc/x-enbenczskzvivjaa) has joined ##c++
2016-09-19 12:04:06	-->	nealshire (~Nealshire@unaffiliated/nealshire) has joined ##c++
2016-09-19 12:04:11	-->	Appleman1234 (~Appleman1@KD119104047049.au-net.ne.jp) has joined ##c++
2016-09-19 12:04:13	-->	glenfe (~glen@ool-18b8d08e.dyn.optonline.net) has joined ##c++
2016-09-19 12:04:14	<--	glenfe (~glen@ool-18b8d08e.dyn.optonline.net) has quit (Changing host)
2016-09-19 12:04:14	-->	glenfe (~glen@unaffiliated/glenfe) has joined ##c++
2016-09-19 12:04:36	w3z	ok, i can buy that, makes sense
2016-09-19 12:04:48	-->	PFault (~PFault@2a01:4f8:130:14b3::2) has joined ##c++
2016-09-19 12:04:54	<--	Markow (~Markow@176.122.215.103) has quit (Remote host closed the connection)
2016-09-19 12:05:02	King_DuckZ	hs_: http://melpon.org/wandbox/permlink/38xyS9BevhtncNAJ
2016-09-19 12:05:04	-->	stowelly (~stowelly@2a01:4f8:160:51eb::2) has joined ##c++
2016-09-19 12:05:07	<--	Sylph-DS (~Sylph@145.136.48.182) has quit (Read error: Connection reset by peer)
2016-09-19 12:05:09	<--	blackwind_123 (~IceChat9@117.192.137.83) has quit (Ping timeout: 265 seconds)
2016-09-19 12:05:33	-->	bx2 (~bx2@46.140.123.246) has joined ##c++
2016-09-19 12:05:51	-->	myhau (~myhau@89-64-1-66.dynamic.chello.pl) has joined ##c++
2016-09-19 12:05:54	<--	AkaiSora (~quassel@197.22.128.236) has quit (Ping timeout: 264 seconds)
2016-09-19 12:05:58	-->	Pseudocrat (~quassel@173.57.113.91) has joined ##c++
2016-09-19 12:05:58	<--	Pseudocrat (~quassel@173.57.113.91) has quit (Changing host)
2016-09-19 12:05:59	-->	Pseudocrat (~quassel@unaffiliated/pseudocrat) has joined ##c++
2016-09-19 12:06:29	<--	satifant (~sati@unaffiliated/satifant) has quit (Quit: Verlassend)
2016-09-19 12:06:37	-->	blackwind_123 (~IceChat9@117.192.133.113) has joined ##c++
2016-09-19 12:06:54	-->	rhl (~rhl@66.201.45.138) has joined ##c++
2016-09-19 12:07:25	hs_	King_DuckZ, that's right then, it cannot consider conversions until that T is filled in, and if you call the templated function like that (without specifying template parameters) then it needs to deduce them from the parameter
2016-09-19 12:07:46	hs_	King_DuckZ, notice that print<int>(a) works
2016-09-19 12:07:51	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-19 12:07:59	-->	Wlosw3 (~Wlosw3@AAubervilliers-151-1-24-153.w83-114.abo.wanadoo.fr) has joined ##c++
2016-09-19 12:08:09	hs_	because then you have print(B<int>) specified and there is a conversion from a to a B<int>
2016-09-19 12:08:27	<--	theosirian (~theosiria@191.248.121.210) has quit (Ping timeout: 265 seconds)
2016-09-19 12:09:05	King_DuckZ	hmmm thanks hs_, this is getting harder than I thought
2016-09-19 12:09:10	King_DuckZ	harder and more interesting :)
2016-09-19 12:10:05	<--	bx2 (~bx2@46.140.123.246) has quit (Ping timeout: 250 seconds)
2016-09-19 12:10:15	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-19 12:10:31	<--	vicenteH (~user@96.235.15.37.dynamic.jazztel.es) has quit (Ping timeout: 255 seconds)
2016-09-19 12:10:53	-->	ghostlight (~ghostligh@ec2-54-187-97-144.us-west-2.compute.amazonaws.com) has joined ##c++
2016-09-19 12:10:55	-->	EvilPenguin (~EvilPengu@2605:e000:6189:9600:3949:15ac:5ddb:4c54) has joined ##c++
2016-09-19 12:10:58	<--	Crazylemon64 (~Crazylemo@c-98-237-179-255.hsd1.wa.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-19 12:12:08	King_DuckZ	so in my real case, where I have operator+ and it's impractical for client code to specify the template type explicitly, am I left with the only choice of implementing operator+(A,A), operator+(A,B), operator+(B,A), operator+(B,B) ?
2016-09-19 12:12:19	<--	corebob (~corebob@cm-84.213.41.214.getinternet.no) has quit (Quit: WeeChat 1.5)
2016-09-19 12:12:33	<--	Crazylemon_x86 (~Crazylemo@c-98-237-179-255.hsd1.wa.comcast.net) has quit (Remote host closed the connection)
2016-09-19 12:12:35	King_DuckZ	...and operator-(A,A) and so on...?
2016-09-19 12:12:48	-->	Hobbyboy (Hobbyboy@gateway/shell/panicbnc/x-zzwupfnhmxsatzmf) has joined ##c++
2016-09-19 12:12:59	<--	syem (~s@unaffiliated/syem) has quit (Quit: Lost terminal)
2016-09-19 12:13:36	King_DuckZ	actually A<T> and B<T>
2016-09-19 12:13:36		[12:13]
2016-09-19 12:13:42	<--	RoKenn (~RoKenn@2001:a61:226e:cb01:6920:4fad:5c4:a1) has quit (Quit: NSA proxy service interrupted)
2016-09-19 12:13:45	-->	k^ (k@91.219.237.227) has joined ##c++
2016-09-19 12:13:59	<--	Rickmasta (~Rick@pool-96-246-90-176.nycmny.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-19 12:14:18	<--	blackwind_123 (~IceChat9@117.192.133.113) has quit (Ping timeout: 264 seconds)
2016-09-19 12:14:27	-->	blackbird1 (~blackbird@197.3.251.98) has joined ##c++
2016-09-19 12:15:22	hs_	{ X::foo f{5}; X::bar g{6}; cout << f + g; } namespace X { struct foo { int x{}; }; struct bar { int x{}; };  template <typename T, typename R> int operator+(T t, R r) { return t.x + r.x; } } // King_DuckZ
2016-09-19 12:15:23	geordi	11
2016-09-19 12:15:48	-->	mrphantom (mrphantom@gateway/shell/kde/x-whifnbgyzykqcetg) has joined ##c++
2016-09-19 12:15:56	-->	blackwind_123 (~IceChat9@117.192.133.113) has joined ##c++
2016-09-19 12:16:00	hs_	{ X::foo f{5}; X::bar g{6}; cout << f + g, g + f, f + f, g + g; } namespace X { struct foo { int x{}; }; struct bar { int x{}; };  template <typename T, typename R> int operator+(T t, R r) { return t.x + r.x; } } // more elaborate
2016-09-19 12:16:01	geordi	11, 11, 10, 12
2016-09-19 12:16:14	-->	dau (matthias@ipv6.nebelfront.org) has joined ##c++
2016-09-19 12:16:17	hs_	that takes advantage of adl though
2016-09-19 12:16:23	-->	mitch0 (~mitch@62-165-210-190.pool.digikabel.hu) has joined ##c++
2016-09-19 12:17:08	-->	P1RATEZ (piratez@unaffiliated/p1ratez) has joined ##c++
2016-09-19 12:17:09	 *	King_DuckZ looks at the code
2016-09-19 12:17:14	-->	ap4y (~user@210.54.39.82) has joined ##c++
2016-09-19 12:17:15	<--	blackbird_ (~blackbird@197.1.103.129) has quit (Ping timeout: 260 seconds)
2016-09-19 12:17:58	-->	akolar (AH3e@gateway/shell/firrre/x-ybukykykfzkctaka) has joined ##c++
2016-09-19 12:18:33	<--	Kirrahe (~kirrahe@ip51cc4257.adsl-surfen.hetnet.nl) has quit (Ping timeout: 240 seconds)
2016-09-19 12:18:36	<--	NoShlomo (~NoShlomo@90.74.151.136) has quit (Quit: NoShlomo)
2016-09-19 12:19:10	<--	rorro (~rorro@h-170-152-58.a163.priv.bahnhof.se) has quit (Ping timeout: 265 seconds)
2016-09-19 12:19:27	-->	SoundlesDev (~soundless@2601:282:8001:11b5:d25:5d53:1d98:302) has joined ##c++
2016-09-19 12:19:32	-->	zwliew (uid161395@gateway/web/irccloud.com/x-ycpiokulecccfgci) has joined ##c++
2016-09-19 12:19:43	<--	occamsblazer (~occamsbla@131.228.197.2) has quit (Quit: Ad somnum per aspera)
2016-09-19 12:20:08	SoundlesDev	anyone here have experience usinf sfml with visual studio?
2016-09-19 12:20:08	<--	Meszias_ (~quassel@2804:7f1:2080:2112:f021:bf6c:1dc0:240d) has quit (Remote host closed the connection)
2016-09-19 12:20:18	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 264 seconds)
2016-09-19 12:20:18	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-19 12:20:33	SoundlesDev	using*
2016-09-19 12:20:45	w3z	at the risk of spamming the same code repeatedly, hs_ take a look at my array initializer from the other day, tear it apart, considering submitting it to the boost list http://melpon.org/wandbox/permlink/Vn2xFGVIzY5Znp7K
2016-09-19 12:21:02	King_DuckZ	hs_: I think I see what you mean there... I do have a very limited namespace where my classes lie, let me try it
2016-09-19 12:21:14	w3z	!give SoundlesDev general
2016-09-19 12:21:16	nolyc	SoundlesDev: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2016-09-19 12:21:38	<--	glad (~quassel@dynamic-vpdn-93-125-63-166.telecom.by) has quit (Remote host closed the connection)
2016-09-19 12:22:40	<--	jeff0x68 (~jimi@50-196-23-215-static.hfc.comcastbusiness.net) has left ##c++
2016-09-19 12:22:57	<--	kimundi (~Kimundi@p57BC6A98.dip0.t-ipconnect.de) has quit (Ping timeout: 244 seconds)
2016-09-19 12:23:25	-->	zagabar (~zagabar@unaffiliated/zagabar) has joined ##c++
2016-09-19 12:23:54	<--	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has quit (Ping timeout: 264 seconds)
2016-09-19 12:24:15	<--	riemann (~riemann@ip-222-209.ists.pl) has quit (Quit: Leaving)
2016-09-19 12:24:59	-->	Rickmasta (~Rick@pool-96-246-90-176.nycmny.fios.verizon.net) has joined ##c++
2016-09-19 12:25:25	-->	phinxy (~tehhhd@unaffiliated/phinxy) has joined ##c++
2016-09-19 12:26:02	<--	MrP[Home] (~Palsson@c-a46fe555.06-213-6e6b701.cust.bredbandsbolaget.se) has quit (Read error: Connection reset by peer)
2016-09-19 12:28:19	King_DuckZ	hs_: it works very well thanks! :) now it's time for me to check the generated assembly :)
2016-09-19 12:29:14	SoundlesDev	thanks!
2016-09-19 12:29:14		[12:29]
2016-09-19 12:29:35	-->	Azusa762 (~roy@2a02:8084:2ac1:ef00:f279:59ff:fe17:ce37) has joined ##c++
2016-09-19 12:29:43	-->	UnripeSuica_mobi (~UnlikeSui@147.46.113.63) has joined ##c++
2016-09-19 12:29:48	<--	UnlikeSuika_mobi (~UnlikeSui@147.46.113.63) has quit (Ping timeout: 265 seconds)
2016-09-19 12:30:17	-->	xx (~xx___@176.233.53.57) has joined ##c++
2016-09-19 12:31:15	<--	Vuks (~Vuks@unaffiliated/vuks69) has quit (Ping timeout: 260 seconds)
2016-09-19 12:32:07	-->	iBleizo (~iBleizo@unaffiliated/ibleizo) has joined ##c++
2016-09-19 12:32:33	<--	wolfcub (~henrique_@177.55.195.40) has quit (Ping timeout: 240 seconds)
2016-09-19 12:33:03	-->	d34df00d (~d34df00d@pool-100-2-1-240.nycmny.fios.verizon.net) has joined ##c++
2016-09-19 12:33:04	<--	myhau (~myhau@89-64-1-66.dynamic.chello.pl) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-09-19 12:34:41	<--	jrolland-home (~jeff@cpe-75-86-41-3.wi.res.rr.com) has quit (Quit: Leaving)
2016-09-19 12:35:15	<--	strelox (~user@p200300754F3E21003D549C124847E5F4.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-09-19 12:35:44	<--	ap4y (~user@210.54.39.82) has quit (Remote host closed the connection)
2016-09-19 12:36:01	<--	xx (~xx___@176.233.53.57) has quit (Quit: Leaving)
2016-09-19 12:36:23	-->	ap4y (~user@210.54.39.82) has joined ##c++
2016-09-19 12:36:33	d34df00d	Hi!
2016-09-19 12:36:48	hs_	http://melpon.org/wandbox/permlink/PtgXNv6jG2ptMGk0 // w3z, had to try my own version just to see what's at stake
2016-09-19 12:37:13	d34df00d	Let's say I have the std::cout and some other output stream. Is it possible to swap their rdbufs so that writes to cout will actually write to that output stream?
2016-09-19 12:37:13	hs_	I think the conversion is interesting..
2016-09-19 12:37:19	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-19 12:37:52	<--	unK_ (~drunK@dynamic-78-8-10-212.ssp.dialog.net.pl) has quit (Quit: KVIrc 4.3.1 Aria http://www.kvirc.net/)
2016-09-19 12:37:57	-->	Gabe__ (~Gabe@75-170-43-116.eugn.qwest.net) has joined ##c++
2016-09-19 12:38:48	<--	Wlosw3 (~Wlosw3@AAubervilliers-151-1-24-153.w83-114.abo.wanadoo.fr) has quit (Read error: Connection reset by peer)
2016-09-19 12:38:50	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-19 12:39:10	w3z	i had a version that took the element count explicitly at first also
2016-09-19 12:39:22	-->	c0c0 (~coco@53541674.cm-6-5a.dynamic.ziggo.nl) has joined ##c++
2016-09-19 12:40:00	<--	SpaceDanceCJ (~Sasha@37.45.189.125) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-09-19 12:40:31	<--	zagabar (~zagabar@unaffiliated/zagabar) has quit (Quit: WeeChat 1.5)
2016-09-19 12:40:34	w3z	and with a constant initializer, ended up with the lambda and the templated conversion function, i see your version also forgoes the recursive template in favor of index_sequence and pack expansion
2016-09-19 12:40:40	-->	Betal (~Betal@unaffiliated/betal) has joined ##c++
2016-09-19 12:40:52	-->	fearnothing (~nothing@unaffiliated/fearnothing) has joined ##c++
2016-09-19 12:41:13	<--	Valdaris (~Gabe@75-170-43-116.eugn.qwest.net) has quit (Ping timeout: 244 seconds)
2016-09-19 12:43:20	w3z	your use of decltype(f()) also runs in to the implicit conversion issue, that is for an array<S,N> the function has to return S explicitly
2016-09-19 12:43:39	-->	sphenxes02 (~sphenxes@178-190-233-32.adsl.highway.telekom.at) has joined ##c++
2016-09-19 12:43:56	w3z	i went back and forth on deciding if I needed the T parameter
2016-09-19 12:44:13	<--	navidr (uid112413@gateway/web/irccloud.com/x-jpoxmpfbrvhjkrvz) has quit (Quit: Connection closed for inactivity)
2016-09-19 12:44:25	V-ille	d34df00d: I expect so, yes
2016-09-19 12:44:25		[12:44]
2016-09-19 12:44:37	V-ille	the stringstream test I wrote for it is quite icky
2016-09-19 12:44:39	V-ille	geordi: { std::ostringstream foo; std::ostringstream bar;  auto x = foo.rdbuf(); auto y = bar. rdbuf(); foo.ostream::rdbuf((streambuf*)y); bar.ostream::rdbuf((streambuf*)x); foo << "foo"; bar << "bar"; cout << foo.str() << " " << bar.str(); }
2016-09-19 12:44:40	geordi	bar foo
2016-09-19 12:45:05	xaxxon	d34df00d:  dup() :)
2016-09-19 12:45:50	d34df00d	V-ille: what downsides would it have? I have a gut feel that's a smelling code.
2016-09-19 12:46:21	xaxxon	if you have a library that already sends its stuff there, you often don't have a choice.   ideally it would be configurable
2016-09-19 12:47:16	d34df00d	V-ille: and those two are of the same type, hence their rdbufs ought to have the same type. Would that be the case for ostringstream vs cout?
2016-09-19 12:47:18	<--	sphenxes01 (~sphenxes@192-164-144-101.hdsl.highway.telekom.at) has quit (Ping timeout: 264 seconds)
2016-09-19 12:47:22	V-ille	d34df00d: I don't thing it's sane to put a streambuf that is not a stringbuf into a stringstream, but otherwise it should be fine
2016-09-19 12:47:24	-->	Hannibal_Smith (~nico@host215-56-dynamic.44-79-r.retail.telecomitalia.it) has joined ##c++
2016-09-19 12:47:27	<--	Lowl3v3l (~Lowl3v3l@ipservice-092-208-080-178.092.208.pools.vodafone-ip.de) has quit (Read error: Connection reset by peer)
2016-09-19 12:47:45	<--	mindands1 (~mindandsk@50-232-5-123-static.hfc.comcastbusiness.net) has quit (Quit: WeeChat 1.5)
2016-09-19 12:47:47	<--	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has quit (Ping timeout: 250 seconds)
2016-09-19 12:47:49	-->	myhau (~myhau@89-64-1-66.dynamic.chello.pl) has joined ##c++
2016-09-19 12:48:09	d34df00d	And who owns the rdbuf? I mean, if the rdbuf is swapped this way, can I expect the ownership to be also swapped?
2016-09-19 12:48:11	<--	gelignite (~gelignite@x4e3070cd.dyn.telefonica.de) has quit (Quit: http://bit.ly/1kso8Ta)
2016-09-19 12:48:14	V-ille	see, stringstreams have a rdbuf() that returns a stringbuf*
2016-09-19 12:48:24	<--	go1111111 (~go1111111@104.200.154.72) has quit (Ping timeout: 250 seconds)
2016-09-19 12:48:30	V-ille	sure, you can expect the ownership to be swapped, the stream owns the streambuf
2016-09-19 12:49:19	-->	Freze_ (~Freze@dhcp-18-189-77-44.dyn.MIT.EDU) has joined ##c++
2016-09-19 12:49:41	w3z	i didnt consider the mutable test you threw in there, such a lambda wont work with FG as is
2016-09-19 12:49:42	<--	AbleBacon (~AbleBacon@unaffiliated/ablebacon) has quit (Quit: Leaving)
2016-09-19 12:49:58	-->	LBV_User (~leonardo@189.58.224.119.dynamic.adsl.gvt.net.br) has joined ##c++
2016-09-19 12:50:07	d34df00d	V-ille: hmm, cool, thanks.
2016-09-19 12:50:36	V-ille	!give d34df00d langer
2016-09-19 12:50:38	nolyc	d34df00d: Standard C++ IOStreams and Locales: Advanced Programmer's Guide and Reference by Angelika Langer and Klaus Kreft, ISBN: 0201183951, http://www.amazon.com/gp/product/0201183951
2016-09-19 12:50:53	V-ille	I strongly advice reading that book before fooling around with iostreams
2016-09-19 12:51:05	<--	anuxivm (~anuxi@92.185.154.236) has quit (Read error: Connection reset by peer)
2016-09-19 12:51:14	V-ille	I mean advise :P
2016-09-19 12:51:15	d34df00d	I'm trying to persuade a colleague of mine to not do that kind of stuff :)
2016-09-19 12:51:15	-->	Freze__ (~Freze@dhcp-18-189-107-137.dyn.mit.edu) has joined ##c++
2016-09-19 12:51:24	<--	bounce (bounce@unaffiliated/bounce) has quit (Ping timeout: 248 seconds)
2016-09-19 12:51:37	d34df00d	A bunch of code has been developed with cout-style logging which we are trying to work around now.
2016-09-19 12:52:03	V-ille	changing the buffer of cout can break who knows what
2016-09-19 12:52:29	<--	bumbar (~bumbar@unaffiliated/bumbar) has quit (Quit: Leaving)
2016-09-19 12:52:33	w3z	or locales, or facets, theres a lot of youck in that book ...
2016-09-19 12:52:41	w3z	yuck
2016-09-19 12:52:47	--	ekem is now known as rashiekmemakeman
2016-09-19 12:52:55	<--	Freze (~Freze@dhcp-18-189-107-137.dyn.MIT.EDU) has quit (Ping timeout: 265 seconds)
2016-09-19 12:52:59	-->	the_abra (~philipp@p4FFF7EC7.dip0.t-ipconnect.de) has joined ##c++
2016-09-19 12:53:26	<--	P1RATEZ (piratez@unaffiliated/p1ratez) has quit (Ping timeout: 265 seconds)
2016-09-19 12:53:30	w3z	and its old/unupdated, but so is iostreams
2016-09-19 12:53:33	<--	Hannibal_Smith (~nico@host215-56-dynamic.44-79-r.retail.telecomitalia.it) has quit (Ping timeout: 240 seconds)
2016-09-19 12:54:00	-->	anuxivm (~anuxi@92.185.154.236) has joined ##c++
2016-09-19 12:54:06	<--	anuxivm (~anuxi@92.185.154.236) has quit (Max SendQ exceeded)
2016-09-19 12:54:08	<--	Freze_ (~Freze@dhcp-18-189-77-44.dyn.MIT.EDU) has quit (Ping timeout: 244 seconds)
2016-09-19 12:57:20	--	rashiekmemakeman is now known as licken
2016-09-19 12:57:36	--	licken is now known as lichen
2016-09-19 12:57:42	--	lichen is now known as ekem
2016-09-19 12:57:44	<--	systemfault (~rcyr@unaffiliated/rcyr) has quit (Read error: Connection reset by peer)
2016-09-19 12:58:33	-->	Lowl3v3l (~Lowl3v3l@ipservice-092-208-080-178.092.208.pools.vodafone-ip.de) has joined ##c++
2016-09-19 12:59:31	<--	przemkovv-bis (~przemkovv@d83-37.icpnet.pl) has quit (Quit: WeeChat 1.5)
2016-09-19 12:59:31		[12:59]
2016-09-19 13:00:16	<--	the_abra (~philipp@p4FFF7EC7.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2016-09-19 13:00:19	-->	Freze (~Freze@dhcp-18-189-107-137.dyn.mit.edu) has joined ##c++
2016-09-19 13:00:29	-->	the_abra (~philipp@p4FFF7EC7.dip0.t-ipconnect.de) has joined ##c++
2016-09-19 13:00:58	-->	przemkovv-bis (~przemkovv@d83-37.icpnet.pl) has joined ##c++
2016-09-19 13:01:01	<--	Freze__ (~Freze@dhcp-18-189-107-137.dyn.mit.edu) has quit (Ping timeout: 272 seconds)
2016-09-19 13:01:26	-->	go1111111 (~go1111111@104.232.116.217) has joined ##c++
2016-09-19 13:01:33	-->	jrolland-home (~jeff@cpe-75-86-41-3.wi.res.rr.com) has joined ##c++
2016-09-19 13:01:52	-->	systemfault (~rcyr@unaffiliated/rcyr) has joined ##c++
2016-09-19 13:02:01	-->	PJBoy (~PJBoy_@unaffiliated/pjboy) has joined ##c++
2016-09-19 13:02:03	<--	nwkj86 (~nwkj86@144.66.6.51.dyn.plus.net) has quit (Ping timeout: 240 seconds)
2016-09-19 13:02:51	<--	Rickmasta (~Rick@pool-96-246-90-176.nycmny.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-19 13:03:17	-->	anuxivm (~anuxi@92.185.154.236) has joined ##c++
2016-09-19 13:03:23	<--	anuxivm (~anuxi@92.185.154.236) has quit (Max SendQ exceeded)
2016-09-19 13:03:55	-->	rd4455 (~rd45@198-188-4-4.pasadena.edu) has joined ##c++
2016-09-19 13:04:29	<--	systemfault (~rcyr@unaffiliated/rcyr) has quit (Read error: Connection reset by peer)
2016-09-19 13:05:25	-->	systemfault (~rcyr@unaffiliated/rcyr) has joined ##c++
2016-09-19 13:05:33	-->	spikebot85 (~lach@58.162.148.70) has joined ##c++
2016-09-19 13:05:38	<--	tocka (~tocka@78-56-107-170.static.zebra.lt) has quit
2016-09-19 13:05:49	-->	Mnkras (~Mnkras@concrete5/781/Mnkras) has joined ##c++
2016-09-19 13:05:50	<--	the_abra (~philipp@p4FFF7EC7.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2016-09-19 13:06:02	-->	the_abra (~philipp@p4FFF7EC7.dip0.t-ipconnect.de) has joined ##c++
2016-09-19 13:06:05	<--	Freze (~Freze@dhcp-18-189-107-137.dyn.mit.edu) has quit (Ping timeout: 272 seconds)
2016-09-19 13:06:41	<--	ap4y (~user@210.54.39.82) has quit (Remote host closed the connection)
2016-09-19 13:06:53	-->	jbud (~jbud@ip-24-54-73-229.user.start.ca) has joined ##c++
2016-09-19 13:06:57	<--	daedric (~Thomas@62-210-211-7.rev.poneytelecom.eu) has quit (Ping timeout: 276 seconds)
2016-09-19 13:07:21	-->	ap4y (~user@210.54.39.82) has joined ##c++
2016-09-19 13:07:21	<--	Brklyn (~truthbk@38.122.226.210) has quit (Ping timeout: 248 seconds)
2016-09-19 13:08:25	<--	Azusa762 (~roy@2a02:8084:2ac1:ef00:f279:59ff:fe17:ce37) has quit (Ping timeout: 265 seconds)
2016-09-19 13:09:01	-->	daedric (~Thomas@62-210-211-7.rev.poneytelecom.eu) has joined ##c++
2016-09-19 13:09:33	-->	anuxivm (~anuxi@92.185.154.236) has joined ##c++
2016-09-19 13:09:38	<--	anuxivm (~anuxi@92.185.154.236) has quit (Max SendQ exceeded)
2016-09-19 13:09:52	-->	UnlikeSuika_mobi (~UnlikeSui@223.62.212.34) has joined ##c++
2016-09-19 13:10:24	<--	magnicida (~raskolnik@2a02:8109:8c80:231:ea39:dfff:fe4d:275b) has quit (Ping timeout: 265 seconds)
2016-09-19 13:12:37	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-19 13:12:44	<--	rhl (~rhl@66.201.45.138) has quit (Ping timeout: 244 seconds)
2016-09-19 13:13:04	-->	rhl (~rhl@66.201.45.138) has joined ##c++
2016-09-19 13:13:13	<--	UnripeSuica_mobi (~UnlikeSui@147.46.113.63) has quit (Ping timeout: 248 seconds)
2016-09-19 13:13:29	-->	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has joined ##c++
2016-09-19 13:13:45	King_DuckZ	hs_: if you're still interested: https://github.com/KingDuckZ/vectorwrapper/commit/1d3a80351ade6d296f1b76918da8aff9c0502af3 the wall of text at the bottom of vectorwrapper_simd.hpp is the solution you suggested
2016-09-19 13:14:03	<--	UnlikeSuika_mobi (~UnlikeSui@223.62.212.34) has quit (Client Quit)
2016-09-19 13:14:19	<--	tadaa (~tadaaa@nat-wh-wz4-12.rz.uni-karlsruhe.de) has quit (Read error: Connection reset by peer)
2016-09-19 13:14:41	King_DuckZ	hs_: sadly I had to rewrite it in a way that prevents a plain float from working (I need to deduce V to build the return type), but I think that's acceptable
2016-09-19 13:14:41		[13:14]
2016-09-19 13:14:54	King_DuckZ	hs_: hopefully it all makes sense :)
2016-09-19 13:15:00	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-19 13:15:31	-->	UnlikeSuika_mobi (~UnlikeSui@147.47.140.49) has joined ##c++
2016-09-19 13:16:27	-->	UnripeSuica_mobi (~UnlikeSui@223.62.212.34) has joined ##c++
2016-09-19 13:17:06	-->	neurodrone (~neurodron@unaffiliated/neurodrone) has joined ##c++
2016-09-19 13:18:30	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-19 13:18:46	<--	blackbird1 (~blackbird@197.3.251.98) has quit (Quit: Leaving)
2016-09-19 13:18:58	-->	anuxivm (~anuxi@92.185.154.236) has joined ##c++
2016-09-19 13:19:04	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-19 13:19:05	<--	anuxivm (~anuxi@92.185.154.236) has quit (Max SendQ exceeded)
2016-09-19 13:20:03	<--	UnlikeSuika_mobi (~UnlikeSui@147.47.140.49) has quit (Ping timeout: 240 seconds)
2016-09-19 13:21:18	<--	rhl (~rhl@66.201.45.138) has quit (Quit: This computer has gone to sleep)
2016-09-19 13:24:20	-->	Valdaris (~Gabe@75-170-43-116.eugn.qwest.net) has joined ##c++
2016-09-19 13:25:01	<--	UnripeSuica_mobi (~UnlikeSui@223.62.212.34) has quit (Quit: RIP)
2016-09-19 13:25:11	<--	de-facto (~de-facto@unaffiliated/de-facto) has quit (Quit: Leaving)
2016-09-19 13:25:13	-->	UnlikeSuika_mobi (~UnlikeSui@147.46.113.63) has joined ##c++
2016-09-19 13:25:40	<--	phinxy (~tehhhd@unaffiliated/phinxy) has quit (Read error: Connection reset by peer)
2016-09-19 13:26:41	<--	Gabe__ (~Gabe@75-170-43-116.eugn.qwest.net) has quit (Ping timeout: 244 seconds)
2016-09-19 13:27:20	-->	rhl (~rhl@66.201.45.138) has joined ##c++
2016-09-19 13:28:30	-->	SpaceDanceCJ (~Sasha@178.121.20.245) has joined ##c++
2016-09-19 13:28:56	-->	codercodi (~codercodi@108-192-148-40.lightspeed.gnvlsc.sbcglobal.net) has joined ##c++
2016-09-19 13:30:11	<--	codercodi (~codercodi@108-192-148-40.lightspeed.gnvlsc.sbcglobal.net) has quit (Client Quit)
2016-09-19 13:30:11		[13:30]
2016-09-19 13:31:08	<--	rd4455 (~rd45@198-188-4-4.pasadena.edu) has quit (Ping timeout: 265 seconds)
2016-09-19 13:31:31	-->	anton02 (~quassel@lal1651212.lnk.telstra.net) has joined ##c++
2016-09-19 13:31:59	<--	alamar (alamar@2a02:180:a:1:1::110) has quit (Ping timeout: 250 seconds)
2016-09-19 13:32:25	<--	EvilPenguin (~EvilPengu@2605:e000:6189:9600:3949:15ac:5ddb:4c54) has quit (Ping timeout: 248 seconds)
2016-09-19 13:33:22	<--	slavanap (~slavanap@5.145.251.251) has quit (Quit: Leaving)
2016-09-19 13:34:13	<--	Lowl3v3l (~Lowl3v3l@ipservice-092-208-080-178.092.208.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2016-09-19 13:35:04	-->	BaneAliens (uid112512@gateway/web/irccloud.com/x-paaudzscxaficcib) has joined ##c++
2016-09-19 13:35:09	<--	sctt (~sctt@91.236.116.233) has quit (Read error: Connection reset by peer)
2016-09-19 13:35:32	-->	Lowl3v3l (~Lowl3v3l@ipservice-092-208-080-178.092.208.pools.vodafone-ip.de) has joined ##c++
2016-09-19 13:35:54	<--	Mnkras (~Mnkras@concrete5/781/Mnkras) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-09-19 13:36:38	-->	rd4455 (~rd45@198.188.4.4) has joined ##c++
2016-09-19 13:36:58	-->	zrneely (~zrneely@dhcp-18-189-29-184.dyn.MIT.EDU) has joined ##c++
2016-09-19 13:37:50	zrneely	Can I do a clean for-each loop over a slice of a vector? Something like "for (int x : vecOfInts[1:3]) { /* stuff */ }"
2016-09-19 13:38:00	-->	Levitator (~Meh@cpe-2606-A000-E182-FB00-F8FC-C295-9F4F-BE1A.dyn6.twc.com) has joined ##c++
2016-09-19 13:38:17	zrneely	I know it's possible with iterators, using begin() and end(), but I'd like to do it with the for-each syntax if possible
2016-09-19 13:38:24	<--	velco (~chill@vlan-185-78-38-153.comnet.bg) has quit (Quit: Leaving...)
2016-09-19 13:38:27	TinoDidriksen	Only with an iterator adapter.
2016-09-19 13:38:49	-->	EvilPenguin (~EvilPengu@2605:e000:6189:9600:3949:15ac:5ddb:4c54) has joined ##c++
2016-09-19 13:38:57	-->	anuxivm (~anuxi@92.185.154.236) has joined ##c++
2016-09-19 13:39:05	<--	anuxivm (~anuxi@92.185.154.236) has quit (Max SendQ exceeded)
2016-09-19 13:39:18	TinoDidriksen	for (auto x : slice(vec, 1, 3)) where slice() is an adapter that returns an object with begin()/end() with the correct offsets.
2016-09-19 13:39:35	-->	Ben2560 (~quassel@137.154.246.113) has joined ##c++
2016-09-19 13:39:36	xaxxon	zrneely:  foreach loop just calls begin(), ++, and end() on the thing you give to it
2016-09-19 13:39:46	TinoDidriksen	Easy to implement, but I think Boost has some as well.
2016-09-19 13:40:00	xaxxon	zrneely:  so as long as you make something that implemetns those and does what you want, then you're good
2016-09-19 13:40:06	-->	Rickmasta (~Rick@pool-96-246-90-176.nycmny.fios.verizon.net) has joined ##c++
2016-09-19 13:40:46	-->	BustyLoliChan (~BustyLoli@2601:680:c201:cd2:9d7b:c0ee:369c:2d56) has joined ##c++
2016-09-19 13:40:55	-->	nealshire_ (~Nealshire@unaffiliated/nealshire) has joined ##c++
2016-09-19 13:41:09	<--	owa (~over@poisoned.dns.ug) has quit (Ping timeout: 244 seconds)
2016-09-19 13:41:42	-->	redco (~redco@88.240.252.223) has joined ##c++
2016-09-19 13:41:57	-->	JethroTroll (~GenteelBe@cpc70133-lutn12-2-0-cust324.9-3.cable.virginm.net) has joined ##c++
2016-09-19 13:42:01	<--	orbiter (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has quit (Read error: No route to host)
2016-09-19 13:42:11	<--	SecondForm_Glenn (~Thunderbi@108.189.70.212) has quit (Ping timeout: 244 seconds)
2016-09-19 13:42:11	<--	Sausage (~sausage@tehsausage.com) has quit (Ping timeout: 244 seconds)
2016-09-19 13:42:11	-->	orbiter (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has joined ##c++
2016-09-19 13:42:18	-->	Sausage (sausage@tehsausage.com) has joined ##c++
2016-09-19 13:42:40	<--	GenteelBen (~GenteelBe@cpc70133-lutn12-2-0-cust324.9-3.cable.virginm.net) has quit (Disconnected by services)
2016-09-19 13:42:42	<--	daedric (~Thomas@62-210-211-7.rev.poneytelecom.eu) has quit (Ping timeout: 244 seconds)
2016-09-19 13:42:42	<--	LangeOortjes (~LangeOort@ec2-52-58-250-220.eu-central-1.compute.amazonaws.com) has quit (Ping timeout: 244 seconds)
2016-09-19 13:42:46	-->	julian (alamar@2a02:180:a:1:1::110) has joined ##c++
2016-09-19 13:42:47	-->	SecondForm_Glenn (~Thunderbi@108.189.70.212) has joined ##c++
2016-09-19 13:42:47	-->	owa (~over@poisoned.dns.ug) has joined ##c++
2016-09-19 13:42:57	--	JethroTroll is now known as GenteelBen
2016-09-19 13:43:09	--	julian is now known as Guest64687
2016-09-19 13:43:13	<--	tristanseifert (~tristanse@128.194.3.4) has quit (Ping timeout: 255 seconds)
2016-09-19 13:43:53	<--	lyindArk (~jzeiger@mail.talpidae.net) has quit (Ping timeout: 244 seconds)
2016-09-19 13:43:53	<--	LBV_User (~leonardo@189.58.224.119.dynamic.adsl.gvt.net.br) has quit (Read error: Connection reset by peer)
2016-09-19 13:43:53	<--	c0c0 (~coco@53541674.cm-6-5a.dynamic.ziggo.nl) has quit (Ping timeout: 244 seconds)
2016-09-19 13:43:53	<--	Appleman1234 (~Appleman1@KD119104047049.au-net.ne.jp) has quit (Ping timeout: 244 seconds)
2016-09-19 13:43:53	<--	nealshire (~Nealshire@unaffiliated/nealshire) has quit (Ping timeout: 244 seconds)
2016-09-19 13:43:53	<--	Rabbit_ (~Rabbit@ec2-52-41-150-102.us-west-2.compute.amazonaws.com) has quit (Ping timeout: 244 seconds)
2016-09-19 13:43:53	<--	BustyLoli-Chan (~BustyLoli@c-67-163-66-115.hsd1.ut.comcast.net) has quit (Ping timeout: 244 seconds)
2016-09-19 13:43:54	<--	navid (~navid@unaffiliated/navid) has quit (Ping timeout: 244 seconds)
2016-09-19 13:44:02	-->	navid (~navid@104.131.244.92) has joined ##c++
2016-09-19 13:44:02	<--	navid (~navid@104.131.244.92) has quit (Changing host)
2016-09-19 13:44:02	-->	navid (~navid@unaffiliated/navid) has joined ##c++
2016-09-19 13:44:06	-->	YungRaj (~YungRaj@nat-165-91-12-162.tamulink.tamu.edu) has joined ##c++
2016-09-19 13:44:06	-->	lyindArk (~jzeiger@mail.talpidae.net) has joined ##c++
2016-09-19 13:44:08	-->	Rabbit_ (~Rabbit@ec2-52-41-150-102.us-west-2.compute.amazonaws.com) has joined ##c++
2016-09-19 13:44:11	-->	LBV_User (~leonardo@189.58.224.119.dynamic.adsl.gvt.net.br) has joined ##c++
2016-09-19 13:44:16	<--	pocketprotector (~pocketpro@unaffiliated/pocketprotector) has quit (Ping timeout: 244 seconds)
2016-09-19 13:44:34	<--	Burgundy (~burgundy@86.121.178.118) has quit (Ping timeout: 255 seconds)
2016-09-19 13:44:35	-->	daedric (~Thomas@62-210-211-7.rev.poneytelecom.eu) has joined ##c++
2016-09-19 13:44:58	-->	anuxivm (~anuxi@92.185.154.236) has joined ##c++
2016-09-19 13:44:59	-->	LangeOortjes (~LangeOort@ec2-52-58-250-220.eu-central-1.compute.amazonaws.com) has joined ##c++
2016-09-19 13:45:07	<--	anuxivm (~anuxi@92.185.154.236) has quit (Max SendQ exceeded)
2016-09-19 13:45:20	-->	c0c0 (~coco@53541674.cm-6-5a.dynamic.ziggo.nl) has joined ##c++
2016-09-19 13:45:20		[13:45]
2016-09-19 13:45:51	-->	HerzogDeXtEr1 (~farci@i59F6BD21.versanet.de) has joined ##c++
2016-09-19 13:45:55	-->	Crazylemon64 (~Crazylemo@c-98-237-179-255.hsd1.wa.comcast.net) has joined ##c++
2016-09-19 13:46:07	-->	pocketprotector (~pocketpro@unaffiliated/pocketprotector) has joined ##c++
2016-09-19 13:46:41	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 240 seconds)
2016-09-19 13:46:59	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-19 13:47:12	zrneely	TinoDidriksen, xaxxon thanks for your help, I hadn't heard of that pattern before
2016-09-19 13:47:16	<--	ghostlight (~ghostligh@ec2-54-187-97-144.us-west-2.compute.amazonaws.com) has quit (Ping timeout: 255 seconds)
2016-09-19 13:48:45	-->	UnripeSuica_mobi (~UnlikeSui@147.47.140.134) has joined ##c++
2016-09-19 13:49:42	<--	redco (~redco@88.240.252.223) has left ##c++
2016-09-19 13:49:58	-->	UnrightSuika_mob (~UnlikeSui@223.62.212.34) has joined ##c++
2016-09-19 13:50:29	<--	lakin (~lakin@d108-173-185-33.abhsia.telus.net) has quit (Remote host closed the connection)
2016-09-19 13:51:05	<--	UnlikeSuika_mobi (~UnlikeSui@147.46.113.63) has quit (Ping timeout: 248 seconds)
2016-09-19 13:51:29	<--	Phlow (~Kiss@199.44.8.162) has quit (Ping timeout: 244 seconds)
2016-09-19 13:51:46	-->	sctt (~sctt@91.236.116.233) has joined ##c++
2016-09-19 13:51:47	-->	HerzogDeXtEr (~farci@i59F6BD21.versanet.de) has joined ##c++
2016-09-19 13:51:50	-->	Phlow (~Kiss@199.44.8.162) has joined ##c++
2016-09-19 13:51:54	-->	Ben2560_ (~quassel@137.154.246.113) has joined ##c++
2016-09-19 13:52:27	-->	ghostlight (~ghostligh@ec2-54-187-97-144.us-west-2.compute.amazonaws.com) has joined ##c++
2016-09-19 13:53:02	<--	esas (~esas@unaffiliated/esas) has quit (Ping timeout: 244 seconds)
2016-09-19 13:53:02	<--	yeticry (~yeticry@117.70.53.122) has quit (Ping timeout: 244 seconds)
2016-09-19 13:53:11	<--	King_Hual (~failed@unaffiliated/king-hual/x-1207580) has quit (Read error: Connection reset by peer)
2016-09-19 13:53:25	-->	yeticry (~yeticry@117.70.53.122) has joined ##c++
2016-09-19 13:53:25	<--	UnripeSuica_mobi (~UnlikeSui@147.47.140.134) has quit (Ping timeout: 265 seconds)
2016-09-19 13:53:25	<--	EvilPenguin (~EvilPengu@2605:e000:6189:9600:3949:15ac:5ddb:4c54) has quit (Ping timeout: 265 seconds)
2016-09-19 13:53:33	<--	Ben2560 (~quassel@137.154.246.113) has quit (Ping timeout: 244 seconds)
2016-09-19 13:53:52	<--	iBleizo (~iBleizo@unaffiliated/ibleizo) has quit (Quit: Leaving)
2016-09-19 13:54:04	<--	HerzogDeXtEr1 (~farci@i59F6BD21.versanet.de) has quit (Ping timeout: 244 seconds)
2016-09-19 13:54:15	-->	redco (~redco@88.240.252.223) has joined ##c++
2016-09-19 13:54:30	<--	redco (~redco@88.240.252.223) has quit (Client Quit)
2016-09-19 13:55:07	<--	Guest92333 (~condy@115.28.150.204) has quit (Ping timeout: 250 seconds)
2016-09-19 13:55:20	<--	UnrightSuika_mob (~UnlikeSui@223.62.212.34) has quit (Quit: RIP)
2016-09-19 13:55:32	-->	UnlikeSuika_mobi (~UnlikeSui@147.47.140.134) has joined ##c++
2016-09-19 13:55:46	<--	sparetire (~sparetire@unaffiliated/sparetire) has quit (Excess Flood)
2016-09-19 13:55:49	<--	c0c0 (~coco@53541674.cm-6-5a.dynamic.ziggo.nl) has quit (Quit: WeeChat 1.5)
2016-09-19 13:56:00	-->	Guest92333 (~condy@115.28.150.204) has joined ##c++
2016-09-19 13:56:39	-->	sparetire (~sparetire@unaffiliated/sparetire) has joined ##c++
2016-09-19 13:57:20	-->	tristanseifert (~tristanse@nat-165-91-12-10.tamulink.tamu.edu) has joined ##c++
2016-09-19 13:57:35	<--	YungRaj (~YungRaj@nat-165-91-12-162.tamulink.tamu.edu) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-19 13:57:38	-->	UnripeSuica_mobi (~UnlikeSui@223.62.212.34) has joined ##c++
2016-09-19 14:00:03	<--	UnlikeSuika_mobi (~UnlikeSui@147.47.140.134) has quit (Ping timeout: 240 seconds)
2016-09-19 14:00:59	<--	Dredge (Elite17548@gateway/shell/elitebnc/x-lhpnsqzahwhyuahb) has quit (Quit: EliteBNC - http://elitebnc.org (Auto-Removal: idle account/not being used))
2016-09-19 14:00:59		[14:00]
2016-09-19 14:01:05	<--	HerzogDeXtEr (~farci@i59F6BD21.versanet.de) has quit (Read error: Connection reset by peer)
2016-09-19 14:01:24	-->	anuxivm (~hexchat@92.185.154.236) has joined ##c++
2016-09-19 14:01:41	<--	anuxivm (~hexchat@92.185.154.236) has quit (Client Quit)
2016-09-19 14:02:24	<--	Rickmasta (~Rick@pool-96-246-90-176.nycmny.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-19 14:03:02	<--	UnripeSuica_mobi (~UnlikeSui@223.62.212.34) has quit (Quit: RIP)
2016-09-19 14:03:45	-->	UnlikeSuika_mobi (~UnlikeSui@223.62.212.34) has joined ##c++
2016-09-19 14:03:50	-->	wolfcub (~henrique_@177.131.178.148) has joined ##c++
2016-09-19 14:04:14	<--	Henke37 (~Henrik@81-227-16-59-no133.bredband.skanova.com) has quit (Quit: ERR_SHUTDOWN)
2016-09-19 14:04:17	-->	tesuji (~tesuji@unaffiliated/tesuji) has joined ##c++
2016-09-19 14:04:23	-->	anuxivm (~anuxi@92.185.154.236) has joined ##c++
2016-09-19 14:04:25	<--	tesuji_ (~tesuji@x2f662be.dyn.telefonica.de) has quit (Ping timeout: 248 seconds)
2016-09-19 14:05:43	<--	jackhum (uid97400@gateway/web/irccloud.com/x-ymkkzlforsrqrvbl) has quit (Quit: Connection closed for inactivity)
2016-09-19 14:06:26	<--	GenteelBen (~GenteelBe@cpc70133-lutn12-2-0-cust324.9-3.cable.virginm.net) has quit
2016-09-19 14:06:35	<--	Vincent7 (~NoIdent@dslb-088-077-121-042.088.077.pools.vodafone-ip.de) has quit (Quit: Leaving)
2016-09-19 14:07:56	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-19 14:08:40	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-19 14:08:56	-->	JoshS (~jshjsh@172.56.16.60) has joined ##c++
2016-09-19 14:09:04	-->	P1RATEZ (piratez@unaffiliated/p1ratez) has joined ##c++
2016-09-19 14:09:23	-->	EvilPenguin (~EvilPengu@2605:e000:6189:9600:3949:15ac:5ddb:4c54) has joined ##c++
2016-09-19 14:10:00	<--	rd4455 (~rd45@198.188.4.4) has quit (Ping timeout: 276 seconds)
2016-09-19 14:10:19	<--	bitlord (~bitlord@unaffiliated/bitlord) has quit (Quit: Leaving)
2016-09-19 14:10:57	<--	UnlikeSuika_mobi (~UnlikeSui@223.62.212.34) has quit (Quit: RIP)
2016-09-19 14:11:09	-->	UnlikeSuika_mobi (~UnlikeSui@147.47.140.134) has joined ##c++
2016-09-19 14:12:10	<--	jshjsh (~jshjsh@172.56.16.60) has quit (Ping timeout: 260 seconds)
2016-09-19 14:13:29	<--	tristanseifert (~tristanse@nat-165-91-12-10.tamulink.tamu.edu) has quit (Ping timeout: 248 seconds)
2016-09-19 14:13:41	-->	Rickmasta (~Rick@pool-96-246-90-176.nycmny.fios.verizon.net) has joined ##c++
2016-09-19 14:14:48	-->	SwiftMatt (~Objective@162.242.94.188) has joined ##c++
2016-09-19 14:14:50	<--	anuxivm (~anuxi@92.185.154.236) has left ##c++
2016-09-19 14:16:05	<--	The_Coolest (~Arthur_Li@bzq-84-108-121-56.cablep.bezeqint.net) has quit (Ping timeout: 265 seconds)
2016-09-19 14:16:05		[14:16]
2016-09-19 14:17:39	-->	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has joined ##c++
2016-09-19 14:18:46	-->	ibouvousaime (~ibouvousa@41.83.31.34) has joined ##c++
2016-09-19 14:19:14	<--	rhl (~rhl@66.201.45.138) has quit (Quit: This computer has gone to sleep)
2016-09-19 14:20:37	-->	rhl (~rhl@66.201.45.138) has joined ##c++
2016-09-19 14:21:17	-->	The_Coolest (~Arthur_Li@bzq-84-108-121-56.cablep.bezeqint.net) has joined ##c++
2016-09-19 14:21:18	<--	The_Coolest (~Arthur_Li@bzq-84-108-121-56.cablep.bezeqint.net) has quit (Client Quit)
2016-09-19 14:22:57	-->	The_Coolest (~Arthur_Li@bzq-84-108-121-56.cablep.bezeqint.net) has joined ##c++
2016-09-19 14:24:17	<--	jkhl (~j@host86-166-214-159.range86-166.btcentralplus.com) has quit (Ping timeout: 265 seconds)
2016-09-19 14:24:26	-->	UnripeSuica_mobi (~UnlikeSui@223.62.212.34) has joined ##c++
2016-09-19 14:24:31	-->	Jesin (~Jesin@pool-108-28-56-201.washdc.fios.verizon.net) has joined ##c++
2016-09-19 14:25:38	<--	l_Digi_Dude_l (~l_Digi_Du@2602:30a:c7c3:4370:fbe3:8a06:ff0a:d0f3) has quit (Quit: Leaving)
2016-09-19 14:26:13	-->	Raed|Laptop (~Raed@mac5336d0.tmodns.net) has joined ##c++
2016-09-19 14:26:58	<--	rhl (~rhl@66.201.45.138) has quit (Quit: Leaving)
2016-09-19 14:27:51	-->	andyhuzhill (~Thunderbi@14.23.45.178) has joined ##c++
2016-09-19 14:28:13	<--	UnlikeSuika_mobi (~UnlikeSui@147.47.140.134) has quit (Ping timeout: 265 seconds)
2016-09-19 14:29:47	<--	Pilum (~JKM@vps-85.201.170.217.stwvps.net) has quit (Ping timeout: 250 seconds)
2016-09-19 14:30:41	<--	UnripeSuica_mobi (~UnlikeSui@223.62.212.34) has quit (Quit: RIP)
2016-09-19 14:30:57	-->	Pilum (~JKM@vps-85.201.170.217.stwvps.net) has joined ##c++
2016-09-19 14:31:05	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Remote host closed the connection)
2016-09-19 14:31:05		[14:31]
2016-09-19 14:31:07	-->	UnripeSuica_mobi (~UnlikeSui@147.47.140.134) has joined ##c++
2016-09-19 14:31:42	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-19 14:32:15	-->	jshjsh (~jshjsh@172.56.16.60) has joined ##c++
2016-09-19 14:32:34	<--	alexmh (~alex@c-67-166-124-41.hsd1.ut.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-19 14:32:43	<--	ibouvousaime (~ibouvousa@41.83.31.34) has quit (Ping timeout: 255 seconds)
2016-09-19 14:33:14	-->	judge-- (~NoEvil@187.182.71.219) has joined ##c++
2016-09-19 14:33:26	judge--	Hi guys, can I ask a question about make/automake here?
2016-09-19 14:33:48	w3z	only if you want to be directed to general
2016-09-19 14:33:53	<--	zwliew (uid161395@gateway/web/irccloud.com/x-ycpiokulecccfgci) has quit (Quit: Connection closed for inactivity)
2016-09-19 14:33:56	w3z	!give judge-- general
2016-09-19 14:33:58	nolyc	judge--: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2016-09-19 14:34:49	judge--	thank you
2016-09-19 14:34:53	judge--	sorry about that
2016-09-19 14:35:52	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Ping timeout: 255 seconds)
2016-09-19 14:35:54	<--	JoshS (~jshjsh@172.56.16.60) has quit (Ping timeout: 264 seconds)
2016-09-19 14:36:00	<--	UnripeSuica_mobi (~UnlikeSui@147.47.140.134) has quit (Ping timeout: 276 seconds)
2016-09-19 14:40:58	<--	Rickmasta (~Rick@pool-96-246-90-176.nycmny.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-19 14:42:11	<--	skweek (~skweek@2607:fe50:0:810b:a414:1cf9:8eb8:f755) has quit (Ping timeout: 250 seconds)
2016-09-19 14:43:02	Chris	There's also ##workingset which is specifically for that stuff.
2016-09-19 14:43:50	xaxxon	I didn't know about that channel.  cool
2016-09-19 14:44:28	-->	Appleman1234 (~Appleman1@KD119104047049.au-net.ne.jp) has joined ##c++
2016-09-19 14:45:05	-->	The_CooIest (~Arthur_Li@bzq-84-108-121-56.cablep.bezeqint.net) has joined ##c++
2016-09-19 14:45:05	<--	The_CooIest (~Arthur_Li@bzq-84-108-121-56.cablep.bezeqint.net) has quit (Client Quit)
2016-09-19 14:45:12	-->	skweek (~skweek@2607:fe50:0:810b:a414:1cf9:8eb8:f755) has joined ##c++
2016-09-19 14:45:30	-->	The_CooIest (~Arthur_Li@bzq-84-108-121-56.cablep.bezeqint.net) has joined ##c++
2016-09-19 14:46:04	<--	The_Coolest (~Arthur_Li@bzq-84-108-121-56.cablep.bezeqint.net) has quit (Ping timeout: 244 seconds)
2016-09-19 14:48:20	<--	ezzieyguywuf (~wolfie@unaffiliated/ezzieyguywuf) has quit (Ping timeout: 260 seconds)
2016-09-19 14:48:20		[14:48]
2016-09-19 14:49:31	-->	Rickmasta (~Rick@pool-96-246-90-176.nycmny.fios.verizon.net) has joined ##c++
2016-09-19 14:49:47	-->	gegagome (~gegagome@ip68-6-89-154.sb.sd.cox.net) has joined ##c++
2016-09-19 14:50:03	-->	ezzieyguywuf (~wolfie@unaffiliated/ezzieyguywuf) has joined ##c++
2016-09-19 14:50:11	-->	YungRaj (~YungRaj@nat-165-91-13-35.tamulink.tamu.edu) has joined ##c++
2016-09-19 14:50:54	-->	UnlikeSuika_mobi (~UnlikeSui@223.62.212.34) has joined ##c++
2016-09-19 14:51:01	<--	diod (~diod@unaffiliated/diod) has quit (Ping timeout: 250 seconds)
2016-09-19 14:51:53	-->	Rialynn (~Rialynn@unaffiliated/rialynn) has joined ##c++
2016-09-19 14:52:28	-->	diod (~diod@2a02:a03f:2c26:5800:21b:21ff:fe12:d0b7) has joined ##c++
2016-09-19 14:52:39	<--	diod (~diod@2a02:a03f:2c26:5800:21b:21ff:fe12:d0b7) has quit (Changing host)
2016-09-19 14:52:39	-->	diod (~diod@unaffiliated/diod) has joined ##c++
2016-09-19 14:55:08	-->	viro (~viro@unaffiliated/viro) has joined ##c++
2016-09-19 14:55:43	<--	Raed|Laptop (~Raed@mac5336d0.tmodns.net) has quit (Ping timeout: 265 seconds)
2016-09-19 14:57:27	-->	AMoran (~AMoran@nat-165-91-12-92.tamulink.tamu.edu) has joined ##c++
2016-09-19 14:58:36	<--	AMoran (~AMoran@nat-165-91-12-92.tamulink.tamu.edu) has quit (Client Quit)
2016-09-19 14:59:03	-->	Raed|Laptop (~Raed@mac5336d0.tmodns.net) has joined ##c++
2016-09-19 14:59:33	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 265 seconds)
2016-09-19 15:00:29	-->	AnderMoran (~AnderMora@nat-165-91-12-92.tamulink.tamu.edu) has joined ##c++
2016-09-19 15:00:36	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-19 15:01:33	<--	MulleDK20 (MulleDK19@unaffiliated/mulledk19) has quit (Ping timeout: 240 seconds)
2016-09-19 15:02:20	-->	tesuji_ (~tesuji@x2f64d17.dyn.telefonica.de) has joined ##c++
2016-09-19 15:02:33	<--	tesuji (~tesuji@unaffiliated/tesuji) has quit (Ping timeout: 240 seconds)
2016-09-19 15:04:19	<--	dennisvennink (~dv@92.109.221.191) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-19 15:04:19		[15:04]
2016-09-19 15:04:26	<--	AnderMoran (~AnderMora@nat-165-91-12-92.tamulink.tamu.edu) has quit (Client Quit)
2016-09-19 15:04:35	<--	YungRaj (~YungRaj@nat-165-91-13-35.tamulink.tamu.edu) has quit (Read error: Connection reset by peer)
2016-09-19 15:04:51	<--	pavshn (~pavshn@ppp95-165-153-84.pppoe.spdop.ru) has quit (Ping timeout: 244 seconds)
2016-09-19 15:04:52	-->	AnderMoran (~AnderMora@nat-165-91-12-92.tamulink.tamu.edu) has joined ##c++
2016-09-19 15:05:10	-->	YungRaj (~YungRaj@nat-165-91-13-35.tamulink.tamu.edu) has joined ##c++
2016-09-19 15:05:58	<--	YungRaj (~YungRaj@nat-165-91-13-35.tamulink.tamu.edu) has quit (Client Quit)
2016-09-19 15:06:10	<--	AnderMoran (~AnderMora@nat-165-91-12-92.tamulink.tamu.edu) has quit (Client Quit)
2016-09-19 15:06:59	<--	Rialynn (~Rialynn@unaffiliated/rialynn) has quit (Quit: ZZZzzz…)
2016-09-19 15:07:19	<--	Galik (~galik@unaffiliated/galik) has quit (Ping timeout: 250 seconds)
2016-09-19 15:07:50	-->	DragonTamer (~DragonTam@unaffiliated/dragontamer) has joined ##c++
2016-09-19 15:08:02	-->	Rialynn (~Rialynn@unaffiliated/rialynn) has joined ##c++
2016-09-19 15:08:45	<--	uboot_ (~moon@x4dbc088c.dyn.telefonica.de) has quit (Read error: Connection reset by peer)
2016-09-19 15:09:02	--	jshjsh is now known as JoshS
2016-09-19 15:09:03	-->	uboot_ (~moon@x4e34ba26.dyn.telefonica.de) has joined ##c++
2016-09-19 15:09:05	<--	KAHR-Alpha (~Alpha@AReims-652-1-187-168.w92-142.abo.wanadoo.fr) has quit (Ping timeout: 240 seconds)
2016-09-19 15:09:17	-->	hyacinth^timeout (~yhyacinth@61.111.255.109) has joined ##c++
2016-09-19 15:10:42	<--	robink_ (~quassel@unaffilated/robink) has quit (Ping timeout: 264 seconds)
2016-09-19 15:10:42	-->	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2016-09-19 15:11:42	<--	symm- (~symm-@86.127.152.32) has quit (Quit: Leaving...)
2016-09-19 15:12:24	<--	regedit (uid150526@gateway/web/irccloud.com/x-ccwpkmzsngndwxcj) has quit (Quit: Connection closed for inactivity)
2016-09-19 15:12:37	<--	Guest92709 (~max@177.242.222.104) has quit (Quit: Leaving)
2016-09-19 15:14:00	-->	Ropeney (~Ropeney@tank.mindvision.com.au) has joined ##c++
2016-09-19 15:14:04	-->	rd4455 (~rd45@137.164.12.142) has joined ##c++
2016-09-19 15:14:20	<--	SpaceDanceCJ (~Sasha@178.121.20.245) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-09-19 15:14:41	-->	tristanseifert (~tristanse@128.194.3.4) has joined ##c++
2016-09-19 15:16:15	-->	codercodi (~codercodi@108-192-148-40.lightspeed.gnvlsc.sbcglobal.net) has joined ##c++
2016-09-19 15:18:14	-->	SuperThinlizzy (~cplusplus@h-67-102-175-59.sttn.wa.globalcapacity.com) has joined ##c++
2016-09-19 15:18:39	SuperThinlizzy	cppcon is being a blast
2016-09-19 15:20:03	-->	Galik (~galik@unaffiliated/galik) has joined ##c++
2016-09-19 15:20:03		[15:20]
2016-09-19 15:20:09	<--	josh (~josh@168.103.191.142) has quit (Ping timeout: 248 seconds)
2016-09-19 15:20:42	<--	elnormous (~elnormous@91.105.17.158) has quit (Remote host closed the connection)
2016-09-19 15:22:59	<--	wilx (wilx@27.228.broadband3.iol.cz) has quit (Ping timeout: 244 seconds)
2016-09-19 15:23:00	w3z	have you been working out with weighted clothes in a low oxygen capsule, getting ready for frieza?
2016-09-19 15:23:25	<--	f10 (~flo@2001:470:52af:1:1883:b70e:19db:f1db) has quit (Ping timeout: 255 seconds)
2016-09-19 15:23:25	<--	f10_ (~flo@2001:470:52af:1:242c:2fc9:d40d:50d3) has quit (Ping timeout: 255 seconds)
2016-09-19 15:23:29	<--	watersoul (~ircuser@172.245.255.61) has quit (Remote host closed the connection)
2016-09-19 15:23:29	-->	rd44555 (~rd45@lib-02-subnet-171.rdns.cenic.net) has joined ##c++
2016-09-19 15:23:31	-->	Raed_ (~Raed@172.56.14.253) has joined ##c++
2016-09-19 15:23:35	<--	neurodrone_ (~neurodron@unaffiliated/neurodrone) has quit (Ping timeout: 240 seconds)
2016-09-19 15:24:03	<--	SenpaiSilver (~SenpaiSil@ns3269120.ip-5-39-82.eu) has quit (Ping timeout: 240 seconds)
2016-09-19 15:24:08	-->	watersoul (~ircuser@172.245.255.61) has joined ##c++
2016-09-19 15:24:19	w3z	see a presentation worth talking about today?
2016-09-19 15:24:37	<--	txtsd (~txtsd@198.23.246.143) has quit (Quit: ZNC - http://znc.in)
2016-09-19 15:24:51	-->	txtsd (~txtsd@198.23.246.143) has joined ##c++
2016-09-19 15:25:00	<--	Raed_ (~Raed@172.56.14.253) has quit (Client Quit)
2016-09-19 15:25:15	<--	B00100100 (~bf3@gateway/vpn/privateinternetaccess/emul16) has quit (Quit: leaving)
2016-09-19 15:25:31	<--	Galik (~galik@unaffiliated/galik) has quit (Ping timeout: 244 seconds)
2016-09-19 15:25:33	<--	Raed|Laptop (~Raed@mac5336d0.tmodns.net) has quit (Ping timeout: 240 seconds)
2016-09-19 15:26:16	SuperThinlizzy	I watched both sessions of C++17 in breadth
2016-09-19 15:26:22	SuperThinlizzy	also the variants presentation
2016-09-19 15:26:25	-->	SenpaiSilver (~SenpaiSil@ns3269120.ip-5-39-82.eu) has joined ##c++
2016-09-19 15:26:39	SuperThinlizzy	with a very crazy proposal for in language variants :)
2016-09-19 15:26:41	<--	Rialynn (~Rialynn@unaffiliated/rialynn) has quit (Ping timeout: 272 seconds)
2016-09-19 15:27:08	<--	rd4455 (~rd45@137.164.12.142) has quit (Ping timeout: 265 seconds)
2016-09-19 15:27:12	<--	oftc_ftw (~oftc_ftw@unaffiliated/oftc-ftw/x-3443471) has quit (Ping timeout: 265 seconds)
2016-09-19 15:27:28	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-19 15:27:30	<--	zrneely (~zrneely@dhcp-18-189-29-184.dyn.MIT.EDU) has quit (Ping timeout: 264 seconds)
2016-09-19 15:27:35	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-19 15:28:12	-->	rsampaio_ (~rodrigo@2601:643:8200:a3f0::f927) has joined ##c++
2016-09-19 15:28:25	<--	Lowl3v3l (~Lowl3v3l@ipservice-092-208-080-178.092.208.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2016-09-19 15:29:52	<--	SecondForm_Glenn (~Thunderbi@108.189.70.212) has quit (Ping timeout: 255 seconds)
2016-09-19 15:29:57	-->	BongoShaftsbury (~bongo@cpe-74-129-243-162.kya.res.rr.com) has joined ##c++
2016-09-19 15:30:16	-->	wilx (wilx@27.228.broadband3.iol.cz) has joined ##c++
2016-09-19 15:30:17	-->	elnormous (~elnormous@91.105.17.158) has joined ##c++
2016-09-19 15:30:21	-->	arescorpio (~arescorpi@82-40-16-190.fibertel.com.ar) has joined ##c++
2016-09-19 15:30:29	<--	BongoShaftsbury (~bongo@cpe-74-129-243-162.kya.res.rr.com) has left ##c++
2016-09-19 15:30:29	-->	oftc_ftw (~oftc_ftw@unaffiliated/oftc-ftw/x-3443471) has joined ##c++
2016-09-19 15:32:06	-->	Carbonflux (~Bob@75-172-112-206.tukw.qwest.net) has joined ##c++
2016-09-19 15:32:12	w3z	http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0095r0.html ?
2016-09-19 15:32:34	-->	Gabe (~Gabe@75-170-43-116.eugn.qwest.net) has joined ##c++
2016-09-19 15:32:51	w3z	not gonna happen, but eh
2016-09-19 15:33:15	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-19 15:34:02	SuperThinlizzy	I also watched the guys from SG21
2016-09-19 15:34:09	SuperThinlizzy	but it was more like an advertising :(
2016-09-19 15:34:20	SuperThinlizzy	BS also advertised a lot during his keynote
2016-09-19 15:34:38	<--	di0_ (~di0_@unaffiliated/di0-/x-5053590) has quit (Ping timeout: 244 seconds)
2016-09-19 15:35:15	m_ben	SuperThinlizzy: are the cppcon talks streamed live on the internet?
2016-09-19 15:35:15		[15:35]
2016-09-19 15:35:21	<--	elnormous (~elnormous@91.105.17.158) has quit (Ping timeout: 265 seconds)
2016-09-19 15:35:31	SuperThinlizzy	they will be after around one month
2016-09-19 15:35:39	SuperThinlizzy	except BS talk which will be available this week
2016-09-19 15:35:54	<--	Valdaris (~Gabe@75-170-43-116.eugn.qwest.net) has quit (Ping timeout: 264 seconds)
2016-09-19 15:36:01	SuperThinlizzy	so not live.
2016-09-19 15:36:31	-->	Freze (~Freze@c-73-167-60-180.hsd1.ma.comcast.net) has joined ##c++
2016-09-19 15:36:32	SuperThinlizzy	and the wifi was always congested, which arises suspicion of rogue streaming :(
2016-09-19 15:37:07	SuperThinlizzy	anyway, now we will have std::variant , but it is very limited
2016-09-19 15:37:21	SuperThinlizzy	compared to a language based one with true pattern matching
2016-09-19 15:37:22	w3z	we already have it
2016-09-19 15:37:44	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Ping timeout: 244 seconds)
2016-09-19 15:37:57	SuperThinlizzy	C++17 is not released yet, so we either go with boost or with the two well known libs
2016-09-19 15:38:05	SuperThinlizzy	(I forgot the author names)
2016-09-19 15:38:17	-->	zrneely (~zrneely@dhcp-18-189-119-166.dyn.MIT.EDU) has joined ##c++
2016-09-19 15:38:33	SuperThinlizzy	too bad the visitors are still an annoyance to build
2016-09-19 15:38:33	w3z	theres one in libstdc++ already, and the one for libc++ in a few weeks according to eric
2016-09-19 15:38:48	SuperThinlizzy	w3z, what is the namespace? std? or std::experimental ?
2016-09-19 15:39:02	m_ben	the mapbox variant?
2016-09-19 15:39:05	w3z	{variant<int,double> V;}
2016-09-19 15:39:06	geordi	<no output>
2016-09-19 15:39:12	SuperThinlizzy	geordi cheats
2016-09-19 15:39:19	-->	tachoknight__ (~tachoknig@c-73-246-129-13.hsd1.il.comcast.net) has joined ##c++
2016-09-19 15:39:20	SuperThinlizzy	so I don't know for sure
2016-09-19 15:39:21	-->	philipp_ (~philipp@p4FFF5A52.dip0.t-ipconnect.de) has joined ##c++
2016-09-19 15:39:32	w3z	{std::variant<int,double> V;}
2016-09-19 15:39:33	geordi	<no output>
2016-09-19 15:39:38	SuperThinlizzy	!next
2016-09-19 15:39:39	nolyc	Another satisfied customer, next!
2016-09-19 15:39:41	w3z	{experimental::varaiant<int> V;}
2016-09-19 15:39:41	geordi	error: 'varaiant' is not a member of 'experimental'
2016-09-19 15:39:53	w3z	oops
2016-09-19 15:40:00	SuperThinlizzy	I want v.visit(lambdas...);
2016-09-19 15:40:01	w3z	{experimental::variant<int> V;}
2016-09-19 15:40:01	geordi	error: 'variant' is not a member of 'experimental'
2016-09-19 15:40:10	-->	Galik (~galik@unaffiliated/galik) has joined ##c++
2016-09-19 15:40:23	w3z	also already there, i showed you my example the other day that does the runtime lookup of a tuple
2016-09-19 15:40:31	SuperThinlizzy	yeah yeah
2016-09-19 15:40:42	w3z	just saying, you can play with them now :)
2016-09-19 15:40:57	SuperThinlizzy	so I did not know compilers were allowed to put stuff under std namespace before the official release of the std
2016-09-19 15:41:20	w3z	well, gcc 7 isnt an official release yet afaik
2016-09-19 15:41:25	w3z	either is clang 4
2016-09-19 15:42:23	w3z	variant et al have been accepted in to the working draft of 17, so theyve trickling in to impls for 17 targets
2016-09-19 15:42:24	<--	PJBoy (~PJBoy_@unaffiliated/pjboy) has quit (Quit: ChatZilla 0.9.92 [Firefox 48.0.2/20160823121617])
2016-09-19 15:42:34	<--	wilx (wilx@27.228.broadband3.iol.cz) has quit (Ping timeout: 265 seconds)
2016-09-19 15:42:47	-->	robink_ (~quassel@unaffilated/robink) has joined ##c++
2016-09-19 15:42:53	<--	UnlikeSuika_mobi (~UnlikeSui@223.62.212.34) has quit (Quit: RIP)
2016-09-19 15:42:53	-->	francis36012 (~francis@S01067cbfb1eec1cd.cg.shawcable.net) has joined ##c++
2016-09-19 15:43:22	-->	UnlikeSuika_mobi (~UnlikeSui@223.62.212.34) has joined ##c++
2016-09-19 15:43:25	w3z	geordi: --2014 {variant<int> V;}
2016-09-19 15:43:26	geordi	error: 'variant' was not declared in this scope
2016-09-19 15:43:36	<--	the_abra (~philipp@p4FFF7EC7.dip0.t-ipconnect.de) has quit (Ping timeout: 276 seconds)
2016-09-19 15:44:46	SuperThinlizzy	I see :)
2016-09-19 15:44:55	<--	Immune (~Immune@173.55.30.110) has quit (Ping timeout: 260 seconds)
2016-09-19 15:45:00	-->	illerucis (~illerucis@2604:2000:14c4:8125:bae8:56ff:fe35:7ff0) has joined ##c++
2016-09-19 15:45:40	w3z	we're going to miss out on chained promises for 17 if the concurrency guys dont stop bickering
2016-09-19 15:45:57	-->	Stanley00 (~Stanley_0@unaffiliated/stanley00) has joined ##c++
2016-09-19 15:47:00	-->	FreeBirdLjj (~freebirdl@112.20.80.252) has joined ##c++
2016-09-19 15:47:16	SuperThinlizzy	even BS is fighting against the committee sometimes
2016-09-19 15:47:37	SuperThinlizzy	today he summoned the audience to try the TSes hard, in order to make them work for C++20
2016-09-19 15:47:39	SuperThinlizzy	heh
2016-09-19 15:47:44	SuperThinlizzy	"don't wait for the committee"
2016-09-19 15:47:48	-->	di0_ (~di0_@unaffiliated/di0-/x-5053590) has joined ##c++
2016-09-19 15:47:58	SuperThinlizzy	concepts!concepts!concepts!
2016-09-19 15:48:09	-->	bounce (bounce@unaffiliated/bounce) has joined ##c++
2016-09-19 15:48:16	w3z	oh, *now* you want to talk about concepts :)
2016-09-19 15:48:38	<--	illerucis (~illerucis@2604:2000:14c4:8125:bae8:56ff:fe35:7ff0) has quit (Remote host closed the connection)
2016-09-19 15:48:39	SuperThinlizzy	no
2016-09-19 15:48:44	SuperThinlizzy	I am just parakeeting him
2016-09-19 15:49:13	-->	illerucis (~illerucis@2620:10d:c090:180::1:8410) has joined ##c++
2016-09-19 15:49:37	<--	snover (~Adium@unaffiliated/snover) has quit (Quit: Leaving.)
2016-09-19 15:49:38	SuperThinlizzy	although things go slower with a committee, I am glad we have one. if all the language decisions were confined to a single man, we would possibly end with something more convoluted than D
2016-09-19 15:51:04	<--	Kn|t3 (~agarwalvi@49.207.53.8) has quit (Quit: Kn|t3)
2016-09-19 15:51:04		[15:51]
2016-09-19 15:51:05	<--	FreeBirdLjj (~freebirdl@112.20.80.252) has quit (Ping timeout: 240 seconds)
2016-09-19 15:52:23	-->	fr_ (~fr@pD9577B41.dip0.t-ipconnect.de) has joined ##c++
2016-09-19 15:53:48	<--	hosttor (~user@c-73-68-219-125.hsd1.ma.comcast.net) has quit (Remote host closed the connection)
2016-09-19 15:54:21	<--	Freze (~Freze@c-73-167-60-180.hsd1.ma.comcast.net) has quit (Quit: Leaving)
2016-09-19 15:55:29	<--	fr (~fr@p5B2C4AB4.dip0.t-ipconnect.de) has quit (Ping timeout: 244 seconds)
2016-09-19 15:56:30	<--	fstd (~fstd@unaffiliated/fisted) has quit (Read error: Connection reset by peer)
2016-09-19 15:56:38	-->	fstd (~fstd@unaffiliated/fisted) has joined ##c++
2016-09-19 15:58:29	<--	UnlikeSuika_mobi (~UnlikeSui@223.62.212.34) has quit (Quit: RIP)
2016-09-19 15:58:41	-->	UnlikeSuika_mobi (~UnlikeSui@147.46.113.63) has joined ##c++
2016-09-19 16:01:02	<--	judge-- (~NoEvil@187.182.71.219) has quit (Quit: Peace and Protection 4.22.6)
2016-09-19 16:04:41	<--	bounce (bounce@unaffiliated/bounce) has quit (Ping timeout: 272 seconds)
2016-09-19 16:05:32	-->	zap0 (~moofy@14-201-222-143.tpgi.com.au) has joined ##c++
2016-09-19 16:05:36	<--	LBV_User (~leonardo@189.58.224.119.dynamic.adsl.gvt.net.br) has quit (Quit: Konversation terminated!)
2016-09-19 16:06:02	-->	rd4455 (~rd45@lib-02-subnet-170.rdns.cenic.net) has joined ##c++
2016-09-19 16:06:38	<--	rd44555 (~rd45@lib-02-subnet-171.rdns.cenic.net) has quit (Read error: Connection reset by peer)
2016-09-19 16:06:38		[16:06]
2016-09-19 16:07:04	-->	rd44555 (~rd45@lib-02-subnet-171.rdns.cenic.net) has joined ##c++
2016-09-19 16:09:45	<--	nacon (~nacon@unaffiliated/nacon) has quit (Ping timeout: 248 seconds)
2016-09-19 16:09:57	-->	Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2016-09-19 16:10:41	<--	rd4455 (~rd45@lib-02-subnet-170.rdns.cenic.net) has quit (Ping timeout: 240 seconds)
2016-09-19 16:11:37	-->	zwliew (uid161395@gateway/web/irccloud.com/x-mcqefjnxvofvhlca) has joined ##c++
2016-09-19 16:14:27	--	robink_ is now known as robink
2016-09-19 16:15:12	<--	SoundlesDev (~soundless@2601:282:8001:11b5:d25:5d53:1d98:302) has quit (Read error: Connection reset by peer)
2016-09-19 16:15:34	-->	josh (~josh@c-67-182-242-240.hsd1.ut.comcast.net) has joined ##c++
2016-09-19 16:15:37	-->	SoundlesDev (~soundless@2601:282:8001:11b5:94ed:615a:c97b:720b) has joined ##c++
2016-09-19 16:18:17	<--	rd44555 (~rd45@lib-02-subnet-171.rdns.cenic.net) has quit (Ping timeout: 240 seconds)
2016-09-19 16:18:45	<--	enk0 (~enk0@cpe-76-168-177-40.socal.res.rr.com) has quit (Ping timeout: 260 seconds)
2016-09-19 16:20:28	-->	corsaere (~corsaere@unaffiliated/corsaere) has joined ##c++
2016-09-19 16:21:00	-->	dj_pi (~dj@c-73-191-212-56.hsd1.mi.comcast.net) has joined ##c++
2016-09-19 16:22:01	<--	SoundlesDev (~soundless@2601:282:8001:11b5:94ed:615a:c97b:720b) has quit (Ping timeout: 248 seconds)
2016-09-19 16:22:01		[16:22]
2016-09-19 16:22:10	<--	flavi0 (~anon@unaffiliated/flavi0) has quit (Ping timeout: 244 seconds)
2016-09-19 16:22:29	-->	flavi0 (~anon@21.130.90.92.rev.sfr.net) has joined ##c++
2016-09-19 16:22:38	<--	flavi0 (~anon@21.130.90.92.rev.sfr.net) has quit (Changing host)
2016-09-19 16:22:38	-->	flavi0 (~anon@unaffiliated/flavi0) has joined ##c++
2016-09-19 16:27:30	<--	zrneely (~zrneely@dhcp-18-189-119-166.dyn.MIT.EDU) has quit (Ping timeout: 264 seconds)
2016-09-19 16:27:44	-->	quickbrownfox (~henrique_@177.131.178.148) has joined ##c++
2016-09-19 16:28:54	-->	zrneely (~zrneely@dhcp-18-189-119-166.dyn.MIT.EDU) has joined ##c++
2016-09-19 16:29:00	<--	k_sze[work] (daff8506@gateway/web/freenode/ip.218.255.133.6) has quit (Quit: Page closed)
2016-09-19 16:29:56	<--	fearnothing (~nothing@unaffiliated/fearnothing) has quit (Remote host closed the connection)
2016-09-19 16:30:59	<--	wolfcub (~henrique_@177.131.178.148) has quit (Ping timeout: 265 seconds)
2016-09-19 16:31:13	-->	Immune (~Immune@173.55.30.110) has joined ##c++
2016-09-19 16:31:39	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit
2016-09-19 16:31:56	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-19 16:32:32	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-19 16:32:33	--	aceahmedmoh is now known as earlier
2016-09-19 16:33:49	-->	DaFiN (~chatzilla@unaffiliated/dafin) has joined ##c++
2016-09-19 16:34:08	--	earlier is now known as mussolini
2016-09-19 16:34:11	--	wolf_1 is now known as earlier
2016-09-19 16:34:13	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 255 seconds)
2016-09-19 16:34:13	-->	k_sze[work] (daff8506@gateway/web/freenode/ip.218.255.133.6) has joined ##c++
2016-09-19 16:34:28	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-19 16:34:36	--	mussolini is now known as w-ow
2016-09-19 16:34:54	<--	SuperThinlizzy (~cplusplus@h-67-102-175-59.sttn.wa.globalcapacity.com) has quit (Quit: 8==========D)
2016-09-19 16:34:54	--	earlier is now known as wolf_1
2016-09-19 16:34:55	--	w-ow is now known as earlier
2016-09-19 16:35:06	-->	jshjsh (~jshjsh@172.56.16.60) has joined ##c++
2016-09-19 16:35:52	-->	c0le (~c0le@59.99.251.45) has joined ##c++
2016-09-19 16:36:39	--	earlier is now known as ``w`^``6^
2016-09-19 16:37:05	--	wolf_1 is now known as ``w`^`88`^
2016-09-19 16:37:05		[16:37]
2016-09-19 16:37:14	<--	P1RATEZ (piratez@unaffiliated/p1ratez) has quit
2016-09-19 16:37:42	<--	k_j (~no@151.42.78.158) has quit (Ping timeout: 264 seconds)
2016-09-19 16:37:47	<--	CEnnis91 (uid3543@gateway/web/irccloud.com/x-gliikelnbsnysnwq) has quit (Quit: Connection closed for inactivity)
2016-09-19 16:38:43	<--	JoshS (~jshjsh@172.56.16.60) has quit (Ping timeout: 255 seconds)
2016-09-19 16:39:10	-->	SunnyD (~SunnyD@cpe-72-178-78-211.hot.res.rr.com) has joined ##c++
2016-09-19 16:40:06	<--	zrneely (~zrneely@dhcp-18-189-119-166.dyn.MIT.EDU) has quit (Ping timeout: 264 seconds)
2016-09-19 16:41:25	-->	medgno (~textual@c-73-181-187-190.hsd1.wa.comcast.net) has joined ##c++
2016-09-19 16:41:43	-->	Haruno (~Haruno@unaffiliated/haruno) has joined ##c++
2016-09-19 16:43:48	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-19 16:44:25	<--	EvilPenguin (~EvilPengu@2605:e000:6189:9600:3949:15ac:5ddb:4c54) has quit (Ping timeout: 248 seconds)
2016-09-19 16:44:30	-->	zrneely (~zrneely@dhcp-18-189-119-166.dyn.mit.edu) has joined ##c++
2016-09-19 16:44:42	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 276 seconds)
2016-09-19 16:46:12	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Remote host closed the connection)
2016-09-19 16:46:44	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-19 16:48:07	-->	Freze (~Freze@c-73-167-60-180.hsd1.ma.comcast.net) has joined ##c++
2016-09-19 16:48:10	-->	f10 (~flo@2001:470:52af:1:1883:b70e:19db:f1db) has joined ##c++
2016-09-19 16:49:28	-->	f10_ (~flo@2001:470:52af:1:242c:2fc9:d40d:50d3) has joined ##c++
2016-09-19 16:51:03	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Ping timeout: 240 seconds)
2016-09-19 16:51:46	<--	blueness (~blueness@gentoo/developer/blueness) has quit (Quit: blueness)
2016-09-19 16:52:02	<--	allen29 (~all@unaffiliated/allen29) has quit (Quit: Leaving)
2016-09-19 16:52:53	-->	gioerr (~gioerr@athedsl-4409952.home.otenet.gr) has joined ##c++
2016-09-19 16:52:53		[16:52]
2016-09-19 16:53:44	-->	SecondForm_Glenn (~Thunderbi@97-102-42-24.res.bhn.net) has joined ##c++
2016-09-19 16:54:35	<--	chachasmooth (~chachasmo@unaffiliated/chachasmooth) has quit (Ping timeout: 265 seconds)
2016-09-19 16:55:07	-->	JoshS (~jshjsh@172.56.16.60) has joined ##c++
2016-09-19 16:55:13	<--	hexagoxel (~hexagoxel@p200300798F1C4900021E33FFFE2231E9.dip0.t-ipconnect.de) has quit (Ping timeout: 250 seconds)
2016-09-19 16:57:07	-->	gp5st (~jim@pool-98-111-192-215.pitbpa.fios.verizon.net) has joined ##c++
2016-09-19 16:58:06	<--	jshjsh (~jshjsh@172.56.16.60) has quit (Ping timeout: 264 seconds)
2016-09-19 16:58:23	gp5st	I'm trying to think of a way to use the type system to prevent chained function calls from accepting the same value twice, so thing.func(a).func(b).func(a) wouldn't be allowed at compile time
2016-09-19 16:59:07	-->	chachasmooth (~chachasmo@unaffiliated/chachasmooth) has joined ##c++
2016-09-19 17:00:23	-->	hexagoxel (~hexagoxel@p5B29A1D8.dip0.t-ipconnect.de) has joined ##c++
2016-09-19 17:00:40	-->	Mnkras (~Mnkras@concrete5/781/Mnkras) has joined ##c++
2016-09-19 17:01:32	-->	daxim (~daxim@2a02:b18:c13b:28:0:b:e0f:ed) has joined ##c++
2016-09-19 17:03:31	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-19 17:04:33	lh_mouse	not so possible if 'the same value' means 'the same glvalue'.
2016-09-19 17:05:29	<--	Mnkras (~Mnkras@concrete5/781/Mnkras) has quit (Ping timeout: 272 seconds)
2016-09-19 17:05:58	lh_mouse	there could be a solution if 'the same value' means 'expressions that have the same (decayed) type'.
2016-09-19 17:06:29	<--	l2esonance (~l2esonanc@c-73-223-132-245.hsd1.ca.comcast.net) has quit (Ping timeout: 250 seconds)
2016-09-19 17:06:54	gp5st	lh_mouse: Having it work based on types would be workable
2016-09-19 17:07:04	-->	l2esonance (~l2esonanc@c-73-223-132-245.hsd1.ca.comcast.net) has joined ##c++
2016-09-19 17:07:24	<--	zrneely (~zrneely@dhcp-18-189-119-166.dyn.mit.edu) has quit (Quit: Leaving)
2016-09-19 17:07:35	<--	DragonTamer (~DragonTam@unaffiliated/dragontamer) has quit (Quit: Leaving)
2016-09-19 17:08:14	daxim	I'm following <http://www.cplusplus.com/doc/tutorial/constants/> and tried out u8 prefix, thus: <http://paste.scsys.co.uk/534080> – and it results in "main.cpp:7:16: error: ‘u8’ was not declared in this scope" – what's wrong?
2016-09-19 17:08:14		[17:08]
2016-09-19 17:08:34	gp5st	I guess, come to think of it, that's what I was expecting anyway. It wouldn't really work based upon the identity of the expression, a glvalue I just learned that's called
2016-09-19 17:09:00	gp5st	lh_mouse: however, in that example above, a and b would share a common base type
2016-09-19 17:09:12	lh_mouse	gp5st, struct Thing { template<typename ...ExcludedTypes> struct Proxy { Thing *p; template<typename T> Proxy<ExcludedTypes..., std::decay_t<T>> func(T &&t){ p->func(std::forward<T>(t)); return {p}; } }; Proxy<> func(T &&t){ /* do something */ return {this}; } };
2016-09-19 17:09:31	gp5st	lh_mouse: thanks:) give me a moment to digest that
2016-09-19 17:10:09	<--	medgno (~textual@c-73-181-187-190.hsd1.wa.comcast.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-19 17:10:16	lh_mouse	gp5st, you are going to need some SFINAE tricks to prevent ExcludedTypes from matching `Proxy::func`.
2016-09-19 17:10:28	lh_mouse	It isn't going to be neat.
2016-09-19 17:11:27	gp5st	lh_mouse: I wasn't expecting it to be neat, except as in neat o that I can't make dumb errors :)
2016-09-19 17:11:54	<--	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has quit (Ping timeout: 264 seconds)
2016-09-19 17:12:55	-->	sanitypassing (~sanitypas@unaffiliated/sanitypassing) has joined ##c++
2016-09-19 17:13:04	lh_mouse	The key is to have some proxy objects that carry the excluded types with their template parameters and forward function calls to their parent object.
2016-09-19 17:13:37	sanitypassing	hi, is it possible to find all values in a unordered_map whose keys begin a string (but may have more characters beyond those first few)?
2016-09-19 17:13:59	lh_mouse	sanitypassing, yes, in O(N) time.
2016-09-19 17:14:00	gp5st	lh_mouse: yeah, I'm still soaking in your example. (ab)using the type system like this is new to me (as is most of modern c++). Trying stuff like this has been very enlightening.
2016-09-19 17:14:15	lh_mouse	:>
2016-09-19 17:14:17	sanitypassing	lh_mouse: would it be faster to just trim keys before insertion?
2016-09-19 17:14:21	<--	skweek (~skweek@2607:fe50:0:810b:a414:1cf9:8eb8:f755) has quit (Ping timeout: 272 seconds)
2016-09-19 17:14:35	gp5st	sanitypassing: are you implicitly ruling out iterating over all those objects?
2016-09-19 17:14:56	sanitypassing	the objects in the unordered_map? Yes.
2016-09-19 17:14:57	lh_mouse	sanitypassing, you are going to break uniqueness of keys.
2016-09-19 17:15:06	<--	my123 (~my123@unaffiliated/kill--9-1/x-8776976) has quit (Read error: Connection reset by peer)
2016-09-19 17:15:22	gp5st	sanitypassing: have you considered a trie to store the map?
2016-09-19 17:15:28	sanitypassing	the unordered_map contains a vector; any collisions are appended
2016-09-19 17:15:32	lh_mouse	sanitypassing, try an ordered std::map.
2016-09-19 17:16:20	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Remote host closed the connection)
2016-09-19 17:16:33	sanitypassing	not too worried about key uniqueness; I only need all strings that contain a given substring, and the unordered_map seemed like a good way to do that without writing a complicated data structure
2016-09-19 17:16:56	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-19 17:17:10	<--	daxim (~daxim@2a02:b18:c13b:28:0:b:e0f:ed) has left ##c++ ("pro quo, Agent Starling")
2016-09-19 17:17:13	m_ben	lh_mouse: what do you mean with Proxy<> func(...) above?
2016-09-19 17:17:23	lh_mouse	sanitypassing, unordered_map apparently is NOT.
2016-09-19 17:17:29	lh_mouse	std::map is.
2016-09-19 17:17:32	-->	UnripeSuica_mobi (~UnlikeSui@147.47.141.74) has joined ##c++
2016-09-19 17:17:44	lh_mouse	m_ben, it is a function returning a Proxy<>.
2016-09-19 17:17:52	<--	JoshS (~jshjsh@172.56.16.60) has quit (Ping timeout: 255 seconds)
2016-09-19 17:17:53	sanitypassing	not what? ordered?
2016-09-19 17:18:01	sanitypassing	I don't need it to be ordered
2016-09-19 17:18:02	m_ben	lh_mouse: but what is T in func(T&& t)?
2016-09-19 17:18:22	m_ben	I should have been more precise
2016-09-19 17:20:08	lh_mouse	sanitypassing, but you are asking for some index by a common prefix, no?
2016-09-19 17:20:11	-->	wilx (wilx@27.228.broadband3.iol.cz) has joined ##c++
2016-09-19 17:20:27	lh_mouse	m_ben, the parameter is a forwarding reference.
2016-09-19 17:21:05	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Ping timeout: 240 seconds)
2016-09-19 17:21:06	<--	UnlikeSuika_mobi (~UnlikeSui@147.46.113.63) has quit (Ping timeout: 276 seconds)
2016-09-19 17:21:25	m_ben	oh there is a template declaration missing
2016-09-19 17:21:38	sanitypassing	I want to retrieve any value in the unordered_map that has a key beginning with some arbitrary string, specifically
2016-09-19 17:21:54	m_ben	template <typename T> proxy<> func(T
2016-09-19 17:21:57	m_ben	...
2016-09-19 17:22:14	lh_mouse	oops, you are right.
2016-09-19 17:22:24	gp5st	sanitypassing: you'll have to itereate over everything or use a different data structure
2016-09-19 17:22:24	<--	UnripeSuica_mobi (~UnlikeSui@147.47.141.74) has quit (Ping timeout: 276 seconds)
2016-09-19 17:22:26	lh_mouse	sanitypassing, yes, use std::map.
2016-09-19 17:22:32	chrisf	sanitypassing: the ordering helps here. the matching keys are a contiguous range; whereas the unordered_map requires iterating over the whole thing.
2016-09-19 17:23:09	lh_mouse	It can be done with `for(auto it = my_map.begin(); (it != my_map.end()) && (it->first.compare("prefix", 6) == 0); ++it){ ... }`.
2016-09-19 17:23:29	sanitypassing	Alright, I'll have a go at it with std::map then
2016-09-19 17:23:29		[17:23]
2016-09-19 17:24:02	-->	UnlikeSuika_mobi (~UnlikeSui@223.62.212.34) has joined ##c++
2016-09-19 17:24:35	gp5st	lh_mouse: where does the exclusion happen? if I'm understanding this, it keeps a list of all the passed in types?
2016-09-19 17:24:49	lh_mouse	correct.
2016-09-19 17:24:58	chrisf	sanitypassing: not actually implemented this in a while, but lower_bound/upper_bound ought to do the bulk of the work for you
2016-09-19 17:26:24	lh_mouse	gp5st, use some SFINAE tricks. This is going to be nasty.
2016-09-19 17:27:24	lh_mouse	template<typename T, typename ...ExcludedTypes, std::enable_if_t<!is_type_in_pack<decay_t<T>, ExcludedTypes>::value, int> = 0> Proxy<...> func(...){ ... }
2016-09-19 17:27:39	lh_mouse	then implement `is_type_in_pack`. :>
2016-09-19 17:28:09	gp5st	lh_mouse: oh, I understand what you meant now
2016-09-19 17:29:27	-->	Vingador (~quassel@187.113.106.229) has joined ##c++
2016-09-19 17:30:11	gp5st	sorry, I'm being a bit slow
2016-09-19 17:31:34	-->	elnormous (~elnormous@91.105.17.158) has joined ##c++
2016-09-19 17:34:37	<--	MK (~MK@2602:252:d6e:a9b0:300f:389e:be31:c02f) has quit (Ping timeout: 272 seconds)
2016-09-19 17:35:48	<--	neurodrone (~neurodron@unaffiliated/neurodrone) has quit (Quit: neurodrone)
2016-09-19 17:36:34	<--	andyhuzhill (~Thunderbi@14.23.45.178) has quit (Ping timeout: 244 seconds)
2016-09-19 17:36:37	-->	sanct (~sanct@212.35.67.11) has joined ##c++
2016-09-19 17:36:45	<--	elnormous (~elnormous@91.105.17.158) has quit (Ping timeout: 244 seconds)
2016-09-19 17:38:52	-->	DigiByteDev (~JT2@n218250011174.netvigator.com) has joined ##c++
2016-09-19 17:38:52		[17:38]
2016-09-19 17:39:31	-->	andyhuzhill (~Thunderbi@14.23.45.178) has joined ##c++
2016-09-19 17:40:05	-->	reveredge (~reveredge@111.119.209.219) has joined ##c++
2016-09-19 17:41:41	<--	secondwtq (~ftlight_n@118.193.168.40) has quit (Quit: ヾ(´￢｀)ﾉ)
2016-09-19 17:43:04	<--	SecondForm_Glenn (~Thunderbi@97-102-42-24.res.bhn.net) has quit (Ping timeout: 255 seconds)
2016-09-19 17:43:08	-->	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has joined ##c++
2016-09-19 17:43:18	<--	UnlikeSuika_mobi (~UnlikeSui@223.62.212.34) has quit (Quit: RIP)
2016-09-19 17:43:30	-->	UnlikeSuika_mobi (~UnlikeSui@147.47.141.74) has joined ##c++
2016-09-19 17:44:09	-->	Timmmeh (~Timmeh@45-18-173-36.lightspeed.hstntx.sbcglobal.net) has joined ##c++
2016-09-19 17:44:18	<--	Timmmeh (~Timmeh@45-18-173-36.lightspeed.hstntx.sbcglobal.net) has left ##c++
2016-09-19 17:44:36	-->	secondwtq (~ftlight_n@118.193.168.40) has joined ##c++
2016-09-19 17:45:16	-->	JoshS (~jshjsh@172.56.17.251) has joined ##c++
2016-09-19 17:46:03	<--	jbud (~jbud@ip-24-54-73-229.user.start.ca) has quit (Quit: leaving)
2016-09-19 17:47:13	-->	P1RATEZ (piratez@unaffiliated/p1ratez) has joined ##c++
2016-09-19 17:47:36	-->	UnripeSuica_mobi (~UnlikeSui@223.62.212.34) has joined ##c++
2016-09-19 17:47:47	<--	cylon512__ (~i_cylon51@nat2-nj02.vmpanel.net) has quit (Ping timeout: 265 seconds)
2016-09-19 17:48:45	-->	nilg (~user@77.70.2.229) has joined ##c++
2016-09-19 17:49:14	<--	yokel (~yokel@unaffiliated/contempt) has quit (Ping timeout: 265 seconds)
2016-09-19 17:49:17	<--	BytesAndCoffee (~yazdmich@bytes.coffee) has quit (Ping timeout: 265 seconds)
2016-09-19 17:50:43	<--	jumbers (~jumbers@fsf/member/jumbers) has quit (Ping timeout: 240 seconds)
2016-09-19 17:50:44	<--	UnlikeSuika_mobi (~UnlikeSui@147.47.141.74) has quit (Ping timeout: 265 seconds)
2016-09-19 17:51:10	<--	andreyv (~andrey@unaffiliated/andreyv) has quit (Ping timeout: 255 seconds)
2016-09-19 17:51:24	<--	ap4y (~user@210.54.39.82) has quit (Remote host closed the connection)
2016-09-19 17:51:45	-->	yazdmich (~yazdmich@bytes.coffee) has joined ##c++
2016-09-19 17:51:59	-->	jumbers (~jumbers@frank.jnumbers.com) has joined ##c++
2016-09-19 17:51:59	<--	jumbers (~jumbers@frank.jnumbers.com) has quit (Changing host)
2016-09-19 17:51:59	-->	jumbers (~jumbers@fsf/member/jumbers) has joined ##c++
2016-09-19 17:52:04	<--	Freze (~Freze@c-73-167-60-180.hsd1.ma.comcast.net) has quit (Ping timeout: 255 seconds)
2016-09-19 17:52:19	-->	yokel (~yokel@unaffiliated/contempt) has joined ##c++
2016-09-19 17:53:14	-->	andreyv (~andrey@unaffiliated/andreyv) has joined ##c++
2016-09-19 17:54:25	<--	dj_pi (~dj@c-73-191-212-56.hsd1.mi.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-19 17:54:25		[17:54]
2016-09-19 17:55:24	<--	arescorpio (~arescorpi@82-40-16-190.fibertel.com.ar) has quit (Excess Flood)
2016-09-19 17:55:26	-->	cylon512__ (~i_cylon51@nat2-nj02.vmpanel.net) has joined ##c++
2016-09-19 17:55:30	<--	UnripeSuica_mobi (~UnlikeSui@223.62.212.34) has quit (Quit: RIP)
2016-09-19 17:56:00	<--	Ben2560_ (~quassel@137.154.246.113) has quit (Ping timeout: 265 seconds)
2016-09-19 17:56:12	-->	UnlikeSuika_mobi (~UnlikeSui@147.47.141.74) has joined ##c++
2016-09-19 17:56:50	-->	UnripeSuica_mobi (~UnlikeSui@223.62.212.34) has joined ##c++
2016-09-19 17:58:06	-->	ScorpionJack (~Scorpion@unaffiliated/scorpionjack) has joined ##c++
2016-09-19 17:59:31	<--	Rickmasta (~Rick@pool-96-246-90-176.nycmny.fios.verizon.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-19 18:00:10	<--	UnripeSuica_mobi (~UnlikeSui@223.62.212.34) has quit (Client Quit)
2016-09-19 18:00:15	<--	m_ben (~m_ben@unaffiliated/m-ben/x-5917362) has quit (Ping timeout: 260 seconds)
2016-09-19 18:00:22	-->	UnripeSuica_mobi (~UnlikeSui@1.210.159.145) has joined ##c++
2016-09-19 18:01:06	<--	UnlikeSuika_mobi (~UnlikeSui@147.47.141.74) has quit (Ping timeout: 264 seconds)
2016-09-19 18:01:54	-->	UnlikeSuika_mobi (~UnlikeSui@223.62.212.34) has joined ##c++
2016-09-19 18:01:58	<--	f10_ (~flo@2001:470:52af:1:242c:2fc9:d40d:50d3) has quit (Ping timeout: 255 seconds)
2016-09-19 18:01:58	<--	f10 (~flo@2001:470:52af:1:1883:b70e:19db:f1db) has quit (Ping timeout: 255 seconds)
2016-09-19 18:03:07	-->	Ben2560 (~quassel@137.154.198.169) has joined ##c++
2016-09-19 18:04:06	<--	UnlikeSuika_mobi (~UnlikeSui@223.62.212.34) has quit (Client Quit)
2016-09-19 18:04:18	-->	UnlikeSuika_mobi (~UnlikeSui@1.210.159.146) has joined ##c++
2016-09-19 18:04:41	<--	UnripeSuica_mobi (~UnlikeSui@1.210.159.145) has quit (Ping timeout: 240 seconds)
2016-09-19 18:04:50	-->	bounce (bounce@unaffiliated/bounce) has joined ##c++
2016-09-19 18:05:43	-->	itsme_ (~textual@46.166.164.90) has joined ##c++
2016-09-19 18:07:43	<--	vralphv (~vralp@d137-186-58-40.abhsia.telus.net) has quit (Quit: Lost terminal)
2016-09-19 18:09:38	w3z	thats of course not legal, even without trying to decipher your goal
2016-09-19 18:09:38		[18:09]
2016-09-19 18:09:53	w3z	the parameter pack has to be the last argument
2016-09-19 18:11:48	-->	symm- (~symm-@86.127.152.32) has joined ##c++
2016-09-19 18:13:06	<--	dv_ (~quassel@62.178.118.86) has quit (Ping timeout: 264 seconds)
2016-09-19 18:13:14	-->	dv__ (~quassel@62.178.118.86) has joined ##c++
2016-09-19 18:13:27	w3z	theres all kinds of nonsense ther :) like the use of an unexpanded pack too :)
2016-09-19 18:13:32	w3z	e
2016-09-19 18:14:16	-->	Freze (~Freze@c-73-167-60-180.hsd1.ma.comcast.net) has joined ##c++
2016-09-19 18:14:57	<--	josh (~josh@c-67-182-242-240.hsd1.ut.comcast.net) has quit (Ping timeout: 250 seconds)
2016-09-19 18:15:06	<--	glenfe (~glen@unaffiliated/glenfe) has quit (Quit: Leaving)
2016-09-19 18:15:25	-->	glenfe (~glen@ool-18b8d08e.dyn.optonline.net) has joined ##c++
2016-09-19 18:15:26	<--	glenfe (~glen@ool-18b8d08e.dyn.optonline.net) has quit (Changing host)
2016-09-19 18:15:26	-->	glenfe (~glen@unaffiliated/glenfe) has joined ##c++
2016-09-19 18:17:21	<--	nilof (~saolof@92-32-80-134.tn.glocalnet.net) has quit (Remote host closed the connection)
2016-09-19 18:19:08	-->	UnripeSuica_mobi (~UnlikeSui@223.62.212.34) has joined ##c++
2016-09-19 18:20:48	-->	josh (~josh@c-67-182-242-240.hsd1.ut.comcast.net) has joined ##c++
2016-09-19 18:23:18	<--	UnlikeSuika_mobi (~UnlikeSui@1.210.159.146) has quit (Ping timeout: 264 seconds)
2016-09-19 18:23:50	<--	codercodi (~codercodi@108-192-148-40.lightspeed.gnvlsc.sbcglobal.net) has quit (Read error: Connection reset by peer)
2016-09-19 18:23:53	<--	zwliew (uid161395@gateway/web/irccloud.com/x-mcqefjnxvofvhlca) has quit (Quit: Connection closed for inactivity)
2016-09-19 18:24:10	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-19 18:24:46	<--	UnripeSuica_mobi (~UnlikeSui@223.62.212.34) has quit (Quit: RIP)
2016-09-19 18:24:46		[18:24]
2016-09-19 18:25:07	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-19 18:26:54	-->	winfli (~winfli@189.208.142.207) has joined ##c++
2016-09-19 18:27:37	<--	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has quit (Ping timeout: 255 seconds)
2016-09-19 18:28:43	<--	bigd0g (~bigd0g@ip72-221-88-40.ri.ri.cox.net) has quit (Quit: 73s)
2016-09-19 18:28:51	<--	winfli (~winfli@189.208.142.207) has quit (Quit: Saliendo)
2016-09-19 18:29:37	<--	Crazylemon64 (~Crazylemo@c-98-237-179-255.hsd1.wa.comcast.net) has quit (Quit: Bye!)
2016-09-19 18:30:17	-->	Crazylemon64 (~Crazylemo@c-98-237-179-255.hsd1.wa.comcast.net) has joined ##c++
2016-09-19 18:30:28	<--	Crazylemon64 (~Crazylemo@c-98-237-179-255.hsd1.wa.comcast.net) has quit (Remote host closed the connection)
2016-09-19 18:30:32	-->	jshjsh (~jshjsh@172.56.17.251) has joined ##c++
2016-09-19 18:31:12	w3z	recovering from an induced food coma, laid low by a burrito .... so whats the goal?
2016-09-19 18:31:23	<--	itsme_ (~textual@46.166.164.90) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-19 18:31:27	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-19 18:31:38	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-19 18:31:58	-->	UnlikeSuika_mobi (~UnlikeSui@1.210.159.146) has joined ##c++
2016-09-19 18:33:12	w3z	the same value, unless theyre non type param values, bzzt, the same type well ... i guess though its whacky
2016-09-19 18:33:16	<--	JoshS (~jshjsh@172.56.17.251) has quit (Ping timeout: 265 seconds)
2016-09-19 18:33:28	-->	blueness (~blueness@gentoo/developer/blueness) has joined ##c++
2016-09-19 18:33:33	-->	Crazylemon64 (~Crazylemo@c-98-237-179-255.hsd1.wa.comcast.net) has joined ##c++
2016-09-19 18:33:57	-->	Zxpr1jk (~zxpr1jk@24.214.61.47) has joined ##c++
2016-09-19 18:34:14	-->	ARCADIVS (~RMM@97.84.20.251) has joined ##c++
2016-09-19 18:34:28	<--	Crazylemon64 (~Crazylemo@c-98-237-179-255.hsd1.wa.comcast.net) has quit (Remote host closed the connection)
2016-09-19 18:34:40	<--	gp5st (~jim@pool-98-111-192-215.pitbpa.fios.verizon.net) has quit (Ping timeout: 260 seconds)
2016-09-19 18:34:45	-->	Crazylemon64 (~Crazylemo@c-98-237-179-255.hsd1.wa.comcast.net) has joined ##c++
2016-09-19 18:35:22	<--	Crazylemon64 (~Crazylemo@c-98-237-179-255.hsd1.wa.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-19 18:35:37	-->	Crazylemon64 (~Crazylemo@c-98-237-179-255.hsd1.wa.comcast.net) has joined ##c++
2016-09-19 18:37:00	<--	kadoban (~mud@unaffiliated/kadoban) has quit (Quit: bye)
2016-09-19 18:40:05	<--	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has quit (Read error: Connection reset by peer)
2016-09-19 18:40:05		[18:40]
2016-09-19 18:40:13	<--	Freze (~Freze@c-73-167-60-180.hsd1.ma.comcast.net) has quit (Ping timeout: 255 seconds)
2016-09-19 18:40:57	<--	Ben2560 (~quassel@137.154.198.169) has quit (Ping timeout: 250 seconds)
2016-09-19 18:41:23	-->	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has joined ##c++
2016-09-19 18:42:10	-->	snowkidind (~textual@pool-96-255-207-158.washdc.fios.verizon.net) has joined ##c++
2016-09-19 18:42:21	w3z	{f(0).f("wee");} template<class T,class...E> struct is_not_in :true_type{/*placeholder*/}; template<class...E> struct exclude{template<class T> enable_if_t<is_not_in<T,E...>{},exclude<T,E...>> f(T){/*do something*/ return {};}}; template<class T> exclude<T> f(T){/*do something*/ return {};}
2016-09-19 18:42:21	geordi	<no output>
2016-09-19 18:42:27	-->	Ben2560 (~quassel@137.154.198.169) has joined ##c++
2016-09-19 18:43:06	<--	josh (~josh@c-67-182-242-240.hsd1.ut.comcast.net) has quit (Ping timeout: 264 seconds)
2016-09-19 18:43:08	w3z	implementing is_not_in is simply can be a recursive is_same chack or a fold of anded is_same checks
2016-09-19 18:43:15	-->	Enhex (~Enhex@82.252.138.77.rev.sfr.net) has joined ##c++
2016-09-19 18:43:32	w3z	aargh, look at those typos
2016-09-19 18:43:57	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-19 18:44:00	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-19 18:44:03	<--	sadf32f32 (~sadf32f32@68-200-189-166.res.bhn.net) has quit (Ping timeout: 240 seconds)
2016-09-19 18:44:07	w3z	anyway, sillyness, youre wasting your time
2016-09-19 18:44:07	<--	TheSeven (~quassel@rockbox/developer/TheSeven) has quit (Disconnected by services)
2016-09-19 18:45:30	<--	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has quit (Quit: Leaving.)
2016-09-19 18:46:21	<--	myhau (~myhau@89-64-1-66.dynamic.chello.pl) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-09-19 18:48:21	-->	karab44 (~karab44@unaffiliated/karab44) has joined ##c++
2016-09-19 18:48:21	w3z	furthermore since f doesnt actually need any state from exclude, it can be static
2016-09-19 18:48:38	w3z	but yeah, dont write such wankery
2016-09-19 18:48:45	<--	Ben2560 (~quassel@137.154.198.169) has quit (Ping timeout: 250 seconds)
2016-09-19 18:51:21	<--	Cabanossi (~Cabanossi@p5DD7A781.dip0.t-ipconnect.de) has quit (Ping timeout: 248 seconds)
2016-09-19 18:51:59	-->	t0by (~t0by@host132-178-dynamic.52-82-r.retail.telecomitalia.it) has joined ##c++
2016-09-19 18:52:00	<--	t0by (~t0by@host132-178-dynamic.52-82-r.retail.telecomitalia.it) has quit (Client Quit)
2016-09-19 18:52:40	<--	orbiter (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has quit (Read error: Connection reset by peer)
2016-09-19 18:53:13	-->	orbiter (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has joined ##c++
2016-09-19 18:53:38	-->	Cabanossi (~Cabanossi@p5DD7AFBA.dip0.t-ipconnect.de) has joined ##c++
2016-09-19 18:53:47	-->	sophia7 (~sophia7@unaffiliated/sophia7) has joined ##c++
2016-09-19 18:54:13	-->	Kn|t3 (~agarwalvi@104.132.196.76) has joined ##c++
2016-09-19 18:54:27	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 265 seconds)
2016-09-19 18:54:44	<--	Cohedrin (~textual@c-73-170-239-253.hsd1.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-09-19 18:54:51	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-19 18:55:37	<--	Sculptor (~Sculptor@cable-24-135-26-151.dynamic.sbb.rs) has quit (Ping timeout: 244 seconds)
2016-09-19 18:55:37		[18:55]
2016-09-19 18:56:33	<--	yokel (~yokel@unaffiliated/contempt) has quit (Ping timeout: 240 seconds)
2016-09-19 18:56:42	<--	jumbers (~jumbers@fsf/member/jumbers) has quit (Ping timeout: 240 seconds)
2016-09-19 18:59:46	<--	shirt (~shirt@adsl-v01-3db14831dc15da1b.tau.ac.il) has quit (Ping timeout: 244 seconds)
2016-09-19 18:59:56	<--	Ropeney (~Ropeney@tank.mindvision.com.au) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-19 19:00:08	<--	KindOne (kindone@freenude/topless/kindone) has quit (Read error: Connection reset by peer)
2016-09-19 19:02:33	<--	andreyv (~andrey@unaffiliated/andreyv) has quit (Ping timeout: 248 seconds)
2016-09-19 19:04:49	<--	EmeraldExplorer (uid87039@gateway/web/irccloud.com/x-vcornxpihwlnwzwf) has quit (Quit: Connection closed for inactivity)
2016-09-19 19:04:53	-->	UnripeSuica_mobi (~UnlikeSui@223.62.212.34) has joined ##c++
2016-09-19 19:04:57	-->	forgottenone (~forgotten@176.234.125.129) has joined ##c++
2016-09-19 19:05:07	<--	UnripeSuica_mobi (~UnlikeSui@223.62.212.34) has quit (Client Quit)
2016-09-19 19:05:20	-->	UnripeSuica_mobi (~UnlikeSui@223.62.212.34) has joined ##c++
2016-09-19 19:05:38	-->	sadf32f32 (~sadf32f32@68-200-189-166.res.bhn.net) has joined ##c++
2016-09-19 19:06:03	<--	ZMatt2 (~ZMatt2@host80-146-dynamic.59-82-r.retail.telecomitalia.it) has quit (Ping timeout: 240 seconds)
2016-09-19 19:07:11	<--	UnlikeSuika_mobi (~UnlikeSui@1.210.159.146) has quit (Ping timeout: 244 seconds)
2016-09-19 19:07:20	<--	cylon512__ (~i_cylon51@nat2-nj02.vmpanel.net) has quit (Ping timeout: 260 seconds)
2016-09-19 19:08:14	-->	DogHackit_ (~quassel@2605:e000:1117:8043:ba27:ebff:fedb:ba9f) has joined ##c++
2016-09-19 19:08:15	<--	DogHackit (~quassel@2605:e000:1117:8043:ba27:ebff:fedb:ba9f) has quit (Ping timeout: 250 seconds)
2016-09-19 19:08:48	-->	ZMatt2 (~ZMatt2@host80-146-dynamic.59-82-r.retail.telecomitalia.it) has joined ##c++
2016-09-19 19:09:31	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-19 19:10:15	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-19 19:10:25	-->	Cohedrin (~textual@192.77.237.205) has joined ##c++
2016-09-19 19:11:18	-->	KindOne (kindone@freenude/topless/kindone) has joined ##c++
2016-09-19 19:11:18		[19:11]
2016-09-19 19:11:47	<--	illerucis (~illerucis@2620:10d:c090:180::1:8410) has quit (Ping timeout: 250 seconds)
2016-09-19 19:11:49	<--	gioerr (~gioerr@athedsl-4409952.home.otenet.gr) has quit (Ping timeout: 244 seconds)
2016-09-19 19:13:44	-->	anotherguy (2ec5b8ed@gateway/web/freenode/ip.46.197.184.237) has joined ##c++
2016-09-19 19:14:59	-->	zwliew (uid161395@gateway/web/irccloud.com/x-jxixnchiwghskvub) has joined ##c++
2016-09-19 19:15:46	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 255 seconds)
2016-09-19 19:16:03	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-19 19:17:55	<--	sadf32f32 (~sadf32f32@68-200-189-166.res.bhn.net) has quit (Read error: No route to host)
2016-09-19 19:18:18	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-19 19:20:10	-->	ckwoe90 (dc9cbb47@gateway/web/freenode/ip.220.156.187.71) has joined ##c++
2016-09-19 19:20:34	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 265 seconds)
2016-09-19 19:21:12	<--	orbiter (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has quit (Read error: Connection reset by peer)
2016-09-19 19:21:21	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-19 19:22:13	-->	yokel (~yokel@unaffiliated/contempt) has joined ##c++
2016-09-19 19:22:22	-->	andreyv (~andrey@unaffiliated/andreyv) has joined ##c++
2016-09-19 19:22:38	<--	Vingador (~quassel@187.113.106.229) has quit (Read error: Connection reset by peer)
2016-09-19 19:22:46	-->	jaafar (~quassel@50-206-78-205-static.hfc.comcastbusiness.net) has joined ##c++
2016-09-19 19:22:47	<--	ckwoe90 (dc9cbb47@gateway/web/freenode/ip.220.156.187.71) has left ##c++
2016-09-19 19:23:40	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Ping timeout: 260 seconds)
2016-09-19 19:23:42	-->	Akimb (~Akimb@88-119-138-154.static.zebra.lt) has joined ##c++
2016-09-19 19:23:56	-->	Vingador (~quassel@187.113.106.229) has joined ##c++
2016-09-19 19:24:59	-->	cylon512__ (~i_cylon51@nat2-nj02.vmpanel.net) has joined ##c++
2016-09-19 19:26:23	-->	jumbers (~jumbers@frank.jnumbers.com) has joined ##c++
2016-09-19 19:26:23		[19:26]
2016-09-19 19:26:23	<--	jumbers (~jumbers@frank.jnumbers.com) has quit (Changing host)
2016-09-19 19:26:23	-->	jumbers (~jumbers@fsf/member/jumbers) has joined ##c++
2016-09-19 19:27:10	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-19 19:27:56	<--	Gabe (~Gabe@75-170-43-116.eugn.qwest.net) has quit (Ping timeout: 255 seconds)
2016-09-19 19:28:04	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-19 19:28:38	-->	mss_cyclist (~MSe@89-250-189-210.tangos.nl) has joined ##c++
2016-09-19 19:31:48	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-19 19:32:14	<--	P1RATEZ (piratez@unaffiliated/p1ratez) has quit (Ping timeout: 265 seconds)
2016-09-19 19:32:45	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-19 19:33:25	-->	elnormous (~elnormous@91.105.17.158) has joined ##c++
2016-09-19 19:36:27	-->	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has joined ##c++
2016-09-19 19:38:33	<--	elnormous (~elnormous@91.105.17.158) has quit (Ping timeout: 240 seconds)
2016-09-19 19:39:21	<--	yeticry (~yeticry@117.70.53.122) has quit (Ping timeout: 248 seconds)
2016-09-19 19:39:54	-->	silent_freak (672b7062@gateway/web/freenode/ip.103.43.112.98) has joined ##c++
2016-09-19 19:40:58	<--	Crazylemon64 (~Crazylemo@c-98-237-179-255.hsd1.wa.comcast.net) has quit (Ping timeout: 255 seconds)
2016-09-19 19:41:16	-->	Saitama (~ShadowMas@112.215.173.93) has joined ##c++
2016-09-19 19:41:18	<--	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has quit (Ping timeout: 264 seconds)
2016-09-19 19:41:20	-->	yeticry (~yeticry@183.160.5.162) has joined ##c++
2016-09-19 19:42:06	-->	kaffeetrauma (~Thunderbi@n37.informatik.fh-dortmund.de) has joined ##c++
2016-09-19 19:42:06		[19:42]
2016-09-19 19:42:13	-->	lolek (~lolek@unaffiliated/marcin) has joined ##c++
2016-09-19 19:42:18	<--	lolek (~lolek@unaffiliated/marcin) has left ##c++
2016-09-19 19:43:51	-->	rtkt (~rtkt@226.18-78-194.adsl-static.isp.belgacom.be) has joined ##c++
2016-09-19 19:45:48	<--	CuriousErnestBro (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has quit (Quit: Leaving)
2016-09-19 19:48:09	-->	kasper^ (~safaf@82.137.11.168) has joined ##c++
2016-09-19 19:50:22	<--	Vingador (~quassel@187.113.106.229) has quit (Remote host closed the connection)
2016-09-19 19:50:33	<--	Zxpr1jk (~zxpr1jk@24.214.61.47) has quit (Read error: Connection reset by peer)
2016-09-19 19:50:56	-->	Paradisee (~quassel@93.55.92.148) has joined ##c++
2016-09-19 19:52:34	-->	jorj (~jorj@162.220.240.216) has joined ##c++
2016-09-19 19:52:46	-->	Miroboru (~myrvoll@78.91.103.24) has joined ##c++
2016-09-19 19:54:21	<--	UnripeSuica_mobi (~UnlikeSui@223.62.212.34) has quit (Quit: RIP)
2016-09-19 19:54:33	-->	UnlikeSuika_mobi (~UnlikeSui@115.93.122.107) has joined ##c++
2016-09-19 19:54:53	-->	bocaneri (~bocaneri@about/linux/staff/sauvin) has joined ##c++
2016-09-19 19:55:27	<--	UnlikeSuika_mobi (~UnlikeSui@115.93.122.107) has quit (Read error: Connection reset by peer)
2016-09-19 19:55:36	<--	Kn|t3 (~agarwalvi@104.132.196.76) has quit (Quit: Kn|t3)
2016-09-19 19:56:03	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 240 seconds)
2016-09-19 19:57:39	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-19 19:57:39		[19:57]
2016-09-19 19:58:17	-->	UnlikeSuika (~UnlikeSui@115.93.122.107) has joined ##c++
2016-09-19 19:59:06	<--	Enhex (~Enhex@82.252.138.77.rev.sfr.net) has quit (Read error: Connection reset by peer)
2016-09-19 19:59:27	-->	UnlikeSuika_mobi (~UnlikeSui@115.93.122.107) has joined ##c++
2016-09-19 19:59:27	-->	tocka (~tocka@78-56-107-170.static.zebra.lt) has joined ##c++
2016-09-19 19:59:58	<--	snowkidind (~textual@pool-96-255-207-158.washdc.fios.verizon.net) has quit (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
2016-09-19 20:01:26	-->	xnavor (~xnavor@vbg-gw.proceranetworks.com) has joined ##c++
2016-09-19 20:03:20	<--	Leovale (~Leovale@45.72.141.66) has quit (Read error: Connection reset by peer)
2016-09-19 20:03:51	-->	casscode (~bru@169-0-91-62.ip.afrihost.co.za) has joined ##c++
2016-09-19 20:04:35	<--	Guest57069 (~SorcererX@cm-84.212.210.160.getinternet.no) has quit (Quit: brb.)
2016-09-19 20:05:02	-->	SorcererX (~SorcererX@cm-84.212.210.160.getinternet.no) has joined ##c++
2016-09-19 20:06:28	-->	my123 (~my123@13.85.69.239) has joined ##c++
2016-09-19 20:06:28	<--	my123 (~my123@13.85.69.239) has quit (Changing host)
2016-09-19 20:06:28	-->	my123 (~my123@unaffiliated/kill--9-1/x-8776976) has joined ##c++
2016-09-19 20:06:46	<--	flavi0 (~anon@unaffiliated/flavi0) has quit (Quit: Lost terminal)
2016-09-19 20:09:06	<--	djcb (~user@85-76-16-54-nat.elisa-mobile.fi) has quit (Remote host closed the connection)
2016-09-19 20:09:20	-->	djcb (~user@85-76-16-54-nat.elisa-mobile.fi) has joined ##c++
2016-09-19 20:09:38	-->	szulak (uid162164@gateway/web/irccloud.com/x-gidkguwxkgzrgumx) has joined ##c++
2016-09-19 20:09:41	<--	symm- (~symm-@86.127.152.32) has quit (Ping timeout: 244 seconds)
2016-09-19 20:09:44	<--	TMM (~hp@fsf/member/pdpc.professional.tmm) has quit (Quit: Ex-Chat)
2016-09-19 20:10:19	<--	glenfe (~glen@unaffiliated/glenfe) has quit (Quit: Leaving)
2016-09-19 20:13:23	-->	jackhum (uid97400@gateway/web/irccloud.com/x-iznmypmzpnkelioj) has joined ##c++
2016-09-19 20:13:23		[20:13]
2016-09-19 20:13:35	<--	zipace (~anon@unaffiliated/zipace) has quit (Ping timeout: 272 seconds)
2016-09-19 20:15:14	-->	kw01f (~kw01f@merlin.mvtec.com) has joined ##c++
2016-09-19 20:15:15	-->	josef_k (~Jeremy@210-10-222-98.mel.static-ipl.aapt.com.au) has joined ##c++
2016-09-19 20:15:20	-->	ferdna (~ferdna@cpe-69-23-141-130.elp.res.rr.com) has joined ##c++
2016-09-19 20:16:32	josef_k	Is arithmetic with bool values effectively integer arithmetic modulo 2? Or am I in for a surprise?
2016-09-19 20:17:10	-->	Biokee (~BioKey@2a02:1205:506f:db70:c50a:d526:7dbd:b43) has joined ##c++
2016-09-19 20:17:11	<--	Biokee (~BioKey@2a02:1205:506f:db70:c50a:d526:7dbd:b43) has quit (Max SendQ exceeded)
2016-09-19 20:17:18	josef_k	{bool(0) - bool(1);}
2016-09-19 20:17:19	geordi	<no output>
2016-09-19 20:17:36	-->	Guest24686 (~BioKey@2a02:1205:506f:db70:c50a:d526:7dbd:b43) has joined ##c++
2016-09-19 20:17:37	<--	Guest24686 (~BioKey@2a02:1205:506f:db70:c50a:d526:7dbd:b43) has quit (Max SendQ exceeded)
2016-09-19 20:18:04	-->	Guest24686 (~BioKey@2a02:1205:506f:db70:c50a:d526:7dbd:b43) has joined ##c++
2016-09-19 20:18:04	<--	Guest24686 (~BioKey@2a02:1205:506f:db70:c50a:d526:7dbd:b43) has quit (Max SendQ exceeded)
2016-09-19 20:18:20	josef_k	<< bool(0) - bool(1);
2016-09-19 20:18:21	geordi	-1
2016-09-19 20:18:29	-->	Guest24686 (~BioKey@2a02:1205:506f:db70:c50a:d526:7dbd:b43) has joined ##c++
2016-09-19 20:18:30	<--	Guest24686 (~BioKey@2a02:1205:506f:db70:c50a:d526:7dbd:b43) has quit (Max SendQ exceeded)
2016-09-19 20:18:35	josef_k	<< bool(bool(0) - bool(1));
2016-09-19 20:18:36	geordi	true
2016-09-19 20:18:56	-->	Guest24686 (~BioKey@2a02:1205:506f:db70:c50a:d526:7dbd:b43) has joined ##c++
2016-09-19 20:18:57	<--	Guest24686 (~BioKey@2a02:1205:506f:db70:c50a:d526:7dbd:b43) has quit (Max SendQ exceeded)
2016-09-19 20:19:21	-->	Guest24686 (~BioKey@2a02:1205:506f:db70:c50a:d526:7dbd:b43) has joined ##c++
2016-09-19 20:19:26	josef_k	Or rather, unsigned integer arithmetic modulo 2.
2016-09-19 20:19:32	-->	funfunctor (~edward@203.44.10.68) has joined ##c++
2016-09-19 20:19:40	-->	symm- (~symm-@86.127.152.32) has joined ##c++
2016-09-19 20:20:38	funfunctor	Hi, quick question. Suppose I have a constructor to a class X that takes (Queue<IDeckLinkVideoInputFrame* >& q) as the argument and I wish to use 'q' as local state, what type should my private be?
2016-09-19 20:21:35	<--	Saitama (~ShadowMas@112.215.173.93) has quit (Quit: .)
2016-09-19 20:21:42	funfunctor	I thought it would be, Queue<IDeckLinkVideoInputFrame* >* local_q;  and this->local_q = q;  in my constructor but apparently not?
2016-09-19 20:22:13	Kuukunen	josef_k: nah, pretty sure the bools are always promoted
2016-09-19 20:22:24	-->	nullfxn (~nullFxn@107-147-108-164.res.bhn.net) has joined ##c++
2016-09-19 20:22:24	-->	AquaL1te (~AquaL1te@unaffiliated/aqual1te) has joined ##c++
2016-09-19 20:22:47	Kuukunen	if you start doing arithmetic
2016-09-19 20:23:21	josef_k	Kuukunen: Yeah. Dang.
2016-09-19 20:24:18	josef_k	Kuukunen: But I think it is effectively modulo 2 if the result is cast to a bool each time.
2016-09-19 20:24:25	Kuukunen	josef_k: nah
2016-09-19 20:24:41	Kuukunen	<< bool(bool(1) + bool(1))
2016-09-19 20:24:41	geordi	true
2016-09-19 20:24:51	-->	DingoSaar_ (~hagen@pD9E095FB.dip0.t-ipconnect.de) has joined ##c++
2016-09-19 20:24:52	Kuukunen	josef_k: 0 is false, everything else is true
2016-09-19 20:24:58	josef_k	hah, what was I thinking.
2016-09-19 20:25:29	-->	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has joined ##c++
2016-09-19 20:26:06	josef_k	Fortunately, my use case only has subtraction.
2016-09-19 20:26:27	josef_k	So I think I'm safe.
2016-09-19 20:26:29	<--	Pseudocrat (~quassel@unaffiliated/pseudocrat) has quit (Remote host closed the connection)
2016-09-19 20:26:39	-->	jablo (~jablo@80.243.123.111) has joined ##c++
2016-09-19 20:27:17	<--	Appleman1234 (~Appleman1@KD119104047049.au-net.ne.jp) has quit (Ping timeout: 265 seconds)
2016-09-19 20:28:03	<--	DingoSaar (~hagen@pD9E08566.dip0.t-ipconnect.de) has quit (Ping timeout: 240 seconds)
2016-09-19 20:29:22	-->	seishun (~Kakera@78.84.135.235) has joined ##c++
2016-09-19 20:29:22		[20:29]
2016-09-19 20:29:52	-->	pheenx (~pheenx@2a02:8071:b68a:1c00:225:22ff:fee7:7dc5) has joined ##c++
2016-09-19 20:30:43	Kuukunen	josef_k: but... subtracting a single bool from another is just a xor :V
2016-09-19 20:30:59	urdh	funfunctor, types must be the same, you can't assign a T to a T*
2016-09-19 20:31:04	cbreak	subtraction with bool sounds idiotic.
2016-09-19 20:31:06	Kuukunen	except you have to do a conversion back
2016-09-19 20:31:12	Kuukunen	and it's silly
2016-09-19 20:31:51	urdh	funfunctor, and you should use initializer lists with the constructor if possible
2016-09-19 20:31:59	<--	SunnyD (~SunnyD@cpe-72-178-78-211.hot.res.rr.com) has quit (Quit: ChatZilla 0.9.90.1 [Firefox 30.0/20140605174243])
2016-09-19 20:32:03	Kuukunen	josef_k: or well actually... bool a = bool(b - c); is the same as bool a = b != c;
2016-09-19 20:33:20	RokerHRO	-.-
2016-09-19 20:34:25	<--	systemfault (~rcyr@unaffiliated/rcyr) has quit (Quit: Bye!)
2016-09-19 20:34:26	-->	fedepad (~fedepad@p4FE1264E.dip0.t-ipconnect.de) has joined ##c++
2016-09-19 20:34:46	-->	kimundi (~Kimundi@p57BC65CB.dip0.t-ipconnect.de) has joined ##c++
2016-09-19 20:35:08	<--	Guest24686 (~BioKey@2a02:1205:506f:db70:c50a:d526:7dbd:b43) has quit (Quit: Leaving)
2016-09-19 20:35:30	-->	BioKey (~BioKey@2a02:1205:506f:db70:c50a:d526:7dbd:b43) has joined ##c++
2016-09-19 20:35:44	w3z	<<(false-true)
2016-09-19 20:36:00	geordi	-1
2016-09-19 20:36:01	w3z	wake up gerodi ...
2016-09-19 20:36:04	-->	calincru (~calin@c-73-231-85-3.hsd1.ca.comcast.net) has joined ##c++
2016-09-19 20:36:10	w3z	geordi, slow poke
2016-09-19 20:36:10	geordi	error: 'slow' does not name a type; did you mean 'pow'? (fix known)
2016-09-19 20:36:31	<--	calincru (~calin@c-73-231-85-3.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-19 20:36:33	<--	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has quit (Ping timeout: 240 seconds)
2016-09-19 20:36:38	-->	calincru (~calin@c-73-231-85-3.hsd1.ca.comcast.net) has joined ##c++
2016-09-19 20:36:39	lh_mouse	!give w3z stdref integral promotion
2016-09-19 20:36:46	w3z	der
2016-09-19 20:37:21	<--	BioKey (~BioKey@2a02:1205:506f:db70:c50a:d526:7dbd:b43) has quit (Client Quit)
2016-09-19 20:37:38	-->	mangolisk (~mangolisk@S0106848dc7ebaa06.vc.shawcable.net) has joined ##c++
2016-09-19 20:37:41	-->	BioKey (~BioKey@2a02:1205:506f:db70:c50a:d526:7dbd:b43) has joined ##c++
2016-09-19 20:37:41	lh_mouse	w3z, http://en.cppreference.com/w/cpp/language/implicit_conversion#Integral_promotion
2016-09-19 20:37:57	<--	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has quit (Read error: Connection reset by peer)
2016-09-19 20:37:59	lh_mouse	josef_k, read that.
2016-09-19 20:38:06	w3z	shh, i was demonstrating sillyness
2016-09-19 20:38:41	Kuukunen	w3z: yea, but that pretty much same thing was already done above!
2016-09-19 20:38:42	Moto-chan	lh_mouse: The bot I have here doing stdref now doesn't have !give unfortunately. It'd cause nasty conflicting commands.
2016-09-19 20:39:09	Moto-chan	Also, since google's API is gone now, it uses cppref's own search, which only searches the library, not the language. Also unfortunate.
2016-09-19 20:39:33	-->	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has joined ##c++
2016-09-19 20:40:30	<--	jaafar (~quassel@50-206-78-205-static.hfc.comcastbusiness.net) has quit (Ping timeout: 244 seconds)
2016-09-19 20:40:42	-->	rriemann (~rriemann@dhcp-67-135.ixxi.ens-lyon.fr) has joined ##c++
2016-09-19 20:40:52	-->	rmunoz (~ricardo@217.124.142.50) has joined ##c++
2016-09-19 20:41:32	josef_k	Kuukunen: Yup, I had forgotten that identity, thanks.
2016-09-19 20:42:16	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 265 seconds)
2016-09-19 20:42:42	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-19 20:42:44	lh_mouse	Moto-chan, gotcha.
2016-09-19 20:42:53	lh_mouse	!stdref integral promotion
2016-09-19 20:42:53	refbot	Error: No results found
2016-09-19 20:43:31	<--	somaReverse (~amos@124.16.128.66) has quit (Quit: WeeChat 1.5)
2016-09-19 20:43:38	-->	FreeBirdLjj (~freebirdl@112.20.80.252) has joined ##c++
2016-09-19 20:43:41	-->	Sceorem (~Sceorem@xbn44-3-82-232-76-9.fbx.proxad.net) has joined ##c++
2016-09-19 20:43:51	Moto-chan	If there's an option I'm not aware of on cppreference to search the language aswell as the library, please do let me know. It'd be nice to be able to do.
2016-09-19 20:44:41	-->	Zxpr1jk (~zxpr1jk@24.214.61.47) has joined ##c++
2016-09-19 20:44:41		[20:44]
2016-09-19 20:44:47	cbreak	Moto-chan: http://www.bing.com/search?q=integral+promotion+site:en.cppreference.com (he. he. he.)
2016-09-19 20:45:03	cbreak	or https://duckduckgo.com/html/?q=integral+promotion+site:en.cppreference.com
2016-09-19 20:45:21	Moto-chan	cbreak: Bing's API, like Google's now, costs money when you go above N requests afaik.
2016-09-19 20:46:11	funfunctor	urdh: its more I am getting mixed up between when to use & and *
2016-09-19 20:46:13	Moto-chan	Could always scrape their results pages I suppose.
2016-09-19 20:46:31	funfunctor	urdh: a quick fix is to use the address operator &
2016-09-19 20:47:13	urdh	funfunctor, I think you'll find that will break sooner or later
2016-09-19 20:47:55	urdh	if you want to store a copy, pass a const reference like you do now and store an actual copy
2016-09-19 20:49:19	urdh	if you want to store a pointer, pass a pointer and store a pointer like you do now (but ideally using a smart pointer if that makes sense)
2016-09-19 20:49:24	funfunctor	urdh: I don't really want to copy anything
2016-09-19 20:49:41	funfunctor	C++ is confusing, in C I just pass const void *
2016-09-19 20:49:48	urdh	well, someone has to own the object
2016-09-19 20:49:56	cbreak	Moto-chan: or just directly link to https://duckduckgo.com/?q=\site%3Acppreference.com+whatever
2016-09-19 20:49:57	funfunctor	the call site
2016-09-19 20:49:58	urdh	also what, const void* is horrible
2016-09-19 20:50:05	urdh	what problem are you trying to solve anyway?
2016-09-19 20:50:30	-->	drozdziak1 (~drozdziak@do-atman.cubiware.com) has joined ##c++
2016-09-19 20:50:30	w3z	you arent *ing a void* in c either, and if youre confused between & and * ...you dont know c
2016-09-19 20:50:32	cbreak	funfunctor: void *? What crazy talk are you thinking of?
2016-09-19 20:50:46	cbreak	funfunctor: void * is very problematic in C
2016-09-19 20:50:50	--	irc: disconnected from server
2016-09-20 00:39:03	-->	alyptik (~alyptik@unaffiliated/alyptik) has joined ##c++
2016-09-20 00:39:03		[00:39]
2016-09-20 00:39:03	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || https://isocpp.org/faq || pastes: http://melpon.org/wandbox"
2016-09-20 00:39:03	--	Topic set by V-ille (~ville@81-175-149-170.bb.dnainternet.fi) on Fri, 18 Sep 2015 07:13:01
2016-09-20 00:39:03	--	Channel ##c++: 985 nicks (0 ops, 0 voices, 985 normals)
2016-09-20 00:39:03	***	Buffer Playback...
2016-09-20 00:39:03	ville	[08:08:05] real teal-time as in hard real-time? or real-time like say games and whatnot [08:08:05]
2016-09-20 00:39:03	k_sze[work]	[08:08:47] ville: suppose it's a video recorder, the video data comes in at 30 frames per second. [08:08:47]
2016-09-20 00:39:03	ville	[08:09:00] ok so not real-time [08:09:00]
2016-09-20 00:39:03	ville	[08:09:44] k_sze[work]: anyway that's a pretty common situation and you can google something like "single producer single consumer queue" [08:09:44]
2016-09-20 00:39:03	k_sze[work]	[08:09:44] Anyway, obviously I'm going to use a while loop in each of the producer and consumer threads. [08:09:44]
2016-09-20 00:39:03	ville	[08:10:17] also if you're new or new-ish to threads then absolutley get this: [08:10:17]
2016-09-20 00:39:03	ville	[08:10:18] !williams [08:10:18]
2016-09-20 00:39:03	nolyc	[08:10:21] C++ concurrency in action by Anthony Williams: http://www.manning.com/williams/ [08:10:21]
2016-09-20 00:39:03	ville	[08:11:06] one of its many examples is a thread-safe queue [08:11:06]
2016-09-20 00:39:03	cbreak	[08:11:28] there are pre-made ones too, in boost for example [08:11:28]
2016-09-20 00:39:03	ville	[08:19:50] sure but i think this is one of those componenets that one has to write your self at least once, if not every now and then, just for the basics it teaches [08:19:50]
2016-09-20 00:39:03	tgy	[08:31:51] i'm trying to use std::experimental::filesystem but i'm getting the following linking error [08:31:51]
2016-09-20 00:39:03	tgy	[08:31:54] http://paste.awesom.eu/JoDc [08:31:54]
2016-09-20 00:39:03	tgy	[08:32:08] #include <experimental/filesystem> seems to be working fine [08:32:08]
2016-09-20 00:39:03	tgy	[08:32:20] i don't know what is happening :/ [08:32:20]
2016-09-20 00:39:03	w3z	[08:33:10] ...youre not linking the library ... [08:33:10]
2016-09-20 00:39:03	tgy	[08:35:30] w3z: i thought it was included in std [08:35:30]
2016-09-20 00:39:03	tgy	[08:36:34] how do i link experimental/filesystem? i can't find anything on the net :/ [08:36:34]
2016-09-20 00:39:03	w3z	[08:37:11] your ability to google is weaksauce: -lstdc++fs [08:37:11]
2016-09-20 00:39:03	w3z	[08:37:37] for gcc, which is what youre using judging by your linker error post [08:37:37]
2016-09-20 00:39:03	tgy	[08:39:05] thanks :/ don't know why i couldn't find it [08:39:05]
2016-09-20 00:39:03	tgy	[08:50:42] w3z: i switched to clang, i'm trying to build my program using CMake http://paste.awesom.eu/nmxG [08:50:42]
2016-09-20 00:39:03	tgy	[08:50:48] i get /usr/bin/ld: cannot find -lc++experimental [08:50:48]
2016-09-20 00:39:03	w3z	[08:55:29] thats because its a gcc library [08:55:29]
2016-09-20 00:39:03	tgy	[08:58:51] w3z: alright, i managed to do it simply with the target_link_libraries(train stdc++fs) one-liner [08:58:51]
2016-09-20 00:39:03	tgy	[08:59:06] but i think it's not the proper way to do it with CMake [08:59:06]
2016-09-20 00:39:03	w3z	[09:01:29] afaik clang has not packaged the fs ts in any official build, it may be in the repo though [09:01:29]
2016-09-20 00:39:03	cbreak	[09:03:40] you can use boost::filesystem if you want to support current compilers [09:03:40]
2016-09-20 00:39:03	cbreak	[09:03:51] without relying on pre-standard implementations of C++17 [09:03:51]
2016-09-20 00:39:03	purplex88	[09:26:30] how can i use list:remove? http://ideone.com/9wJHl6 [09:26:30]
2016-09-20 00:39:03	V-ille	[09:29:16] purplex88: like this http://ideone.com/27vI0s [09:29:16]
2016-09-20 00:39:03	om3n	[09:41:02] hello [09:41:02]
2016-09-20 00:39:03	Ecco	[10:00:33] class Foo { int i; }; -> Is there a way to get Foo to be treated as an integral type? [10:00:33]
2016-09-20 00:39:03	cbreak	[10:01:18] Ecco: what context? [10:01:18]
2016-09-20 00:39:03	Ecco	[10:01:45] for instance, to use Foo as the underlying type of an enum class [10:01:45]
2016-09-20 00:39:03	cbreak	[10:01:56] :/ [10:01:56]
2016-09-20 00:39:03	cbreak	[10:02:08] I doubt it. [10:02:08]
2016-09-20 00:39:03	Ecco	[10:02:13] ok :) [10:02:13]
2016-09-20 00:39:03	w3z	[10:07:28] that isnt going to happen, you can of course provide a conversion function for other use scenarios though [10:07:28]
2016-09-20 00:39:03	richard_w	[10:29:09] is it somehow possible to wait for an std::future without blocking an entire thread? [10:29:09]
2016-09-20 00:39:03	cbreak	[10:29:24] richard_w: timeout [10:29:24]
2016-09-20 00:39:03	richard_w	[10:30:07] cbreak: i was thinking about something like a callback [10:30:07]
2016-09-20 00:39:03	richard_w	[10:32:35] cbreak: right now i am wrapping std::future and std::promise but that seems overly complicated [10:32:35]
2016-09-20 00:39:03	cbreak	[10:32:51] richard_w: no need to wrap them [10:32:51]
2016-09-20 00:39:03	cbreak	[10:33:06] their whole point is that you can blocking wait for them [10:33:06]
2016-09-20 00:39:03	richard_w	[10:36:23] cbreak: this is right when you're using conventional threads. i am using asio though and i have several program flows in a single thread [10:36:23]
2016-09-20 00:39:03	cbreak	[10:36:41] then why futures / promises? [10:36:41]
2016-09-20 00:39:03	richard_w	[10:38:24] cbreak: it is a useful abstraction. my network_interface::send_request method returns a future of the response [10:38:24]
2016-09-20 00:39:03	cbreak	[10:38:39] why? [10:38:39]
2016-09-20 00:39:03	cbreak	[10:38:45] it should take a callback as parameter [10:38:45]
2016-09-20 00:39:03	***	Playback Complete.
2016-09-20 00:39:09	cbreak	you're mixing different styles and that causes you problems
2016-09-20 00:39:19	--	Channel created on Fri, 14 Sep 2001 17:15:35
2016-09-20 00:39:42	richard_w	cbreak: it's more concise to give a future<foo> than define a param with the type std::function<void(std::exception_ptr, foo&&)>
2016-09-20 00:39:55	cbreak	no
2016-09-20 00:41:28	richard_w	cbreak: why not? scala uses this technique all over the place and it works fine
2016-09-20 00:42:02	cbreak	richard_w: because it requires way more maintenance overhead
2016-09-20 00:42:04	richard_w	javascript too (although this is really more of a counter-argument)
2016-09-20 00:42:09	cbreak	richard_w: no
2016-09-20 00:42:15	cbreak	richard_w: java script doesn't have multithreading
2016-09-20 00:42:22	cbreak	it doesn't have anything like C++'s std::future
2016-09-20 00:42:45	cbreak	std::future is for working with threads
2016-09-20 00:43:09	cbreak	in javascript, everything is callback based
2016-09-20 00:43:23	<--	rtkt (~rtkt@226.18-78-194.adsl-static.isp.belgacom.be) has quit (Ping timeout: 272 seconds)
2016-09-20 00:43:23	cbreak	you couldn't block on a future result without breaking a lot
2016-09-20 00:43:27	<--	justinabrahms (~justinabr@107.170.208.252) has quit (Quit: ZNC - http://znc.in)
2016-09-20 00:43:58	richard_w	cbreak: std::future may be for threads only, but it would be a useful abstraction even without threads
2016-09-20 00:44:08	cbreak	no
2016-09-20 00:44:25	cbreak	without threads, blocking for a result to be available is pointless
2016-09-20 00:44:58	velco	it's also a mechanism for lazy evaluation
2016-09-20 00:45:04	cbreak	there's an other type of future inside std::future that's rarely used, and I don't think users can directly access
2016-09-20 00:45:08	cbreak	for lazily computed values
2016-09-20 00:45:18	cbreak	mainly used via async
2016-09-20 00:45:23	cbreak	but that's not of use to you
2016-09-20 00:45:53	richard_w	cbreak: so asio shouldn't use futures at all in your opinion?
2016-09-20 00:46:52	-->	verm1n (~verm1n@209-6-236-59.c3-0.wrx-ubr1.sbo-wrx.ma.cable.rcn.com) has joined ##c++
2016-09-20 00:46:59	cbreak	indeed.
2016-09-20 00:47:07	cbreak	asio and future are different styles
2016-09-20 00:47:43	-->	kw01f (~kw01f@merlin.mvtec.com) has joined ##c++
2016-09-20 00:47:46	cbreak	with an asio based API, you wouldn't want to block
2016-09-20 00:47:50	cbreak	with futures you would want to block
2016-09-20 00:48:53	richard_w	because it's for multithreading
2016-09-20 00:48:53	richard_w	and only for that
2016-09-20 00:48:53	richard_w	although respected frameworks in other languages use futures to asynchronously handle requests?
2016-09-20 00:48:53	richard_w	or waiting for db queries
2016-09-20 00:49:03	-->	jamesaxl (~jamesaxl@176.98.129.195) has joined ##c++
2016-09-20 00:49:12	<--	rmunoz (~ricardo@217.124.142.50) has quit (Ping timeout: 244 seconds)
2016-09-20 00:49:12	<--	et (~et@85.131.246.150) has quit (Ping timeout: 244 seconds)
2016-09-20 00:49:12	<--	meshugga (philip@amd.co.at) has quit (Ping timeout: 244 seconds)
2016-09-20 00:49:28	-->	rmunoz (~ricardo@217.124.142.50) has joined ##c++
2016-09-20 00:49:37	cbreak	richard_w: nope
2016-09-20 00:49:39	cbreak	they don't
2016-09-20 00:49:43	<--	bergesenha (~harald@90.149.192.21) has quit (Ping timeout: 244 seconds)
2016-09-20 00:49:43	<--	di0_ (~di0_@unaffiliated/di0-/x-5053590) has quit (Ping timeout: 244 seconds)
2016-09-20 00:49:51	-->	bergesenha (~harald@90.149.192.21) has joined ##c++
2016-09-20 00:50:05	cbreak	futures are for synchronously using asynchronously generated values
2016-09-20 00:50:14	<--	Munnu (~timo@91-158-145-247.elisa-laajakaista.fi) has quit (Ping timeout: 244 seconds)
2016-09-20 00:50:14	<--	phlpp (~Philipp@rihanna.cb.uni-bonn.de) has quit (Ping timeout: 244 seconds)
2016-09-20 00:50:23	-->	meshugga (philip@amd.co.at) has joined ##c++
2016-09-20 00:50:32	-->	justinabrahms (~justinabr@107.170.208.252) has joined ##c++
2016-09-20 00:50:42	cbreak	(or in the case of std::async, potentially synchronously generated)
2016-09-20 00:50:58	-->	Munnu (~timo@91-158-145-247.elisa-laajakaista.fi) has joined ##c++
2016-09-20 00:50:58	-->	di0_ (~di0_@unaffiliated/di0-/x-5053590) has joined ##c++
2016-09-20 00:50:59	Olipro	...you can ask for a future and immediately return if it isn't available
2016-09-20 00:51:04	-->	phlpp (~Philipp@rihanna.cb.uni-bonn.de) has joined ##c++
2016-09-20 00:51:10	cbreak	Olipro: yes. Syncronously.
2016-09-20 00:51:19	-->	et (~et@soohrt.org) has joined ##c++
2016-09-20 00:51:25	cbreak	Olipro: you can not ask a future to call you back once the value is available
2016-09-20 00:51:27	-->	HeroYoojin (~aaron@unaffiliated/heroyoojin) has joined ##c++
2016-09-20 00:51:29	-->	B00100100 (~bf3@179.43.151.98) has joined ##c++
2016-09-20 00:51:37	cbreak	I think in other languages' futures that is sometimes an option
2016-09-20 00:51:45	cbreak	but not in C++'s
2016-09-20 00:51:49	-->	swnc (~swnc@port-92-204-76-157.dynamic.qsc.de) has joined ##c++
2016-09-20 00:52:03	Olipro	sure, it's a different model to a callback
2016-09-20 00:52:05	-->	corsaere (~corsaere@unaffiliated/corsaere) has joined ##c++
2016-09-20 00:52:07	richard_w	cbreak: It's an option everywhere *except* in C++
2016-09-20 00:52:31	Olipro	if you don't have to synchronise on anything then clearly passing a callback is preferable
2016-09-20 00:52:41	cbreak	Olipro: and then you don't need futures
2016-09-20 00:53:11	cbreak	richard_w: first time I saw futures, 15 years ago, in eiffel, they didn't have callbacks either :)
2016-09-20 00:53:29	<--	Gluesticky (~nobody@unaffiliated/gluesticky) has quit (Quit: This is the end. Goodbye cruel world!)
2016-09-20 00:53:43	-->	gioerr (~gioerr@athedsl-4409952.home.otenet.gr) has joined ##c++
2016-09-20 00:53:53	<--	FreeBirdLjj (~freebirdl@112.20.80.252) has quit (Ping timeout: 240 seconds)
2016-09-20 00:53:55	-->	FreeBird_ (~freebirdl@112.20.80.252) has joined ##c++
2016-09-20 00:54:21	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 00:54:21		[00:54]
2016-09-20 00:54:24	richard_w	cbreak: Maybe. My point is that the future abstraction as understood by people with a functional programming background is more than just a synchronization primitive
2016-09-20 00:54:24	Olipro	a future is basically a more concise and conceptually simpler mechanism of synchronising something between threads
2016-09-20 00:54:33	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-20 00:54:41	<--	xkpe (~xkpe@host86-151-105-229.range86-151.btcentralplus.com) has quit (Ping timeout: 240 seconds)
2016-09-20 00:55:03	cbreak	with emphasis on synchronize
2016-09-20 00:55:08	-->	xkpe (~xkpe@host86-151-105-229.range86-151.btcentralplus.com) has joined ##c++
2016-09-20 00:55:29	cbreak	richard_w: that doesn't matter
2016-09-20 00:55:34	cbreak	richard_w: C++ futures are not that.
2016-09-20 00:55:52	cbreak	I recommend not mixing them with async style programming :)
2016-09-20 00:55:54	richard_w	cbreak: they could be if it weren't for the missing kleisli-operator
2016-09-20 00:55:57	cbreak	your choice.
2016-09-20 00:56:11	cbreak	richard_w: no user defined weird-operators in C++
2016-09-20 00:57:52	richard_w	cbreak: it's not c++ operator. it's basically a function with the signature "std::future<B> kleisli(std::future<A>&, std::function<B(A&)>)"
2016-09-20 00:58:40	cbreak	sure, make one.
2016-09-20 00:58:55	-->	athend_ (~athend@199.43.190.10) has joined ##c++
2016-09-20 00:59:12	k_sze[work]	I have a `uint16_t *buffer` that is actually an aligned_alloc'ed array, what's wrong with doing `buffer[10] = (uint16_t)12.0;`?
2016-09-20 00:59:44	k_sze[work]	clang++ is complaining about assigning to 'uint16_t *' (aka 'unsigned short *') from incompatible type 'uint16_t' (aka 'unsigned short')
2016-09-20 01:00:17	k_sze[work]	I thought buffer[10] would be the correct way of accessing an element of the array?
2016-09-20 01:01:00	<--	UnripeSuica_mobi (~UnlikeSui@223.62.212.34) has quit (Quit: RIP)
2016-09-20 01:01:13	-->	UnlikeSuika_mobi (~UnlikeSui@147.46.113.63) has joined ##c++
2016-09-20 01:01:49	-->	UnripeSuica_mobi (~UnlikeSui@223.62.212.34) has joined ##c++
2016-09-20 01:02:02	<--	StyxAlso (~markg@120.88.147.168) has quit (Quit: StyxAlso)
2016-09-20 01:02:35	-->	w3z (~w3z@173-169-121-88.res.bhn.net) has joined ##c++
2016-09-20 01:02:36	<--	athend (~athend@199.43.186.25) has quit (Ping timeout: 276 seconds)
2016-09-20 01:03:01	urdh	!give k_sze[work] testcase
2016-09-20 01:03:01	<--	knamehost (~knameho@unaffiliated/knamehost) has quit (Read error: Connection reset by peer)
2016-09-20 01:03:05	-->	athend (~athend@199.43.186.25) has joined ##c++
2016-09-20 01:03:09	urdh	lolwut
2016-09-20 01:03:21	urdh	anyway, post code
2016-09-20 01:03:27	urdh	!testcase
2016-09-20 01:03:28	nolyc	A testcase is the _least_ amount of code that replicates your problem, paste it to http://coliru.stacked-crooked.com and give us the link. Do _not_ paste code to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
2016-09-20 01:03:34	-->	nikki93 (~nikki93@166.170.39.20) has joined ##c++
2016-09-20 01:03:39	<--	ibouvousaime (~ibouvousa@41.82.193.77) has quit (Ping timeout: 272 seconds)
2016-09-20 01:03:47	cbreak	k_sze[work]: you try to assign to a pointer
2016-09-20 01:03:54	<--	athend_ (~athend@199.43.190.10) has quit (Ping timeout: 276 seconds)
2016-09-20 01:03:57	-->	ibouvousaime (~ibouvousa@41.82.193.77) has joined ##c++
2016-09-20 01:03:59	cbreak	k_sze[work]: not a uint16_t value
2016-09-20 01:04:02	k_sze[work]	nevermind
2016-09-20 01:04:05	k_sze[work]	found the problem.
2016-09-20 01:04:31	<--	tz (~tz@pestilence.tzarc.ninja) has quit (Ping timeout: 255 seconds)
2016-09-20 01:04:31	<--	dv__ (~quassel@62.178.118.86) has quit (Ping timeout: 244 seconds)
2016-09-20 01:04:38	-->	gagbo (~gagbo@unaffiliated/gagbo) has joined ##c++
2016-09-20 01:04:44	-->	athend_ (~athend@199.43.190.10) has joined ##c++
2016-09-20 01:05:37	promach	in gdb, how do I print out featMap as in https://github.com/jimmie33/MBS/blob/master/mex/MBS.cpp#L77  ?
2016-09-20 01:05:45	<--	UnlikeSuika_mobi (~UnlikeSui@147.46.113.63) has quit (Ping timeout: 248 seconds)
2016-09-20 01:06:46	-->	Gathis (~TheBlack@unaffiliated/gathis) has joined ##c++
2016-09-20 01:07:07	cbreak	promach: by calling exec? :)
2016-09-20 01:07:11	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 265 seconds)
2016-09-20 01:07:13	<--	miklcct (michael@server.miklcct.csproject.org) has quit (Ping timeout: 255 seconds)
2016-09-20 01:07:14	<--	HeroYoojin (~aaron@unaffiliated/heroyoojin) has left ##c++
2016-09-20 01:07:25	<--	Aster (~Aster@april-fools/2013/ninth/aster) has quit (Remote host closed the connection)
2016-09-20 01:07:35	-->	tz (~tz@pestilence.tzarc.ninja) has joined ##c++
2016-09-20 01:07:35	<--	rsully (~rsully@unaffiliated/rsully) has quit (Ping timeout: 265 seconds)
2016-09-20 01:07:53	promach	cbreak: what?
2016-09-20 01:07:56	-->	Aster (~Aster@destrock.com) has joined ##c++
2016-09-20 01:08:21	--	Aster is now known as Guest91491
2016-09-20 01:08:38	-->	miklcct (michael@server.miklcct.csproject.org) has joined ##c++
2016-09-20 01:08:43	-->	dv_ (~quassel@62.178.118.86) has joined ##c++
2016-09-20 01:08:48	cbreak	you can ask gcc to call arbitrary code on your behalf
2016-09-20 01:08:56	alex529	is there a better way of doing this ? http://melpon.org/wandbox/permlink/4RUCoY5yIktNSxw3
2016-09-20 01:08:59	cbreak	I think it was something with e... exec... expr... something like that
2016-09-20 01:09:06	<--	athend (~athend@199.43.186.25) has quit (Ping timeout: 276 seconds)
2016-09-20 01:09:26	-->	rsully (~rsully@unaffiliated/rsully) has joined ##c++
2016-09-20 01:09:26		[01:09]
2016-09-20 01:09:34	-->	athend (~athend@199.43.186.25) has joined ##c++
2016-09-20 01:09:41	-->	sphenxes02 (~sphenxes@192.164.150.155) has joined ##c++
2016-09-20 01:09:43	<--	UnripeSuica_mobi (~UnlikeSui@223.62.212.34) has quit (Quit: RIP)
2016-09-20 01:09:45	<--	athend_ (~athend@199.43.190.10) has quit (Ping timeout: 276 seconds)
2016-09-20 01:09:55	-->	UnlikeSuika_mobi (~UnlikeSui@147.47.141.233) has joined ##c++
2016-09-20 01:10:18	cbreak	alex529: what the hell is that supposed to be good for?
2016-09-20 01:10:22	<--	Guest91491 (~Aster@destrock.com) has quit (Changing host)
2016-09-20 01:10:22	-->	Guest91491 (~Aster@april-fools/2013/ninth/aster) has joined ##c++
2016-09-20 01:10:24	-->	tocka_ (~tocka@78-56-107-170.static.zebra.lt) has joined ##c++
2016-09-20 01:10:24	--	Guest91491 is now known as Aster
2016-09-20 01:10:27	-->	Kn|t3_ (~agarwalvi@104.132.196.100) has joined ##c++
2016-09-20 01:10:43	alex529	i want to reserve memory for the inner vector
2016-09-20 01:11:06	cbreak	use reserve then
2016-09-20 01:11:14	<--	tocka (~tocka@78-56-107-170.static.zebra.lt) has quit (Ping timeout: 244 seconds)
2016-09-20 01:11:16	<--	Kn|t3 (~agarwalvi@104.132.196.76) has quit (Ping timeout: 255 seconds)
2016-09-20 01:11:16	--	Kn|t3_ is now known as Kn|t3
2016-09-20 01:11:47	cbreak	alex529: at the moment you actually resize the vectors in a weird way
2016-09-20 01:11:56	<--	Carbonflux (~Bob@75-172-112-206.tukw.qwest.net) has quit (Quit: Leaving)
2016-09-20 01:11:59	-->	jackhum (uid97400@gateway/web/irccloud.com/x-gpskbanxpfluwnmz) has joined ##c++
2016-09-20 01:12:07	cbreak	(instead of calling resize, you assign a newly constructed vector)
2016-09-20 01:12:14	cbreak	alex529: that's obviously inefficient
2016-09-20 01:12:23	cbreak	even more inefficient than having nested vectors is already
2016-09-20 01:12:30	alex529	basicaly i would want to make sometyhing like a[maxElement][count]
2016-09-20 01:12:31	cbreak	alex529: if you only want to reserve, use reserve
2016-09-20 01:12:40	cbreak	eeew
2016-09-20 01:12:42	cbreak	!sillymatrix
2016-09-20 01:12:43	nolyc	template<typename T> struct matrix { matrix(unsigned m, unsigned n) : m(m), n(n), vs(m*n) {} T& operator ()(unsigned i, unsigned j) { return vs[i + m * j]; } private: unsigned m; unsigned n; std::vector<T> vs; }; /* column-major/opengl: vs[i + m * j], row-major/c++: vs[n * i + j] */
2016-09-20 01:12:52	alex529	and i do not want to dynamically allocate
2016-09-20 01:13:09	<--	sphenxes01 (~sphenxes@81-5-240-95.hdsl.highway.telekom.at) has quit (Ping timeout: 272 seconds)
2016-09-20 01:13:26	<--	Kn|t3 (~agarwalvi@104.132.196.100) has quit (Client Quit)
2016-09-20 01:14:43	-->	Kn|t3 (~agarwalvi@104.132.196.76) has joined ##c++
2016-09-20 01:14:44	alex529	ok im a little new to c++ so i have to ityerate thru the outer vector and after reserve for the inner isnt there an option where i can do something like a[len1][len2]?
2016-09-20 01:15:26	alex529	i don't really need a vector i just need some sort of container for my strings
2016-09-20 01:15:56	<--	eduardas_m (~eduardas_@213.197.143.19) has quit (Remote host closed the connection)
2016-09-20 01:16:08	cbreak	alex529: use something like nolyc showed
2016-09-20 01:17:10	<--	ScorpionJack (~Scorpion@unaffiliated/scorpionjack) has quit (Quit: ScorpionJack)
2016-09-20 01:19:09	-->	UnripeSuica_mobi (~UnlikeSui@223.62.212.34) has joined ##c++
2016-09-20 01:19:37	-->	qqz (~qqz@194-118-30-150.adsl.highway.telekom.at) has joined ##c++
2016-09-20 01:19:56	-->	ScorpionJack (~Scorpion@unaffiliated/scorpionjack) has joined ##c++
2016-09-20 01:20:05	qqz	when I read in with the >> operator multiple items at a time how does it indicate error conditions?
2016-09-20 01:20:09	<--	kimundi (~Kimundi@dynip-129-217-065-035.wifi.tu-dortmund.de) has quit (Ping timeout: 265 seconds)
2016-09-20 01:20:43	<--	Freze (~Freze@c-73-167-60-180.hsd1.ma.comcast.net) has quit (Ping timeout: 255 seconds)
2016-09-20 01:20:44	cbreak	qqz: depends
2016-09-20 01:20:57	-->	Sora (~quassel@197.17.18.137) has joined ##c++
2016-09-20 01:20:59	cbreak	either via exception, or via you checking operator bool or similar
2016-09-20 01:21:01	qqz	when I f.i. read ints?
2016-09-20 01:21:18	qqz	cheking operator bool?
2016-09-20 01:21:27	cbreak	if (stream >> x >> y >> z) { /* x y z read */ } else { ... }
2016-09-20 01:21:28	<--	UnripeSuica_mobi (~UnlikeSui@223.62.212.34) has quit (Read error: Connection reset by peer)
2016-09-20 01:21:28	qqz	it returns the stream not a bool?
2016-09-20 01:21:33	-->	UnrightSuika_mob (~UnlikeSui@147.46.113.63) has joined ##c++
2016-09-20 01:21:43	qqz	ahh
2016-09-20 01:21:59	qqz	how does that work when I implement the >> myself
2016-09-20 01:22:05	<--	UnlikeSuika_mobi (~UnlikeSui@147.47.141.233) has quit (Ping timeout: 265 seconds)
2016-09-20 01:22:12	qqz	at the end the stream needs to convert into a boolean?
2016-09-20 01:22:38	qqz	it can not return NULL at any time since then we would get a memory access error in the middle
2016-09-20 01:23:52	cbreak	qqz: no
2016-09-20 01:23:56	cbreak	just return the stream
2016-09-20 01:24:03	qqz	I could imagine to use the ~ operator for checking error conditions:
2016-09-20 01:24:12	cbreak	don't
2016-09-20 01:24:16	qqz	so ~( stream >> x >> y >> z )
2016-09-20 01:24:25	qqz	why not?
2016-09-20 01:24:39	cbreak	because it's unreadable as hell
2016-09-20 01:24:39		[01:24]
2016-09-20 01:25:01	cbreak	also, not sure if ~ is even defined on streams
2016-09-20 01:25:12	cbreak	use either bool conversion or !
2016-09-20 01:25:15	qqz	well I can define any operator I like
2016-09-20 01:25:18	cbreak	no
2016-09-20 01:25:30	cbreak	streams exist outside your access area
2016-09-20 01:25:39	cbreak	you're not allowed to fuck around with std :)
2016-09-20 01:25:40	qqz	! would interfere with checking for NULL; that would be a bad idea
2016-09-20 01:25:43	cbreak	no
2016-09-20 01:25:50	-->	neurodrone (~neurodron@unaffiliated/neurodrone) has joined ##c++
2016-09-20 01:25:54	cbreak	there is no NULL
2016-09-20 01:25:59	cbreak	streams are not integers
2016-09-20 01:26:09	cbreak	streams are not pointers
2016-09-20 01:26:14	<--	Kn|t3 (~agarwalvi@104.132.196.76) has quit (Quit: Kn|t3)
2016-09-20 01:26:26	cbreak	streams are objects which have an operator bool and an operator!
2016-09-20 01:26:41	qqz	ok; class != *class but what if you forget the * one time and the ! operator did something different
2016-09-20 01:26:53	cbreak	* is not needed
2016-09-20 01:27:07	qqz	operator bool? how does it look like?
2016-09-20 01:27:12	qqz	an empty functor?
2016-09-20 01:27:18	<--	blackbeard420 (~blackbear@dynamic-acs-24-154-82-158.zoominternet.net) has quit (Quit: Lost terminal)
2016-09-20 01:27:27	cbreak	somestream::operator bool() const ...
2016-09-20 01:27:47	qqz	ok; thx; going to try this
2016-09-20 01:27:58	cbreak	qqz: http://en.cppreference.com/w/cpp/io/basic_ios/operator_bool
2016-09-20 01:28:42	<--	sammyg (~sammyg@h-13-10.a485.priv.bahnhof.se) has quit (Quit: Leaving)
2016-09-20 01:28:46	cbreak	{ std::stringstream ss("1 2 3"); size_t a, b, c; if (ss >> a >> b >> c) { cout << "Got " << a << ", " << b << " -> " << c; } else { cout << "error"; } }
2016-09-20 01:28:47	geordi	Got 1, 2 -> 3
2016-09-20 01:28:53	cbreak	{ std::stringstream ss("1 23"); size_t a, b, c; if (ss >> a >> b >> c) { cout << "Got " << a << ", " << b << " -> " << c; } else { cout << "error"; } }
2016-09-20 01:28:54	geordi	error
2016-09-20 01:28:58	cbreak	qqz: got it?
2016-09-20 01:29:52	qqz	yes
2016-09-20 01:30:37	w3z	hah, why would you want the compliment, if you were that silly, you would need to force the conversion to bool first, only one implicit conversion jump is allowed
2016-09-20 01:31:11	-->	zap0 (~moofy@14-201-222-143.tpgi.com.au) has joined ##c++
2016-09-20 01:32:43	-->	josef__k (~jeremy@59.102.31.229) has joined ##c++
2016-09-20 01:33:23	w3z	<<~(bool)(cout<<"silly=");
2016-09-20 01:33:24	geordi	silly=-2
2016-09-20 01:33:27	<--	forgottenone (~forgotten@176.43.2.35) has quit (Quit: Konversation terminated!)
2016-09-20 01:33:38	promach	in gdb, how do I print out the matrix (Mat& featMap) as in https://github.com/jimmie33/MBS/blob/master/mex/MBS.cpp#L77  ?
2016-09-20 01:33:55	qqz	I just did not know that C++ has an operator bool
2016-09-20 01:33:58	qqz	I simply did not
2016-09-20 01:33:59	<--	szulak (uid162164@gateway/web/irccloud.com/x-gidkguwxkgzrgumx) has quit (Quit: Connection closed for inactivity)
2016-09-20 01:34:17	qqz	so stop making fun of it
2016-09-20 01:34:33	-->	forgottenone (~forgotten@176.43.2.35) has joined ##c++
2016-09-20 01:34:37	<--	forgottenone (~forgotten@176.43.2.35) has quit (Client Quit)
2016-09-20 01:35:06	<--	oftc_ftw (~oftc_ftw@unaffiliated/oftc-ftw/x-3443471) has quit (Ping timeout: 276 seconds)
2016-09-20 01:35:11	-->	incog (~still3@c-68-32-78-52.hsd1.mi.comcast.net) has joined ##c++
2016-09-20 01:35:33	-->	UnlikeSuika (~UnlikeSui@147.46.113.63) has joined ##c++
2016-09-20 01:35:34	-->	Tempesta (~Tempesta@unaffiliated/tempesta) has joined ##c++
2016-09-20 01:35:40	-->	forgottenone (~forgotten@176.43.2.35) has joined ##c++
2016-09-20 01:36:02	<--	Nik05 (~Nik05@unaffiliated/nik05) has quit (Remote host closed the connection)
2016-09-20 01:36:30	-->	daniel-s (~daniel-s@bla31-1-82-241-231-138.fbx.proxad.net) has joined ##c++
2016-09-20 01:36:57	<--	sigtrm (quassel@quassel.woboq.de) has quit (Ping timeout: 250 seconds)
2016-09-20 01:37:14	cbreak	qqz: it's operator TYPEHERE, a conversion operator
2016-09-20 01:37:18	<--	incog (~still3@c-68-32-78-52.hsd1.mi.comcast.net) has quit (Changing host)
2016-09-20 01:37:19	-->	incog (~still3@unaffiliated/incog) has joined ##c++
2016-09-20 01:38:36	-->	Nik05 (~Nik05@unaffiliated/nik05) has joined ##c++
2016-09-20 01:38:44	<--	corsaere (~corsaere@unaffiliated/corsaere) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-09-20 01:39:27	-->	oftc_ftw (~oftc_ftw@unaffiliated/oftc-ftw/x-3443471) has joined ##c++
2016-09-20 01:39:27	-->	serycjon (~jonas@20.53.broadband14.iol.cz) has joined ##c++
2016-09-20 01:39:27	-->	Gluesticky (~IceChat9@unaffiliated/gluesticky) has joined ##c++
2016-09-20 01:39:28	<--	neurodrone (~neurodron@unaffiliated/neurodrone) has quit (Quit: neurodrone)
2016-09-20 01:39:59	serycjon	Hi, am I in the right channel if I need a little bit of help with C++?
2016-09-20 01:39:59		[01:39]
2016-09-20 01:40:15	-->	jkhl (~j@host86-182-59-122.range86-182.btcentralplus.com) has joined ##c++
2016-09-20 01:40:22	m_ben	!topic
2016-09-20 01:40:23	nolyc	Welcome to ##c++. This channel is for the discussion of standard C++, including potential and future standardizations. This channel is NOT for discussion of: development platforms (OSes and other tools not directly related to C++), non-standard libraries, programs written in C++, other programming languages, a/s/l, or anything else that isn't C++.
2016-09-20 01:40:40	w3z	promach: with p, or the invocation of a function that prints Mat for you ...and youre off-topic
2016-09-20 01:41:09	w3z	!give promach general
2016-09-20 01:41:10	nolyc	promach: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2016-09-20 01:41:56	serycjon	nolyc: thanks, will try my luck there :)
2016-09-20 01:41:59	<--	bx2 (~bx2@46.140.123.246) has quit (Remote host closed the connection)
2016-09-20 01:42:47	w3z	that wasnt for you ...notice your nick wasnt in the message ...
2016-09-20 01:43:08	w3z	!give serycjon basic
2016-09-20 01:43:09	nolyc	serycjon: Please ask your question in ##C++-basic, as it involves the fundamental basics of the language.
2016-09-20 01:43:17	m_ben	the earlier !general was for him
2016-09-20 01:43:20	-->	whytrytofly (~whytrytof@dslb-094-223-012-212.094.223.pools.vodafone-ip.de) has joined ##c++
2016-09-20 01:43:24	m_ben	I meant !topic
2016-09-20 01:43:29	-->	Zunino (~Zunino@201.49.127.2) has joined ##c++
2016-09-20 01:43:47	serycjon	yep, thanks I will go there.
2016-09-20 01:43:54	-->	SoundlesDev (~soundless@2601:282:8080:1267:1c70:8739:6e64:4a4c) has joined ##c++
2016-09-20 01:44:02	-->	mcan (~m@178.62.169.8) has joined ##c++
2016-09-20 01:44:09	w3z	youre in a hurry to go somewhere, might as well be there
2016-09-20 01:44:42	-->	bjz (~bjz@pa49-185-187-31.pa.vic.optusnet.com.au) has joined ##c++
2016-09-20 01:45:33	-->	sigtrm (quassel@quassel.woboq.de) has joined ##c++
2016-09-20 01:45:51	<--	mcan (~m@178.62.169.8) has quit (Changing host)
2016-09-20 01:45:51	-->	mcan (~m@unaffiliated/mrcan) has joined ##c++
2016-09-20 01:46:10	-->	jshjsh (~jshjsh@172.56.17.251) has joined ##c++
2016-09-20 01:47:22	<--	Ecco (~user@unaffiliated/ecco) has left ##c++
2016-09-20 01:47:37	<--	Tempesta (~Tempesta@unaffiliated/tempesta) has quit (Quit: See ya!)
2016-09-20 01:47:47	<--	spindle (~spindle@27-33-39-55.static.tpgi.com.au) has quit (Read error: Connection reset by peer)
2016-09-20 01:49:01	<--	meandrain (~meandrain@89.39.95.149) has quit (Read error: No route to host)
2016-09-20 01:49:04	<--	SoundlesDev (~soundless@2601:282:8080:1267:1c70:8739:6e64:4a4c) has quit (Ping timeout: 255 seconds)
2016-09-20 01:49:09	<--	JoshS (~jshjsh@172.56.17.251) has quit (Ping timeout: 265 seconds)
2016-09-20 01:49:31	<--	Sceorem (~Sceorem@xbn44-3-82-232-76-9.fbx.proxad.net) has quit (Ping timeout: 255 seconds)
2016-09-20 01:50:06	-->	rorro (~rorro@c-226-182.eduroam.liu.se) has joined ##c++
2016-09-20 01:50:22	<--	scellow (~quassel@bly33-1-78-246-251-30.fbx.proxad.net) has quit (Remote host closed the connection)
2016-09-20 01:52:37	<--	sigtrm (quassel@quassel.woboq.de) has quit (Ping timeout: 265 seconds)
2016-09-20 01:52:45	<--	Galik (~galik@unaffiliated/galik) has quit (Ping timeout: 260 seconds)
2016-09-20 01:52:52	-->	psychicist__ (~psychicis@ip127-8-212-87.adsl2.static.versatel.nl) has joined ##c++
2016-09-20 01:52:59	<--	Lomex (~lomex@213.61.34.42) has quit
2016-09-20 01:53:15	-->	unK_ (~drunK@dynamic-78-8-159-26.ssp.dialog.net.pl) has joined ##c++
2016-09-20 01:53:15	-->	Tempesta (~Tempesta@unaffiliated/tempesta) has joined ##c++
2016-09-20 01:53:25	-->	bx2 (~bx2@46.140.123.246) has joined ##c++
2016-09-20 01:53:32	<--	yeticry (~yeticry@183.160.5.162) has quit (Ping timeout: 265 seconds)
2016-09-20 01:54:02	-->	Mimic (~chatzilla@net-93-150-83-59.cust.vodafonedsl.it) has joined ##c++
2016-09-20 01:54:18	<--	Sora (~quassel@197.17.18.137) has quit (Read error: Connection reset by peer)
2016-09-20 01:54:59	<--	Mimic (~chatzilla@net-93-150-83-59.cust.vodafonedsl.it) has left ##c++
2016-09-20 01:54:59		[01:54]
2016-09-20 01:55:07	-->	Mimic (~chatzilla@net-93-150-83-59.cust.vodafonedsl.it) has joined ##c++
2016-09-20 01:55:14	-->	yeticry (~yeticry@183.160.5.162) has joined ##c++
2016-09-20 01:55:40	<--	KAHR-Alpha (~Alpha@AReims-652-1-187-168.w92-142.abo.wanadoo.fr) has quit (Ping timeout: 244 seconds)
2016-09-20 01:55:45	<--	Mimic (~chatzilla@net-93-150-83-59.cust.vodafonedsl.it) has left ##c++
2016-09-20 01:57:23	-->	Ropeney (~Ropeney@CPE-58-170-196-106.lns2.lon.bigpond.net.au) has joined ##c++
2016-09-20 01:57:23	<--	Ropeney (~Ropeney@CPE-58-170-196-106.lns2.lon.bigpond.net.au) has quit (Client Quit)
2016-09-20 01:59:09	-->	Freze (~Freze@c-73-167-60-180.hsd1.ma.comcast.net) has joined ##c++
2016-09-20 01:59:24	-->	f10_ (~flo@2001:470:52af:1:242c:2fc9:d40d:50d3) has joined ##c++
2016-09-20 01:59:25	<--	araml (~araml@unaffiliated/araml) has quit (Quit: WeeChat 1.0.1)
2016-09-20 01:59:52	<--	simius (~simius@unaffiliated/simius) has quit (Ping timeout: 265 seconds)
2016-09-20 02:00:23	-->	jaafar (~quassel@50-206-78-205-static.hfc.comcastbusiness.net) has joined ##c++
2016-09-20 02:00:41	<--	forgottenone (~forgotten@176.43.2.35) has quit (Quit: Konversation terminated!)
2016-09-20 02:00:48	-->	Sceorem (~Sceorem@xbn44-3-82-232-76-9.fbx.proxad.net) has joined ##c++
2016-09-20 02:01:10	-->	corsaere (~corsaere@unaffiliated/corsaere) has joined ##c++
2016-09-20 02:01:16	Olipro	is there anything in C++ that can allow me to create a capturing function/lambda and pass it to a dumb C function that takes a function pointer?
2016-09-20 02:01:48	<--	psychicist__ (~psychicis@ip127-8-212-87.adsl2.static.versatel.nl) has quit (Quit: Lost terminal)
2016-09-20 02:01:49	va	you can do that.
2016-09-20 02:02:35	cbreak	Olipro: nope
2016-09-20 02:02:38	w3z	not in the language basics no, youll have to use a dispatch function
2016-09-20 02:02:49	cbreak	Olipro: you'll have to use some external library that synthesizes a new function for your stuff
2016-09-20 02:03:10	cbreak	something like libffi or so
2016-09-20 02:03:14	 *	cbreak has never used that thing
2016-09-20 02:03:23	cbreak	or libjit? hmm...
2016-09-20 02:03:29	cbreak	Olipro: anyway, it's a pain in the ass
2016-09-20 02:03:35	-->	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has joined ##c++
2016-09-20 02:03:37	-->	forgottenone (~forgotten@176.43.2.35) has joined ##c++
2016-09-20 02:03:37	cbreak	you should see if you can find a less shitty API
2016-09-20 02:03:44	cbreak	one that at least gives you a user data pointer
2016-09-20 02:04:14	w3z	i wouldnt go that far, the simplest solution is to provide a dispatch/swizzle function that knows about the instance of the lambda and calls it on the c routines behalf
2016-09-20 02:04:35	w3z	there will of course be lifetime issues
2016-09-20 02:05:22	Olipro	yeah, but, knowing about the instance of the lambda is the trick
2016-09-20 02:05:51	Olipro	which I can only see a way out of by doing something gross like either a global/static member
2016-09-20 02:07:31	cbreak	Olipro: you have to create a new function for every lambda
2016-09-20 02:07:40	cbreak	you need runtime code generation
2016-09-20 02:07:53	Olipro	essentially, yes
2016-09-20 02:08:03	cbreak	otherwise you can not tell the C function pointer invocations appart
2016-09-20 02:08:11	cbreak	I read that libffi or libjit can do it
2016-09-20 02:08:22	cbreak	but I've not looked at it closely enough to find out how
2016-09-20 02:08:27	-->	simius (~simius@unaffiliated/simius) has joined ##c++
2016-09-20 02:08:46	<--	bjz (~bjz@pa49-185-187-31.pa.vic.optusnet.com.au) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-20 02:08:59	-->	kimundi (~Kimundi@dynip-129-217-065-035.wifi.tu-dortmund.de) has joined ##c++
2016-09-20 02:09:36	-->	f10 (~flo@2001:470:52af:1:1883:b70e:19db:f1db) has joined ##c++
2016-09-20 02:13:25	-->	Paralyz3d (~Meta@109.98.164.15) has joined ##c++
2016-09-20 02:13:25		[02:13]
2016-09-20 02:13:35	<--	whytrytofly (~whytrytof@dslb-094-223-012-212.094.223.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2016-09-20 02:14:51	<--	Paralyz3d (~Meta@109.98.164.15) has quit (Quit: Leaving)
2016-09-20 02:14:51	<--	forgottenone (~forgotten@176.43.2.35) has quit (Ping timeout: 265 seconds)
2016-09-20 02:14:58	-->	sigtrm (quassel@quassel.woboq.de) has joined ##c++
2016-09-20 02:16:31	-->	GinoManWorks (~GinoMan@50-251-53-110-static.hfc.comcastbusiness.net) has joined ##c++
2016-09-20 02:16:51	w3z	{int i; auto F=makeD([&i]{++i;}); void(*p)(decltype(F)*) = decltype(F)::cb; } template<class Fn> struct D:Fn { D(Fn&& f):Fn{f}{} static void cb(D* p) {p->operator()();}}; template<class Fn> D<Fn> makeD(Fn&& f){return {forward<Fn&&>(f)};}
2016-09-20 02:16:52	geordi	<no output>
2016-09-20 02:16:57	-->	rtkt (~rtkt@226.18-78-194.adsl-static.isp.belgacom.be) has joined ##c++
2016-09-20 02:17:18	w3z	of course youll want void* as cb's param type andcast inside cb
2016-09-20 02:17:22	<--	bergesenha (~harald@90.149.192.21) has left ##c++
2016-09-20 02:17:47	-->	Lomex (~lomex@213.61.34.42) has joined ##c++
2016-09-20 02:18:17	w3z	{int i; auto F=makeD([&i]{++i;}); void(*p)(void*) = decltype(F)::cb; } template<class Fn> struct D:Fn { D(Fn&& f):Fn{f}{} static void cb(void* p) {static_cast<D*>(p)->operator()();}}; template<class Fn> D<Fn> makeD(Fn&& f){return {forward<Fn&&>(f)};}
2016-09-20 02:18:18	geordi	<no output>
2016-09-20 02:18:27	-->	whytrytofly (~whytrytof@dslb-094-223-012-212.094.223.pools.vodafone-ip.de) has joined ##c++
2016-09-20 02:18:52	-->	neurodrone (~neurodron@unaffiliated/neurodrone) has joined ##c++
2016-09-20 02:18:54	w3z	is it better than an external lib, eh
2016-09-20 02:19:13	<--	Guest22663 (~BioKey@183.253.6.85.dynamic.wline.res.cust.swisscom.ch) has quit (Read error: Connection reset by peer)
2016-09-20 02:19:18	cbreak	w3z: don't think it'll work
2016-09-20 02:19:44	<--	incog (~still3@unaffiliated/incog) has quit (K-Lined)
2016-09-20 02:19:50	w3z	why not?
2016-09-20 02:20:11	cbreak	w3z: you don't get a function pointer to give as callback
2016-09-20 02:20:17	w3z	i do
2016-09-20 02:20:25	w3z	void(*p)(void*) = decltype(F)::cb;
2016-09-20 02:20:26	cbreak	you get a whole object with storage
2016-09-20 02:20:51	cbreak	w3z: try with signature void(*)()
2016-09-20 02:21:03	w3z	well the lifetime of D has to be managed until after the c api is done with it, but thats a different story
2016-09-20 02:21:03	cbreak	w3z: if there was a userdata pointer there wouldn't be a problem in the first place
2016-09-20 02:21:16	w3z	there would still be a problem
2016-09-20 02:21:40	w3z	the capturing lambda isnt converible to a function pointer
2016-09-20 02:21:49	Olipro	no, but it is convertible to an std::function
2016-09-20 02:21:55	Olipro	and I could just pass a pointer to that
2016-09-20 02:22:07	<--	corsaere (~corsaere@unaffiliated/corsaere) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-09-20 02:22:22	-->	lncog (~stillfree@74.51.208.46.dyn.plus.net) has joined ##c++
2016-09-20 02:22:23	w3z	the c api would still need a swizzle for the function<>
2016-09-20 02:22:30	<--	lncog (~stillfree@74.51.208.46.dyn.plus.net) has quit (K-Lined)
2016-09-20 02:22:32	<--	whytrytofly (~whytrytof@dslb-094-223-012-212.094.223.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2016-09-20 02:22:36	cbreak	no
2016-09-20 02:22:46	cbreak	a userdata pointer would be enough
2016-09-20 02:22:56	cbreak	but some API is too crappy to have something like that :(
2016-09-20 02:23:01	Olipro	no, you can just reinterpret_cast<std::function<...>*>(userdata)
2016-09-20 02:23:13	w3z	a user data param AND a c entrypoint that casts back to the function
2016-09-20 02:23:16	cbreak	I've had a few that actually only had a callback function, no userdata
2016-09-20 02:23:32	Olipro	yeah, sadly this is my situation
2016-09-20 02:23:33	w3z	no context data would be a pain, but eh
2016-09-20 02:23:33	<--	GrayArea (~GrayArea@cpc73846-dals21-2-0-cust384.20-2.cable.virginm.net) has quit (Ping timeout: 240 seconds)
2016-09-20 02:23:44	-->	lncog (~stillfree@2001:4801:7821:77:d925:a5ab:ff10:73ff) has joined ##c++
2016-09-20 02:23:45	-->	kaleid0 (~kaleid0@184.sub-174-219-1.myvzw.com) has joined ##c++
2016-09-20 02:23:48	cbreak	that's why I even considered libffi
2016-09-20 02:24:01	cbreak	in the end I solved the problem by ignoring it
2016-09-20 02:24:17	Olipro	I don't think libffi is usable
2016-09-20 02:24:24	cbreak	not sure if that'll work for you
2016-09-20 02:24:34	Olipro	it seems to be for a bunch of interpreted/JIT languages
2016-09-20 02:24:35	<--	lncog (~stillfree@2001:4801:7821:77:d925:a5ab:ff10:73ff) has quit (K-Lined)
2016-09-20 02:24:45	w3z	even crappy c apis give you a void* context, are you sure youre not missing somewhere to stuff user data ...
2016-09-20 02:25:04	-->	bjz (~bjz@14-201-215-168.tpgi.com.au) has joined ##c++
2016-09-20 02:25:16	Olipro	under normal conditions, yes, this is the Lua C API
2016-09-20 02:25:39	Olipro	thing is that the library in my case doesn't know which Lua API it's getting so that's embedded in a class instance it needs to get
2016-09-20 02:26:21	-->	josephnoir (~josephnoi@141.22.28.250) has joined ##c++
2016-09-20 02:26:21	Olipro	usually, if you're working with just one lua, you'd push your function with the userdata as an "upvalue"... but you have to call lua API functions to retrieve that upvalue
2016-09-20 02:26:24	-->	szulak (uid162164@gateway/web/irccloud.com/x-jsljspzzcrpsgrov) has joined ##c++
2016-09-20 02:26:58	Olipro	I'm veering towards just storing the object in a static variable and be done with it
2016-09-20 02:27:10	Olipro	stinks like hell but I don't see a better option
2016-09-20 02:27:28	w3z	well you can always fallback on a function scope static, at least its better than namespace scope
2016-09-20 02:27:28	cbreak	Olipro: lua works fine
2016-09-20 02:27:40	cbreak	it gives userdata as much as you want
2016-09-20 02:28:04	Olipro	yeah, except I have to call lua_touserdata() to get it
2016-09-20 02:28:11	cbreak	you can store it somewhere in the registry, or somewhere else
2016-09-20 02:28:24	cbreak	Olipro: sure. light or heavy userdata.
2016-09-20 02:28:37	Olipro	thing is accessing all the Lua API functions are via a class instance
2016-09-20 02:28:37		[02:28]
2016-09-20 02:28:56	Olipro	as opposed to the standard situation where it's regular Lua and they're just statically declared functions in the root namespace
2016-09-20 02:28:57	<--	qqz (~qqz@194-118-30-150.adsl.highway.telekom.at) has quit (Ping timeout: 248 seconds)
2016-09-20 02:29:06	cbreak	so?
2016-09-20 02:29:11	-->	JoshS (~jshjsh@172.56.17.251) has joined ##c++
2016-09-20 02:29:20	Olipro	so, specifically, my Lua C function needs to receive the class instance reference
2016-09-20 02:29:23	cbreak	I don't see any difference.
2016-09-20 02:29:29	Olipro	because that class instance reference contains lua_touserdata
2016-09-20 02:30:05	cbreak	make the class handle callbacks
2016-09-20 02:30:33	Olipro	"handle" ?
2016-09-20 02:30:39	cbreak	redirect
2016-09-20 02:31:03	cbreak	the class obviously knows its own lua_touserdata function, so it doesn't need a metadata lookup for that
2016-09-20 02:31:21	cbreak	you need one c handler per lua_touserdata
2016-09-20 02:31:30	Olipro	the class does, but lua C API functions have to be static
2016-09-20 02:31:32	cbreak	and the most convenient place is in that wrapper class
2016-09-20 02:31:37	Olipro	int(*)(lua_State*)
2016-09-20 02:32:16	<--	jshjsh (~jshjsh@172.56.17.251) has quit (Ping timeout: 255 seconds)
2016-09-20 02:32:47	Olipro	yeah, I'm not following - imagine that I have a class called "LuaAPI" with instance methods that consist of Lua's C API functions
2016-09-20 02:32:50	-->	corto (~simon@modemcable254.232-82-70.mc.videotron.ca) has joined ##c++
2016-09-20 02:32:52	-->	Arlen0 (~Arlen0@38-103-219-200.alamobb.net) has joined ##c++
2016-09-20 02:33:17	<--	tachoknight (~tachoknig@2601:241:102:60a6:8e70:5aff:fe24:3cb0) has quit (Ping timeout: 250 seconds)
2016-09-20 02:33:19	Olipro	I then register a Lua C function via myLuaAPIinstance.lua_pushcclosure(L, <myfunc>, 0);
2016-09-20 02:33:25	-->	achauvin (~achauvin@nat-wifi-etu-3.univ-rouen.fr) has joined ##c++
2016-09-20 02:33:28	<--	Arlen0 (~Arlen0@38-103-219-200.alamobb.net) has quit (Client Quit)
2016-09-20 02:33:32	Olipro	where <myfunc> is int(*)(lua_State*)
2016-09-20 02:33:51	Olipro	when the lua VM calls <myfunc>, how is <myfunc> going to access myLuaAPIinstance
2016-09-20 02:33:55	corto	what's an appropriate channel for discussing C++ libraries (comparision, suggestions, etc)
2016-09-20 02:34:01	Olipro	without it, it can't call *any* Lua API functions
2016-09-20 02:34:14	z16	!give corto general
2016-09-20 02:34:16	nolyc	corto: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2016-09-20 02:34:24	corto	z16, thanks
2016-09-20 02:34:46	-->	tachoknight (~tachoknig@2601:241:102:60a6:8e70:5aff:fe24:3cb0) has joined ##c++
2016-09-20 02:35:13	Olipro	the only solution I see is to store a pointer to myLuaAPIinstance in static scope
2016-09-20 02:35:24	-->	whytrytofly (~whytrytof@dslb-094-223-012-212.094.223.pools.vodafone-ip.de) has joined ##c++
2016-09-20 02:35:27	-->	pavshn (~pavshn@ppp95-165-153-84.pppoe.spdop.ru) has joined ##c++
2016-09-20 02:35:34	cbreak	Olipro: the lua functions are part of the type of that wrapper object
2016-09-20 02:35:46	cbreak	there's no point having them as object member, only as class member
2016-09-20 02:36:05	-->	jefcolbi (~Thunderbi@188.166.147.168) has joined ##c++
2016-09-20 02:36:12	<--	tristanseifert (~tristanse@128.194.3.4) has quit (Ping timeout: 276 seconds)
2016-09-20 02:36:35	Olipro	the functions are declared as pure-virtual in a base interface class
2016-09-20 02:36:47	<--	tlaxkit (~Thunderbi@92.185.154.236) has quit (Read error: Connection reset by peer)
2016-09-20 02:36:48	Olipro	with multiple implementing classes
2016-09-20 02:37:03	<--	rriemann (~rriemann@dhcp-67-135.ixxi.ens-lyon.fr) has quit (Ping timeout: 240 seconds)
2016-09-20 02:37:08	-->	rriemann_ (~rriemann@anyconnect174.insa-lyon.fr) has joined ##c++
2016-09-20 02:37:08	Olipro	the type of myLuaAPIinstance is LuaInterface&
2016-09-20 02:37:22	<--	Nilesh_ (uid116340@gateway/web/irccloud.com/x-dpskqufqxwwptypa) has quit (Quit: Connection closed for inactivity)
2016-09-20 02:37:29	Olipro	(because we don't pick any implementing class)
2016-09-20 02:37:49	Olipro	one implementing class could be Lua 5.1, another could be LuaJIT
2016-09-20 02:37:51	<--	pavshn (~pavshn@ppp95-165-153-84.pppoe.spdop.ru) has quit (Client Quit)
2016-09-20 02:37:54	cbreak	Olipro: all you need is to know in an implementing class how to get upvalues
2016-09-20 02:37:59	-->	tlaxkit (~Thunderbi@92.185.154.236) has joined ##c++
2016-09-20 02:38:08	cbreak	Olipro: and for that you don't need to have any object
2016-09-20 02:38:19	Olipro	that's fine, but the implementing class isn't the one pushing lua C functions
2016-09-20 02:38:21	cbreak	it's obvious the LuaJITWrapperThingie uses luajits calls
2016-09-20 02:38:22	<--	whytrytofly (~whytrytof@dslb-094-223-012-212.094.223.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2016-09-20 02:38:28	Olipro	it's consumers that receive a LuaInterface&
2016-09-20 02:38:42	cbreak	as I said above
2016-09-20 02:38:46	cbreak	the wrapper should handle that
2016-09-20 02:38:54	cbreak	it should register its own function as a callback
2016-09-20 02:39:02	cbreak	it should unwrapp which ever userdata a user provided
2016-09-20 02:39:07	cbreak	and then forward it to the user callback
2016-09-20 02:39:10	Olipro	you haven't explained how this wrapper is going to obtain the myLuaAPIinstance
2016-09-20 02:39:14	cbreak	I have
2016-09-20 02:39:24	cbreak	I explained that that's not needed
2016-09-20 02:39:32	cbreak	just 1 minute ago
2016-09-20 02:39:55	<--	bjz (~bjz@14-201-215-168.tpgi.com.au) has quit (Read error: Connection reset by peer)
2016-09-20 02:40:00	<--	jrolland-work (~jeff@155.92.176.224) has quit (Ping timeout: 260 seconds)
2016-09-20 02:40:25	Olipro	no, it doesn't so here's the scenario, maybe you can give an actual example that neatly solves it
2016-09-20 02:40:30	Olipro	ok, so let's say I have a function that is void(lua_State*, LuaInterface& int) - this function is going to register a Lua C API function via int.lua_pushcclosure()
2016-09-20 02:40:30	-->	whytrytofly (~whytrytof@dslb-094-223-012-212.094.223.pools.vodafone-ip.de) has joined ##c++
2016-09-20 02:40:33	<--	tachoknight (~tachoknig@2601:241:102:60a6:8e70:5aff:fe24:3cb0) has quit (Ping timeout: 272 seconds)
2016-09-20 02:40:42	Olipro	how is the C function going to get access to "int"
2016-09-20 02:40:53	Olipro	I can't use a lambda, because it can't capture
2016-09-20 02:41:03	-->	bjz (~bjz@14-201-215-168.tpgi.com.au) has joined ##c++
2016-09-20 02:41:30	cbreak	Olipro: what?
2016-09-20 02:41:33	-->	merijn (~merijn@212.78.164.170) has joined ##c++
2016-09-20 02:41:40	cbreak	you use your myAPIthingie.register(callback)
2016-09-20 02:41:44	-->	tachoknight (~tachoknig@2601:241:102:60a6:8e70:5aff:fe24:3cb0) has joined ##c++
2016-09-20 02:41:51	cbreak	the register function obviously has to be called differently
2016-09-20 02:42:13	merijn	Ok, suppose I have a std::function and a legacy API I can't change that expects a function pointer, how would I go about obtaining a function pointer to call my std::function?
2016-09-20 02:42:15	cbreak	but what it does is register a static member function of which ever API object type you happen to use
2016-09-20 02:42:33	cbreak	Olipro: and it registers the object itself, and the userdata the user gave as userdata
2016-09-20 02:42:41	cbreak	Olipro: in its own callback, it gets the userdata back
2016-09-20 02:42:53	cbreak	because the callback function knows how to do that, that's easy
2016-09-20 02:42:55	Olipro	OK, I see what you're saying now
2016-09-20 02:42:57	cbreak	the rest should be simple
2016-09-20 02:43:09	Olipro	the implementing class will wrap it essentially
2016-09-20 02:43:09	cbreak	merijn: make one
2016-09-20 02:43:18	cbreak	Olipro: yes
2016-09-20 02:43:21	cbreak	Olipro: it has to
2016-09-20 02:43:35	cbreak	it's the only place where you can neatly do it
2016-09-20 02:43:59	Olipro	yep, and since the implementing classes must be singletons, this doesn't cause a problem
2016-09-20 02:43:59		[02:43]
2016-09-20 02:44:13	<--	navidr (uid112413@gateway/web/irccloud.com/x-yqjsnjtnfjqxydkb) has quit (Quit: Connection closed for inactivity)
2016-09-20 02:44:16	merijn	cbreak: I'm not quite sure how I'd do that? Else I wouldn't ask :)
2016-09-20 02:44:32	cbreak	merijn: write a function
2016-09-20 02:44:43	cbreak	merijn: a plain free function, or a static member function
2016-09-20 02:44:47	cbreak	that's your function pointer
2016-09-20 02:44:51	cbreak	make it call your std::function
2016-09-20 02:45:08	cbreak	the only problem is how to give your function the std::function
2016-09-20 02:45:13	cbreak	usually this is done via userdata
2016-09-20 02:45:21	cbreak	that requires your C API to not be shit.
2016-09-20 02:45:40	merijn	cbreak: Yeah, which the API sadly doesn't allow. Although I suppose I can just have a top-level std::function and assign mine to that
2016-09-20 02:45:43	w3z	ok, this conversation has been off-topic for a while, and boring even longer
2016-09-20 02:47:01	-->	bsdnoob (~bsdnoobx@96.47.238.133) has joined ##c++
2016-09-20 02:47:03	bsdnoob	hello
2016-09-20 02:47:09	bsdnoob	can anyone help me add https://github.com/ocornut/imgui
2016-09-20 02:47:13	bsdnoob	library to Clion ?
2016-09-20 02:47:46	cbreak	what's a clion?
2016-09-20 02:47:57	bsdnoob	cbreak, IDE
2016-09-20 02:48:02	cbreak	get xcode.
2016-09-20 02:48:05	cbreak	or cmake ;)
2016-09-20 02:48:10	bsdnoob	which uses Cmake as build system
2016-09-20 02:48:32	bsdnoob	cbreak, CMake is already on sir
2016-09-20 02:48:50	cbreak	then ask in #cmake? :)
2016-09-20 02:49:08	bsdnoob	let me try
2016-09-20 02:49:31	<--	tlaxkit (~Thunderbi@92.185.154.236) has quit (Remote host closed the connection)
2016-09-20 02:49:41	-->	tlaxkit (~Thunderbi@92.185.154.236) has joined ##c++
2016-09-20 02:50:25	<--	tocka_ (~tocka@78-56-107-170.static.zebra.lt) has quit
2016-09-20 02:50:41	<--	tachoknight (~tachoknig@2601:241:102:60a6:8e70:5aff:fe24:3cb0) has quit (Ping timeout: 272 seconds)
2016-09-20 02:50:51	-->	Kn|t3 (~agarwalvi@49.207.53.8) has joined ##c++
2016-09-20 02:52:00	-->	MulleDK19 (MulleDK19@unaffiliated/mulledk19) has joined ##c++
2016-09-20 02:52:02	w3z	!give bsdnoob general
2016-09-20 02:52:03	nolyc	bsdnoob: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2016-09-20 02:52:12	w3z	give everyone general!!
2016-09-20 02:53:12	<--	bjz (~bjz@14-201-215-168.tpgi.com.au) has quit (Read error: Connection reset by peer)
2016-09-20 02:53:49	-->	bjz (~bjz@14-201-215-168.tpgi.com.au) has joined ##c++
2016-09-20 02:54:30	-->	Nilesh_ (uid116340@gateway/web/irccloud.com/x-ytqsznkneieeacvk) has joined ##c++
2016-09-20 02:55:40	-->	jshjsh (~jshjsh@172.56.17.251) has joined ##c++
2016-09-20 02:55:41	-->	psychicist__ (~psychicis@ip127-8-212-87.adsl2.static.versatel.nl) has joined ##c++
2016-09-20 02:56:36	-->	ewanshin (~ewanshin@183.101.46.30) has joined ##c++
2016-09-20 02:56:48	-->	seishun (~Kakera@87.110.123.166) has joined ##c++
2016-09-20 02:57:13	-->	trigen (~MSX@studiovideo.org) has joined ##c++
2016-09-20 02:58:49	<--	JoshS (~jshjsh@172.56.17.251) has quit (Ping timeout: 255 seconds)
2016-09-20 02:59:53	<--	mfc (~mfc@unaffiliated/mfc) has quit (Read error: Connection reset by peer)
2016-09-20 02:59:53		[02:59]
2016-09-20 03:00:33	<--	sctt (~sctt@91.236.116.233) has quit (Ping timeout: 240 seconds)
2016-09-20 03:00:51	-->	jrolland-work (~jeff@155.92.75.6) has joined ##c++
2016-09-20 03:00:52	<--	oftc_ftw (~oftc_ftw@unaffiliated/oftc-ftw/x-3443471) has quit (Read error: Connection reset by peer)
2016-09-20 03:01:19	-->	mfc (~mfc@unaffiliated/mfc) has joined ##c++
2016-09-20 03:01:19	--	Thorn__ is now known as Thorn
2016-09-20 03:01:29	<--	josef__k (~jeremy@59.102.31.229) has quit (Ping timeout: 248 seconds)
2016-09-20 03:01:31	-->	nilof (~saolof@92-32-80-134.tn.glocalnet.net) has joined ##c++
2016-09-20 03:02:28	-->	rriemann (~rriemann@dhcp-67-135.ixxi.ens-lyon.fr) has joined ##c++
2016-09-20 03:02:33	<--	rriemann_ (~rriemann@anyconnect174.insa-lyon.fr) has quit (Ping timeout: 248 seconds)
2016-09-20 03:03:29	-->	yong (~vayne@pD9E45D8A.dip0.t-ipconnect.de) has joined ##c++
2016-09-20 03:03:56	-->	corsaere (~corsaere@unaffiliated/corsaere) has joined ##c++
2016-09-20 03:04:37	<--	olly_c (~Thunderbi@pmpc1318.nerc-pml.ac.uk) has quit (Remote host closed the connection)
2016-09-20 03:04:42	-->	tachoknight (~tachoknig@2601:241:102:60a6:8e70:5aff:fe24:3cb0) has joined ##c++
2016-09-20 03:05:23	<--	whytrytofly (~whytrytof@dslb-094-223-012-212.094.223.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2016-09-20 03:06:31	<--	bjz (~bjz@14-201-215-168.tpgi.com.au) has quit (Read error: Connection reset by peer)
2016-09-20 03:06:59	-->	whytrytofly (~whytrytof@dslb-094-223-012-212.094.223.pools.vodafone-ip.de) has joined ##c++
2016-09-20 03:07:06	-->	bjz (~bjz@14-201-215-168.tpgi.com.au) has joined ##c++
2016-09-20 03:07:42	<--	rtkt (~rtkt@226.18-78-194.adsl-static.isp.belgacom.be) has quit (Quit: Leaving)
2016-09-20 03:07:44	-->	riksteri (~SpaceDino@62.102.148.177) has joined ##c++
2016-09-20 03:08:50	-->	SecondForm_Glenn (~Thunderbi@97-102-42-24.res.bhn.net) has joined ##c++
2016-09-20 03:09:02	-->	alexarnaud (~alexarnau@fsf/member/alexarnaud) has joined ##c++
2016-09-20 03:09:28	<--	neurodrone (~neurodron@unaffiliated/neurodrone) has quit (Quit: neurodrone)
2016-09-20 03:10:46	-->	slawas (~slawas@postfw01.ps01.plo.tdch.dk) has joined ##c++
2016-09-20 03:10:52	-->	symm- (~symm-@86.127.152.32) has joined ##c++
2016-09-20 03:10:57	<--	tachoknight (~tachoknig@2601:241:102:60a6:8e70:5aff:fe24:3cb0) has quit (Ping timeout: 272 seconds)
2016-09-20 03:11:12	<--	alex529 (50efa501@gateway/web/freenode/ip.80.239.165.1) has quit (Quit: Page closed)
2016-09-20 03:11:46	-->	tachoknight (~tachoknig@2601:241:102:60a6:8e70:5aff:fe24:3cb0) has joined ##c++
2016-09-20 03:12:13	<--	yong (~vayne@pD9E45D8A.dip0.t-ipconnect.de) has quit (Quit: Bye~)
2016-09-20 03:12:47	-->	shirt (~shirt@adsl-v01-3db14831dc15da1b.tau.ac.il) has joined ##c++
2016-09-20 03:12:53	-->	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has joined ##c++
2016-09-20 03:13:14	-->	araml (~araml@unaffiliated/araml) has joined ##c++
2016-09-20 03:14:50	<--	whytrytofly (~whytrytof@dslb-094-223-012-212.094.223.pools.vodafone-ip.de) has quit (Quit: Leaving)
2016-09-20 03:15:25	-->	whytrytofly (~whytrytof@dslb-094-223-012-212.094.223.pools.vodafone-ip.de) has joined ##c++
2016-09-20 03:15:25		[03:15]
2016-09-20 03:15:41	-->	nilg (~user@77.70.2.229) has joined ##c++
2016-09-20 03:15:44	-->	catern (~catern@catern.com) has joined ##c++
2016-09-20 03:15:58	<--	whytrytofly (~whytrytof@dslb-094-223-012-212.094.223.pools.vodafone-ip.de) has quit (Client Quit)
2016-09-20 03:15:58	catern	hello ##c++, I have a question
2016-09-20 03:16:09	-->	forgottenone (~forgotten@195.142.65.127) has joined ##c++
2016-09-20 03:16:17	-->	whytrytofly (~whytrytof@dslb-094-223-012-212.094.223.pools.vodafone-ip.de) has joined ##c++
2016-09-20 03:16:42	fooobarrr	that is unacceptable
2016-09-20 03:17:29	-->	qqz (~qqz@91-115-6-225.adsl.highway.telekom.at) has joined ##c++
2016-09-20 03:17:53	catern	I am implementing a network protocol, which is divided into several layers (each nested within each other). I have a class A which implements the outmost layer (for a single TCP session). I was planning to have that class dispatch messages in the next layer to another class B which I would make a field of A.
2016-09-20 03:18:28	fooobarrr	!give catern general
2016-09-20 03:18:30	nolyc	catern: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2016-09-20 03:18:37	<--	cysm (cysm@unaffiliated/paracyst) has quit (Ping timeout: 255 seconds)
2016-09-20 03:18:45	catern	hey, i'm not done, i'm a slow typist :)
2016-09-20 03:19:04	<--	jefcolbi (~Thunderbi@188.166.147.168) has quit (Ping timeout: 255 seconds)
2016-09-20 03:19:08	<--	josephnoir (~josephnoi@141.22.28.250) has quit (Quit: zzz ...)
2016-09-20 03:19:30	-->	josephnoir (~josephnoi@141.22.28.250) has joined ##c++
2016-09-20 03:19:39	<--	cjwelborn (cjwelborn@unaffiliated/cjwelborn) has quit (Ping timeout: 250 seconds)
2016-09-20 03:19:45	-->	h_enke (252eb3f2@gateway/web/freenode/ip.37.46.179.242) has joined ##c++
2016-09-20 03:19:50	catern	however, for B to actually send messages it needs to call a method of A which wraps B's messages in the higher level protocol, how might I do that when B is a field of A?
2016-09-20 03:19:56	<--	josephnoir (~josephnoi@141.22.28.250) has quit (Client Quit)
2016-09-20 03:20:18	-->	josephnoir (~josephnoi@141.22.28.250) has joined ##c++
2016-09-20 03:20:25	<--	tachoknight (~tachoknig@2601:241:102:60a6:8e70:5aff:fe24:3cb0) has quit (Ping timeout: 255 seconds)
2016-09-20 03:20:25	<--	f10_ (~flo@2001:470:52af:1:242c:2fc9:d40d:50d3) has quit (Ping timeout: 255 seconds)
2016-09-20 03:20:44	<--	josephnoir (~josephnoi@141.22.28.250) has quit (Client Quit)
2016-09-20 03:20:52	<--	f10 (~flo@2001:470:52af:1:1883:b70e:19db:f1db) has quit (Ping timeout: 255 seconds)
2016-09-20 03:21:00	<--	slawas (~slawas@postfw01.ps01.plo.tdch.dk) has quit (Read error: Connection reset by peer)
2016-09-20 03:21:05	-->	josephnoir (~josephnoi@141.22.28.250) has joined ##c++
2016-09-20 03:21:32	<--	josephnoir (~josephnoi@141.22.28.250) has quit (Client Quit)
2016-09-20 03:21:38	-->	regedit (uid150526@gateway/web/irccloud.com/x-nhtfbfzrsinugzwn) has joined ##c++
2016-09-20 03:21:44	-->	cysm (cysm@unaffiliated/paracyst) has joined ##c++
2016-09-20 03:22:00	<--	merijn (~merijn@212.78.164.170) has quit (Ping timeout: 260 seconds)
2016-09-20 03:22:43	-->	cjwelborn (cjwelborn@unaffiliated/cjwelborn) has joined ##c++
2016-09-20 03:22:47	-->	tachoknight (~tachoknig@2601:241:102:60a6:8e70:5aff:fe24:3cb0) has joined ##c++
2016-09-20 03:23:17	-->	Valdaris (~Gabe@75-170-43-116.eugn.qwest.net) has joined ##c++
2016-09-20 03:23:42	catern	(also I am much more familiar with C than C++ so maybe I am making some design error?)
2016-09-20 03:24:01	<--	elh9 (~elh9___@110-175-114-60.tpgi.com.au) has quit (Ping timeout: 255 seconds)
2016-09-20 03:24:18	<--	qqz (~qqz@91-115-6-225.adsl.highway.telekom.at) has quit (Ping timeout: 276 seconds)
2016-09-20 03:24:39	<--	MicroCheapFx_ (~quassel@230-95-190-109.dsl.ovh.fr) has quit (Read error: Connection reset by peer)
2016-09-20 03:24:44	-->	eez (~eez@cac94-8-82-245-27-76.fbx.proxad.net) has joined ##c++
2016-09-20 03:25:00	<--	eez (~eez@cac94-8-82-245-27-76.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-20 03:25:25	-->	gobr1 (~gobr1@cac94-8-82-245-27-76.fbx.proxad.net) has joined ##c++
2016-09-20 03:25:36	<--	gobr1 (~gobr1@cac94-8-82-245-27-76.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-20 03:25:52	<--	richard_w (~richard_w@109.73.24.204) has quit (Quit: WeeChat 1.5)
2016-09-20 03:25:53	-->	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has joined ##c++
2016-09-20 03:25:58	symm-	does B have to be a field of A? catern
2016-09-20 03:26:36	-->	Mpskierbg (aedd0e78@gateway/web/freenode/ip.174.221.14.120) has joined ##c++
2016-09-20 03:27:27	-->	olly_c (~Thunderbi@pmpc1318.nerc-pml.ac.uk) has joined ##c++
2016-09-20 03:27:27	-->	josephnoir (~josephnoi@141.22.28.250) has joined ##c++
2016-09-20 03:27:34	w3z	construct B with a reference to A ....
2016-09-20 03:27:35	-->	eduardas_m (~eduardas_@213.197.143.19) has joined ##c++
2016-09-20 03:27:43	-->	occamsblazer (~occamsbla@131.228.197.2) has joined ##c++
2016-09-20 03:27:50	symm-	SO INEFFICIENT
2016-09-20 03:28:05	symm-	(kidding)
2016-09-20 03:28:37	-->	CEnnis91 (uid3543@gateway/web/irccloud.com/x-mvffqkljtvwgqfzf) has joined ##c++
2016-09-20 03:28:46	symm-	catern: if you want to peek down the rabbit hole, https://yanniss.github.io/practical-fmtd.pdf
2016-09-20 03:28:48	-->	Galik (~galik@unaffiliated/galik) has joined ##c++
2016-09-20 03:28:49	fooobarrr	why cant B be a subclass of A
2016-09-20 03:28:57	<--	decimad (~deci@ip5f5be505.dynamic.kabel-deutschland.de) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-09-20 03:29:44	w3z	you said B is a member of A ....
2016-09-20 03:30:04	<--	achauvin (~achauvin@nat-wifi-etu-3.univ-rouen.fr) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-20 03:30:12	<--	rriemann (~rriemann@dhcp-67-135.ixxi.ens-lyon.fr) has quit (Ping timeout: 265 seconds)
2016-09-20 03:30:38	w3z	your thinking is as convoluted as your proposed design
2016-09-20 03:30:38		[03:30]
2016-09-20 03:30:42	<--	Mpskierbg (aedd0e78@gateway/web/freenode/ip.174.221.14.120) has quit (Ping timeout: 240 seconds)
2016-09-20 03:31:22	fooobarrr	this is why i said #general
2016-09-20 03:31:28	catern	symm-: is "mixin" the name for this design pattern?
2016-09-20 03:31:42	fooobarrr	have you done any oop catern ?
2016-09-20 03:32:12	-->	josef__k (~jeremy@59.102.31.229) has joined ##c++
2016-09-20 03:32:13	catern	not really :)
2016-09-20 03:32:26	w3z	anyway, B cant be a member of A and inherit from A, since A is incomplete
2016-09-20 03:33:25	-->	merijn (~merijn@212.78.164.170) has joined ##c++
2016-09-20 03:33:34	-->	jefcolbi (~Thunderbi@188.166.147.168) has joined ##c++
2016-09-20 03:33:35	w3z	struct A{struct B{A& a_;}; B b_{*this};};
2016-09-20 03:33:38	w3z	{} struct A{struct B{A& a_;}; B b_{*this};};
2016-09-20 03:33:39	geordi	<no output>
2016-09-20 03:33:45	<--	shirt (~shirt@adsl-v01-3db14831dc15da1b.tau.ac.il) has quit (Quit: Leaving)
2016-09-20 03:34:03	-->	shirt (~shirt@adsl-v01-3db14831dc15da1b.tau.ac.il) has joined ##c++
2016-09-20 03:34:28	catern	i never said B would inherit from A
2016-09-20 03:34:36	-->	qqz (~qqz@91-115-6-225.adsl.highway.telekom.at) has joined ##c++
2016-09-20 03:34:43	<--	qqz (~qqz@91-115-6-225.adsl.highway.telekom.at) has quit (Client Quit)
2016-09-20 03:35:05	<--	Appleman1234 (~Appleman1@KD119104054143.au-net.ne.jp) has quit (Ping timeout: 240 seconds)
2016-09-20 03:36:58	<--	hyacinth^timeout (~yhyacinth@61.111.255.109) has quit (Remote host closed the connection)
2016-09-20 03:37:02	<--	corsaere (~corsaere@unaffiliated/corsaere) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-09-20 03:37:26	-->	de-facto (~de-facto@unaffiliated/de-facto) has joined ##c++
2016-09-20 03:39:00	-->	esas (~esas@unaffiliated/esas) has joined ##c++
2016-09-20 03:39:06	w3z	fooobarrr did, i confused you two
2016-09-20 03:39:09	catern	anyway one reason why I want B to be a field of A, is so that A can be destroyed, B still hang around, and then another A can later be recreated with the same B
2016-09-20 03:39:24	catern	(to implement persistent sessions across connection failures)
2016-09-20 03:39:40	-->	narendraj9 (~user@157.119.170.52) has joined ##c++
2016-09-20 03:39:48	<--	blablablub (~howlymowl@euler.ilr.tu-berlin.de) has quit (Quit: Konversation terminated!)
2016-09-20 03:40:00	w3z	uhh. thats not a member of A then is it ..., thats an instance of B managed by A transiently
2016-09-20 03:40:38	catern	is that not what a field of A would be?
2016-09-20 03:40:48	<--	josephnoir (~josephnoi@141.22.28.250) has quit (Quit: bye ...)
2016-09-20 03:41:11	w3z	no a member of A is tied directly to the lifetime of A, its a subobject of the A instance
2016-09-20 03:41:17	<--	Gluesticky (~IceChat9@unaffiliated/gluesticky) has quit (Quit: This is the end. Goodbye cruel world!)
2016-09-20 03:41:44	symm-	class A { B b; }; // b is a field
2016-09-20 03:42:14	catern	okay, so what's the terminology for B *b then?
2016-09-20 03:42:20	w3z	now the member of A of type B b could potentially be moved to another instance of a B
2016-09-20 03:42:33	w3z	thats a member of type pointer to B
2016-09-20 03:42:51	catern	okay :)
2016-09-20 03:43:03	<--	jefcolbi (~Thunderbi@188.166.147.168) has quit (Ping timeout: 240 seconds)
2016-09-20 03:43:33	<--	Vuks (~Vuks@unaffiliated/vuks69) has quit (Ping timeout: 240 seconds)
2016-09-20 03:44:17	<--	bsdnoob (~bsdnoobx@96.47.238.133) has quit (Read error: Connection reset by peer)
2016-09-20 03:44:22	<--	whytrytofly (~whytrytof@dslb-094-223-012-212.094.223.pools.vodafone-ip.de) has quit (Quit: Leaving)
2016-09-20 03:46:09	-->	oftc_ftw (~oftc_ftw@unaffiliated/oftc-ftw/x-3443471) has joined ##c++
2016-09-20 03:46:09		[03:46]
2016-09-20 03:48:18	catern	so what do you recommend for letting A's member of type pointer to B call methods on A?
2016-09-20 03:50:25	-->	francoisk (~francoisk@154.66.250.11) has joined ##c++
2016-09-20 03:50:49	 *	zap0 gets confused and imagines  A Bee  flying around
2016-09-20 03:50:55	-->	rendar (~I@95.239.179.96) has joined ##c++
2016-09-20 03:50:56	<--	bjz (~bjz@14-201-215-168.tpgi.com.au) has quit (Read error: Connection reset by peer)
2016-09-20 03:51:55	-->	bjz (~bjz@14-201-215-168.tpgi.com.au) has joined ##c++
2016-09-20 03:52:21	-->	Appleman1234 (~Appleman1@KD119104054143.au-net.ne.jp) has joined ##c++
2016-09-20 03:52:50	symm-	catern: class A { B b(this); }; // b now knows which A contains it
2016-09-20 03:53:23	-->	GrayArea (~GrayArea@cpc73846-dals21-2-0-cust384.20-2.cable.virginm.net) has joined ##c++
2016-09-20 03:54:25	<--	Akimb (~Akimb@88-119-138-154.static.zebra.lt) has quit (Read error: Connection reset by peer)
2016-09-20 03:54:39	<--	tachoknight (~tachoknig@2601:241:102:60a6:8e70:5aff:fe24:3cb0) has quit (Ping timeout: 272 seconds)
2016-09-20 03:55:16	w3z	i suggest you rethink your reuiqrements and design, while of course its possible for B instances to be created with a pointer to an A instance, youre going to run into lifetime issues
2016-09-20 03:55:33	w3z	and you dont really seem prepared to handle them properly
2016-09-20 03:55:46	catern	yeah, that is my concern with the "just give B a pointer to A" approach
2016-09-20 03:55:50	w3z	what happens when another A instance adopts your B instance
2016-09-20 03:55:51	-->	Freze_ (~Freze@dhcp-18-189-46-127.dyn.MIT.EDU) has joined ##c++
2016-09-20 03:55:58	-->	tachoknight (~tachoknig@2601:241:102:60a6:8e70:5aff:fe24:3cb0) has joined ##c++
2016-09-20 03:56:13	w3z	what happens when the old A instance is deleted
2016-09-20 03:56:21	catern	right, lots of issues
2016-09-20 03:56:25	<--	jrolland-work (~jeff@155.92.75.6) has quit (Ping timeout: 255 seconds)
2016-09-20 03:56:25	<--	Freze (~Freze@c-73-167-60-180.hsd1.ma.comcast.net) has quit (Ping timeout: 248 seconds)
2016-09-20 03:56:40	w3z	what happens to the new A instances previous B instance
2016-09-20 03:57:26	w3z	do As and Bs always coexist or can Bs live independent of As
2016-09-20 03:57:36	-->	Freze (~Freze@dhcp-18-189-11-249.dyn.mit.edu) has joined ##c++
2016-09-20 03:57:59	w3z	anyway, its your design and off-topic here unless you have a question about the c++ language
2016-09-20 03:58:02	<--	GenteelBen (~GenteelBe@cpc70133-lutn12-2-0-cust324.9-3.cable.virginm.net) has quit
2016-09-20 03:58:03	w3z	!general
2016-09-20 03:58:04	nolyc	##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2016-09-20 03:58:33	catern	okay :)
2016-09-20 03:58:50	w3z	youll want to study up on ownership semantics, move semantics, shared_ptr perhaps etc, then come back with pointed questions
2016-09-20 03:59:00	fooobarrr	!give catern books
2016-09-20 03:59:01	nolyc	catern: A nice C++ book guide and list can be found at http://stackoverflow.com/q/388242/1090079
2016-09-20 03:59:06	catern	sure, I'm familiar :)
2016-09-20 03:59:14	fooobarrr	should probably learn C++ first
2016-09-20 03:59:15	catern	that's why I don't want to do the "pointer to A" approach
2016-09-20 04:00:22	<--	oftc_ftw (~oftc_ftw@unaffiliated/oftc-ftw/x-3443471) has quit (Ping timeout: 244 seconds)
2016-09-20 04:00:42	<--	Freze_ (~Freze@dhcp-18-189-46-127.dyn.MIT.EDU) has quit (Ping timeout: 265 seconds)
2016-09-20 04:01:29	-->	coventry (~user@192.64.64.26) has joined ##c++
2016-09-20 04:01:29		[04:01]
2016-09-20 04:02:10	coventry	Is there an easy way, in an enable_if, to check whether a typename T is some kind of integer?
2016-09-20 04:03:22	-->	Brklyn (~truthbk@38.122.226.210) has joined ##c++
2016-09-20 04:04:25	<--	bounce (bounce@unaffiliated/bounce) has quit (Ping timeout: 248 seconds)
2016-09-20 04:04:57	-->	Freze_ (~Freze@dhcp-18-189-77-44.dyn.MIT.EDU) has joined ##c++
2016-09-20 04:05:14	-->	meandrain (~meandrain@89.39.95.149) has joined ##c++
2016-09-20 04:05:46	coventry	Ah, is_integral.
2016-09-20 04:06:02	<--	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has quit (Quit: This computer has gone to sleep)
2016-09-20 04:06:18	<--	brendel (~brice@LAubervilliers-656-1-215-246.w217-128.abo.wanadoo.fr) has quit (Read error: Connection reset by peer)
2016-09-20 04:07:03	<--	l2esonance (~l2esonanc@c-73-223-132-245.hsd1.ca.comcast.net) has quit (Ping timeout: 240 seconds)
2016-09-20 04:07:04	-->	Gabe__ (~Gabe@75-170-43-116.eugn.qwest.net) has joined ##c++
2016-09-20 04:07:15	-->	brendel (~brice@LAubervilliers-656-1-215-246.w217-128.abo.wanadoo.fr) has joined ##c++
2016-09-20 04:07:50	-->	oftc_ftw (~oftc_ftw@unaffiliated/oftc-ftw/x-3443471) has joined ##c++
2016-09-20 04:08:07	<--	ScorpionJack (~Scorpion@unaffiliated/scorpionjack) has quit (Quit: ScorpionJack)
2016-09-20 04:08:47	<--	jablo (~jablo@80.243.123.111) has quit (Quit: jablo)
2016-09-20 04:09:13	<--	Freze (~Freze@dhcp-18-189-11-249.dyn.mit.edu) has quit (Ping timeout: 272 seconds)
2016-09-20 04:09:15	<--	ewanshin (~ewanshin@183.101.46.30) has quit (Quit: Leaving...)
2016-09-20 04:09:21	<--	Freze_ (~Freze@dhcp-18-189-77-44.dyn.MIT.EDU) has quit (Client Quit)
2016-09-20 04:10:22	<--	Valdaris (~Gabe@75-170-43-116.eugn.qwest.net) has quit (Ping timeout: 255 seconds)
2016-09-20 04:10:34	<--	xnavor (~xnavor@vbg-gw.proceranetworks.com) has quit (Quit: This computer has gone to sleep)
2016-09-20 04:10:51	<--	josef__k (~jeremy@59.102.31.229) has quit (Ping timeout: 265 seconds)
2016-09-20 04:11:07	<--	tachoknight (~tachoknig@2601:241:102:60a6:8e70:5aff:fe24:3cb0) has quit (Ping timeout: 272 seconds)
2016-09-20 04:11:18	<--	mss_cyclist (~MSe@89-250-189-210.tangos.nl) has quit (Ping timeout: 264 seconds)
2016-09-20 04:11:26	-->	brendel_ (~brice@LAubervilliers-656-1-215-246.w217-128.abo.wanadoo.fr) has joined ##c++
2016-09-20 04:12:01	-->	tachoknight (~tachoknig@2601:241:102:60a6:8e70:5aff:fe24:3cb0) has joined ##c++
2016-09-20 04:12:12	-->	ScorpionJack (~Scorpion@unaffiliated/scorpionjack) has joined ##c++
2016-09-20 04:13:22	-->	slavanap (~slavanap@5.145.251.251) has joined ##c++
2016-09-20 04:13:42	-->	syem (~s@unaffiliated/syem) has joined ##c++
2016-09-20 04:14:07	slavanap	{ cout << nextafter(10., 0.); }
2016-09-20 04:14:09	geordi	10
2016-09-20 04:14:25	-->	f10 (~flo@2001:470:52af:1:1883:b70e:19db:f1db) has joined ##c++
2016-09-20 04:14:30	<--	brendel (~brice@LAubervilliers-656-1-215-246.w217-128.abo.wanadoo.fr) has quit (Ping timeout: 260 seconds)
2016-09-20 04:14:33	-->	f10_ (~flo@2001:470:52af:1:242c:2fc9:d40d:50d3) has joined ##c++
2016-09-20 04:15:13	<--	nikki93 (~nikki93@166.170.39.20) has quit (Remote host closed the connection)
2016-09-20 04:15:23	<--	kw01f (~kw01f@merlin.mvtec.com) has quit
2016-09-20 04:15:29	-->	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has joined ##c++
2016-09-20 04:16:00	<--	bjz (~bjz@14-201-215-168.tpgi.com.au) has quit (Read error: Connection reset by peer)
2016-09-20 04:16:51	-->	gist (~jack@p5B1053A0.dip0.t-ipconnect.de) has joined ##c++
2016-09-20 04:16:51		[04:16]
2016-09-20 04:17:37	-->	it_ (~it_@212.243.190.164) has joined ##c++
2016-09-20 04:17:41	-->	bjz (~bjz@14-201-215-168.tpgi.com.au) has joined ##c++
2016-09-20 04:18:28	<--	tachoknight (~tachoknig@2601:241:102:60a6:8e70:5aff:fe24:3cb0) has quit (Ping timeout: 255 seconds)
2016-09-20 04:18:40	-->	snowkidind (~textual@pool-96-255-207-158.washdc.fios.verizon.net) has joined ##c++
2016-09-20 04:18:44	-->	tachoknight (~tachoknig@2601:241:102:60a6:8e70:5aff:fe24:3cb0) has joined ##c++
2016-09-20 04:19:35	<--	f10_ (~flo@2001:470:52af:1:242c:2fc9:d40d:50d3) has quit (Remote host closed the connection)
2016-09-20 04:19:46	<--	oftc_ftw (~oftc_ftw@unaffiliated/oftc-ftw/x-3443471) has quit (Read error: Connection reset by peer)
2016-09-20 04:19:54	-->	f10_ (~flo@2001:470:52af:1:242c:2fc9:d40d:50d3) has joined ##c++
2016-09-20 04:20:03	-->	h4k1m (83e3a56b@gateway/web/freenode/ip.131.227.165.107) has joined ##c++
2016-09-20 04:20:29	h4k1m	Hi everyone
2016-09-20 04:20:57	<--	rorro (~rorro@c-226-182.eduroam.liu.se) has quit (Ping timeout: 265 seconds)
2016-09-20 04:21:30	<--	UnrightSuika_mob (~UnlikeSui@147.46.113.63) has quit (Ping timeout: 276 seconds)
2016-09-20 04:21:34	<--	bjz (~bjz@14-201-215-168.tpgi.com.au) has quit (Read error: Connection reset by peer)
2016-09-20 04:22:05	h4k1m	I noticed in OpenCV tutorial webpage that a matrix object is initialized with `Mat m(param1, param2 ...)`, is this the usual syntax to initialize objects in C++ (or is it specific to OpenCV)? I thought that objects instances are usually initialized with the `new` keyword...
2016-09-20 04:22:06	-->	snover (~Adium@unaffiliated/snover) has joined ##c++
2016-09-20 04:22:18	-->	bjz (~bjz@14-201-215-168.tpgi.com.au) has joined ##c++
2016-09-20 04:22:41	-->	tristanseifert (~tristanse@128.194.3.4) has joined ##c++
2016-09-20 04:22:45	slavanap	h4k1m, have you heard about class constructors?
2016-09-20 04:22:58	h4k1m	slavanap: yes sure
2016-09-20 04:23:40	slavanap	{ class  A { public: A(int x, int y) { } };              A a(1,2); /* simple sample */ }
2016-09-20 04:23:41	geordi	<no output>
2016-09-20 04:23:45	h4k1m	slavanap: but shouldn't we use the `new` keyword instead, or is the abovementioned syntax an alternative to the new keyword?
2016-09-20 04:23:50	<--	zap0 (~moofy@14-201-222-143.tpgi.com.au) has quit (Quit: zap0)
2016-09-20 04:24:09	slavanap	{ class  A { public: template<Args...> A(const Args...& args) { } };              A a(1,2,3); /* complicated sample */ }
2016-09-20 04:24:09	geordi	error: invalid declaration of member template in local class
2016-09-20 04:24:33	w3z	new indicates that the object should be allocated and constructed on the free store
2016-09-20 04:24:44	-->	SpaceDanceCJ (~Sasha@178.121.24.88) has joined ##c++
2016-09-20 04:24:44	slavanap	{ class  A { public: template<typename ... Args> A(const Args...& args) { } };              A a(1,2,3); /* complicated sample */ }
2016-09-20 04:24:44	geordi	Same error.
2016-09-20 04:25:08	slavanap	{ class  A { public: template<typename ... Args> A(const Args& ... args) { } };              A a(1,2,3); /* complicated sample */ }
2016-09-20 04:25:09	geordi	Still same error.
2016-09-20 04:25:09	h4k1m	w3z: doesn't the previous syntax allocate space for the variable?
2016-09-20 04:25:21	w3z	slavanap: take it to private message
2016-09-20 04:25:34	slavanap	w3z, okay.
2016-09-20 04:25:55	h4k1m	w3z: slavanap: I meant what's the difference between the previous syntax and using `new`?
2016-09-20 04:26:01	w3z	{int i(0); int* p = new int(0);}
2016-09-20 04:26:02	geordi	<no output>
2016-09-20 04:26:09	h4k1m	and which one should be preferred?
2016-09-20 04:26:11	<--	ScorpionJack (~Scorpion@unaffiliated/scorpionjack) has quit (Quit: ScorpionJack)
2016-09-20 04:26:28	-->	xasha (~astrode5@123.236.42.48) has joined ##c++
2016-09-20 04:26:31	w3z	i is an automatic block scope instance of an integer, its lifetime is that of the {} block
2016-09-20 04:26:32	slavanap	h4k1m, new keyword allocates a new chunk of memory from the heap and initializes the object there. A a(1,2); syntax allocates memory on stack and initializes object there.
2016-09-20 04:26:52	w3z	p is a free store allocated integer its lifetime is independent of the {} block
2016-09-20 04:26:58	<--	merijn (~merijn@212.78.164.170) has quit (Ping timeout: 272 seconds)
2016-09-20 04:27:28	<--	Kimau (~bouncer@81.141.11.175) has quit (Ping timeout: 255 seconds)
2016-09-20 04:27:47	<--	TreyG (~nobody@182.75.45.1) has quit (Quit: Lost terminal)
2016-09-20 04:27:53	<--	symm- (~symm-@86.127.152.32) has quit (Ping timeout: 248 seconds)
2016-09-20 04:27:55	h4k1m	w3z: slavanap: I see. Thanks very much ^^
2016-09-20 04:28:05	w3z	so slavanap that isnt true exactly, and is a sloppy explanation
2016-09-20 04:28:06	w3z	!book
2016-09-20 04:28:08	nolyc	A nice C++ book guide and list can be found at http://stackoverflow.com/q/388242/1090079
2016-09-20 04:28:25	<--	tachoknight (~tachoknig@2601:241:102:60a6:8e70:5aff:fe24:3cb0) has quit (Ping timeout: 248 seconds)
2016-09-20 04:28:25	<--	buumi (~quassel@26.ip-51-254-211.eu) has quit (Remote host closed the connection)
2016-09-20 04:28:57	slavanap	w3z, well that's still simple explanation.
2016-09-20 04:29:01	w3z	{new S;} struct S{int i{0};}; //i is not allocated on the stack ... (and not on the heap, but on the free store)
2016-09-20 04:29:02	geordi	<no output>
2016-09-20 04:29:33	w3z	anyway
2016-09-20 04:30:03	-->	bergesenha (~harald@90.149.192.21) has joined ##c++
2016-09-20 04:30:22	-->	buumi (~quassel@26.ip-51-254-211.eu) has joined ##c++
2016-09-20 04:30:30	-->	iik (~IIK@staticline-31-183-46-69.toya.net.pl) has joined ##c++
2016-09-20 04:30:31	slavanap	w3z, S is allocated on the heap. int{0}  -- is a syntax sugar added in C++1x, which I not recommend to use. explicit constructors better imho.
2016-09-20 04:30:44	slavanap	*int i{0}
2016-09-20 04:31:32	w3z	1) its not the heap - its the free store
2016-09-20 04:31:43	w3z	2) member initialization is c++11
2016-09-20 04:31:56	-->	tachoknight (~tachoknig@2601:241:102:60a6:8e70:5aff:fe24:3cb0) has joined ##c++
2016-09-20 04:31:56		[04:31]
2016-09-20 04:32:01	w3z	3) the same syntax can be used in in initializer list
2016-09-20 04:32:04	slavanap	h4k1m, don't forget to call delete for all your `new`. If you use `new`, then you are responsible for memory free action.
2016-09-20 04:32:18	ppf	why's there such a fuzz about heap vs free store
2016-09-20 04:32:39	w3z	because new doesnt necessarily use the c heap
2016-09-20 04:32:40	-->	josh_ (~josh@c-67-182-242-240.hsd1.ut.comcast.net) has joined ##c++
2016-09-20 04:32:46	slavanap	w3z, tell me the difference between heap and free store.
2016-09-20 04:32:55	-->	Tempesta_ (~Tempesta@121.131.185.96) has joined ##c++
2016-09-20 04:33:08	-->	tachokni_ (~tachoknig@c-73-246-129-13.hsd1.il.comcast.net) has joined ##c++
2016-09-20 04:33:09	<--	tachoknight__ (~tachoknig@c-73-246-129-13.hsd1.il.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-20 04:33:17	slavanap	w3z, except they are using different methods.
2016-09-20 04:33:20	w3z	the free store may be implemented on top of the os or c heap, but doesnt have to
2016-09-20 04:33:36	slavanap	w3z, well it should be implemented somehow.
2016-09-20 04:33:50	w3z	it is implemented "some how"
2016-09-20 04:33:50	slavanap	and it works the same.
2016-09-20 04:33:50	h4k1m	slavanap: whereas if I use the other syntax (), once I get out of the {} block, it's freed automatically...
2016-09-20 04:34:04	slavanap	h4k1m, yes.
2016-09-20 04:34:07	w3z	that some how may be a static fixed size block
2016-09-20 04:34:09	ppf	yes, one is the abstract concept, the other a possible implementation, but is that truely such a big difference?
2016-09-20 04:34:30	-->	b (~a@199.180.238.154) has joined ##c++
2016-09-20 04:34:43	slavanap	w3z, heap might be implemented as static fixed size block on OS level.
2016-09-20 04:34:54	--	b is now known as Guest58275
2016-09-20 04:35:00	w3z	anyway, its the way the language is specified, a distinction is made
2016-09-20 04:35:28	w3z	if you want to use your own jargon instead go ahead, youll just be potentially wrong
2016-09-20 04:35:40	slavanap	the distinction for me is new/delete, new T[]/delete[]   vs.   malloc or calloc / free.
2016-09-20 04:35:56	-->	oftc_ftw (~oftc_ftw@unaffiliated/oftc-ftw/x-3443471) has joined ##c++
2016-09-20 04:36:03	w3z	good for you, that of course doesnt cover allocators
2016-09-20 04:36:32	-->	codercodi (~codercodi@108-192-148-40.lightspeed.gnvlsc.sbcglobal.net) has joined ##c++
2016-09-20 04:36:33	<--	Tempesta (~Tempesta@unaffiliated/tempesta) has quit (Ping timeout: 240 seconds)
2016-09-20 04:36:55	slavanap	w3z, okay. I will not argue with the person who wants to make his speech to be correct according the C++ standard.
2016-09-20 04:37:00	RokerHRO	int* meep = new(42,"meep") int[42];
2016-09-20 04:37:16	<--	Guest58275 (~a@199.180.238.154) has left ##c++
2016-09-20 04:37:17	w3z	gee ...what should i use in a channel about the standard
2016-09-20 04:37:55	ppf	:)
2016-09-20 04:38:23	slavanap	w3z, people writing standards. They are not much different from us. Sometimes it's better to be more simple than precise.
2016-09-20 04:38:30	slavanap	That's my point.
2016-09-20 04:38:52	<--	voidah (~voidah@unaffiliated/voider) has quit (Remote host closed the connection)
2016-09-20 04:39:02	<--	Tempesta_ (~Tempesta@121.131.185.96) has left ##c++
2016-09-20 04:39:09	-->	Kimau (~bouncer@5.80.30.70) has joined ##c++
2016-09-20 04:39:12	-->	Tempesta (~Tempesta@unaffiliated/tempesta) has joined ##c++
2016-09-20 04:39:20	<--	Chestal (~thilo@vmax.unix-ag.uni-siegen.de) has quit (Read error: Connection reset by peer)
2016-09-20 04:39:24	<--	xasha (~astrode5@123.236.42.48) has quit (Quit: Leaving)
2016-09-20 04:40:01	<--	SpaceDanceCJ (~Sasha@178.121.24.88) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-09-20 04:40:30	-->	Sculptor (~Sculptor@cable-24-135-26-151.dynamic.sbb.rs) has joined ##c++
2016-09-20 04:40:38	<--	drozdziak1 (~drozdziak@do-atman.cubiware.com) has quit (Quit: WeeChat 1.5)
2016-09-20 04:40:51	<--	AquaL1te (~AquaL1te@unaffiliated/aqual1te) has quit (Quit: leaving)
2016-09-20 04:41:46	-->	sammyg (~sammyg@h-13-10.a485.priv.bahnhof.se) has joined ##c++
2016-09-20 04:42:49	-->	WishBoy (~WishBoy@189.111.78.58) has joined ##c++
2016-09-20 04:42:50	-->	jrolland-work (~jeff@155.92.176.224) has joined ##c++
2016-09-20 04:42:53	-->	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has joined ##c++
2016-09-20 04:43:07	<--	WishBoy (~WishBoy@189.111.78.58) has left ##c++
2016-09-20 04:43:12	-->	WishBoy (~WishBoy@189.111.78.58) has joined ##c++
2016-09-20 04:43:14	-->	pmercado (~pmercado@186-104-159-146.baf.movistar.cl) has joined ##c++
2016-09-20 04:43:28	-->	ScorpionJack (~Scorpion@unaffiliated/scorpionjack) has joined ##c++
2016-09-20 04:43:45	<--	WishBoy (~WishBoy@189.111.78.58) has quit (Client Quit)
2016-09-20 04:43:56	<--	bergesenha (~harald@90.149.192.21) has quit (Quit: leaving)
2016-09-20 04:44:48	<--	f10 (~flo@2001:470:52af:1:1883:b70e:19db:f1db) has quit (Read error: Connection reset by peer)
2016-09-20 04:45:32	-->	oldmacd (~eieio@34.06.01a8.ip4.static.sl-reverse.com) has joined ##c++
2016-09-20 04:45:35	-->	f10 (~flo@2001:470:52af:1:1883:b70e:19db:f1db) has joined ##c++
2016-09-20 04:46:06	-->	oxbb5c (~Thunderbi@193.255.135.254) has joined ##c++
2016-09-20 04:47:29	-->	mangolisk (~mangolisk@S0106848dc7ebaa06.vc.shawcable.net) has joined ##c++
2016-09-20 04:47:29		[04:47]
2016-09-20 04:47:30	<--	Shoelaces (~shoelaces@pool-173-56-47-240.nycmny.fios.verizon.net) has quit (Ping timeout: 276 seconds)
2016-09-20 04:48:17	<--	ibouvousaime (~ibouvousa@41.82.193.77) has quit (Ping timeout: 240 seconds)
2016-09-20 04:49:41	-->	UnlikeSuika_mobi (~UnlikeSui@147.46.113.63) has joined ##c++
2016-09-20 04:49:58	<--	brendel_ (~brice@LAubervilliers-656-1-215-246.w217-128.abo.wanadoo.fr) has quit (Ping timeout: 244 seconds)
2016-09-20 04:50:14	<--	kimundi (~Kimundi@dynip-129-217-065-035.wifi.tu-dortmund.de) has quit (Remote host closed the connection)
2016-09-20 04:50:25	-->	kimundi (~Kimundi@dynip-129-217-065-035.wifi.tu-dortmund.de) has joined ##c++
2016-09-20 04:53:09	-->	oldtopman (~oldtopman@unaffiliated/oldtopman) has joined ##c++
2016-09-20 04:54:41	<--	oxbb5c (~Thunderbi@193.255.135.254) has quit (Remote host closed the connection)
2016-09-20 04:55:09	<--	it_ (~it_@212.243.190.164) has quit (Quit: Nettalk6 - www.ntalk.de)
2016-09-20 04:55:50	-->	rorro (~rorro@c-227-105.eduroam.liu.se) has joined ##c++
2016-09-20 04:57:21	<--	kaffeetrauma (~Thunderbi@n37.informatik.fh-dortmund.de) has quit (Quit: kaffeetrauma)
2016-09-20 04:57:43	<--	c0le (~c0le@59.99.251.45) has quit (Quit: "This is the end.. My beautiful friend.. The end.")
2016-09-20 04:59:42	-->	SweetPear (uid144596@gateway/web/irccloud.com/x-keaowyphhvculfkb) has joined ##c++
2016-09-20 05:00:21	-->	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has joined ##c++
2016-09-20 05:00:31	<--	riemann (~riemann@84-10-11-234.static.chello.pl) has quit (Remote host closed the connection)
2016-09-20 05:01:36	ville	and not knowing whether all people in the discussion agree on the specification of the term. it's just simpler to use the terms that standard specifies.
2016-09-20 05:02:15	-->	RedOrangeZ2 (~RedOrange@c-73-30-227-113.hsd1.pa.comcast.net) has joined ##c++
2016-09-20 05:02:26	<--	RedOrangeZ (~RedOrange@c-73-30-227-113.hsd1.pa.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-20 05:04:01	<--	casscode (~bru@169-0-91-62.ip.afrihost.co.za) has quit (Ping timeout: 265 seconds)
2016-09-20 05:04:01		[05:04]
2016-09-20 05:04:37	-->	karakedi (~eAC53C340@unaffiliated/orphan) has joined ##c++
2016-09-20 05:05:07	-->	zipace (~anon@unaffiliated/zipace) has joined ##c++
2016-09-20 05:05:52	-->	brendel_ (~brice@LAubervilliers-656-1-215-246.w217-128.abo.wanadoo.fr) has joined ##c++
2016-09-20 05:06:41	w3z	its not worth arguing further, but eh, the two are distinct, the c++ standard doesnt mention heap other than wrt the algorithm functions and related data structure, attempting to use the c heap and c++ free-store interchagably is an error ... its only a 3/10 gotw question http://www.gotw.ca/gotw/009.htm
2016-09-20 05:07:26	<--	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has quit (Quit: Leaving.)
2016-09-20 05:07:54	w3z	and fwiw i dont think theyre different than me, other than they have more free time and/or corporate sponsorship :)
2016-09-20 05:08:17	w3z	or more altruism, take your pick
2016-09-20 05:09:45	<--	Sceorem (~Sceorem@xbn44-3-82-232-76-9.fbx.proxad.net) has quit (Quit: Leaving)
2016-09-20 05:10:35	-->	achauvin (~achauvin@nat-wifi-etu-3.univ-rouen.fr) has joined ##c++
2016-09-20 05:11:08	-->	neurodrone_ (~neurodron@unaffiliated/neurodrone) has joined ##c++
2016-09-20 05:11:27	<--	achauvin (~achauvin@nat-wifi-etu-3.univ-rouen.fr) has quit (Client Quit)
2016-09-20 05:12:03	<--	TMM (~hp@fsf/member/pdpc.professional.tmm) has quit (Ping timeout: 240 seconds)
2016-09-20 05:14:42	-->	corsaere (~corsaere@unaffiliated/corsaere) has joined ##c++
2016-09-20 05:14:51	-->	whatwhat (~jshjsh@172.56.17.251) has joined ##c++
2016-09-20 05:15:03	--	whatwhat is now known as JoshS
2016-09-20 05:15:09	-->	franl (~nobody@interv03.i.subnet.rcn.com) has joined ##c++
2016-09-20 05:15:13	<--	jshjsh (~jshjsh@172.56.17.251) has quit (Disconnected by services)
2016-09-20 05:15:21	-->	Chestal (~thilo@vmax.unix-ag.uni-siegen.de) has joined ##c++
2016-09-20 05:15:46	-->	ibouvousaime (~ibouvousa@41.82.193.77) has joined ##c++
2016-09-20 05:16:20	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 05:17:57	<--	kaleid0 (~kaleid0@184.sub-174-219-1.myvzw.com) has quit (Remote host closed the connection)
2016-09-20 05:18:33	<--	gist (~jack@p5B1053A0.dip0.t-ipconnect.de) has quit (Ping timeout: 240 seconds)
2016-09-20 05:19:40	-->	pavshn (~Mutter@188.123.230.180) has joined ##c++
2016-09-20 05:19:40		[05:19]
2016-09-20 05:21:08	-->	symm- (~symm-@86.127.152.32) has joined ##c++
2016-09-20 05:21:22	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 265 seconds)
2016-09-20 05:23:46	-->	EvilPeng1 (~EvilPengu@bur-inet-pa-4.disney.com) has joined ##c++
2016-09-20 05:25:49	<--	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has quit (Read error: Connection reset by peer)
2016-09-20 05:27:30	<--	UnlikeSuika_mobi (~UnlikeSui@147.46.113.63) has quit (Ping timeout: 264 seconds)
2016-09-20 05:27:33	-->	InfoTest (~Thunderbi@tgn.149.26.66.dts.mg) has joined ##c++
2016-09-20 05:28:13	-->	YungRaj (~YungRaj@nat-165-91-12-252.tamulink.tamu.edu) has joined ##c++
2016-09-20 05:28:22	<--	pavshn (~Mutter@188.123.230.180) has quit (Quit: Mutter: http://www.mutterirc.com)
2016-09-20 05:28:38	<--	narendraj9 (~user@157.119.170.52) has quit (Remote host closed the connection)
2016-09-20 05:28:39	-->	pavshn (~Mutter@188.123.230.180) has joined ##c++
2016-09-20 05:30:04	<--	Kn|t3 (~agarwalvi@49.207.53.8) has quit (Quit: Kn|t3)
2016-09-20 05:31:54	-->	z3r0_ (~z3r0@41.86.240.102) has joined ##c++
2016-09-20 05:32:16	-->	Kn|t3 (~agarwalvi@49.207.53.8) has joined ##c++
2016-09-20 05:33:34	<--	jeromelanteri (~jeromelan@cm-119-76-54-163.revip17.asianet.co.th) has quit (Remote host closed the connection)
2016-09-20 05:33:52	-->	pheenx (~pheenx@2a02:8071:b68a:1c00:225:22ff:fee7:7dc5) has joined ##c++
2016-09-20 05:34:03	<--	YungRaj (~YungRaj@nat-165-91-12-252.tamulink.tamu.edu) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-20 05:34:12	<--	h_enke (252eb3f2@gateway/web/freenode/ip.37.46.179.242) has quit (Ping timeout: 240 seconds)
2016-09-20 05:34:57	-->	UnlikeSuika_mobi (~UnlikeSui@147.46.113.63) has joined ##c++
2016-09-20 05:34:57		[05:34]
2016-09-20 05:35:35	-->	Cinux` (~Cinux`@goe57-1-78-238-239-21.fbx.proxad.net) has joined ##c++
2016-09-20 05:36:20	-->	Tectu (~Tectu@193.231.195.178.dynamic.wline.res.cust.swisscom.ch) has joined ##c++
2016-09-20 05:37:25	<--	FreeBird_ (~freebirdl@112.20.80.252) has quit
2016-09-20 05:38:09	<--	daniel-s (~daniel-s@bla31-1-82-241-231-138.fbx.proxad.net) has quit (Quit: Konversation terminated!)
2016-09-20 05:38:26	-->	daniel-s (~daniel-s@bla31-1-82-241-231-138.fbx.proxad.net) has joined ##c++
2016-09-20 05:39:18	<--	jaafar (~quassel@50-206-78-205-static.hfc.comcastbusiness.net) has quit (Ping timeout: 265 seconds)
2016-09-20 05:40:01	<--	Elirips (~Elirips@242.109.22.178.ftth.as8758.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2016-09-20 05:40:06	<--	oldmacd (~eieio@34.06.01a8.ip4.static.sl-reverse.com) has quit (Ping timeout: 264 seconds)
2016-09-20 05:41:21	V-ille	In case you wish to entertain the illusion that the people who write the standard aren't much different from you, I must say I am very different from you.
2016-09-20 05:41:27	-->	ozu (~ozu@mar13-2-82-246-223-195.fbx.proxad.net) has joined ##c++
2016-09-20 05:41:33	<--	pavshn (~Mutter@188.123.230.180) has quit (Ping timeout: 240 seconds)
2016-09-20 05:42:50	<--	serycjon (~jonas@20.53.broadband14.iol.cz) has left ##c++
2016-09-20 05:43:00	<--	eduardas_m (~eduardas_@213.197.143.19) has quit (Quit: Leaving)
2016-09-20 05:43:32	ppf	V-ille: tell us more
2016-09-20 05:43:39	<--	kimundi (~Kimundi@dynip-129-217-065-035.wifi.tu-dortmund.de) has quit (Ping timeout: 265 seconds)
2016-09-20 05:43:47	V-ille	you're not ready for illumination
2016-09-20 05:44:00	V-ille	</we are the vorlons, bitches>
2016-09-20 05:44:08	<--	Marqin (~marqin@spiramirabilis.net) has quit (Changing host)
2016-09-20 05:44:08	-->	Marqin (~marqin@unaffiliated/marqin) has joined ##c++
2016-09-20 05:44:34	-->	pavshn (~Mutter@188.123.230.180) has joined ##c++
2016-09-20 05:45:46	<--	ozu (~ozu@mar13-2-82-246-223-195.fbx.proxad.net) has quit (Ping timeout: 244 seconds)
2016-09-20 05:46:19	<--	tristanseifert (~tristanse@128.194.3.4) has quit (Quit: WeeChat 1.5)
2016-09-20 05:47:53	-->	jan64 (~jan64@agaa94.neoplus.adsl.tpnet.pl) has joined ##c++
2016-09-20 05:48:00	ppf	wow, i haven't heard a babylon 5 reference in, like, decades
2016-09-20 05:48:31	w3z	well you obviously have bad taste in tv, thats a difference :)
2016-09-20 05:49:18	va	{ int x; __typeof__(x) *xp; } /* could something like this be done with decltype instead? */
2016-09-20 05:49:19	geordi	<no output>
2016-09-20 05:49:25	w3z	(though in fairness ive watched my share of awful tv too)
2016-09-20 05:49:35	<--	gegagome (~gegagome@ip68-6-89-154.sb.sd.cox.net) has quit (Quit: gegagome)
2016-09-20 05:49:40	-->	Budd (~eric@cpe-67-242-201-146.nycap.res.rr.com) has joined ##c++
2016-09-20 05:49:47	w3z	{int x; decltype(x)* p;}
2016-09-20 05:49:48	geordi	<no output>
2016-09-20 05:50:18	w3z	nope, unpossible
2016-09-20 05:50:18		[05:50]
2016-09-20 05:51:52	<--	Kronuz (~Kronuz@235.87.59.108.bc.googleusercontent.com) has quit (Changing host)
2016-09-20 05:51:53	-->	Kronuz (~Kronuz@unaffiliated/kronuz) has joined ##c++
2016-09-20 05:52:00	-->	satirev (~Satirev@179.93.83.106) has joined ##c++
2016-09-20 05:52:03	<--	satirev (~Satirev@179.93.83.106) has quit (Max SendQ exceeded)
2016-09-20 05:52:06	-->	tristanseifert (~tristanse@128.194.3.4) has joined ##c++
2016-09-20 05:52:12	-->	illerucis (~illerucis@2620:10d:c091:200::2:8037) has joined ##c++
2016-09-20 05:52:18	-->	satirev (~Satirev@179.93.83.106) has joined ##c++
2016-09-20 05:52:21	va	{ int x; reinterpret_cast<decltype(x) *>(nullptr); }
2016-09-20 05:52:21	geordi	error: invalid cast from type 'nullptr_t' to type 'int*'
2016-09-20 05:52:21	<--	satirev (~Satirev@179.93.83.106) has quit (Max SendQ exceeded)
2016-09-20 05:52:38	va	that I can live with :p
2016-09-20 05:53:41	-->	depe (~depe@nag77-2-83-152-154-106.fbx.proxad.net) has joined ##c++
2016-09-20 05:54:02	<--	depe (~depe@nag77-2-83-152-154-106.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-20 05:54:22	-->	Cjcha (~Cjcha@nag77-2-83-152-154-106.fbx.proxad.net) has joined ##c++
2016-09-20 05:54:55	-->	Vuks (~Vuks@unaffiliated/vuks69) has joined ##c++
2016-09-20 05:55:16	<--	jan64 (~jan64@agaa94.neoplus.adsl.tpnet.pl) has quit (Quit: Leaving)
2016-09-20 05:56:24	-->	RubberDog (~GodsDecei@p508350EE.dip0.t-ipconnect.de) has joined ##c++
2016-09-20 05:56:46	<--	Anticom (~quassel@217.6.33.234) has quit (Remote host closed the connection)
2016-09-20 05:56:54	-->	chasmo77 (~chas77@158.183-62-69.ftth.swbr.surewest.net) has joined ##c++
2016-09-20 05:56:56	-->	jan64 (~jan64@agaa94.neoplus.adsl.tpnet.pl) has joined ##c++
2016-09-20 05:58:22	symm-	why didn't that cast work?
2016-09-20 05:59:44	<--	tlaxkit (~Thunderbi@92.185.154.236) has quit (Quit: tlaxkit)
2016-09-20 05:59:50	<--	pavshn (~Mutter@188.123.230.180) has quit (Quit: Mutter: http://www.mutterirc.com)
2016-09-20 06:00:28	w3z	{ int x; static_cast<decltype(x) *>(nullptr); }
2016-09-20 06:00:29	geordi	<no output>
2016-09-20 06:00:39	-->	SHC (~quassel@43.239.245.200) has joined ##c++
2016-09-20 06:01:12	<--	corsaere (~corsaere@unaffiliated/corsaere) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-09-20 06:01:52	-->	bounce (bounce@unaffiliated/bounce) has joined ##c++
2016-09-20 06:02:04	w3z	{reinterpret_cast<int*>(nullptr);} //nothing to do with decltype ....
2016-09-20 06:02:04	geordi	error: invalid cast from type 'nullptr_t' to type 'int*'
2016-09-20 06:02:32	symm-	yeah. why doesn't nullptr cast to int*??
2016-09-20 06:02:44	symm-	seems like a total no brainer that it should
2016-09-20 06:03:46	-->	Biokee (~BioKey@2a02:1205:506f:db70:5c2e:5385:e30b:3203) has joined ##c++
2016-09-20 06:04:10	--	Biokee is now known as Guest58942
2016-09-20 06:04:27	-->	pavshn (~Mutter@188.123.230.180) has joined ##c++
2016-09-20 06:04:31	-->	asc232 (~Keith@179.38.182.91) has joined ##c++
2016-09-20 06:05:24	<--	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has quit (Quit: This computer has gone to sleep)
2016-09-20 06:05:24		[06:05]
2016-09-20 06:05:50	hs_	it does
2016-09-20 06:06:07	hs_	{ static_cast<int*>(nullptr); }
2016-09-20 06:06:08	geordi	<no output>
2016-09-20 06:06:29	<--	Cinux` (~Cinux`@goe57-1-78-238-239-21.fbx.proxad.net) has quit (Ping timeout: 250 seconds)
2016-09-20 06:06:42	<--	Haruno (~Haruno@unaffiliated/haruno) has quit (Remote host closed the connection)
2016-09-20 06:06:46	<--	viro (~viro@unaffiliated/viro) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-09-20 06:07:08	w3z	http://eel.is/c++draft/expr.reinterpret.cast#9 //fwiw
2016-09-20 06:07:35	<--	asc232 (~Keith@179.38.182.91) has quit (Remote host closed the connection)
2016-09-20 06:07:53	-->	lakin (~lakin@d108-173-185-33.abhsia.telus.net) has joined ##c++
2016-09-20 06:08:45	<--	flavi0 (~anon@unaffiliated/flavi0) has quit (Quit: leaving)
2016-09-20 06:09:43	-->	asc232 (~Keith@179.38.182.91) has joined ##c++
2016-09-20 06:11:23	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 06:11:33	<--	JoshS (~jshjsh@172.56.17.251) has quit (Ping timeout: 240 seconds)
2016-09-20 06:11:48	<--	syem (~s@unaffiliated/syem) has quit (Quit: Lost terminal)
2016-09-20 06:12:05	-->	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has joined ##c++
2016-09-20 06:12:08	<--	zero_byte (zer0@nat/redhat/x-cgtllrpzgitwwiwd) has quit (Ping timeout: 265 seconds)
2016-09-20 06:12:09	w3z	thats not the clearest wording, but what can you expect from babylon 5 viewers that prefer appertain to pertain :)
2016-09-20 06:12:12	-->	orbiter (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has joined ##c++
2016-09-20 06:12:17	<--	pavshn (~Mutter@188.123.230.180) has quit (Ping timeout: 240 seconds)
2016-09-20 06:13:19	-->	calque (~calque@c-71-205-14-244.hsd1.co.comcast.net) has joined ##c++
2016-09-20 06:13:57	-->	kimundi (~Kimundi@p57BC65CB.dip0.t-ipconnect.de) has joined ##c++
2016-09-20 06:14:10	-->	kasper^ (~safaf@82.137.15.107) has joined ##c++
2016-09-20 06:15:57	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 265 seconds)
2016-09-20 06:16:01	<--	marcofe (~marcofe@test-centre4-gw.estec.esa.int) has quit (Quit: Konversation terminated!)
2016-09-20 06:16:03	<--	mfc (~mfc@unaffiliated/mfc) has quit (Read error: Connection reset by peer)
2016-09-20 06:17:01	V-ille	we are not babylon 5 viewers, we are the vorlons
2016-09-20 06:17:01	-->	sh00p (~sh00p@84.216.39.31) has joined ##c++
2016-09-20 06:17:07	V-ille	a rather major difference there
2016-09-20 06:18:25	-->	metachr0n (~nobody@78.1.broadband13.iol.cz) has joined ##c++
2016-09-20 06:18:56	<--	rorro (~rorro@c-227-105.eduroam.liu.se) has quit (Ping timeout: 265 seconds)
2016-09-20 06:19:05	-->	Melite (~Melite@218.51.34.198) has joined ##c++
2016-09-20 06:19:24	-->	fahadash (uid44972@gateway/web/irccloud.com/x-znjselnbdvdpfhtc) has joined ##c++
2016-09-20 06:22:14	-->	whytrytofly (~whytrytof@dslb-094-223-012-212.094.223.pools.vodafone-ip.de) has joined ##c++
2016-09-20 06:22:14		[06:22]
2016-09-20 06:22:22	-->	scai (~scai@p4FF0FC1A.dip0.t-ipconnect.de) has joined ##c++
2016-09-20 06:23:12	<--	V-ille (~ville@59ec7803.symbio.com) has quit (Ping timeout: 265 seconds)
2016-09-20 06:23:29	<--	lsk (~lsk@enucs/member/lsk) has quit (Read error: Connection reset by peer)
2016-09-20 06:25:17	<--	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has quit (Read error: Connection reset by peer)
2016-09-20 06:25:37	-->	zagabar (~zagabar@unaffiliated/zagabar) has joined ##c++
2016-09-20 06:26:21	<--	blaxter (~blaxter@33.red-83-49-39.dynamicip.rima-tde.net) has quit (Quit: foo)
2016-09-20 06:26:51	-->	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has joined ##c++
2016-09-20 06:27:19	-->	kw01f (~kw01f@pD9FB1E37.dip0.t-ipconnect.de) has joined ##c++
2016-09-20 06:27:29	<--	seru76 (~seru76@77.89.191.179) has quit (Quit: Leaving)
2016-09-20 06:28:20	-->	h0ffmann (~h0ffmann@188.126.79.48) has joined ##c++
2016-09-20 06:28:21	<--	whytrytofly (~whytrytof@dslb-094-223-012-212.094.223.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2016-09-20 06:28:47	<--	Kn|t3 (~agarwalvi@49.207.53.8) has quit (Quit: Kn|t3)
2016-09-20 06:30:58	-->	Karyon (~yaaic@unaffiliated/karyon) has joined ##c++
2016-09-20 06:31:14	<--	Tectu (~Tectu@193.231.195.178.dynamic.wline.res.cust.swisscom.ch) has quit (Quit: Leaving)
2016-09-20 06:31:59	-->	alexmh (~alex@c-67-166-124-41.hsd1.ut.comcast.net) has joined ##c++
2016-09-20 06:33:47	<--	mukunda (praynspray@c-71-205-185-63.hsd1.co.comcast.net) has quit (Ping timeout: 244 seconds)
2016-09-20 06:34:28	-->	TMM (~hp@fsf/member/pdpc.professional.tmm) has joined ##c++
2016-09-20 06:35:31	<--	Levitator (~Meh@cpe-2606-A000-E182-FB00-F8FC-C295-9F4F-BE1A.dyn6.twc.com) has quit (Ping timeout: 250 seconds)
2016-09-20 06:35:45	-->	jaafar (~quassel@mobile-166-176-184-167.mycingular.net) has joined ##c++
2016-09-20 06:35:55	<--	snover (~Adium@unaffiliated/snover) has quit (Quit: Leaving.)
2016-09-20 06:36:13	<--	asc232 (~Keith@179.38.182.91) has quit (Remote host closed the connection)
2016-09-20 06:37:51	-->	JoshS (~jshjsh@172.56.39.26) has joined ##c++
2016-09-20 06:37:51		[06:37]
2016-09-20 06:42:05	<--	josh_ (~josh@c-67-182-242-240.hsd1.ut.comcast.net) has quit (Ping timeout: 265 seconds)
2016-09-20 06:42:18	-->	rorro (~rorro@c-227-105.eduroam.liu.se) has joined ##c++
2016-09-20 06:42:54	<--	slavanap (~slavanap@5.145.251.251) has quit (Quit: Leaving)
2016-09-20 06:43:35	<--	JoshS (~jshjsh@172.56.39.26) has quit (Ping timeout: 265 seconds)
2016-09-20 06:48:11	<--	metachr0n (~nobody@78.1.broadband13.iol.cz) has quit (Read error: Connection reset by peer)
2016-09-20 06:48:12	-->	hk238 (~kvirc@unaffiliated/hk238) has joined ##c++
2016-09-20 06:48:51	<--	noexcept (~noexcept@2a03:b0c0:3:d0::33:9001) has quit (Ping timeout: 265 seconds)
2016-09-20 06:49:12	-->	HerzogDeXtEr (~farci@i59F6CA3B.versanet.de) has joined ##c++
2016-09-20 06:50:33	regedit	is anyone able to join #programming (or is it ##programming) ?
2016-09-20 06:50:41	regedit	can't seem to connect to either
2016-09-20 06:50:49	-->	Adva (~Hyrule@2a02:810a:12c0:5068:dc93:567c:3ef5:ea44) has joined ##c++
2016-09-20 06:52:24	-->	viro (~viro@unaffiliated/viro) has joined ##c++
2016-09-20 06:52:27	-->	lhxb (~lhxb@x55b4b233.dyn.telefonica.de) has joined ##c++
2016-09-20 06:52:45	-->	ambro718 (~ambro@unaffiliated/ambro718) has joined ##c++
2016-09-20 06:53:22	--	yazdmich is now known as BytesAndCoffee
2016-09-20 06:53:22		[06:53]
2016-09-20 06:53:28	<--	hexoroid (hexoroid@unaffiliated/hexoroid) has quit (Read error: Connection reset by peer)
2016-09-20 06:53:33	<--	gioerr (~gioerr@athedsl-4409952.home.otenet.gr) has quit (Ping timeout: 240 seconds)
2016-09-20 06:55:42	-->	riemann (~riemann@ip-222-209.ists.pl) has joined ##c++
2016-09-20 06:55:49	<--	Melite (~Melite@218.51.34.198) has quit (Quit: Leaving)
2016-09-20 06:55:53	<--	Cjcha (~Cjcha@nag77-2-83-152-154-106.fbx.proxad.net) has quit (Remote host closed the connection)
2016-09-20 06:56:11	-->	Melite (~Melite@218.51.34.198) has joined ##c++
2016-09-20 06:57:11	<--	viro (~viro@unaffiliated/viro) has quit (Ping timeout: 250 seconds)
2016-09-20 06:57:33	-->	Kn|t3 (~agarwalvi@49.207.53.8) has joined ##c++
2016-09-20 06:58:17	-->	syem (~s@unaffiliated/syem) has joined ##c++
2016-09-20 06:58:33	-->	noexcept (~noexcept@2a03:b0c0:3:d0::33:9001) has joined ##c++
2016-09-20 06:59:04	-->	metachr0n (~nobody@78.1.broadband13.iol.cz) has joined ##c++
2016-09-20 06:59:26	-->	LKoen (~LKoen@2a01:e35:2eed:a430:4559:548:e104:9ad2) has joined ##c++
2016-09-20 07:00:16	-->	flavi0 (~anon@unaffiliated/flavi0) has joined ##c++
2016-09-20 07:00:38	symm-	regedit: ## and works for me
2016-09-20 07:00:43	-->	BillSussman (~Gustavo@189.58.169.15.dynamic.adsl.gvt.net.br) has joined ##c++
2016-09-20 07:00:55	<--	AndyBotwin (~Gustavo@unaffiliated/andybotwin) has quit (Ping timeout: 255 seconds)
2016-09-20 07:01:34	regedit	thanks, some other folks tell me it's because irccloud...
2016-09-20 07:02:14	-->	EricWF (~EricwF@184.151.36.170) has joined ##c++
2016-09-20 07:02:16	<--	EricWF (~EricwF@184.151.36.170) has quit (Client Quit)
2016-09-20 07:02:34	-->	h_enke (50d80b12@gateway/web/freenode/ip.80.216.11.18) has joined ##c++
2016-09-20 07:02:43	<--	h_enke (50d80b12@gateway/web/freenode/ip.80.216.11.18) has quit (Client Quit)
2016-09-20 07:03:53	<--	zwliew (uid161395@gateway/web/irccloud.com/x-jxixnchiwghskvub) has quit (Quit: Connection closed for inactivity)
2016-09-20 07:04:15	<--	Markow (~Markow@176.122.215.103) has quit (Remote host closed the connection)
2016-09-20 07:06:16	-->	przemkovv-bis (~przemkovv@d83-37.icpnet.pl) has joined ##c++
2016-09-20 07:07:05	<--	rorro (~rorro@c-227-105.eduroam.liu.se) has quit (Ping timeout: 240 seconds)
2016-09-20 07:08:20	<--	EvilPeng1 (~EvilPengu@bur-inet-pa-4.disney.com) has quit (Ping timeout: 260 seconds)
2016-09-20 07:12:11	-->	V-ille (~ville@81-175-149-170.bb.dnainternet.fi) has joined ##c++
2016-09-20 07:12:11		[07:12]
2016-09-20 07:12:24	-->	EvilPeng1 (~EvilPengu@bur-inet-pa-4.disney.com) has joined ##c++
2016-09-20 07:12:47	<--	jamesaxl (~jamesaxl@176.98.129.195) has quit (Ping timeout: 250 seconds)
2016-09-20 07:13:39	-->	jamesaxl (~jamesaxl@176.98.129.195) has joined ##c++
2016-09-20 07:14:16	-->	lemonx (uid186694@gateway/web/irccloud.com/x-fmvzxqppbfxcjomf) has joined ##c++
2016-09-20 07:14:16	Olipro	so, is this the best way to go about achieving SFINAE for telling between functions that have a return value and those that don't: http://pastebin.com/DV4tgnig
2016-09-20 07:15:33	<--	syem (~s@unaffiliated/syem) has quit (Quit: Lost terminal)
2016-09-20 07:15:36	<--	lemonx (uid186694@gateway/web/irccloud.com/x-fmvzxqppbfxcjomf) has left ##c++
2016-09-20 07:16:39	<--	phlpp (~Philipp@rihanna.cb.uni-bonn.de) has quit (Remote host closed the connection)
2016-09-20 07:16:39	<--	coventry (~user@192.64.64.26) has quit (Read error: Connection reset by peer)
2016-09-20 07:16:49	-->	coventry (~user@192.64.64.26) has joined ##c++
2016-09-20 07:16:50	<--	Brklyn (~truthbk@38.122.226.210) has quit (Read error: Connection reset by peer)
2016-09-20 07:16:51	-->	Brklyn_ (~truthbk@38.122.226.210) has joined ##c++
2016-09-20 07:17:26	<--	h0ffmann (~h0ffmann@188.126.79.48) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-09-20 07:17:52	<--	seishun (~Kakera@87.110.123.166) has quit (Disconnected by services)
2016-09-20 07:17:58	-->	seishun (~Kakera@78.84.144.136) has joined ##c++
2016-09-20 07:18:14	-->	bratner (~bratner@bzq-79-178-158-25.red.bezeqint.net) has joined ##c++
2016-09-20 07:18:15	<--	Betal (~Betal@unaffiliated/betal) has quit (Remote host closed the connection)
2016-09-20 07:18:30	-->	Betal (~Betal@unaffiliated/betal) has joined ##c++
2016-09-20 07:18:50	-->	Murii (~Murii@86.127.60.21) has joined ##c++
2016-09-20 07:18:50	-->	myhau (~myhau@89-64-1-66.dynamic.chello.pl) has joined ##c++
2016-09-20 07:18:51	-->	h0ffmann (~h0ffmann@188.126.79.48) has joined ##c++
2016-09-20 07:19:03	Murii	anyone here using libzip?
2016-09-20 07:19:17	-->	josh (~josh@168.103.191.142) has joined ##c++
2016-09-20 07:19:18	Murii	I'd like to know how to extract files and put them back
2016-09-20 07:19:22	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-20 07:19:53	-->	coventry` (~user@192.64.64.26) has joined ##c++
2016-09-20 07:20:21	hs_	--clang { auto j = gimme([](){return 0;}); cout << TYPE(j),j,"--"; gimme([](){ BARK; }); } template <typename F> auto gimme(F func) { return func(); } // Olipro, why not just this?
2016-09-20 07:20:28	hs_	{ auto j = gimme([](){return 0;}); cout << TYPE(j),j,"--"; gimme([](){ BARK; }); } template <typename F> auto gimme(F func) { return func(); } // Olipro, why not just this? -- round 2
2016-09-20 07:20:29	geordi	lvalue int, 0, -- main(int, char**)::<lambda()>
2016-09-20 07:20:57	Olipro	hs_: bceause I have to save and restore esp
2016-09-20 07:21:05	<--	coventry (~user@192.64.64.26) has quit (Read error: Connection reset by peer)
2016-09-20 07:21:12	Olipro	anything after a return statement isn't going to execute
2016-09-20 07:21:53	hs_	sorry what?
2016-09-20 07:22:04	Olipro	note the __asm lines in my paste
2016-09-20 07:22:07	<--	franl (~nobody@interv03.i.subnet.rcn.com) has left ##c++ ("O Elbereth! Gilthoniel! We still remember ...")
2016-09-20 07:22:43	hs_	oh I see
2016-09-20 07:23:59	<--	szulak (uid162164@gateway/web/irccloud.com/x-jsljspzzcrpsgrov) has quit (Quit: Connection closed for inactivity)
2016-09-20 07:25:44	<--	jackhum (uid97400@gateway/web/irccloud.com/x-gpskbanxpfluwnmz) has quit (Quit: Connection closed for inactivity)
2016-09-20 07:26:55	-->	k_j (~no@151.42.78.158) has joined ##c++
2016-09-20 07:27:30	hs_	{ auto j = gimme([]{ return 0; }); cout << TYPE(j),j," "; gimme([](){ BARK; }); } template <typename F> auto gimme(F func) -> enable_if_t<!is_void<decltype(func())>::value,decltype(func())> { return func(); } template <typename F> auto gimme(F func) -> enable_if_t<is_void<decltype(func())>::value> { func(); } // Olipro, round 3
2016-09-20 07:27:30		[07:27]
2016-09-20 07:27:31	geordi	lvalue int, 0,  main(int, char**)::<lambda()>
2016-09-20 07:27:52	w3z	youre missing a typename but otherwise eh
2016-09-20 07:27:53	hs_	result_of will be cleaner with args
2016-09-20 07:28:10	hs_	missing a typename..
2016-09-20 07:28:25	Olipro	isn't that going to fail if func takes N parameters
2016-09-20 07:28:31	-->	Haruno (~Haruno@unaffiliated/haruno) has joined ##c++
2016-09-20 07:28:40	w3z	its odd that template functions dont require the parameter pack to be the last argument, i mistakenly corrected lh_mouse about that last night
2016-09-20 07:28:55	-->	gelignite (~gelignite@x4e31b5c8.dyn.telefonica.de) has joined ##c++
2016-09-20 07:29:05	Olipro	the point of the template is to wrap any function no matter what arguments it takes
2016-09-20 07:29:44	w3z	i mean i guess its because template functions can deduce the arguments after a parameter pack, but even defaulted parameters arent allowed for class templates
2016-09-20 07:31:03	<--	kasper^ (~safaf@82.137.15.107) has quit (Ping timeout: 240 seconds)
2016-09-20 07:31:26	w3z	btw theres also result_of_t if you prefer to be consistent and use the 14 helpers
2016-09-20 07:31:30	Olipro	well, the number of arguments is always finite, so if you have two final template parameters, the pack is always going to be N-2
2016-09-20 07:31:37	-->	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has joined ##c++
2016-09-20 07:31:53	w3z	thats not relevant
2016-09-20 07:32:02	-->	sanct (~sanct@212.35.67.11) has joined ##c++
2016-09-20 07:32:07	w3z	its just an odd wrinkle in the rules
2016-09-20 07:32:07	-->	Cohedrin (~textual@c-73-170-239-253.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 07:32:43	<--	daniel-s (~daniel-s@bla31-1-82-241-231-138.fbx.proxad.net) has quit (Ping timeout: 244 seconds)
2016-09-20 07:32:59	Olipro	yes, I'm implying that I don't find it particularly odd
2016-09-20 07:33:18	-->	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has joined ##c++
2016-09-20 07:33:46	w3z	thats because you havent looked carefully, or thought about it enough, its definitely odd :)
2016-09-20 07:33:52	-->	Lenore (b84a0f22@gateway/web/freenode/ip.184.74.15.34) has joined ##c++
2016-09-20 07:34:00	<--	jaafar (~quassel@mobile-166-176-184-167.mycingular.net) has quit (Ping timeout: 260 seconds)
2016-09-20 07:34:45	<--	Melite (~Melite@218.51.34.198) has quit (Quit: Leaving)
2016-09-20 07:34:49	<--	Cohedrin (~textual@c-73-170-239-253.hsd1.ca.comcast.net) has quit (Max SendQ exceeded)
2016-09-20 07:35:35	-->	Cohedrin (~textual@c-73-170-239-253.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 07:35:50	w3z	{} template<class...A,class B=void> struct S{};
2016-09-20 07:35:50	geordi	error: parameter pack 'A' must be at the end of the template parameter list
2016-09-20 07:36:00	w3z	template<class...A,class B=void> void f(){}
2016-09-20 07:36:08	w3z	{} template<class...A,class B=void> void f(){}
2016-09-20 07:36:09	geordi	<no output>
2016-09-20 07:37:05	-->	RebelCoder (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has joined ##c++
2016-09-20 07:37:18	<--	coventry` (~user@192.64.64.26) has quit (Read error: Connection reset by peer)
2016-09-20 07:37:29	hs_	http://melpon.org/wandbox/permlink/HxyXFMzI6kZddrZH // Olipro -- not much different than yours
2016-09-20 07:37:55	-->	RajRajRaj (uid72176@gateway/web/irccloud.com/x-oriwpsecdftsgniv) has joined ##c++
2016-09-20 07:38:21	Lenore	i walked in late on that one, but template functions can even take more than one parameter pack.
2016-09-20 07:39:06	Olipro	hs_: hmm, not dramatically different, I don't have is_void_v sadly
2016-09-20 07:39:13	Olipro	although I'm curious about the rvalue reference
2016-09-20 07:39:20	Olipro	is that strictly necessary?
2016-09-20 07:39:26	Olipro	(std::forward makes perfect sense)
2016-09-20 07:39:52	w3z	{} template<class...A,class...B> void f(){} //whacky
2016-09-20 07:39:53	geordi	<no output>
2016-09-20 07:40:16	-->	Groscheri (~Dyonisos@unaffiliated/dyonisos) has joined ##c++
2016-09-20 07:40:57	-->	kilbith (4ee51c3e@gateway/web/cgi-irc/kiwiirc.com/ip.78.229.28.62) has joined ##c++
2016-09-20 07:42:35	Lenore	w3z: you can use that to match parameter packs in the template parameter lists of multiple types in the parameter list of the function.
2016-09-20 07:42:35		[07:42]
2016-09-20 07:42:39	Lenore	it can be very useful.
2016-09-20 07:43:03	-->	Elirips (~Elirips@84-74-149-15.dclient.hispeed.ch) has joined ##c++
2016-09-20 07:43:55	w3z	yes, its just strange seeing it naked without type deduction possible :)
2016-09-20 07:43:55	<--	kofman (~kofman@184-23-219-115.dedicated.static.sonic.net) has quit (Ping timeout: 265 seconds)
2016-09-20 07:44:27	-->	Dweezahr (~Dweezahr@5ED6C3D4.cm-7-7d.dynamic.ziggo.nl) has joined ##c++
2016-09-20 07:45:03	<--	kilbith (4ee51c3e@gateway/web/cgi-irc/kiwiirc.com/ip.78.229.28.62) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-09-20 07:45:09	w3z	i suppose you can also have parameter packs of type and non type arguments
2016-09-20 07:45:13	hs_	Olipro, no I don't think the && is necessary, now that I think about it
2016-09-20 07:45:25	w3z	{} template<class...A,size_t...N> void f(){}
2016-09-20 07:45:25	hs_	Args is already deduced and the && will just collapse away
2016-09-20 07:45:26	geordi	<no output>
2016-09-20 07:45:34	Dweezahr	Hi, I am looking for any guidelines on when to start a new cpp file. Are there any recommendations when to start a new file, like on every new class?
2016-09-20 07:45:43	-->	Anodl1 (~Anodl@p2003007A2F222500102A539BE71A59B7.dip0.t-ipconnect.de) has joined ##c++
2016-09-20 07:45:43	-->	ghsk (~dmitri@public-245-189.nat.utoronto.ca) has joined ##c++
2016-09-20 07:46:03	<--	Karyon (~yaaic@unaffiliated/karyon) has quit (Remote host closed the connection)
2016-09-20 07:46:09	w3z	the stroke of midnight, if you want to honor satan
2016-09-20 07:46:53	-->	mfc (~mfc@unaffiliated/mfc) has joined ##c++
2016-09-20 07:47:06	Olipro	Hail Hydra
2016-09-20 07:47:23	-->	YungRaj (~YungRaj@nat-165-91-12-142.tamulink.tamu.edu) has joined ##c++
2016-09-20 07:47:27	hs_	!give Dweezahr lakos
2016-09-20 07:47:29	nolyc	Dweezahr: Large-Scale C++ Software Design by John Lakos, ISBN 0201633620 http://www.amazon.com/Large-Scale-Software-Design-John-Lakos/dp/0201633620
2016-09-20 07:47:52	<--	RebelCoder (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has quit (Ping timeout: 265 seconds)
2016-09-20 07:48:07	Olipro	also, always use tabs, never spaces.
2016-09-20 07:48:07	-->	Freze (~Freze@dhcp-18-189-123-6.dyn.MIT.EDU) has joined ##c++
2016-09-20 07:48:09	hs_	Dweezahr, I recommend you pick that up, it covers the rationale for that and much more (and ignore that it is older)
2016-09-20 07:48:11	Olipro	;)
2016-09-20 07:48:35	Dweezahr	Olipro, thanks, I have downloaded the book
2016-09-20 07:48:41	Dweezahr	I will take a look
2016-09-20 07:48:41	Lenore	8-character tabs.  that your editor preserves.
2016-09-20 07:48:43	<--	hk238 (~kvirc@unaffiliated/hk238) has quit (Quit: http://www.kvirc.net/ 4.9.2 Aria)
2016-09-20 07:49:00	w3z	poor hs_
2016-09-20 07:49:07	Olipro	where'd you download it from?
2016-09-20 07:49:47	Dweezahr	bookzz
2016-09-20 07:50:09	w3z	where is everyone, the regulars are conspicuously quiet, cppcon i guess
2016-09-20 07:50:12	ville	discus piracy elsewhere.
2016-09-20 07:50:21	-->	SpaceDanceCJ (~Sasha@178.121.99.186) has joined ##c++
2016-09-20 07:50:30	hs_	why poor me? (not that I disagree...)
2016-09-20 07:50:43	w3z	your thanks was stolen :)
2016-09-20 07:51:06	<--	zipace (~anon@unaffiliated/zipace) has quit (Disconnected by services)
2016-09-20 07:51:11	biberu	johns book too
2016-09-20 07:52:18	hs_	oh, my thanks? my heavenly mana?
2016-09-20 07:52:44	hs_	such has it gone and will go
2016-09-20 07:52:47	Dweezahr	ah, sorry hs_ wrong person
2016-09-20 07:52:53	-->	szulak (uid162164@gateway/web/irccloud.com/x-wvsyikpmlfifnsgw) has joined ##c++
2016-09-20 07:53:48	<--	k4rtik (~k4rtik@unaffiliated/k4rtik) has quit (Quit: Leaving)
2016-09-20 07:54:02	-->	CaptainPi (~edx@dslb-188-099-059-189.188.099.pools.vodafone-ip.de) has joined ##c++
2016-09-20 07:55:35	<--	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has quit (Read error: Connection reset by peer)
2016-09-20 07:55:59	-->	daniel-s (~daniel-s@bla31-1-82-241-231-138.fbx.proxad.net) has joined ##c++
2016-09-20 07:56:00	<--	Kn|t3 (~agarwalvi@49.207.53.8) has quit (Quit: Kn|t3)
2016-09-20 07:56:04	<--	francoisk (~francoisk@154.66.250.11) has quit (Quit: Leaving)
2016-09-20 07:56:10	<--	ibouvousaime (~ibouvousa@41.82.193.77) has quit (Read error: Connection reset by peer)
2016-09-20 07:56:42	<--	pandaant (~batman@149.201.240.93) has quit (Remote host closed the connection)
2016-09-20 07:57:09	-->	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has joined ##c++
2016-09-20 07:57:22	-->	SteffanW (~steffanw@ip4da40774.direct-adsl.nl) has joined ##c++
2016-09-20 07:57:46	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 07:57:46		[07:57]
2016-09-20 07:58:27	w3z	 hs_, arent you a seattler too, no cppcon?
2016-09-20 07:58:41	w3z	(bellevue)
2016-09-20 07:59:12	-->	phinxy (~tehhhd@unaffiliated/phinxy) has joined ##c++
2016-09-20 07:59:12	w3z	thinlizzy is all jazzed about variants now
2016-09-20 07:59:18	<--	psychicist__ (~psychicis@ip127-8-212-87.adsl2.static.versatel.nl) has quit (Ping timeout: 264 seconds)
2016-09-20 07:59:22	<--	sophia7 (~sophia7@unaffiliated/sophia7) has quit (Quit: sophia7)
2016-09-20 07:59:41	<--	lhxb (~lhxb@x55b4b233.dyn.telefonica.de) has quit (Quit: lhxb)
2016-09-20 07:59:53	-->	Markow (~Markow@176.122.215.103) has joined ##c++
2016-09-20 07:59:59	hs_	no, and I wanted to volunteer as well but schedule wouldn't allow it
2016-09-20 08:00:10	hs_	variant is powerful stuff
2016-09-20 08:00:38	Lenore	i wish we could see some motion on lvariant.
2016-09-20 08:00:45	megaTherion	lvariant?
2016-09-20 08:00:47	hs_	what is lvariant
2016-09-20 08:01:33	Lenore	language-based variant
2016-09-20 08:01:33	-->	skweek (~skweek@68-200-146-225.res.bhn.net) has joined ##c++
2016-09-20 08:01:42	Lenore	there was a paper about it, let me see if i can dig it up
2016-09-20 08:01:49	Lenore	not a huge fan of the syntax in the paper but i agree with the problem
2016-09-20 08:01:52	-->	viro (~viro@unaffiliated/viro) has joined ##c++
2016-09-20 08:01:59	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 244 seconds)
2016-09-20 08:02:19	hs_	oh, some built-in dispatching?
2016-09-20 08:02:20	Lenore	i think its P0095
2016-09-20 08:02:43	Lenore	basically first-class tagged unions and pattern matching on them
2016-09-20 08:02:45	<--	nacon (~nacon@unaffiliated/nacon) has quit (Quit: leaving)
2016-09-20 08:02:46	<--	RoBo_V (~robo@27.255.218.76) has quit (Ping timeout: 265 seconds)
2016-09-20 08:02:48	hs_	I can see why someone might want that, but I am skeptical
2016-09-20 08:03:42	Lenore	i'm sceptical of their actual suggested implementation
2016-09-20 08:04:08	Lenore	but the two combined are very expressive.  especially if you're working with anything resembling expression trees.
2016-09-20 08:04:34	-->	RebelCoder (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has joined ##c++
2016-09-20 08:05:00	-->	RoBo_V (~robo@27.255.215.168) has joined ##c++
2016-09-20 08:05:09	<--	sanct (~sanct@212.35.67.11) has quit (Read error: Connection reset by peer)
2016-09-20 08:05:56	SpaceDanceCJ	Is C++ standard harmonious? Full picture I mean.
2016-09-20 08:06:04	-->	wnklmnn (~pascal@p4FEF608C.dip0.t-ipconnect.de) has joined ##c++
2016-09-20 08:06:33	-->	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has joined ##c++
2016-09-20 08:06:37	hs_	SpaceDanceCJ, are you wondering if it declares Bjarne to be purely divine in some part but then later says he has human aspects?
2016-09-20 08:06:42	<--	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has quit (Read error: Connection reset by peer)
2016-09-20 08:06:57	<--	roentgen (~roentgen@unaffiliated/roentgen) has quit (Ping timeout: 250 seconds)
2016-09-20 08:08:03	SpaceDanceCJ	hs_: Do you compare C++ with Universe divine plan? :-)
2016-09-20 08:08:06	-->	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has joined ##c++
2016-09-20 08:08:17	hs_	how can you compare one thing with itself?
2016-09-20 08:08:34	<--	sammyg (~sammyg@h-13-10.a485.priv.bahnhof.se) has quit (Read error: Connection reset by peer)
2016-09-20 08:09:00	w3z	apparently that was discussed yesterday too, the language varuiant enumerated struct or whatever they call it
2016-09-20 08:09:00	SpaceDanceCJ	Universe is certainly harmonious...
2016-09-20 08:09:34	w3z	it looked pretty far fetched to me
2016-09-20 08:10:22	w3z	http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0095r0.html
2016-09-20 08:10:30	<--	RebelCoder (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has quit (Ping timeout: 265 seconds)
2016-09-20 08:10:43	<--	metachr0n (~nobody@78.1.broadband13.iol.cz) has quit (Quit: WeeChat 1.5)
2016-09-20 08:11:00	w3z	enum union
2016-09-20 08:11:24	w3z	npaperbot: search language variant
2016-09-20 08:11:24	npaperbot	P0095R1: [Evolution] Pattern Matching and Language Variants <https://wg21.link/p0095r1> (by David Sankel) (2016-05-29)
2016-09-20 08:11:24	npaperbot	Also: P0095R0
2016-09-20 08:11:26	pragma-	SpaceDanceCJ: yes, I too can see the harmony in a giant petrel eating a penguin's intestines out of its butthole while it's still alive.
2016-09-20 08:11:42	King_DuckZ	hs_: if (&a == &a) ?
2016-09-20 08:11:43	hs_	Lenore, it is pretty easy to come up with something like:  variant_visitor([](type_a) { do_a(); }, [](type_b) { do_b(); }, [](auto) { /* catchall */ })(your_variant);
2016-09-20 08:12:06	hs_	although that does have some limitations when compared to the switch.. like early returns
2016-09-20 08:12:23	Lenore	true
2016-09-20 08:12:41	Lenore	it helps, although you have to make a new type for every name inside the variant
2016-09-20 08:12:48	w3z	the generic lambda visitor isnt good enough for your needs?
2016-09-20 08:12:48		[08:12]
2016-09-20 08:12:57	-->	KAHR-Alpha (~Alpha@AReims-652-1-187-168.w92-142.abo.wanadoo.fr) has joined ##c++
2016-09-20 08:13:18	w3z	visit([](auto a){},V);
2016-09-20 08:13:50	hs_	w3z, assuming you want to do something distinct for type_a and type_b while still providing a generic
2016-09-20 08:14:03	-->	roentgen (~roentgen@unaffiliated/roentgen) has joined ##c++
2016-09-20 08:14:08	hs_	Lenore, yeah the name of the member in the switch is ugly
2016-09-20 08:14:11	Lenore	it's mostly syntactic sweetener.  mostly.
2016-09-20 08:14:14	Eelis	you can also only do 1-level matching that way
2016-09-20 08:14:29	Eelis	can't have nested patterns
2016-09-20 08:14:32	 *	Lenore nods.
2016-09-20 08:14:39	w3z	well, you can dispatch from inside the lambda
2016-09-20 08:14:42	hs_	Eelis, yeah, and you end up with hierarchical visitors
2016-09-20 08:14:53	Lenore	pattern matching looks like it would make a lot of code patterns a lot easier to follow.
2016-09-20 08:15:06	hs_	I was working on something to re-apply a visitor in case it can be reapplied
2016-09-20 08:15:19	Eelis	Lenore: that's exactly what it already does in other languages
2016-09-20 08:15:25	Lenore	i'm going to poke around with first-class variants in one of the languages that supports them (not going to list them, this channel is about C++) and see how i feel after that.
2016-09-20 08:15:49	SpaceDanceCJ	hs_: I'm asking how WG21 risks to write monolithic standard with so many parts of language.
2016-09-20 08:15:59	Lenore	but at first look it feels like the same class as lambdas
2016-09-20 08:16:06	Lenore	in the sense of changing how you write code
2016-09-20 08:16:42	<--	King_Hual (~failed@unaffiliated/king-hual/x-1207580) has quit (Read error: Connection reset by peer)
2016-09-20 08:16:47	<--	viro (~viro@unaffiliated/viro) has quit (Ping timeout: 265 seconds)
2016-09-20 08:16:59	Lenore	some other languages also implement optionals as language variants, and then add a bunch of syntax to make them easier to work with.
2016-09-20 08:17:08	-->	King_Hual (~failed@unaffiliated/king-hual/x-1207580) has joined ##c++
2016-09-20 08:17:18	<--	symm- (~symm-@86.127.152.32) has quit (Ping timeout: 264 seconds)
2016-09-20 08:17:47	Eelis	SpaceDanceCJ: "how [it] risks to write"? do you have some alternative in mind?
2016-09-20 08:18:10	Eelis	if so, please rephrase your question as "why doesn't the committee do X?"
2016-09-20 08:18:14	SpaceDanceCJ	AI... :)
2016-09-20 08:18:15	Lenore	(i was sceptical of lambdas when i first saw C++11...  i was wrong.  oh so very wrong)
2016-09-20 08:18:34	w3z	{variant<int,string> V{0}; visit([](auto a){if constexpr(is_integral_v<decltype(a)>) f(a);},V); } void f(int){cout<<"wee";} void f(string){}
2016-09-20 08:18:35	geordi	wee
2016-09-20 08:18:39	<--	SpaceDanceCJ (~Sasha@178.121.99.186) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-09-20 08:18:41	Eelis	SpaceDanceCJ: your question is "why doesn't the committe use AI to write the standard?". if so, please leave the channel and go read about AI
2016-09-20 08:19:42	Lenore	w3z: that feels like writing OOP in C...  sure, we can do it, but it's clunky. :)
2016-09-20 08:19:58	-->	Kostenko_ (~Kostenko@bl14-204-63.dsl.telepac.pt) has joined ##c++
2016-09-20 08:20:12	-->	Threadnaught (5c0be626@gateway/web/freenode/ip.92.11.230.38) has joined ##c++
2016-09-20 08:20:20	w3z	did you see my runtime tuple lookup from last week, you definitely wont like it if that simple dispatch bugs you :)
2016-09-20 08:20:29	Threadnaught	is there a help channel or do I ask here?
2016-09-20 08:20:35	<--	bocaneri (~bocaneri@about/linux/staff/sauvin) has quit (Remote host closed the connection)
2016-09-20 08:20:49	Eelis	!give Threadnaught testcase
2016-09-20 08:20:50	nolyc	Threadnaught: A testcase is the _least_ amount of code that replicates your problem, paste it to http://coliru.stacked-crooked.com and give us the link. Do _not_ paste code to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
2016-09-20 08:21:00	w3z	http://melpon.org/wandbox/permlink/VfkVEjIM5k5uciBI
2016-09-20 08:21:25	Threadnaught	kk will do
2016-09-20 08:22:06	Lenore	i didn't say it bugs me.  i do type-dependent tricks way nastier than that in my own code.
2016-09-20 08:22:07	Lenore	just...
2016-09-20 08:22:11	<--	daniel-s (~daniel-s@bla31-1-82-241-231-138.fbx.proxad.net) has quit (Ping timeout: 265 seconds)
2016-09-20 08:22:17	Lenore	good, clean syntax makes easy to write, easy to maintain code.
2016-09-20 08:22:34	Lenore	also, if constexpr is really exciting.
2016-09-20 08:22:39	<--	Kostenko (~Kostenko@bl14-204-63.dsl.telepac.pt) has quit (Ping timeout: 276 seconds)
2016-09-20 08:22:43	w3z	i wonder if theres a case to be made for a std variant of the first 256 integral constants
2016-09-20 08:22:44	Lenore	i don't have it in a compiler yet.
2016-09-20 08:22:48	<--	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has quit (Quit: WeeChat 1.5)
2016-09-20 08:23:17	Eelis	w3z: sounds like you're confusing enums and variants
2016-09-20 08:23:28	-->	kilbith (4ee51c3e@gateway/web/cgi-irc/kiwiirc.com/ip.78.229.28.62) has joined ##c++
2016-09-20 08:23:50	<--	kilbith (4ee51c3e@gateway/web/cgi-irc/kiwiirc.com/ip.78.229.28.62) has left ##c++
2016-09-20 08:24:17	w3z	hmm, youre probably right, i couldve written that with an enum
2016-09-20 08:24:30	w3z	wait no
2016-09-20 08:24:43	<--	biberu (~biberu@c-cf2d72d5.08-441-7570702.cust.bredbandsbolaget.se) has quit (Ping timeout: 244 seconds)
2016-09-20 08:24:54	w3z	the value object wouldnt be a compile time integral
2016-09-20 08:25:13	<--	jamesaxl (~jamesaxl@176.98.129.195) has quit (Ping timeout: 248 seconds)
2016-09-20 08:25:27	Lenore	so...  with if constexpr, i know the syntax needs to be valid, but... am i right in understanding that it does no type-checking?  how does that work with ambiguous syntax cases?
2016-09-20 08:25:47	-->	jamesaxl (~jamesaxl@176.98.129.195) has joined ##c++
2016-09-20 08:26:12	w3z	what the variant bought me in that snippet was storring possible integral_constants
2016-09-20 08:26:31	<--	fahadash (uid44972@gateway/web/irccloud.com/x-znjselnbdvdpfhtc) has quit (Quit: Connection closed for inactivity)
2016-09-20 08:26:53	<--	InfoTest (~Thunderbi@tgn.149.26.66.dts.mg) has quit (Quit: InfoTest)
2016-09-20 08:26:56	Threadnaught	ok so this code: https://gist.github.com/anonymous/a96fc87347e9a43fe87c4062d44ae77a should create 17 zeroes, but instead its reading random crap out of memory
2016-09-20 08:26:56	Eelis	Lenore: there is precedent for code that is syntax-checked but not type-checked: bodies of function templates
2016-09-20 08:26:57	w3z	Lenore: example
2016-09-20 08:27:17	-->	tis_me (~duane@S0106602ad071a37a.ed.shawcable.net) has joined ##c++
2016-09-20 08:27:21	Lenore	Eelis: thank you, i think that answers all my questions.
2016-09-20 08:27:28	Lenore	i don't know how i didn't make that connection.
2016-09-20 08:27:59	Lenore	template bodies have a few tiny syntactic quirks to work around those, and i bet they're the same with if constexpr.
2016-09-20 08:27:59		[08:27]
2016-09-20 08:28:12	Lenore	... especially since the really interesting cases probably all take place in template bodies anyway
2016-09-20 08:28:19	-->	AkaiSora (~quassel@197.17.13.41) has joined ##c++
2016-09-20 08:28:25	w3z	so for the discarded branch in a dependent context, the expression doesnt even have to be available does it
2016-09-20 08:28:56	-->	P1RATEZ (piratez@unaffiliated/p1ratez) has joined ##c++
2016-09-20 08:29:30	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-20 08:29:53	Eelis	!give Threadnaught not a testcase
2016-09-20 08:29:54	nolyc	Threadnaught: Stop! A testcase must 0) be short (<=50 lines) 1) be self-contained and 2) reproduce the problem. Don't paste another link here until: I) you've pasted your testcase to http://coliru.stacked-crooked.com II) there are no irrelevant compile errors and III) it reproduces the problem. See the testcase checklist at http://eel.is/c++/testcase/
2016-09-20 08:29:55	w3z	{f<int>();} template<class T> void f() {if constexpr(!is_integral_v<T>) g();}
2016-09-20 08:29:55	geordi	error: there are no arguments to 'g' that depend on a template parameter, so a declaration of 'g' must be available
2016-09-20 08:30:09	w3z	i see
2016-09-20 08:30:49	Lenore	right...  that probably isn't as limiting as it looks...
2016-09-20 08:32:17	-->	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has joined ##c++
2016-09-20 08:32:48	w3z	i knew it did the checking in the non dependent case if constexpr(false) was hoping it didnt require g at all for the dependent case, oh well
2016-09-20 08:33:40	<--	blueness (~blueness@gentoo/developer/blueness) has quit (Quit: blueness)
2016-09-20 08:33:50	Eelis	the above is not the dependent case. the diagnostic is telling you that it isn't
2016-09-20 08:34:05	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Ping timeout: 260 seconds)
2016-09-20 08:34:24	w3z	k, the case wheer the if evaluation is dependent
2016-09-20 08:34:26	w3z	where
2016-09-20 08:34:57	-->	Enhex (~Enhex@82.252.138.77.rev.sfr.net) has joined ##c++
2016-09-20 08:35:06	<--	unK_ (~drunK@dynamic-78-8-159-26.ssp.dialog.net.pl) has quit (Quit: KVIrc 4.3.1 Aria http://www.kvirc.net/)
2016-09-20 08:35:07	Eelis	i don't see how the above is limiting
2016-09-20 08:35:17	-->	CuriousErnestBro (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has joined ##c++
2016-09-20 08:35:58	w3z	its not really, as long as g takes a T param, it can even be sfinae enabled for a specific type
2016-09-20 08:36:22	-->	symm- (~symm-@86.127.152.32) has joined ##c++
2016-09-20 08:36:26	-->	syem (~s@unaffiliated/syem) has joined ##c++
2016-09-20 08:36:56	-->	bumbar (~bumbar@unaffiliated/bumbar) has joined ##c++
2016-09-20 08:37:01	Lenore	i haven't played with it at all yet.  excited to, though.
2016-09-20 08:37:18	Lenore	it looks limiting on the surface but i can't think of a single example where it is in practice.
2016-09-20 08:38:10	Eelis	i guess it's "limiting" if one thought constexpr-if was for doing e.g.     if constexpr (using_posix) { posix_api_func(...); } else if constexpr (using_windows) { windows_api_func(...); }
2016-09-20 08:38:14	Eelis	but that's not what it's for
2016-09-20 08:38:56	-->	nwkj86 (~nwkj86@144.66.6.51.dyn.plus.net) has joined ##c++
2016-09-20 08:39:17	w3z	its limiting where g isnt a template function and you dont want to provide an empty declaration for non targetted cases
2016-09-20 08:39:27	<--	myhau (~myhau@89-64-1-66.dynamic.chello.pl) has quit (Read error: Connection reset by peer)
2016-09-20 08:39:34	-->	AbleBacon (~AbleBacon@unaffiliated/ablebacon) has joined ##c++
2016-09-20 08:39:37	Eelis	"non-targeted cases"?? testcase bitte
2016-09-20 08:40:22	<--	riemann (~riemann@ip-222-209.ists.pl) has quit (Ping timeout: 255 seconds)
2016-09-20 08:40:47	Lenore	right, constexpr-if is for metaprogramming, not replacing #ifdef :)
2016-09-20 08:41:18	w3z	{f("like this"s);} template<class T> void f(T t) {if constexpr(is_integral_v<T>) g(t);} void g(int){}
2016-09-20 08:41:19	geordi	<no output>
2016-09-20 08:41:22	w3z	hmm
2016-09-20 08:41:30	w3z	:)
2016-09-20 08:41:48	Eelis	that expression is still dependent. it's not just about g
2016-09-20 08:42:02	Eelis	read the definition of dependent. it's enlightening
2016-09-20 08:42:26	w3z	hah, i have to now :)
2016-09-20 08:42:31	<--	h4k1m (83e3a56b@gateway/web/freenode/ip.131.227.165.107) has quit (Quit: Page closed)
2016-09-20 08:42:34	Lenore	what section is that in?  *is looking*
2016-09-20 08:42:48	Eelis	the diagnostic even hinted at it: "there are no arguments to 'g' that depend on a template parameter, so ..."
2016-09-20 08:42:50	Lenore	type-dependent expressions?
2016-09-20 08:42:57	Lenore	14.6.2.2
2016-09-20 08:43:03	-->	riemann (~riemann@ip-222-209.ists.pl) has joined ##c++
2016-09-20 08:43:03		[08:43]
2016-09-20 08:43:04	<--	mfc (~mfc@unaffiliated/mfc) has quit (Ping timeout: 255 seconds)
2016-09-20 08:43:09	-->	biberu (~biberu@c-cf2d72d5.08-441-7570702.cust.bredbandsbolaget.se) has joined ##c++
2016-09-20 08:43:11	-->	snibod (~snibod@ip-94-42-61-30.multimo.pl) has joined ##c++
2016-09-20 08:43:15	-->	tocka (~tocka@78-56-107-170.static.zebra.lt) has joined ##c++
2016-09-20 08:43:19	-->	qaxj (~qaxj@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has joined ##c++
2016-09-20 08:43:39	<--	qaxj (~qaxj@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-20 08:43:54	-->	apef (~apef@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has joined ##c++
2016-09-20 08:44:04	Eelis	yep http://eel.is/c++draft/temp.dep.expr
2016-09-20 08:44:17	<--	mackal (~mike@pool-96-237-144-12.bstnma.fios.verizon.net) has quit (Quit: BE VIGILANT.)
2016-09-20 08:44:19	<--	apef (~apef@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-20 08:44:39	Lenore	exactly what i'm already reading, thanks :)
2016-09-20 08:44:46	-->	oaz (~oaz@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has joined ##c++
2016-09-20 08:44:50	Lenore	really appreciate having the standard in html
2016-09-20 08:44:52	<--	ezzieyguywuf (~wolfie@unaffiliated/ezzieyguywuf) has quit (Ping timeout: 244 seconds)
2016-09-20 08:45:02	<--	oaz (~oaz@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-20 08:45:03	<--	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has quit (Ping timeout: 240 seconds)
2016-09-20 08:45:12	Eelis	yes, the link wasn't to point you to something else, but to give channel denizens easy access
2016-09-20 08:45:18	-->	qciu (~qciu@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has joined ##c++
2016-09-20 08:45:40	<--	qciu (~qciu@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-20 08:45:40	 *	Lenore nods.
2016-09-20 08:46:00	Lenore	that... really makes most things you'd put inside a constexpr-if type-dependent.
2016-09-20 08:46:05	-->	dgmi (~dgmi@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has joined ##c++
2016-09-20 08:46:23	Eelis	and most things you put in function template bodies generally
2016-09-20 08:46:23	<--	codercodi (~codercodi@108-192-148-40.lightspeed.gnvlsc.sbcglobal.net) has quit (Read error: Connection reset by peer)
2016-09-20 08:46:24	<--	dgmi (~dgmi@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-20 08:46:28	 *	Lenore nods.
2016-09-20 08:46:35	-->	sanct (~sanct@212.35.67.11) has joined ##c++
2016-09-20 08:47:11	-->	Najo (~Najo@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has joined ##c++
2016-09-20 08:47:36	<--	Najo (~Najo@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-20 08:47:43	<--	ghsk (~dmitri@public-245-189.nat.utoronto.ca) has quit (Quit: leaving)
2016-09-20 08:48:06	-->	Jou (~Jou@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has joined ##c++
2016-09-20 08:48:29	<--	Jou (~Jou@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-20 08:48:48	-->	feoo (~feoo@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has joined ##c++
2016-09-20 08:48:54	Eelis	the sister sections about dependent names and dependent types are of course also relevant
2016-09-20 08:49:11	<--	feoo (~feoo@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-20 08:49:48	-->	rccii (~rccii@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has joined ##c++
2016-09-20 08:50:06	-->	crustywang (~crustywan@cog-216.dynamic2.rpi.edu) has joined ##c++
2016-09-20 08:50:11	<--	rccii (~rccii@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-20 08:50:29	-->	Hfpk (~Hfpk@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has joined ##c++
2016-09-20 08:51:18	<--	alexarnaud (~alexarnau@fsf/member/alexarnaud) has quit (Quit: Leaving.)
2016-09-20 08:51:23	Lenore	after reading that, i wonder if it's even possible to construct a case where constexpr-if doesn't do what we want (excluding using it as #ifdef).
2016-09-20 08:51:24	<--	Hfpk (~Hfpk@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-20 08:51:33	<--	crustywang (~crustywan@cog-216.dynamic2.rpi.edu) has quit (Quit: leaving)
2016-09-20 08:51:41	-->	Qox (~Qox@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has joined ##c++
2016-09-20 08:51:42	Eelis	that's why i said i don't see how it's limiting apart from that example
2016-09-20 08:51:53	-->	ezzieyguywuf (~wolfie@unaffiliated/ezzieyguywuf) has joined ##c++
2016-09-20 08:53:13	V-ille	if constexpr always does what I want
2016-09-20 08:53:53	V-ille	whether it's possible to construct some weird cases with it is rather secondary to me
2016-09-20 08:53:56	-->	decimad (~deci@ip5f5be505.dynamic.kabel-deutschland.de) has joined ##c++
2016-09-20 08:54:09	<--	f10 (~flo@2001:470:52af:1:1883:b70e:19db:f1db) has quit (Remote host closed the connection)
2016-09-20 08:54:33	<--	re1 (~reiser@178.220.4.176) has quit (Quit: Leaving)
2016-09-20 08:55:01	-->	re1 (~reiser@178.220.4.176) has joined ##c++
2016-09-20 08:55:16	Lenore	i haven't used it, so i can't say if it always does what i want.  it looks like it, though.
2016-09-20 08:55:22	w3z	i dont see (yet) where it says that the selection statement or substatement is dependent (not going to be in temp.dep.expr anyway), but it obviously is from the above
2016-09-20 08:55:55	Lenore	w3z: isn't g(t) dependent, because of the subexpression t?
2016-09-20 08:56:00	w3z	those crtp binding examples are awful (in that i may have missed them if i hadnt just read it)
2016-09-20 08:56:13	-->	daniel-s (~daniel-s@bla31-1-82-241-231-138.fbx.proxad.net) has joined ##c++
2016-09-20 08:56:19	Eelis	yes, the fact that g(t) is dependent is unrelated to its appearance in a specific kind of statement
2016-09-20 08:56:24	-->	navidr (uid112413@gateway/web/irccloud.com/x-fzumgbqjryjzeppb) has joined ##c++
2016-09-20 08:56:27	<--	Threadnaught (5c0be626@gateway/web/freenode/ip.92.11.230.38) has quit (Quit: Page closed)
2016-09-20 08:56:30	w3z	in the g(t) case, yes, in the g() case eh
2016-09-20 08:56:57	w3z	but we determined that g() wasnt dependent
2016-09-20 08:57:08	Eelis	g() was non-dependent, and that too is unrelated to its apperance in a specific kind of statement
2016-09-20 08:57:11	Lenore	w3z: but can you construct a case where g() not being dependent actually matters?
2016-09-20 08:58:07	<--	YungRaj (~YungRaj@nat-165-91-12-142.tamulink.tamu.edu) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-20 08:58:07		[08:58]
2016-09-20 08:58:47	-->	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has joined ##c++
2016-09-20 08:58:51	w3z	just the trivial one i first gave, say void g(){cout<<"not an int";}
2016-09-20 08:59:27	Eelis	if you define that g, then you have a g, and there is no problem
2016-09-20 08:59:28	<--	Jesin (~Jesin@pool-108-28-56-201.washdc.fios.verizon.net) has quit (Quit: Leaving)
2016-09-20 08:59:54	w3z	argh true
2016-09-20 08:59:55	<--	Elirips (~Elirips@84-74-149-15.dclient.hispeed.ch) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2016-09-20 09:01:02	<--	SweetPear (uid144596@gateway/web/irccloud.com/x-keaowyphhvculfkb) has quit (Quit: Connection closed for inactivity)
2016-09-20 09:01:48	<--	Qox (~Qox@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has quit (Remote host closed the connection)
2016-09-20 09:03:30	-->	MrFlibble (~Flibble@90.196.207.27) has joined ##c++
2016-09-20 09:03:31	-->	Pcv (~Pcv@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has joined ##c++
2016-09-20 09:03:49	<--	Pcv (~Pcv@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-20 09:04:24	-->	Queu (~Queu@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has joined ##c++
2016-09-20 09:04:43	<--	Queu (~Queu@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-20 09:05:00	<--	daniel-s (~daniel-s@bla31-1-82-241-231-138.fbx.proxad.net) has quit (Ping timeout: 260 seconds)
2016-09-20 09:05:31	-->	Nchc (~Nchc@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has joined ##c++
2016-09-20 09:05:57	<--	Nchc (~Nchc@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-20 09:06:02	w3z	i concede, i cant think of a scenario where a non dependent g wouldnt be declared and yet used in a constexpr if
2016-09-20 09:06:25	Eelis	apart from the #if use case
2016-09-20 09:06:48	-->	uokm (~uokm@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has joined ##c++
2016-09-20 09:07:12	<--	MrFlibble (~Flibble@90.196.207.27) has left ##c++
2016-09-20 09:07:13	<--	uokm (~uokm@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-20 09:07:36	-->	Owub (~Owub@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has joined ##c++
2016-09-20 09:07:38	w3z	which constexpr if is not a replacement for (not static if)
2016-09-20 09:07:52	Eelis	indeed
2016-09-20 09:07:52	Lenore	that was my conclusion, as well.
2016-09-20 09:08:06	Eelis	glad to hear everyone has converged to my conclusion
2016-09-20 09:08:10	-->	f10 (~flo@2001:470:52af:1:59b:9657:6ac8:c864) has joined ##c++
2016-09-20 09:08:26	<--	Owub (~Owub@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has quit (Remote host closed the connection)
2016-09-20 09:08:37	-->	Limona (~Origin@BSN-142-59-105.dynamic.siol.net) has joined ##c++
2016-09-20 09:08:49	Murii	anyone here using/used physfs?
2016-09-20 09:08:59	<--	araml (~araml@unaffiliated/araml) has quit (Quit: WeeChat 1.4)
2016-09-20 09:09:00	w3z	cant argue with the truth :)
2016-09-20 09:09:09	-->	xnavor (~xnavor@78-70-4-240-no171.business.telia.com) has joined ##c++
2016-09-20 09:09:15	Limona	hey guys
2016-09-20 09:09:21	Limona	can someone tell me why http://pastebin.com/CqSeu7iw doesn't seem to work
2016-09-20 09:09:22	-->	zero_byte (~zer0@ip-89-103-110-138.net.upcbroadband.cz) has joined ##c++
2016-09-20 09:09:28	Limona	it appears re(">(.*)<"); is the problem
2016-09-20 09:09:37	-->	Jesin (~Jesin@pool-108-28-56-201.washdc.fios.verizon.net) has joined ##c++
2016-09-20 09:09:43	m_ben	!give Murii general
2016-09-20 09:09:44	nolyc	Murii: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2016-09-20 09:10:01	M-ou-se	Limona: make a test-case on melpon.org/wandbox or ideone.com or similar site
2016-09-20 09:10:05	-->	Wahp (~Wahp@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has joined ##c++
2016-09-20 09:10:22	Eelis	m_ben: this channel is fine for problems encountered while using stdlib facilities
2016-09-20 09:10:33	-->	Cinux` (~Cinux`@109.190.24.179) has joined ##c++
2016-09-20 09:10:57	<--	Wahp (~Wahp@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-20 09:11:01	<--	nopnopnop (~nope@138.197.143.202) has quit (Quit: leaving)
2016-09-20 09:11:12	Eelis	so don't refer people asking such questions to a noisy channel about non-C++ things
2016-09-20 09:11:25	-->	nopnopnop (~nope@138.197.143.202) has joined ##c++
2016-09-20 09:11:26	-->	Vincent7 (~NoIdent@dslb-088-077-121-042.088.077.pools.vodafone-ip.de) has joined ##c++
2016-09-20 09:11:38	<--	tis_me (~duane@S0106602ad071a37a.ed.shawcable.net) has quit (Quit: Leaving)
2016-09-20 09:11:38	m_ben	Eelis: wtf? general is for libraries. he asked about a library
2016-09-20 09:11:56	Eelis	oh, i confused Murii with Limona, sorry
2016-09-20 09:12:24	<--	cpt-oblivious (~quassel@mail.indylix.nl) has quit (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
2016-09-20 09:12:24	Limona	Well it seems to work if my regex is (.*)
2016-09-20 09:12:34	Limona	but not the >(.*)<
2016-09-20 09:12:41	Eelis	!give Limona not a testcase
2016-09-20 09:12:42	nolyc	Limona: Stop! A testcase must 0) be short (<=50 lines) 1) be self-contained and 2) reproduce the problem. Don't paste another link here until: I) you've pasted your testcase to http://coliru.stacked-crooked.com II) there are no irrelevant compile errors and III) it reproduces the problem. See the testcase checklist at http://eel.is/c++/testcase/
2016-09-20 09:13:07	-->	cpt-oblivious (~quassel@freebsd/user/cpt-oblivious) has joined ##c++
2016-09-20 09:13:07		[09:13]
2016-09-20 09:13:50	<--	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has quit (Remote host closed the connection)
2016-09-20 09:14:07	-->	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has joined ##c++
2016-09-20 09:14:38	<--	riemann (~riemann@ip-222-209.ists.pl) has quit (Quit: Leaving)
2016-09-20 09:16:16	<--	Cppg2 (~Cppg@host109-149-152-50.range109-149.btcentralplus.com) has quit (Quit: Nettalk6 - www.ntalk.de)
2016-09-20 09:17:04	-->	mfc (~mfc@unaffiliated/mfc) has joined ##c++
2016-09-20 09:17:05	<--	skweek (~skweek@68-200-146-225.res.bhn.net) has quit (Ping timeout: 240 seconds)
2016-09-20 09:17:42	-->	blueness (~blueness@gentoo/developer/blueness) has joined ##c++
2016-09-20 09:18:13	-->	thatonedude (458889fd@gateway/web/freenode/ip.69.136.137.253) has joined ##c++
2016-09-20 09:18:15	<--	rendar (~I@95.239.179.96) has quit (Ping timeout: 265 seconds)
2016-09-20 09:18:34	Limona	http://melpon.org/wandbox/permlink/MvOuTDFjovkiUPFn
2016-09-20 09:19:33	<--	thatonedude (458889fd@gateway/web/freenode/ip.69.136.137.253) has quit (Client Quit)
2016-09-20 09:20:11	-->	iamspeshal (458889fd@gateway/web/freenode/ip.69.136.137.253) has joined ##c++
2016-09-20 09:21:06	<--	iamspeshal (458889fd@gateway/web/freenode/ip.69.136.137.253) has quit (Client Quit)
2016-09-20 09:21:36	-->	Cppg (~Cppg@host109-149-152-50.range109-149.btcentralplus.com) has joined ##c++
2016-09-20 09:21:37	-->	francis3612_ (~francis@136.159.49.118) has joined ##c++
2016-09-20 09:21:52	-->	neurrowcat (~neurrowca@h-70-243.a163.priv.bahnhof.se) has joined ##c++
2016-09-20 09:22:07	-->	BaneAliens (uid112512@gateway/web/irccloud.com/x-jeghfhykblifmukg) has joined ##c++
2016-09-20 09:23:10	<--	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has quit (Quit: This computer has gone to sleep)
2016-09-20 09:23:33	-->	ike11 (~textual@23-29-46-237.static.kc.surewest.net) has joined ##c++
2016-09-20 09:23:36	-->	daniel-s (~daniel-s@bla31-1-82-241-231-138.fbx.proxad.net) has joined ##c++
2016-09-20 09:23:59	<--	reveredge (~reveredge@111.119.209.219) has quit (Ping timeout: 272 seconds)
2016-09-20 09:25:03	w3z	misread the case, it wasnt crtp, but still surprising (less so)
2016-09-20 09:25:10	w3z	<<TYPE(&D<void>::m); using X=double; template<class> struct B{using X=int;}; template<class T> struct D:B<T>{X m;};
2016-09-20 09:25:10	geordi	prvalue double D<void>::*
2016-09-20 09:25:21	-->	Meszias (~quassel@2804:7f1:2080:2112:a4a6:bad4:8fe2:afe3) has joined ##c++
2016-09-20 09:25:39	mads-	I want to read a binary into a vector<unsigned char>. Isn't there a nicer way to do it than this? I know the example I provided isn't really reading into a vector, but I still find it rather ugly. http://ideone.com/fqBf2A
2016-09-20 09:26:06	Limona	use std binary?
2016-09-20 09:26:08	w3z	<<TYPE(&D<void>::m); using X=double; template<class> struct B{using X=int;}; template<class T> struct D:B<T>{typename B<T>::X m;};
2016-09-20 09:26:09	geordi	prvalue int D<void>::*
2016-09-20 09:26:24	<--	syem (~s@unaffiliated/syem) has quit (Quit: leaving)
2016-09-20 09:26:47	Eelis	Limona: regex_search
2016-09-20 09:27:10	-->	iamspeshal (458889fd@gateway/web/freenode/ip.69.136.137.253) has joined ##c++
2016-09-20 09:27:20	Limona	thx
2016-09-20 09:27:21	w3z	mads you need a c++ book
2016-09-20 09:27:23	<--	Nilesh_ (uid116340@gateway/web/irccloud.com/x-ytqsznkneieeacvk) has quit (Quit: Connection closed for inactivity)
2016-09-20 09:27:25	iamspeshal	.
2016-09-20 09:27:47	iamspeshal	Hi, can i get help here with code? or is that some other chatroom
2016-09-20 09:28:25	Eelis	!give iamspeshal testcase
2016-09-20 09:28:25		[09:28]
2016-09-20 09:28:27	nolyc	iamspeshal: A testcase is the _least_ amount of code that replicates your problem, paste it to http://coliru.stacked-crooked.com and give us the link. Do _not_ paste code to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
2016-09-20 09:28:40	mads-	w3z: Which could have an example of this?
2016-09-20 09:30:02	Eelis	{ ifstream f(__FILE__, ios::binary); istreambuf_iterator<char> i(f), e; cout << escape(string(i, e)); } // mads-
2016-09-20 09:30:03	<--	tachokni_ (~tachoknig@c-73-246-129-13.hsd1.il.comcast.net) has quit (Ping timeout: 240 seconds)
2016-09-20 09:30:04	geordi	"#if !defined(GEORDI_PRELUDE) && !defined(__clang__)\n#define GEORDI_PRELUDE\n#include \"prelude-1z.hpp\"\n#endif\nusing namespace std;\n // mads-\n\nint main(int argc, char * argv[]){ ifstream f(__FILE__, ios::binary); istreambuf_iterator<char> i(f), e; cout << escape(string(i, e)); }\n"
2016-09-20 09:30:27	<--	SHC (~quassel@43.239.245.200) has quit (Read error: Connection reset by peer)
2016-09-20 09:30:36	Eelis	for a vector<unsigned char>, say vector<unsigned char>(i, e)
2016-09-20 09:30:51	mads-	Eelis: ty
2016-09-20 09:31:16	-->	tachoknight__ (~tachoknig@c-73-246-129-13.hsd1.il.comcast.net) has joined ##c++
2016-09-20 09:31:22	w3z	{ifstream F("challenge.bin",ios::binary|ios::in); vector<char> V{istreambuf_iterator<char>{F},istreambuf_iterator<char>{}};}
2016-09-20 09:31:23	geordi	<no output>
2016-09-20 09:31:47	Eelis	ifstream always does in, no need for ios::in
2016-09-20 09:32:16	w3z	if you obliterate the flags with binary,  doesnt it require restating?
2016-09-20 09:32:31	Eelis	no
2016-09-20 09:32:54	w3z	k, i learned that garbage from old vc
2016-09-20 09:32:59	Limona	Eelis std::regex_search': no matching overloaded function found
2016-09-20 09:33:01	Limona	how does it work 0o
2016-09-20 09:33:15	Eelis	Limona: testcase
2016-09-20 09:33:37	<--	blackwind_123 (~IceChat9@117.192.133.113) has quit (Quit: Easy as 3.14159265358979323846...)
2016-09-20 09:33:40	Eelis	testcase + show on cppreference which overload you intend to call
2016-09-20 09:33:42	w3z	mads-: try accelerated c++ if theres an updated version
2016-09-20 09:33:52	w3z	!book
2016-09-20 09:33:53	nolyc	A nice C++ book guide and list can be found at http://stackoverflow.com/q/388242/1090079
2016-09-20 09:34:16	<--	glad (~quassel@dynamic-vpdn-93-125-63-166.telecom.by) has quit (Remote host closed the connection)
2016-09-20 09:36:01	-->	reveredge (~reveredge@115.110.126.75) has joined ##c++
2016-09-20 09:36:27	<--	Cinux` (~Cinux`@109.190.24.179) has quit (Quit: Lost terminal)
2016-09-20 09:38:21	<--	reveredge (~reveredge@115.110.126.75) has quit (Max SendQ exceeded)
2016-09-20 09:38:45	-->	reveredge (~reveredge@115.110.126.75) has joined ##c++
2016-09-20 09:39:04	<--	mfc (~mfc@unaffiliated/mfc) has quit (Read error: Connection reset by peer)
2016-09-20 09:40:18	-->	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has joined ##c++
2016-09-20 09:40:49	<--	bx2 (~bx2@46.140.123.246) has quit (Remote host closed the connection)
2016-09-20 09:41:03	-->	mfc (~mfc@unaffiliated/mfc) has joined ##c++
2016-09-20 09:42:03	<--	daniel-s (~daniel-s@bla31-1-82-241-231-138.fbx.proxad.net) has quit (Ping timeout: 240 seconds)
2016-09-20 09:42:37	<--	Circuitsoft (4b92a52d@gateway/web/freenode/ip.75.146.165.45) has quit (Quit: Page closed)
2016-09-20 09:42:40	-->	JoshS (~jshjsh@mc00536d0.tmodns.net) has joined ##c++
2016-09-20 09:43:51	-->	daniel-s (~daniel-s@bla31-1-82-241-231-138.fbx.proxad.net) has joined ##c++
2016-09-20 09:43:51		[09:43]
2016-09-20 09:45:26	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 09:45:53	<--	corto (~simon@modemcable254.232-82-70.mc.videotron.ca) has quit (Quit: Leaving)
2016-09-20 09:46:09	<--	francis3612_ (~francis@136.159.49.118) has quit (Ping timeout: 272 seconds)
2016-09-20 09:47:05	<--	SteffanW (~steffanw@ip4da40774.direct-adsl.nl) has quit (Read error: Connection reset by peer)
2016-09-20 09:47:19	--	``w`^``6^ is now known as aceahmedmoh
2016-09-20 09:47:54	--	``w`^`88`^ is now known as bob
2016-09-20 09:47:57	--	bob is now known as wolf_1
2016-09-20 09:48:05	-->	rendar (~I@95.239.179.96) has joined ##c++
2016-09-20 09:48:22	<--	swnc (~swnc@port-92-204-76-157.dynamic.qsc.de) has quit (Remote host closed the connection)
2016-09-20 09:48:26	-->	kofman (~kofman@198-27-128-168.static.sonic.net) has joined ##c++
2016-09-20 09:48:56	<--	Zunino (~Zunino@201.49.127.2) has quit (Ping timeout: 244 seconds)
2016-09-20 09:49:21	-->	Vingador (~quassel@177.135.26.41) has joined ##c++
2016-09-20 09:49:34	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 240 seconds)
2016-09-20 09:49:40	<--	mfc (~mfc@unaffiliated/mfc) has quit (Read error: Connection reset by peer)
2016-09-20 09:50:59	-->	francis3612_ (~francis@136.159.49.118) has joined ##c++
2016-09-20 09:51:00	-->	mfc (~mfc@unaffiliated/mfc) has joined ##c++
2016-09-20 09:51:34	-->	jaafar (~quassel@50-206-78-205-static.hfc.comcastbusiness.net) has joined ##c++
2016-09-20 09:51:34	<--	ike11 (~textual@23-29-46-237.static.kc.surewest.net) has quit (Read error: Connection reset by peer)
2016-09-20 09:52:34	<--	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has quit (Quit: deeb)
2016-09-20 09:53:23	-->	swnc (~swnc@port-92-204-76-157.dynamic.qsc.de) has joined ##c++
2016-09-20 09:54:37	<--	nilg (~user@77.70.2.229) has quit (Remote host closed the connection)
2016-09-20 09:55:08	-->	coventry` (~user@192.64.64.26) has joined ##c++
2016-09-20 09:55:19	<--	UnlikeSuika_mobi (~UnlikeSui@147.46.113.63) has quit (Ping timeout: 244 seconds)
2016-09-20 09:55:45	<--	mfc (~mfc@unaffiliated/mfc) has quit (Client Quit)
2016-09-20 09:56:14	-->	allen29 (~all@unaffiliated/allen29) has joined ##c++
2016-09-20 09:56:23	<--	snibod (~snibod@ip-94-42-61-30.multimo.pl) has quit (Ping timeout: 265 seconds)
2016-09-20 09:57:10	--	Guest64687 is now known as alamar
2016-09-20 09:57:30	-->	KNRO_ (~quassel@94.187.209.247) has joined ##c++
2016-09-20 09:58:26	iamspeshal	So for this: http://coliru.stacked-crooked.com/a/8745c5fc863897a3 line 39 I can not seem to get it to grab the right digits after the first four. It is suppose to spell a word out with ASCII.
2016-09-20 09:58:28	<--	francis3612_ (~francis@136.159.49.118) has quit (Quit: francis3612_)
2016-09-20 09:58:33	-->	soulisson (~soulisson@unaffiliated/soulisson) has joined ##c++
2016-09-20 09:58:54	<--	soulisson (~soulisson@unaffiliated/soulisson) has left ##c++ ("Quitte")
2016-09-20 09:58:54		[09:58]
2016-09-20 09:59:06	-->	soulisson (~soulisson@unaffiliated/soulisson) has joined ##c++
2016-09-20 09:59:46	<--	pheenx (~pheenx@2a02:8071:b68a:1c00:225:22ff:fee7:7dc5) has quit (Ping timeout: 265 seconds)
2016-09-20 09:59:54	iamspeshal	I'm new, so i am not sure if i am using the wrong string cutter upper(?) or if i am using it wrong
2016-09-20 10:00:00	-->	logosftw (~O@91.214.169.69) has joined ##c++
2016-09-20 10:00:11	soulisson	Hi, I asked a question about this in #c++-basic but there is not much activity there, any chance I can ask it here
2016-09-20 10:00:18	<--	sag3 (~O@91.214.169.69) has quit (Read error: Connection reset by peer)
2016-09-20 10:00:30	<--	Vingador (~quassel@177.135.26.41) has quit (Ping timeout: 264 seconds)
2016-09-20 10:00:38	<--	kw01f (~kw01f@pD9FB1E37.dip0.t-ipconnect.de) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-09-20 10:00:45	-->	bx2 (~bx2@46.140.123.246) has joined ##c++
2016-09-20 10:01:19	-->	biglama (~Day_dream@ram31-1-82-234-77-18.fbx.proxad.net) has joined ##c++
2016-09-20 10:01:26	-->	Jonbo (~Jonbo123@24-179-42-178.dhcp.leds.al.charter.com) has joined ##c++
2016-09-20 10:01:35	<--	wnklmnn (~pascal@p4FEF608C.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2016-09-20 10:03:09	<--	jonbo_ (~Jonbo123@24-179-42-178.dhcp.leds.al.charter.com) has quit (Ping timeout: 265 seconds)
2016-09-20 10:03:19	-->	clynamen (~clynamen@2-238-72-61.ip242.fastwebnet.it) has joined ##c++
2016-09-20 10:03:23	iamspeshal	Anyone able to help me out?
2016-09-20 10:04:13	-->	Zunino (~Zunino@177.96.163.99) has joined ##c++
2016-09-20 10:04:50	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-20 10:05:17	<--	bx2 (~bx2@46.140.123.246) has quit (Ping timeout: 250 seconds)
2016-09-20 10:05:26	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Client Quit)
2016-09-20 10:06:38	-->	nilg (~user@77.70.2.229) has joined ##c++
2016-09-20 10:07:50	-->	callq (931a67a9@gateway/web/freenode/ip.147.26.103.169) has joined ##c++
2016-09-20 10:07:52	<--	deekej (deekej@nat/redhat/x-ynjuerzdurodebte) has quit (Remote host closed the connection)
2016-09-20 10:08:06	-->	Karyon (~yaaic@unaffiliated/karyon) has joined ##c++
2016-09-20 10:08:44	<--	RubberDog (~GodsDecei@p508350EE.dip0.t-ipconnect.de) has quit (Quit: A TLS packet with unexpected length was received.)
2016-09-20 10:08:46	-->	kaleid0 (~kaleid0@255.sub-174-219-6.myvzw.com) has joined ##c++
2016-09-20 10:10:21	<--	callq (931a67a9@gateway/web/freenode/ip.147.26.103.169) has quit (Client Quit)
2016-09-20 10:10:42	<--	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has quit (Ping timeout: 264 seconds)
2016-09-20 10:11:17	<--	RajRajRaj (uid72176@gateway/web/irccloud.com/x-oriwpsecdftsgniv) has quit (Quit: Connection closed for inactivity)
2016-09-20 10:11:21	<--	Munnu (~timo@91-158-145-247.elisa-laajakaista.fi) has quit (Quit: Follow the white rabbit. Compile the desert of the real. 3301.)
2016-09-20 10:12:30	<--	sanct (~sanct@212.35.67.11) has quit (Ping timeout: 276 seconds)
2016-09-20 10:12:54	<--	Limona (~Origin@BSN-142-59-105.dynamic.siol.net) has quit (Read error: Connection reset by peer)
2016-09-20 10:13:21	iamspeshal	If I call a part of a string array, with a number from an array of ints, what is suppose to happen? It is suppose to call that part of the array right?
2016-09-20 10:14:21	-->	RoKenn (~RoKenn@2001:a61:2255:c301:75a0:e903:b5a7:69b1) has joined ##c++
2016-09-20 10:14:21		[10:14]
2016-09-20 10:14:43	symm-	"call"?
2016-09-20 10:14:54	<--	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has quit (Ping timeout: 264 seconds)
2016-09-20 10:14:55	iamspeshal	Terminology?
2016-09-20 10:15:07	iamspeshal	retreive?
2016-09-20 10:15:14	symm-	you mean, call a member function?
2016-09-20 10:15:43	-->	karab44 (~karab44@unaffiliated/karab44) has joined ##c++
2016-09-20 10:15:44	-->	lolek (~lolek@unaffiliated/marcin) has joined ##c++
2016-09-20 10:15:49	<--	lolek (~lolek@unaffiliated/marcin) has left ##c++
2016-09-20 10:15:58	iamspeshal	yeah
2016-09-20 10:16:32	megaTherion	define string array?
2016-09-20 10:16:48	-->	mfc (~mfc@unaffiliated/mfc) has joined ##c++
2016-09-20 10:16:49	megaTherion	std::array< std::string, N >?
2016-09-20 10:16:49	<--	mfc (~mfc@unaffiliated/mfc) has quit (Read error: Connection reset by peer)
2016-09-20 10:16:50	iamspeshal	Err wait, the problem is a out of range error
2016-09-20 10:17:04	-->	afiefh (~afiefh@31.210.188.33) has joined ##c++
2016-09-20 10:17:12	megaTherion	then dont get out of range
2016-09-20 10:17:13	<--	daniel-s (~daniel-s@bla31-1-82-241-231-138.fbx.proxad.net) has quit (Read error: Connection reset by peer)
2016-09-20 10:17:14	iamspeshal	more like, stringarray[intarray[i]]
2016-09-20 10:17:23	megaTherion	uhh
2016-09-20 10:17:38	iamspeshal	I mean, my code looks like it shouldnt go out of range, it looks like plenty of range
2016-09-20 10:17:40	-->	wnklmnn (~pascal@p4FEF74F9.dip0.t-ipconnect.de) has joined ##c++
2016-09-20 10:17:46	iamspeshal	it has plenty*
2016-09-20 10:17:49	megaTherion	plenty of range :D
2016-09-20 10:17:54	megaTherion	sounds nice
2016-09-20 10:17:59	<--	jamesaxl (~jamesaxl@176.98.129.195) has quit (Quit: Leaving)
2016-09-20 10:18:00	megaTherion	get some range
2016-09-20 10:18:08	megaTherion	where is your code?
2016-09-20 10:18:13	iamspeshal	Wanna reveiw my code to get me more range?
2016-09-20 10:18:19	megaTherion	moah range baby
2016-09-20 10:19:51	-->	tadaa (~tadaaa@nat-wh-wz4-12.rz.uni-karlsruhe.de) has joined ##c++
2016-09-20 10:20:05	iamspeshal	http://coliru.stacked-crooked.com/a/8a116afd6614466d making j higher gives the error, but the manhattan array is larger than 6 if i can count right
2016-09-20 10:20:34	<--	scai (~scai@p4FF0FC1A.dip0.t-ipconnect.de) has left ##c++ ("[IRSSI]")
2016-09-20 10:20:46	<--	logosftw (~O@91.214.169.69) has quit (Quit: ZNC - http://znc.in)
2016-09-20 10:21:03	megaTherion	this looks too Cish for me :p
2016-09-20 10:21:06	-->	sag3 (~O@91.214.169.69) has joined ##c++
2016-09-20 10:21:11	iamspeshal	cish?
2016-09-20 10:21:21	iamspeshal	I am noob what is cish?
2016-09-20 10:21:26	megaTherion	Cish is like C-ish
2016-09-20 10:21:29	megaTherion	like C code
2016-09-20 10:21:34	iamspeshal	oh haha
2016-09-20 10:21:57	iamspeshal	I am not up to objects and such yet
2016-09-20 10:22:08	megaTherion	not talkin 'bout objects
2016-09-20 10:22:44	-->	snover (~Adium@unaffiliated/snover) has joined ##c++
2016-09-20 10:22:51	ubsan	objects are like, the least C++-ish part of C++
2016-09-20 10:22:58	megaTherion	(and C has objects)
2016-09-20 10:23:11	ubsan	every language has objects
2016-09-20 10:23:15	megaTherion	not sure
2016-09-20 10:23:15	ubsan	that I know of
2016-09-20 10:23:18	megaTherion	I dont know every language
2016-09-20 10:23:23	megaTherion	great :D
2016-09-20 10:23:32	iamspeshal	Hi, i am noob
2016-09-20 10:23:42	<--	step1step2 (~step1step@p54B914A5.dip0.t-ipconnect.de) has quit (Ping timeout: 244 seconds)
2016-09-20 10:24:09	ubsan	but I assume they mean classes
2016-09-20 10:24:12	-->	marcofe (~marcofe@31.161.52.18) has joined ##c++
2016-09-20 10:24:13	megaTherion	oh
2016-09-20 10:24:23	iamspeshal	Any, help with code?
2016-09-20 10:24:41	megaTherion	iamspeshal: honestly why dont you run your code with your favourite debugger and check it out
2016-09-20 10:24:48	Eelis	ubsan: term-based languages use terms rather than objects
2016-09-20 10:25:02	ubsan	Eelis: "term-based"?
2016-09-20 10:25:14	Eelis	yes, for example functional programming language that are based on term reduction
2016-09-20 10:25:17	Eelis	*languages
2016-09-20 10:25:18	iamspeshal	I have run it, and it is debugging, but i dont know how to make it not out of range.
2016-09-20 10:25:40	<--	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has quit (Quit: Leaving)
2016-09-20 10:25:48	iamspeshal	Hi, i am noob, and i would like to learn from other people. Please dont give me the correct code.
2016-09-20 10:25:58	ubsan	Eelis: I don't know of these languages
2016-09-20 10:26:08	-->	frib (~dynorsau@host74-49-dynamic.247-95-r.retail.telecomitalia.it) has joined ##c++
2016-09-20 10:26:13	Eelis	ubsan: that's true for most programmers not academically trained
2016-09-20 10:26:13	ubsan	they sound very strange and interesting
2016-09-20 10:26:16	<--	jaafar (~quassel@50-206-78-205-static.hfc.comcastbusiness.net) has quit (Remote host closed the connection)
2016-09-20 10:26:16	<--	jan64 (~jan64@agaa94.neoplus.adsl.tpnet.pl) has quit (Quit: Leaving)
2016-09-20 10:26:32	ubsan	Eelis: I imagine so
2016-09-20 10:26:39	megaTherion	iamspeshal: why dont you just read the what() of the exception *shrugs*
2016-09-20 10:26:44	megaTherion	its even telling you whats wrong
2016-09-20 10:27:05	-->	jaafar (~quassel@50-206-78-205-static.hfc.comcastbusiness.net) has joined ##c++
2016-09-20 10:27:13	megaTherion	apart from that, such code is super unreadable
2016-09-20 10:28:33	iamspeshal	what is length of 24? I do not know what is length of 24. I am counting.
2016-09-20 10:29:07	-->	mukunda (~mukunda@c-71-205-185-63.hsd1.co.comcast.net) has joined ##c++
2016-09-20 10:29:15	megaTherion	that string you use substr upon, halt with the debugger and check the index.
2016-09-20 10:29:39	iamspeshal	Wait, does it not count \n?
2016-09-20 10:29:39		[10:29]
2016-09-20 10:30:13	iamspeshal	Eh, ill do that.
2016-09-20 10:31:31	<--	iamspeshal (458889fd@gateway/web/freenode/ip.69.136.137.253) has quit (Quit: Page closed)
2016-09-20 10:33:32	-->	UnlikeSuika_mobi (~UnlikeSui@147.46.113.63) has joined ##c++
2016-09-20 10:33:32	-->	nealshire_ (~Nealshire@unaffiliated/nealshire) has joined ##c++
2016-09-20 10:33:40	<--	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has quit (Read error: Connection reset by peer)
2016-09-20 10:33:44	-->	step1step2 (~step1step@p57A455B6.dip0.t-ipconnect.de) has joined ##c++
2016-09-20 10:34:23	Dweezahr	does anyone here every use .ih files for an interface header?
2016-09-20 10:34:27	-->	syem (~s@unaffiliated/syem) has joined ##c++
2016-09-20 10:34:53	-->	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has joined ##c++
2016-09-20 10:34:56	megaTherion	never ever heard of the usage of .ih files
2016-09-20 10:35:12	megaTherion	but I guess you can name your files as you like
2016-09-20 10:35:15	<--	bumbar (~bumbar@unaffiliated/bumbar) has quit (Quit: Leaving)
2016-09-20 10:35:15	Dweezahr	ok, my professor wants to make us believe that is some kind of standard
2016-09-20 10:35:18	<--	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has quit (Quit: Lost terminal)
2016-09-20 10:35:25	megaTherion	Dweezahr: never ever heard of it... really never
2016-09-20 10:35:41	Dweezahr	yeah, couldnt find anything in the specifications of c++ and nothing in stroustrups books
2016-09-20 10:35:44	megaTherion	what is an interface header supposed to contain?
2016-09-20 10:35:50	megaTherion	do you mean by interface an pure abstract class?
2016-09-20 10:36:01	-->	Nemus (~Nemus@unaffiliated/nemus) has joined ##c++
2016-09-20 10:36:04	<--	kaleid0 (~kaleid0@255.sub-174-219-6.myvzw.com) has quit (Remote host closed the connection)
2016-09-20 10:36:23	Eelis	Dweezahr: probably someone once lied to your professor and now he's teaching lies
2016-09-20 10:36:36	megaTherion	haha :D
2016-09-20 10:36:42	Dweezahr	well here he is trying to explain it on stackoverflow
2016-09-20 10:36:43	-->	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has joined ##c++
2016-09-20 10:36:43	Dweezahr	http://stackoverflow.com/questions/11063355/is-anyone-familiar-with-the-implementation-internal-header-ih
2016-09-20 10:36:58	Dweezahr	brokken is the professor, he is answering the question
2016-09-20 10:37:15	Dweezahr	but another guy with rep 110k says he never used it or heard of it
2016-09-20 10:37:22	<--	nilg (~user@77.70.2.229) has quit (Remote host closed the connection)
2016-09-20 10:37:28	<--	jaafar (~quassel@50-206-78-205-static.hfc.comcastbusiness.net) has quit (Ping timeout: 265 seconds)
2016-09-20 10:37:35	<--	plee (~kurt@89.10.219.180) has quit (Read error: Connection reset by peer)
2016-09-20 10:38:01	-->	plee (~kurt@89.10.219.180) has joined ##c++
2016-09-20 10:38:53	Eelis	so ignore the prof
2016-09-20 10:38:53	-->	ashkan (~ashkan@unaffiliated/askywalker/x-0000002) has joined ##c++
2016-09-20 10:38:55	megaTherion	Dweezahr: but really what should the file contain?
2016-09-20 10:39:26	Dweezahr	just like a normal header
2016-09-20 10:39:30	Dweezahr	but more abstract it seems
2016-09-20 10:40:00	Dweezahr	like for the library an .ih file and for all the .cpp files one header file
2016-09-20 10:40:56	<--	Anodl1 (~Anodl@p2003007A2F222500102A539BE71A59B7.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2016-09-20 10:41:52	<--	Xanather (~xanather@unaffiliated/xanather) has quit (Quit: Leaving)
2016-09-20 10:41:53	<--	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has quit (Ping timeout: 272 seconds)
2016-09-20 10:43:00	<--	BillSussman (~Gustavo@189.58.169.15.dynamic.adsl.gvt.net.br) has quit (Quit: Leaving)
2016-09-20 10:43:01	<--	pmercado (~pmercado@186-104-159-146.baf.movistar.cl) has quit (Quit: Konversation terminated!)
2016-09-20 10:45:18	<--	z3r0_ (~z3r0@41.86.240.102) has quit (Quit: Leaving)
2016-09-20 10:45:18		[10:45]
2016-09-20 10:46:09	<--	tocka (~tocka@78-56-107-170.static.zebra.lt) has quit
2016-09-20 10:47:21	<--	logan_e_ (uid164592@gateway/web/irccloud.com/x-ezoelgetlupibgjk) has quit (Quit: Connection closed for inactivity)
2016-09-20 10:48:54	<--	xnavor (~xnavor@78-70-4-240-no171.business.telia.com) has quit (Quit: This computer has gone to sleep)
2016-09-20 10:49:48	-->	xnavor (~xnavor@78-70-4-240-no171.business.telia.com) has joined ##c++
2016-09-20 10:50:20	-->	kasper^ (~safaf@82.137.10.213) has joined ##c++
2016-09-20 10:50:52	<--	forgottenone (~forgotten@195.142.65.127) has quit (Ping timeout: 255 seconds)
2016-09-20 10:52:55	<--	CuriousErnestBro (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has quit (Ping timeout: 260 seconds)
2016-09-20 10:52:55	-->	CEB (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has joined ##c++
2016-09-20 10:53:27	-->	illeruci_ (~illerucis@2620:10d:c091:200::2:8037) has joined ##c++
2016-09-20 10:54:02	<--	kolobyte (~aaa@unaffiliated/kolobyte) has quit (Ping timeout: 244 seconds)
2016-09-20 10:55:37	<--	illerucis (~illerucis@2620:10d:c091:200::2:8037) has quit (Ping timeout: 248 seconds)
2016-09-20 10:56:18	<--	brendel_ (~brice@LAubervilliers-656-1-215-246.w217-128.abo.wanadoo.fr) has quit (Ping timeout: 264 seconds)
2016-09-20 10:57:09	<--	soulisson (~soulisson@unaffiliated/soulisson) has quit (Quit: Quitte)
2016-09-20 10:57:24	<--	syem (~s@unaffiliated/syem) has quit (Quit: Lost terminal)
2016-09-20 10:57:36	<--	Adva (~Hyrule@2a02:810a:12c0:5068:dc93:567c:3ef5:ea44) has quit (Read error: Connection reset by peer)
2016-09-20 10:58:26	<--	Lildirt (~Lildirt@lildirt.com) has quit (Quit: Leb wohl, meine Freunde. Ich wünsche Ihnen das beste von Tagen.)
2016-09-20 10:59:24	-->	Lildirt (~Lildirt@lildirt.com) has joined ##c++
2016-09-20 10:59:55	-->	elh9 (~elh9___@110-175-114-60.tpgi.com.au) has joined ##c++
2016-09-20 11:00:34	<--	Lildirt (~Lildirt@lildirt.com) has quit (Client Quit)
2016-09-20 11:00:34		[11:00]
2016-09-20 11:05:35	-->	logan_e_ (uid164592@gateway/web/irccloud.com/x-ssiklspkfwcyalbl) has joined ##c++
2016-09-20 11:05:48	<--	clynamen (~clynamen@2-238-72-61.ip242.fastwebnet.it) has quit (Ping timeout: 276 seconds)
2016-09-20 11:05:49	<--	Freze (~Freze@dhcp-18-189-123-6.dyn.MIT.EDU) has quit (Quit: Leaving)
2016-09-20 11:05:57	<--	marcofe (~marcofe@31.161.52.18) has quit (Quit: Konversation terminated!)
2016-09-20 11:07:11	-->	skweek (~skweek@2607:fe50:0:810b:a414:1cf9:8eb8:f755) has joined ##c++
2016-09-20 11:07:17	-->	Bjxw (~Bjxw@prz29-1-78-205-58-16.fbx.proxad.net) has joined ##c++
2016-09-20 11:07:22	<--	LKoen (~LKoen@2a01:e35:2eed:a430:4559:548:e104:9ad2) has quit (Quit: “It’s only logical. First you learn to talk, then you learn to think. Too bad it’s not the other way round.”)
2016-09-20 11:07:48	<--	Bjxw (~Bjxw@prz29-1-78-205-58-16.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-20 11:07:55	<--	seishun (~Kakera@78.84.144.136) has quit (Ping timeout: 265 seconds)
2016-09-20 11:08:24	-->	kolobyte (~aaa@23.94.98.192) has joined ##c++
2016-09-20 11:08:25	<--	kolobyte (~aaa@23.94.98.192) has quit (Changing host)
2016-09-20 11:08:25	-->	kolobyte (~aaa@unaffiliated/kolobyte) has joined ##c++
2016-09-20 11:08:27	-->	Uafer (~Uafer@prz29-1-78-205-58-16.fbx.proxad.net) has joined ##c++
2016-09-20 11:08:50	<--	Uafer (~Uafer@prz29-1-78-205-58-16.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-20 11:09:22	-->	Leovale (~Leovale@45.72.141.66) has joined ##c++
2016-09-20 11:10:36	<--	NoShlomo (~NoShlomo@90.74.151.136) has quit (Quit: NoShlomo)
2016-09-20 11:10:40	<--	afiefh (~afiefh@31.210.188.33) has quit (Read error: Connection reset by peer)
2016-09-20 11:11:04	<--	Meszias (~quassel@2804:7f1:2080:2112:a4a6:bad4:8fe2:afe3) has quit (Remote host closed the connection)
2016-09-20 11:11:07	<--	h0ffmann (~h0ffmann@188.126.79.48) has quit (Ping timeout: 255 seconds)
2016-09-20 11:11:50	-->	brendel_ (~brice@LAubervilliers-656-1-215-246.w217-128.abo.wanadoo.fr) has joined ##c++
2016-09-20 11:12:01	-->	Vuks69 (~Vuks@unaffiliated/vuks69) has joined ##c++
2016-09-20 11:15:25	<--	Vuks (~Vuks@unaffiliated/vuks69) has quit (Ping timeout: 244 seconds)
2016-09-20 11:17:01	<--	occamsblazer (~occamsbla@131.228.197.2) has quit (Quit: Ad somnum per aspera)
2016-09-20 11:17:01		[11:17]
2016-09-20 11:17:33	<--	Zunino (~Zunino@177.96.163.99) has left ##c++
2016-09-20 11:20:09	<--	nkr (Elite14718@gateway/shell/elitebnc/x-nstqfymoduxssizz) has left ##c++
2016-09-20 11:20:13	<--	neurrowcat (~neurrowca@h-70-243.a163.priv.bahnhof.se) has quit (Quit: Deebidappidoodah!)
2016-09-20 11:20:57	-->	theOneWho (~tom@95.166.79.163) has joined ##c++
2016-09-20 11:22:00	-->	a3f (~a3f@unaffiliated/a3f) has joined ##c++
2016-09-20 11:22:19	<--	AbleBacon (~AbleBacon@unaffiliated/ablebacon) has quit (Read error: Connection reset by peer)
2016-09-20 11:22:42	-->	MK (~MK@2602:252:d6e:a9b0:3535:49ab:e0b:2aa8) has joined ##c++
2016-09-20 11:24:37	<--	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has quit (Read error: Connection reset by peer)
2016-09-20 11:25:23	-->	mfc_ (~mfc@unaffiliated/mfc) has joined ##c++
2016-09-20 11:25:27	<--	irrenhaus3 (~xenon@HSI-KBW-046-005-253-006.hsi8.kabel-badenwuerttemberg.de) has quit (Quit: Lost terminal)
2016-09-20 11:25:59	-->	SoundlesDev (~soundless@2601:282:8080:1267:1c70:8739:6e64:4a4c) has joined ##c++
2016-09-20 11:26:12	-->	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has joined ##c++
2016-09-20 11:27:42	<--	wnklmnn (~pascal@p4FEF74F9.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2016-09-20 11:29:03	<--	yokel (~yokel@unaffiliated/contempt) has quit (Ping timeout: 240 seconds)
2016-09-20 11:29:14	<--	genpaku (~genpaku@107.191.100.185) has quit (Ping timeout: 265 seconds)
2016-09-20 11:29:30	tafryn	What would be a reasonable alternative wrt concurrency for a struct with >15 members where each member is atomic?
2016-09-20 11:29:34	<--	zagabar (~zagabar@unaffiliated/zagabar) has quit (Quit: WeeChat 1.5)
2016-09-20 11:29:53	-->	genpaku (~genpaku@107.191.100.185) has joined ##c++
2016-09-20 11:30:50	-->	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has joined ##c++
2016-09-20 11:33:12	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 11:33:12		[11:33]
2016-09-20 11:33:31	<--	Guest58942 (~BioKey@2a02:1205:506f:db70:5c2e:5385:e30b:3203) has quit (Read error: Connection reset by peer)
2016-09-20 11:35:33	<--	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has quit (Ping timeout: 244 seconds)
2016-09-20 11:35:34	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2016-09-20 11:35:44	<--	Dweezahr (~Dweezahr@5ED6C3D4.cm-7-7d.dynamic.ziggo.nl) has quit (Quit: This computer has gone to sleep)
2016-09-20 11:35:50	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 11:38:11	-->	ffilozov (~ffilozov@pool-72-69-174-106.nycmny.fios.verizon.net) has joined ##c++
2016-09-20 11:38:18	<--	KNRO_ (~quassel@94.187.209.247) has quit (Remote host closed the connection)
2016-09-20 11:39:03	<--	RoBo_V (~robo@27.255.215.168) has quit (Ping timeout: 240 seconds)
2016-09-20 11:39:54	<--	Sculptor (~Sculptor@cable-24-135-26-151.dynamic.sbb.rs) has quit (Changing host)
2016-09-20 11:39:54	-->	Sculptor (~Sculptor@trivialand/master/sculptor) has joined ##c++
2016-09-20 11:40:16	<--	mfc_ (~mfc@unaffiliated/mfc) has quit (Read error: Connection reset by peer)
2016-09-20 11:41:28	<--	Enhex (~Enhex@82.252.138.77.rev.sfr.net) has quit (Quit: Leaving)
2016-09-20 11:41:29	<--	irco (~irco@HSI-KBW-134-3-111-4.hsi14.kabel-badenwuerttemberg.de) has quit (Ping timeout: 248 seconds)
2016-09-20 11:42:17	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 240 seconds)
2016-09-20 11:42:25	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 11:42:40	-->	mackal (~mike@pool-96-237-144-12.bstnma.fios.verizon.net) has joined ##c++
2016-09-20 11:43:04	<--	genpaku (~genpaku@107.191.100.185) has quit (Ping timeout: 255 seconds)
2016-09-20 11:43:14	<--	sh00p (~sh00p@84.216.39.31) has quit
2016-09-20 11:43:44	<--	Murii (~Murii@86.127.60.21) has quit
2016-09-20 11:43:59	<--	szulak (uid162164@gateway/web/irccloud.com/x-wvsyikpmlfifnsgw) has quit (Quit: Connection closed for inactivity)
2016-09-20 11:45:04	velco	tafryn: see the example http://en.cppreference.com/w/cpp/thread/hardware_destructive_interference_size
2016-09-20 11:46:16	-->	Valdaris (~Gabe@75-170-43-116.eugn.qwest.net) has joined ##c++
2016-09-20 11:46:35	<--	rendar (~I@95.239.179.96) has quit (Quit: std::lower_bound + std::less_equal *works* with a vector without duplicates!)
2016-09-20 11:47:34	<--	sigtrm (quassel@quassel.woboq.de) has quit (Ping timeout: 255 seconds)
2016-09-20 11:47:51	<--	Gathis (~TheBlack@unaffiliated/gathis) has quit (Quit: ...)
2016-09-20 11:47:54	-->	PaulN (~PaulN@77.242.18.68) has joined ##c++
2016-09-20 11:49:30	<--	Gabe__ (~Gabe@75-170-43-116.eugn.qwest.net) has quit (Ping timeout: 260 seconds)
2016-09-20 11:49:30		[11:49]
2016-09-20 11:51:30	-->	anuxivm (~anuxi@92.185.154.236) has joined ##c++
2016-09-20 11:52:01	<--	bjz (~bjz@14-201-215-168.tpgi.com.au) has quit (Read error: Connection reset by peer)
2016-09-20 11:52:55	-->	bjz (~bjz@14-201-215-168.tpgi.com.au) has joined ##c++
2016-09-20 11:53:28	-->	StyxAlso (~markg@120.88.147.168) has joined ##c++
2016-09-20 11:53:56	-->	Gabe (~Gabe@75-170-43-116.eugn.qwest.net) has joined ##c++
2016-09-20 11:54:51	<--	CEB (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has quit (Quit: Leaving)
2016-09-20 11:55:55	<--	illeruci_ (~illerucis@2620:10d:c091:200::2:8037) has quit (Remote host closed the connection)
2016-09-20 11:57:03	<--	Valdaris (~Gabe@75-170-43-116.eugn.qwest.net) has quit (Ping timeout: 240 seconds)
2016-09-20 11:57:09	-->	jan64 (~jan64@agaa94.neoplus.adsl.tpnet.pl) has joined ##c++
2016-09-20 11:57:19	-->	kadoban (~mud@unaffiliated/kadoban) has joined ##c++
2016-09-20 11:57:57	<--	Albori (~Albori@67-43-240-110.fidnet.com) has quit (Read error: Connection reset by peer)
2016-09-20 11:58:37	<--	Vuks69 (~Vuks@unaffiliated/vuks69) has quit (Quit: Cya, later)
2016-09-20 11:59:19	<--	Karyon (~yaaic@unaffiliated/karyon) has quit (Ping timeout: 244 seconds)
2016-09-20 11:59:29	-->	DEElekgolo (~DEElekgol@2602:30a:2e0e:a7a0:75f0:b2c4:bdf4:c224) has joined ##c++
2016-09-20 11:59:33	<--	Gabe (~Gabe@75-170-43-116.eugn.qwest.net) has quit (Ping timeout: 240 seconds)
2016-09-20 12:00:41	<--	skweek (~skweek@2607:fe50:0:810b:a414:1cf9:8eb8:f755) has quit (Ping timeout: 248 seconds)
2016-09-20 12:00:54	-->	Albori (~Albori@64-15-83-167.fidnet.com) has joined ##c++
2016-09-20 12:01:21	-->	CuriousErnestBro (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has joined ##c++
2016-09-20 12:01:36	-->	the_abra (~philipp@p4FFF5A52.dip0.t-ipconnect.de) has joined ##c++
2016-09-20 12:03:41	<--	biberu (~biberu@c-cf2d72d5.08-441-7570702.cust.bredbandsbolaget.se) has quit
2016-09-20 12:03:47	-->	iBleizo (~blazo@unaffiliated/ibleizo) has joined ##c++
2016-09-20 12:04:06	<--	wds (~wds@cpe-72-227-132-127.nyc.res.rr.com) has quit (Read error: Connection reset by peer)
2016-09-20 12:04:16	-->	wds (~wds@cpe-72-227-132-127.nyc.res.rr.com) has joined ##c++
2016-09-20 12:04:16	<--	Albori (~Albori@64-15-83-167.fidnet.com) has quit (Excess Flood)
2016-09-20 12:05:45	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 12:05:45		[12:05]
2016-09-20 12:07:04	<--	the_abra (~philipp@p4FFF5A52.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-09-20 12:07:33	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 276 seconds)
2016-09-20 12:09:49	<--	PaulN (~PaulN@77.242.18.68) has quit (Quit: Leaving)
2016-09-20 12:10:15	-->	Karyon (~yaaic@unaffiliated/karyon) has joined ##c++
2016-09-20 12:11:06	<--	biglama (~Day_dream@ram31-1-82-234-77-18.fbx.proxad.net) has quit (Remote host closed the connection)
2016-09-20 12:11:48	<--	jan64 (~jan64@agaa94.neoplus.adsl.tpnet.pl) has quit (Quit: Leaving)
2016-09-20 12:12:06	-->	amdi_ (~amdi_@2620:102:400b:8d1f:d:1b00:e5c3:82fe) has joined ##c++
2016-09-20 12:12:50	<--	coventry` (~user@192.64.64.26) has quit (Read error: Connection reset by peer)
2016-09-20 12:14:24	-->	jaafar (~quassel@67.135.43.183) has joined ##c++
2016-09-20 12:15:30	<--	zero_byte (~zer0@ip-89-103-110-138.net.upcbroadband.cz) has quit (Ping timeout: 264 seconds)
2016-09-20 12:16:03	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-20 12:16:11	-->	urban-animal (~Technolog@2600:380:7a58:744c:591:2479:4fc1:f455) has joined ##c++
2016-09-20 12:16:20	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 12:18:28	Olipro	What's the rules of C++ attributes?
2016-09-20 12:18:50	<--	RoKenn (~RoKenn@2001:a61:2255:c301:75a0:e903:b5a7:69b1) has quit (Quit: NSA proxy service interrupted)
2016-09-20 12:19:06	<--	kasper^ (~safaf@82.137.10.213) has quit (Ping timeout: 264 seconds)
2016-09-20 12:19:25	<--	iBleizo (~blazo@unaffiliated/ibleizo) has quit (Quit: Lost terminal)
2016-09-20 12:19:36	Olipro	Can i just take some proprietary specifier like __declspec(dllexport) and encase it in [[ ]] and expect other compilers to ignore it?
2016-09-20 12:19:57	-->	unreal (~unreal@unaffiliated/unreal) has joined ##c++
2016-09-20 12:20:07	-->	zero_byte (~zer0@ip-89-103-110-138.net.upcbroadband.cz) has joined ##c++
2016-09-20 12:20:36	-->	Divega (~Divega@99-22-148-42.lightspeed.rcsntx.sbcglobal.net) has joined ##c++
2016-09-20 12:21:54	Divega	Is there a channel for C programming as well?
2016-09-20 12:21:54		[12:21]
2016-09-20 12:22:13	<--	djcb (~user@85-76-16-54-nat.elisa-mobile.fi) has quit (Ping timeout: 255 seconds)
2016-09-20 12:23:10	<--	a3f (~a3f@unaffiliated/a3f) has quit (Quit: bb)
2016-09-20 12:24:10	-->	a3f (~a3f@unaffiliated/a3f) has joined ##c++
2016-09-20 12:24:49	Olipro	Yes, ##c
2016-09-20 12:25:02	-->	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has joined ##c++
2016-09-20 12:26:29	<--	phinxy (~tehhhd@unaffiliated/phinxy) has quit (Quit: Leaving)
2016-09-20 12:26:41	-->	yokel (~yokel@unaffiliated/contempt) has joined ##c++
2016-09-20 12:28:29	<--	swnc (~swnc@port-92-204-76-157.dynamic.qsc.de) has quit (Remote host closed the connection)
2016-09-20 12:28:34	-->	ap4y (~user@210.54.39.82) has joined ##c++
2016-09-20 12:29:27	<--	Felgar (Felgar@pool-173-68-11-27.nycmny.fios.verizon.net) has quit (Read error: Connection reset by peer)
2016-09-20 12:29:37	<--	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has quit (Ping timeout: 244 seconds)
2016-09-20 12:29:55	-->	Mike11 (~Mike@unaffiliated/mike11) has joined ##c++
2016-09-20 12:30:08	<--	HerzogDeXtEr (~farci@i59F6CA3B.versanet.de) has quit (Read error: Connection reset by peer)
2016-09-20 12:30:54	-->	glenfe (~glen@ool-18b8d08e.dyn.optonline.net) has joined ##c++
2016-09-20 12:30:55	<--	glenfe (~glen@ool-18b8d08e.dyn.optonline.net) has quit (Changing host)
2016-09-20 12:30:55	-->	glenfe (~glen@unaffiliated/glenfe) has joined ##c++
2016-09-20 12:30:56	-->	jbud (~jbud@ip-24-54-73-229.user.start.ca) has joined ##c++
2016-09-20 12:31:04	Divega	tyvm was searching the list and it wasnt popping out at me haha
2016-09-20 12:31:42	<--	unreal (~unreal@unaffiliated/unreal) has quit (Read error: Connection reset by peer)
2016-09-20 12:32:35	-->	unreal (~unreal@unaffiliated/unreal) has joined ##c++
2016-09-20 12:33:19	-->	Albori (~Albori@64-15-83-167.fidnet.com) has joined ##c++
2016-09-20 12:33:22	<--	Groscheri (~Dyonisos@unaffiliated/dyonisos) has quit (Quit: Quis custodiet ipsos custodes ?)
2016-09-20 12:33:36	-->	Rave1 (~dell@node-1w7jr9yc5q60zfylo1v1u7f3z.ipv6.telus.net) has joined ##c++
2016-09-20 12:34:21	<--	urban-animal (~Technolog@2600:380:7a58:744c:591:2479:4fc1:f455) has quit (Remote host closed the connection)
2016-09-20 12:35:26	-->	Felgar (Felgar@pool-173-68-11-27.nycmny.fios.verizon.net) has joined ##c++
2016-09-20 12:35:53	<--	a3Dman (~3Dman@unaffiliated/a3dman) has quit (Ping timeout: 240 seconds)
2016-09-20 12:36:23	<--	MrP[Home] (~Palsson@c-a46fe555.06-213-6e6b701.cust.bredbandsbolaget.se) has quit (Read error: Connection reset by peer)
2016-09-20 12:37:11	<--	Felgar (Felgar@pool-173-68-11-27.nycmny.fios.verizon.net) has quit (Client Quit)
2016-09-20 12:37:11		[12:37]
2016-09-20 12:37:32	-->	kilbith (4ee51c3e@gateway/web/cgi-irc/kiwiirc.com/ip.78.229.28.62) has joined ##c++
2016-09-20 12:38:56	<--	a3f (~a3f@unaffiliated/a3f) has quit (Read error: Connection reset by peer)
2016-09-20 12:39:00	-->	Felgar (Felgar@pool-173-68-11-27.nycmny.fios.verizon.net) has joined ##c++
2016-09-20 12:40:21	<--	Rave1 (~dell@node-1w7jr9yc5q60zfylo1v1u7f3z.ipv6.telus.net) has left ##c++
2016-09-20 12:41:01	-->	Levitator (~Meh@cpe-2606-A000-E182-FB00-F8FC-C295-9F4F-BE1A.dyn6.twc.com) has joined ##c++
2016-09-20 12:42:00	-->	bx2 (~bx2@46.140.123.246) has joined ##c++
2016-09-20 12:42:00	<--	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has quit (Ping timeout: 276 seconds)
2016-09-20 12:42:25	-->	a3Dman (~3Dman@unaffiliated/a3dman) has joined ##c++
2016-09-20 12:43:06	<--	jaafar (~quassel@67.135.43.183) has quit (Ping timeout: 264 seconds)
2016-09-20 12:43:31	-->	MoziM (~nonroot@cpe-76-169-22-126.socal.res.rr.com) has joined ##c++
2016-09-20 12:43:36	-->	silva__ (~silva@broadband-188-32-95-79.nationalcablenetworks.ru) has joined ##c++
2016-09-20 12:43:49	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 255 seconds)
2016-09-20 12:44:56	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 12:45:53	<--	nonroot_ (~nonroot@cpe-76-169-22-126.socal.res.rr.com) has quit (Ping timeout: 240 seconds)
2016-09-20 12:46:20	<--	bx2 (~bx2@46.140.123.246) has quit (Ping timeout: 244 seconds)
2016-09-20 12:47:13	<--	Henke37 (~Henrik@81-227-16-59-no133.bredband.skanova.com) has quit (Quit: ERR_SHUTDOWN)
2016-09-20 12:48:50	<--	gelignite (~gelignite@x4e31b5c8.dyn.telefonica.de) has quit (Quit: http://bit.ly/1kso8Ta)
2016-09-20 12:49:29	<--	bberg` (~bbergz@unaffiliated/bberg) has quit (Quit: bberg's out)
2016-09-20 12:50:39	-->	jaafar (~quassel@67.135.43.183) has joined ##c++
2016-09-20 12:50:41	-->	kurushii (~kurushii@host86-140-98-159.range86-140.btcentralplus.com) has joined ##c++
2016-09-20 12:51:30	<--	AkaiSora (~quassel@197.17.13.41) has quit (Ping timeout: 244 seconds)
2016-09-20 12:51:51	<--	kurushii (~kurushii@host86-140-98-159.range86-140.btcentralplus.com) has quit (Client Quit)
2016-09-20 12:53:49	<--	Kirrahe (~kirrahe@ip51cc4257.adsl-surfen.hetnet.nl) has quit (Ping timeout: 250 seconds)
2016-09-20 12:53:49		[12:53]
2016-09-20 12:53:53	<--	nwkj86 (~nwkj86@144.66.6.51.dyn.plus.net) has quit (Ping timeout: 240 seconds)
2016-09-20 12:54:24	-->	spikebot85 (~lach@58.162.148.70) has joined ##c++
2016-09-20 12:54:51	<--	gagbo (~gagbo@unaffiliated/gagbo) has quit (Quit: Konversation terminated!)
2016-09-20 12:54:53	<--	Jesin (~Jesin@pool-108-28-56-201.washdc.fios.verizon.net) has quit (Quit: Leaving)
2016-09-20 13:00:00		[12:54]
2016-09-20 13:00:23	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 13:00:23	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-20 13:01:09	<--	kilbith (4ee51c3e@gateway/web/cgi-irc/kiwiirc.com/ip.78.229.28.62) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-09-20 13:01:19	<--	Brklyn_ (~truthbk@38.122.226.210) has quit (Ping timeout: 244 seconds)
2016-09-20 13:01:34	<--	frib (~dynorsau@host74-49-dynamic.247-95-r.retail.telecomitalia.it) has quit (Quit: Leaving)
2016-09-20 13:02:03	<--	spikebot85 (~lach@58.162.148.70) has quit (Ping timeout: 250 seconds)
2016-09-20 13:04:08	<--	Karyon (~yaaic@unaffiliated/karyon) has quit (Read error: Connection reset by peer)
2016-09-20 13:07:47	<--	flavi0 (~anon@unaffiliated/flavi0) has quit (Quit: leaving)
2016-09-20 13:08:06	-->	Valdaris (~Gabe@75-170-43-116.eugn.qwest.net) has joined ##c++
2016-09-20 13:08:31	<--	karab44 (~karab44@unaffiliated/karab44) has quit (Quit: Bye bye! o/)
2016-09-20 13:08:58	-->	spikebot85 (~lach@58.162.148.70) has joined ##c++
2016-09-20 13:10:13	<--	Lenore (b84a0f22@gateway/web/freenode/ip.184.74.15.34) has left ##c++
2016-09-20 13:10:47	-->	fahadash (uid44972@gateway/web/irccloud.com/x-bacrvibucqgondbt) has joined ##c++
2016-09-20 13:10:49	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 255 seconds)
2016-09-20 13:11:13	-->	systemfault (~rcyr@unaffiliated/rcyr) has joined ##c++
2016-09-20 13:11:16	-->	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has joined ##c++
2016-09-20 13:11:30	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 13:13:58	-->	Karyon (~yaaic@unaffiliated/karyon) has joined ##c++
2016-09-20 13:14:12	<--	silva__ (~silva@broadband-188-32-95-79.nationalcablenetworks.ru) has quit (Quit: Leaving)
2016-09-20 13:14:38	pragma-	Divega: Yeah, the C channel could have had some weird name like ##badonkadonk or something. It's a good thing you asked us.  You could have been still looking for it hours from now.  Whew.
2016-09-20 13:16:25	pragma-	I mean, C is only one letter.  God forbid you had to find a more difficult channel like the linux channel or something.
2016-09-20 13:16:25		[13:16]
2016-09-20 13:16:56	<--	iik (~IIK@staticline-31-183-46-69.toya.net.pl) has quit (Ping timeout: 265 seconds)
2016-09-20 13:17:10	m_ben	pragma-: not all channels have two ##
2016-09-20 13:17:34	m_ben	if you run /list #c, it won't find ##c
2016-09-20 13:18:01	<--	UnlikeSuika_mobi (~UnlikeSui@147.46.113.63) has quit (Ping timeout: 255 seconds)
2016-09-20 13:18:57	<--	KAHR-Alpha (~Alpha@AReims-652-1-187-168.w92-142.abo.wanadoo.fr) has quit (Ping timeout: 272 seconds)
2016-09-20 13:20:11	Olipro	If only #pragma once would get standardised
2016-09-20 13:20:11	<--	spikebot85 (~lach@58.162.148.70) has left ##c++
2016-09-20 13:20:41	<--	Karyon (~yaaic@unaffiliated/karyon) has quit (Read error: Connection reset by peer)
2016-09-20 13:20:49	m_ben	Olipro: just use it, all major compilers support it
2016-09-20 13:20:58	Olipro	I am
2016-09-20 13:20:59	-->	Karyon (~yaaic@unaffiliated/karyon) has joined ##c++
2016-09-20 13:21:10	Olipro	Mainly on the working belief that if you can compile
2016-09-20 13:21:39	Olipro	... My C++14 then you should be able to handle that preprocessor directive
2016-09-20 13:22:09	-->	wolfcub (~henrique_@186.194.99.136) has joined ##c++
2016-09-20 13:22:26	pragma-	m_ben: if only #c actually... you know... informed the user about where ##c was...
2016-09-20 13:22:39	<--	symm- (~symm-@86.127.152.32) has quit (Quit: Leaving...)
2016-09-20 13:22:49	<--	jaafar (~quassel@67.135.43.183) has quit (Ping timeout: 248 seconds)
2016-09-20 13:23:33	<--	ambro718 (~ambro@unaffiliated/ambro718) has quit (Ping timeout: 240 seconds)
2016-09-20 13:23:59	-->	UnlikeSuika_mobi (~UnlikeSui@147.47.143.179) has joined ##c++
2016-09-20 13:24:16	MaddHatter	pragma-: that happens when services restarts. You could probably get staff to fix it.
2016-09-20 13:24:24	pragma-	wut.
2016-09-20 13:24:42	<--	quickbrownfox (~henrique_@177.131.178.148) has quit (Ping timeout: 265 seconds)
2016-09-20 13:25:25	<--	UnlikeSuika (~UnlikeSui@147.46.113.63) has quit (Ping timeout: 244 seconds)
2016-09-20 13:25:38	MaddHatter	pragma-: the forwards break sometimes when services restarts because the channel empties
2016-09-20 13:26:10	-->	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has joined ##c++
2016-09-20 13:27:46	-->	UnripeSuica_mobi (~UnlikeSui@223.62.8.90) has joined ##c++
2016-09-20 13:27:47	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 13:27:48	<--	CEnnis91 (uid3543@gateway/web/irccloud.com/x-mvffqkljtvwgqfzf) has quit (Quit: Connection closed for inactivity)
2016-09-20 13:28:22	<--	UnlikeSuika_mobi (~UnlikeSui@147.47.143.179) has quit (Ping timeout: 255 seconds)
2016-09-20 13:28:32	<--	SecondForm_Glenn (~Thunderbi@97-102-42-24.res.bhn.net) has quit (Ping timeout: 265 seconds)
2016-09-20 13:28:57	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-20 13:29:31	-->	iik (~IIK@staticline-31-183-46-69.toya.net.pl) has joined ##c++
2016-09-20 13:30:56	<--	iik (~IIK@staticline-31-183-46-69.toya.net.pl) has quit (Max SendQ exceeded)
2016-09-20 13:31:27	-->	iik (~IIK@staticline-31-183-46-69.toya.net.pl) has joined ##c++
2016-09-20 13:31:27		[13:31]
2016-09-20 13:31:47	-->	dj_pi (~dj@c-73-191-212-56.hsd1.mi.comcast.net) has joined ##c++
2016-09-20 13:32:04	-->	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has joined ##c++
2016-09-20 13:32:44	<--	Karyon (~yaaic@unaffiliated/karyon) has quit (Quit: sayonara)
2016-09-20 13:34:23	<--	karakedi (~eAC53C340@unaffiliated/orphan) has quit (Ping timeout: 244 seconds)
2016-09-20 13:35:49	<--	EvilPeng1 (~EvilPengu@bur-inet-pa-4.disney.com) has quit (Read error: Connection reset by peer)
2016-09-20 13:36:27	<--	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has quit (Ping timeout: 244 seconds)
2016-09-20 13:39:14	-->	EvilPeng1 (~EvilPengu@bur-inet-pa-4.disney.com) has joined ##c++
2016-09-20 13:41:03	-->	Gr33nW0lf (~Gr33nW0lf@189-92-116-77.3g.claro.net.br) has joined ##c++
2016-09-20 13:41:25	<--	velco (~chill@vlan-185-78-38-153.comnet.bg) has quit (Quit: Leaving...)
2016-09-20 13:42:23	<--	talisein (~talisein@april-fools/2013/sixth/talisein) has quit (Ping timeout: 272 seconds)
2016-09-20 13:42:53	<--	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has quit (Quit: deeb)
2016-09-20 13:42:59	<--	iik (~IIK@staticline-31-183-46-69.toya.net.pl) has quit (Ping timeout: 244 seconds)
2016-09-20 13:43:03	<--	theOneWho (~tom@95.166.79.163) has quit (Read error: Connection reset by peer)
2016-09-20 13:45:08	-->	jaafar (~quassel@67.135.43.183) has joined ##c++
2016-09-20 13:45:33	-->	theOneWho (~tom@95.166.79.163) has joined ##c++
2016-09-20 13:46:31	-->	voidah (~voidah@unaffiliated/voider) has joined ##c++
2016-09-20 13:46:31		[13:46]
2016-09-20 13:49:43	<--	UnripeSuica_mobi (~UnlikeSui@223.62.8.90) has quit (Quit: RIP)
2016-09-20 13:49:50	<--	anuxivm (~anuxi@92.185.154.236) has quit (Read error: Connection reset by peer)
2016-09-20 13:49:56	-->	UnlikeSuika_mobi (~UnlikeSui@147.47.143.179) has joined ##c++
2016-09-20 13:51:09	-->	Mnkras (~Mnkras@concrete5/781/Mnkras) has joined ##c++
2016-09-20 13:52:53	-->	anuxivm (~anuxi@92.185.154.236) has joined ##c++
2016-09-20 13:53:00	<--	anuxivm (~anuxi@92.185.154.236) has quit (Max SendQ exceeded)
2016-09-20 13:54:11	-->	SunnyD (~SunnyD@cpe-72-178-78-211.hot.res.rr.com) has joined ##c++
2016-09-20 13:54:26	-->	Hajime (~Hajime@c-71-57-78-141.hsd1.il.comcast.net) has joined ##c++
2016-09-20 13:55:51	-->	ibouvousaime (~ibouvousa@41.82.193.77) has joined ##c++
2016-09-20 13:56:19	<--	StyxAlso (~markg@120.88.147.168) has quit (Quit: StyxAlso)
2016-09-20 13:56:36	<--	bjz (~bjz@14-201-215-168.tpgi.com.au) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-20 13:57:57	-->	cobalt-red (~cobalt-re@pullup-55.dynamic2.rpi.edu) has joined ##c++
2016-09-20 13:58:15	-->	neurodrone (~neurodron@unaffiliated/neurodrone) has joined ##c++
2016-09-20 13:58:28	-->	anuxivm (~anuxi@92.185.154.236) has joined ##c++
2016-09-20 13:58:35	<--	anuxivm (~anuxi@92.185.154.236) has quit (Max SendQ exceeded)
2016-09-20 13:58:51	-->	codercodi (~codercodi@108-192-148-40.lightspeed.gnvlsc.sbcglobal.net) has joined ##c++
2016-09-20 14:01:41	-->	iik (~IIK@staticline-31-183-46-69.toya.net.pl) has joined ##c++
2016-09-20 14:01:41		[14:01]
2016-09-20 14:06:44	<--	P1RATEZ (piratez@unaffiliated/p1ratez) has quit (Quit: shawarma craving)
2016-09-20 14:07:27	<--	kofman (~kofman@198-27-128-168.static.sonic.net) has quit (Ping timeout: 244 seconds)
2016-09-20 14:07:39	-->	UnripeSuica_mobi (~UnlikeSui@147.47.143.179) has joined ##c++
2016-09-20 14:07:49	-->	Gabe (~Gabe@63-155-153-233.eugn.qwest.net) has joined ##c++
2016-09-20 14:07:57	<--	Gabe (~Gabe@63-155-153-233.eugn.qwest.net) has quit (Client Quit)
2016-09-20 14:08:59	<--	UnlikeSuika_mobi (~UnlikeSui@147.47.143.179) has quit (Read error: Connection reset by peer)
2016-09-20 14:09:33	<--	Valdaris (~Gabe@75-170-43-116.eugn.qwest.net) has quit (Ping timeout: 240 seconds)
2016-09-20 14:11:56	<--	ap4y (~user@210.54.39.82) has quit (Read error: Connection reset by peer)
2016-09-20 14:13:58	-->	ap4y (~user@210.54.39.82) has joined ##c++
2016-09-20 14:14:39	<--	amdi_ (~amdi_@2620:102:400b:8d1f:d:1b00:e5c3:82fe) has quit (Quit: Leaving)
2016-09-20 14:17:29	-->	NeXTSUN (~textual@2601:83:8100:42cf:68da:e8f9:3da0:43bf) has joined ##c++
2016-09-20 14:17:29		[14:17]
2016-09-20 14:19:00	-->	gist (~jack@p5B1053A0.dip0.t-ipconnect.de) has joined ##c++
2016-09-20 14:20:15	-->	the_abra (~philipp@p4FFF5A52.dip0.t-ipconnect.de) has joined ##c++
2016-09-20 14:21:06	-->	nullfxn (~nullFxn@107-147-108-164.res.bhn.net) has joined ##c++
2016-09-20 14:23:18	Olipro	Is "this" a T* or T*&
2016-09-20 14:25:07	<--	et (~et@soohrt.org) has quit (Ping timeout: 265 seconds)
2016-09-20 14:25:19	-->	sctt (~sctt@95.143.195.43) has joined ##c++
2016-09-20 14:26:06	-->	Karyon (~yaaic@unaffiliated/karyon) has joined ##c++
2016-09-20 14:26:12	-->	cobalt-red-2 (~cobalt-re@paras-11.dynamic.rpi.edu) has joined ##c++
2016-09-20 14:26:34	m_ben	it's a pointer
2016-09-20 14:26:51	m_ben	so T*
2016-09-20 14:27:25	<--	bushido_ (~bushido@unaffiliated/bursihido) has quit (Ping timeout: 250 seconds)
2016-09-20 14:27:57	Olipro	So making this point to a different instance does nothing (except within the scope of the current method)
2016-09-20 14:28:13	<--	cobalt-red (~cobalt-re@pullup-55.dynamic2.rpi.edu) has quit (Ping timeout: 255 seconds)
2016-09-20 14:30:17	<--	ScorpionJack (~Scorpion@unaffiliated/scorpionjack) has quit (Quit: ScorpionJack)
2016-09-20 14:30:24	-->	bx2 (~bx2@46.140.123.246) has joined ##c++
2016-09-20 14:31:37	<--	cobalt-red-2 (~cobalt-re@paras-11.dynamic.rpi.edu) has quit (Quit: Leaving)
2016-09-20 14:32:39	<--	Gr33nW0lf (~Gr33nW0lf@189-92-116-77.3g.claro.net.br) has quit (Quit: Leaving...)
2016-09-20 14:32:39		[14:32]
2016-09-20 14:32:54	<--	DEElekgolo (~DEElekgol@2602:30a:2e0e:a7a0:75f0:b2c4:bdf4:c224) has quit (Read error: Connection reset by peer)
2016-09-20 14:33:15	-->	andyhuzhill (~Thunderbi@14.23.45.178) has joined ##c++
2016-09-20 14:34:21	<--	magnicida (~raskolnik@2a02:8109:8c80:231:ea39:dfff:fe4d:275b) has quit (Ping timeout: 265 seconds)
2016-09-20 14:34:45	<--	rbern (~rbern@unaffiliated/rbern) has quit (Read error: Connection reset by peer)
2016-09-20 14:35:24	<--	bx2 (~bx2@46.140.123.246) has quit (Ping timeout: 265 seconds)
2016-09-20 14:38:05	<--	andyhuzhill (~Thunderbi@14.23.45.178) has quit (Client Quit)
2016-09-20 14:38:12	-->	GranoblasticMan (~Granoblas@108.9.147.73) has joined ##c++
2016-09-20 14:39:01	<--	DingoSaar_ (~hagen@pD9E08F1B.dip0.t-ipconnect.de) has quit (Ping timeout: 255 seconds)
2016-09-20 14:39:49	--	You are now known as blue
2016-09-20 14:40:05	-->	DingoSaar_ (~hagen@pD9E08F1B.dip0.t-ipconnect.de) has joined ##c++
2016-09-20 14:40:19	--	You are now known as Guest66035
2016-09-20 14:40:43	<--	Lowl3v3l (~Lowl3v3l@ipservice-092-208-080-178.092.208.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2016-09-20 14:40:54	-->	bushido_ (~bushido@unaffiliated/bursihido) has joined ##c++
2016-09-20 14:41:05	<--	King_Hual (~failed@unaffiliated/king-hual/x-1207580) has quit (Read error: Connection reset by peer)
2016-09-20 14:41:12	--	You are now known as alyptik
2016-09-20 14:41:46	-->	andyhuzhill (~Thunderbi@14.23.45.178) has joined ##c++
2016-09-20 14:42:02	--	aceahmedmoh is now known as ________________
2016-09-20 14:42:09	<--	jaafar (~quassel@67.135.43.183) has quit (Ping timeout: 250 seconds)
2016-09-20 14:42:15	<--	________________ (~aceahmedm@unaffiliated/aceahmedmoh) has quit (Disconnected by services)
2016-09-20 14:42:34	-->	aceahmedmoh (~aceahmedm@104.131.98.28) has joined ##c++
2016-09-20 14:42:45	<--	aceahmedmoh (~aceahmedm@104.131.98.28) has quit (Changing host)
2016-09-20 14:42:45	-->	aceahmedmoh (~aceahmedm@unaffiliated/aceahmedmoh) has joined ##c++
2016-09-20 14:42:55	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 244 seconds)
2016-09-20 14:43:50	--	aceahmedmoh is now known as earlier
2016-09-20 14:43:59	-->	talisein (~talisein@april-fools/2013/sixth/talisein) has joined ##c++
2016-09-20 14:44:14	--	earlier is now known as santa463
2016-09-20 14:44:28	--	santa463 is now known as boon1
2016-09-20 14:44:29	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 14:44:41	--	boon1 is now known as w3rewolf
2016-09-20 14:44:57	-->	rbern (~rbern@unaffiliated/rbern) has joined ##c++
2016-09-20 14:45:43	<--	andreyv (~andrey@unaffiliated/andreyv) has quit (Ping timeout: 272 seconds)
2016-09-20 14:46:29	<--	Burgundy (~burgundy@86.121.178.118) has quit (Ping timeout: 250 seconds)
2016-09-20 14:46:33	<--	yokel (~yokel@unaffiliated/contempt) has quit (Ping timeout: 240 seconds)
2016-09-20 14:47:05	-->	yokel (~yokel@unaffiliated/contempt) has joined ##c++
2016-09-20 14:47:22	-->	andreyv (~andrey@unaffiliated/andreyv) has joined ##c++
2016-09-20 14:48:08	-->	skweek (~skweek@68-200-146-225.res.bhn.net) has joined ##c++
2016-09-20 14:48:08		[14:48]
2016-09-20 14:48:30	-->	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2016-09-20 14:48:59	-->	Girafferson (~Giraffers@2601:281:8001:663d:e234:b24c:6011:64f4) has joined ##c++
2016-09-20 14:49:24	<--	kimundi (~Kimundi@p57BC65CB.dip0.t-ipconnect.de) has quit (Ping timeout: 276 seconds)
2016-09-20 14:49:39	-->	a3f (~a3f@unaffiliated/a3f) has joined ##c++
2016-09-20 14:49:49	<--	SoundlesDev (~soundless@2601:282:8080:1267:1c70:8739:6e64:4a4c) has quit (Ping timeout: 255 seconds)
2016-09-20 14:50:36	<--	rbern (~rbern@unaffiliated/rbern) has quit (Read error: Connection reset by peer)
2016-09-20 14:51:11	-->	jxv (~jxv@cpe-108-185-163-38.socal.res.rr.com) has joined ##c++
2016-09-20 14:51:22	--	wolf_1 is now known as WHAT
2016-09-20 14:51:26	--	WHAT is now known as I
2016-09-20 14:51:27	--	I is now known as Guest78250
2016-09-20 14:51:33	--	Guest78250 is now known as WHAT
2016-09-20 14:51:37	--	WHAT is now known as wolf_1
2016-09-20 14:52:00	<--	josh (~josh@168.103.191.142) has quit (Ping timeout: 276 seconds)
2016-09-20 14:54:44	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 14:55:13	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 272 seconds)
2016-09-20 14:57:50	--	w3rewolf is now known as before
2016-09-20 14:57:52	--	before is now known as earlier
2016-09-20 14:58:32	--	earlier is now known as mussolini
2016-09-20 14:58:49	--	Maple__ is now known as visiting
2016-09-20 14:59:38	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 15:00:28	-->	rbern (~rbern@unaffiliated/rbern) has joined ##c++
2016-09-20 15:00:45	<--	darthdeus (~darthdeus@catsocket.com) has quit (Quit: ZNC - http://znc.in)
2016-09-20 15:00:49	-->	tesuji (~tesuji@unaffiliated/tesuji) has joined ##c++
2016-09-20 15:01:00	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 244 seconds)
2016-09-20 15:01:03	<--	tesuji_ (~tesuji@x2f64d17.dyn.telefonica.de) has quit (Ping timeout: 240 seconds)
2016-09-20 15:03:02	--	visiting is now known as votes
2016-09-20 15:03:11	<--	alexmh (~alex@c-67-166-124-41.hsd1.ut.comcast.net) has quit (Remote host closed the connection)
2016-09-20 15:03:11		[15:03]
2016-09-20 15:04:03	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 15:04:41	<--	andreyv (~andrey@unaffiliated/andreyv) has quit (Ping timeout: 248 seconds)
2016-09-20 15:04:42	-->	LBV_User (~leonardo@187.113.250.174) has joined ##c++
2016-09-20 15:05:09	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 244 seconds)
2016-09-20 15:05:48	<--	Tempesta (~Tempesta@unaffiliated/tempesta) has quit (Read error: Connection reset by peer)
2016-09-20 15:06:05	<--	yokel (~yokel@unaffiliated/contempt) has quit (Ping timeout: 260 seconds)
2016-09-20 15:06:05	-->	Tempesta (~Tempesta@121.131.185.96) has joined ##c++
2016-09-20 15:06:05	<--	Tempesta (~Tempesta@121.131.185.96) has quit (Changing host)
2016-09-20 15:06:05	-->	Tempesta (~Tempesta@unaffiliated/tempesta) has joined ##c++
2016-09-20 15:06:55	-->	blackbeard420 (~blackbear@dynamic-acs-24-154-82-158.zoominternet.net) has joined ##c++
2016-09-20 15:07:17	-->	Rudolf (~rodolfo@unaffiliated/rudolf) has joined ##c++
2016-09-20 15:07:56	-->	davidstone (~davidston@75-166-170-107.hlrn.qwest.net) has joined ##c++
2016-09-20 15:08:17	-->	uboot__ (~moon@x4dbaa774.dyn.telefonica.de) has joined ##c++
2016-09-20 15:08:37	<--	UnripeSuica_mobi (~UnlikeSui@147.47.143.179) has quit (Ping timeout: 265 seconds)
2016-09-20 15:10:04	<--	Karyon (~yaaic@unaffiliated/karyon) has quit (Ping timeout: 255 seconds)
2016-09-20 15:10:33	--	votes is now known as Maple__
2016-09-20 15:10:38	<--	sctt (~sctt@95.143.195.43) has quit (Remote host closed the connection)
2016-09-20 15:10:47	-->	zmack (~zmack@pool-72-74-144-215.bstnma.fios.verizon.net) has joined ##c++
2016-09-20 15:10:54	-->	andreyv (~andrey@unaffiliated/andreyv) has joined ##c++
2016-09-20 15:11:20	-->	taj (~gh0st@a89-154-145-32.cpe.netcabo.pt) has joined ##c++
2016-09-20 15:11:27	-->	hyacinth (~yhyacinth@61.111.255.109) has joined ##c++
2016-09-20 15:11:55	<--	uboot_ (~moon@x4e34ba26.dyn.telefonica.de) has quit (Ping timeout: 260 seconds)
2016-09-20 15:12:31	-->	yokel (~yokel@unaffiliated/contempt) has joined ##c++
2016-09-20 15:12:55	<--	zmack (~zmack@pool-72-74-144-215.bstnma.fios.verizon.net) has quit (Client Quit)
2016-09-20 15:12:56	<--	deselect (~deselect@188.123.241.122) has quit (Ping timeout: 265 seconds)
2016-09-20 15:13:19	-->	divno (~divno@unaffiliated/divno) has joined ##c++
2016-09-20 15:13:42	<--	EvilPeng1 (~EvilPengu@bur-inet-pa-4.disney.com) has quit (Ping timeout: 264 seconds)
2016-09-20 15:13:47	--	mussolini is now known as sidnota
2016-09-20 15:14:12	--	wolf_1 is now known as sid-nata
2016-09-20 15:15:01	-->	zmack (~zmack@pool-72-74-144-215.bstnma.fios.verizon.net) has joined ##c++
2016-09-20 15:16:09	--	sidnota is now known as GreatLeader
2016-09-20 15:16:27	--	GreatLeader is now known as sidnota
2016-09-20 15:16:48	divno	What uses linux/bpf.h, keep getting no such file/directory?
2016-09-20 15:19:03	<--	zmack (~zmack@pool-72-74-144-215.bstnma.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-20 15:19:03		[15:19]
2016-09-20 15:19:54	-->	f0g (~fog_proxy@117.82.97.198) has joined ##c++
2016-09-20 15:19:56	-->	UnlikeSuika_mobi (~UnlikeSui@223.38.8.129) has joined ##c++
2016-09-20 15:20:48	-->	zmack (~zmack@pool-72-74-144-215.bstnma.fios.verizon.net) has joined ##c++
2016-09-20 15:21:05	<--	UnlikeSuika_mobi (~UnlikeSui@223.38.8.129) has quit (Client Quit)
2016-09-20 15:21:17	-->	UnlikeSuika_mobi (~UnlikeSui@147.47.143.179) has joined ##c++
2016-09-20 15:21:18	-->	Vingador (~quassel@177.40.255.237) has joined ##c++
2016-09-20 15:22:24	<--	a3f (~a3f@unaffiliated/a3f) has quit (Read error: Connection reset by peer)
2016-09-20 15:22:46	-->	Kn|t3 (~agarwalvi@49.207.53.8) has joined ##c++
2016-09-20 15:22:47	-->	vralphv (~vralp@d137-186-58-40.abhsia.telus.net) has joined ##c++
2016-09-20 15:23:02	<--	iamthad (~iamthad@cpe-70-112-32-152.austin.res.rr.com) has quit (Quit: ZNC - http://znc.in)
2016-09-20 15:23:21	<--	zmack (~zmack@pool-72-74-144-215.bstnma.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-20 15:28:00	<--	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has quit (Read error: Connection reset by peer)
2016-09-20 15:28:01	<--	vitimiti (~vitimiti@unaffiliated/vitimiti) has quit (Quit: Meows out)
2016-09-20 15:29:16	-->	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has joined ##c++
2016-09-20 15:29:23	-->	UnripeSuica_mobi (~UnlikeSui@223.38.8.129) has joined ##c++
2016-09-20 15:29:31	-->	Zxpr1jk (~zxpr1jk@24.214.61.47) has joined ##c++
2016-09-20 15:29:36	--	sid-nata is now known as wolf_1
2016-09-20 15:29:42	--	sidnota is now known as mussolini
2016-09-20 15:30:39	--	wolf_1 is now known as leading
2016-09-20 15:31:32	-->	CEnnis91 (uid3543@gateway/web/irccloud.com/x-werqhxviyagtnjhn) has joined ##c++
2016-09-20 15:32:58	-->	sctt (~sctt@209.58.130.151) has joined ##c++
2016-09-20 15:33:00	<--	sctt (~sctt@209.58.130.151) has quit (Max SendQ exceeded)
2016-09-20 15:33:36	<--	UnlikeSuika_mobi (~UnlikeSui@147.47.143.179) has quit (Ping timeout: 276 seconds)
2016-09-20 15:34:47	-->	zwliew (uid161395@gateway/web/irccloud.com/x-gqokgttzrgfumlsx) has joined ##c++
2016-09-20 15:34:47		[15:34]
2016-09-20 15:35:00	-->	iamthad (~iamthad@cpe-70-112-32-152.austin.res.rr.com) has joined ##c++
2016-09-20 15:35:35	-->	Stanley00 (~Stanley_0@unaffiliated/stanley00) has joined ##c++
2016-09-20 15:37:31	<--	f10 (~flo@2001:470:52af:1:59b:9657:6ac8:c864) has quit (Ping timeout: 255 seconds)
2016-09-20 15:37:31	<--	f10_ (~flo@2001:470:52af:1:242c:2fc9:d40d:50d3) has quit (Ping timeout: 255 seconds)
2016-09-20 15:38:11	-->	philipp_ (~philipp@p4FFF74E1.dip0.t-ipconnect.de) has joined ##c++
2016-09-20 15:38:14	-->	pulkit (uid186196@gateway/web/irccloud.com/x-tdrpqrbhhaussmyl) has joined ##c++
2016-09-20 15:40:12	<--	Kn|t3 (~agarwalvi@49.207.53.8) has quit (Quit: Kn|t3)
2016-09-20 15:41:33	<--	the_abra (~philipp@p4FFF5A52.dip0.t-ipconnect.de) has quit (Ping timeout: 240 seconds)
2016-09-20 15:42:24	<--	regedit (uid150526@gateway/web/irccloud.com/x-nhtfbfzrsinugzwn) has quit (Quit: Connection closed for inactivity)
2016-09-20 15:44:48	<--	NeXTSUN (~textual@2601:83:8100:42cf:68da:e8f9:3da0:43bf) has quit (Quit: My iMac has gone to sleep. ZZZzzz…)
2016-09-20 15:44:54	-->	arescorpio (~arescorpi@221-27-245-190.fibertel.com.ar) has joined ##c++
2016-09-20 15:45:03	<--	BustyLoliChan (~BustyLoli@2601:680:c201:cd2:9d7b:c0ee:369c:2d56) has quit (Read error: Connection reset by peer)
2016-09-20 15:45:11	-->	Panthro (~cplusplus@65-102-183-128.tukw.qwest.net) has joined ##c++
2016-09-20 15:45:30	-->	BustyLoliChan (~BustyLoli@2601:680:c201:cd2:6043:8568:1fe6:1bcc) has joined ##c++
2016-09-20 15:45:40	 *	Panthro grabs BustyLoliChan 
2016-09-20 15:45:45	-->	Kn|t3 (~agarwalvi@49.207.53.8) has joined ##c++
2016-09-20 15:46:02	Panthro	today I just confirmed that the gaming community sucks a lot
2016-09-20 15:46:13	Panthro	watched the cppcon presentation from the guy from Blizzard
2016-09-20 15:46:18	Panthro	they are soo behind
2016-09-20 15:46:35	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 15:46:58	<--	theOneWho (~tom@95.166.79.163) has quit (Ping timeout: 255 seconds)
2016-09-20 15:47:09	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 272 seconds)
2016-09-20 15:47:27	-->	fog_proxy (~fog_proxy@117.82.97.198) has joined ##c++
2016-09-20 15:47:28	-->	theOneWho (~tom@95.166.79.163) has joined ##c++
2016-09-20 15:49:06	ubsan	Panthro: ?
2016-09-20 15:49:19	<--	Kn|t3 (~agarwalvi@49.207.53.8) has quit (Client Quit)
2016-09-20 15:49:34	-->	Jiggunjer (~Jiggunjer@unaffiliated/jiggunjer) has joined ##c++
2016-09-20 15:49:37	Panthro	the gaming community don't go along well with stdlib and such
2016-09-20 15:50:24	Panthro	constrained environments, lots of 3rd party libraries which are also behind, etc
2016-09-20 15:50:24		[15:50]
2016-09-20 15:50:26	ubsan	well, the stdlib isn't great for gaming, I'd argue
2016-09-20 15:50:36	<--	f0g (~fog_proxy@117.82.97.198) has quit (Ping timeout: 244 seconds)
2016-09-20 15:50:41	Panthro	it can be
2016-09-20 15:51:04	-->	fr (~fr@pD9577FC6.dip0.t-ipconnect.de) has joined ##c++
2016-09-20 15:51:12	<--	ibouvousaime (~ibouvousa@41.82.193.77) has quit (Ping timeout: 265 seconds)
2016-09-20 15:51:38	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 244 seconds)
2016-09-20 15:52:05	ubsan	Panthro: maybe like, std::vector and stuff
2016-09-20 15:52:06	<--	skweek (~skweek@68-200-146-225.res.bhn.net) has quit (Ping timeout: 265 seconds)
2016-09-20 15:52:11	ubsan	but a lot of it isn't
2016-09-20 15:52:32	Panthro	at least they admitted they could be using more <algorithms>
2016-09-20 15:52:33	ubsan	it's a lot of bloat
2016-09-20 15:52:48	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 15:52:50	Panthro	why bloat?
2016-09-20 15:53:06	-->	Ropeney (~Ropeney@tank.mindvision.com.au) has joined ##c++
2016-09-20 15:53:21	Panthro	they cover the average use cases. they can be tailored for gaming needs
2016-09-20 15:53:35	Panthro	and we will be getting flat_map soon :)))
2016-09-20 15:53:39	davidstone	yeah?
2016-09-20 15:53:43	davidstone	Is there a proposal for that?
2016-09-20 15:53:43	<--	Girafferson (~Giraffers@2601:281:8001:663d:e234:b24c:6011:64f4) has quit (Quit: Leaving)
2016-09-20 15:53:47	Panthro	yeah
2016-09-20 15:53:56	ubsan	Panthro: like, you're including a lot of things that you don't need for the few things that you do
2016-09-20 15:54:14	<--	navidr (uid112413@gateway/web/irccloud.com/x-fzumgbqjryjzeppb) has quit (Quit: Connection closed for inactivity)
2016-09-20 15:54:16	davidstone	What do you mean by "including"?
2016-09-20 15:54:17	<--	fr_ (~fr@pD9577B41.dip0.t-ipconnect.de) has quit (Ping timeout: 248 seconds)
2016-09-20 15:54:21	davidstone	Are you worried about compile / link times?
2016-09-20 15:54:28	ubsan	I guess it's less of a problem due to shared-object-ness
2016-09-20 15:54:31	<--	fstd (~fstd@unaffiliated/fisted) has quit (Read error: Connection reset by peer)
2016-09-20 15:54:43	-->	fstd (~fstd@unaffiliated/fisted) has joined ##c++
2016-09-20 15:55:42	<--	andyhuzhill (~Thunderbi@14.23.45.178) has quit (Ping timeout: 264 seconds)
2016-09-20 15:57:13	<--	Haruno (~Haruno@unaffiliated/haruno) has quit (Quit: Leaving)
2016-09-20 15:57:17	<--	Vincent7 (~NoIdent@dslb-088-077-121-042.088.077.pools.vodafone-ip.de) has quit (Ping timeout: 272 seconds)
2016-09-20 15:59:29	ubsan	is this accurate:
2016-09-20 15:59:36	ubsan	auto foo = [expr]; is equivalent to std::remove_reference_t<decltype([expr])> foo = [expr];
2016-09-20 16:00:06	-->	UnlikeSuika (~UnlikeSui@1.211.97.243) has joined ##c++
2016-09-20 16:00:10	davidstone	No
2016-09-20 16:00:12	-->	FreeBirdLjj (~freebirdl@218.94.142.81) has joined ##c++
2016-09-20 16:00:22	davidstone	It's equivalent to std::decay_t<decltype([expr])>
2016-09-20 16:00:28	ubsan	ah
2016-09-20 16:00:33	davidstone	To see how this matters, make [expr] "Hello"
2016-09-20 16:00:38	-->	Nilesh_ (uid116340@gateway/web/irccloud.com/x-biufiepblignarjk) has joined ##c++
2016-09-20 16:00:44	davidstone	decltype("Hello") is char const (&)[6]
2016-09-20 16:00:51	davidstone	But the type deduced in auto foo is char const *
2016-09-20 16:01:22	introom	T var = {}.  is this form `list initialization' or `value initiliazation' ?
2016-09-20 16:01:29	<--	Vingador (~quassel@177.40.255.237) has quit (Remote host closed the connection)
2016-09-20 16:01:56	davidstone	introom, Is T default constructible?
2016-09-20 16:01:58	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 244 seconds)
2016-09-20 16:02:15	-->	ScorpionJack (~Scorpion@unaffiliated/scorpionjack) has joined ##c++
2016-09-20 16:02:21	davidstone	That code might be calling default constructor, but it might be calling an initializer_list constructor
2016-09-20 16:02:43	davidstone	If T is not default constructible, it tries instead to call the initializer_list version (default constructors have a higher priority)
2016-09-20 16:03:18	<--	Panthro (~cplusplus@65-102-183-128.tukw.qwest.net) has quit (Quit: This computer has gone to sleep)
2016-09-20 16:03:42	-->	araml (~araml@unaffiliated/araml) has joined ##c++
2016-09-20 16:03:48	davidstone	Assuming you have a default constructor, that is value initialization
2016-09-20 16:03:50	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 16:04:10	davidstone	Actually let me check on that
2016-09-20 16:04:52	-->	PauDoido (~cplusplus@65-102-183-128.tukw.qwest.net) has joined ##c++
2016-09-20 16:05:56	-->	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has joined ##c++
2016-09-20 16:05:56		[16:05]
2016-09-20 16:06:02	davidstone	I guess it's both
2016-09-20 16:06:33	w3z	ubsan wth syntax is that ...
2016-09-20 16:06:35	<--	m_ben (~m_ben@unaffiliated/m-ben/x-5917362) has quit (Ping timeout: 265 seconds)
2016-09-20 16:06:51	davidstone	I think the brackets were just to set off some expression
2016-09-20 16:06:53	davidstone	Not literal brackets
2016-09-20 16:06:53	-->	UnripeSuica (~UnlikeSui@1.211.97.243) has joined ##c++
2016-09-20 16:06:58	ubsan	w3z: ^
2016-09-20 16:07:04	<--	UnlikeSuika (~UnlikeSui@1.211.97.243) has quit (Ping timeout: 265 seconds)
2016-09-20 16:07:14	davidstone	For a second I was like "Is this some aspect of structured binding that I didn't know about?"
2016-09-20 16:07:24	ubsan	lol
2016-09-20 16:07:33	-->	zap0 (~moofy@14-201-222-143.tpgi.com.au) has joined ##c++
2016-09-20 16:07:48	<--	PauDoido (~cplusplus@65-102-183-128.tukw.qwest.net) has quit (Client Quit)
2016-09-20 16:07:57	introom	davidstone: to call `initializer_list', I guess the {} mustn't be empty.
2016-09-20 16:08:07	davidstone	introom, Not quite
2016-09-20 16:08:11	w3z	also, you missed the case of aggregate initialization
2016-09-20 16:08:35	ubsan	w3z: isn't that usually an error?
2016-09-20 16:08:53	w3z	? no
2016-09-20 16:09:02	ubsan	auto x = {1, 2};
2016-09-20 16:09:10	w3z	not you
2016-09-20 16:09:17	ubsan	oh, lol
2016-09-20 16:09:39	-->	PauDoido (~cplusplus@65-102-183-128.tukw.qwest.net) has joined ##c++
2016-09-20 16:09:52	w3z	your snippet is obviously an initializer_list<int>
2016-09-20 16:10:00	ubsan	w3z: but it's an error
2016-09-20 16:10:07	ubsan	{ auto x = {1, 2}; }
2016-09-20 16:10:08	geordi	<no output>
2016-09-20 16:10:14	ubsan	or... should be
2016-09-20 16:10:14	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 244 seconds)
2016-09-20 16:10:16	w3z	why would it be ...
2016-09-20 16:10:30	davidstone	introom, If the type is not default constructible, it will call the initializer_list. You can also add another set of braces
2016-09-20 16:10:37	-->	Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2016-09-20 16:10:40	ubsan	w3z: someone was annoyed about it
2016-09-20 16:10:49	davidstone	T var = {{}} // always calls initializer_list constructor instead of default constructor
2016-09-20 16:10:58	w3z	<<TYPE(x); auto x={1,2};
2016-09-20 16:10:59	geordi	lvalue initializer_list<int>
2016-09-20 16:11:01	ubsan	wanted auto x = {0}; to be equivalent to auto x{0};
2016-09-20 16:11:15	-->	andyhuzhill (~Thunderbi@14.23.45.178) has joined ##c++
2016-09-20 16:11:33	ubsan	geordi: --clang { auto x = {1,2}; }
2016-09-20 16:11:33	geordi	warning: Value stored to 'x' during its initialization is never read
2016-09-20 16:11:34	-->	Girafferson (~Giraffers@2601:281:8001:663d:e234:b24c:6011:64f4) has joined ##c++
2016-09-20 16:12:17	w3z	auto x{0} is int, auto x={0}; is initializer_list<int>
2016-09-20 16:12:33	w3z	again davdistone, youre overtstating
2016-09-20 16:12:36	<--	ap4y (~user@210.54.39.82) has quit (Ping timeout: 276 seconds)
2016-09-20 16:12:59	davidstone	I don't mean to imply that {{}} will always be an initializer_list ocnstructro
2016-09-20 16:13:03	davidstone	I can see how that would be unclear
2016-09-20 16:13:04	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 16:13:09	davidstone	I am saying it will call that instead of the default
2016-09-20 16:13:28	w3z	{} struct T{T()=delete;}; T t={};
2016-09-20 16:13:29	geordi	<no output>
2016-09-20 16:13:37	w3z	aggregate initialization ^
2016-09-20 16:13:49	w3z	no default, no initializer_list
2016-09-20 16:14:02	<--	gist (~jack@p5B1053A0.dip0.t-ipconnect.de) has quit (Ping timeout: 244 seconds)
2016-09-20 16:14:20	introom	davidstone: I tested it, but I am wondering how come {{}} calls the initializer_list ctor ?
2016-09-20 16:14:30	w3z	{} struct B{}; struct T:B{T()=delete;}; T t={{}};
2016-09-20 16:14:30	geordi	error: could not convert '{<brace-enclosed initializer list>()}' from '<brace-enclosed initializer list>' to 'T'
2016-09-20 16:14:36	w3z	geordi: use --clang
2016-09-20 16:14:37	geordi	<no output>
2016-09-20 16:14:47	w3z	base initialization
2016-09-20 16:15:00	w3z	(that ones new)
2016-09-20 16:16:12	introom	davidstone: I got it.
2016-09-20 16:16:57	<--	kaldoran (~kaldoran@cable-192.222.223.163.electronicbox.net) has quit (Ping timeout: 244 seconds)
2016-09-20 16:18:22	-->	bx2 (~bx2@46.140.123.246) has joined ##c++
2016-09-20 16:19:02	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 16:19:32	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 244 seconds)
2016-09-20 16:19:38	<--	UnripeSuica (~UnlikeSui@1.211.97.243) has quit (Ping timeout: 265 seconds)
2016-09-20 16:20:11	<--	Markow (~Markow@176.122.215.103) has quit (Remote host closed the connection)
2016-09-20 16:20:19	-->	corsaere (~corsaere@unaffiliated/corsaere) has joined ##c++
2016-09-20 16:20:19	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-20 16:21:17	PauDoido	{ auto x = {1,1.}; }
2016-09-20 16:21:17		[16:21]
2016-09-20 16:21:18	geordi	error: unable to deduce 'initializer_list<auto>' from '{1, 1.0e+0}'
2016-09-20 16:21:20	PauDoido	:)
2016-09-20 16:21:49	<--	LBV_User (~leonardo@187.113.250.174) has quit (Quit: Konversation terminated!)
2016-09-20 16:21:58	<--	de-facto (~de-facto@unaffiliated/de-facto) has quit (Quit: Leaving)
2016-09-20 16:21:59	<--	snover (~Adium@unaffiliated/snover) has quit (Quit: Leaving.)
2016-09-20 16:23:07	<--	bx2 (~bx2@46.140.123.246) has quit (Ping timeout: 250 seconds)
2016-09-20 16:23:14	-->	AndyBotwin (~Gustavo@unaffiliated/andybotwin) has joined ##c++
2016-09-20 16:24:30	PauDoido	yum yum yum
2016-09-20 16:24:38	 *	PauDoido eating free food in the cppcon happy hour
2016-09-20 16:25:06	 *	ubsan jealous
2016-09-20 16:26:59	-->	Thorn__ (~Thorn@unaffiliated/thorn) has joined ##c++
2016-09-20 16:27:20	-->	f0g (~fog_proxy@117.82.97.198) has joined ##c++
2016-09-20 16:27:28	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-20 16:28:47	-->	andyhuzhill1 (~Thunderbi@14.23.45.178) has joined ##c++
2016-09-20 16:28:57	<--	andyhuzhill (~Thunderbi@14.23.45.178) has quit (Ping timeout: 272 seconds)
2016-09-20 16:28:58	--	andyhuzhill1 is now known as andyhuzhill
2016-09-20 16:29:11	<--	ExeciN (~nicexe@bnc.stormbit.net) has quit (Ping timeout: 250 seconds)
2016-09-20 16:29:29	<--	fog_proxy (~fog_proxy@117.82.97.198) has quit (Ping timeout: 240 seconds)
2016-09-20 16:29:30	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-20 16:30:13	<--	CtrlC (~CtrlC@unaffiliated/ctrlc) has quit (Ping timeout: 272 seconds)
2016-09-20 16:30:44	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 16:30:52	<--	Thorn (~Thorn@unaffiliated/thorn) has quit (Ping timeout: 272 seconds)
2016-09-20 16:31:25	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 244 seconds)
2016-09-20 16:31:46	-->	UnlikeSuika (~UnlikeSui@1.211.97.242) has joined ##c++
2016-09-20 16:31:50	-->	CtrlC (~CtrlC@unaffiliated/ctrlc) has joined ##c++
2016-09-20 16:32:07	<--	CaptainPi (~edx@dslb-188-099-059-189.188.099.pools.vodafone-ip.de) has quit (Ping timeout: 272 seconds)
2016-09-20 16:32:09	<--	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has quit (Ping timeout: 248 seconds)
2016-09-20 16:32:40	-->	CaptainPi (~edx@dslb-188-099-058-033.188.099.pools.vodafone-ip.de) has joined ##c++
2016-09-20 16:33:42	<--	nilof (~saolof@92-32-80-134.tn.glocalnet.net) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-09-20 16:34:14	-->	Zxpr2jk (~zxpr1jk@24.214.61.47) has joined ##c++
2016-09-20 16:35:19	<--	PauDoido (~cplusplus@65-102-183-128.tukw.qwest.net) has quit (Quit: Leaving)
2016-09-20 16:36:06	-->	guest6629 (~user@211.82.242.62) has joined ##c++
2016-09-20 16:36:35	<--	Zxpr1jk (~zxpr1jk@24.214.61.47) has quit (Ping timeout: 244 seconds)
2016-09-20 16:36:35		[16:36]
2016-09-20 16:37:25	-->	Zxpr1jk (~zxpr1jk@24.214.61.47) has joined ##c++
2016-09-20 16:39:08	w3z	theres nothing surprising about that, obviously all the elements of an initialzier_list have to be the same type
2016-09-20 16:39:12	w3z	{initializer_list<int> I={0,0.};}
2016-09-20 16:39:12	geordi	error: narrowing conversion of '0.0' from 'double' to 'int' inside { }
2016-09-20 16:39:25	-->	fog_proxy (~fog_proxy@117.82.97.198) has joined ##c++
2016-09-20 16:40:06	<--	Zxpr2jk (~zxpr1jk@24.214.61.47) has quit (Ping timeout: 264 seconds)
2016-09-20 16:40:36	w3z	{initializer_list<int> I={0,S{}};}  struct S{operator int(){return 0;}}; //may be a little surprising if you havent seen it before
2016-09-20 16:40:36	geordi	<no output>
2016-09-20 16:41:11	w3z	(and will of course fail in the auto deduction case)
2016-09-20 16:41:43	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 16:42:16	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 244 seconds)
2016-09-20 16:42:33	<--	f0g (~fog_proxy@117.82.97.198) has quit (Ping timeout: 240 seconds)
2016-09-20 16:44:00	-->	UnripeSuica (~UnlikeSui@1.211.97.242) has joined ##c++
2016-09-20 16:44:31	-->	jshjsh (~jshjsh@mc00536d0.tmodns.net) has joined ##c++
2016-09-20 16:44:59	<--	FreeBirdLjj (~freebirdl@218.94.142.81) has quit (Remote host closed the connection)
2016-09-20 16:45:16	ubsan	w3z: https://imgur.com/a/wAWoB
2016-09-20 16:45:20	ubsan	see slide 31
2016-09-20 16:45:23	<--	neurodrone (~neurodron@unaffiliated/neurodrone) has quit (Quit: neurodrone)
2016-09-20 16:45:36	ubsan	that's what I was thinking of
2016-09-20 16:47:24	w3z	that quote is wrong, it was popularized by voltaire
2016-09-20 16:47:30	<--	UnlikeSuika (~UnlikeSui@1.211.97.242) has quit (Ping timeout: 240 seconds)
2016-09-20 16:47:40	<--	JoshS (~jshjsh@mc00536d0.tmodns.net) has quit (Ping timeout: 265 seconds)
2016-09-20 16:47:50	w3z	and its even older in italian
2016-09-20 16:48:10	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 255 seconds)
2016-09-20 16:48:14	<--	lakin (~lakin@d108-173-185-33.abhsia.telus.net) has quit (Remote host closed the connection)
2016-09-20 16:48:17	ubsan	?
2016-09-20 16:48:33	<--	akaWolf (~akaWolf@unaffiliated/akawolf) has quit (Ping timeout: 240 seconds)
2016-09-20 16:49:19	w3z	perfect is the enemy of the good
2016-09-20 16:49:23	ubsan	o
2016-09-20 16:49:25	-->	ASOLAr (~ACSolar@c-50-164-207-99.hsd1.ma.comcast.net) has joined ##c++
2016-09-20 16:49:26	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 16:49:41	w3z	https://en.wikipedia.org/wiki/Perfect_is_the_enemy_of_good
2016-09-20 16:50:00	w3z	they have a paraphrase of it attributed to morgan stanley pff
2016-09-20 16:50:41	<--	Magnetar (~Mike@pool-108-48-114-242.washdc.fios.verizon.net) has quit (Ping timeout: 240 seconds)
2016-09-20 16:50:52	w3z	whose presentation is this meyers?
2016-09-20 16:50:56	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-20 16:51:37	w3z	oh hah, they werent attributing it to morgan stanley, its a presentation for morgan stanley :)
2016-09-20 16:51:37		[16:51]
2016-09-20 16:51:49	w3z	its bjarne
2016-09-20 16:51:58	w3z	and he works there now :)
2016-09-20 16:52:41	w3z	i thought that picture of "morgan stanley" looked foofy :)
2016-09-20 16:52:41	-->	UptightSuika (~UnlikeSui@1.211.97.243) has joined ##c++
2016-09-20 16:52:43	-->	Carbonflux (~Bob@71-35-165-133.tukw.qwest.net) has joined ##c++
2016-09-20 16:53:01	<--	dj_pi (~dj@c-73-191-212-56.hsd1.mi.comcast.net) has quit (Ping timeout: 272 seconds)
2016-09-20 16:53:18	<--	jshjsh (~jshjsh@mc00536d0.tmodns.net) has quit (Quit: Leaving)
2016-09-20 16:53:22	<--	ASOLAr (~ACSolar@c-50-164-207-99.hsd1.ma.comcast.net) has quit (Client Quit)
2016-09-20 16:53:24	<--	go1111111 (~go1111111@104.232.116.217) has quit (Quit: Leaving)
2016-09-20 16:53:27	<--	chachasmooth (~chachasmo@unaffiliated/chachasmooth) has quit (Ping timeout: 250 seconds)
2016-09-20 16:53:47	<--	hexagoxel (~hexagoxel@p5B29A1D8.dip0.t-ipconnect.de) has quit (Ping timeout: 244 seconds)
2016-09-20 16:53:49	w3z	he has a divinci drawing in there too, getting all cultured in nyc
2016-09-20 16:55:18	-->	hexagoxel (~hexagoxel@p200300798F20DD00021E33FFFE2231E9.dip0.t-ipconnect.de) has joined ##c++
2016-09-20 16:55:58	-->	chachasmooth (~chachasmo@unaffiliated/chachasmooth) has joined ##c++
2016-09-20 16:56:01	w3z	sounds like hes a bit fed up with the committee too
2016-09-20 16:56:24	<--	UnripeSuica (~UnlikeSui@1.211.97.242) has quit (Ping timeout: 244 seconds)
2016-09-20 16:56:31	<--	fahadash (uid44972@gateway/web/irccloud.com/x-bacrvibucqgondbt) has quit (Quit: Connection closed for inactivity)
2016-09-20 16:56:34	<--	NeoGeo64 (~linux@2604:2d80:881a:0:b4a3:be16:d6fd:8559) has quit (Remote host closed the connection)
2016-09-20 16:57:33	-->	Ben2560 (~quassel@137.154.246.226) has joined ##c++
2016-09-20 16:58:32	w3z	i wonder what generalized initializer_list as a 17 feature is talking about
2016-09-20 17:00:19	<--	UptightSuika (~UnlikeSui@1.211.97.243) has quit (Ping timeout: 265 seconds)
2016-09-20 17:00:51	<--	guest6629 (~user@211.82.242.62) has quit (Remote host closed the connection)
2016-09-20 17:02:10	-->	SwiftMatt (~Objective@130.253.27.194) has joined ##c++
2016-09-20 17:03:30	<--	re1 (~reiser@178.220.4.176) has quit (Read error: Connection reset by peer)
2016-09-20 17:03:45	<--	Mike11 (~Mike@unaffiliated/mike11) has quit (Quit: Leaving.)
2016-09-20 17:03:51	-->	Tempesta_ (~Tempesta@121.131.185.96) has joined ##c++
2016-09-20 17:03:57	-->	Gluesticky (~nobody@unaffiliated/gluesticky) has joined ##c++
2016-09-20 17:04:22	-->	ferdna (~ferdna@cpe-69-23-141-130.elp.res.rr.com) has joined ##c++
2016-09-20 17:04:48	w3z	anyway, yawnfest slideshow
2016-09-20 17:05:11	<--	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has quit (Read error: Connection reset by peer)
2016-09-20 17:05:40	-->	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2016-09-20 17:05:48	-->	re1 (~reiser@178.220.4.176) has joined ##c++
2016-09-20 17:06:58	<--	Tempesta (~Tempesta@unaffiliated/tempesta) has quit (Ping timeout: 272 seconds)
2016-09-20 17:06:58		[17:06]
2016-09-20 17:07:34	w3z	did you see the final state of the array initializer i was tinkering with ubsan? there was an error in it that showed up when i did an optimized build (fixed now)
2016-09-20 17:07:50	-->	FreeBirdLjj (~freebirdl@202.119.46.192) has joined ##c++
2016-09-20 17:08:44	-->	SoundlesDev (~soundless@2601:282:8080:1267:1c70:8739:6e64:4a4c) has joined ##c++
2016-09-20 17:09:23	<--	corsaere (~corsaere@unaffiliated/corsaere) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-09-20 17:10:31	<--	jbud (~jbud@ip-24-54-73-229.user.start.ca) has quit (Quit: leaving)
2016-09-20 17:10:41	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 244 seconds)
2016-09-20 17:11:34	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-20 17:11:54	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 17:12:08	-->	c0le (~c0le@59.99.251.45) has joined ##c++
2016-09-20 17:12:09	-->	serpentes (~serpentes@97-122-182-219.hlrn.qwest.net) has joined ##c++
2016-09-20 17:12:48	<--	serpentes (~serpentes@97-122-182-219.hlrn.qwest.net) has left ##c++
2016-09-20 17:13:56	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-20 17:14:19	<--	BaneAliens (uid112512@gateway/web/irccloud.com/x-jeghfhykblifmukg) has quit (Quit: Connection closed for inactivity)
2016-09-20 17:14:46	<--	wilx (wilx@27.228.broadband3.iol.cz) has quit (Ping timeout: 265 seconds)
2016-09-20 17:15:10	-->	NeoGeo64 (~linux@2604:2d80:881a:0:b4a3:be16:d6fd:8559) has joined ##c++
2016-09-20 17:15:20	-->	f3r70rr35f (~fernando@186-105-109-211.baf.movistar.cl) has joined ##c++
2016-09-20 17:15:25	-->	QwertyDragon (~QwertyDra@pool-173-76-128-189.bstnma.fios.verizon.net) has joined ##c++
2016-09-20 17:15:52	-->	chaos7theory (~darth@75-167-23-45.phnx.qwest.net) has joined ##c++
2016-09-20 17:16:29	-->	wilx (wilx@27.228.broadband3.iol.cz) has joined ##c++
2016-09-20 17:17:43	-->	Kn|t3 (~agarwalvi@104.132.196.76) has joined ##c++
2016-09-20 17:19:22	introom	how to handily generate a string based on a format, e.g., "%s %d %s" ?
2016-09-20 17:20:01	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-20 17:20:10	w3z	boost.format
2016-09-20 17:20:11	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 17:20:21	-->	corsaere (~corsaere@unaffiliated/corsaere) has joined ##c++
2016-09-20 17:20:26	w3z	http://www.boost.org/doc/libs/1_61_0/libs/format/
2016-09-20 17:21:33	w3z	or if you insist snprintf variants
2016-09-20 17:23:40	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-20 17:23:40		[17:23]
2016-09-20 17:24:11	-->	ExeciN (~nicexe@bnc.stormbit.net) has joined ##c++
2016-09-20 17:25:49	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-20 17:26:17	<--	UnripeSuica_mobi (~UnlikeSui@223.38.8.129) has quit (Quit: RIP)
2016-09-20 17:26:30	-->	UnlikeSuika_mobi (~UnlikeSui@147.47.141.16) has joined ##c++
2016-09-20 17:27:01	introom	w3z: thanks.
2016-09-20 17:27:52	<--	iik (~IIK@staticline-31-183-46-69.toya.net.pl) has quit (Ping timeout: 265 seconds)
2016-09-20 17:29:07	<--	codercodi (~codercodi@108-192-148-40.lightspeed.gnvlsc.sbcglobal.net) has quit (Ping timeout: 255 seconds)
2016-09-20 17:30:33	-->	josef_k (~Jeremy@210-10-222-98.mel.static-ipl.aapt.com.au) has joined ##c++
2016-09-20 17:32:46	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-20 17:33:35	-->	xaxxon (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has joined ##c++
2016-09-20 17:35:07	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-20 17:35:26	-->	jbit (~jbit@unaffiliated/jbit) has joined ##c++
2016-09-20 17:35:52	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-20 17:37:25	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-20 17:37:48	<--	CEnnis91 (uid3543@gateway/web/irccloud.com/x-werqhxviyagtnjhn) has quit (Quit: Connection closed for inactivity)
2016-09-20 17:38:13	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-20 17:38:22	<--	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has quit (Read error: Connection reset by peer)
2016-09-20 17:38:22	jbit	Does anybody know of a tool that'll rearrange definitions in a cpp file to match the order they're declared in? For example if my header has a "class Foo { void a(); void b(); void c()}", i'd like the tool to ensure that the definitions in the cpp file are "void Foo::a() {} void Foo::b() {} void Foo::c() {}"
2016-09-20 17:39:38	-->	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has joined ##c++
2016-09-20 17:39:38		[17:39]
2016-09-20 17:41:04	w3z	!give jbit general
2016-09-20 17:41:06	nolyc	jbit: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2016-09-20 17:41:43	-->	rsampaio_ (~rodrigo@2601:643:8200:a3f0::f927) has joined ##c++
2016-09-20 17:41:46	jbit	w3z: ah, thanks!
2016-09-20 17:42:16	w3z	youre off-topic here, but you can try clang tidy, if that doesnt cut it, you can build your own code transformation tool with their api
2016-09-20 17:45:22	w3z	so i think i like hs_'s expansion better than my identity pass through expansion helper
2016-09-20 17:45:57	<--	leading (~wolf_1@unaffiliated/deerdidlydong) has quit (Quit: ZNC - http://znc.in)
2016-09-20 17:45:57	<--	mussolini (~aceahmedm@unaffiliated/aceahmedmoh) has quit (Quit: ZNC - http://znc.in)
2016-09-20 17:46:36	-->	codercodi (~codercodi@108-192-148-40.lightspeed.gnvlsc.sbcglobal.net) has joined ##c++
2016-09-20 17:46:41	-->	whatsupdoc (AdiIRC@99-17-7-3.lightspeed.frokca.sbcglobal.net) has joined ##c++
2016-09-20 17:47:56	whatsupdoc	So my professor is going to be teaching Rust instead of C++? Am I screwed? Should I postpone the class and take it with another professor?
2016-09-20 17:48:07	<--	SwiftMatt (~Objective@130.253.27.194) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-20 17:48:42	<--	fog_proxy (~fog_proxy@117.82.97.198) has quit (Quit: Leaving)
2016-09-20 17:48:46	w3z	thats not a c++ question
2016-09-20 17:48:47	whatsupdoc	I was really hoping to learn C++ because it's so popular. I only took a class on C, so I feel like C++ would have been the next logical thing to learn.
2016-09-20 17:49:14	whatsupdoc	(comparison between C++/Rust question)
2016-09-20 17:49:18	w3z	go ask in ##programming or ##c++-general
2016-09-20 17:50:31	<--	Zxpr1jk (~zxpr1jk@24.214.61.47) has quit (Quit: Leaving)
2016-09-20 17:51:17	-->	UnripeSuica_mobi (~UnlikeSui@223.38.8.129) has joined ##c++
2016-09-20 17:51:37	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 255 seconds)
2016-09-20 17:52:56	<--	UnlikeSuika_mobi (~UnlikeSui@147.47.141.16) has quit (Ping timeout: 265 seconds)
2016-09-20 17:53:16	<--	UnripeSuica_mobi (~UnlikeSui@223.38.8.129) has quit (Client Quit)
2016-09-20 17:53:28	-->	UnlikeSuika_mobi (~UnlikeSui@211.210.101.55) has joined ##c++
2016-09-20 17:53:28	-->	irrenhaus3 (~xenon@HSI-KBW-046-005-253-105.hsi8.kabel-badenwuerttemberg.de) has joined ##c++
2016-09-20 17:53:52	<--	reveredge (~reveredge@115.110.126.75) has quit (Ping timeout: 255 seconds)
2016-09-20 17:55:02	-->	BaneAliens (uid112512@gateway/web/irccloud.com/x-inqnuaxuugjmenck) has joined ##c++
2016-09-20 17:55:02		[17:55]
2016-09-20 17:55:23	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 17:55:51	<--	codercodi (~codercodi@108-192-148-40.lightspeed.gnvlsc.sbcglobal.net) has quit (Quit: Leaving)
2016-09-20 18:00:33	<--	FreeBirdLjj (~freebirdl@202.119.46.192) has quit (Remote host closed the connection)
2016-09-20 18:02:58	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-20 18:03:01	<--	f3r70rr35f (~fernando@186-105-109-211.baf.movistar.cl) has quit (Quit: leaving)
2016-09-20 18:03:57	<--	jrolland-work (~jeff@155.92.176.224) has quit (Ping timeout: 272 seconds)
2016-09-20 18:04:01	-->	o] (~achubergs@pool-108-54-98-223.nycmny.fios.verizon.net) has joined ##c++
2016-09-20 18:04:20	-->	rexkerr (~rexkerr@c-76-105-50-154.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 18:04:21	<--	CaptainPi (~edx@dslb-188-099-058-033.188.099.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2016-09-20 18:05:05	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-20 18:05:29	<--	francis36012 (~francis@S01067cbfb1eec1cd.cg.shawcable.net) has quit (Ping timeout: 248 seconds)
2016-09-20 18:05:32	-->	SwiftMatt (~Objective@130.253.27.194) has joined ##c++
2016-09-20 18:05:36	<--	baudejogos (~achubergs@pool-108-54-98-223.nycmny.fios.verizon.net) has quit (Ping timeout: 244 seconds)
2016-09-20 18:05:54	<--	ryxai (~Jonathan@pool-72-89-246-128.nycmny.fios.verizon.net) has quit (Ping timeout: 264 seconds)
2016-09-20 18:06:21	-->	reveredge (~reveredge@111.119.209.219) has joined ##c++
2016-09-20 18:06:31	-->	Fredald (32b81c2b@gateway/web/freenode/ip.50.184.28.43) has joined ##c++
2016-09-20 18:06:35	-->	bx2 (~bx2@46.140.123.246) has joined ##c++
2016-09-20 18:06:41	w3z	http://melpon.org/wandbox/permlink/kB3sUeyq0bGyMoDV simplified, and punted on constexpr for now at least until constexpr lambda is working in clang
2016-09-20 18:06:54	-->	ryxai (~Jonathan@pool-72-89-246-128.nycmny.fios.verizon.net) has joined ##c++
2016-09-20 18:07:03	w3z	the helper function will go away once template type deduction works
2016-09-20 18:07:05	-->	jrolland-work (~jeff@155.92.176.224) has joined ##c++
2016-09-20 18:07:13	<--	SwiftMatt (~Objective@130.253.27.194) has quit (Client Quit)
2016-09-20 18:08:11	<--	Fredald (32b81c2b@gateway/web/freenode/ip.50.184.28.43) has quit (Client Quit)
2016-09-20 18:08:28	-->	Fredald (32b81c2b@gateway/web/freenode/ip.50.184.28.43) has joined ##c++
2016-09-20 18:08:44	<--	Fredald (32b81c2b@gateway/web/freenode/ip.50.184.28.43) has quit (Client Quit)
2016-09-20 18:09:10	-->	Fredald (32b81c2b@gateway/web/freenode/ip.50.184.28.43) has joined ##c++
2016-09-20 18:09:38	<--	Fredald (32b81c2b@gateway/web/freenode/ip.50.184.28.43) has quit (Client Quit)
2016-09-20 18:09:53	-->	zmack (~zmack@pool-72-74-144-215.bstnma.fios.verizon.net) has joined ##c++
2016-09-20 18:09:55	<--	Martchus_ (~martchus@dslb-092-072-232-168.092.072.pools.vodafone-ip.de) has quit (Ping timeout: 265 seconds)
2016-09-20 18:10:07	<--	zmack (~zmack@pool-72-74-144-215.bstnma.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-20 18:10:07		[18:10]
2016-09-20 18:10:11	-->	Martchus (~martchus@dslb-088-072-107-118.088.072.pools.vodafone-ip.de) has joined ##c++
2016-09-20 18:11:01	-->	m_ben (~m_ben@unaffiliated/m-ben/x-5917362) has joined ##c++
2016-09-20 18:11:05	<--	bx2 (~bx2@46.140.123.246) has quit (Ping timeout: 240 seconds)
2016-09-20 18:11:26	-->	francis36012 (~francis@S01067cbfb1eec1cd.cg.shawcable.net) has joined ##c++
2016-09-20 18:12:04	<--	tristanseifert (~tristanse@128.194.3.4) has quit (Quit: WeeChat 1.5)
2016-09-20 18:16:18	<--	Rudolf (~rodolfo@unaffiliated/rudolf) has quit (Quit: [IRSSI])
2016-09-20 18:17:33	<--	QwertyDragon (~QwertyDra@pool-173-76-128-189.bstnma.fios.verizon.net) has quit (Ping timeout: 240 seconds)
2016-09-20 18:22:04	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-20 18:23:56	-->	SwiftMatt (~Objective@027-194.eduroam-public.du.edu) has joined ##c++
2016-09-20 18:24:12	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-20 18:24:34	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 244 seconds)
2016-09-20 18:25:30	-->	baudejogos (~achubergs@pool-108-54-98-223.nycmny.fios.verizon.net) has joined ##c++
2016-09-20 18:25:30		[18:25]
2016-09-20 18:26:29	<--	Cohedrin (~textual@c-73-170-239-253.hsd1.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-09-20 18:26:38	-->	nilg (~user@77.70.2.229) has joined ##c++
2016-09-20 18:26:55	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 18:27:30	<--	o] (~achubergs@pool-108-54-98-223.nycmny.fios.verizon.net) has quit (Ping timeout: 264 seconds)
2016-09-20 18:28:06	<--	ryxai (~Jonathan@pool-72-89-246-128.nycmny.fios.verizon.net) has quit (Ping timeout: 264 seconds)
2016-09-20 18:28:24	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-20 18:28:30	-->	ryxai (~Jonathan@pool-72-89-246-128.nycmny.fios.verizon.net) has joined ##c++
2016-09-20 18:28:37	<--	SwiftMatt (~Objective@027-194.eduroam-public.du.edu) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-20 18:29:26	<--	vralphv (~vralp@d137-186-58-40.abhsia.telus.net) has quit (Quit: Lost terminal)
2016-09-20 18:31:05	<--	MulleDK19 (MulleDK19@unaffiliated/mulledk19) has quit (Ping timeout: 248 seconds)
2016-09-20 18:31:10	-->	FreeBirdLjj (~freebirdl@202.119.46.192) has joined ##c++
2016-09-20 18:32:10	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-20 18:32:46	izalove	w.substr(0, i) + w.substr(i+1, w.size() - i - 1)
2016-09-20 18:32:50	izalove	is there a better way to construct a string without its i-th character?
2016-09-20 18:33:52	<--	FreeBirdLjj (~freebirdl@202.119.46.192) has quit (Remote host closed the connection)
2016-09-20 18:34:11	-->	FreeBirdLjj (~freebirdl@202.119.46.192) has joined ##c++
2016-09-20 18:34:21	zap0	write a function.
2016-09-20 18:34:32	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-20 18:34:35	-->	calincru (~calin@c-73-231-85-3.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 18:34:36	izalove	that's in a function
2016-09-20 18:34:49	<--	SunnyD (~SunnyD@cpe-72-178-78-211.hot.res.rr.com) has quit (Quit: ChatZilla 0.9.90.1 [Firefox 30.0/20140605174243])
2016-09-20 18:34:54	zap0	so what is the issue?
2016-09-20 18:35:01	izalove	i'm asking if there's a better way
2016-09-20 18:35:05	izalove	more efficient etc
2016-09-20 18:35:06	zap0	why?
2016-09-20 18:35:15	w3z	{auto a="w3z"s; a.erase(a.begin()+1); cout<<a;}
2016-09-20 18:35:16	geordi	wz
2016-09-20 18:35:42	<--	calincru (~calin@c-73-231-85-3.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-20 18:35:48	-->	calincru_ (~calin@c-73-231-85-3.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 18:36:13	<--	sze (~sze@unaffiliated/sze) has quit (Remote host closed the connection)
2016-09-20 18:36:52	<--	riksteri (~SpaceDino@62.102.148.177) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-09-20 18:37:01	<--	SoundlesDev (~soundless@2601:282:8080:1267:1c70:8739:6e64:4a4c) has quit (Read error: Connection reset by peer)
2016-09-20 18:37:45	<--	whatsupdoc (AdiIRC@99-17-7-3.lightspeed.frokca.sbcglobal.net) has left ##c++ ("Closing Window")
2016-09-20 18:40:07	<--	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has quit (Read error: Connection reset by peer)
2016-09-20 18:40:30	-->	mss_cyclist (~MSe@89-250-189-210.tangos.nl) has joined ##c++
2016-09-20 18:40:30		[18:40]
2016-09-20 18:40:41	<--	CuriousErnestBro (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has quit (Quit: Leaving)
2016-09-20 18:40:44	-->	SwiftMatt (~Objective@130.253.27.194) has joined ##c++
2016-09-20 18:41:10	-->	jshjsh (~jshjsh@172.56.38.82) has joined ##c++
2016-09-20 18:41:40	-->	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has joined ##c++
2016-09-20 18:42:39	<--	TheSeven (~quassel@rockbox/developer/TheSeven) has quit (Ping timeout: 250 seconds)
2016-09-20 18:42:50	<--	SwiftMatt (~Objective@130.253.27.194) has quit (Client Quit)
2016-09-20 18:42:50	-->	Cohedrin (~textual@192.77.237.205) has joined ##c++
2016-09-20 18:43:07	--	jshjsh is now known as JoshS
2016-09-20 18:43:11	-->	TheSeven (~quassel@rockbox/developer/TheSeven) has joined ##c++
2016-09-20 18:43:21	<--	glenfe (~glen@unaffiliated/glenfe) has quit (Read error: Connection reset by peer)
2016-09-20 18:44:25	-->	regedit (uid150526@gateway/web/irccloud.com/x-bskmqpcgejpwjgqd) has joined ##c++
2016-09-20 18:44:30	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 18:44:34	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-20 18:46:26	<--	esas (~esas@unaffiliated/esas) has quit
2016-09-20 18:48:08	-->	bocaneri (~bocaneri@about/linux/staff/sauvin) has joined ##c++
2016-09-20 18:48:37	-->	blackwind_123 (~IceChat9@117.192.142.2) has joined ##c++
2016-09-20 18:50:57	<--	Cabanossi (~Cabanossi@p5DD7AFBA.dip0.t-ipconnect.de) has quit (Ping timeout: 265 seconds)
2016-09-20 18:51:26	-->	UnripeSuica_mobi (~UnlikeSui@223.38.8.129) has joined ##c++
2016-09-20 18:51:29	-->	SwiftMatt (~Objective@130.253.27.194) has joined ##c++
2016-09-20 18:52:36	--	irc: disconnected from server
2016-09-20 18:53:12	-->	alyptik (~alyptik@unaffiliated/alyptik) has joined ##c++
2016-09-20 18:53:12	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || https://isocpp.org/faq || pastes: http://melpon.org/wandbox"
2016-09-20 18:53:12	--	Topic set by V-ille (~ville@81-175-149-170.bb.dnainternet.fi) on Fri, 18 Sep 2015 07:13:01
2016-09-20 18:53:12	--	Channel ##c++: 960 nicks (0 ops, 0 voices, 960 normals)
2016-09-20 18:53:12	***	Buffer Playback...
2016-09-20 18:53:12	geordi	[02:40:36] <no output> [02:40:36]
2016-09-20 18:53:12	w3z	[02:41:11] (and will of course fail in the auto deduction case) [02:41:11]
2016-09-20 18:53:12	ubsan	[02:45:16] w3z: https://imgur.com/a/wAWoB [02:45:16]
2016-09-20 18:53:12	ubsan	[02:45:19] see slide 31 [02:45:19]
2016-09-20 18:53:12	ubsan	[02:45:36] that's what I was thinking of [02:45:36]
2016-09-20 18:53:12	w3z	[02:47:24] that quote is wrong, it was popularized by voltaire [02:47:24]
2016-09-20 18:53:12	w3z	[02:47:50] and its even older in italian [02:47:50]
2016-09-20 18:53:12	ubsan	[02:48:17] ? [02:48:17]
2016-09-20 18:53:12	w3z	[02:49:19] perfect is the enemy of the good [02:49:19]
2016-09-20 18:53:12	ubsan	[02:49:23] o [02:49:23]
2016-09-20 18:53:12	w3z	[02:49:41] https://en.wikipedia.org/wiki/Perfect_is_the_enemy_of_good [02:49:41]
2016-09-20 18:53:12	w3z	[02:50:00] they have a paraphrase of it attributed to morgan stanley pff [02:50:00]
2016-09-20 18:53:12	w3z	[02:50:52] whose presentation is this meyers? [02:50:52]
2016-09-20 18:53:12	w3z	[02:51:37] oh hah, they werent attributing it to morgan stanley, its a presentation for morgan stanley :) [02:51:37]
2016-09-20 18:53:12	w3z	[02:51:49] its bjarne [02:51:49]
2016-09-20 18:53:12	w3z	[02:51:58] and he works there now :) [02:51:58]
2016-09-20 18:53:12	w3z	[02:52:41] i thought that picture of "morgan stanley" looked foofy :) [02:52:41]
2016-09-20 18:53:12	w3z	[02:53:49] he has a divinci drawing in there too, getting all cultured in nyc [02:53:49]
2016-09-20 18:53:12	w3z	[02:56:01] sounds like hes a bit fed up with the committee too [02:56:01]
2016-09-20 18:53:12	w3z	[02:58:32] i wonder what generalized initializer_list as a 17 feature is talking about [02:58:32]
2016-09-20 18:53:12	w3z	[03:04:48] anyway, yawnfest slideshow [03:04:48]
2016-09-20 18:53:12	w3z	[03:07:34] did you see the final state of the array initializer i was tinkering with ubsan? there was an error in it that showed up when i did an optimized build (fixed now) [03:07:34]
2016-09-20 18:53:12	introom	[03:19:22] how to handily generate a string based on a format, e.g., "%s %d %s" ? [03:19:22]
2016-09-20 18:53:12	w3z	[03:20:10] boost.format [03:20:10]
2016-09-20 18:53:12	w3z	[03:20:26] http://www.boost.org/doc/libs/1_61_0/libs/format/ [03:20:26]
2016-09-20 18:53:12	w3z	[03:21:33] or if you insist snprintf variants [03:21:33]
2016-09-20 18:53:12	introom	[03:27:01] w3z: thanks. [03:27:01]
2016-09-20 18:53:12	jbit	[03:38:22] Does anybody know of a tool that'll rearrange definitions in a cpp file to match the order they're declared in? For example if my header has a "class Foo { void a(); void b(); void c()}", i'd like the tool to ensure that the definitions in the cpp file are "void Foo::a() {} void Foo::b() {} void Foo::c() {}" [03:38:22]
2016-09-20 18:53:12	w3z	[03:41:04] !give jbit general [03:41:04]
2016-09-20 18:53:12	nolyc	[03:41:06] jbit: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s. [03:41:06]
2016-09-20 18:53:12	jbit	[03:41:46] w3z: ah, thanks! [03:41:46]
2016-09-20 18:53:12	w3z	[03:42:16] youre off-topic here, but you can try clang tidy, if that doesnt cut it, you can build your own code transformation tool with their api [03:42:16]
2016-09-20 18:53:12	w3z	[03:45:22] so i think i like hs_'s expansion better than my identity pass through expansion helper [03:45:22]
2016-09-20 18:53:12	whatsupdoc	[03:47:56] So my professor is going to be teaching Rust instead of C++? Am I screwed? Should I postpone the class and take it with another professor? [03:47:56]
2016-09-20 18:53:12	w3z	[03:48:46] thats not a c++ question [03:48:46]
2016-09-20 18:53:12	whatsupdoc	[03:48:47] I was really hoping to learn C++ because it's so popular. I only took a class on C, so I feel like C++ would have been the next logical thing to learn. [03:48:47]
2016-09-20 18:53:12	whatsupdoc	[03:49:14] (comparison between C++/Rust question) [03:49:14]
2016-09-20 18:53:12	w3z	[03:49:18] go ask in ##programming or ##c++-general [03:49:18]
2016-09-20 18:53:12	w3z	[04:06:41] http://melpon.org/wandbox/permlink/kB3sUeyq0bGyMoDV simplified, and punted on constexpr for now at least until constexpr lambda is working in clang [04:06:41]
2016-09-20 18:53:13	w3z	[04:07:03] the helper function will go away once template type deduction works [04:07:03]
2016-09-20 18:53:13	izalove	[04:32:46] w.substr(0, i) + w.substr(i+1, w.size() - i - 1) [04:32:46]
2016-09-20 18:53:13	izalove	[04:32:50] is there a better way to construct a string without its i-th character? [04:32:50]
2016-09-20 18:53:13	zap0	[04:34:21] write a function. [04:34:21]
2016-09-20 18:53:13	izalove	[04:34:36] that's in a function [04:34:36]
2016-09-20 18:53:13	zap0	[04:34:54] so what is the issue? [04:34:54]
2016-09-20 18:53:13	izalove	[04:35:01] i'm asking if there's a better way [04:35:01]
2016-09-20 18:53:13	izalove	[04:35:05] more efficient etc [04:35:05]
2016-09-20 18:53:13	zap0	[04:35:06] why? [04:35:06]
2016-09-20 18:53:13	w3z	[04:35:15] {auto a="w3z"s; a.erase(a.begin()+1); cout<<a;} [04:35:15]
2016-09-20 18:53:13	geordi	[04:35:16] wz [04:35:16]
2016-09-20 18:53:13	***	Playback Complete.
2016-09-20 18:53:31	-->	UnripeSuica_mobi (~UnlikeSui@211.210.90.198) has joined ##c++
2016-09-20 18:53:35	<--	UnlikeSuika_mobi (~UnlikeSui@211.210.101.55) has quit (Ping timeout: 260 seconds)
2016-09-20 18:54:20	-->	bkboggy (~bkboggy@cpe-172-250-147-60.socal.res.rr.com) has joined ##c++
2016-09-20 18:54:24	--	Channel created on Fri, 14 Sep 2001 17:15:35
2016-09-20 18:54:52	<--	Sculptor (~Sculptor@trivialand/master/sculptor) has quit (Ping timeout: 265 seconds)
2016-09-20 18:54:52	<--	plee (~kurt@89.10.219.180) has quit (Read error: Connection reset by peer)
2016-09-20 18:55:04	-->	UnlikeSuika_mobi (~UnlikeSui@223.38.8.129) has joined ##c++
2016-09-20 18:55:19	-->	plee (~kurt@89.10.219.180) has joined ##c++
2016-09-20 18:56:09	<--	ZMatt2 (~ZMatt2@host80-146-dynamic.59-82-r.retail.telecomitalia.it) has quit (Ping timeout: 248 seconds)
2016-09-20 18:56:09		[18:56]
2016-09-20 18:56:41	<--	UnlikeSuika_mobi (~UnlikeSui@223.38.8.129) has quit (Client Quit)
2016-09-20 18:57:46	-->	UnlikeSuika_mobi (~UnlikeSui@223.38.8.129) has joined ##c++
2016-09-20 18:58:44	<--	UnripeSuica_mobi (~UnlikeSui@211.210.90.198) has quit (Ping timeout: 265 seconds)
2016-09-20 18:59:00	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 18:59:28	-->	Beetny (~Beetny@14-202-48-200.tpgi.com.au) has joined ##c++
2016-09-20 18:59:34	-->	ARCADIVS (~RMM@97.84.20.251) has joined ##c++
2016-09-20 19:00:33	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 240 seconds)
2016-09-20 19:01:50	-->	Flakes (~Damien2@58.247.81.50) has joined ##c++
2016-09-20 19:02:17	<--	krizoek (~krizoek@vmi24145.contabo.host) has quit (Ping timeout: 240 seconds)
2016-09-20 19:02:33	-->	bx2 (~bx2@46.140.123.246) has joined ##c++
2016-09-20 19:02:45	-->	kasper^ (~safaf@82.137.14.62) has joined ##c++
2016-09-20 19:03:58	<--	jkhl (~j@host86-182-59-122.range86-182.btcentralplus.com) has quit (Ping timeout: 265 seconds)
2016-09-20 19:06:13	-->	justan0theruser (~justanoth@unaffiliated/justanotheruser) has joined ##c++
2016-09-20 19:06:23	<--	justanotheruser (~justanoth@unaffiliated/justanotheruser) has quit (Ping timeout: 265 seconds)
2016-09-20 19:06:26	-->	t0by (~t0by@host100-254-dynamic.41-79-r.retail.telecomitalia.it) has joined ##c++
2016-09-20 19:06:40	-->	SHC (~quassel@117.204.41.214) has joined ##c++
2016-09-20 19:07:03	<--	bx2 (~bx2@46.140.123.246) has quit (Ping timeout: 240 seconds)
2016-09-20 19:07:29	<--	wolfcub (~henrique_@186.194.99.136) has quit (Ping timeout: 240 seconds)
2016-09-20 19:08:33	-->	krizoek (~krizoek@vmi24145.contabo.host) has joined ##c++
2016-09-20 19:11:16	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-20 19:11:16		[19:11]
2016-09-20 19:11:54	-->	symm- (~symm-@86.127.152.32) has joined ##c++
2016-09-20 19:11:59	-->	forgottenone (~forgotten@195.142.65.127) has joined ##c++
2016-09-20 19:12:08	-->	S3MA (~adsfaf@74.197.112.180) has joined ##c++
2016-09-20 19:12:19	<--	S3MA (~adsfaf@74.197.112.180) has left ##c++
2016-09-20 19:13:17	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-20 19:13:55	<--	allen29 (~all@unaffiliated/allen29) has quit (Quit: Leaving)
2016-09-20 19:17:22	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-20 19:17:36	<--	orbiter (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has quit (Quit: Backen ist Liebe, Braten ist Leidenschaft, Dampfgaren ist Gleichgültigkeit, Dünsten ist Haß.)
2016-09-20 19:18:25	<--	arescorpio (~arescorpi@221-27-245-190.fibertel.com.ar) has quit (Quit: Leaving.)
2016-09-20 19:19:29	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-20 19:20:10	-->	jamesaxl (~jamesaxl@176.98.129.195) has joined ##c++
2016-09-20 19:21:01	-->	Enhex (~Enhex@82.252.138.77.rev.sfr.net) has joined ##c++
2016-09-20 19:21:13	<--	m_ben (~m_ben@unaffiliated/m-ben/x-5917362) has quit (Ping timeout: 250 seconds)
2016-09-20 19:22:05	<--	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has quit (Quit: Leaving.)
2016-09-20 19:23:08	<--	FreeBirdLjj (~freebirdl@202.119.46.192) has quit (Remote host closed the connection)
2016-09-20 19:23:54	<--	zwliew (uid161395@gateway/web/irccloud.com/x-gqokgttzrgfumlsx) has quit (Quit: Connection closed for inactivity)
2016-09-20 19:25:26	-->	Akimb (~Akimb@88-119-138-154.static.zebra.lt) has joined ##c++
2016-09-20 19:26:23	-->	P1RATEZ (piratez@unaffiliated/p1ratez) has joined ##c++
2016-09-20 19:26:23		[19:26]
2016-09-20 19:26:34	<--	symm- (~symm-@86.127.152.32) has quit (Ping timeout: 255 seconds)
2016-09-20 19:27:46	<--	francis36012 (~francis@S01067cbfb1eec1cd.cg.shawcable.net) has quit (Quit: francis36012)
2016-09-20 19:27:47	<--	kadoban (~mud@unaffiliated/kadoban) has quit (Quit: bye)
2016-09-20 19:28:35	<--	ERROH (~mama@unaffiliated/almathea) has quit (Ping timeout: 250 seconds)
2016-09-20 19:29:02	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-20 19:29:33	-->	symm- (~symm-@86.127.152.32) has joined ##c++
2016-09-20 19:29:39	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 19:30:23	<--	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has quit (Read error: Connection reset by peer)
2016-09-20 19:30:46	-->	SwiftMatt (~Objective@130.253.27.194) has joined ##c++
2016-09-20 19:31:34	<--	TSS_ (~TSS@86.127.142.242) has quit (Quit: ZNC 1.6.2 - http://znc.in)
2016-09-20 19:31:39	-->	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has joined ##c++
2016-09-20 19:31:53	<--	jorj (~jorj@162.220.240.216) has quit (Ping timeout: 248 seconds)
2016-09-20 19:32:15	-->	sze (~sze@unaffiliated/sze) has joined ##c++
2016-09-20 19:33:10	-->	TSS_ (~TSS@2a02:2f0a:4030:1218:d250:99ff:fe83:4a0a) has joined ##c++
2016-09-20 19:33:16	-->	QwertyDragon (~QwertyDra@pool-98-118-51-122.bstnma.fios.verizon.net) has joined ##c++
2016-09-20 19:34:37	<--	Moose (~moose@unaffiliated/moose) has quit (Quit: Leaving)
2016-09-20 19:37:45	<--	t0by (~t0by@host100-254-dynamic.41-79-r.retail.telecomitalia.it) has quit (Ping timeout: 248 seconds)
2016-09-20 19:38:38	-->	mangolisk_ (~mangolisk@S0106848dc7ebaa06.vc.shawcable.net) has joined ##c++
2016-09-20 19:39:25	<--	a3Dman (~3Dman@unaffiliated/a3dman) has quit (Ping timeout: 250 seconds)
2016-09-20 19:41:07	<--	Leovale (~Leovale@45.72.141.66) has quit (Read error: Connection reset by peer)
2016-09-20 19:41:31	-->	a3Dman (~3Dman@unaffiliated/a3dman) has joined ##c++
2016-09-20 19:41:31		[19:41]
2016-09-20 19:41:54	<--	mangolisk (~mangolisk@S0106848dc7ebaa06.vc.shawcable.net) has quit (Ping timeout: 264 seconds)
2016-09-20 19:42:07	-->	ERROH (mama@unaffiliated/almathea) has joined ##c++
2016-09-20 19:42:37	<--	ffilozov (~ffilozov@pool-72-69-174-106.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-20 19:43:43	<--	sze (~sze@unaffiliated/sze) has quit (Ping timeout: 264 seconds)
2016-09-20 19:45:55	<--	TSS_ (~TSS@2a02:2f0a:4030:1218:d250:99ff:fe83:4a0a) has quit (Ping timeout: 272 seconds)
2016-09-20 19:46:45	<--	xnavor (~xnavor@78-70-4-240-no171.business.telia.com) has quit (Quit: This computer has gone to sleep)
2016-09-20 19:46:51	<--	SwiftMatt (~Objective@130.253.27.194) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-20 19:47:31	<--	symm- (~symm-@86.127.152.32) has quit (Quit: Leaving...)
2016-09-20 19:49:39	-->	sze (~sze@unaffiliated/sze) has joined ##c++
2016-09-20 19:50:40	<--	chrisg_ (~chrisg@host86-142-34-130.range86-142.btcentralplus.com) has quit (Quit: ZNC 1.6.2 - http://znc.in)
2016-09-20 19:50:53	-->	kaffeetrauma (~Thunderbi@n37.informatik.fh-dortmund.de) has joined ##c++
2016-09-20 19:50:53	<--	xaxxon (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has quit (Quit: This computer has gone to sleep)
2016-09-20 19:51:53	-->	TSS_ (~TSS@86.127.142.242) has joined ##c++
2016-09-20 19:53:28	-->	lolek (~lolek@unaffiliated/marcin) has joined ##c++
2016-09-20 19:54:08	<--	sze (~sze@unaffiliated/sze) has quit (Ping timeout: 244 seconds)
2016-09-20 19:55:38	-->	s1dev (~s1dev@199.241.28.135) has joined ##c++
2016-09-20 19:55:57	-->	Melite (~Melite@210.178.129.234) has joined ##c++
2016-09-20 19:56:12	-->	karab44 (~karab44@unaffiliated/karab44) has joined ##c++
2016-09-20 19:57:45	<--	nullfxn (~nullFxn@107-147-108-164.res.bhn.net) has quit (Ping timeout: 244 seconds)
2016-09-20 19:57:45		[19:57]
2016-09-20 19:57:49	<--	Enhex (~Enhex@82.252.138.77.rev.sfr.net) has quit (Read error: Connection reset by peer)
2016-09-20 19:58:28	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-20 20:00:01	<--	jxv (~jxv@cpe-108-185-163-38.socal.res.rr.com) has quit (Quit: Leaving)
2016-09-20 20:00:15	-->	sze (~sze@unaffiliated/sze) has joined ##c++
2016-09-20 20:00:26	-->	Zxpr1jk (~zxpr1jk@24.214.61.47) has joined ##c++
2016-09-20 20:00:49	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-20 20:00:58	-->	francoisk (~francoisk@154.66.250.11) has joined ##c++
2016-09-20 20:02:47	s1dev	if I have a function template that I want to specialize for a type template (std::vector<T>) with SFINAE on the type (T) of the type template, can this be done without SFINAE on the function template?
2016-09-20 20:04:48	<--	sze (~sze@unaffiliated/sze) has quit (Ping timeout: 244 seconds)
2016-09-20 20:05:58	s1dev	I think not because I believe that it would be partial specialization
2016-09-20 20:06:25	<--	Betal (~Betal@unaffiliated/betal) has quit (Remote host closed the connection)
2016-09-20 20:08:34	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-20 20:08:56	-->	casscode (~bru@169-0-91-62.ip.afrihost.co.za) has joined ##c++
2016-09-20 20:10:31	-->	sze (~sze@unaffiliated/sze) has joined ##c++
2016-09-20 20:10:38	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-20 20:11:05	<--	systemfault (~rcyr@unaffiliated/rcyr) has quit (Quit: Bye!)
2016-09-20 20:12:06	--	nchambers is now known as god
2016-09-20 20:12:46	josef_k	Gah, how do I assign an overloaded function template like std::min to a std::function<float(float, float)> object? I always get this terribly wrong.
2016-09-20 20:12:46		[20:12]
2016-09-20 20:14:25	-->	opensvn (~xiaoyu@183.250.160.154) has joined ##c++
2016-09-20 20:15:08	<--	sze (~sze@unaffiliated/sze) has quit (Ping timeout: 244 seconds)
2016-09-20 20:15:47	-->	sze (~sze@unaffiliated/sze) has joined ##c++
2016-09-20 20:16:46	josef_k	{ std::function<float(float, float)>(std::min<float>) }
2016-09-20 20:16:46	geordi	error: no matching function for call to 'function<float(float, float)>::function(<unresolved overloaded function type>)'
2016-09-20 20:17:11	josef_k	{ std::function<float(float, float)>(std::plus<float>) }
2016-09-20 20:17:11	geordi	error: expected primary-expression before '(' token
2016-09-20 20:18:01	josef_k	{ std::function<float(float, float)>(std::plus<float>); }
2016-09-20 20:18:01	geordi	Same error.
2016-09-20 20:18:01	<--	ferdna (~ferdna@cpe-69-23-141-130.elp.res.rr.com) has quit (Quit: Leaving)
2016-09-20 20:18:11	w3z	josef_k: you cast
2016-09-20 20:18:24	-->	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has joined ##c++
2016-09-20 20:18:54	josef_k	{ std::function<float(float, float)>( static_cast<float(*)(float, float)>(std::min<float>) ); }
2016-09-20 20:18:55	geordi	error: invalid static_cast from type '<unresolved overloaded function type>' to type 'float (*)(float, float)'
2016-09-20 20:19:28	w3z	thats not the signature of min
2016-09-20 20:19:56	josef_k	Well... it is one of the signatures, right?
2016-09-20 20:20:10	josef_k	But there is the other one with the comparator?
2016-09-20 20:20:17	<--	chaos7theory (~darth@75-167-23-45.phnx.qwest.net) has quit (Quit: Leaving)
2016-09-20 20:20:30	<--	sze (~sze@unaffiliated/sze) has quit (Ping timeout: 260 seconds)
2016-09-20 20:20:41	-->	jaafar (~quassel@50-206-78-205-static.hfc.comcastbusiness.net) has joined ##c++
2016-09-20 20:20:45	josef_k	Oh, no, because it expects references...
2016-09-20 20:20:53	josef_k	Is that it?
2016-09-20 20:21:01	-->	sze (~sze@unaffiliated/sze) has joined ##c++
2016-09-20 20:21:07	w3z	{function<const int&(const int&,const int&)> F=static_cast<const int&(*)(const int&,const int&)>(min);}
2016-09-20 20:21:07	geordi	<no output>
2016-09-20 20:21:39	josef_k	Right, right, yes.
2016-09-20 20:21:54	josef_k	Thanks.
2016-09-20 20:23:15	-->	Burgundy (~burgundy@86.121.178.118) has joined ##c++
2016-09-20 20:23:54	josef_k	And callable objects that just expect values (not references) will be compatible with that signature, but not vice-versa, right?
2016-09-20 20:24:18	-->	MaBunny (~Peter@117.194.204.107) has joined ##c++
2016-09-20 20:24:20	-->	rendar (~rendar@host170-104-dynamic.61-82-r.retail.telecomitalia.it) has joined ##c++
2016-09-20 20:24:33	-->	chrisg_ (~chrisg@host86-142-34-130.range86-142.btcentralplus.com) has joined ##c++
2016-09-20 20:25:03	w3z	if i understand you correctly, no
2016-09-20 20:25:13	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-20 20:25:27	-->	pheenx (~pheenx@2a02:8071:b68a:1c00:225:22ff:fee7:7dc5) has joined ##c++
2016-09-20 20:25:28	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 20:25:33	<--	sze (~sze@unaffiliated/sze) has quit (Ping timeout: 240 seconds)
2016-09-20 20:26:00	w3z	{} void f(int){} void(*p)(const int&)=f; //no bueno
2016-09-20 20:26:00	geordi	error: invalid conversion from 'void (*)(int)' to 'void (*)(const int&)'
2016-09-20 20:26:17	<--	kasper^ (~safaf@82.137.14.62) has quit (Ping timeout: 248 seconds)
2016-09-20 20:26:48	w3z	{} void f(const int&){} void(*p)(int)=f; //also no bueno
2016-09-20 20:26:48	geordi	error: invalid conversion from 'void (*)(const int&)' to 'void (*)(int)'
2016-09-20 20:27:23	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 20:27:43	josef_k	{ function<float const &(float const &, float const &)> F=plus<float>(); }
2016-09-20 20:27:44	geordi	<no output>
2016-09-20 20:28:02	josef_k	That's what I meant.
2016-09-20 20:28:02		[20:28]
2016-09-20 20:28:02	-->	huggy (~huggy@46-227-67-170.pool.ovpn.se) has joined ##c++
2016-09-20 20:28:37	-->	DigiByteDev (~JT2@31.6.57.69) has joined ##c++
2016-09-20 20:30:07	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 244 seconds)
2016-09-20 20:30:25	<--	forgottenone (~forgotten@195.142.65.127) has quit (Ping timeout: 260 seconds)
2016-09-20 20:30:28	-->	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has joined ##c++
2016-09-20 20:30:46	-->	eduardas_m (~eduardas_@213.197.143.19) has joined ##c++
2016-09-20 20:31:08	-->	Anodl1 (~Anodl@p2003007A2F1FDE00E51FF476A53574BB.dip0.t-ipconnect.de) has joined ##c++
2016-09-20 20:31:16	-->	sze (~sze@unaffiliated/sze) has joined ##c++
2016-09-20 20:31:30	-->	blaxter (~blaxter@62.101.183.90.dyn.user.ono.com) has joined ##c++
2016-09-20 20:33:02	-->	seishun (~Kakera@78.84.143.147) has joined ##c++
2016-09-20 20:34:20	<--	Anodl1 (~Anodl@p2003007A2F1FDE00E51FF476A53574BB.dip0.t-ipconnect.de) has quit (Client Quit)
2016-09-20 20:34:50	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 20:34:58	-->	Munnu (~timo@91-158-145-247.elisa-laajakaista.fi) has joined ##c++
2016-09-20 20:35:39	-->	szulak (uid162164@gateway/web/irccloud.com/x-yxqsiwbrxnildiil) has joined ##c++
2016-09-20 20:35:56	-->	Sceorem (~Sceorem@xbn44-3-82-232-76-9.fbx.proxad.net) has joined ##c++
2016-09-20 20:36:34	-->	sigtrm (quassel@quassel.woboq.de) has joined ##c++
2016-09-20 20:36:35	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-20 20:37:32	<--	casscode (~bru@169-0-91-62.ip.afrihost.co.za) has quit (Ping timeout: 244 seconds)
2016-09-20 20:37:48	-->	et (~et@soohrt.org) has joined ##c++
2016-09-20 20:38:16	-->	kw01f (~kw01f@merlin.mvtec.com) has joined ##c++
2016-09-20 20:40:24	-->	Elirips (~Elirips@242.109.22.178.ftth.as8758.net) has joined ##c++
2016-09-20 20:41:08	<--	lolek (~lolek@unaffiliated/marcin) has left ##c++
2016-09-20 20:41:12	-->	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has joined ##c++
2016-09-20 20:41:35	-->	casscode (~bru@169-1-129-208.ip.afrihost.co.za) has joined ##c++
2016-09-20 20:43:04	<--	promach (~promach@115.133.111.138) has quit (Ping timeout: 255 seconds)
2016-09-20 20:43:04		[20:43]
2016-09-20 20:43:21	-->	SwiftMatt (~Objective@162.242.95.120) has joined ##c++
2016-09-20 20:44:14	<--	MaBunny (~Peter@117.194.204.107) has quit (Quit: Bye guys hav a good time :))
2016-09-20 20:44:25	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 20:44:54	<--	mukunda (~mukunda@c-71-205-185-63.hsd1.co.comcast.net) has quit (Ping timeout: 264 seconds)
2016-09-20 20:45:01	<--	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has quit (Ping timeout: 265 seconds)
2016-09-20 20:46:21	k_sze[work]	When I do `std::string name = "foo"; const char *c_name = name.c_str();`, am I supposed to clean up c_name myself later on?
2016-09-20 20:46:26	k_sze[work]	(why or why not?)
2016-09-20 20:46:31	-->	jablo (~jablo@80.243.123.111) has joined ##c++
2016-09-20 20:46:42	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 264 seconds)
2016-09-20 20:47:09	-->	xnavor (~xnavor@vbg-gw.proceranetworks.com) has joined ##c++
2016-09-20 20:48:05	-->	MrP[Home] (~Palsson@c-a46fe555.06-213-6e6b701.cust.bredbandsbolaget.se) has joined ##c++
2016-09-20 20:49:36	-->	djcb (~user@85-76-16-54-nat.elisa-mobile.fi) has joined ##c++
2016-09-20 20:50:16	urdh	k_sze[work], no
2016-09-20 20:50:40	-->	bx2 (~bx2@46.140.123.246) has joined ##c++
2016-09-20 20:50:40	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-20 20:50:45	urdh	it is owned by the std::string and it is undefined behavior to even write to itt
2016-09-20 20:50:57	<--	SwiftMatt (~Objective@162.242.95.120) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-20 20:51:23	urdh	and you should reconsider even doing that, because the pointer may be invalidated for a bunch of reasons
2016-09-20 20:52:25	-->	rriemann (~rriemann@dhcp-67-135.ixxi.ens-lyon.fr) has joined ##c++
2016-09-20 20:52:27	<--	jablo (~jablo@80.243.123.111) has quit (Read error: Connection reset by peer)
2016-09-20 20:52:51	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 244 seconds)
2016-09-20 20:52:57	-->	jablo (~jablo@80.243.123.111) has joined ##c++
2016-09-20 20:53:00	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-20 20:53:55	<--	snowkidind (~textual@pool-96-255-207-158.washdc.fios.verizon.net) has quit (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
2016-09-20 20:54:35	k_sze[work]	How so? e.g., if I change assign a new std::string to `name`?
2016-09-20 20:55:16	k_sze[work]	Or if `name` goes out of scope?
2016-09-20 20:55:29	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 20:55:35	<--	bx2 (~bx2@46.140.123.246) has quit (Ping timeout: 272 seconds)
2016-09-20 20:56:04	-->	promach (~promach@2001:e68:4427:8e12:3bb8:dddf:6065:9799) has joined ##c++
2016-09-20 20:56:53	urdh	k_sze[work]: http://en.cppreference.com/w/cpp/string/basic_string/c_str
2016-09-20 20:57:13	w3z	josef_k, im not sure why that works, function seems to allow a return type mismatch, seems like an error
2016-09-20 20:57:19	w3z	<<TYPE(F()); constexpr int f(){return 0;}  function<const int&()> F=f;
2016-09-20 20:57:19	geordi	lvalue int const
2016-09-20 20:57:30	urdh	k_sze[work], basically, doing anything with a non-const std::string
2016-09-20 20:57:54	urdh	_may_ invalidate the pointer you get from c_str
2016-09-20 20:58:30	k_sze[work]	ah, none of those things are happening in my code, so that's fine.
2016-09-20 20:58:30		[20:58]
2016-09-20 20:59:32	w3z	the lifetime of the c_str is not guaranteed, so youre not fine
2016-09-20 20:59:57	w3z	its good for the lifetime of the expression, all bets are off afterwards
2016-09-20 20:59:58	josef_k	w3z: Hmmm, curious. Guess I'll find out what happens at run time.  :)
2016-09-20 21:00:14	w3z	<<TYPE(F()); char f(){return 0;}  function<const int&&()> F=f;
2016-09-20 21:00:15	geordi	xvalue int const
2016-09-20 21:00:32	<--	P1RATEZ (piratez@unaffiliated/p1ratez) has quit
2016-09-20 21:01:06	w3z	i mean it checks that the return type is convertible to the specified return type, but eh
2016-09-20 21:01:08	<--	QwertyDragon (~QwertyDra@pool-98-118-51-122.bstnma.fios.verizon.net) has quit (Quit: Leaving)
2016-09-20 21:01:10	<--	UnlikeSuika_mobi (~UnlikeSui@223.38.8.129) has quit (Quit: RIP)
2016-09-20 21:01:22	-->	UnlikeSuika_mobi (~UnlikeSui@147.47.140.120) has joined ##c++
2016-09-20 21:01:55	-->	UnripeSuica_mobi (~UnlikeSui@223.38.8.129) has joined ##c++
2016-09-20 21:02:52	-->	f10 (~flo@2001:470:52af:1:59b:9657:6ac8:c864) has joined ##c++
2016-09-20 21:03:52	k_sze[work]	uhh... what the hell? http://cpp.sh/6xkl
2016-09-20 21:04:45	TinoDidriksen	What about it?
2016-09-20 21:04:59	k_sze[work]	It prints "foobaz" three times.
2016-09-20 21:05:01	TinoDidriksen	It's UB.
2016-09-20 21:05:07	<--	opensvn (~xiaoyu@183.250.160.154) has quit (Ping timeout: 255 seconds)
2016-09-20 21:05:08	k_sze[work]	why?
2016-09-20 21:05:27	TinoDidriksen	The temporary string that you call .c_str() on is dead and gone by that time.
2016-09-20 21:05:37	k_sze[work]	ah ffffffff
2016-09-20 21:05:39	k_sze[work]	right
2016-09-20 21:05:44	-->	f10_ (~flo@2001:470:52af:1:c5c4:f236:6e26:8177) has joined ##c++
2016-09-20 21:05:51	josef_k	Oh, that reminds me...
2016-09-20 21:06:00	<--	UnlikeSuika_mobi (~UnlikeSui@147.47.140.120) has quit (Ping timeout: 260 seconds)
2016-09-20 21:06:53	k_sze[work]	Then is there a concise way of doing that I want to do?
2016-09-20 21:06:57	<--	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has quit (Read error: Connection reset by peer)
2016-09-20 21:07:18	k_sze[work]	wait, nvm
2016-09-20 21:07:22	<--	f10 (~flo@2001:470:52af:1:59b:9657:6ac8:c864) has quit (Ping timeout: 255 seconds)
2016-09-20 21:07:29	-->	AndyD (~AndyD@host-78-144-137-134.as13285.net) has joined ##c++
2016-09-20 21:07:31	k_sze[work]	I'll just not use const char* at all and do c_str() at the last minute.
2016-09-20 21:07:31	w3z	!book
2016-09-20 21:07:32	nolyc	A nice C++ book guide and list can be found at http://stackoverflow.com/q/388242/1090079
2016-09-20 21:07:38	TinoDidriksen	Sure, just use std::string...
2016-09-20 21:08:25	<--	AndyDD (AndyDD@host-78-144-133-56.as13285.net) has quit (Ping timeout: 248 seconds)
2016-09-20 21:08:58	-->	Aquza (~Aquza@p578b4612.dip0.t-ipconnect.de) has joined ##c++
2016-09-20 21:09:51	w3z	looks like they may have loosened the lifetime of the returned string since they guarantee a contiguous layout and equivilance between data and c_str now
2016-09-20 21:10:33	w3z	used to be just for the lifetime of the full expression involving c_str, now its until subsequnt operations on the string object
2016-09-20 21:12:07	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-20 21:12:18	V-ille	say what?
2016-09-20 21:12:49	-->	Biokee (~BioKey@2a02:1205:506f:db70:2060:af18:2165:f137) has joined ##c++
2016-09-20 21:13:12	--	Biokee is now known as Guest29908
2016-09-20 21:13:23	-->	Palsson (~Palsson@pc-193-235-91-227.norrkoping.se) has joined ##c++
2016-09-20 21:13:31	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 244 seconds)
2016-09-20 21:13:31		[21:13]
2016-09-20 21:13:42	god	what
2016-09-20 21:13:59	V-ille	I'm wondering what w3z is talking about
2016-09-20 21:14:01	<--	jaafar (~quassel@50-206-78-205-static.hfc.comcastbusiness.net) has quit (Ping timeout: 265 seconds)
2016-09-20 21:14:03	<--	mangolisk_ (~mangolisk@S0106848dc7ebaa06.vc.shawcable.net) has quit (Read error: Connection reset by peer)
2016-09-20 21:14:04	<--	UnripeSuica_mobi (~UnlikeSui@223.38.8.129) has quit (Quit: RIP)
2016-09-20 21:14:29	V-ille	god: also, you don't exist
2016-09-20 21:14:45	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 21:14:47	god	thats not what ur mom said
2016-09-20 21:14:50	w3z	back in the olden days string s; const char* p=s.c_str(); was a complete no no, now, its a no no til  Calling non-const member functions on the string, excluding operator[], at(), front(), back(), begin(), rbegin(), end() and rend().
2016-09-20 21:14:50	god	at church
2016-09-20 21:14:59	V-ille	my talking to you would be a sign of insanity if I expected an answer and even worse if I claimed to have received one
2016-09-20 21:15:13	-->	UnlikeSuika_mobi (~UnlikeSui@223.38.8.129) has joined ##c++
2016-09-20 21:15:14	-->	biberu (~biberu@c-cf2d72d5.08-441-7570702.cust.bredbandsbolaget.se) has joined ##c++
2016-09-20 21:15:17	V-ille	w3z: that's still as much a "no no" as it was
2016-09-20 21:15:27	<--	UnlikeSuika_mobi (~UnlikeSui@223.38.8.129) has quit (Client Quit)
2016-09-20 21:15:44	-->	UnlikeSuika_mobi (~UnlikeSui@147.47.140.120) has joined ##c++
2016-09-20 21:15:49	V-ille	which means that it's not a no-no, and it never was
2016-09-20 21:16:01	w3z	no no :) now you can modify theunderlying container via [] and the above p isnt invalidated
2016-09-20 21:16:06	-->	satifant (~sati@unaffiliated/satifant) has joined ##c++
2016-09-20 21:16:13	-->	blablablub (~howlymowl@euler.ilr.tu-berlin.de) has joined ##c++
2016-09-20 21:16:37	w3z	it definitely was in 98/03 the result of c_str "could" be a temporary buffer holding the contents of the string container
2016-09-20 21:16:37	V-ille	so the code is not a no-no until you explain what invisible operations you're not showing, got it
2016-09-20 21:16:46	-->	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has joined ##c++
2016-09-20 21:17:09	-->	UnripeSuica_mobi (~UnlikeSui@223.38.8.129) has joined ##c++
2016-09-20 21:18:00	V-ille	but if you're talking about how a CoW string works, then agreed
2016-09-20 21:18:38	w3z	... youre being obtuse, you know there was a half assed attempt at supporting cow strings, and non contiguous sequences :)
2016-09-20 21:19:31	V-ille	dunno about noncontiguous sequences, but there was very little half-assed about CoW strings
2016-09-20 21:19:33	w3z	(maybe it was 03 when they made string guaranteed contiguous)
2016-09-20 21:20:40	w3z	the point was that c_str didnt necessarily return a pointer to the underlying storage, it could be a temporary bffer where the string sequence was copied when requested
2016-09-20 21:20:50	<--	UnlikeSuika_mobi (~UnlikeSui@147.47.140.120) has quit (Ping timeout: 265 seconds)
2016-09-20 21:21:27	w3z	anyway, boring subject
2016-09-20 21:22:05	-->	opensvn (~xiaoyu@183.250.160.154) has joined ##c++
2016-09-20 21:22:17	w3z	tell me why function as in ^ gets to be lax wrt return type?
2016-09-20 21:22:17	-->	xaxxon (~xaxxon@2601:602:9d00:d58b:6cb3:dcf0:4210:6dce) has joined ##c++
2016-09-20 21:22:56	xaxxon	http://en.cppreference.com/w/cpp/language/copy_constructor <== says a copy constructor is not trivial if it is user-provided, but later states that it is trivial if it creates a bytewise copy.   Could a user-provided constructor not create a bytewise copy?
2016-09-20 21:23:52	-->	turtlehat (~ouaei@5CEC365.rev.sefiber.dk) has joined ##c++
2016-09-20 21:24:04	cbreak	xaxxon: read it
2016-09-20 21:24:11	xaxxon	I did.  that's hwo I quoted it
2016-09-20 21:24:12	cbreak	xaxxon: this part: "The copy constructor for class T is trivial if all of the following is true: "
2016-09-20 21:24:16	xaxxon	I may have misread it...
2016-09-20 21:24:20	xaxxon	right
2016-09-20 21:24:39	xaxxon	based on that, if it's user provided it's not trivial.
2016-09-20 21:24:43	cbreak	indeed.
2016-09-20 21:24:52	xaxxon	but then the sentence I quoted makes it sound like it could be.
2016-09-20 21:24:55	cbreak	no.
2016-09-20 21:25:10	cbreak	A pizza is an italian dish.
2016-09-20 21:25:20	cbreak	that doesn't mean that all italian dishes are pizza.
2016-09-20 21:25:43	klys	or all dishes are italian pizza.
2016-09-20 21:26:19	josef_k	w3z: Well, looks like it doesn't play nicely at run time.
2016-09-20 21:26:21	cbreak	it doesn't imply that american pizza is a pizza either :P
2016-09-20 21:26:38	xaxxon	any idea where in the standard I'd find that info?   someone arguing with me somewhere else
2016-09-20 21:26:52	xaxxon	I"ll search a bit..
2016-09-20 21:26:55	josef_k	The standard does not say anything about pizza.
2016-09-20 21:27:00	cbreak	http://eel.is/c++draft/generalindex is nice
2016-09-20 21:27:05	xaxxon	josef_k, thanks :)
2016-09-20 21:27:14	cbreak	http://eel.is/c++draft/class.copy#assignment%20operator!copy!trivial
2016-09-20 21:27:15	josef_k	No worries, couldn't help myself.
2016-09-20 21:27:35	cbreak	josef_k: yes, a horrible oversight
2016-09-20 21:27:52	josef_k	:)
2016-09-20 21:28:15	-->	seru76 (~seru76@77.89.191.179) has joined ##c++
2016-09-20 21:28:22	w3z	pizza is pretty old, its probably covered in 9899
2016-09-20 21:28:45	<--	satifant (~sati@unaffiliated/satifant) has quit (Quit: Verlassend)
2016-09-20 21:28:45		[21:28]
2016-09-20 21:29:03	xaxxon	pizza99?
2016-09-20 21:29:24	klys	those are unix98 ptys.
2016-09-20 21:29:54	-->	zwliew (uid161395@gateway/web/irccloud.com/x-vcotfclqpthidrem) has joined ##c++
2016-09-20 21:30:12	-->	nacon (~nacon@ipbcc12340.dynamic.kabel-deutschland.de) has joined ##c++
2016-09-20 21:30:12	<--	nacon (~nacon@ipbcc12340.dynamic.kabel-deutschland.de) has quit (Changing host)
2016-09-20 21:30:12	-->	nacon (~nacon@unaffiliated/nacon) has joined ##c++
2016-09-20 21:30:20	josef_k	w3z: By which I mean, I just using a std::plus<float>() stored in a function<float const&(...)> and NaNs started pouring out.
2016-09-20 21:32:36	-->	SHC_ (~quassel@59.88.213.119) has joined ##c++
2016-09-20 21:32:36	-->	AquaL1te (~AquaL1te@unaffiliated/aqual1te) has joined ##c++
2016-09-20 21:32:50	<--	sigtrm (quassel@quassel.woboq.de) has quit (Ping timeout: 265 seconds)
2016-09-20 21:32:54	-->	ibouvousaime (~ibouvousa@41.82.56.190) has joined ##c++
2016-09-20 21:32:55	-->	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has joined ##c++
2016-09-20 21:33:10	cbreak	nananananannananana ... batman!
2016-09-20 21:33:39	cbreak	josef_k: you're probably referencing stack memory that went out of scope
2016-09-20 21:33:45	cbreak	josef_k: try to avoid that :)
2016-09-20 21:34:18	<--	fschmitt_ (~fschmitt@ltw.loris.tv) has left ##c++
2016-09-20 21:34:42	josef_k	But, but, but, the compiler said it was OK!
2016-09-20 21:35:33	<--	seishun (~Kakera@78.84.143.147) has quit (Ping timeout: 250 seconds)
2016-09-20 21:36:18	<--	SHC (~quassel@117.204.41.214) has quit (Ping timeout: 276 seconds)
2016-09-20 21:36:41	-->	Furkiepurkie (~Furkie@2001:1af8:4700:a03c:7::) has joined ##c++
2016-09-20 21:36:53	<--	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has quit (Remote host closed the connection)
2016-09-20 21:36:54	-->	abaines (~abaines@host109-150-226-218.range109-150.btcentralplus.com) has joined ##c++
2016-09-20 21:37:07	-->	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has joined ##c++
2016-09-20 21:38:01	<--	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has quit (Remote host closed the connection)
2016-09-20 21:38:09	josef_k	OK, hold on, what about the other way around?
2016-09-20 21:38:11	-->	xaxxon_ (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has joined ##c++
2016-09-20 21:38:11	josef_k	{ function<float(float, float)> F= static_cast<float const &(*)(float const&, float const&)>(min); }
2016-09-20 21:38:11	-->	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has joined ##c++
2016-09-20 21:38:12	geordi	<no output>
2016-09-20 21:38:24	-->	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has joined ##c++
2016-09-20 21:39:01	<--	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has quit (Remote host closed the connection)
2016-09-20 21:39:15	-->	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has joined ##c++
2016-09-20 21:39:17	josef_k	Is that a safe conversion?
2016-09-20 21:40:09	-->	fschmitt (~fschmitt@ltw.loris.tv) has joined ##c++
2016-09-20 21:40:21	<--	jamesaxl (~jamesaxl@176.98.129.195) has quit (Read error: No route to host)
2016-09-20 21:40:21	<--	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has quit (Remote host closed the connection)
2016-09-20 21:40:32	-->	ltorvalds024 (~ltorvalds@unaffiliated/ltorvalds024) has joined ##c++
2016-09-20 21:40:32	--	ltorvalds024 is now known as mdnlover
2016-09-20 21:40:38	-->	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has joined ##c++
2016-09-20 21:40:55	-->	jamesaxl (~jamesaxl@176.98.129.195) has joined ##c++
2016-09-20 21:41:01	<--	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has quit (Remote host closed the connection)
2016-09-20 21:41:13	<--	mdnlover (~ltorvalds@unaffiliated/ltorvalds024) has quit (Client Quit)
2016-09-20 21:41:42	josef_k	It feels safe. I get a warm fuzzy feeling about it.
2016-09-20 21:41:59	-->	Feren^IRCCloud (sid180023@gateway/web/irccloud.com/x-zvzpxttcrkbtyjjt) has joined ##c++
2016-09-20 21:44:44	-->	anton02 (~quassel@lal1651212.lnk.telstra.net) has joined ##c++
2016-09-20 21:44:44		[21:44]
2016-09-20 21:45:04	<--	TMM (~hp@fsf/member/pdpc.professional.tmm) has quit (Quit: Ex-Chat)
2016-09-20 21:45:05	<--	lloda` (~user@62.2.203.131) has quit (Remote host closed the connection)
2016-09-20 21:46:25	<--	UnripeSuica_mobi (~UnlikeSui@223.38.8.129) has quit (Read error: Connection reset by peer)
2016-09-20 21:47:16	<--	rexkerr (~rexkerr@c-76-105-50-154.hsd1.ca.comcast.net) has quit (Quit: Leaving...)
2016-09-20 21:47:46	-->	QwertyDragon (~QwertyDra@pool-98-118-51-122.bstnma.fios.verizon.net) has joined ##c++
2016-09-20 21:48:39	-->	lsk (~lsk@enucs/member/lsk) has joined ##c++
2016-09-20 21:49:24	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 21:49:52	-->	w41 (~w41@213.243.91.10) has joined ##c++
2016-09-20 21:49:52	<--	w41 (~w41@213.243.91.10) has quit (Changing host)
2016-09-20 21:49:52	-->	w41 (~w41@unaffiliated/w41) has joined ##c++
2016-09-20 21:50:12	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 244 seconds)
2016-09-20 21:50:34	<--	xkpe (~xkpe@host86-151-105-229.range86-151.btcentralplus.com) has quit (Ping timeout: 255 seconds)
2016-09-20 21:51:50	-->	Kirrahe (~kirrahe@ip51cc4257.adsl-surfen.hetnet.nl) has joined ##c++
2016-09-20 21:52:05	-->	kimundi (~Kimundi@p4FE2EBC6.dip0.t-ipconnect.de) has joined ##c++
2016-09-20 21:52:24	<--	regedit (uid150526@gateway/web/irccloud.com/x-bskmqpcgejpwjgqd) has quit (Quit: Connection closed for inactivity)
2016-09-20 21:52:33	-->	snibod (~snibod@ip-94-42-61-30.multimo.pl) has joined ##c++
2016-09-20 21:54:25	<--	przemkovv (~przemkovv@gandalf.kari.put.poznan.pl) has quit (Ping timeout: 260 seconds)
2016-09-20 21:56:27	<--	calincru_ (~calin@c-73-231-85-3.hsd1.ca.comcast.net) has quit (Ping timeout: 276 seconds)
2016-09-20 21:56:48	cbreak	josef_k: it's not a conversion
2016-09-20 21:57:04	cbreak	and I think it's fine
2016-09-20 21:57:23	<--	Cohedrin (~textual@192.77.237.205) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-09-20 21:57:33	-->	Cohedrin (~textual@192.77.237.205) has joined ##c++
2016-09-20 21:57:36	<--	Cohedrin (~textual@192.77.237.205) has quit (Client Quit)
2016-09-20 21:59:09	-->	Hajime- (~Hajime@c-71-57-78-141.hsd1.il.comcast.net) has joined ##c++
2016-09-20 21:59:25	-->	sigtrm (quassel@quassel.woboq.de) has joined ##c++
2016-09-20 22:00:16	--	SHC_ is now known as SHC
2016-09-20 22:00:16		[22:00]
2016-09-20 22:00:59	<--	GinoManWorks (~GinoMan@50-251-53-110-static.hfc.comcastbusiness.net) has quit (Read error: Connection reset by peer)
2016-09-20 22:01:50	<--	Hajime (~Hajime@c-71-57-78-141.hsd1.il.comcast.net) has quit (Ping timeout: 265 seconds)
2016-09-20 22:03:36	-->	UnlikeSuika_mobi (~UnlikeSui@223.38.8.129) has joined ##c++
2016-09-20 22:04:22	-->	Limona (~Origin@BSN-142-59-105.dynamic.siol.net) has joined ##c++
2016-09-20 22:04:56	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-20 22:05:04	-->	pandaant (~batman@149.201.240.93) has joined ##c++
2016-09-20 22:05:49	Limona	hey guys, how could i get if the beginning of a string starts with a http://, the problem with string find is that it returns the position, since it's at the beginning it'd return 0, and i'd get false
2016-09-20 22:05:58	<--	Miroboru (~myrvoll@78.91.103.24) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-20 22:06:04	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 22:06:23	Limona	basically wanna chop down the url
2016-09-20 22:06:33	Limona	and would like to check if it's http or https
2016-09-20 22:06:55	TinoDidriksen	No, a non-match returns npos, not 0.
2016-09-20 22:07:09	Limona	yes, but a match returns a poistion
2016-09-20 22:07:12	Limona	position*
2016-09-20 22:07:17	cbreak	Limona: position is perfect
2016-09-20 22:07:21	Limona	and 0 isn't a good poisition?
2016-09-20 22:07:24	cbreak	sure is
2016-09-20 22:07:25	TinoDidriksen	0 is fine.
2016-09-20 22:07:32	Limona	0 would be false in an if
2016-09-20 22:07:33	<--	dinfuehr (~dinfuehr@91-113-34-208.adsl.highway.telekom.at) has quit (Ping timeout: 240 seconds)
2016-09-20 22:07:34	cbreak	Limona: or would you want to match XXXhttp://
2016-09-20 22:07:36	TinoDidriksen	0 is a valid position, npos is not.
2016-09-20 22:07:47	Limona	yes, but i'd still get a false in an if sentence
2016-09-20 22:07:51	cbreak	Limona: so?
2016-09-20 22:07:52	TinoDidriksen	You must test against != npos.
2016-09-20 22:07:59	Limona	if(string.find("http://)
2016-09-20 22:07:59	Limona	oh
2016-09-20 22:08:04	cbreak	Limona: what's the problem?
2016-09-20 22:08:13	Limona	want to see if the url starts with http or https
2016-09-20 22:08:20	-->	przemkovv (~przemkovv@gandalf.kari.put.poznan.pl) has joined ##c++
2016-09-20 22:08:26	TinoDidriksen	Then test that string.find() == 0
2016-09-20 22:08:26	Limona	i think TinoDidriksen gave me the solution
2016-09-20 22:08:27	cbreak	Limona: if (string.find(...) == 0)
2016-09-20 22:08:36	cbreak	obviously 0 is the only valid position
2016-09-20 22:08:48	cbreak	every other value means that it did not start with the query string
2016-09-20 22:08:51	-->	drozdziak1 (~drozdziak@do-atman.cubiware.com) has joined ##c++
2016-09-20 22:08:51	et	don't use find to test if something starts with a fixed string :(
2016-09-20 22:08:52	-->	dinfuehr (~dinfuehr@178-191-92-122.adsl.highway.telekom.at) has joined ##c++
2016-09-20 22:09:16	cbreak	et: it's inefficient, but obviously Limona learned something :)
2016-09-20 22:09:35	Limona	well, i'm not sure if it's a fixed string yet
2016-09-20 22:09:38	Limona	which is why i'd use find
2016-09-20 22:09:44	-->	JohnMS_WORK (~chatzilla@host-193-59-178-3.gog.com) has joined ##c++
2016-09-20 22:09:49	Limona	but it'd be a good generic start
2016-09-20 22:10:02	et	don't use find to test if something starts with anything.
2016-09-20 22:10:19	et	you search the whole string if it doesn't match for no reason
2016-09-20 22:10:38	cbreak	I'd use substr, but that's inefficient for other reasons...
2016-09-20 22:11:03	<--	pandaant (~batman@149.201.240.93) has quit (Ping timeout: 244 seconds)
2016-09-20 22:11:07	cbreak	http://en.cppreference.com/w/cpp/string/basic_string/compare would be the most efficient
2016-09-20 22:11:28	<--	theOneWho (~tom@95.166.79.163) has quit
2016-09-20 22:11:30	-->	tocka (~tocka@78-56-107-170.static.zebra.lt) has joined ##c++
2016-09-20 22:11:47	k_sze[work]	I don't understand how I'm supposed to use pthread_setschedparam (http://man7.org/linux/man-pages/man3/pthread_setschedparam.3.html)
2016-09-20 22:11:59	-->	pandaant (~batman@149.201.240.93) has joined ##c++
2016-09-20 22:12:07	cbreak	k_sze[work]: by using std::thread instead? :)
2016-09-20 22:12:36	k_sze[work]	cbreak: does std::thread have built-in ways to set the priority?
2016-09-20 22:12:51	<--	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has quit (Ping timeout: 272 seconds)
2016-09-20 22:13:01	k_sze[work]	I *am* using std::thread to start and join threads. But now I want to set their scheduling priority.
2016-09-20 22:13:03	cbreak	not that I know of
2016-09-20 22:13:08	<--	DigiByteDev (~JT2@31.6.57.69) has quit (Quit: DigiByteDev)
2016-09-20 22:13:18	josef_k	cbreak: Thanks.
2016-09-20 22:13:52	-->	rriemann_ (~rriemann@anyconnect193.insa-lyon.fr) has joined ##c++
2016-09-20 22:13:58	<--	zero_byte (~zer0@ip-89-103-110-138.net.upcbroadband.cz) has quit (Ping timeout: 244 seconds)
2016-09-20 22:14:09	<--	rriemann (~rriemann@dhcp-67-135.ixxi.ens-lyon.fr) has quit (Ping timeout: 272 seconds)
2016-09-20 22:14:37	k_sze[work]	I know I can use pthread_setschedparam with the native_handle() of std::thread on linux. It compiles and links, but then trying to set the priority would fail (pthread_setschedparam() returns 22).
2016-09-20 22:14:59	<--	xaxxon_ (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has quit (Quit: Leaving)
2016-09-20 22:15:12	-->	tlaxkit (~Thunderbi@92.185.154.236) has joined ##c++
2016-09-20 22:15:25	cbreak	did you look up what 22 means?
2016-09-20 22:15:25		[22:15]
2016-09-20 22:15:41	-->	sammyg (~sammyg@h-13-10.a485.priv.bahnhof.se) has joined ##c++
2016-09-20 22:15:45	-->	bjz (~bjz@14-201-215-168.tpgi.com.au) has joined ##c++
2016-09-20 22:15:54	-->	dv__ (~quassel@62.178.118.86) has joined ##c++
2016-09-20 22:16:00	cbreak	k_sze[work]: here on OS X, 22 means einval
2016-09-20 22:16:01	<--	dv_ (~quassel@62.178.118.86) has quit (Ping timeout: 272 seconds)
2016-09-20 22:16:06	cbreak	invalid argument
2016-09-20 22:16:18	k_sze[work]	I think it's the same thing on Linux.
2016-09-20 22:16:30	k_sze[work]	But I don't know *what* about my param is invalid.
2016-09-20 22:16:38	-->	RajRajRaj (uid72176@gateway/web/irccloud.com/x-jdfnwikznuaxsbgx) has joined ##c++
2016-09-20 22:16:44	cbreak	"policy is not a recognized policy, or param does not make sense for the policy." apparently
2016-09-20 22:16:46	<--	Melite (~Melite@210.178.129.234) has quit (Quit: Leaving)
2016-09-20 22:19:43	-->	velco (~chill@vlan-185-78-38-153.comnet.bg) has joined ##c++
2016-09-20 22:21:23	<--	Goplat (~goplat@reactos/developer/Goplat) has quit (Remote host closed the connection)
2016-09-20 22:21:47	-->	gagbo (~gagbo@unaffiliated/gagbo) has joined ##c++
2016-09-20 22:22:10	<--	andyhuzhill (~Thunderbi@14.23.45.178) has quit (Remote host closed the connection)
2016-09-20 22:22:46	-->	andyhuzhill (~Thunderbi@14.23.45.178) has joined ##c++
2016-09-20 22:24:19	<--	BaneAliens (uid112512@gateway/web/irccloud.com/x-inqnuaxuugjmenck) has quit (Quit: Connection closed for inactivity)
2016-09-20 22:24:41	<--	przemkovv-bis (~przemkovv@d83-37.icpnet.pl) has quit (Ping timeout: 248 seconds)
2016-09-20 22:26:53	-->	fedepad (~fedepad@eduroam-97-27.zdv.uni-mainz.de) has joined ##c++
2016-09-20 22:27:20	-->	FreeBirdLjj (~freebirdl@202.119.46.192) has joined ##c++
2016-09-20 22:27:29	<--	hoshi (~hoshi@acfd18.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 240 seconds)
2016-09-20 22:27:51	-->	sophia7 (~sophia7@unaffiliated/sophia7) has joined ##c++
2016-09-20 22:28:02	-->	riemann (~riemann@84-10-11-234.static.chello.pl) has joined ##c++
2016-09-20 22:29:09	-->	gareppa (~gareppa@151.28.158.45) has joined ##c++
2016-09-20 22:29:21	<--	gareppa (~gareppa@151.28.158.45) has quit (Remote host closed the connection)
2016-09-20 22:29:54	<--	sigtrm (quassel@quassel.woboq.de) has quit (Ping timeout: 265 seconds)
2016-09-20 22:30:12	-->	rorro (~rorro@c-227-78.eduroam.liu.se) has joined ##c++
2016-09-20 22:30:27	-->	hoshi (~hoshi@acck3.neoplus.adsl.tpnet.pl) has joined ##c++
2016-09-20 22:30:27		[22:30]
2016-09-20 22:30:37	<--	Ropeney (~Ropeney@tank.mindvision.com.au) has quit (Ping timeout: 255 seconds)
2016-09-20 22:30:40	<--	FreeBirdLjj (~freebirdl@202.119.46.192) has quit (Remote host closed the connection)
2016-09-20 22:30:57	-->	FreeBirdLjj (~freebirdl@218.94.142.81) has joined ##c++
2016-09-20 22:32:09	-->	sigtrm (quassel@quassel.woboq.de) has joined ##c++
2016-09-20 22:33:02	-->	Miroboru (~myrvoll@78.91.103.24) has joined ##c++
2016-09-20 22:33:04	<--	ibouvousaime (~ibouvousa@41.82.56.190) has quit (Quit: Konversation terminated!)
2016-09-20 22:33:45	-->	aindros (~jacknife@93-57-35-194.ip162.fastwebnet.it) has joined ##c++
2016-09-20 22:34:07	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 244 seconds)
2016-09-20 22:34:40	<--	V-ille (~ville@81-175-149-170.bb.dnainternet.fi) has quit (Ping timeout: 260 seconds)
2016-09-20 22:34:59	somaReverse	Hi. Will it do any good if I put implementation of small functions in the header files?
2016-09-20 22:35:09	-->	xissburg (~xissburg@unaffiliated/xissburg) has joined ##c++
2016-09-20 22:35:24	cbreak	somaReverse: it'll slow down compiling and linking
2016-09-20 22:35:30	-->	nullfxn (~nullFxn@107-147-108-164.res.bhn.net) has joined ##c++
2016-09-20 22:35:33	-->	phlpp (~Philipp@rihanna.cb.uni-bonn.de) has joined ##c++
2016-09-20 22:35:33	-->	Karyon (~yaaic@unaffiliated/karyon) has joined ##c++
2016-09-20 22:35:38	TinoDidriksen	It may aid inlining.
2016-09-20 22:35:40	<--	nealshire_ (~Nealshire@unaffiliated/nealshire) has quit (Ping timeout: 265 seconds)
2016-09-20 22:36:05	cbreak	or not.
2016-09-20 22:36:17	<--	rsampaio_ (~rodrigo@2601:643:8200:a3f0::f927) has quit (Ping timeout: 272 seconds)
2016-09-20 22:36:18	somaReverse	ok, what policy should I follow?
2016-09-20 22:36:20	cbreak	if you use whole program optimization it'll probably not
2016-09-20 22:36:41	cbreak	somaReverse: my own policy is: don't implement stuff in headers if it can be avoided
2016-09-20 22:37:06	cbreak	if I ever find a bottleneck that requires it, I'll put stuff into a header, but so far I haven't
2016-09-20 22:37:12	<--	drazil (~drazil@45.55.234.212) has quit (Quit: WeeChat 1.0.1)
2016-09-20 22:37:14	-->	ibouvousaime (~ibouvousa@41.82.56.190) has joined ##c++
2016-09-20 22:37:18	somaReverse	ok
2016-09-20 22:37:30	z16	My policy: Implement everything in headers
2016-09-20 22:37:31	<--	c0le (~c0le@59.99.251.45) has quit (Read error: Connection reset by peer)
2016-09-20 22:37:34	z16	Now choose :D
2016-09-20 22:37:56	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 22:38:19	cbreak	z16: boost!
2016-09-20 22:38:49	z16	One of the things that (most of) boost got right :)
2016-09-20 22:38:53	<--	Miroboru (~myrvoll@78.91.103.24) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-20 22:38:55	-->	bx2 (~bx2@46.140.123.246) has joined ##c++
2016-09-20 22:39:05	francoisk	the more code in headers the more often you need to recompile
2016-09-20 22:39:10	somaReverse	cbreak: What is " whole program optimization " ?
2016-09-20 22:39:38	z16	somaReverse: As opposed to optimization inside a single TU
2016-09-20 22:39:45	z16	Or even single function
2016-09-20 22:39:48	-->	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has joined ##c++
2016-09-20 22:39:51	<--	Galik (~galik@unaffiliated/galik) has quit (Quit: Leaving)
2016-09-20 22:39:54	cbreak	global optimization
2016-09-20 22:40:03	cbreak	or link time optimization
2016-09-20 22:40:22	-->	Galik (~galik@unaffiliated/galik) has joined ##c++
2016-09-20 22:40:28	et	which will also slow down linking ;)
2016-09-20 22:40:30	-->	vitimiti (~vitimiti@unaffiliated/vitimiti) has joined ##c++
2016-09-20 22:40:34	z16	Dummy example: You define a function with a bool argument, if it's true you do A, otherwise B
2016-09-20 22:40:46	somaReverse	cbreak: how can I do that?
2016-09-20 22:40:54	z16	Normally this can't be very well optimized, since the function can be called with anything
2016-09-20 22:40:55	cbreak	somaReverse: depends on your compiler
2016-09-20 22:40:58	pingwindyktator	Hello. I don't understand .reste() there: http://stackoverflow.com/questions/12314967/cohabitation-of-boostshared-ptr-and-stdshared-ptr imo there's no reason to do so.
2016-09-20 22:41:01	cbreak	it should be in your manual
2016-09-20 22:41:06	cbreak	takes ages to do :)
2016-09-20 22:41:10	z16	But if it looks at the whole program and notices the function is only ever called with true as the parameter
2016-09-20 22:41:15	z16	Then it may as well remove the check
2016-09-20 22:41:19	z16	(And the B-code)
2016-09-20 22:42:19	-->	DigiByteDev (~JT2@n218250011174.netvigator.com) has joined ##c++
2016-09-20 22:42:28	-->	Miroboru (~myrvoll@78.91.103.24) has joined ##c++
2016-09-20 22:42:47	-->	c0le (~c0le@59.99.251.45) has joined ##c++
2016-09-20 22:43:10	--	philipp_ is now known as the_abra
2016-09-20 22:43:27	<--	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has quit (Remote host closed the connection)
2016-09-20 22:43:29	<--	bx2 (~bx2@46.140.123.246) has quit (Ping timeout: 240 seconds)
2016-09-20 22:43:33	<--	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has quit (Quit: This computer has gone to sleep)
2016-09-20 22:43:36	urdh	pingwindyktator, if you don't reset, the pointer will be managed by two different shared pointers
2016-09-20 22:43:39	Jiwan	z16: LTO should be able to do that as well
2016-09-20 22:43:42	-->	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has joined ##c++
2016-09-20 22:43:55	urdh	so one might free it because its reference counter is 0, while the other expects it to still be alive
2016-09-20 22:44:15	urdh	it enforces that the pointer is managed by either boost or std, but not both
2016-09-20 22:44:17	z16	Jiwan: Like I said, a dummy example, just to get the idea across
2016-09-20 22:44:32	-->	kilbith (4ee51c3e@gateway/web/cgi-irc/kiwiirc.com/ip.78.229.28.62) has joined ##c++
2016-09-20 22:44:34	Limona	hey
2016-09-20 22:44:46	Limona	in = in.substr(geturl(in).length(), in.length()); why would this not work, where geturl is a function that returns a string
2016-09-20 22:44:59	somaReverse	cbreak: does gcc enable -flto by default?
2016-09-20 22:45:04	cbreak	nope
2016-09-20 22:45:08	urdh	pingwindyktator, at least I assume that is the idea, but it probably won't work
2016-09-20 22:45:09	-->	Henke37 (~Henrik@81-227-16-59-no133.bredband.skanova.com) has joined ##c++
2016-09-20 22:45:10	<--	josef_k (~Jeremy@210-10-222-98.mel.static-ipl.aapt.com.au) has quit (Ping timeout: 260 seconds)
2016-09-20 22:45:10	pingwindyktator	urdh: huh, that's the trick, pointers are managed by two shared_ptrs but deleter of boost one is empty (in my solution, without .reset()).
2016-09-20 22:45:35	-->	f10 (~flo@2001:470:52af:1:59b:9657:6ac8:c864) has joined ##c++
2016-09-20 22:45:35		[22:45]
2016-09-20 22:45:41	<--	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has quit (Remote host closed the connection)
2016-09-20 22:45:45	<--	bjz (~bjz@14-201-215-168.tpgi.com.au) has quit (Read error: Connection reset by peer)
2016-09-20 22:45:56	-->	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has joined ##c++
2016-09-20 22:46:02	somaReverse	cbreak: If I don't specify -flto, will the small implementation ever gets inlined?
2016-09-20 22:46:14	-->	TMM (~hp@fsf/member/pdpc.professional.tmm) has joined ##c++
2016-09-20 22:46:18	cbreak	Limona: test case
2016-09-20 22:46:29	pingwindyktator	urdh: so boost::shared_ptr is free to go with ref_count == 0 and "delete" object. only thing is to hold copy of std::shared_ptr to increase ref count
2016-09-20 22:46:39	cbreak	somaReverse: maybe
2016-09-20 22:46:43	cbreak	somaReverse: why do  you care?
2016-09-20 22:46:49	urdh	pingwindyktator, hang on, I read that answer too quickly (all the interesting stuff is in the comments)
2016-09-20 22:46:58	cbreak	it's not that expensive to not inline, and sometimes, inlining makes programs slower
2016-09-20 22:47:05	<--	pa (~pa@unaffiliated/pa) has quit (Ping timeout: 248 seconds)
2016-09-20 22:47:07	-->	zero_byte (zer0@nat/redhat/x-elcjnlptnvmqfgea) has joined ##c++
2016-09-20 22:47:35	somaReverse	cbreak: then what should I care?
2016-09-20 22:48:45	-->	bjz (~bjz@14-201-215-168.tpgi.com.au) has joined ##c++
2016-09-20 22:49:05	Limona	cbreak https://ideone.com/kqzkvw
2016-09-20 22:49:20	-->	bx2 (~bx2@46.140.123.246) has joined ##c++
2016-09-20 22:49:45	<--	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has quit (Remote host closed the connection)
2016-09-20 22:49:46	cbreak	somaReverse: clean code, binary compatibility, fast compile times, maintainability, performance, cost, ...?
2016-09-20 22:49:48	Limona	how terrible is my code from 1/10
2016-09-20 22:49:50	Limona	be real
2016-09-20 22:50:11	-->	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has joined ##c++
2016-09-20 22:50:12	Limona	line 29 is the problem
2016-09-20 22:50:16	cbreak	Limona: somewhat terrible
2016-09-20 22:50:42	cbreak	Limona: std::string http(std::string); // what were you thinking writing that?
2016-09-20 22:50:46	urdh	pingwindyktator, I think the comment by David Rodriguez explains it pretty well
2016-09-20 22:51:03	Limona	cbreak a header/desctiption lol
2016-09-20 22:51:06	<--	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has quit (Remote host closed the connection)
2016-09-20 22:51:12	cbreak	but a function named http?
2016-09-20 22:51:18	Limona	it's a local function
2016-09-20 22:51:19	Limona	lol
2016-09-20 22:51:25	-->	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has joined ##c++
2016-09-20 22:51:45	cbreak	maybe call it "strip_http"?
2016-09-20 22:51:52	cbreak	or "starts_with_http"?
2016-09-20 22:51:52	<--	nacon (~nacon@unaffiliated/nacon) has quit (Quit: leaving)
2016-09-20 22:52:05	Limona	alright
2016-09-20 22:52:09	<--	bkboggy (~bkboggy@cpe-172-250-147-60.socal.res.rr.com) has quit (Quit: Leaving)
2016-09-20 22:52:34	-->	Ipe_ (~Ipe@a91-156-244-1.elisa-laajakaista.fi) has joined ##c++
2016-09-20 22:52:40	cbreak	also, consider taking the argument by const ref
2016-09-20 22:52:49	-->	bjz_ (~bjz@14-201-215-168.tpgi.com.au) has joined ##c++
2016-09-20 22:52:58	-->	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has joined ##c++
2016-09-20 22:53:09	Limona	ah okay
2016-09-20 22:53:10	cbreak	don't know why you'd ever want to remove www.
2016-09-20 22:53:17	<--	bjz_ (~bjz@14-201-215-168.tpgi.com.au) has quit (Read error: Connection reset by peer)
2016-09-20 22:53:21	Limona	because asio needs it without www
2016-09-20 22:53:28	Limona	or http does
2016-09-20 22:53:30	<--	the_abra (~philipp@p4FFF74E1.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2016-09-20 22:54:01	cbreak	no
2016-09-20 22:54:13	cbreak	Limona: www. is a normal subdomain
2016-09-20 22:54:24	<--	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has quit (Client Quit)
2016-09-20 22:54:28	cbreak	if a server's domain name contains www, then you can not remove it without changing the name
2016-09-20 22:54:50	Limona	ah okay
2016-09-20 22:54:52	cbreak	www.xyz.com and xyz.com are DIFFERENT NAMES
2016-09-20 22:54:58	<--	Ben2560 (~quassel@137.154.246.226) has quit (Ping timeout: 244 seconds)
2016-09-20 22:54:58	Limona	i didn't know that
2016-09-20 22:54:59	-->	bjz_ (~bjz@14-201-215-168.tpgi.com.au) has joined ##c++
2016-09-20 22:54:59	Limona	okay
2016-09-20 22:55:17	cbreak	in the early days, web servers were on www.xxx, mail servers on mail.xxx, and so on
2016-09-20 22:55:24	<--	bjz_ (~bjz@14-201-215-168.tpgi.com.au) has quit (Read error: Connection reset by peer)
2016-09-20 22:55:42	<--	bjz (~bjz@14-201-215-168.tpgi.com.au) has quit (Ping timeout: 264 seconds)
2016-09-20 22:55:42	cbreak	but nowadays the web is so important that the servers get the main domain name usually :)
2016-09-20 22:56:56	-->	bjz (~bjz@14-201-215-168.tpgi.com.au) has joined ##c++
2016-09-20 22:57:19	-->	sanct (~sanct@212.35.67.11) has joined ##c++
2016-09-20 22:57:22	<--	bjz (~bjz@14-201-215-168.tpgi.com.au) has quit (Read error: Connection reset by peer)
2016-09-20 22:57:53	cbreak	Limona: anyway, your problem is that substr wants the length of the string you want
2016-09-20 22:57:53	-->	merijn (~merijn@212.78.164.170) has joined ##c++
2016-09-20 22:58:01	Limona	yes
2016-09-20 22:58:08	cbreak	Limona: http://en.cppreference.com/w/cpp/string/basic_string/substr
2016-09-20 22:58:17	cbreak	you give it the length of the string
2016-09-20 22:58:19	-->	bjz (~bjz@14-201-215-168.tpgi.com.au) has joined ##c++
2016-09-20 22:58:27	cbreak	but you can't extract that many characters unless your start offset is 0
2016-09-20 22:59:15	Limona	i don't want it 0
2016-09-20 22:59:26	Limona	i want it from the end of url, till the end of path
2016-09-20 22:59:28	<--	CoolBreeze (~CoolBreez@87-228-34.netrunf.cytanet.com.cy) has quit (Read error: Connection reset by peer)
2016-09-20 22:59:42	-->	CoolBreeze (~CoolBreez@87-228-34.netrunf.cytanet.com.cy) has joined ##c++
2016-09-20 22:59:59	<--	brendel_ (~brice@LAubervilliers-656-1-215-246.w217-128.abo.wanadoo.fr) has quit (Quit: WeeChat 1.1.1)
2016-09-20 23:00:12	-->	brendel (~brice@LAubervilliers-656-1-215-246.w217-128.abo.wanadoo.fr) has joined ##c++
2016-09-20 23:00:33	-->	pa (~pa@unaffiliated/pa) has joined ##c++
2016-09-20 23:00:58	-->	magnicida (~raskolnik@2a02:8109:8c80:231:ea39:dfff:fe4d:275b) has joined ##c++
2016-09-20 23:00:58		[23:00]
2016-09-20 23:01:39	-->	folbofasolin (~folbo@apn-5-60-43-184.dynamic.gprs.plus.pl) has joined ##c++
2016-09-20 23:02:11	Limona	i might want pos+count then
2016-09-20 23:03:24	<--	fooobarrr (~fooobarrr@unaffiliated/fooobarrr) has quit (Ping timeout: 276 seconds)
2016-09-20 23:03:44	<--	plee (~kurt@89.10.219.180) has quit (Read error: Connection reset by peer)
2016-09-20 23:04:08	-->	marcofe (~marcofe@test-centre4-gw.estec.esa.int) has joined ##c++
2016-09-20 23:04:12	-->	plee (~kurt@89.10.219.180) has joined ##c++
2016-09-20 23:04:47	cbreak	no...
2016-09-20 23:04:49	<--	snibod (~snibod@ip-94-42-61-30.multimo.pl) has quit (Ping timeout: 250 seconds)
2016-09-20 23:04:51	<--	bjz (~bjz@14-201-215-168.tpgi.com.au) has quit (Read error: Connection reset by peer)
2016-09-20 23:04:58	cbreak	Limona: you are asking for a longer string than it an give you
2016-09-20 23:05:23	-->	bjz (~bjz@14-201-215-168.tpgi.com.au) has joined ##c++
2016-09-20 23:05:38	<--	Akimb (~Akimb@88-119-138-154.static.zebra.lt) has quit (Ping timeout: 265 seconds)
2016-09-20 23:05:49	<--	bjz (~bjz@14-201-215-168.tpgi.com.au) has quit (Read error: Connection reset by peer)
2016-09-20 23:05:54	Limona	uh how so, it's string - url part
2016-09-20 23:06:07	Limona	so substr(withouturl, length)
2016-09-20 23:06:27	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-20 23:06:41	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 23:06:43	cbreak	Limona: no
2016-09-20 23:06:44	-->	sanett (~sanett@202.119.44.60) has joined ##c++
2016-09-20 23:07:05	sanett	how do I use unsetenv to delete an environment variable?
2016-09-20 23:07:08	-->	yuta_ (ba261803@gateway/web/freenode/ip.186.38.24.3) has joined ##c++
2016-09-20 23:07:08	cbreak	you say: give me the substring of X, starting at somewhere inside X, but just as long as X is
2016-09-20 23:07:12	cbreak	Limona: that makes no sense
2016-09-20 23:07:33	Limona	oh, i thought the second one denominated until where
2016-09-20 23:08:19	-->	bjz (~bjz@14-201-215-168.tpgi.com.au) has joined ##c++
2016-09-20 23:09:01	-->	swnc (~swnc@port-92-204-84-51.dynamic.qsc.de) has joined ##c++
2016-09-20 23:09:03	cbreak	!draft
2016-09-20 23:09:05	nolyc	http://open-std.org/JTC1/SC22/WG21/docs/papers/2016/n4582.pdf (see sidebar at http://isocpp.org for latest version), or http://eel.is/c++draft (html), or http://github.com/cplusplus/draft (LaTeX sources)
2016-09-20 23:09:35	<--	zap0 (~moofy@14-201-222-143.tpgi.com.au) has quit (Quit: zap0)
2016-09-20 23:10:33	<--	justan0theruser (~justanoth@unaffiliated/justanotheruser) has quit (Ping timeout: 240 seconds)
2016-09-20 23:10:59	<--	yuta_ (ba261803@gateway/web/freenode/ip.186.38.24.3) has left ##c++
2016-09-20 23:11:02	Limona	basic_string substr(size_type pos = 0, size_type n = npos) const;
2016-09-20 23:11:30	-->	yuta_ (ba261803@gateway/web/freenode/ip.186.38.24.3) has joined ##c++
2016-09-20 23:11:31	somaReverse	Hi. when implementing class in cc files, should I use " namespace xxx {  blah... } "  or " using namespace xxx;  blah blah... " ?
2016-09-20 23:11:32	Limona	count 	- 	length of the substring
2016-09-20 23:11:32	yuta_	asd
2016-09-20 23:11:36	yuta_	hello
2016-09-20 23:11:52	yuta_	i need help with assembly, anyone can help me?
2016-09-20 23:12:06	Limona	somaReverse using namespace clutters global
2016-09-20 23:12:25	-->	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has joined ##c++
2016-09-20 23:12:34	Limona	cbreak, in = in.substr(geturl(in).length(), in.length()- geturl(in).length());
2016-09-20 23:12:36	Limona	doesn't work either
2016-09-20 23:12:41	-->	Lowl3v3l (~Lowl3v3l@ipservice-092-208-080-178.092.208.pools.vodafone-ip.de) has joined ##c++
2016-09-20 23:13:09	yuta_	how can i convert visual studio assembly syntax to gcc syntax?
2016-09-20 23:13:13	cbreak	Limona: use temp variables...
2016-09-20 23:13:21	Limona	actually cbreak it might be with temp vars
2016-09-20 23:13:27	Limona	being dereferenced
2016-09-20 23:13:42	somaReverse	Limona: which do you suggest then?
2016-09-20 23:14:16	Limona	somaReverse, one is defining namespace and other is using it?
2016-09-20 23:14:32	somaReverse	huh?
2016-09-20 23:15:13	-->	psychicist__ (~psychicis@wlan-145-94-142-174.wlan.tudelft.nl) has joined ##c++
2016-09-20 23:15:30	<--	sanett (~sanett@202.119.44.60) has quit (Ping timeout: 260 seconds)
2016-09-20 23:15:38	et	Limona: you can just use in.length() as the second argument
2016-09-20 23:15:52	-->	sanett (~sanett@208.167.241.249) has joined ##c++
2016-09-20 23:15:57	-->	Markow (~Markow@176.122.215.103) has joined ##c++
2016-09-20 23:15:58	Limona	et no i think the problem was that it wasn't getting a return statement
2016-09-20 23:15:58		[23:15]
2016-09-20 23:16:01	<--	sanett (~sanett@208.167.241.249) has quit (Read error: Connection reset by peer)
2016-09-20 23:16:12	Limona	et std::string t = geturl(in); doesn't seem to work either
2016-09-20 23:16:27	et	i'm not talking about your problem, I'm talking about your overcomplicated code
2016-09-20 23:16:41	<--	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has quit (Ping timeout: 240 seconds)
2016-09-20 23:17:09	et	there's no reason to do calculations, just pass the whole length or npos
2016-09-20 23:17:45	Limona	no, i got the problem, it was that i was using struphttp inside geturl
2016-09-20 23:17:54	Limona	and i got no return
2016-09-20 23:17:57	et	i'm not talking about your problem
2016-09-20 23:17:58	Limona	hence the buffer err
2016-09-20 23:18:00	et	your code is a mess
2016-09-20 23:18:14	yuta_	i need help to compile visual studio syntax assembly code on gcc, anyone can help me?
2016-09-20 23:18:14	Limona	et i could just use length, as that's one of the ways to use substr
2016-09-20 23:18:22	Limona	et which part
2016-09-20 23:18:23	-->	V-ille (~ville@59ec7803.symbio.com) has joined ##c++
2016-09-20 23:19:17	cbreak	yuta_: why not use an other assembler?
2016-09-20 23:19:22	-->	KAHR-Alpha (~Alpha@AReims-652-1-187-168.w92-142.abo.wanadoo.fr) has joined ##c++
2016-09-20 23:19:32	cbreak	yuta_: https://en.wikipedia.org/wiki/Yasm or so?
2016-09-20 23:19:51	yuta_	because i dont know assembly, and i need to use a function in my program that uses visual studio syntax
2016-09-20 23:20:14	Limona	https://ideone.com/lHZ1gq how terrible is my code
2016-09-20 23:20:20	Limona	i can't use const even
2016-09-20 23:20:30	<--	xaxxon (~xaxxon@2601:602:9d00:d58b:6cb3:dcf0:4210:6dce) has quit (Read error: Connection reset by peer)
2016-09-20 23:22:08	-->	xaxxon (~xaxxon@2601:602:9d00:d58b:6cb3:dcf0:4210:6dce) has joined ##c++
2016-09-20 23:22:49	<--	bipul (~bipul7@139.59.5.42) has quit (Ping timeout: 248 seconds)
2016-09-20 23:23:54	-->	bipul (~bipul7@139.59.5.42) has joined ##c++
2016-09-20 23:24:02	<--	opensvn (~xiaoyu@183.250.160.154) has left ##c++
2016-09-20 23:24:14	-->	vicenteH (~user@195.235.96.150) has joined ##c++
2016-09-20 23:27:07	<--	Guest6715 (~Fuxx@2a01:4f8:192:812b::2) has quit (Quit: ZNC - http://znc.in)
2016-09-20 23:27:12	V-ille	why?
2016-09-20 23:27:23	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-20 23:27:34	<--	kilbith (4ee51c3e@gateway/web/cgi-irc/kiwiirc.com/ip.78.229.28.62) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-09-20 23:28:29	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-20 23:32:38	SlashLife	Limona: This doesn't work.
2016-09-20 23:32:38		[23:32]
2016-09-20 23:32:53	Limona	SlashLife what doesn't?
2016-09-20 23:32:58	-->	Anticom (~quassel@217.6.33.234) has joined ##c++
2016-09-20 23:33:00	<--	sigtrm (quassel@quassel.woboq.de) has quit (Ping timeout: 260 seconds)
2016-09-20 23:33:05	-->	forgottenone (~forgotten@195.142.65.127) has joined ##c++
2016-09-20 23:33:07	SlashLife	getpath() calls geturl(). geturl() returns the host/port pair.
2016-09-20 23:33:14	<--	Ipe_ (~Ipe@a91-156-244-1.elisa-laajakaista.fi) has quit (Quit: Konversation terminated!)
2016-09-20 23:33:24	<--	QwertyDragon (~QwertyDra@pool-98-118-51-122.bstnma.fios.verizon.net) has quit (Quit: Leaving)
2016-09-20 23:33:30	<--	drozdziak1 (~drozdziak@do-atman.cubiware.com) has quit (Ping timeout: 264 seconds)
2016-09-20 23:33:30	SlashLife	And sets ... oh, geturl() doesn'T set.
2016-09-20 23:33:31	SlashLife	My mistake.
2016-09-20 23:33:33	<--	andyhuzhill (~Thunderbi@14.23.45.178) has quit (Quit: andyhuzhill)
2016-09-20 23:33:41	<--	merijn (~merijn@212.78.164.170) has quit (Quit: Reconnecting)
2016-09-20 23:33:48	SlashLife	geturl() does not return on all paths, though.
2016-09-20 23:33:52	-->	jorj (~jorj@162.220.240.216) has joined ##c++
2016-09-20 23:33:52	Limona	yeah i was thinking some pattern might help me here
2016-09-20 23:33:56	-->	merijn (~merijn@212.78.164.170) has joined ##c++
2016-09-20 23:34:21	-->	Murii (~Murii@86.127.60.21) has joined ##c++
2016-09-20 23:34:23	Limona	i just added a return in;
2016-09-20 23:34:28	Limona	if it doesn't find anything
2016-09-20 23:36:30	-->	tis_me (~duane@S0106602ad071a37a.ed.shawcable.net) has joined ##c++
2016-09-20 23:37:33	-->	sigtrm (quassel@quassel.woboq.de) has joined ##c++
2016-09-20 23:37:45	<--	ftop (~ftop@ppp121-45-223-68.lns20.cbr1.internode.on.net) has quit (Ping timeout: 248 seconds)
2016-09-20 23:38:01	et	Limona: you're returning the substrings, after determining their length, for the sole purpose of using their length later
2016-09-20 23:38:12	SlashLife	How about a single function that returns some type that takes a copy of the string and does it all?
2016-09-20 23:38:20	-->	rebb (~rebb3@p54B80D93.dip0.t-ipconnect.de) has joined ##c++
2016-09-20 23:39:21	Limona	I'd be duplicating my code then
2016-09-20 23:39:26	SlashLife	You can store an iterator (each) to the end of the schema and the endpoint parts and then just copy what's between them if someone requests those parts.
2016-09-20 23:39:34	SlashLife	Or just work with the iterators in the first place.
2016-09-20 23:39:54	Limona	et, i know, briliant right...
2016-09-20 23:39:55	Limona	lol
2016-09-20 23:40:04	Limona	yeah it couldove been done better i agree
2016-09-20 23:40:05	-->	lloda (~user@213-193-80-99.static.cablecom.ch) has joined ##c++
2016-09-20 23:40:35	SlashLife	Actually - at that point the string should be const anyway, so instead of iterators you could store indices.
2016-09-20 23:40:49	SlashLife	That'd make assingment of the result type easier.
2016-09-20 23:42:27	-->	Xanather (~xanather@unaffiliated/xanather) has joined ##c++
2016-09-20 23:43:26	Limona	I have a weird problem, i want to call an object, but i can't return anything from it's constructor since c++ doesn't allow that
2016-09-20 23:43:35	<--	UnlikeSuika_mobi (~UnlikeSui@223.38.8.129) has quit (Quit: RIP)
2016-09-20 23:43:38	Limona	but i don't want to use a static function i guess
2016-09-20 23:43:44	<--	bjz (~bjz@14-201-215-168.tpgi.com.au) has quit (Read error: Connection reset by peer)
2016-09-20 23:43:44	Limona	do i just have to call an empty constructor
2016-09-20 23:43:47	-->	UnlikeSuika_mobi (~UnlikeSui@115.93.122.107) has joined ##c++
2016-09-20 23:44:02	Limona	and then it's methods
2016-09-20 23:44:14	-->	bjz (~bjz@14-201-215-168.tpgi.com.au) has joined ##c++
2016-09-20 23:44:56	<--	zhangxaochen (~zhangxaoc@183.157.160.51) has quit (Quit: Leaving)
2016-09-20 23:46:58	ville	that made little sense
2016-09-20 23:47:16	ville	what does "call an object" mean?
2016-09-20 23:49:07	Limona	let's say i have a method that want's to connect somewhere and give me results
2016-09-20 23:49:07		[23:49]
2016-09-20 23:49:31	Limona	since constructors can't have returns, it'd have to be a method in that class
2016-09-20 23:49:37	Limona	but it'd make little sense to make it static right?
2016-09-20 23:50:37	--	Thorn__ is now known as Thorn
2016-09-20 23:50:50	-->	UnlikeSuika (~UnlikeSui@115.93.122.107) has joined ##c++
2016-09-20 23:51:20	-->	King_Hual (~failed@unaffiliated/king-hual/x-1207580) has joined ##c++
2016-09-20 23:51:44	<--	Zxpr1jk (~zxpr1jk@24.214.61.47) has quit (Read error: Connection reset by peer)
2016-09-20 23:52:05	<--	wrs20 (~wrs202@mapc-4044.bath.ac.uk) has quit (Quit: Leaving)
2016-09-20 23:52:10	<--	aviraldg (aviraldgma@gateway/shell/matrix.org/x-ikyxmqploopcmaiv) has quit (Read error: Connection reset by peer)
2016-09-20 23:52:10	<--	disgusting[m] (disgusting@gateway/shell/matrix.org/x-madgadldufdlqfkk) has quit (Remote host closed the connection)
2016-09-20 23:52:42	<--	yuta_ (ba261803@gateway/web/freenode/ip.186.38.24.3) has quit (Ping timeout: 240 seconds)
2016-09-20 23:52:46	-->	ftop (~ftop@ppp121-45-223-68.lns20.cbr1.internode.on.net) has joined ##c++
2016-09-20 23:56:36	<--	mjuhl95 (~mikkel-@46.101.221.37) has quit (Quit: WeeChat 0.4.3)
2016-09-20 23:57:30	<--	rorro (~rorro@c-227-78.eduroam.liu.se) has quit (Ping timeout: 260 seconds)
2016-09-20 23:57:37	-->	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has joined ##c++
2016-09-20 23:58:01	Limona	how i fail to link
2016-09-20 23:58:01	Limona	on an include only library is beyond me
2016-09-20 23:58:02	Limona	on a headers only*
2016-09-20 23:59:22	-->	Appleman1234_ (~Appleman1@KD119104058103.au-net.ne.jp) has joined ##c++
2016-09-20 23:59:24	-->	Akimb (~Akimb@88-119-138-154.static.zebra.lt) has joined ##c++
2016-09-20 23:59:31	-->	rorro (~rorro@c-227-78.eduroam.liu.se) has joined ##c++
2016-09-21 00:00:00	Limona		asio::io_service _io_service; works
2016-09-21 00:00:02	Limona	but static 	asio::io_service _io_service;
2016-09-21 00:00:03	Limona	doesn't
2016-09-21 00:00:24	<--	Appleman1234 (~Appleman1@KD119104054143.au-net.ne.jp) has quit (Ping timeout: 244 seconds)
2016-09-21 00:01:03	<--	AquaL1te (~AquaL1te@unaffiliated/aqual1te) has quit (Ping timeout: 240 seconds)
2016-09-21 00:01:27	-->	pixelate^ (~pixelate@139.0.123.187) has joined ##c++
2016-09-21 00:02:37	<--	pixelate (~pixelate@139.228.167.19) has quit (Ping timeout: 244 seconds)
2016-09-21 00:02:44	-->	Ben2560 (~quassel@137.154.246.226) has joined ##c++
2016-09-21 00:03:43	urdh	Limona, why does it have to be a class at all then?
2016-09-21 00:03:49	urdh	sounds like a free function to me
2016-09-21 00:03:54	<--	forgottenone (~forgotten@195.142.65.127) has quit (Quit: Konversation terminated!)
2016-09-21 00:04:19	Limona	yeah that's what i thought as well, but it might be better if it's encapsulated since i might want to thread it out
2016-09-21 00:04:19		[00:04]
2016-09-21 00:04:37	Limona	and each connection might have some variables
2016-09-21 00:05:05	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-21 00:05:07	<--	FreeBirdLjj (~freebirdl@218.94.142.81) has quit (Remote host closed the connection)
2016-09-21 00:06:28	<--	merijn (~merijn@212.78.164.170) has quit (Ping timeout: 255 seconds)
2016-09-21 00:06:37	-->	forgottenone (~forgotten@195.142.65.127) has joined ##c++
2016-09-21 00:06:39	<--	corsaere (~corsaere@unaffiliated/corsaere) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-09-21 00:06:54	-->	esas (~esas@unaffiliated/esas) has joined ##c++
2016-09-21 00:07:06	-->	flavi0 (~anon@unaffiliated/flavi0) has joined ##c++
2016-09-21 00:07:28	-->	Thorn__ (~Thorn@unaffiliated/thorn) has joined ##c++
2016-09-21 00:07:51	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 00:07:53	urdh	still thinking free function here, unless you can to multiple operations on the same connection
2016-09-21 00:08:00	<--	kw01f (~kw01f@merlin.mvtec.com) has quit (Remote host closed the connection)
2016-09-21 00:08:10	urdh	in which case just create a connection instance
2016-09-21 00:08:33	<--	folbofasolin (~folbo@apn-5-60-43-184.dynamic.gprs.plus.pl) has quit (Ping timeout: 240 seconds)
2016-09-21 00:09:04	-->	StyxAlso (~markg@120.88.147.168) has joined ##c++
2016-09-21 00:09:19	--	Appleman1234_ is now known as Appleman1234
2016-09-21 00:09:37	-->	merijn (~merijn@212.78.164.170) has joined ##c++
2016-09-21 00:09:37	<--	merijn (~merijn@212.78.164.170) has quit (Client Quit)
2016-09-21 00:09:54	-->	merijn (~merijn@212.78.164.170) has joined ##c++
2016-09-21 00:09:59	<--	Stanley00 (~Stanley_0@unaffiliated/stanley00) has quit (Quit: Leaving)
2016-09-21 00:10:03	<--	rriemann_ (~rriemann@anyconnect193.insa-lyon.fr) has quit (Ping timeout: 240 seconds)
2016-09-21 00:10:24	-->	BigLion (c17e50f9@gateway/web/freenode/ip.193.126.80.249) has joined ##c++
2016-09-21 00:10:37	<--	ARCADIVS (~RMM@97.84.20.251) has quit (Quit: ARCADIVS)
2016-09-21 00:10:42	<--	Flakes (~Damien2@58.247.81.50) has quit (Ping timeout: 264 seconds)
2016-09-21 00:10:44	<--	Thorn (~Thorn@unaffiliated/thorn) has quit (Ping timeout: 244 seconds)
2016-09-21 00:11:02	-->	DingoSaar (~hagen@pD9E08F59.dip0.t-ipconnect.de) has joined ##c++
2016-09-21 00:12:59	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 244 seconds)
2016-09-21 00:13:18	<--	DingoSaar_ (~hagen@pD9E08F1B.dip0.t-ipconnect.de) has quit (Ping timeout: 265 seconds)
2016-09-21 00:14:12	-->	AquaL1te (~AquaL1te@unaffiliated/aqual1te) has joined ##c++
2016-09-21 00:14:21	<--	psychicist__ (~psychicis@wlan-145-94-142-174.wlan.tudelft.nl) has quit (Quit: Reconnecting)
2016-09-21 00:14:39	-->	psychicist__ (~psychicis@wlan-145-94-142-174.wlan.tudelft.nl) has joined ##c++
2016-09-21 00:15:45	Murii	how do I get the data from an typedef enum { code inside } name; ?
2016-09-21 00:16:10	<--	Furkiepurkie (~Furkie@2001:1af8:4700:a03c:7::) has quit (Quit: leaving)
2016-09-21 00:16:58	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 00:21:09	<--	Palsson (~Palsson@pc-193-235-91-227.norrkoping.se) has quit (Read error: Connection reset by peer)
2016-09-21 00:21:09		[00:21]
2016-09-21 00:21:49	-->	Palsson (~Palsson@pc-193-235-91-227.norrkoping.se) has joined ##c++
2016-09-21 00:23:32	-->	deekej (deekej@nat/redhat/x-ipptftkhtuxmapoh) has joined ##c++
2016-09-21 00:25:51	<--	ezzieyguywuf (~wolfie@unaffiliated/ezzieyguywuf) has quit (Read error: Connection reset by peer)
2016-09-21 00:26:24	-->	ezzieyguywuf (~wolfie@unaffiliated/ezzieyguywuf) has joined ##c++
2016-09-21 00:26:27	ville	what is "the data"?
2016-09-21 00:26:39	-->	Furkiepurkie (~Furkie@2001:1af8:4700:a03c:7::) has joined ##c++
2016-09-21 00:27:14	Murii	I figured it out,thx :)
2016-09-21 00:27:32	ville	Limona: static int x; as a class member is just a declaration of the member. you still need definition for the  member
2016-09-21 00:28:53	<--	tlaxkit (~Thunderbi@92.185.154.236) has quit (Read error: Connection reset by peer)
2016-09-21 00:29:06	ville	well need being relative depending on the usage of it
2016-09-21 00:29:12	-->	aviraldg (aviraldgma@gateway/shell/matrix.org/x-efumytrelqbjztff) has joined ##c++
2016-09-21 00:30:45	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-21 00:31:01	-->	tlaxkit (~Thunderbi@92.185.154.236) has joined ##c++
2016-09-21 00:31:14	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 00:31:17	-->	zap0 (~moofy@14-201-222-143.tpgi.com.au) has joined ##c++
2016-09-21 00:31:31	-->	KindOne_ (kindone@freenude/topless/kindone) has joined ##c++
2016-09-21 00:32:50	-->	kamog (~user@95.72.62.62) has joined ##c++
2016-09-21 00:32:57	-->	FreeBirdLjj (~freebirdl@218.94.142.81) has joined ##c++
2016-09-21 00:33:22	om3n	hello everyone
2016-09-21 00:33:41	<--	bjz (~bjz@14-201-215-168.tpgi.com.au) has quit (Ping timeout: 265 seconds)
2016-09-21 00:33:46	zap0	every single person?    you cwazy!
2016-09-21 00:33:54	om3n	i am !
2016-09-21 00:33:55	-->	bjz (~bjz@104.222.140.104) has joined ##c++
2016-09-21 00:34:06	<--	KindOne (kindone@freenude/topless/kindone) has quit (Ping timeout: 264 seconds)
2016-09-21 00:34:16	om3n	but on a serious note i have a question
2016-09-21 00:34:35	zap0	a brown note?
2016-09-21 00:34:41	<--	Aquza (~Aquza@p578b4612.dip0.t-ipconnect.de) has quit (Ping timeout: 240 seconds)
2016-09-21 00:34:53	-->	Aquza (~Aquza@p578b4612.dip0.t-ipconnect.de) has joined ##c++
2016-09-21 00:35:18	om3n	am trying to run an if statement if(grab() == "yes") where grab just has a cin into a string and returns that string
2016-09-21 00:35:34	<--	merijn (~merijn@212.78.164.170) has quit (Ping timeout: 265 seconds)
2016-09-21 00:35:36	om3n	however if i try to add an or statment into my if
2016-09-21 00:35:48	--	KindOne_ is now known as KindOne
2016-09-21 00:36:00	om3n	say if(grab() == "yes" || grab() == "Yes")
2016-09-21 00:36:09	om3n	that repeats my function
2016-09-21 00:36:09		[00:36]
2016-09-21 00:36:11	-->	Akimbas (~Akimb@88-119-138-154.static.zebra.lt) has joined ##c++
2016-09-21 00:36:18	<--	Akimb (~Akimb@88-119-138-154.static.zebra.lt) has quit (Read error: Connection reset by peer)
2016-09-21 00:36:19	-->	kw01f (~kw01f@merlin.mvtec.com) has joined ##c++
2016-09-21 00:36:26	om3n	is there a way around it ?
2016-09-21 00:36:28	TinoDidriksen	So store it in a variable first.
2016-09-21 00:36:36	kamog	om3n: that's two input requests, save it into a variable
2016-09-21 00:36:49	om3n	i knew the answer is simple
2016-09-21 00:36:51	om3n	o.O
2016-09-21 00:37:40	<--	UnlikeSuika (~UnlikeSui@115.93.122.107) has quit (Ping timeout: 276 seconds)
2016-09-21 00:37:47	<--	psychicist__ (~psychicis@wlan-145-94-142-174.wlan.tudelft.nl) has quit (Ping timeout: 244 seconds)
2016-09-21 00:37:49	SlashLife	Limona: "A bit" more code: https://ideone.com/EhrijP - and it's still missing query string and anchor detection. (:
2016-09-21 00:38:23	TinoDidriksen	*fragment
2016-09-21 00:38:51	<--	KAHR-Alpha (~Alpha@AReims-652-1-187-168.w92-142.abo.wanadoo.fr) has quit (Ping timeout: 250 seconds)
2016-09-21 00:38:53	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 00:39:28	TinoDidriksen	Also, that's not the scheme. It stops at :
2016-09-21 00:39:28	-->	UnlikeSuika (~UnlikeSui@115.93.122.107) has joined ##c++
2016-09-21 00:39:36	<--	SHC (~quassel@59.88.213.119) has quit (Ping timeout: 276 seconds)
2016-09-21 00:39:44	TinoDidriksen	https://en.wikipedia.org/wiki/Uniform_Resource_Identifier#Syntax
2016-09-21 00:39:59	-->	chiken (~chiken@60-242-215-61.static.tpgi.com.au) has joined ##c++
2016-09-21 00:40:08	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-21 00:40:22	<--	Gluesticky (~nobody@unaffiliated/gluesticky) has quit (Quit: This is the end. Goodbye cruel world!)
2016-09-21 00:40:55	-->	rtkt (~rtkt@226.18-78-194.adsl-static.isp.belgacom.be) has joined ##c++
2016-09-21 00:41:22	-->	oxygene (~fred@ALille-652-1-134-14.w83-198.abo.wanadoo.fr) has joined ##c++
2016-09-21 00:41:30	-->	psychicist__ (~psychicis@wlan-145-94-142-174.wlan.tudelft.nl) has joined ##c++
2016-09-21 00:44:42	<--	meandrain (~meandrain@89.39.95.149) has quit (Read error: No route to host)
2016-09-21 00:46:59	<--	Anticom (~quassel@217.6.33.234) has quit (Remote host closed the connection)
2016-09-21 00:48:56	-->	lh_cat (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2016-09-21 00:49:47	<--	Martchus (~martchus@dslb-088-072-107-118.088.072.pools.vodafone-ip.de) has quit (Ping timeout: 248 seconds)
2016-09-21 00:50:35	<--	Immune (~Immune@173.55.30.110) has quit (Ping timeout: 260 seconds)
2016-09-21 00:51:14	-->	Martchus (~martchus@dslb-094-217-025-074.094.217.pools.vodafone-ip.de) has joined ##c++
2016-09-21 00:51:14		[00:51]
2016-09-21 00:51:19	-->	drozdziak1 (~drozdziak@do-atman.cubiware.com) has joined ##c++
2016-09-21 00:51:39	<--	Carbonflux (~Bob@71-35-165-133.tukw.qwest.net) has quit (Quit: Leaving)
2016-09-21 00:52:04	<--	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has quit (Ping timeout: 244 seconds)
2016-09-21 00:52:09	<--	tlaxkit (~Thunderbi@92.185.154.236) has quit (Quit: tlaxkit)
2016-09-21 00:52:20	-->	rriemann_ (~rriemann@dhcp-67-135.ixxi.ens-lyon.fr) has joined ##c++
2016-09-21 00:52:44	<--	Lomex (~lomex@213.61.34.42) has quit (Remote host closed the connection)
2016-09-21 00:53:13	--	Thorn__ is now known as Thorn
2016-09-21 00:55:19	-->	genpaku (~genpaku@107.191.100.185) has joined ##c++
2016-09-21 00:58:04	-->	NoShlomo (~NoShlomo@90.74.151.136) has joined ##c++
2016-09-21 00:58:17	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 248 seconds)
2016-09-21 00:58:49	<--	taj (~gh0st@a89-154-145-32.cpe.netcabo.pt) has quit (Quit: Ex-Chat)
2016-09-21 00:58:51	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 01:02:25	-->	jackhum (uid97400@gateway/web/irccloud.com/x-ohihddtkebdudpyf) has joined ##c++
2016-09-21 01:03:38	<--	chiken (~chiken@60-242-215-61.static.tpgi.com.au) has quit (Quit: Leaving)
2016-09-21 01:03:57	-->	Lomex (~lomex@213.61.34.42) has joined ##c++
2016-09-21 01:04:03	-->	bergesenha (~harald@90.149.192.21) has joined ##c++
2016-09-21 01:04:32	SlashLife	TinoDidriksen: Indeed, thanks. Fixed: https://ideone.com/EhrijP // Limona
2016-09-21 01:05:08	-->	spindle (~spindle@27-33-39-55.static.tpgi.com.au) has joined ##c++
2016-09-21 01:05:45	<--	rorro (~rorro@c-227-78.eduroam.liu.se) has quit (Ping timeout: 260 seconds)
2016-09-21 01:05:46	<--	huggy (~huggy@46-227-67-170.pool.ovpn.se) has quit (Ping timeout: 272 seconds)
2016-09-21 01:05:53	-->	Faceuk (~Faceuk@cpc5-stre6-2-0-cust487.1-1.cable.virginm.net) has joined ##c++
2016-09-21 01:06:06	-->	mpo42vr_ (~mpo@unaffiliated/mpo42vr) has joined ##c++
2016-09-21 01:07:00	mpo42vr_	Guys, do I understand this right that the stack is not in main memory but in cache?
2016-09-21 01:07:00		[01:07]
2016-09-21 01:07:06	-->	chiken (~chiken@60-242-215-61.static.tpgi.com.au) has joined ##c++
2016-09-21 01:08:05	<--	Martchus (~martchus@dslb-094-217-025-074.094.217.pools.vodafone-ip.de) has quit (Ping timeout: 260 seconds)
2016-09-21 01:08:14	-->	Martchus_ (~martchus@dslb-178-007-021-175.178.007.pools.vodafone-ip.de) has joined ##c++
2016-09-21 01:08:54	<--	Lomex (~lomex@213.61.34.42) has quit (Ping timeout: 264 seconds)
2016-09-21 01:08:56	<--	rtkt (~rtkt@226.18-78-194.adsl-static.isp.belgacom.be) has quit (Quit: Leaving)
2016-09-21 01:09:42	SlashLife	mpo42vr_: C++ doesn't know about a stack (unless you are talking about std::stack). That being said: You don't (understand it correctly). That being said: C++ doesn't know about a stack, so you should direct follow up querytions to ##c++-general instead.
2016-09-21 01:09:45	bergesenha	mpo42vr_ the cache is a hardware implementation detail and not part of the C++ standard
2016-09-21 01:10:08	SlashLife	s/querytions/questions/
2016-09-21 01:12:03	-->	gist (~jack@p5790769A.dip0.t-ipconnect.de) has joined ##c++
2016-09-21 01:12:18	mpo42vr_	Alright. Thank you both. And it's good to know that there is a general c++ channel - I'll head over there.
2016-09-21 01:12:38	mpo42vr_	SlashLife: And btw, I like the word querytions :)
2016-09-21 01:12:41	<--	Martchus_ (~martchus@dslb-178-007-021-175.178.007.pools.vodafone-ip.de) has quit (Ping timeout: 240 seconds)
2016-09-21 01:13:01	<--	Palsson (~Palsson@pc-193-235-91-227.norrkoping.se) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-09-21 01:13:13	<--	Brando753-o_O_o (~Brando753@63.143.51.198) has quit (Ping timeout: 248 seconds)
2016-09-21 01:13:18	-->	UnripeSuica_mobi (~UnlikeSui@223.62.8.191) has joined ##c++
2016-09-21 01:14:36	-->	a3pq51 (~a3pq51@202-22-179-94.pool.ukrtel.net) has joined ##c++
2016-09-21 01:14:48	<--	UnlikeSuika_mobi (~UnlikeSui@115.93.122.107) has quit (Ping timeout: 244 seconds)
2016-09-21 01:16:36	<--	kaffeetrauma (~Thunderbi@n37.informatik.fh-dortmund.de) has quit (Quit: kaffeetrauma)
2016-09-21 01:16:46	-->	ehiggs (~ehiggs@129.253.244.4) has joined ##c++
2016-09-21 01:16:57	-->	kaffeetrauma (~Thunderbi@n37.informatik.fh-dortmund.de) has joined ##c++
2016-09-21 01:17:15	<--	kaffeetrauma (~Thunderbi@n37.informatik.fh-dortmund.de) has quit (Client Quit)
2016-09-21 01:18:20	-->	Martchus (~martchus@dslb-188-098-244-050.188.098.pools.vodafone-ip.de) has joined ##c++
2016-09-21 01:18:35	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-21 01:18:40	-->	GenteelBen (GenteelBen@cpc70133-lutn12-2-0-cust324.9-3.cable.virginm.net) has joined ##c++
2016-09-21 01:20:10	cbreak	mpo42vr_: on most platforms stack memory is part of main memory
2016-09-21 01:20:48	<--	Tempesta_ (~Tempesta@121.131.185.96) has left ##c++
2016-09-21 01:20:48	cbreak	mpo42vr_: i.e. on intel's ia32 architecture, amd64, arm's architecture, ...
2016-09-21 01:20:57	-->	Tempesta (~Tempesta@unaffiliated/tempesta) has joined ##c++
2016-09-21 01:21:12	cbreak	but C++ itself makes no requirement that this is so.
2016-09-21 01:21:13	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 01:22:37	cbreak	I don't think a stack is even explicitly or implicitly required to be used, although it is the most natural solution to the problme.
2016-09-21 01:22:37		[01:22]
2016-09-21 01:22:40	-->	nilof (~saolof@92-32-80-134.tn.glocalnet.net) has joined ##c++
2016-09-21 01:23:00	cbreak	I've heard of attempts to use two parallel stacks, for example
2016-09-21 01:23:43	cbreak	and of course, C++ works for platforms without a single "main memory" (non von-neuman architectures)
2016-09-21 01:23:53	<--	ehiggs (~ehiggs@129.253.244.4) has left ##c++
2016-09-21 01:24:04	-->	fahadash (uid44972@gateway/web/irccloud.com/x-qbbmzlmspmhpbkki) has joined ##c++
2016-09-21 01:24:19	<--	f10_ (~flo@2001:470:52af:1:c5c4:f236:6e26:8177) has quit (Ping timeout: 255 seconds)
2016-09-21 01:24:28	-->	Anticom (~quassel@217.6.33.234) has joined ##c++
2016-09-21 01:25:17	<--	Kn|t3 (~agarwalvi@104.132.196.76) has quit (Quit: Kn|t3)
2016-09-21 01:25:33	<--	sammyg (~sammyg@h-13-10.a485.priv.bahnhof.se) has quit (Ping timeout: 240 seconds)
2016-09-21 01:26:17	Henke37	wasn't there some cpu that did have a dual stack setup? alpha? Intallium? or something?
2016-09-21 01:28:47	<--	chiken (~chiken@60-242-215-61.static.tpgi.com.au) has quit (Quit: Leaving)
2016-09-21 01:29:05	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-21 01:29:33	cbreak	http://blogs.intel.com/evangelists/2016/06/09/intel-release-new-technology-specifications-protect-rop-attacks/
2016-09-21 01:29:50	-->	merijn (~merijn@212.78.164.170) has joined ##c++
2016-09-21 01:30:25	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 01:31:27	ville	!focus
2016-09-21 01:31:28	nolyc	##c++ focuses on C++. Discuss offtopic things elsewhere; ##c++-general or ##c++-social
2016-09-21 01:31:39	cbreak	Henke37: of course this is quite a hack
2016-09-21 01:31:43	-->	naughty_rac00n (~sammy@175.156.226.234) has joined ##c++
2016-09-21 01:31:46	cbreak	but from C++ out it's transparent
2016-09-21 01:31:58	cbreak	compilers can be changed to use this and it wouldn't make a difference for the language at all
2016-09-21 01:33:11	cbreak	calling function pointers that were not created by getting the address of a function, or some similar mean, is already UB
2016-09-21 01:34:25	cbreak	so, even if auto x = reinterpret_cast<uintptr_t>(&func); x += 1; reinterpret_cast<void(*)()>(x)(); works now, it doesn't have to continue to work because the standard doesn't say it works :)
2016-09-21 01:37:06	<--	riemann (~riemann@84-10-11-234.static.chello.pl) has quit (Quit: Leaving)
2016-09-21 01:37:22	<--	Sceorem (~Sceorem@xbn44-3-82-232-76-9.fbx.proxad.net) has quit (Ping timeout: 255 seconds)
2016-09-21 01:37:48	<--	Faceuk (~Faceuk@cpc5-stre6-2-0-cust487.1-1.cable.virginm.net) has quit (Read error: Connection reset by peer)
2016-09-21 01:37:48		[01:37]
2016-09-21 01:38:12	-->	snibod (~snibod@ip-94-42-61-30.multimo.pl) has joined ##c++
2016-09-21 01:38:22	<--	psychicist__ (~psychicis@wlan-145-94-142-174.wlan.tudelft.nl) has quit (Ping timeout: 265 seconds)
2016-09-21 01:39:00	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-21 01:39:12	-->	kasper^ (~safaf@82.137.15.177) has joined ##c++
2016-09-21 01:39:13	-->	Sceorem (~Sceorem@xbn44-3-82-232-76-9.fbx.proxad.net) has joined ##c++
2016-09-21 01:39:55	<--	UnripeSuica_mobi (~UnlikeSui@223.62.8.191) has quit (Quit: RIP)
2016-09-21 01:40:09	-->	meandrain (~meandrain@89.39.95.149) has joined ##c++
2016-09-21 01:40:31	<--	nilg (~user@77.70.2.229) has quit (Remote host closed the connection)
2016-09-21 01:40:37	-->	UnlikeSuika_mobi (~UnlikeSui@223.62.8.191) has joined ##c++
2016-09-21 01:40:41	-->	wolfcub (~henrique_@186.194.99.136) has joined ##c++
2016-09-21 01:40:42	<--	UnlikeSuika_mobi (~UnlikeSui@223.62.8.191) has quit (Client Quit)
2016-09-21 01:40:50	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 01:40:59	-->	UnlikeSuika_mobi (~UnlikeSui@115.93.122.107) has joined ##c++
2016-09-21 01:43:10	-->	omx (~Vlad@86.127.60.21) has joined ##c++
2016-09-21 01:48:19	<--	aviraldg (aviraldgma@gateway/shell/matrix.org/x-efumytrelqbjztff) has quit (Changing host)
2016-09-21 01:48:19	-->	aviraldg (aviraldgma@unaffiliated/aviraldg) has joined ##c++
2016-09-21 01:48:19	<--	aviraldg (aviraldgma@unaffiliated/aviraldg) has quit (Changing host)
2016-09-21 01:48:19	-->	aviraldg (aviraldgma@gateway/shell/matrix.org/x-efumytrelqbjztff) has joined ##c++
2016-09-21 01:49:21	-->	riemann (~riemann@84-10-11-234.static.chello.pl) has joined ##c++
2016-09-21 01:49:46	KrzaQ	cbreak: doesn
2016-09-21 01:49:53	KrzaQ	t that make dlopen technically ub?
2016-09-21 01:50:00	KrzaQ	darn enter next to '
2016-09-21 01:50:19	cbreak	no. just dlsym :)
2016-09-21 01:50:25	<--	StyxAlso (~markg@120.88.147.168) has quit (Quit: StyxAlso)
2016-09-21 01:50:38	KrzaQ	phew, right
2016-09-21 01:50:58	ville	c++ ub is fine when you then have other guarantees from the platform
2016-09-21 01:50:58	V-ille	yeah, dlsym is UB and then posix defines what the result of that UB is
2016-09-21 01:51:31	cbreak	KrzaQ: what this prevents is jumping into the middle of a function
2016-09-21 01:51:33	 *	KrzaQ can imagine how popular a C++ compiler exploiting that UB would be
2016-09-21 01:51:48	cbreak	and that's not needed for dlsym to work
2016-09-21 01:51:58	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 01:53:06	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-21 01:53:06		[01:53]
2016-09-21 01:53:06	ppf	i just came across something like this in our codebase: https://ghostbin.com/paste/s9kcq
2016-09-21 01:53:55	ppf	clang doesn't complain about this, but gcc errors with 'qualifiers are not allowed on declaration of ...', pointing to the trailing const
2016-09-21 01:54:22	ppf	what's wrong with the trailing const here?
2016-09-21 01:54:40	ppf	shouldn't both compilers complain about the first const coming before the operator keyword?
2016-09-21 01:55:35	ppf	and which of the compiolers is correct in the (non-)error
2016-09-21 01:55:49	-->	m_ben (~m_ben@unaffiliated/m-ben/x-5917362) has joined ##c++
2016-09-21 01:56:27	Limona	SlashLife damn thx
2016-09-21 01:57:48	-->	neurodrone (~neurodron@unaffiliated/neurodrone) has joined ##c++
2016-09-21 01:58:54	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 276 seconds)
2016-09-21 01:59:01	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 01:59:20	Limona	ville how do i declare a static var, do i make it constexpr, or something?
2016-09-21 02:00:10	<--	merijn (~merijn@212.78.164.170) has quit (Quit: Reconnecting)
2016-09-21 02:00:23	-->	merijn (~merijn@212.78.164.170) has joined ##c++
2016-09-21 02:00:36	-->	iik (~IIK@staticline-31-183-46-69.toya.net.pl) has joined ##c++
2016-09-21 02:00:36	-->	Lomex (~lomex@213.61.34.42) has joined ##c++
2016-09-21 02:00:42	-->	Restored (52a1222d@gateway/web/freenode/ip.82.161.34.45) has joined ##c++
2016-09-21 02:00:48	Limona	where do i declare it, since it's static? In the constructor?
2016-09-21 02:00:50	Limona	just once?
2016-09-21 02:00:55	Limona	so it's a singleton of sorts?
2016-09-21 02:01:05	-->	jan64 (~jan64@agad109.neoplus.adsl.tpnet.pl) has joined ##c++
2016-09-21 02:01:16	<--	kw01f (~kw01f@merlin.mvtec.com) has quit (Remote host closed the connection)
2016-09-21 02:01:28	ppf	what do you mean by static exactly
2016-09-21 02:01:37	Limona		static asio::io_service _io_service;
2016-09-21 02:01:38	-->	livingBEEF (~livingBEE@46.13.161.162) has joined ##c++
2016-09-21 02:01:43	Limona	static class member
2016-09-21 02:01:48	-->	kw01f (~kw01f@merlin.mvtec.com) has joined ##c++
2016-09-21 02:01:49	Limona	it's a class i believe
2016-09-21 02:01:58	Limona	and i'd need to initialise it somewhere
2016-09-21 02:02:41	livingBEEF	Is there something like string enum? Basically I'd like to be able to do FOO::bar and get a string.
2016-09-21 02:02:42	-->	NeXTSUN (~textual@2601:83:8100:42cf:68da:e8f9:3da0:43bf) has joined ##c++
2016-09-21 02:02:51	ppf	there are no static constructors in c++
2016-09-21 02:02:58	ppf	you have to emulate that
2016-09-21 02:03:11	Limona	livingBEEF that sounds like a static class function?
2016-09-21 02:03:18	Limona	ppf yes.. any idea how?
2016-09-21 02:03:22	Limona	a constructor call maynbe?
2016-09-21 02:03:42	livingBEEF	NO. I do not want a function. I want a constant.
2016-09-21 02:03:52	Limona	ppf https://ideone.com/3tY0dt
2016-09-21 02:04:04	livingBEEF	I'll use #defines if I have to, but I'd like something ... better
2016-09-21 02:04:37	ppf	one thing you can do is have a (possibly anonymous) default constuctible class and have a static member of that. then put your static initialization into that class's ctor
2016-09-21 02:04:45	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 276 seconds)
2016-09-21 02:04:57	<--	Restored (52a1222d@gateway/web/freenode/ip.82.161.34.45) has quit (Quit: Page closed)
2016-09-21 02:05:32	<--	spindle (~spindle@27-33-39-55.static.tpgi.com.au) has quit (Remote host closed the connection)
2016-09-21 02:05:43	<--	iik (~IIK@staticline-31-183-46-69.toya.net.pl) has quit (Ping timeout: 255 seconds)
2016-09-21 02:06:07	Limona	livingBEEF just put it into namespace
2016-09-21 02:06:30	Limona	ppf that sounds like a hassle, what if i just call it on default constructor, and check if it exists, aka a singleton
2016-09-21 02:06:40	Limona	no wait i need to have it defined
2016-09-21 02:06:41	Limona	fml
2016-09-21 02:06:42	<--	kw01f (~kw01f@merlin.mvtec.com) has quit (Ping timeout: 276 seconds)
2016-09-21 02:06:45	Limona	a global maybe?
2016-09-21 02:06:51	ppf	same difference
2016-09-21 02:07:58	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 02:08:31	ppf	in any case, you can't make that a constexpr then
2016-09-21 02:08:31		[02:08]
2016-09-21 02:09:40	SlashLife	Limona: ville told you that you need to *define* it.
2016-09-21 02:10:13	SlashLife	A declaration tells the compiler: "This thing exists." - a definition tells it: "... and this is what the thing IS."
2016-09-21 02:10:36	Limona	SlashLife but it's defined in asio isn't it?
2016-09-21 02:10:41	-->	Anodl1 (~Anodl@p2003007A2F1FDE001CA64F37C79657ED.dip0.t-ipconnect.de) has joined ##c++
2016-09-21 02:10:45	Limona	i mean, do i have to make it global or something
2016-09-21 02:10:50	SlashLife	The type is. Not your variable.
2016-09-21 02:11:05	Limona	okay, then i have to define it right
2016-09-21 02:11:14	SlashLife	When you put a static variable into a class definition, you only declare it. The compiler knows that such a thing will exist.
2016-09-21 02:11:15	Limona	where do i do that, if i wish to have it static in a class
2016-09-21 02:11:30	-->	disgusting[m] (disgusting@gateway/shell/matrix.org/x-kxtjjspbgibnbmdq) has joined ##c++
2016-09-21 02:11:33	SlashLife	However, you will need a place - one *single* place - for that thing to live.
2016-09-21 02:11:33	<--	Beetny (~Beetny@14-202-48-200.tpgi.com.au) has quit (Ping timeout: 240 seconds)
2016-09-21 02:11:54	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2016-09-21 02:11:55	SlashLife	And that's in one of your .cpp files.
2016-09-21 02:11:58	-->	magnicida1 (~raskolnik@ip5b4135a6.dynamic.kabel-deutschland.de) has joined ##c++
2016-09-21 02:12:07	SlashLife	It doesn't matter much which one you choose, just that you choose one, and only one.
2016-09-21 02:12:18	Limona	yes, but what i'm afraid of is that if i put it in my method, it'll make a new one every time
2016-09-21 02:12:20	Limona	no?
2016-09-21 02:12:31	-->	iik (~IIK@staticline-31-183-46-69.toya.net.pl) has joined ##c++
2016-09-21 02:12:35	<--	FreeBirdLjj (~freebirdl@218.94.142.81) has quit (Remote host closed the connection)
2016-09-21 02:12:39	SlashLife	And there you need to define the variable: int my_class::my_static_member_variable = 42;
2016-09-21 02:12:40	Limona	if i put it in Resolve
2016-09-21 02:12:48	Limona	ooh like that
2016-09-21 02:12:57	<--	Furkiepurkie (~Furkie@2001:1af8:4700:a03c:7::) has quit (Quit: leaving)
2016-09-21 02:13:10	<--	kasper^ (~safaf@82.137.15.177) has quit (Ping timeout: 265 seconds)
2016-09-21 02:13:32	SlashLife	By the way: For all intents and purposes, static member variables *are* part of the global state. And as such, for some definition of it, global variables.
2016-09-21 02:13:45	Limona	asio::io_service Connection::_io_service _io_service;
2016-09-21 02:14:05	<--	magnicida (~raskolnik@2a02:8109:8c80:231:ea39:dfff:fe4d:275b) has quit (Quit: Leaving.)
2016-09-21 02:14:09	-->	magnicida2 (~raskolnik@ip5b4135a6.dynamic.kabel-deutschland.de) has joined ##c++
2016-09-21 02:14:12	SlashLife	That's the equivalent of: int foo foo;
2016-09-21 02:14:16	<--	magnicida1 (~raskolnik@ip5b4135a6.dynamic.kabel-deutschland.de) has quit (Read error: Connection reset by peer)
2016-09-21 02:14:22	-->	FreeBirdLjj (~freebirdl@202.119.46.192) has joined ##c++
2016-09-21 02:14:24	SlashLife	Do you expect "int foo foo" to compile?
2016-09-21 02:14:51	Limona	nay
2016-09-21 02:15:10	SlashLife	Good. :) Then fix it. :P
2016-09-21 02:16:20	Limona	how fml
2016-09-21 02:16:33	<--	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has quit (Ping timeout: 265 seconds)
2016-09-21 02:17:02	Limona	asio::io_service Connection::_io_service;
2016-09-21 02:17:04	Limona	like this?
2016-09-21 02:17:06	Limona	that makes no sense
2016-09-21 02:17:07	<--	Anodl1 (~Anodl@p2003007A2F1FDE001CA64F37C79657ED.dip0.t-ipconnect.de) has quit (Ping timeout: 265 seconds)
2016-09-21 02:17:13	Limona	don't i need to assign something or make it something
2016-09-21 02:19:15	<--	FreeBirdLjj (~freebirdl@202.119.46.192) has quit (Ping timeout: 260 seconds)
2016-09-21 02:21:00	-->	hemz (8ed9c5d4@gateway/web/freenode/ip.142.217.197.212) has joined ##c++
2016-09-21 02:21:18	-->	Alina-malina (~Alina-mal@37.157.216.188) has joined ##c++
2016-09-21 02:22:14	<--	tis_me (~duane@S0106602ad071a37a.ed.shawcable.net) has quit (Quit: Leaving)
2016-09-21 02:22:25	-->	kw01f (~kw01f@merlin.mvtec.com) has joined ##c++
2016-09-21 02:22:38	-->	comando (uid185287@gateway/web/irccloud.com/x-uwlaqwyldsgrwpqj) has joined ##c++
2016-09-21 02:23:51	-->	Norno (12bd2758@gateway/web/freenode/ip.18.189.39.88) has joined ##c++
2016-09-21 02:23:51		[02:23]
2016-09-21 02:24:08	<--	NeXTSUN (~textual@2601:83:8100:42cf:68da:e8f9:3da0:43bf) has quit (Quit: My iMac has gone to sleep. ZZZzzz…)
2016-09-21 02:24:56	<--	Alina-malina (~Alina-mal@37.157.216.188) has quit (Changing host)
2016-09-21 02:24:56	-->	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has joined ##c++
2016-09-21 02:25:00	-->	Hatraz (~Hatraz@c-73-90-43-92.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 02:25:13	Norno	What happens if you have a struct that defines a vector field, i.e. struct A { vector<Something> vec; } - and then do "A a;" somewhere later?
2016-09-21 02:25:21	merijn	If I have a template function, is there someway to explicitly instantiate/specialise that function with a specific name (so that others can access with extern "C" linkage)?
2016-09-21 02:25:22	Norno	Does vec get initialized to an empty vector?
2016-09-21 02:25:39	-->	Furkiepurkie (~Furkie@2001:1af8:4700:a03c:7::) has joined ##c++
2016-09-21 02:26:33	<--	kw01f (~kw01f@merlin.mvtec.com) has quit (Ping timeout: 240 seconds)
2016-09-21 02:26:44	<--	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has quit (Remote host closed the connection)
2016-09-21 02:26:49	<--	Martchus (~martchus@dslb-188-098-244-050.188.098.pools.vodafone-ip.de) has quit (Ping timeout: 272 seconds)
2016-09-21 02:26:50	-->	Martchus_ (~martchus@dslb-188-105-099-172.188.105.pools.vodafone-ip.de) has joined ##c++
2016-09-21 02:26:59	-->	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has joined ##c++
2016-09-21 02:27:09	Limona	SlashLife  error LNK2005: "private: static class asio::io_service Connection::_io_service" (?_io_service@Connection@@0Vio_service@asio@@A) already defined in Connection.obj
2016-09-21 02:27:28	SlashLife	Limona: Did you put it in your header file?
2016-09-21 02:27:32	<--	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has quit (Remote host closed the connection)
2016-09-21 02:28:24	Limona	yes
2016-09-21 02:28:27	Limona	that's wrong
2016-09-21 02:28:28	Limona	omg
2016-09-21 02:28:33	SlashLife	Then you didn't read what I wrote.
2016-09-21 02:28:52	Limona	does it have to be in a cpp file
2016-09-21 02:28:53	Limona	0o
2016-09-21 02:28:59	Limona	ok that's weird
2016-09-21 02:29:10	SlashLife	No, it is not.
2016-09-21 02:29:21	Limona	how so, why can't i declare static stuff in a header
2016-09-21 02:29:30	Limona	oh it'd have to be const right
2016-09-21 02:29:37	SlashLife	The declaration "declares" that it exists. The definition "defines" what and ___where___ it is.
2016-09-21 02:29:57	SlashLife	If you put the definition in the header, then you will create a copy of it in every .cpp that includes that header.
2016-09-21 02:30:09	Limona	ohh
2016-09-21 02:30:11	Limona	makese sense
2016-09-21 02:30:14	Limona	makes*
2016-09-21 02:30:23	SlashLife	And the linker will then smack you: "I was told I'd find an _io_service. But I have a dozen and I have no clue which one is the right one."
2016-09-21 02:30:42	-->	fooobarrr (~fooobarrr@marangoni.bu.edu) has joined ##c++
2016-09-21 02:30:42	<--	fooobarrr (~fooobarrr@marangoni.bu.edu) has quit (Changing host)
2016-09-21 02:30:42	-->	fooobarrr (~fooobarrr@unaffiliated/fooobarrr) has joined ##c++
2016-09-21 02:30:46	-->	it_ (~it_@212.243.190.164) has joined ##c++
2016-09-21 02:30:57	Limona	awesome it works nao
2016-09-21 02:32:08	<--	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has quit (Quit: This computer has gone to sleep)
2016-09-21 02:32:35	<--	pheenx (~pheenx@2a02:8071:b68a:1c00:225:22ff:fee7:7dc5) has quit (Ping timeout: 265 seconds)
2016-09-21 02:34:35	-->	kw01f (~kw01f@merlin.mvtec.com) has joined ##c++
2016-09-21 02:35:27	-->	akaWolf (~akaWolf@unaffiliated/akawolf) has joined ##c++
2016-09-21 02:37:26	-->	Akimb (~Akimb@88-119-138-154.static.zebra.lt) has joined ##c++
2016-09-21 02:40:30	-->	ewanshin (~ewanshin@183.101.46.30) has joined ##c++
2016-09-21 02:40:30		[02:40]
2016-09-21 02:40:50	<--	Akimbas (~Akimb@88-119-138-154.static.zebra.lt) has quit (Ping timeout: 260 seconds)
2016-09-21 02:41:53	-->	Arlen0 (~Arlen0@38-103-219-200.alamobb.net) has joined ##c++
2016-09-21 02:42:07	<--	Arlen0 (~Arlen0@38-103-219-200.alamobb.net) has quit (Remote host closed the connection)
2016-09-21 02:43:02	-->	Anodl1 (~Anodl@p2003007A2F1FDE00D95CD0F6AB57AF0E.dip0.t-ipconnect.de) has joined ##c++
2016-09-21 02:43:17	<--	diod (~diod@unaffiliated/diod) has quit (Ping timeout: 272 seconds)
2016-09-21 02:43:31	<--	f10 (~flo@2001:470:52af:1:59b:9657:6ac8:c864) has quit (Ping timeout: 255 seconds)
2016-09-21 02:46:33	<--	riemann (~riemann@84-10-11-234.static.chello.pl) has quit (Ping timeout: 265 seconds)
2016-09-21 02:47:12	<--	bergesenha (~harald@90.149.192.21) has left ##c++
2016-09-21 02:48:26	-->	SecondForm_Glenn (~Thunderbi@108.189.70.212) has joined ##c++
2016-09-21 02:48:26	-->	diod (~diod@109.133.89.224) has joined ##c++
2016-09-21 02:48:26	<--	diod (~diod@109.133.89.224) has quit (Changing host)
2016-09-21 02:48:26	-->	diod (~diod@unaffiliated/diod) has joined ##c++
2016-09-21 02:48:28	<--	it_ (~it_@212.243.190.164) has quit (Quit: Nettalk6 - www.ntalk.de)
2016-09-21 02:51:02	-->	TheLoneMilkMan (1827617a@gateway/web/freenode/ip.24.39.97.122) has joined ##c++
2016-09-21 02:51:06	<--	pa (~pa@unaffiliated/pa) has quit (Quit: Sto andando via)
2016-09-21 02:51:27	-->	pa (~pa@unaffiliated/pa) has joined ##c++
2016-09-21 02:53:25	<--	Norno (12bd2758@gateway/web/freenode/ip.18.189.39.88) has quit (Quit: Page closed)
2016-09-21 02:53:40	<--	jamesaxl (~jamesaxl@176.98.129.195) has quit (Ping timeout: 244 seconds)
2016-09-21 02:54:33	-->	Brando753-o_O_o (~Brando753@63.143.51.198) has joined ##c++
2016-09-21 02:54:37	-->	riemann (~riemann@84-10-11-234.static.chello.pl) has joined ##c++
2016-09-21 03:00:00		[02:54]
2016-09-21 03:01:31	<--	omx (~Vlad@86.127.60.21) has quit (Read error: Connection reset by peer)
2016-09-21 03:04:20	<--	merijn (~merijn@212.78.164.170) has quit (Ping timeout: 244 seconds)
2016-09-21 03:05:03	<--	BigLion (c17e50f9@gateway/web/freenode/ip.193.126.80.249) has quit (Quit: Page closed)
2016-09-21 03:05:09	<--	neurodrone (~neurodron@unaffiliated/neurodrone) has quit (Quit: neurodrone)
2016-09-21 03:06:01	<--	Mnkras (~Mnkras@concrete5/781/Mnkras) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-09-21 03:07:02	<--	BustyLoliChan (~BustyLoli@2601:680:c201:cd2:6043:8568:1fe6:1bcc) has quit (Read error: Connection reset by peer)
2016-09-21 03:07:23	-->	BustyLoliChan (~BustyLoli@c-67-163-66-115.hsd1.ut.comcast.net) has joined ##c++
2016-09-21 03:09:14	-->	SpaceDanceCJ (~Sasha@37.45.160.127) has joined ##c++
2016-09-21 03:09:19	<--	meandrain (~meandrain@89.39.95.149) has quit (Ping timeout: 265 seconds)
2016-09-21 03:10:11	<--	snibod (~snibod@ip-94-42-61-30.multimo.pl) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2016-09-21 03:11:00	<--	Akimb (~Akimb@88-119-138-154.static.zebra.lt) has quit (Read error: Connection reset by peer)
2016-09-21 03:11:06	<--	mpo42vr_ (~mpo@unaffiliated/mpo42vr) has quit (Read error: Connection reset by peer)
2016-09-21 03:13:26	-->	SweetPear (uid144596@gateway/web/irccloud.com/x-svxzycxitctrdvsb) has joined ##c++
2016-09-21 03:15:35	-->	drazil (~drazil@45.55.234.212) has joined ##c++
2016-09-21 03:15:35		[03:15]
2016-09-21 03:15:40	-->	mikkel- (~mikkel-@46.101.221.37) has joined ##c++
2016-09-21 03:16:23	<--	mikkel- (~mikkel-@46.101.221.37) has left ##c++
2016-09-21 03:16:45	-->	mjuhl95 (~mikkel-@46.101.221.37) has joined ##c++
2016-09-21 03:19:01	-->	DnlXz (~DnlXz@cpc97874-walt21-2-0-cust18.13-2.cable.virginm.net) has joined ##c++
2016-09-21 03:19:29	<--	UnlikeSuika (~UnlikeSui@115.93.122.107) has quit (Ping timeout: 240 seconds)
2016-09-21 03:21:16	-->	AndyDD (~AndyD@host-78-144-137-134.as13285.net) has joined ##c++
2016-09-21 03:21:17	<--	cylon512__ (~i_cylon51@nat2-nj02.vmpanel.net) has quit (Ping timeout: 272 seconds)
2016-09-21 03:22:17	<--	AndyD (~AndyD@host-78-144-137-134.as13285.net) has quit (Ping timeout: 240 seconds)
2016-09-21 03:22:24	-->	saedelaere (~saedelaer@unaffiliated/saedelaere) has joined ##c++
2016-09-21 03:22:38	-->	CEnnis91 (uid3543@gateway/web/irccloud.com/x-jpdwkenixrbqxsrt) has joined ##c++
2016-09-21 03:22:45	-->	pheenx (~pheenx@2a02:8071:b68a:1c00:225:22ff:fee7:7dc5) has joined ##c++
2016-09-21 03:22:59	<--	hemz (8ed9c5d4@gateway/web/freenode/ip.142.217.197.212) has quit (Quit: Page closed)
2016-09-21 03:23:15	<--	Murii (~Murii@86.127.60.21) has quit
2016-09-21 03:24:40	-->	NightQuest (NQ@c-71-236-158-254.hsd1.or.comcast.net) has joined ##c++
2016-09-21 03:25:02	<--	TMM (~hp@fsf/member/pdpc.professional.tmm) has quit (Quit: Ex-Chat)
2016-09-21 03:25:58	<--	decimad (~deci@ip5f5be505.dynamic.kabel-deutschland.de) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-09-21 03:26:28	-->	jkhl (~j@host86-182-59-122.range86-182.btcentralplus.com) has joined ##c++
2016-09-21 03:26:44	<--	SpaceDanceCJ (~Sasha@37.45.160.127) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-09-21 03:28:28	-->	TMM (~hp@fsf/member/pdpc.professional.tmm) has joined ##c++
2016-09-21 03:28:30	-->	KNRO (~quassel@94.187.209.247) has joined ##c++
2016-09-21 03:30:16	<--	ewanshin (~ewanshin@183.101.46.30) has quit (Quit: Leaving...)
2016-09-21 03:31:06	<--	hyacinth (~yhyacinth@61.111.255.109) has quit (Ping timeout: 264 seconds)
2016-09-21 03:31:06		[03:31]
2016-09-21 03:31:17	-->	Mnkras (~Mnkras@concrete5/781/Mnkras) has joined ##c++
2016-09-21 03:31:41	-->	Gathis (~TheBlack@unaffiliated/gathis) has joined ##c++
2016-09-21 03:35:03	-->	hyacinth (~yhyacinth@61.111.255.109) has joined ##c++
2016-09-21 03:35:49	-->	cylon512 (~i_cylon51@nat2-nj02.vmpanel.net) has joined ##c++
2016-09-21 03:37:00	-->	mfc (~mfc@unaffiliated/mfc) has joined ##c++
2016-09-21 03:37:08	-->	rorro (~rorro@c-227-148.eduroam.liu.se) has joined ##c++
2016-09-21 03:37:43	ppf	i never got an answer to my operator question
2016-09-21 03:37:58	ppf	what's wrong here exactly: https://ghostbin.com/paste/s9kcq
2016-09-21 03:38:33	<--	ibouvousaime (~ibouvousa@41.82.56.190) has quit (Ping timeout: 240 seconds)
2016-09-21 03:38:45	-->	Kn|t3 (~agarwalvi@49.207.53.8) has joined ##c++
2016-09-21 03:39:30	-->	ibouvousaime (~ibouvousa@41.82.56.190) has joined ##c++
2016-09-21 03:39:53	<--	Martchus_ (~martchus@dslb-188-105-099-172.188.105.pools.vodafone-ip.de) has quit (Ping timeout: 248 seconds)
2016-09-21 03:40:17	<--	rriemann_ (~rriemann@dhcp-67-135.ixxi.ens-lyon.fr) has quit (Ping timeout: 240 seconds)
2016-09-21 03:40:25	flux	ppf, the first 'const' is wrong.
2016-09-21 03:40:31	<--	riemann (~riemann@84-10-11-234.static.chello.pl) has quit (Quit: Leaving)
2016-09-21 03:40:44	-->	xBlackyII (~marc@p54B8B61C.dip0.t-ipconnect.de) has joined ##c++
2016-09-21 03:40:48	<--	DigiByteDev (~JT2@n218250011174.netvigator.com) has quit (Quit: DigiByteDev)
2016-09-21 03:41:12	-->	Ahrotahntee (~ahrotahnt@unaffiliated/ahrotahntee) has joined ##c++
2016-09-21 03:41:20	-->	DigiByteDev (~JT2@n218250011174.netvigator.com) has joined ##c++
2016-09-21 03:41:38	-->	GreyArea (~GrayArea@cpc73846-dals21-2-0-cust384.20-2.cable.virginm.net) has joined ##c++
2016-09-21 03:42:02	--	GreyArea is now known as Guest90365
2016-09-21 03:42:06	-->	tristanseifert (~tristanse@nat-165-91-12-170.tamulink.tamu.edu) has joined ##c++
2016-09-21 03:42:24	ppf	flux: okay, that's what i expected. i'm asking the question because clang just compiles this without blinking an eye, and gcc gives an error about the second 'const'
2016-09-21 03:43:27	<--	GrayArea (~GrayArea@cpc73846-dals21-2-0-cust384.20-2.cable.virginm.net) has quit (Ping timeout: 272 seconds)
2016-09-21 03:43:46	ppf	(clang trunk and gcc 5.4, to be precise)
2016-09-21 03:44:25	--	lh_cat is now known as lh_mouse
2016-09-21 03:44:51	-->	josh_ (~josh@c-67-182-242-240.hsd1.ut.comcast.net) has joined ##c++
2016-09-21 03:45:17	-->	Martchus (~martchus@dslb-088-072-111-148.088.072.pools.vodafone-ip.de) has joined ##c++
2016-09-21 03:45:41	-->	zmack (~zmack@pool-72-74-144-215.bstnma.fios.verizon.net) has joined ##c++
2016-09-21 03:46:01	ppf	is it possible that they interpret the first const as the function qualifier and thus ignore/fail on the second one?
2016-09-21 03:46:17	ppf	does the standard allow that?
2016-09-21 03:46:17		[03:46]
2016-09-21 03:47:51	-->	Thorax (~Thorax@94.197.120.29.threembb.co.uk) has joined ##c++
2016-09-21 03:48:05	-->	RubberDog (~GodsDecei@p50835E77.dip0.t-ipconnect.de) has joined ##c++
2016-09-21 03:48:05	<--	forgottenone (~forgotten@195.142.65.127) has quit (Read error: Connection reset by peer)
2016-09-21 03:49:45	-->	f10 (~flo@2001:470:52af:1:59b:9657:6ac8:c864) has joined ##c++
2016-09-21 03:50:15	-->	hosified (~hosified@unaffiliated/hosified) has joined ##c++
2016-09-21 03:50:34	-->	f3r70rr35f (~fernando@186.36.52.35) has joined ##c++
2016-09-21 03:51:37	<--	Guest90365 (~GrayArea@cpc73846-dals21-2-0-cust384.20-2.cable.virginm.net) has quit (Ping timeout: 248 seconds)
2016-09-21 03:51:54	-->	jefcolbi (~Thunderbi@188.166.147.168) has joined ##c++
2016-09-21 03:52:03	<--	Ben2560 (~quassel@137.154.246.226) has quit (Ping timeout: 244 seconds)
2016-09-21 03:53:39	-->	aalex (~aalex@64.187.177.58) has joined ##c++
2016-09-21 03:54:12	-->	forgottenone (~forgotten@195.142.65.127) has joined ##c++
2016-09-21 03:54:39	w3z	looks like clang is just ignoring your garbage const
2016-09-21 03:55:06	w3z	geordi: --clang <<TYPE(&S::operator string); struct S{const operator string() const;};
2016-09-21 03:55:07	geordi	prvalue string (S::*)() const
2016-09-21 03:55:14	<--	Martchus (~martchus@dslb-088-072-111-148.088.072.pools.vodafone-ip.de) has quit (Ping timeout: 265 seconds)
2016-09-21 03:55:27	w3z	geordi: --clang <<TYPE(&S::operator string); struct S{operator string() const;};
2016-09-21 03:55:28	geordi	Same output.
2016-09-21 03:56:28	-->	Thorax2015 (~Thorax@94.197.121.239.threembb.co.uk) has joined ##c++
2016-09-21 03:57:12	<--	sanct (~sanct@212.35.67.11) has quit (Ping timeout: 276 seconds)
2016-09-21 03:58:01	<--	kw01f (~kw01f@merlin.mvtec.com) has quit
2016-09-21 03:58:42	-->	meandrain (~meandrain@89.39.95.149) has joined ##c++
2016-09-21 03:59:06	<--	Thorax (~Thorax@94.197.120.29.threembb.co.uk) has quit (Ping timeout: 265 seconds)
2016-09-21 03:59:24	w3z	geordi: --clang <<TYPE(&S::operator string); struct S{const operator string();};
2016-09-21 03:59:26	geordi	prvalue string (S::*)()
2016-09-21 03:59:34	<--	rebb (~rebb3@p54B80D93.dip0.t-ipconnect.de) has quit (Ping timeout: 255 seconds)
2016-09-21 03:59:39	<--	Aquza (~Aquza@p578b4612.dip0.t-ipconnect.de) has quit
2016-09-21 04:00:21	-->	Brklyn (~truthbk@38.122.226.210) has joined ##c++
2016-09-21 04:02:29	<--	GenteelBen (GenteelBen@cpc70133-lutn12-2-0-cust324.9-3.cable.virginm.net) has quit
2016-09-21 04:02:29		[04:02]
2016-09-21 04:05:00	ppf	geordi: --clang <<TYPE(&S::operator const string); struct S{operator const string() const;};
2016-09-21 04:05:01	geordi	prvalue string const (S::*)() const
2016-09-21 04:05:05	<--	DigiByteDev (~JT2@n218250011174.netvigator.com) has quit (Ping timeout: 240 seconds)
2016-09-21 04:05:10	-->	DigiByteDev_ (~JT2@185.29.164.147) has joined ##c++
2016-09-21 04:05:15	<--	jablo (~jablo@80.243.123.111) has quit (Quit: jablo)
2016-09-21 04:05:45	ppf	well i'll go to the clang people and complain, then.
2016-09-21 04:06:02	-->	Valdaris (~Gabe@63-155-153-233.eugn.qwest.net) has joined ##c++
2016-09-21 04:06:50	<--	Kn|t3 (~agarwalvi@49.207.53.8) has quit (Quit: Kn|t3)
2016-09-21 04:06:53	<--	Anodl1 (~Anodl@p2003007A2F1FDE00D95CD0F6AB57AF0E.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2016-09-21 04:07:07	-->	illerucis (~illerucis@2620:10d:c091:200::3:45e) has joined ##c++
2016-09-21 04:07:13	-->	ekinmur (~ekinmur@va01.cvent.com) has joined ##c++
2016-09-21 04:07:27	et	the standard doesn't forbid implementations from accepting garbage ;)
2016-09-21 04:10:01	-->	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has joined ##c++
2016-09-21 04:11:09	-->	Kn|t3 (~agarwalvi@49.207.53.8) has joined ##c++
2016-09-21 04:11:19	<--	tristanseifert (~tristanse@nat-165-91-12-170.tamulink.tamu.edu) has quit (Ping timeout: 272 seconds)
2016-09-21 04:11:44	<--	Chais (~Chais@unaffiliated/chais) has quit (Read error: Connection reset by peer)
2016-09-21 04:11:46	-->	sammyg (~sammyg@h-13-10.a485.priv.bahnhof.se) has joined ##c++
2016-09-21 04:12:41	<--	anton02 (~quassel@lal1651212.lnk.telstra.net) has quit (Remote host closed the connection)
2016-09-21 04:12:55	<--	kamog (~user@95.72.62.62) has quit (Remote host closed the connection)
2016-09-21 04:16:06	-->	urban-animal (~Technolog@2600:380:7a48:e9e3:ec0a:b9fe:f8f5:c663) has joined ##c++
2016-09-21 04:16:33	<--	naughty_rac00n (~sammy@175.156.226.234) has quit (Remote host closed the connection)
2016-09-21 04:16:38	-->	Chais (~Chais@unaffiliated/chais) has joined ##c++
2016-09-21 04:19:22	-->	tristanseifert (~tristanse@nat-165-91-12-170.tamulink.tamu.edu) has joined ##c++
2016-09-21 04:19:22		[04:19]
2016-09-21 04:20:31	<--	Guest29908 (~BioKey@2a02:1205:506f:db70:2060:af18:2165:f137) has quit (Read error: Connection reset by peer)
2016-09-21 04:20:57	<--	Aph3x-WL (Aph3x@2600:3c03::f03c:91ff:fe6e:5ed9) has quit (Ping timeout: 248 seconds)
2016-09-21 04:21:29	-->	Sculptor (~Sculptor@cable-24-135-26-151.dynamic.sbb.rs) has joined ##c++
2016-09-21 04:22:59	-->	Vingador (~quassel@177.135.26.41) has joined ##c++
2016-09-21 04:23:22	<--	feliwir (Elite16673@gateway/shell/elitebnc/x-xorwkpivtvfjccpo) has quit (Ping timeout: 250 seconds)
2016-09-21 04:23:24	-->	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has joined ##c++
2016-09-21 04:23:32	-->	slavanap (~slavanap@37.44.46.25) has joined ##c++
2016-09-21 04:23:33	-->	Snuupy (~Snuupy@unaffiliated/snuupy) has joined ##c++
2016-09-21 04:23:50	-->	jaafar (~quassel@50-206-78-205-static.hfc.comcastbusiness.net) has joined ##c++
2016-09-21 04:23:51	<--	DigiByteDev_ (~JT2@185.29.164.147) has quit (Quit: DigiByteDev_)
2016-09-21 04:24:02	<--	vuoto (~vuoto@n9pl7d.static.netgroup.dk) has quit (Remote host closed the connection)
2016-09-21 04:27:44	-->	occamsblazer (~occamsbla@c-73-246-212-105.hsd1.il.comcast.net) has joined ##c++
2016-09-21 04:27:57	-->	hk238 (~kvirc@unaffiliated/hk238) has joined ##c++
2016-09-21 04:28:47	<--	occamsblazer (~occamsbla@c-73-246-212-105.hsd1.il.comcast.net) has quit (Client Quit)
2016-09-21 04:28:52	-->	sanct (~sanct@212.35.67.11) has joined ##c++
2016-09-21 04:28:59	<--	ibouvousaime (~ibouvousa@41.82.56.190) has quit (Ping timeout: 265 seconds)
2016-09-21 04:29:12	-->	de-facto (~de-facto@unaffiliated/de-facto) has joined ##c++
2016-09-21 04:29:43	-->	ike11 (~textual@23-29-46-237.static.kc.surewest.net) has joined ##c++
2016-09-21 04:29:56	ppf	although g++'s error is also weird. 5.4 points to the _second_ const and says 'qualifiers are not allowed on declaration of ...'
2016-09-21 04:30:09	ppf	darn, wrong window
2016-09-21 04:30:10	<--	sanct (~sanct@212.35.67.11) has quit (Max SendQ exceeded)
2016-09-21 04:31:07	-->	sanct (~sanct@212.35.67.11) has joined ##c++
2016-09-21 04:31:14	-->	Ben2560 (~quassel@137.154.246.226) has joined ##c++
2016-09-21 04:31:20	<--	DnlXz (~DnlXz@cpc97874-walt21-2-0-cust18.13-2.cable.virginm.net) has quit
2016-09-21 04:31:52	<--	meandrain (~meandrain@89.39.95.149) has quit (Read error: No route to host)
2016-09-21 04:32:28	-->	derpsauce__ (uid156583@gateway/web/irccloud.com/x-esqollbepfgvytem) has joined ##c++
2016-09-21 04:33:27	<--	xnavor (~xnavor@vbg-gw.proceranetworks.com) has quit (Quit: This computer has gone to sleep)
2016-09-21 04:35:08	-->	pullphinger (~pullphing@12.40.23.68) has joined ##c++
2016-09-21 04:35:08		[04:35]
2016-09-21 04:35:47	<--	tristanseifert (~tristanse@nat-165-91-12-170.tamulink.tamu.edu) has quit (Ping timeout: 244 seconds)
2016-09-21 04:36:15	-->	snover (~Adium@unaffiliated/snover) has joined ##c++
2016-09-21 04:37:33	flux	geordi: --clang <<TYPE(&S::operator const string); struct S{volatile operator const string() const;};
2016-09-21 04:37:34	geordi	Same output.
2016-09-21 04:38:34	-->	syem (~s@unaffiliated/syem) has joined ##c++
2016-09-21 04:39:04	-->	rebb (~rebb3@p54B81349.dip0.t-ipconnect.de) has joined ##c++
2016-09-21 04:39:45	-->	yo5phz (~yo5phz___@83.103.155.5) has joined ##c++
2016-09-21 04:40:16	-->	LBV_User (~leonardo@189.58.239.152.dynamic.adsl.gvt.net.br) has joined ##c++
2016-09-21 04:40:42	<--	Mnkras (~Mnkras@concrete5/781/Mnkras) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-09-21 04:41:10	<--	ekinmur (~ekinmur@va01.cvent.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-09-21 04:43:09	-->	ekinmur (~ekinmur@va01.cvent.com) has joined ##c++
2016-09-21 04:45:22	-->	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has joined ##c++
2016-09-21 04:46:00	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-21 04:46:05	-->	ibouvousaime (~ibouvousa@41.82.56.190) has joined ##c++
2016-09-21 04:46:23	urdh	geordi: --clang <<TYPE(&S::operator const string); struct S{operator const volatile string() const volatile;};
2016-09-21 04:46:23	geordi	error: no member named 'operator basic_string' in 'S'
2016-09-21 04:46:33	urdh	geordi: --clang <<TYPE(&S::operator const volatile string); struct S{operator const volatile string() const volatile;};
2016-09-21 04:46:34	geordi	prvalue string const volatile (S::*)() const volatile
2016-09-21 04:50:20	<--	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has quit (Ping timeout: 260 seconds)
2016-09-21 04:50:20		[04:50]
2016-09-21 04:51:53	-->	codercodi (~codercodi@108-192-148-40.lightspeed.gnvlsc.sbcglobal.net) has joined ##c++
2016-09-21 04:54:52	<--	TMM (~hp@fsf/member/pdpc.professional.tmm) has quit (Quit: Ex-Chat)
2016-09-21 04:57:34	<--	kimundi (~Kimundi@p4FE2EBC6.dip0.t-ipconnect.de) has quit (Ping timeout: 272 seconds)
2016-09-21 04:58:19	<--	jmnk (jargonmonk@gateway/shell/blinkenshell.org/x-kvecepuxxriikifz) has quit (Quit: jmnk)
2016-09-21 04:58:41	-->	mangolisk (~mangolisk@S0106848dc7ebaa06.vc.shawcable.net) has joined ##c++
2016-09-21 04:58:51	<--	codercodi (~codercodi@108-192-148-40.lightspeed.gnvlsc.sbcglobal.net) has quit (Quit: Leaving)
2016-09-21 04:59:29	-->	coco (~coco@53541674.cm-6-5a.dynamic.ziggo.nl) has joined ##c++
2016-09-21 04:59:41	-->	jargonmonk (jargonmonk@gateway/shell/blinkenshell.org/x-slxftateroumxuwx) has joined ##c++
2016-09-21 05:00:01	hs_	forget the garbage case, what about this:
2016-09-21 05:00:03	hs_	--clang { bar b; static_cast<foo const>(b).blah(); } struct foo { void blah() { BARK; } void blah() const { BARK; } }; struct bar { operator const foo() { return {}; } };
2016-09-21 05:00:06	hs_	geordi, --clang { bar b; static_cast<foo const>(b).blah(); } struct foo { void blah() { BARK; } void blah() const { BARK; } }; struct bar { operator const foo() { return {}; } };
2016-09-21 05:00:07	geordi	error: no viable conversion from 'bar' to 'foo'
2016-09-21 05:00:12	hs_	{ bar b; static_cast<foo const>(b).blah(); } struct foo { void blah() { BARK; } void blah() const { BARK; } }; struct bar { operator const foo() { return {}; } };
2016-09-21 05:00:13	geordi	foo::blah() const
2016-09-21 05:00:44	<--	illerucis (~illerucis@2620:10d:c091:200::3:45e) has quit (Remote host closed the connection)
2016-09-21 05:01:03	hs_	not sure who is correct, but clang looks wrong
2016-09-21 05:01:05	<--	zero_byte (zer0@nat/redhat/x-elcjnlptnvmqfgea) has quit (Ping timeout: 240 seconds)
2016-09-21 05:01:40	-->	InfoTest (~Thunderbi@tgn.149.23.243.dts.mg) has joined ##c++
2016-09-21 05:01:43	-->	Mnkras (~Mnkras@concrete5/781/Mnkras) has joined ##c++
2016-09-21 05:02:00	<--	JohnMS_WORK (~chatzilla@host-193-59-178-3.gog.com) has quit (Quit: ChatZilla 0.9.92 [Firefox 48.0.2/20160823121617])
2016-09-21 05:02:08	<--	brendel (~brice@LAubervilliers-656-1-215-246.w217-128.abo.wanadoo.fr) has quit (Ping timeout: 244 seconds)
2016-09-21 05:02:30	--	jargonmonk is now known as jmnk
2016-09-21 05:03:22	-->	illerucis (~illerucis@2620:10d:c091:200::3:45e) has joined ##c++
2016-09-21 05:03:53	-->	occamsblazer (~occamsbla@131.228.197.11) has joined ##c++
2016-09-21 05:04:02	<--	comando (uid185287@gateway/web/irccloud.com/x-uwlaqwyldsgrwpqj) has quit (Quit: Connection closed for inactivity)
2016-09-21 05:04:10	<--	sophia7 (~sophia7@unaffiliated/sophia7) has quit (Quit: sophia7)
2016-09-21 05:05:13	<--	AquaL1te (~AquaL1te@unaffiliated/aqual1te) has quit (Quit: leaving)
2016-09-21 05:06:03	somaReverse	Hi, how can I get a hash value from a bunch of objects?
2016-09-21 05:06:03		[05:06]
2016-09-21 05:06:41	zap0	why bother....  pointer to object is already unique
2016-09-21 05:07:24	<--	casscode (~bru@169-1-129-208.ip.afrihost.co.za) has quit (Ping timeout: 276 seconds)
2016-09-21 05:07:29	<--	forgottenone (~forgotten@195.142.65.127) has quit (Read error: No route to host)
2016-09-21 05:07:51	-->	forgottenone (~forgotten@195.142.65.127) has joined ##c++
2016-09-21 05:07:58	w3z	hmm, clang is wrong there too
2016-09-21 05:08:07	w3z	geordi: --clang {bar b; static_cast<const foo>(b); } struct foo {}; struct bar {operator const foo() { return {}; } };
2016-09-21 05:08:07	geordi	error: no viable conversion from 'bar' to 'foo'
2016-09-21 05:08:26	w3z	geordi: --clang {bar b; static_cast<const string>(b); } struct bar {operator const string() { return {}; } };
2016-09-21 05:08:26	geordi	error: no viable conversion from 'bar' to 'string'
2016-09-21 05:08:47	<--	BytesAndCoffee (~yazdmich@bytes.coffee) has quit (Read error: Connection reset by peer)
2016-09-21 05:09:38	-->	CuriousErnestBro (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has joined ##c++
2016-09-21 05:10:07	w3z	geordi --clang {bar b; static_cast<const string>(b); } struct bar {operator string() {return {};}};
2016-09-21 05:10:08	geordi	<no output>
2016-09-21 05:10:23	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-21 05:10:29	-->	whytrytofly (~whytrytof@dslb-094-223-012-212.094.223.pools.vodafone-ip.de) has joined ##c++
2016-09-21 05:10:43	<--	Kn|t3 (~agarwalvi@49.207.53.8) has quit (Quit: Kn|t3)
2016-09-21 05:10:44	w3z	const T as a conversion is kind of silly, but clang is wrong
2016-09-21 05:11:25	RokerHRO	"T const" is better?
2016-09-21 05:11:34	<--	aalex (~aalex@64.187.177.58) has quit (Ping timeout: 255 seconds)
2016-09-21 05:11:40	w3z	T is better
2016-09-21 05:11:48	w3z	geordi --clang {bar b; static_cast<const string&>(b); } struct bar {string s; operator const string&() {return s;}};
2016-09-21 05:11:49	geordi	<no output>
2016-09-21 05:11:54	<--	jaafar (~quassel@50-206-78-205-static.hfc.comcastbusiness.net) has quit (Ping timeout: 264 seconds)
2016-09-21 05:13:26	-->	aalex (~aalex@64.187.177.58) has joined ##c++
2016-09-21 05:14:27	-->	King_Hual` (~failed@94.26.28.68) has joined ##c++
2016-09-21 05:15:03	-->	Kn|t3 (~agarwalvi@49.207.53.8) has joined ##c++
2016-09-21 05:15:20	-->	ouac (~ouac@prz29-1-78-205-58-16.fbx.proxad.net) has joined ##c++
2016-09-21 05:15:20	w3z	can you come up with a contrived scenario where returning a const UDT object is meaningful, sure, but its an oddity
2016-09-21 05:16:20	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-21 05:16:35	-->	MicroCheapFx_ (~quassel@230-95-190-109.dsl.ovh.fr) has joined ##c++
2016-09-21 05:16:48	<--	mfc (~mfc@unaffiliated/mfc) has quit (Read error: Connection reset by peer)
2016-09-21 05:17:14	w3z	btw hs_, i ended up opting for your template expansion technique instead of using the passthrough identity struct, its just simpler
2016-09-21 05:17:19	<--	King_Hual (~failed@unaffiliated/king-hual/x-1207580) has quit (Ping timeout: 265 seconds)
2016-09-21 05:17:23	<--	Sceorem (~Sceorem@xbn44-3-82-232-76-9.fbx.proxad.net) has quit (Quit: Leaving)
2016-09-21 05:17:24	<--	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has quit (Ping timeout: 265 seconds)
2016-09-21 05:17:31	-->	Haruno (~Haruno@197.226.166.96) has joined ##c++
2016-09-21 05:17:31	<--	Haruno (~Haruno@197.226.166.96) has quit (Changing host)
2016-09-21 05:17:31	-->	Haruno (~Haruno@unaffiliated/haruno) has joined ##c++
2016-09-21 05:17:40	<--	zmack (~zmack@pool-72-74-144-215.bstnma.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-21 05:18:27	rendar	i've classes with virtual dtor, defined in .hpp and declared in .cpp files, the compilation is ok but the linker gives me an error: "Multiple definitions of A::~A()" but that is not true, since i define the A's dtor only in *one* .cpp file..
2016-09-21 05:18:28	-->	brendel (~brice@LAubervilliers-656-1-215-246.w217-128.abo.wanadoo.fr) has joined ##c++
2016-09-21 05:18:48	-->	kw01f (~kw01f@pD9FB1D34.dip0.t-ipconnect.de) has joined ##c++
2016-09-21 05:18:56	-->	mfc (~mfc@unaffiliated/mfc) has joined ##c++
2016-09-21 05:18:57	w3z	also forwarding the functions return in the conversion operator as a T&& was wonky as i suspected, it manifested when turning optimization on
2016-09-21 05:19:33	w3z	!give rendar testcase
2016-09-21 05:19:34	nolyc	rendar: A testcase is the _least_ amount of code that replicates your problem, paste it to http://coliru.stacked-crooked.com and give us the link. Do _not_ paste code to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
2016-09-21 05:19:52	-->	happy-dude (uid62780@gateway/web/irccloud.com/x-jfjyvfginuffwgmr) has joined ##c++
2016-09-21 05:20:18	<--	Vingador (~quassel@177.135.26.41) has quit (Ping timeout: 264 seconds)
2016-09-21 05:20:22	-->	Vingador_ (~quassel@189.115.173.129) has joined ##c++
2016-09-21 05:22:07	<--	blablablub (~howlymowl@euler.ilr.tu-berlin.de) has quit (Quit: Konversation terminated!)
2016-09-21 05:22:07		[05:22]
2016-09-21 05:22:52	<--	eduardas_m (~eduardas_@213.197.143.19) has quit (Quit: Leaving)
2016-09-21 05:23:29	<--	sammyg (~sammyg@h-13-10.a485.priv.bahnhof.se) has quit (Quit: Leaving)
2016-09-21 05:24:22	rendar	w3z, impossible.. i can't replicate this! i have a simple class.. if i try to make a testcase and replicate it, it works..
2016-09-21 05:24:57	<--	Elirips (~Elirips@242.109.22.178.ftth.as8758.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2016-09-21 05:25:28	-->	zmack (~zmack@pool-72-74-144-215.bstnma.fios.verizon.net) has joined ##c++
2016-09-21 05:26:46	<--	drozdziak1 (~drozdziak@do-atman.cubiware.com) has quit (Quit: WeeChat 1.5)
2016-09-21 05:26:59	<--	Kn|t3 (~agarwalvi@49.207.53.8) has quit (Quit: Kn|t3)
2016-09-21 05:27:02	<--	ouac (~ouac@prz29-1-78-205-58-16.fbx.proxad.net) has quit (Remote host closed the connection)
2016-09-21 05:27:53	-->	Uvw (~Uvw@prz29-1-78-205-58-16.fbx.proxad.net) has joined ##c++
2016-09-21 05:28:20	<--	Uvw (~Uvw@prz29-1-78-205-58-16.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-21 05:28:47	-->	ambro718 (~ambro@unaffiliated/ambro718) has joined ##c++
2016-09-21 05:29:28	hs_	w3z, cool; spam a link to it and I will check it out in a bit
2016-09-21 05:29:32	-->	meandrain (~meandrain@89.39.95.149) has joined ##c++
2016-09-21 05:30:02	-->	SpaceDanceCJ (~Sasha@178.121.54.148) has joined ##c++
2016-09-21 05:31:11	-->	ferdna (~ferdna@cpe-69-23-141-130.elp.res.rr.com) has joined ##c++
2016-09-21 05:31:44	w3z	w3z: http://melpon.org/wandbox/permlink/kB3sUeyq0bGyMoDV simplified, and punted on constexpr for now at least until constexpr lambda is working in clang
2016-09-21 05:31:44	w3z	[12:07am]
2016-09-21 05:31:52	-->	Paradisee (~quassel@93-38-184-186.ip71.fastwebnet.it) has joined ##c++
2016-09-21 05:32:10	<--	forgottenone (~forgotten@195.142.65.127) has quit (Quit: Konversation terminated!)
2016-09-21 05:32:14	-->	mukunda (mukunda@c-71-205-185-63.hsd1.co.comcast.net) has joined ##c++
2016-09-21 05:32:30	-->	forgottenone (~forgotten@195.142.65.127) has joined ##c++
2016-09-21 05:33:46	w3z	once template type deduction works, therell be no need for the helper either
2016-09-21 05:36:31	<--	fahadash (uid44972@gateway/web/irccloud.com/x-qbbmzlmspmhpbkki) has quit (Quit: Connection closed for inactivity)
2016-09-21 05:36:38	<--	ike11 (~textual@23-29-46-237.static.kc.surewest.net) has quit (Read error: Connection reset by peer)
2016-09-21 05:37:13	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 05:37:13		[05:37]
2016-09-21 05:38:10	-->	scai (~scai@p4FF0FD94.dip0.t-ipconnect.de) has joined ##c++
2016-09-21 05:38:29	slavanap	does standard specifies assembler inlines in c++ code?
2016-09-21 05:38:33	<--	mss_cyclist (~MSe@89-250-189-210.tangos.nl) has quit (Ping timeout: 240 seconds)
2016-09-21 05:38:36	<--	rorro (~rorro@c-227-148.eduroam.liu.se) has quit (Ping timeout: 276 seconds)
2016-09-21 05:38:37	slavanap	and hello.
2016-09-21 05:38:40	<--	forgottenone (~forgotten@195.142.65.127) has quit (Ping timeout: 265 seconds)
2016-09-21 05:38:54	-->	alexmh (~alex@c-67-166-124-41.hsd1.ut.comcast.net) has joined ##c++
2016-09-21 05:39:08	-->	interki (~arch_@WOPR-p-144-134-32-216.prem.tmns.net.au) has joined ##c++
2016-09-21 05:40:11	-->	MulleDK19 (~MulleDK19@unaffiliated/mulledk19) has joined ##c++
2016-09-21 05:41:24	w3z	not sure what you mean, if the asm declaration is in a function that the compiler decides to inline then its inline ...
2016-09-21 05:41:30	Lowl3v3l	slavanap, it specifies the asm keyword and the asm declaration
2016-09-21 05:42:02	w3z	what the meaning of the asm declaration means is implementation definied
2016-09-21 05:42:15	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-21 05:42:25	w3z	The asm declaration is conditionally-supported; its meaning is implementation-defined. [ Note: Typically it is
2016-09-21 05:42:26	w3z	used to pass information through the implementation to an assembler. — end note ]
2016-09-21 05:42:31	slavanap	Lowl3v3l, w3z, is there a way to write cross-platform code (linux & windows, 32bit) with asm directive?
2016-09-21 05:42:48	slavanap	Okay I got the point.
2016-09-21 05:42:48	<--	zmack (~zmack@pool-72-74-144-215.bstnma.fios.verizon.net) has quit
2016-09-21 05:43:16	Lowl3v3l	slavanap, asm is necessarily niot cross plattform. but if you use the same compiler many things are the same
2016-09-21 05:43:51	-->	Elnc1 (~Elnc1@cac94-8-82-245-27-76.fbx.proxad.net) has joined ##c++
2016-09-21 05:43:53	-->	Murii (~Murii@86.127.60.21) has joined ##c++
2016-09-21 05:44:09	Lowl3v3l	slavanap, usually you do not need asm("") at all since there are compiler intrinsics which are quasi defined by intel and implemented at least by ic++, g++ and clang++ ( though i have no clue about msvc++)
2016-09-21 05:44:09	<--	Elnc1 (~Elnc1@cac94-8-82-245-27-76.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-21 05:44:25	<--	Asher (~asher@c-73-106-33-32.hsd1.ga.comcast.net) has quit (Ping timeout: 265 seconds)
2016-09-21 05:44:58	-->	satirev (~Satirev@179.151.119.18) has joined ##c++
2016-09-21 05:45:01	<--	satirev (~Satirev@179.151.119.18) has quit (Max SendQ exceeded)
2016-09-21 05:45:02	-->	fahadash (uid44972@gateway/web/irccloud.com/x-kudewarlgeqrlaeb) has joined ##c++
2016-09-21 05:45:02	-->	Iiupa (~Iiupa@cac94-8-82-245-27-76.fbx.proxad.net) has joined ##c++
2016-09-21 05:45:15	<--	Iiupa (~Iiupa@cac94-8-82-245-27-76.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-21 05:45:16	-->	satirev (~Satirev@179.151.119.18) has joined ##c++
2016-09-21 05:45:18	<--	satirev (~Satirev@179.151.119.18) has quit (Max SendQ exceeded)
2016-09-21 05:45:33	<--	Furkiepurkie (~Furkie@2001:1af8:4700:a03c:7::) has quit (Quit: leaving)
2016-09-21 05:45:38	-->	satirev (~Satirev@179.151.119.18) has joined ##c++
2016-09-21 05:45:38	<--	satirev (~Satirev@179.151.119.18) has quit (Client Quit)
2016-09-21 05:46:12	<--	ekinmur (~ekinmur@va01.cvent.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-21 05:46:24	Alina-malina	what is the correct way of importing The Onion Router into my project and compile it?
2016-09-21 05:46:35	slavanap	Lowl3v3l, good point. Gonna look for intrinsic functions for FPU FBSTP command.
2016-09-21 05:46:42	-->	jjimenezg93 (~chatzilla@77.224.165.147) has joined ##c++
2016-09-21 05:47:14	Lowl3v3l	slavanap, what do you plan on doing? fpu is usually the wrong way. there is a reason you see so little intrinsics and asm in modern c++ code ;) usually the compiler knows way better^^
2016-09-21 05:47:46	Kaslai	Different compilers use different assembler flavors, which makes it near impossible to write asm for a single platform which compiles with all compilers even. Most compilers are pretty good about doing exactly what Intel tells them to do for intrinsics though, and I've never had problems between clang, msvc and gcc.
2016-09-21 05:48:12	Lowl3v3l	Kaslai, so msvc++ does support the intrinsics? cool.
2016-09-21 05:48:32	Kaslai	I've only done SSE stuff, but as far as that's concerned, yes.
2016-09-21 05:48:36	Lowl3v3l	Kaslai, and does it finally know c11 and c++14 AT LEAST?
2016-09-21 05:48:57	<--	abaines (~abaines@host109-150-226-218.range109-150.btcentralplus.com) has quit (Ping timeout: 248 seconds)
2016-09-21 05:49:16	Kaslai	As of VS2015, MSVC is around g++ 5.3 level support for C++11
2016-09-21 05:49:34	Lowl3v3l	but no c11 and nothing newer?
2016-09-21 05:49:37	slavanap	Lowl3v3l, convert float's integer part to 20 decimal digit packed BCD. Just 1 asm command or 200 lines of C code.
2016-09-21 05:50:02	Kaslai	They don't even support C99, at least not officially.
2016-09-21 05:50:16	Lowl3v3l	slavanap, unlikely. And you might want to use SSE or AVX instead of this antique FPU stuff ;)
2016-09-21 05:50:30	Kaslai	The only C99 and later features they support are just the ones that happen to be in C++.
2016-09-21 05:51:06	Lowl3v3l	unfortunate
2016-09-21 05:51:34	slavanap	Lowl3v3l, not SSE or AVX. Just 1 FPU command :)
2016-09-21 05:51:37	-->	GenteelBen (~GenteelBe@cpc70133-lutn12-2-0-cust324.9-3.cable.virginm.net) has joined ##c++
2016-09-21 05:52:03	-->	TehWan_ (~TehWan@smtp.securiglobe.com) has joined ##c++
2016-09-21 05:52:24	Kaslai	If you really just need a single FPU command and there's no intrinsic, then I would just make a monster ifdef'd asm block
2016-09-21 05:52:24		[05:52]
2016-09-21 05:52:41	Kaslai	Since porting it should be trivial
2016-09-21 05:52:41	zap0	FPU schFPU... all the good commands are SSE or AVX
2016-09-21 05:53:10	<--	ibouvousaime (~ibouvousa@41.82.56.190) has quit (Ping timeout: 265 seconds)
2016-09-21 05:53:24	Kaslai	SSE doesn't have 80 bit floats support, does it? :p
2016-09-21 05:53:45	slavanap	Kaslai, do you have examples of such monster code?
2016-09-21 05:53:49	zap0	i think it does internally.. but the result will not be
2016-09-21 05:54:08	-->	ibouvousaime (~ibouvousa@41.83.62.203) has joined ##c++
2016-09-21 05:54:17	Kaslai	But how would a single 128 bit register be able to represent more than a single 80 bit float? ;)
2016-09-21 05:54:45	slavanap	zap0, just look at this code from C# CRL most of the stuff can be done with 1 FPU command. https://github.com/dotnet/coreclr/blob/master/src/palrt/decconv.cpp#L335
2016-09-21 05:55:01	Kaslai	slavanap: nope. You just need a #ifdef chain which checks the compiler make and uses different asm accordingly
2016-09-21 05:55:06	Lowl3v3l	slavanap, problem with fpu compared to the SSE or AVX stuff is : its slow and depending on your os needs a lot more setup code and is way worse to optimize for the compiler^^
2016-09-21 05:55:07	zap0	im not going to burn my eyes looknig at aweful C# code
2016-09-21 05:55:11	<--	aindros (~jacknife@93-57-35-194.ip162.fastwebnet.it) has quit (Read error: Connection reset by peer)
2016-09-21 05:55:19	-->	jamesaxl (~jamesaxl@176.98.129.195) has joined ##c++
2016-09-21 05:55:38	Kaslai	Since when is a .cpp for C#?
2016-09-21 05:55:42	<--	TehWan (~TehWan@modemcable033.235-81-70.mc.videotron.ca) has quit (Ping timeout: 264 seconds)
2016-09-21 05:55:43	slavanap	zap0, it is actually C++. C# runtime lib written in C++.
2016-09-21 05:56:11	Kaslai	Those two column tabs though
2016-09-21 05:56:12	-->	sophia7 (~sophia7@unaffiliated/sophia7) has joined ##c++
2016-09-21 05:56:24	w3z	!focus
2016-09-21 05:56:26	nolyc	##c++ focuses on C++. Discuss offtopic things elsewhere; ##c++-general or ##c++-social
2016-09-21 05:56:36	slavanap	Kaslai, since CRL. You should be able to write code that is a bridge between C++ and C#, right? :)
2016-09-21 05:56:42	-->	f10_ (~flo@2001:470:52af:1:dd05:b755:629c:9755) has joined ##c++
2016-09-21 05:56:45	<--	jjimenezg93 (~chatzilla@77.224.165.147) has quit (Quit: ChatZilla 0.9.92 [Firefox 48.0.2/20160823121617])
2016-09-21 05:56:56	<--	SpaceDanceCJ (~Sasha@178.121.54.148) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-09-21 05:57:03	-->	jjimenezg93 (~chatzilla@77.224.165.147) has joined ##c++
2016-09-21 05:57:23	w3z	youve been off-track after asking about the asm declaration
2016-09-21 05:57:51	slavanap	Kaslai, Lowl3v3l, okay. I got your point. Gonna look for some big projects that uses that asm directive stuff with bunch of `#ifdef`s.
2016-09-21 05:57:52	<--	Valdaris (~Gabe@63-155-153-233.eugn.qwest.net) has quit (Read error: Connection reset by peer)
2016-09-21 05:58:03	-->	ctnguyen (~chau@2606:6000:fd00:bc00:8048:a03c:3885:a855) has joined ##c++
2016-09-21 05:58:20	--	kline is now known as {
2016-09-21 05:58:30	slavanap	w3z, well asm declaration is still part of the c++ standard.
2016-09-21 05:58:50	--	{ is now known as Guest27631
2016-09-21 05:58:54	Lowl3v3l	slavanap, use intrinsics. really you should....
2016-09-21 05:58:55	w3z	thats where it stops
2016-09-21 05:59:06	-->	kaffeetrauma (~Thunderbi@85-22-37-153.ip.dokom21.de) has joined ##c++
2016-09-21 05:59:17	--	Guest27631 is now known as kline
2016-09-21 05:59:26	<--	Mnkras (~Mnkras@concrete5/781/Mnkras) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-09-21 05:59:32	-->	oraho (9bd2b208@gateway/web/freenode/ip.155.210.178.8) has joined ##c++
2016-09-21 05:59:55	<--	oraho (9bd2b208@gateway/web/freenode/ip.155.210.178.8) has quit (Client Quit)
2016-09-21 06:00:10	slavanap	Lowl3v3l, as I told you there are some commands for that intrinsics do not exist.
2016-09-21 06:00:21	<--	lsk (~lsk@enucs/member/lsk) has quit (Read error: Connection reset by peer)
2016-09-21 06:00:25	-->	oraho (9bd2b208@gateway/web/freenode/ip.155.210.178.8) has joined ##c++
2016-09-21 06:00:41	jjimenezg93	Hello, I have a specific question about VC++ project configuration but I can't find an active group about it. Is it too off-topic for this channel? If so, could anyone recommend me another channel?
2016-09-21 06:01:01	daedric	!windows
2016-09-21 06:01:02	nolyc	You should ask your Windows programming questions in ##c++-general, #winapi, ##windows-coding or irc://irc.efnet.org/winprog
2016-09-21 06:01:05	<--	gagbo (~gagbo@unaffiliated/gagbo) has quit (Ping timeout: 240 seconds)
2016-09-21 06:01:16	<--	oraho (9bd2b208@gateway/web/freenode/ip.155.210.178.8) has quit (Client Quit)
2016-09-21 06:01:27	jjimenezg93	Thank you very much!
2016-09-21 06:02:12	-->	Tehwan__ (~TehWan@modemcable033.235-81-70.mc.videotron.ca) has joined ##c++
2016-09-21 06:02:50	<--	Sculptor (~Sculptor@cable-24-135-26-151.dynamic.sbb.rs) has quit (Ping timeout: 265 seconds)
2016-09-21 06:03:04	<--	Jiwan (~jeangu@212.247.124.2) has quit (Quit: Leaving.)
2016-09-21 06:03:34	-->	forgottenone (~forgotten@195.142.65.127) has joined ##c++
2016-09-21 06:04:25	-->	TehWan (~TehWan@smtp.securiglobe.com) has joined ##c++
2016-09-21 06:04:31	<--	marcofe (~marcofe@test-centre4-gw.estec.esa.int) has quit (Quit: Konversation terminated!)
2016-09-21 06:05:26	<--	sh1znc (~sh1znc@gateway/shell/xshellz/x-rwxcyphcfbreiutv) has left ##c++
2016-09-21 06:05:54	<--	TehWan_ (~TehWan@smtp.securiglobe.com) has quit (Ping timeout: 264 seconds)
2016-09-21 06:06:13	-->	TMM (~hp@fsf/member/pdpc.professional.tmm) has joined ##c++
2016-09-21 06:07:06	<--	Tehwan__ (~TehWan@modemcable033.235-81-70.mc.videotron.ca) has quit (Ping timeout: 264 seconds)
2016-09-21 06:09:19	<--	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has quit (Quit: This computer has gone to sleep)
2016-09-21 06:09:19		[06:09]
2016-09-21 06:09:51	<--	pandaant (~batman@149.201.240.93) has quit (Remote host closed the connection)
2016-09-21 06:12:24	-->	qilr (~qilr@mar13-2-82-246-223-195.fbx.proxad.net) has joined ##c++
2016-09-21 06:12:36	<--	kw01f (~kw01f@pD9FB1D34.dip0.t-ipconnect.de) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-21 06:12:39	<--	qilr (~qilr@mar13-2-82-246-223-195.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-21 06:13:18	-->	blackbird1 (~blackbird@197.1.252.203) has joined ##c++
2016-09-21 06:13:38	-->	enufn (~enufn@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has joined ##c++
2016-09-21 06:13:52	-->	Martchus (~martchus@dslb-188-105-110-202.188.105.pools.vodafone-ip.de) has joined ##c++
2016-09-21 06:13:54	<--	zwliew (uid161395@gateway/web/irccloud.com/x-vcotfclqpthidrem) has quit (Quit: Connection closed for inactivity)
2016-09-21 06:14:15	-->	BaneAliens (uid112512@gateway/web/irccloud.com/x-mzgjohpbqkuvkmnm) has joined ##c++
2016-09-21 06:14:53	<--	Markow (~Markow@176.122.215.103) has quit (Remote host closed the connection)
2016-09-21 06:15:45	<--	jackhum (uid97400@gateway/web/irccloud.com/x-ohihddtkebdudpyf) has quit (Quit: Connection closed for inactivity)
2016-09-21 06:15:52	-->	TehWan_ (~TehWan@modemcable033.235-81-70.mc.videotron.ca) has joined ##c++
2016-09-21 06:16:41	<--	TehWan (~TehWan@smtp.securiglobe.com) has quit (Disconnected by services)
2016-09-21 06:16:44	--	TehWan_ is now known as TehWan
2016-09-21 06:16:53	<--	lloda (~user@213-193-80-99.static.cablecom.ch) has quit (Read error: Connection reset by peer)
2016-09-21 06:18:54	-->	Casteil (~Casteil@unaffiliated/casteil) has joined ##c++
2016-09-21 06:19:06	<--	meandrain (~meandrain@89.39.95.149) has quit (Ping timeout: 264 seconds)
2016-09-21 06:20:20	Casteil	anyone able to tell me why -11 mod 3 returns 1 while 11 mod 3 returns 2?
2016-09-21 06:20:52	zap0	-11 /3 is ?
2016-09-21 06:21:01	Casteil	-11 / 3 is -3.666
2016-09-21 06:21:03	-->	drozdziak1 (~drozdziak@89-70-116-45.dynamic.chello.pl) has joined ##c++
2016-09-21 06:21:04	Casteil	11 / 3 is 3.666
2016-09-21 06:21:09	<--	blackwind_123 (~IceChat9@117.192.142.2) has quit (Ping timeout: 272 seconds)
2016-09-21 06:21:30	<--	enufn (~enufn@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has quit (Remote host closed the connection)
2016-09-21 06:21:44	-->	EvilPeng1 (~EvilPengu@bur-inet-pa-1.disney.com) has joined ##c++
2016-09-21 06:21:54	zap0	computers don't use arithmetic, they use  binary-shenanigans
2016-09-21 06:21:58	-->	blackwind_123 (~IceChat9@117.192.145.198) has joined ##c++
2016-09-21 06:22:02	w3z	<<(-11%3)
2016-09-21 06:22:03	geordi	-2
2016-09-21 06:22:05	-->	Kn|t3 (~agarwalvi@49.207.53.8) has joined ##c++
2016-09-21 06:22:28	w3z	<<(11%3)
2016-09-21 06:22:29	geordi	2
2016-09-21 06:22:33	Oxyd	<< (-11 / 3) * 3 + (-11 % 3) // Because 1 is the correct answer.
2016-09-21 06:22:34	geordi	-11
2016-09-21 06:22:42	Oxyd	<< (-11 / 3) * 3 + (11 % 3) // And 2 is the wrong answer.
2016-09-21 06:22:43	Casteil	for some context this is actually me trying to figure out how an excel formula works
2016-09-21 06:22:51	geordi	-7
2016-09-21 06:22:57	-->	lolek (~lolek@unaffiliated/marcin) has joined ##c++
2016-09-21 06:23:04	zap0	lol.. excel is well known for being wrong about numbers... often!
2016-09-21 06:23:06	<--	Kn|t3 (~agarwalvi@49.207.53.8) has quit (Remote host closed the connection)
2016-09-21 06:23:09	Casteil	using =EOMONTH(A1,MOD(-MONTH(A1),3)) to get the end of the quarter
2016-09-21 06:23:18	w3z	it has to do with rounding towards 0
2016-09-21 06:23:29	<--	lolek (~lolek@unaffiliated/marcin) has left ##c++
2016-09-21 06:23:29	Casteil	yeah I kind of figured as much
2016-09-21 06:23:45	Casteil	google and wolfram give the same result though
2016-09-21 06:23:54	-->	xissburg_ (~xissburg@unaffiliated/xissburg) has joined ##c++
2016-09-21 06:23:58	<--	LBV_User (~leonardo@189.58.239.152.dynamic.adsl.gvt.net.br) has quit (Quit: done with this Instant Ramen Cup)
2016-09-21 06:24:40	verm1n	well if its an integer in 2s compliment, then it totally makes sense
2016-09-21 06:24:40		[06:24]
2016-09-21 06:25:13	zap0	2s compliment  /  binary-shenanigans...   w/e ;)
2016-09-21 06:25:16	w3z	your excel issues are off-topic here, but in terms of c++, (iirc) the decision to round towards 0 was standardized in 03
2016-09-21 06:25:18	<--	zap0 (~moofy@14-201-222-143.tpgi.com.au) has quit (Quit: zap0)
2016-09-21 06:25:22	<--	xBlackyII (~marc@p54B8B61C.dip0.t-ipconnect.de) has left ##c++
2016-09-21 06:25:43	w3z	prior to that modulus of a negative number was implementation defined
2016-09-21 06:26:00	-->	evgcx (~evgcx@mar13-2-82-246-223-195.fbx.proxad.net) has joined ##c++
2016-09-21 06:26:17	<--	TMM (~hp@fsf/member/pdpc.professional.tmm) has quit (Ping timeout: 240 seconds)
2016-09-21 06:26:17	<--	xissburg (~xissburg@unaffiliated/xissburg) has quit (Ping timeout: 248 seconds)
2016-09-21 06:26:18	w3z	ask et when hes around
2016-09-21 06:26:22	-->	Kn|t3 (~agarwalvi@49.207.53.8) has joined ##c++
2016-09-21 06:26:29	<--	evgcx (~evgcx@mar13-2-82-246-223-195.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-21 06:26:29	Casteil	yeah my bad, I couldn't think of any better place for a bunch of math / modulus-educated people :P
2016-09-21 06:27:32	-->	Ubulo (~Ubulo@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has joined ##c++
2016-09-21 06:28:21	Casteil	oh nm
2016-09-21 06:28:32	<--	Karyon (~yaaic@unaffiliated/karyon) has quit (Remote host closed the connection)
2016-09-21 06:28:53	-->	Karyon (~yaaic@unaffiliated/karyon) has joined ##c++
2016-09-21 06:29:40	verm1n	its because -12 comes before -9 with way ints are represented. Computers dont count from 0
2016-09-21 06:29:52	verm1n	*usually
2016-09-21 06:30:42	Casteil	my CFO comes to me with excel formula questions and I'm not sure why
2016-09-21 06:31:16	Casteil	he's a smart guy so a lot of times if he hasn't been able to figure it out on his own there's not an easy answer
2016-09-21 06:32:00	-->	tumeric (~jcastro@89.152.250.115) has joined ##c++
2016-09-21 06:32:00	-->	MaBunny (~Peter@45.250.59.89) has joined ##c++
2016-09-21 06:32:17	<--	promach (~promach@2001:e68:4427:8e12:3bb8:dddf:6065:9799) has quit (Quit: Leaving)
2016-09-21 06:32:28	-->	tdam (~TDAM@p20030062480B5F008DCFB127935E7376.dip0.t-ipconnect.de) has joined ##c++
2016-09-21 06:32:29	tumeric	hi guys, can you please ELI5 this snippet
2016-09-21 06:32:33	tumeric	http://pastebin.com/XZ5siAKn
2016-09-21 06:32:50	tumeric	the struct inside typedef struct
2016-09-21 06:33:00	tumeric	next is just a pointer to it? what does it hold?
2016-09-21 06:33:12	<--	MicroCheapFx_ (~quassel@230-95-190-109.dsl.ovh.fr) has quit (Read error: Connection reset by peer)
2016-09-21 06:33:52	Lowl3v3l	tumeric,  next is a pointer to a struct of type _WisdomList
2016-09-21 06:33:58	verm1n	https://en.wikipedia.org/wiki/Linked_list
2016-09-21 06:34:03	-->	elnormous (~elnormous@87.110.129.37) has joined ##c++
2016-09-21 06:34:05	Casteil	ahhh
2016-09-21 06:34:20	Lowl3v3l	tumeric, but this is C code, i wonder wether a C++ compiler would even compile it^^
2016-09-21 06:34:25	-->	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has joined ##c++
2016-09-21 06:34:42	ville	yes it would
2016-09-21 06:34:47	tumeric	:D
2016-09-21 06:35:01	tumeric	Lowl3v3l, so mainly its just holding data
2016-09-21 06:35:31	tumeric	I tried to search for the c channel just to dont bother you guys
2016-09-21 06:35:33	-->	ropeney (~ropeney@CPE-58-170-196-106.lns2.lon.bigpond.net.au) has joined ##c++
2016-09-21 06:36:01	Lowl3v3l	tumeric, ##C is a c channel. but yeah its just holding data like C structures tend to do ;)
2016-09-21 06:36:14	tumeric	:D
2016-09-21 06:36:16	tumeric	cheers mate
2016-09-21 06:36:17	-->	Betal (~Betal@unaffiliated/betal) has joined ##c++
2016-09-21 06:36:20	ville	tumeric: in c the struct names live in a distinct "namespace", for the lack of better word, and to access them you either prefix the identifier with "struct" or use a typedef to bring a name to the regular "namespace". namespace in quotes because c has no namespace
2016-09-21 06:37:00	tumeric	ville, thats, you just answered my next question
2016-09-21 06:37:05	Lowl3v3l	ville, it has, it just has no explicit namespace declarations^^
2016-09-21 06:37:06	tumeric	which I'm not gonna pose anymore
2016-09-21 06:37:41	<--	seru76 (~seru76@77.89.191.179) has quit (Quit: Leaving)
2016-09-21 06:37:45	-->	perrier-jouet (~perrier-j@70.48.137.39) has joined ##c++
2016-09-21 06:40:06	<--	MicroCheapFx (~quassel@230-95-190-109.dsl.ovh.fr) has quit (Ping timeout: 264 seconds)
2016-09-21 06:40:06		[06:40]
2016-09-21 06:41:26	-->	skweek (~skweek@2607:fe50:0:810b:bcae:516b:24e:ed39) has joined ##c++
2016-09-21 06:42:06	-->	orbiter (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has joined ##c++
2016-09-21 06:42:22	<--	Murii (~Murii@86.127.60.21) has quit
2016-09-21 06:42:23	<--	Kn|t3 (~agarwalvi@49.207.53.8) has quit (Quit: Kn|t3)
2016-09-21 06:42:27	<--	illerucis (~illerucis@2620:10d:c091:200::3:45e) has quit (Remote host closed the connection)
2016-09-21 06:42:41	-->	illerucis (~illerucis@2620:10d:c091:200::3:45e) has joined ##c++
2016-09-21 06:42:49	<--	Anticom (~quassel@217.6.33.234) has quit (Remote host closed the connection)
2016-09-21 06:43:04	<--	illerucis (~illerucis@2620:10d:c091:200::3:45e) has quit (Remote host closed the connection)
2016-09-21 06:43:36	-->	illerucis (~illerucis@199.201.65.132) has joined ##c++
2016-09-21 06:43:38	-->	Danishman (~kvirc@62-243-156-218-static.dk.customer.tdc.net) has joined ##c++
2016-09-21 06:43:59	-->	merijn (~merijn@a212-238-239-156.adsl.xs4all.nl) has joined ##c++
2016-09-21 06:46:16	<--	blaxter (~blaxter@62.101.183.90.dyn.user.ono.com) has quit (Quit: foo)
2016-09-21 06:46:25	-->	jaafar (~quassel@67.135.43.183) has joined ##c++
2016-09-21 06:47:52	<--	illerucis (~illerucis@199.201.65.132) has quit (Ping timeout: 255 seconds)
2016-09-21 06:47:53	<--	tumeric (~jcastro@89.152.250.115) has left ##c++ ("Leaving")
2016-09-21 06:48:40	<--	d_himro (~none@178.124.154.80) has quit (Ping timeout: 265 seconds)
2016-09-21 06:48:45	<--	slavanap (~slavanap@37.44.46.25) has quit (Ping timeout: 265 seconds)
2016-09-21 06:48:58	-->	d_himro (~none@178.124.154.80) has joined ##c++
2016-09-21 06:50:05	<--	TheVoid (~void@unaffiliated/thevoid) has quit (Remote host closed the connection)
2016-09-21 06:51:10	<--	Haruno (~Haruno@unaffiliated/haruno) has quit (Ping timeout: 265 seconds)
2016-09-21 06:52:30	-->	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has joined ##c++
2016-09-21 06:52:33	-->	Leovale (~Leovale@45.72.141.66) has joined ##c++
2016-09-21 06:52:42	<--	perrier-jouet (~perrier-j@70.48.137.39) has quit (Quit: WeeChat 1.5)
2016-09-21 06:53:30	-->	it_ (93572e74@gateway/web/freenode/ip.147.87.46.116) has joined ##c++
2016-09-21 06:54:30	<--	magnicida2 (~raskolnik@ip5b4135a6.dynamic.kabel-deutschland.de) has quit (Read error: Connection reset by peer)
2016-09-21 06:54:35	<--	BustyLoliChan (~BustyLoli@c-67-163-66-115.hsd1.ut.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-21 06:54:50	-->	pmercado (~pmercado@186-104-131-57.baf.movistar.cl) has joined ##c++
2016-09-21 06:54:59	<--	jefcolbi (~Thunderbi@188.166.147.168) has quit (Quit: jefcolbi)
2016-09-21 06:55:05	it_	Hello, I require the optional class from C++ but cannot use the required version at work. I wanted to make myself a smaller alternative which should more or less have the same interface, just what I require of it.
2016-09-21 06:55:50	<--	tdam (~TDAM@p20030062480B5F008DCFB127935E7376.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-09-21 06:55:50		[06:55]
2016-09-21 06:55:51	dv-	use pointers
2016-09-21 06:55:54	it_	I am not sure how to make this, especially memory-wise. Not sure if I should make the class copy every object passed to it?
2016-09-21 06:55:56	dv-	NULL = nothing
2016-09-21 06:56:12	it_	Well that is not my intention, I want to get away from that method..
2016-09-21 06:56:34	hs_	it_, make a small testcase showing what you need, and provide a first stab at it
2016-09-21 06:56:43	hs_	melpon.org/wandbox
2016-09-21 06:57:07	-->	phinxy (~tehhhd@unaffiliated/phinxy) has joined ##c++
2016-09-21 06:57:16	it_	Alright, will do so
2016-09-21 06:57:23	w3z	theres one in boost already
2016-09-21 06:57:29	it_	Oh but it doesn't require to run, correct?
2016-09-21 06:57:41	it_	Yeah it's the problem with all the dependencies, they don't like too many of those at work
2016-09-21 06:57:56	w3z	what dependencies ...
2016-09-21 06:57:59	hs_	it_, include a main that attempts to do something with what you want
2016-09-21 06:58:39	it_	Alright, will do so a bit later as I have to go now ._.
2016-09-21 06:58:45	it_	travelling etc. ._.
2016-09-21 06:59:25	hs_	{ optional<int> i; if (!i) { cout << "nope.."; } i = 5; if (i) { cout << i.value(); } } // it_
2016-09-21 06:59:25	geordi	nope..5
2016-09-21 07:00:04	-->	sgflt (~sgflt@HSI-KBW-095-208-038-223.hsi5.kabel-badenwuerttemberg.de) has joined ##c++
2016-09-21 07:00:13	-->	perrier-jouet (~perrier-j@70.48.137.39) has joined ##c++
2016-09-21 07:00:16	ville	it_: http://en.cppreference.com/w/cpp/types/aligned_storage to grab a chunk of memory aligned properly and then you just placement new on top of it
2016-09-21 07:00:44	-->	Tachyon_ (~Thunderbi@95.76.184.120) has joined ##c++
2016-09-21 07:01:05	hs_	rude
2016-09-21 07:01:15	-->	Antichrist[m] (antichrist@gateway/shell/matrix.org/x-sawbfpsmbrwbwkad) has joined ##c++
2016-09-21 07:01:17	hs_	what did that storage do to you?
2016-09-21 07:01:44	-->	tdam (~TDAM@p20030062480B5F008DCFB127935E7376.dip0.t-ipconnect.de) has joined ##c++
2016-09-21 07:01:50	ville	missed the cache
2016-09-21 07:02:30	-->	BustyLoli-Chan (~BustyLoli@2601:680:c201:cd2:7cdb:8cec:4aaf:411a) has joined ##c++
2016-09-21 07:02:52	-->	rorro (~rorro@h-170-152-58.a163.priv.bahnhof.se) has joined ##c++
2016-09-21 07:03:12	<--	it_ (93572e74@gateway/web/freenode/ip.147.87.46.116) has quit (Ping timeout: 240 seconds)
2016-09-21 07:03:18	<--	karab44 (~karab44@unaffiliated/karab44) has quit (Quit: Bye bye! o/)
2016-09-21 07:03:47	w3z	its funny how beginners always want to avoid libraries and books ...
2016-09-21 07:04:17	<--	jaafar (~quassel@67.135.43.183) has quit (Ping timeout: 240 seconds)
2016-09-21 07:04:47	<--	tdam (~TDAM@p20030062480B5F008DCFB127935E7376.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-09-21 07:05:16	<--	coincoin4ever (~coincoin@178.16.163.28) has quit (Quit: \_o< 1.5)
2016-09-21 07:05:18	<--	fedepad (~fedepad@eduroam-97-27.zdv.uni-mainz.de) has quit (Remote host closed the connection)
2016-09-21 07:05:20	-->	a3f (~a3f@unaffiliated/a3f) has joined ##c++
2016-09-21 07:05:23	<--	MalRD (~MalRD@50-87-176-177.unifiedlayer.com) has quit (Ping timeout: 250 seconds)
2016-09-21 07:05:37	-->	dedgrant (~dedgrant@192-40-237-82.dedicated.allstream.net) has joined ##c++
2016-09-21 07:07:53	<--	MaBunny (~Peter@45.250.59.89) has quit (Ping timeout: 248 seconds)
2016-09-21 07:08:05	-->	sh00p (~sh00p@84-216-39-31.customers.ownit.se) has joined ##c++
2016-09-21 07:08:52	-->	metachr0n (~nobody@78.1.broadband13.iol.cz) has joined ##c++
2016-09-21 07:09:15	-->	MalRD (~MalRD@50-87-176-177.unifiedlayer.com) has joined ##c++
2016-09-21 07:09:31	<--	Casteil (~Casteil@unaffiliated/casteil) has left ##c++ ("Leaving")
2016-09-21 07:09:47	-->	lolek (~lolek@unaffiliated/marcin) has joined ##c++
2016-09-21 07:09:53	<--	lolek (~lolek@unaffiliated/marcin) has quit (Client Quit)
2016-09-21 07:10:26	<--	metachr0n (~nobody@78.1.broadband13.iol.cz) has quit (Client Quit)
2016-09-21 07:11:11	V-ille	it's even funnier how that's often not the case with other languages
2016-09-21 07:11:11		[07:11]
2016-09-21 07:11:39	V-ille	to be fair, "avoid libraries" probably means external libraries there, and other languages have more comprehensive standard libraries than c++
2016-09-21 07:13:26	-->	metachr0n (~nobody@78.1.broadband13.iol.cz) has joined ##c++
2016-09-21 07:13:37	-->	xevious (~xevious@unaffiliated/xevious) has joined ##c++
2016-09-21 07:14:52	<--	AndyBotwin (~Gustavo@unaffiliated/andybotwin) has quit (Quit: Leaving)
2016-09-21 07:14:53	xevious	There's no such thing as a pure virtual member const, right? i.e. some sort of indicator in an abstract class that derived classes need to have that const and assign it a value.
2016-09-21 07:15:36	<--	Paradisee (~quassel@93-38-184-186.ip71.fastwebnet.it) has quit (Remote host closed the connection)
2016-09-21 07:16:19	<--	syem (~s@unaffiliated/syem) has quit (Quit: Lost terminal)
2016-09-21 07:17:12	et	virtual functions can sure be const
2016-09-21 07:18:44	-->	allen29 (~all@unaffiliated/allen29) has joined ##c++
2016-09-21 07:18:49	-->	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has joined ##c++
2016-09-21 07:19:02	xevious	et: I meant a virtual const member variable
2016-09-21 07:19:03	w3z	his question is at too high a level of nonsense for you to parse correctly :)
2016-09-21 07:19:30	xevious	Yes I left out a very important bit: variable, not function.
2016-09-21 07:20:20	et	there is no such thing as a virtual variable
2016-09-21 07:20:22	<--	jjimenezg93 (~chatzilla@77.224.165.147) has quit (Read error: Connection reset by peer)
2016-09-21 07:20:45	<--	deekej (deekej@nat/redhat/x-ipptftkhtuxmapoh) has quit (Remote host closed the connection)
2016-09-21 07:21:03	<--	SweetPear (uid144596@gateway/web/irccloud.com/x-svxzycxitctrdvsb) has quit (Quit: Connection closed for inactivity)
2016-09-21 07:21:56	xevious	That's what I thought.
2016-09-21 07:24:08	-->	corebob (~corebob@cm-84.213.41.214.getinternet.no) has joined ##c++
2016-09-21 07:24:34	-->	biglama (~Day_dream@ram31-1-82-234-77-18.fbx.proxad.net) has joined ##c++
2016-09-21 07:25:50	-->	bratner_ (~bratner@bzq-79-177-188-8.red.bezeqint.net) has joined ##c++
2016-09-21 07:25:53	<--	rebb (~rebb3@p54B81349.dip0.t-ipconnect.de) has quit (Ping timeout: 265 seconds)
2016-09-21 07:26:35	-->	gagbo (~gagbo@unaffiliated/gagbo) has joined ##c++
2016-09-21 07:26:35		[07:26]
2016-09-21 07:26:36	-->	unK_ (~drunK@dynamic-78-8-0-252.ssp.dialog.net.pl) has joined ##c++
2016-09-21 07:26:48	<--	bratner (~bratner@bzq-79-178-158-25.red.bezeqint.net) has quit (Ping timeout: 244 seconds)
2016-09-21 07:27:34	-->	jaafar (~quassel@67.135.43.183) has joined ##c++
2016-09-21 07:29:37	-->	roia (~a.jensen@97.65.103.250) has joined ##c++
2016-09-21 07:30:46	-->	slavanap (~slavanap@5.145.251.251) has joined ##c++
2016-09-21 07:30:49	-->	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has joined ##c++
2016-09-21 07:31:21	<--	ibouvousaime (~ibouvousa@41.83.62.203) has quit (Ping timeout: 248 seconds)
2016-09-21 07:31:21	-->	bumbar (~bumbar@unaffiliated/bumbar) has joined ##c++
2016-09-21 07:31:29	<--	metachr0n (~nobody@78.1.broadband13.iol.cz) has quit (Quit: WeeChat 1.5)
2016-09-21 07:31:42	<--	sophia7 (~sophia7@unaffiliated/sophia7) has quit (Quit: sophia7)
2016-09-21 07:31:58	-->	ibouvousaime (~ibouvousa@41.82.35.1) has joined ##c++
2016-09-21 07:32:09	xevious	et, w3z: Thanks and sorry for my horribly phrased question.
2016-09-21 07:32:12	-->	Sculptor (~Sculptor@cable-24-135-26-151.dynamic.sbb.rs) has joined ##c++
2016-09-21 07:32:17	<--	xevious (~xevious@unaffiliated/xevious) has quit (Quit: xevious)
2016-09-21 07:34:20	<--	Karyon (~yaaic@unaffiliated/karyon) has quit (Quit: sayonara)
2016-09-21 07:35:04	<--	my123 (~my123@unaffiliated/kill--9-1/x-8776976) has quit (Read error: Connection reset by peer)
2016-09-21 07:37:26	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-21 07:37:40	Limona	Is #pragma once good enough, or should i use ifndef?
2016-09-21 07:38:10	-->	it_ (b2c5eb2d@gateway/web/freenode/ip.178.197.235.45) has joined ##c++
2016-09-21 07:38:12	Eelis	depends on whether you want to write in C++
2016-09-21 07:38:44	-->	my123 (~my123@13.85.69.239) has joined ##c++
2016-09-21 07:38:44	<--	my123 (~my123@13.85.69.239) has quit (Changing host)
2016-09-21 07:38:44	-->	my123 (~my123@unaffiliated/kill--9-1/x-8776976) has joined ##c++
2016-09-21 07:39:10	Limona	uhh what? Is ndef only for C?
2016-09-21 07:39:15	Limona	and pragma for c++?
2016-09-21 07:39:38	Eelis	no, pragma is not defined by C++, so if you use it you're just hoping that the compiler will do something similar to what you had in mind
2016-09-21 07:39:52	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-21 07:40:10	Eelis	whereas header guards are guaranteed to work by standard C++
2016-09-21 07:40:22	-->	magnicida (~raskolnik@2a02:8109:8c80:231:ea39:dfff:fe4d:275b) has joined ##c++
2016-09-21 07:40:22	-->	YungRaj (~YungRaj@nat-165-91-13-19.tamulink.tamu.edu) has joined ##c++
2016-09-21 07:40:27	-->	Enhex (~Enhex@82.252.138.77.rev.sfr.net) has joined ##c++
2016-09-21 07:40:34	pragma-	Aw, you guys aren't talking about me.
2016-09-21 07:40:37	<--	a3f (~a3f@unaffiliated/a3f) has quit (Quit: bb)
2016-09-21 07:40:46	pragma-	I thought maybe you guys missed me.
2016-09-21 07:40:48	it_	Hello, I was here earlier stating that I needed a class "Optional". Yet I cannot update at work or have any other solution to use it. So my attempt was to create it on my own, as similiar to the one in std so it can be replaced later. Currently I just require the methods I need on my own, which aren't a lot. I was asked to supply some code on how I would use it: http://melpon.org/wandbox/permlink/z6iigTAnBSJUoFx5
2016-09-21 07:41:12	Limona	Eelis alright, so i should use header guards anyhow?
2016-09-21 07:41:14	<--	sgflt (~sgflt@HSI-KBW-095-208-038-223.hsi5.kabel-badenwuerttemberg.de) has quit (Quit: sgflt)
2016-09-21 07:41:23	<--	vicenteH (~user@195.235.96.150) has quit (Ping timeout: 265 seconds)
2016-09-21 07:41:23	-->	Karyon (~Karyon@unaffiliated/karyon) has joined ##c++
2016-09-21 07:41:35	Eelis	Limona: the answer has not changed since 5 minutes ago
2016-09-21 07:41:35		[07:41]
2016-09-21 07:41:46	V-ille	it_: not really related to that, but I do not recommend trying to reimplement every part of std::optional
2016-09-21 07:41:47	Limona	alright
2016-09-21 07:42:03	<--	Ubulo (~Ubulo@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has quit (Remote host closed the connection)
2016-09-21 07:42:06	it_	Well not sure if that's what you mean, but I just need some key-parts
2016-09-21 07:42:10	m_ben	it_: there are implementations of optional on github
2016-09-21 07:42:13	m_ben	plenty
2016-09-21 07:42:25	-->	metachr0n (~nobody@78.1.broadband13.iol.cz) has joined ##c++
2016-09-21 07:42:33	<--	Brklyn (~truthbk@38.122.226.210) has quit (Ping timeout: 240 seconds)
2016-09-21 07:42:41	-->	Iaohd (~Iaohd@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has joined ##c++
2016-09-21 07:42:58	<--	Iaohd (~Iaohd@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-21 07:42:59	V-ille	it_: well, I just committed this patch, if you understand every part of it easily, then you're almost ready to consider implementing std::optional, almost :) https://gcc.gnu.org/ml/gcc-patches/2016-09/msg00255.html
2016-09-21 07:43:20	-->	jyve (~jyve@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has joined ##c++
2016-09-21 07:43:40	<--	jyve (~jyve@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-21 07:44:24	<--	flavi0 (~anon@unaffiliated/flavi0) has quit (Quit: leaving)
2016-09-21 07:44:58	-->	symm- (~symm-@86.127.152.32) has joined ##c++
2016-09-21 07:44:58	<--	Xanather (~xanather@unaffiliated/xanather) has quit (Quit: Leaving)
2016-09-21 07:45:31	<--	YungRaj (~YungRaj@nat-165-91-13-19.tamulink.tamu.edu) has quit (Read error: Connection reset by peer)
2016-09-21 07:45:42	it_	No I've already taken a look at the original src code and don't even understand that
2016-09-21 07:45:58	-->	YungRaj (~YungRaj@nat-165-91-13-19.tamulink.tamu.edu) has joined ##c++
2016-09-21 07:46:09	<--	hk238 (~kvirc@unaffiliated/hk238) has quit (Quit: http://www.kvirc.net/ 4.9.2 Aria)
2016-09-21 07:46:13	<--	YungRaj (~YungRaj@nat-165-91-13-19.tamulink.tamu.edu) has quit (Client Quit)
2016-09-21 07:46:21	it_	I have been working with C++ for 2 years now and moved from Java to it. I just need to get away from returning bools, ints or pointers when something might fail. Such as opening a file
2016-09-21 07:46:31	<--	fahadash (uid44972@gateway/web/irccloud.com/x-kudewarlgeqrlaeb) has quit (Quit: Connection closed for inactivity)
2016-09-21 07:46:33	<--	bratner_ (~bratner@bzq-79-177-188-8.red.bezeqint.net) has quit (Ping timeout: 240 seconds)
2016-09-21 07:47:47	-->	YungRaj (~YungRaj@nat-165-91-13-19.tamulink.tamu.edu) has joined ##c++
2016-09-21 07:47:49	-->	Brklyn (~truthbk@38.122.226.210) has joined ##c++
2016-09-21 07:49:11	-->	JohnMS (~johnms@87-206-149-100.dynamic.chello.pl) has joined ##c++
2016-09-21 07:49:40	<--	metachr0n (~nobody@78.1.broadband13.iol.cz) has quit (Quit: WeeChat 1.5)
2016-09-21 07:50:41	-->	przemkovv-bis (~przemkovv@d83-37.icpnet.pl) has joined ##c++
2016-09-21 07:50:49	JohnMS	I'm in need of doing the following, but I don't know how to accomplish it. http://ideone.com/nRRLz3
2016-09-21 07:50:52	-->	metachr0n (~nobody@78.1.broadband13.iol.cz) has joined ##c++
2016-09-21 07:51:10	<--	josh_ (~josh@c-67-182-242-240.hsd1.ut.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-21 07:51:29	<--	sanitypassing (~sanitypas@unaffiliated/sanitypassing) has quit (Ping timeout: 240 seconds)
2016-09-21 07:51:45	<--	Karyon (~Karyon@unaffiliated/karyon) has quit (Ping timeout: 272 seconds)
2016-09-21 07:51:56	-->	decimad (~deci@ip5f5be505.dynamic.kabel-deutschland.de) has joined ##c++
2016-09-21 07:52:53	w3z	template<class T> struct S{friend T;};
2016-09-21 07:52:58	w3z	{} template<class T> struct S{friend T;};
2016-09-21 07:52:59	geordi	<no output>
2016-09-21 07:53:14	<--	perrier-jouet (~perrier-j@70.48.137.39) has quit (Quit: WeeChat 1.5)
2016-09-21 07:53:15	-->	arora (~arora@109.177.171.163) has joined ##c++
2016-09-21 07:53:25	-->	illerucis (~illerucis@2620:10d:c091:200::3:3c4c) has joined ##c++
2016-09-21 07:53:30	-->	KAHR-Alpha (~Alpha@AReims-652-1-187-168.w92-142.abo.wanadoo.fr) has joined ##c++
2016-09-21 07:53:50	-->	Karyon (~Karyon@unaffiliated/karyon) has joined ##c++
2016-09-21 07:53:51	<--	it_ (b2c5eb2d@gateway/web/freenode/ip.178.197.235.45) has quit
2016-09-21 07:53:54	JohnMS	Thanks.
2016-09-21 07:54:30	<--	ryxai (~Jonathan@pool-72-89-246-128.nycmny.fios.verizon.net) has quit (Ping timeout: 264 seconds)
2016-09-21 07:55:33	-->	lleo (c297ccf0@gateway/web/freenode/ip.194.151.204.240) has joined ##c++
2016-09-21 07:55:57	--	lleo is now known as Guest46005
2016-09-21 07:56:05	<--	Guest46005 (c297ccf0@gateway/web/freenode/ip.194.151.204.240) has left ##c++
2016-09-21 07:56:41	<--	f10_ (~flo@2001:470:52af:1:dd05:b755:629c:9755) has quit (Read error: Connection reset by peer)
2016-09-21 07:56:41		[07:56]
2016-09-21 07:56:47	-->	f10__ (~flo@2001:470:52af:1:59b:9657:6ac8:c864) has joined ##c++
2016-09-21 07:57:07	-->	f10_ (~flo@2001:470:52af:1:dd05:b755:629c:9755) has joined ##c++
2016-09-21 07:57:11	<--	f10 (~flo@2001:470:52af:1:59b:9657:6ac8:c864) has quit (Read error: No route to host)
2016-09-21 07:58:03	<--	iterati (~vangelis@79.103.112.83.dsl.dyn.forthnet.gr) has quit (Ping timeout: 272 seconds)
2016-09-21 07:59:36	<--	blueness (~blueness@gentoo/developer/blueness) has quit (Quit: blueness)
2016-09-21 07:59:42	<--	symm- (~symm-@86.127.152.32) has quit (Quit: Leaving...)
2016-09-21 08:00:17	-->	FreeBirdLjj (~freebirdl@112.0.51.132) has joined ##c++
2016-09-21 08:00:26	<--	ctnguyen (~chau@2606:6000:fd00:bc00:8048:a03c:3885:a855) has quit (Remote host closed the connection)
2016-09-21 08:01:00	-->	zero_byte (~zer0@ip-89-103-110-138.net.upcbroadband.cz) has joined ##c++
2016-09-21 08:01:33	-->	AkaiSora (~quassel@197.22.151.106) has joined ##c++
2016-09-21 08:01:39	-->	iterati (~vangelis@79.103.112.83.dsl.dyn.forthnet.gr) has joined ##c++
2016-09-21 08:01:47	-->	fedepad (~fedepad@p4FE11069.dip0.t-ipconnect.de) has joined ##c++
2016-09-21 08:02:09	-->	bratner_ (~bratner@bzq-79-177-188-8.red.bezeqint.net) has joined ##c++
2016-09-21 08:03:54	<--	ropeney (~ropeney@CPE-58-170-196-106.lns2.lon.bigpond.net.au) has quit (Quit: Leaving)
2016-09-21 08:03:54	-->	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has joined ##c++
2016-09-21 08:03:57	<--	arora (~arora@109.177.171.163) has quit (Quit: Mutter: http://www.mutterirc.com)
2016-09-21 08:05:02	<--	FreeBirdLjj (~freebirdl@112.0.51.132) has quit (Ping timeout: 244 seconds)
2016-09-21 08:05:23	-->	Markow (~Markow@176.122.215.103) has joined ##c++
2016-09-21 08:05:24	<--	InfoTest (~Thunderbi@tgn.149.23.243.dts.mg) has quit (Quit: InfoTest)
2016-09-21 08:05:53	-->	xkpe (~xkpe@host86-151-105-229.range86-151.btcentralplus.com) has joined ##c++
2016-09-21 08:06:20	<--	blackbird1 (~blackbird@197.1.252.203) has quit (Ping timeout: 260 seconds)
2016-09-21 08:07:37	<--	Vingador_ (~quassel@189.115.173.129) has quit (Remote host closed the connection)
2016-09-21 08:07:56	-->	blackbird1 (~blackbird@197.2.125.33) has joined ##c++
2016-09-21 08:07:59	-->	Veltas (~veltas@static.117.33.251.148.clients.your-server.de) has joined ##c++
2016-09-21 08:08:16	Veltas	Is constructing a regex typically an "expensive" operation?
2016-09-21 08:08:30	<--	drozdziak1 (~drozdziak@89-70-116-45.dynamic.chello.pl) has quit (Quit: WeeChat 1.5)
2016-09-21 08:08:37	-->	tristanseifert (~tristanse@nat-165-91-12-212.tamulink.tamu.edu) has joined ##c++
2016-09-21 08:09:25	<--	MalRD (~MalRD@50-87-176-177.unifiedlayer.com) has quit (Ping timeout: 265 seconds)
2016-09-21 08:11:03	kalven	 "yes" ?
2016-09-21 08:11:18	<--	RajRajRaj (uid72176@gateway/web/irccloud.com/x-jdfnwikznuaxsbgx) has quit (Quit: Connection closed for inactivity)
2016-09-21 08:11:22	et	if you are applying it to multiple strings you want to store it, if that is the question
2016-09-21 08:11:33	<--	CuriousErnestBro (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has quit (Remote host closed the connection)
2016-09-21 08:11:57	-->	xnavor (~xnavor@78-70-4-240-no171.business.telia.com) has joined ##c++
2016-09-21 08:11:57		[08:11]
2016-09-21 08:12:15	-->	MalRD (~MalRD@50-87-176-177.unifiedlayer.com) has joined ##c++
2016-09-21 08:12:31	-->	kasper^ (~safaf@82.137.9.161) has joined ##c++
2016-09-21 08:16:04	-->	harha_ (harha_@y55.ip4.netikka.fi) has joined ##c++
2016-09-21 08:16:32	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-21 08:18:12	<--	voidah (~voidah@unaffiliated/voider) has quit (Remote host closed the connection)
2016-09-21 08:18:37	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-21 08:18:42	-->	jshjsh (~jshjsh@172.56.38.82) has joined ##c++
2016-09-21 08:18:42	<--	JoshS (~jshjsh@172.56.38.82) has quit (Disconnected by services)
2016-09-21 08:18:51	--	jshjsh is now known as JoshS
2016-09-21 08:19:12	Veltas	et: Pretty much yes
2016-09-21 08:19:40	<--	bocaneri (~bocaneri@about/linux/staff/sauvin) has quit (Remote host closed the connection)
2016-09-21 08:20:20	<--	Girafferson (~Giraffers@2601:281:8001:663d:e234:b24c:6011:64f4) has quit (Remote host closed the connection)
2016-09-21 08:20:28	-->	aslant (~aslant@37.157.39.138) has joined ##c++
2016-09-21 08:20:54	<--	roia (~a.jensen@97.65.103.250) has quit (Ping timeout: 264 seconds)
2016-09-21 08:22:49	-->	jshjsh (~jshjsh@172.56.38.82) has joined ##c++
2016-09-21 08:23:10	<--	JoshS (~jshjsh@172.56.38.82) has quit (Disconnected by services)
2016-09-21 08:23:25	--	jshjsh is now known as JoshS
2016-09-21 08:25:35	w3z	hmm, http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0170r1.pdf doesn't indicate that constexpr lambda expressions will be allowed in template arguments or in unevaluated contexts
2016-09-21 08:25:55	w3z	{} template<int> struct S{}; S<[]()constexpr{return 0;}()> s;
2016-09-21 08:25:55	geordi	error: lambda-expression in template-argument
2016-09-21 08:26:09	w3z	{decltype([]()constexpr{return 0;}()) i=0;}
2016-09-21 08:26:09	geordi	error: lambda-expression in unevaluated context
2016-09-21 08:26:10	<--	tristanseifert (~tristanse@nat-165-91-12-212.tamulink.tamu.edu) has quit (Ping timeout: 260 seconds)
2016-09-21 08:27:43	<--	chrisg_ (~chrisg@host86-142-34-130.range86-142.btcentralplus.com) has quit (Quit: ZNC 1.6.2 - http://znc.in)
2016-09-21 08:27:43		[08:27]
2016-09-21 08:27:44	w3z	too bad, couldve been interesting, it does allow lambdas to be used in constexpr functions now, and it does indicate that the closure type can be constexpr
2016-09-21 08:28:48	w3z	{} constexpr int f(){return [](){return 0;}();}
2016-09-21 08:28:48	geordi	<no output>
2016-09-21 08:29:08	-->	perrier-jouet (~perrier-j@70.48.137.39) has joined ##c++
2016-09-21 08:29:19	<--	forgottenone (~forgotten@195.142.65.127) has quit (Ping timeout: 244 seconds)
2016-09-21 08:30:07	-->	SteffanW2 (~steffanw@ip4da40774.direct-adsl.nl) has joined ##c++
2016-09-21 08:30:10	w3z	btw, gcc status for implementation of 17 features https://gcc.gnu.org/projects/cxx-status.html#cxx1z
2016-09-21 08:32:35	<--	Karyon (~Karyon@unaffiliated/karyon) has quit (Ping timeout: 260 seconds)
2016-09-21 08:33:11	w3z	and clang status (again) http://clang.llvm.org/cxx_status.html#cxx17
2016-09-21 08:33:52	<--	JohnMS (~johnms@87-206-149-100.dynamic.chello.pl) has quit (Quit: Konversation terminated!)
2016-09-21 08:34:00	-->	tristanseifert (~tristanse@128.194.3.4) has joined ##c++
2016-09-21 08:34:33	<--	Tachyon_ (~Thunderbi@95.76.184.120) has quit (Quit: Tachyon_)
2016-09-21 08:34:37	-->	meandrain (~meandrain@109.166.134.97) has joined ##c++
2016-09-21 08:34:40	-->	cmedeiros (~cmedeiros@200.186.50.162) has joined ##c++
2016-09-21 08:35:05	<--	sh00p (~sh00p@84-216-39-31.customers.ownit.se) has quit (Ping timeout: 265 seconds)
2016-09-21 08:35:15	-->	Anodl1 (~Anodl@p2003007A2F1FDE0050C09E6D9676E8AE.dip0.t-ipconnect.de) has joined ##c++
2016-09-21 08:35:18	--	B00100100 is now known as cd80
2016-09-21 08:37:05	<--	ferdna (~ferdna@cpe-69-23-141-130.elp.res.rr.com) has quit (Quit: Leaving)
2016-09-21 08:38:57	<--	xnavor (~xnavor@78-70-4-240-no171.business.telia.com) has quit (Quit: This computer has gone to sleep)
2016-09-21 08:39:23	-->	k4rtik (~k4rtik@unaffiliated/k4rtik) has joined ##c++
2016-09-21 08:39:47	<--	cd80 (~bf3@179.43.151.98) has quit (Quit: Reconnecting)
2016-09-21 08:39:55	-->	kasper_ (~safaf@82.137.13.15) has joined ##c++
2016-09-21 08:40:07	-->	cd80 (~bf3@179.43.151.98) has joined ##c++
2016-09-21 08:41:17	<--	kasper^ (~safaf@82.137.9.161) has quit (Ping timeout: 265 seconds)
2016-09-21 08:41:19	<--	rorro (~rorro@h-170-152-58.a163.priv.bahnhof.se) has quit (Ping timeout: 265 seconds)
2016-09-21 08:41:20	-->	mnsewn (~mnsewn@172.82.128.167) has joined ##c++
2016-09-21 08:41:40	-->	Adva (~Hyrule@2a02:810a:12c0:5068:b87d:a7b7:14f8:bd6a) has joined ##c++
2016-09-21 08:41:43	mnsewn	ahh it's a wonderful day
2016-09-21 08:43:01	<--	skweek (~skweek@2607:fe50:0:810b:bcae:516b:24e:ed39) has quit (Ping timeout: 272 seconds)
2016-09-21 08:43:01		[08:43]
2016-09-21 08:45:12	-->	skweek (~skweek@2607:fe50:0:810b:bcae:516b:24e:ed39) has joined ##c++
2016-09-21 08:45:21	-->	sh00p (~sh00p@84-216-39-31.customers.ownit.se) has joined ##c++
2016-09-21 08:45:52	<--	skweek (~skweek@2607:fe50:0:810b:bcae:516b:24e:ed39) has quit (Max SendQ exceeded)
2016-09-21 08:46:12	-->	skweek (~skweek@2607:fe50:0:810b:bcae:516b:24e:ed39) has joined ##c++
2016-09-21 08:47:28	<--	Guest92333 (~condy@115.28.150.204) has quit (Changing host)
2016-09-21 08:47:28	-->	Guest92333 (~condy@unaffiliated/condy) has joined ##c++
2016-09-21 08:47:34	--	Guest92333 is now known as \f
2016-09-21 08:48:17	<--	Thorax2015 (~Thorax@94.197.121.239.threembb.co.uk) has quit (Quit: Leaving)
2016-09-21 08:48:31	<--	KNRO (~quassel@94.187.209.247) has quit (Remote host closed the connection)
2016-09-21 08:49:04	--	cd80 is now known as CD80
2016-09-21 08:49:20	-->	syem (~s@unaffiliated/syem) has joined ##c++
2016-09-21 08:49:33	<--	CD80 (~bf3@179.43.151.98) has quit (Quit: leaving)
2016-09-21 08:49:34	-->	gp5st (17194381@gateway/web/freenode/ip.23.25.67.129) has joined ##c++
2016-09-21 08:49:39	-->	Jitta (~Jitta@ip5b4135e8.dynamic.kabel-deutschland.de) has joined ##c++
2016-09-21 08:49:48	-->	cd80 (~bf3@179.43.151.98) has joined ##c++
2016-09-21 08:50:28	gp5st	Can someone explain why on line 16, CONDITION::value is valid?  there aren't any restrictions on the type of CONDITION http://coliru.stacked-crooked.com/a/2e0b0bf6b2eb574e
2016-09-21 08:51:23	-->	HerzogDeXtEr (~farci@i59F6D2CF.versanet.de) has joined ##c++
2016-09-21 08:51:35	Oxyd	It's valid because there's nothing invalid.
2016-09-21 08:51:36	-->	roia (~a.jensen@97.65.103.250) has joined ##c++
2016-09-21 08:51:56	Oxyd	Is there something that looks invalid to you?
2016-09-21 08:52:52	<--	oxygene (~fred@ALille-652-1-134-14.w83-198.abo.wanadoo.fr) has quit (Quit: Quitte)
2016-09-21 08:53:53	<--	TMinus36 (~tminus36@98.220.203.198) has quit (Ping timeout: 265 seconds)
2016-09-21 08:55:33	<--	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has quit (Ping timeout: 276 seconds)
2016-09-21 08:55:41	-->	KNRO (~quassel@94.187.209.247) has joined ##c++
2016-09-21 08:56:29	<--	Gathis (~TheBlack@unaffiliated/gathis) has quit (Remote host closed the connection)
2016-09-21 08:57:01	gp5st	Oxyd: how does it know that ::value exists?
2016-09-21 08:57:31	gp5st	it being the compiler
2016-09-21 08:57:33	Oxyd	It looks inside the type.
2016-09-21 08:58:12	Oxyd	The type being std::is_convertible<something, something else>.
2016-09-21 08:58:12		[08:58]
2016-09-21 08:58:49	-->	satifant (~sati@unaffiliated/satifant) has joined ##c++
2016-09-21 08:58:53	gp5st	Oxyd: but how's it know it won't be called from some other file with some other type?
2016-09-21 08:59:33	Oxyd	If it's instantiated with some other type, then it'll look into that other type it's instantiated with.
2016-09-21 08:59:51	gp5st	I guess in general I didn't expect type resolution to assert more specific values for something than what's written
2016-09-21 08:59:57	<--	NeoGeo64 (~linux@2604:2d80:881a:0:b4a3:be16:d6fd:8559) has quit (Remote host closed the connection)
2016-09-21 09:00:18	Oxyd	I didn't understand that sentence.
2016-09-21 09:00:42	<--	gagbo (~gagbo@unaffiliated/gagbo) has quit (Quit: Konversation terminated!)
2016-09-21 09:00:59	fooobarrr	the compiler only see's what is available in a compilation unit
2016-09-21 09:01:14	fooobarrr	what happens in a different compilation unit doesn't matter
2016-09-21 09:01:45	fooobarrr	s/compilation/translation
2016-09-21 09:01:48	fooobarrr	whoops
2016-09-21 09:02:01	<--	jaafar (~quassel@67.135.43.183) has quit (Ping timeout: 248 seconds)
2016-09-21 09:02:05	Veltas	Say I make a local `static const std::regex my_regex("<some fixed regex>");` in a function where I use it a lot, is there something dangerous about this?
2016-09-21 09:02:09	<--	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has quit (Ping timeout: 265 seconds)
2016-09-21 09:02:10	<--	k4rtik (~k4rtik@unaffiliated/k4rtik) has quit (Quit: Leaving)
2016-09-21 09:02:40	-->	rorro (~rorro@h-170-152-58.a163.priv.bahnhof.se) has joined ##c++
2016-09-21 09:02:41	Veltas	Because if not that would let me just declare it where I need it rather than further up in the function
2016-09-21 09:03:00	gp5st	fooobarrr: interesting, so it'd just fail to link if I tried to use a different type and link against that file?
2016-09-21 09:03:07	<--	SteffanW2 (~steffanw@ip4da40774.direct-adsl.nl) has quit (Read error: Connection reset by peer)
2016-09-21 09:03:39	gp5st	there is just something about it making the type more specific that I have some issue with, shouldn't it only know it's a type, but nothing else?
2016-09-21 09:03:47	Levitator	Kind of a strange question: can anyone think of a way to fail a static assertion if an operation is not performed on a return?
2016-09-21 09:03:52	w3z	there are two phases to name lookup
2016-09-21 09:04:07	-->	Groscheri (~Dyonisos@unaffiliated/dyonisos) has joined ##c++
2016-09-21 09:04:11	Levitator	More generally, I want f() to fail a static assertion if it is f() and not f2(f())
2016-09-21 09:04:13	<--	DonRichie (~DonRichie@ricl.de) has quit (Ping timeout: 255 seconds)
2016-09-21 09:04:38	<--	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has quit (Quit: Leaving.)
2016-09-21 09:04:40	w3z	for a dependent type, the name is looked up when the template is instantiated
2016-09-21 09:04:52	gp5st	Levitator: could you make f private and just have f2 call it?
2016-09-21 09:05:12	<--	TheLoneMilkMan (1827617a@gateway/web/freenode/ip.24.39.97.122) has quit (Quit: Page closed)
2016-09-21 09:05:13	Levitator	That's probably the simplest way, but it has some gaps.
2016-09-21 09:05:51	-->	flavi0 (~anon@unaffiliated/flavi0) has joined ##c++
2016-09-21 09:06:41	gp5st	w3z: interesting. I guess it's just not something I'm used to in C++ (I've seen similar behavior elsewhere, haskell I think, but never made use of it)
2016-09-21 09:06:54	w3z	template<class T> struct S{static const int value=T::value;}; //since value is dependent on T value can only be evaluated once we have a T
2016-09-21 09:06:59	<--	johnc- (~johnc-@about/csharp/regular/johnc) has quit (Ping timeout: 265 seconds)
2016-09-21 09:07:35	-->	Karyon (~yaaic@CPE0c473d35fd91-CM0c473d35fd90.cpe.net.cable.rogers.com) has joined ##c++
2016-09-21 09:07:42	<--	rorro (~rorro@h-170-152-58.a163.priv.bahnhof.se) has quit (Ping timeout: 264 seconds)
2016-09-21 09:07:43	<--	Karyon (~yaaic@CPE0c473d35fd91-CM0c473d35fd90.cpe.net.cable.rogers.com) has quit (Signing in (Karyon))
2016-09-21 09:07:43	-->	Karyon (~yaaic@unaffiliated/karyon) has joined ##c++
2016-09-21 09:07:50	-->	josh_ (~josh@168.103.191.142) has joined ##c++
2016-09-21 09:07:52	gp5st	w3z: and it'll just fail if there is no ::value at compile time? (not the other way around of failing because it doesn't know if ::value exists in general)
2016-09-21 09:08:13	--	Karyon is now known as Guest37884
2016-09-21 09:08:14	w3z	similarly template<class T> struct S{using type=typename T::type;}; type is a dependendent type of T
2016-09-21 09:08:27	-->	doppel (~chatzilla@ip70-189-197-158.lv.lv.cox.net) has joined ##c++
2016-09-21 09:08:35	<--	cd80 (~bf3@179.43.151.98) has quit (Quit: leaving)
2016-09-21 09:08:52	<--	Guest37884 (~yaaic@unaffiliated/karyon) has quit (Client Quit)
2016-09-21 09:09:03	Levitator	Yeah, I think the best way is going to be to make a friend class which is dedicated to calling the private member.
2016-09-21 09:09:04	w3z	yes itll fail at the point of type instantiation if T doesnt have a static member value in the above
2016-09-21 09:09:25	w3z	and if T doesnt have a nested type type in the second
2016-09-21 09:09:40	Levitator	I'm trying to come up with a way to approximate C++ exceptions on a platform that lacks them, and I want to enforce the necessary traps statically.
2016-09-21 09:10:03	gp5st	w3z: ah. thanks :)
2016-09-21 09:10:04	Levitator	And it's going to be hideous and macro-heavy.
2016-09-21 09:10:08	w3z	{} template<class T> struct S{static const int value=T::value;}; S<int> s;
2016-09-21 09:10:09	geordi	<no output>
2016-09-21 09:10:10	<--	harha_ (harha_@y55.ip4.netikka.fi) has quit
2016-09-21 09:10:17	Veltas	Levitator: Sounds like it lol
2016-09-21 09:10:46	w3z	aargh wth
2016-09-21 09:10:58	doppel	surely you can come up with something better than c++ exceptions to approximate
2016-09-21 09:11:02	-->	cd80 (~bf3@gateway/vpn/privateinternetaccess/emul16) has joined ##c++
2016-09-21 09:11:08	-->	DonRichie (~DonRichie@ricl.de) has joined ##c++
2016-09-21 09:11:10	w3z	geordi: use --clang
2016-09-21 09:11:10	geordi	error: type 'int' cannot be used prior to '::' because it has no members
2016-09-21 09:11:26	doppel	hah.
2016-09-21 09:11:34	w3z	i wonder what gcc is doing there
2016-09-21 09:11:47	doppel	o_O so do i, actually.
2016-09-21 09:11:55	<--	francoisk (~francoisk@154.66.250.11) has quit (Quit: Leaving)
2016-09-21 09:11:56	w3z	its punting on the initialization of value (incorrectly)
2016-09-21 09:12:19	w3z	anyway, bbl
2016-09-21 09:12:31	doppel	see ya
2016-09-21 09:12:33	-->	johnc- (~johnc-@173-22-84-244.client.mchsi.com) has joined ##c++
2016-09-21 09:12:33	<--	johnc- (~johnc-@173-22-84-244.client.mchsi.com) has quit (Changing host)
2016-09-21 09:12:33	-->	johnc- (~johnc-@about/csharp/regular/johnc) has joined ##c++
2016-09-21 09:14:07	<--	V-ille (~ville@59ec7803.symbio.com) has quit (Ping timeout: 255 seconds)
2016-09-21 09:14:07		[09:14]
2016-09-21 09:16:26	<--	mackal (~mike@pool-96-237-144-12.bstnma.fios.verizon.net) has quit (Quit: BE VIGILANT.)
2016-09-21 09:16:27	-->	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has joined ##c++
2016-09-21 09:16:51	<--	DonRichie (~DonRichie@ricl.de) has quit (Ping timeout: 244 seconds)
2016-09-21 09:17:24	doppel	i wonder if c++ has any minimal limits specified (besides type ranges) that a conforming implementation is expected to handle, like c does
2016-09-21 09:17:33	<--	Levitator (~Meh@cpe-2606-A000-E182-FB00-F8FC-C295-9F4F-BE1A.dyn6.twc.com) has quit (Ping timeout: 250 seconds)
2016-09-21 09:17:45	-->	Zxpr1jk (~zxpr1jk@24.214.61.47) has joined ##c++
2016-09-21 09:17:57	TinoDidriksen	doppel, http://eel.is/c++draft/implimits
2016-09-21 09:18:17	doppel	oh.  thanks.
2016-09-21 09:19:25	m_ben	can I assume that std::size_t is *always* unsigned?
2016-09-21 09:19:53	doppel	yep.
2016-09-21 09:20:03	<--	mfc (~mfc@unaffiliated/mfc) has quit (Ping timeout: 240 seconds)
2016-09-21 09:20:12	doppel	you can't really have a negative size of anything.
2016-09-21 09:20:25	<--	pwcjr (~pwcjr@pool-74-96-89-148.washdc.fios.verizon.net) has quit (Ping timeout: 260 seconds)
2016-09-21 09:20:34	TinoDidriksen	Posix did try that with ssize_t, because they wanted to encode errors as negative numbers...
2016-09-21 09:21:14	-->	Guac (~Guac@194-29-23-90.static.cablecom.ch) has joined ##c++
2016-09-21 09:21:25	doppel	ah.
2016-09-21 09:21:25	-->	CuriousErnestBro (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has joined ##c++
2016-09-21 09:21:46	<--	skweek (~skweek@2607:fe50:0:810b:bcae:516b:24e:ed39) has quit (Ping timeout: 255 seconds)
2016-09-21 09:21:58	<--	pheenx (~pheenx@2a02:8071:b68a:1c00:225:22ff:fee7:7dc5) has quit (Ping timeout: 265 seconds)
2016-09-21 09:22:13	-->	NeXTSUN (~textual@2601:83:8100:42cf:68da:e8f9:3da0:43bf) has joined ##c++
2016-09-21 09:22:53	gp5st	doppel: this sounds like an existential question. What would a negative size be? Could I put a negatively sized item at the end of my struct and have it, and the previous item, share space with the next previous item, sort of like a union?
2016-09-21 09:23:21	-->	xnavor (~xnavor@78-70-4-240-no171.business.telia.com) has joined ##c++
2016-09-21 09:23:38	doppel	o_O why the fuck would you ever do such a thing?
2016-09-21 09:23:53	k_j	I am struggling to find an elegant solution for the following problem, where   one thread might be destroying a std::shared_ptr<T> in "void destroy() { t.reset(); }"   and   another thread might be running the following  "if (auto l = w.lock()) {w->op();}"     where w is a weak_ptr derived from the previous shared_ptr.  the aim is to synchronize the two calls t.reset() and w->op()  without using  "external" locks
2016-09-21 09:23:59	-->	TMM (~hp@fsf/member/pdpc.professional.tmm) has joined ##c++
2016-09-21 09:24:30	<--	Brklyn (~truthbk@38.122.226.210) has quit (Ping timeout: 260 seconds)
2016-09-21 09:24:43	-->	Brklyn (~truthbk@38.122.226.210) has joined ##c++
2016-09-21 09:25:08	<--	plee (~kurt@89.10.219.180) has quit (Read error: Connection reset by peer)
2016-09-21 09:25:22	slavanap	k_j, please write a minor sample. It is hard to understand here. Sample with std::thread launching another thread for example.
2016-09-21 09:25:23	k_j	i think it's not possible with what weak_ptr and shared_ptr offer
2016-09-21 09:25:41	<--	syem (~s@unaffiliated/syem) has quit (Quit: leaving)
2016-09-21 09:25:42	-->	plee (~kurt@89.10.219.180) has joined ##c++
2016-09-21 09:25:46	slavanap	Guys, how do you do this stuff in C++ https://ideone.com/YpADzw ?
2016-09-21 09:25:52	slavanap	*in C++11 ?
2016-09-21 09:26:53	slavanap	k_j, I've done lots of stuff with shared_ptr and weak_ptr recently and they were enough for me.
2016-09-21 09:27:24	gp5st	slavanap: do what? or more specifically what can't be done that you're doing? it's just a lookup table?
2016-09-21 09:27:26	k_j	slavanap, ok, but how does that help me?
2016-09-21 09:28:52	-->	AnarchyAo (~andrew@8.18.217.202) has joined ##c++
2016-09-21 09:28:57	slavanap	k_j, I suggesting you to write the code instead of situation you describing here. It easy to work with the code instead with words.
2016-09-21 09:29:09	<--	YungRaj (~YungRaj@nat-165-91-13-19.tamulink.tamu.edu) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-21 09:29:09		[09:29]
2016-09-21 09:29:37	m_ben	gp5st: I think he wants a constexpr version. maybe he'll tell us
2016-09-21 09:30:01	doppel	size_t is only defined by the c++ standard as being defined by the c standard, which defines it as an unsigned integer type.
2016-09-21 09:30:27	slavanap	gp5st, for example like this
2016-09-21 09:30:31	gp5st	m_ben: mmmm constexpr is fun
2016-09-21 09:31:00	gp5st	I'm learning C++ again for microcontrollers and using rom instead of ram is handy :)
2016-09-21 09:31:14	slavanap	{ cout << fnDblPower10(10, 5); } constexpr double fnDblPower10(double base, int exp, int64_t result = 1) { return exp < 1 ? result : fnDblPower10(base, exp / 2, (exp % 2) ? result*base : result); }
2016-09-21 09:31:15	geordi	100
2016-09-21 09:31:22	slavanap	whoops...
2016-09-21 09:31:40	-->	technologenesis (~Technolog@nat-128-62-56-186.public.utexas.edu) has joined ##c++
2016-09-21 09:31:55	slavanap	geordi, use --clang
2016-09-21 09:31:56	geordi	100
2016-09-21 09:32:28	slavanap	{ cout << fnDblPower10(10, 5); } constexpr double fnDblPower10(double base, int exp, int64_t result = 1) { return exp < 1 ? result : fnDblPower10(base*base, exp / 2, (exp % 2) ? result*base : result); }
2016-09-21 09:32:29	geordi	100000
2016-09-21 09:32:33	slavanap	yes, my bad
2016-09-21 09:32:38	-->	DonRichie (~DonRichie@ricl.de) has joined ##c++
2016-09-21 09:32:39	-->	Gluesticky (~nobody@unaffiliated/gluesticky) has joined ##c++
2016-09-21 09:32:54	slavanap	I wonder why C++ compiler is not good enough to precompile the lookup table
2016-09-21 09:33:15	gp5st	slavanap: i'm not sure what you mean, I precompile lookup tables all the time
2016-09-21 09:33:31	gp5st	(or use constexpr to make the compiler compile them ;) )
2016-09-21 09:33:32	<--	comprehension (~pscollins@104.132.1.71) has quit (Ping timeout: 244 seconds)
2016-09-21 09:33:35	slavanap	gp5st, declaring them explicitly?
2016-09-21 09:33:46	gp5st	slavanap: I don't know what you're asking
2016-09-21 09:33:55	<--	urban-animal (~Technolog@2600:380:7a48:e9e3:ec0a:b9fe:f8f5:c663) has quit (Ping timeout: 255 seconds)
2016-09-21 09:34:04	gp5st	you can declare a lookup table
2016-09-21 09:34:12	slavanap	well, the constexpr above is not transformed to lookup table: https://godbolt.org/g/7Y5OX6
2016-09-21 09:34:16	gp5st	unless you can't, but then, you're not telling us why you can't
2016-09-21 09:34:34	gp5st	slavanap: ah! now we're getting somehwere
2016-09-21 09:34:51	gp5st	slavanap: it's not because constexpr is only important if the inputs are also constant
2016-09-21 09:35:18	-->	pwcjr (~pwcjr@pool-74-96-89-148.washdc.fios.verizon.net) has joined ##c++
2016-09-21 09:35:22	<--	Limona (~Origin@BSN-142-59-105.dynamic.siol.net) has quit (Read error: Connection reset by peer)
2016-09-21 09:35:25	gp5st	and known at compile time
2016-09-21 09:35:26	slavanap	gp5st, yes. But if the input is not constant then automatic lookup table generation would be nice.
2016-09-21 09:35:35	<--	The_Coolest (~Arthur_Li@bzq-84-108-121-56.cablep.bezeqint.net) has quit (Ping timeout: 260 seconds)
2016-09-21 09:35:38	gp5st	how else is it suppose to compile it ahead of time if it doesn't know what to compile
2016-09-21 09:35:47	gp5st	slavanap: how big of a look up table?
2016-09-21 09:35:55	gp5st	what kind of lookup table?
2016-09-21 09:35:55	<--	CuriousErnestBro (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has quit (Quit: Leaving)
2016-09-21 09:36:02	gp5st	so many question we'd be left with!
2016-09-21 09:36:07	-->	V-ille (~ville@81-175-149-170.bb.dnainternet.fi) has joined ##c++
2016-09-21 09:36:31	slavanap	that's the point of course. But in such explicit lookup tables https://ideone.com/YpADzw  you can easily made a mistake that would be really difficult to find.
2016-09-21 09:36:47	slavanap	gp5st, ^
2016-09-21 09:36:52	<--	Guac (~Guac@194-29-23-90.static.cablecom.ch) has quit (Quit: Leaving)
2016-09-21 09:36:56	<--	unK_ (~drunK@dynamic-78-8-0-252.ssp.dialog.net.pl) has quit (Quit: KVIrc 4.3.1 Aria http://www.kvirc.net/)
2016-09-21 09:37:02	gp5st	sure, and if the compiler doesn't know what to do, it can't do it?
2016-09-21 09:37:47	-->	CuriousErnestBro (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has joined ##c++
2016-09-21 09:38:00	-->	syem (~s@unaffiliated/syem) has joined ##c++
2016-09-21 09:38:01	-->	Malkrith (uid186536@gateway/web/irccloud.com/x-nmszkumvqboopzbc) has joined ##c++
2016-09-21 09:38:40	slavanap	gp5st, okay. reformulating. How to define lookup table without explicit listing values from 1 to 100?
2016-09-21 09:39:14	slavanap	gp5st, for example, int temp[] = { <values from 1 to 100 goes here> } ?
2016-09-21 09:40:54	-->	The_Coolest (~Arthur_Li@bzq-84-108-121-56.cablep.bezeqint.net) has joined ##c++
2016-09-21 09:41:33	megaTherion	slavanap: maybe std::generate or something?
2016-09-21 09:42:16	<--	KNRO (~quassel@94.187.209.247) has quit (Remote host closed the connection)
2016-09-21 09:42:28	-->	Tectu (~Tectu@193.231.195.178.dynamic.wline.res.cust.swisscom.ch) has joined ##c++
2016-09-21 09:42:32	-->	Gathis (~TheBlack@unaffiliated/gathis) has joined ##c++
2016-09-21 09:42:35	-->	mfc (~mfc@unaffiliated/mfc) has joined ##c++
2016-09-21 09:43:01	matkatmusic	Howdy.   I'm working on an arduino project, and am dealing with the ShiftOut function.  It shifts out 1 byte of data at a time, and I am sending data to N number of shift Registers.  So, my question is, if i have 3 shift registers, and i want to target the 2nd register, how can I use bitwise operators to modify the correct bits in this 3-byte number i'm passing to the shift register
2016-09-21 09:43:06	<--	sh00p (~sh00p@84-216-39-31.customers.ownit.se) has quit (Ping timeout: 264 seconds)
2016-09-21 09:43:16	megaTherion	matkatmusic: wrong channel?
2016-09-21 09:43:17	<--	esas (~esas@unaffiliated/esas) has quit
2016-09-21 09:43:27	-->	Jesin (~Jesin@pool-108-28-56-201.washdc.fios.verizon.net) has joined ##c++
2016-09-21 09:43:30	matkatmusic	it's a C/C++ question.
2016-09-21 09:43:39	megaTherion	this channel isnt about C/C++
2016-09-21 09:43:43	matkatmusic	lol
2016-09-21 09:43:46	megaTherion	(whatever C/C++ is)
2016-09-21 09:43:57	matkatmusic	C++ has bitwise operators
2016-09-21 09:44:02	megaTherion	*shrugs*
2016-09-21 09:44:08	megaTherion	then go ##programming or #algorithm maybe
2016-09-21 09:44:29	megaTherion	or ##computers or ##electronic
2016-09-21 09:44:29		[09:44]
2016-09-21 09:44:41	matkatmusic	I have 3 bytes, and I want to modify the Nth byte using bitwise operators.
2016-09-21 09:44:48	<--	whytrytofly (~whytrytof@dslb-094-223-012-212.094.223.pools.vodafone-ip.de) has quit (Quit: Leaving)
2016-09-21 09:45:00	matkatmusic	I know how to do it for a single byte, but not when I have N number of bytes as a single chunk
2016-09-21 09:45:10	<--	MK (~MK@2602:252:d6e:a9b0:3535:49ab:e0b:2aa8) has quit (Ping timeout: 255 seconds)
2016-09-21 09:45:37	gp5st	always http://stackoverflow.com/questions/19016099/lookup-table-with-constexpr too
2016-09-21 09:45:52	<--	cd80 (~bf3@gateway/vpn/privateinternetaccess/emul16) has quit (Quit: leaving)
2016-09-21 09:46:07	-->	esas (~esas@unaffiliated/esas) has joined ##c++
2016-09-21 09:46:08	matkatmusic	This is what I found for doing a single byte: void changeNthBit(byte* number, int _bit, bool x) { *number ^= (-(int)x ^ *number) & (1 << _bit); }
2016-09-21 09:46:48	megaTherion	*sigh*
2016-09-21 09:46:49	<--	sanct (~sanct@212.35.67.11) has quit (Ping timeout: 244 seconds)
2016-09-21 09:47:02	urdh	matkatmusic: https://graphics.stanford.edu/~seander/bithacks.html
2016-09-21 09:47:24	urdh	or you know, don't bit-twiddle
2016-09-21 09:47:27	urdh	because why should you?
2016-09-21 09:48:06	Jesin	https://stackoverflow.com/questions/39621098/what-happens-if-an-enum-cannot-fit-into-an-unsigned-integral-type
2016-09-21 09:48:42	<--	k_sze[work] (daff8506@gateway/web/freenode/ip.218.255.133.6) has quit (Ping timeout: 240 seconds)
2016-09-21 09:49:09	matkatmusic	urdh: that's how arduino shift registers work when they're attached to 7-segment displays
2016-09-21 09:49:11	-->	gp5st_ (17194381@gateway/web/freenode/ip.23.25.67.129) has joined ##c++
2016-09-21 09:49:16	gp5st_	matkatmusic: ##C++-general or ##programming might be a better place. ##C++ is (zelously kept) a place to discuss questions about language constructs and the type system, not programming in general
2016-09-21 09:49:17	Jesin	matkatmusic: std::vector<bool> usually compiles to efficient bitwise operators, have you tried that?
2016-09-21 09:49:42	<--	silent_freak (672b7062@gateway/web/freenode/ip.103.43.112.98) has quit (Ping timeout: 240 seconds)
2016-09-21 09:49:57	gp5st_	Jesin: I think if he's talking about specific registers he might need more specificity than vector<bool> would allow?
2016-09-21 09:49:58	matkatmusic	Jesin: I don't think this arduino has the room to import std::vector and use it on the microcontroller.
2016-09-21 09:50:05	urdh	matkatmusic okay then, but at least use an unsigned type for _bit
2016-09-21 09:50:20	matkatmusic	you're right,  i'll do that.
2016-09-21 09:50:38	urdh	and if you can't use stdlib, what are you doing in ##C++?
2016-09-21 09:50:42	<--	gp5st (17194381@gateway/web/freenode/ip.23.25.67.129) has quit (Ping timeout: 240 seconds)
2016-09-21 09:50:50	Jesin	matkatmusic: here's another option: http://en.cppreference.com/w/cpp/language/bit_field
2016-09-21 09:52:03	<--	iik (~IIK@staticline-31-183-46-69.toya.net.pl) has quit (Ping timeout: 272 seconds)
2016-09-21 09:52:58	m_ben	slavanap: https://godbolt.org/g/LhEkcB constexpr version
2016-09-21 09:53:36	gp5st_	m_ben: he wants a table to be generated, though
2016-09-21 09:53:54	m_ben	oh
2016-09-21 09:55:16	slavanap	m_ben, yes, but still thank you.
2016-09-21 09:55:35	Jesin	Anyway, speaking of "questions about language constructs", if any of you have a better answer for https://stackoverflow.com/questions/39621098/what-happens-if-an-enum-cannot-fit-into-an-unsigned-integral-type I'm sure it would be appreciated.
2016-09-21 09:55:42	slavanap	gp5st_, and thank you too.
2016-09-21 09:55:52	slavanap	megaTherion, investigating std::generate.
2016-09-21 09:56:14	-->	sh00p (~sh00p@84.216.39.31) has joined ##c++
2016-09-21 09:56:42	w3z	that array generator is garbage compared to mine :)
2016-09-21 09:57:04	<--	mfc (~mfc@unaffiliated/mfc) has quit (Read error: Connection reset by peer)
2016-09-21 09:57:37	<--	KAHR-Alpha (~Alpha@AReims-652-1-187-168.w92-142.abo.wanadoo.fr) has quit (Remote host closed the connection)
2016-09-21 09:57:38	-->	urban-animal (~Technolog@nat-128-62-17-247.public.utexas.edu) has joined ##c++
2016-09-21 09:58:01	-->	MK (~MK@2602:252:d6e:a9b0:3c29:2096:5719:b76b) has joined ##c++
2016-09-21 09:58:26	-->	degva (~degva@190.232.18.40) has joined ##c++
2016-09-21 09:58:35	-->	cd80 (~bf3@gateway/vpn/privateinternetaccess/emul16) has joined ##c++
2016-09-21 09:58:38	-->	sanct (~sanct@212.35.67.11) has joined ##c++
2016-09-21 09:58:50	<--	NeXTSUN (~textual@2601:83:8100:42cf:68da:e8f9:3da0:43bf) has quit (Quit: My iMac has gone to sleep. ZZZzzz…)
2016-09-21 09:58:56	-->	KAHR-Alpha (~Alpha@AReims-652-1-187-168.w92-142.abo.wanadoo.fr) has joined ##c++
2016-09-21 09:59:06	w3z	http://melpon.org/wandbox/permlink/WG7hP0OYHKngYnEP
2016-09-21 09:59:13	<--	technologenesis (~Technolog@nat-128-62-56-186.public.utexas.edu) has quit (Ping timeout: 244 seconds)
2016-09-21 09:59:15	<--	orbiter (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has quit (Ping timeout: 276 seconds)
2016-09-21 10:00:15	-->	orbiter (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has joined ##c++
2016-09-21 10:00:15		[10:00]
2016-09-21 10:00:16	-->	skweek (~skweek@USF-Gold-Wifi-nat-56.laptops.usf.edu) has joined ##c++
2016-09-21 10:00:44	<--	RubberDog (~GodsDecei@p50835E77.dip0.t-ipconnect.de) has quit (Quit: A TLS packet with unexpected length was received.)
2016-09-21 10:01:12	-->	Haruno (~Haruno@197.226.166.96) has joined ##c++
2016-09-21 10:01:12	<--	Haruno (~Haruno@197.226.166.96) has quit (Changing host)
2016-09-21 10:01:12	-->	Haruno (~Haruno@unaffiliated/haruno) has joined ##c++
2016-09-21 10:02:00	<--	pwcjr (~pwcjr@pool-74-96-89-148.washdc.fios.verizon.net) has quit (Read error: Connection reset by peer)
2016-09-21 10:02:13	-->	nwkj86 (~nwkj86@144.66.6.51.dyn.plus.net) has joined ##c++
2016-09-21 10:02:21	<--	roia (~a.jensen@97.65.103.250) has quit (Ping timeout: 244 seconds)
2016-09-21 10:02:29	<--	gp5st_ (17194381@gateway/web/freenode/ip.23.25.67.129) has quit (Quit: Page closed)
2016-09-21 10:02:37	<--	urban-animal (~Technolog@nat-128-62-17-247.public.utexas.edu) has quit (Ping timeout: 250 seconds)
2016-09-21 10:02:49	-->	gp5st (17194381@gateway/web/freenode/ip.23.25.67.129) has joined ##c++
2016-09-21 10:03:07	<--	Anodl1 (~Anodl@p2003007A2F1FDE0050C09E6D9676E8AE.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2016-09-21 10:03:12	w3z	also btw, from earlier:
2016-09-21 10:03:13	w3z	<<s.value; template<class T> struct S{static const int value=T::value;}; S<int> s;
2016-09-21 10:03:13	geordi	error: 'value' is not a member of 'int'
2016-09-21 10:03:14	m_ben	w3z: what is the advantage of your approach as opposed to (I think it was) hs_'s make_array function?
2016-09-21 10:03:21	<--	scai (~scai@p4FF0FD94.dip0.t-ipconnect.de) has left ##c++ ("[IRSSI]")
2016-09-21 10:03:29	<--	Justinus (~Justinus@192.122.131.42) has quit (Ping timeout: 240 seconds)
2016-09-21 10:03:31	w3z	gcc is wrong, and doesnt evaluate at point of instantiation
2016-09-21 10:03:38	-->	Anodl1 (~Anodl@p2003007A2F1FDE0050C09E6D9676E8AE.dip0.t-ipconnect.de) has joined ##c++
2016-09-21 10:03:44	w3z	the implicit conversion
2016-09-21 10:04:22	w3z	notice F doesnt take the type or count
2016-09-21 10:04:22	<--	bx2 (~bx2@46.140.123.246) has quit (Remote host closed the connection)
2016-09-21 10:04:23	<--	Tectu (~Tectu@193.231.195.178.dynamic.wline.res.cust.swisscom.ch) has quit (Quit: Leaving)
2016-09-21 10:04:30	slavanap	w3z, where is documentation for std::make_index_sequence?
2016-09-21 10:04:47	w3z	in the standard, or cppreference ...
2016-09-21 10:04:59	m_ben	!stdref integer_sequence
2016-09-21 10:05:00	refbot	std::integer_sequence: http://en.cppreference.com/w/cpp/utility/integer_sequence
2016-09-21 10:05:02	slavanap	w3z, I just find std::integer_sequence, but fine.
2016-09-21 10:05:06	<--	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has quit (Ping timeout: 244 seconds)
2016-09-21 10:05:35	w3z	thats where its documented on cppreference, its a helper that makes an index_sequence
2016-09-21 10:05:35	m_ben	slavanap: make_index_sequence is an alias that is described on the same page as integer_sequence
2016-09-21 10:05:56	hs_	{ array<int,5> arr = foo{}; cout << arr; } struct foo { template <typename T> operator T() { return T{1,2,3,4,5}; } }; // m_ben
2016-09-21 10:05:58	geordi	{1, 2, 3, 4, 5}
2016-09-21 10:06:04	slavanap	m_ben, w3z, okay. That's a new stuff for me. Need time to learn. Thank you.
2016-09-21 10:06:22	hs_	m_ben, his conversion will detect what it is being converted into, so you don't need to specify a size parameter on the make_array -- you specify it on the variable type
2016-09-21 10:06:39	m_ben	w3z: but on the other hand, hs_'s make_array can be used with auto variables
2016-09-21 10:07:11	w3z	thats true, but ifthe array is a member youll be restating the params twice
2016-09-21 10:07:36	w3z	(or if you explicitly specify the type)
2016-09-21 10:07:49	<--	Anodl1 (~Anodl@p2003007A2F1FDE0050C09E6D9676E8AE.dip0.t-ipconnect.de) has quit (Ping timeout: 250 seconds)
2016-09-21 10:08:11	<--	illerucis (~illerucis@2620:10d:c091:200::3:3c4c) has quit (Remote host closed the connection)
2016-09-21 10:08:21	-->	Crazylemon64 (~Crazylemo@207.62.170.215) has joined ##c++
2016-09-21 10:08:43	-->	illerucis (~illerucis@2620:10d:c091:200::3:3c4c) has joined ##c++
2016-09-21 10:08:46	<--	Gathis (~TheBlack@unaffiliated/gathis) has quit (Quit: thunder nearby ~ disconnecting awhile)
2016-09-21 10:09:54	-->	Freze (~Freze@dhcp-18-189-90-153.dyn.mit.edu) has joined ##c++
2016-09-21 10:10:09	w3z	if you prefer to use hs_'s version fine, theyre both better than the garbage on stackoverflow
2016-09-21 10:10:38	hs_	shots fired
2016-09-21 10:11:01	w3z	calls em likes i sees em :)
2016-09-21 10:11:01	-->	Freze_ (~Freze@dhcp-18-189-123-6.dyn.mit.edu) has joined ##c++
2016-09-21 10:11:18	<--	MulleDK19 (~MulleDK19@unaffiliated/mulledk19) has quit
2016-09-21 10:12:02	<--	nux (nux@unaffiliated/nux) has quit (Quit: leaving)
2016-09-21 10:12:31	w3z	also fwiw, hs_'s version requires explicit construction of the array subobjects, that is you cant convert implicitly from U to T
2016-09-21 10:12:40	<--	skweek (~skweek@USF-Gold-Wifi-nat-56.laptops.usf.edu) has quit (Ping timeout: 265 seconds)
2016-09-21 10:12:54	<--	ibouvousaime (~ibouvousa@41.82.35.1) has quit (Ping timeout: 276 seconds)
2016-09-21 10:13:04	<--	illerucis (~illerucis@2620:10d:c091:200::3:3c4c) has quit (Ping timeout: 255 seconds)
2016-09-21 10:13:05	w3z	(at least not the way its written atm)
2016-09-21 10:13:14	-->	MulleDK19 (MulleDK19@unaffiliated/mulledk19) has joined ##c++
2016-09-21 10:13:24	-->	whytrytofly (~whytrytof@dslb-094-223-012-212.094.223.pools.vodafone-ip.de) has joined ##c++
2016-09-21 10:13:26	hs_	maybe specifying the return on the lambda
2016-09-21 10:13:32	hs_	I don't have it up though to see if that works
2016-09-21 10:14:00	w3z	yeah you would have to cast to T on the return of the function invocation
2016-09-21 10:14:16	w3z	its a trivial change
2016-09-21 10:14:16	-->	gagbo (~gagbo@unaffiliated/gagbo) has joined ##c++
2016-09-21 10:14:23	<--	Freze (~Freze@dhcp-18-189-90-153.dyn.mit.edu) has quit (Ping timeout: 244 seconds)
2016-09-21 10:14:52	<--	mnsewn (~mnsewn@172.82.128.167) has quit (Quit: Lost terminal)
2016-09-21 10:15:12	w3z	this bizdev doucee was supposed to call me, i slotted an hour window for his call at his request ... blah
2016-09-21 10:15:19	w3z	douche
2016-09-21 10:15:19		[10:15]
2016-09-21 10:15:52	-->	Anodl1 (~Anodl@p2003007A2F1FDE0050C09E6D9676E8AE.dip0.t-ipconnect.de) has joined ##c++
2016-09-21 10:16:29	kalven	!stdcpp douche
2016-09-21 10:16:29	nolyc	Standard C++ has no notion of `douche', so you must be talking about some specific OS- or library API (or tool), which is beyond the scope of this channel (which focuses on standard C++).
2016-09-21 10:16:39	w3z	(specifying the return on the lambda would also work, but makes the user work harder)
2016-09-21 10:16:58	-->	ted_ (~tehhhd@78-68-207-219-no225.tbcn.telia.com) has joined ##c++
2016-09-21 10:16:59	slavanap	w3z, why you need this `struct S{int i_; S(int i) : i_{i}{}};` in your code at http://melpon.org/wandbox/permlink/WG7hP0OYHKngYnEP ?
2016-09-21 10:17:18	w3z	...because its part of the test ....
2016-09-21 10:18:14	<--	ted_ (~tehhhd@78-68-207-219-no225.tbcn.telia.com) has quit (Read error: Connection reset by peer)
2016-09-21 10:18:37	slavanap	w3z, well your test will not work for `array<double,100> test = F([x=0]() mutable {return std::pow(10., x++);});` because of this magic in operator<<
2016-09-21 10:18:39	<--	merijn (~merijn@a212-238-239-156.adsl.xs4all.nl) has quit (Ping timeout: 272 seconds)
2016-09-21 10:18:46	slavanap	or lack of magic
2016-09-21 10:19:39	w3z	...it wont work because pow10 isnt constexpr
2016-09-21 10:19:52	w3z	has nothing to do with <<
2016-09-21 10:20:15	-->	kasper^ (~safaf@82.137.15.15) has joined ##c++
2016-09-21 10:20:18	slavanap	w3z, https://ideone.com/B8kAJ3
2016-09-21 10:20:19	<--	phinxy (~tehhhd@unaffiliated/phinxy) has quit (Ping timeout: 264 seconds)
2016-09-21 10:20:53	-->	dynastic (~dynastic@astound-66-234-205-111.ca.astound.net) has joined ##c++
2016-09-21 10:21:04	<--	GenteelBen (~GenteelBe@cpc70133-lutn12-2-0-cust324.9-3.cable.virginm.net) has quit
2016-09-21 10:21:05	w3z	well your array isnt constexpr
2016-09-21 10:21:22	slavanap	w3z, I'm sure it won't work in MSVS2015 as usual, because std::pow can't be used in constexpr there.
2016-09-21 10:21:58	dynastic	hi! i'm reading a very basic example of XOR encryption, but i've run into a problem. all the XOR encryption tutorials and examples i've ever seen only show you how to encrypt strings, and not files. how does XOR encryption work on files?
2016-09-21 10:22:07	<--	kasper_ (~safaf@82.137.13.15) has quit (Ping timeout: 250 seconds)
2016-09-21 10:22:34	slavanap	{ cout << test(2*2); } constexpr double test(double p) { return pow(10., p); }
2016-09-21 10:22:34	geordi	10000
2016-09-21 10:22:38	slavanap	w3z, ^
2016-09-21 10:23:23	slavanap	dynastic, you can read a file into std::string, aren't you?
2016-09-21 10:23:39	<--	step1step2 (~step1step@p57A455B6.dip0.t-ipconnect.de) has quit (Ping timeout: 244 seconds)
2016-09-21 10:23:42	m_ben	{ constexpr auto i = test(2); cout << i; } constexpr double test(int p) { return pow(10,p); }
2016-09-21 10:23:42	-->	RebelCoder (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has joined ##c++
2016-09-21 10:23:43	geordi	100
2016-09-21 10:24:06	dynastic	slavanap, i've never tried to do that but i'm sure it's possible
2016-09-21 10:24:13	w3z	geordi: --clang {} constexpr double test(double p) { return pow(10., p); } constexpr double d=test(4);
2016-09-21 10:24:13	geordi	error: constexpr function never produces a constant expression
2016-09-21 10:24:19	<--	Anodl1 (~Anodl@p2003007A2F1FDE0050C09E6D9676E8AE.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2016-09-21 10:24:26	slavanap	that clang
2016-09-21 10:24:42	-->	mackal (~mike@pool-96-237-144-12.bstnma.fios.verizon.net) has joined ##c++
2016-09-21 10:25:31	w3z	what gave it away?
2016-09-21 10:25:42	slavanap	w3z, ?
2016-09-21 10:25:50	-->	zagabar (~zagabar@unaffiliated/zagabar) has joined ##c++
2016-09-21 10:25:51	<--	Enhex (~Enhex@82.252.138.77.rev.sfr.net) has quit (Quit: Leaving)
2016-09-21 10:26:40	<--	xnavor (~xnavor@78-70-4-240-no171.business.telia.com) has quit (Quit: This computer has gone to sleep)
2016-09-21 10:26:59	-->	xnavor (~xnavor@78-70-4-240-no171.business.telia.com) has joined ##c++
2016-09-21 10:27:24	w3z	anyway i dont know if you should trust gcc wrt constexpr, pow10 is not constexpr according to the standard
2016-09-21 10:27:29	<--	f3r70rr35f (~fernando@186.36.52.35) has quit (Quit: leaving)
2016-09-21 10:27:41	w3z	it would be nice to have constexpr math functions
2016-09-21 10:27:45	slavanap	geordi: --clang constexpr double fnDblPower(double base, int exp, int64_t result = 1) { return exp < 1 ? result : fnDblPower(base*base, exp / 2, (exp % 2) ? result*base : result); } double v = fnDblPower(10., 4);
2016-09-21 10:27:46	geordi	Success
2016-09-21 10:28:03	slavanap	w3z, here's one
2016-09-21 10:29:43	slavanap	w3z, no mutable constexpr lambdas here https://ideone.com/rCDyXs
2016-09-21 10:29:58	w3z	...youre very hard to talk to ... thats not a *STANDARD LIBRARY* math function (either is pow10 btw)
2016-09-21 10:30:28	-->	ibouvousaime (~ibouvousa@41.82.35.1) has joined ##c++
2016-09-21 10:30:28		[10:30]
2016-09-21 10:30:34	w3z	nobody said you couldnt implement your own constexpr functions that do math ...
2016-09-21 10:30:38	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-21 10:30:57	w3z	im chalking it up to language barrier for now
2016-09-21 10:32:32	<--	kaffeetrauma (~Thunderbi@85-22-37-153.ip.dokom21.de) has quit (Quit: kaffeetrauma)
2016-09-21 10:32:42	w3z	i wonder how pow10 got into std, i dont see it in the standard
2016-09-21 10:32:57	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-21 10:33:27	-->	mfc (~mfc@unaffiliated/mfc) has joined ##c++
2016-09-21 10:34:00	slavanap	w3z, okay if you say so. I'm just learning. Still. After 5 years of C++ usage in projects.
2016-09-21 10:34:11	slavanap	w3z, C++11 was a pain to start to use.
2016-09-21 10:34:45	-->	gelignite (~gelignite@x4db64318.dyn.telefonica.de) has joined ##c++
2016-09-21 10:35:05	<--	Haruno (~Haruno@unaffiliated/haruno) has quit (Ping timeout: 260 seconds)
2016-09-21 10:35:19	<--	vitimiti (~vitimiti@unaffiliated/vitimiti) has quit (Quit: Meows out)
2016-09-21 10:35:32	-->	jefcolbi (~Thunderbi@188.166.147.168) has joined ##c++
2016-09-21 10:37:44	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-21 10:39:13	-->	step1step2 (~step1step@p57A442E9.dip0.t-ipconnect.de) has joined ##c++
2016-09-21 10:39:13	-->	roia (~a.jensen@97.65.103.250) has joined ##c++
2016-09-21 10:39:31	<--	a3pq51 (~a3pq51@202-22-179-94.pool.ukrtel.net) has quit (Remote host closed the connection)
2016-09-21 10:40:11	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-21 10:40:18	-->	Birchy (~Birchy@178-164-108.52.3p.ntebredband.no) has joined ##c++
2016-09-21 10:40:45	<--	pullphinger (~pullphing@12.40.23.68) has quit (Ping timeout: 265 seconds)
2016-09-21 10:42:03	<--	roia (~a.jensen@97.65.103.250) has quit (Client Quit)
2016-09-21 10:42:43	-->	fprophet (~fprophet@209.99.209.7) has joined ##c++
2016-09-21 10:43:03	-->	vitimiti (~vitimiti@unaffiliated/vitimiti) has joined ##c++
2016-09-21 10:43:22	<--	jamesaxl (~jamesaxl@176.98.129.195) has quit (Remote host closed the connection)
2016-09-21 10:43:50	-->	illerucis (~illerucis@2620:10d:c091:200::8:bcc2) has joined ##c++
2016-09-21 10:44:32	<--	sh00p (~sh00p@84.216.39.31) has quit (Ping timeout: 265 seconds)
2016-09-21 10:44:44	<--	supay- (nebuzen@gateway/shell/fnordserver.eu/x-fxdanceoqnvwqwuy) has quit (Remote host closed the connection)
2016-09-21 10:44:44	<--	WizJin (WizJin@gateway/shell/fnordserver.eu/x-itjoszctqzclvxwz) has quit (Remote host closed the connection)
2016-09-21 10:44:44	<--	flopsec (flopsec@gateway/shell/fnordserver.eu/x-azrbedudejnfbfdy) has quit (Remote host closed the connection)
2016-09-21 10:44:45	<--	moony22 (moony22@wikipedia/Moony22) has quit (Remote host closed the connection)
2016-09-21 10:45:12	<--	tocka (~tocka@78-56-107-170.static.zebra.lt) has quit
2016-09-21 10:45:56	w3z	fwiw, it would look something like: constexpr array<double,100> test = F([x=0.]()constexpr mutable {return fnDblPower(10., x++);}); //but your function overflows, and im not going to debug it
2016-09-21 10:45:56		[10:45]
2016-09-21 10:46:15	-->	jaafar (~quassel@67.135.43.183) has joined ##c++
2016-09-21 10:46:52	-->	nilg (~user@95-42-153-159.ip.btc-net.bg) has joined ##c++
2016-09-21 10:47:23	<--	Nilesh_ (uid116340@gateway/web/irccloud.com/x-biufiepblignarjk) has quit (Quit: Connection closed for inactivity)
2016-09-21 10:47:51	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-21 10:49:17	<--	de-facto (~de-facto@unaffiliated/de-facto) has quit (Quit: Leaving)
2016-09-21 10:50:59	-->	lakin (~lakin@d108-173-185-33.abhsia.telus.net) has joined ##c++
2016-09-21 10:51:02	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-21 10:51:20	<--	degva (~degva@190.232.18.40) has quit (Quit: Leaving)
2016-09-21 10:51:24	<--	Munnu (~timo@91-158-145-247.elisa-laajakaista.fi) has quit (Quit: Follow the white rabbit. Compile the desert of the real. 3301.)
2016-09-21 10:51:30	-->	CuriousErnestBri (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has joined ##c++
2016-09-21 10:52:05	<--	Freze_ (~Freze@dhcp-18-189-123-6.dyn.mit.edu) has quit (Quit: Leaving)
2016-09-21 10:53:37	<--	Crazylemon64 (~Crazylemo@207.62.170.215) has quit (Read error: Connection reset by peer)
2016-09-21 10:54:14	<--	CuriousErnestBro (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has quit (Ping timeout: 265 seconds)
2016-09-21 10:56:19	-->	morgoth (~morgoth@5.170.120.62) has joined ##c++
2016-09-21 10:56:32	-->	sh00p (~sh00p@84.216.39.31) has joined ##c++
2016-09-21 10:58:33	<--	ambro718 (~ambro@unaffiliated/ambro718) has quit (Ping timeout: 265 seconds)
2016-09-21 10:58:40	<--	Minnozz (~minnozz@sanna.minnozz.com) has quit (Read error: error:1408F10B:SSL routines:SSL3_GET_RECORD:wrong version number)
2016-09-21 10:58:47	slavanap	w3z, could you please take a look: https://ideone.com/xJKlWz
2016-09-21 10:58:57	<--	jefcolbi (~Thunderbi@188.166.147.168) has quit (Ping timeout: 250 seconds)
2016-09-21 10:58:57	slavanap	w3z, am I going in right direction?
2016-09-21 10:59:16	-->	Minnozz (~minnozz@sanna.minnozz.com) has joined ##c++
2016-09-21 11:03:17	-->	Tempesta_ (~Tempesta@121.131.185.96) has joined ##c++
2016-09-21 11:03:17		[11:03]
2016-09-21 11:03:21	<--	King_DuckZ (~duckz@cpc97408-hitc6-2-0-cust114.9-2.cable.virginm.net) has left ##c++
2016-09-21 11:05:32	<--	wds (~wds@cpe-72-227-132-127.nyc.res.rr.com) has quit (Ping timeout: 244 seconds)
2016-09-21 11:05:52	<--	Tempesta (~Tempesta@unaffiliated/tempesta) has quit (Ping timeout: 244 seconds)
2016-09-21 11:06:09	<--	jaafar (~quassel@67.135.43.183) has quit (Ping timeout: 272 seconds)
2016-09-21 11:06:10	<--	nilg (~user@95-42-153-159.ip.btc-net.bg) has quit (Remote host closed the connection)
2016-09-21 11:06:23	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-21 11:06:39	m_ben	slavanap: stop calling the function fnDblPower
2016-09-21 11:07:17	<--	morgoth (~morgoth@5.170.120.62) has quit (Quit: Leaving)
2016-09-21 11:07:23	slavanap	m_ben, okay. It came from some C++ library I'm trying to port from C to C++.
2016-09-21 11:07:31	<--	josh_ (~josh@168.103.191.142) has quit (Ping timeout: 255 seconds)
2016-09-21 11:07:34	-->	phinxy (~tehhhd@78.68.207.219) has joined ##c++
2016-09-21 11:07:43	<--	phinxy (~tehhhd@78.68.207.219) has quit (Changing host)
2016-09-21 11:07:43	-->	phinxy (~tehhhd@unaffiliated/phinxy) has joined ##c++
2016-09-21 11:08:05	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-21 11:08:31	slavanap	* C library
2016-09-21 11:08:36	m_ben	in c++ you can overload functions, so no need to call them dbl, int, cplx, flt...
2016-09-21 11:08:50	m_ben	!c
2016-09-21 11:08:51	-->	The_CooIest (~Arthur_Li@bzq-84-108-121-56.cablep.bezeqint.net) has joined ##c++
2016-09-21 11:08:51	nolyc	c is an old byte processing language without templates, exceptions, namespaces, constructors/destructors (and therefore RAII), virtual function polymorphism, references, operator/function overloading, reusable standard generic containers, or explicitly named casts.
2016-09-21 11:08:58	-->	navidr (uid112413@gateway/web/irccloud.com/x-cpzzimbtwwpqurqn) has joined ##c++
2016-09-21 11:10:03	-->	Juzzika (~Juzzika@104.156.228.110) has joined ##c++
2016-09-21 11:10:18	<--	Juzzika (~Juzzika@104.156.228.110) has quit (Client Quit)
2016-09-21 11:10:41	doppel	and now it lacks type deduction and lambda objects.
2016-09-21 11:10:50	doppel	and whatever else c++11 has.
2016-09-21 11:10:56	-->	RoKenn (~RoKenn@2001:a61:2264:901:a1bc:3faa:e7b0:a23a) has joined ##c++
2016-09-21 11:10:57	-->	anton02 (~quassel@lal1651212.lnk.telstra.net) has joined ##c++
2016-09-21 11:11:11	velco	you're so cool.
2016-09-21 11:11:25	doppel	thanks :-)
2016-09-21 11:11:35	-->	flopsec (flopsec@gateway/shell/fnordserver.eu/x-iyoicmyjczvkauhc) has joined ##c++
2016-09-21 11:12:03	<--	rendar (~rendar@host170-104-dynamic.61-82-r.retail.telecomitalia.it) has quit (Ping timeout: 240 seconds)
2016-09-21 11:13:34	-->	blueness (~blueness@gentoo/developer/blueness) has joined ##c++
2016-09-21 11:14:01	<--	perrier-jouet (~perrier-j@70.48.137.39) has quit (Quit: WeeChat 1.5)
2016-09-21 11:14:34	<--	Adva (~Hyrule@2a02:810a:12c0:5068:b87d:a7b7:14f8:bd6a) has quit (Read error: Connection reset by peer)
2016-09-21 11:15:31	m_ben	slavanap: why do you pass it the generate function? just pass a lambda directly
2016-09-21 11:15:42	-->	Gathis (~TheBlack@unaffiliated/gathis) has joined ##c++
2016-09-21 11:15:48	m_ben	*generator
2016-09-21 11:16:11	<--	gelignite (~gelignite@x4db64318.dyn.telefonica.de) has quit (Quit: http://bit.ly/1kso8Ta)
2016-09-21 11:16:18	slavanap	m_ben, where in C++11 standard it is stated that lambdas can be constexpr?
2016-09-21 11:16:38	<--	Galik (~galik@unaffiliated/galik) has quit (Quit: Leaving)
2016-09-21 11:16:56	slavanap	that's my reason here.
2016-09-21 11:16:59	-->	feliwir (Elite16673@gateway/shell/elitebnc/x-muypuooyfoiaotys) has joined ##c++
2016-09-21 11:17:09	kstar	So are begin and end technically keywords in C++1x?
2016-09-21 11:17:14	slavanap	m_ben, thanks for a review.
2016-09-21 11:17:21	slavanap	kstar, no.
2016-09-21 11:17:39	m_ben	slavanap: there are workarounds to get constexpr lambdas in c++11
2016-09-21 11:18:00	m_ben	slavanap: http://pfultz2.com/blog/2014/09/02/static-lambda/
2016-09-21 11:18:05	kstar	Hmm, then how does the range-based for work?
2016-09-21 11:18:14	-->	Suchorski (regex@unaffiliated/suchorski) has joined ##c++
2016-09-21 11:18:49	<--	The_CooIest (~Arthur_Li@bzq-84-108-121-56.cablep.bezeqint.net) has quit (Quit: FOLD For The Cause!!!)
2016-09-21 11:18:49		[11:18]
2016-09-21 11:18:52	<--	dyens (~dyens@dyens.info-lan.me) has quit (Remote host closed the connection)
2016-09-21 11:19:04	m_ben	but anyway, that's a different topic
2016-09-21 11:19:54	<--	sigtrm (quassel@quassel.woboq.de) has quit (Ping timeout: 265 seconds)
2016-09-21 11:20:06	slavanap	m_ben, thank you, but this is too much `magic` for me for today. Will gladly use []() constexpr { ... } when this change is accepted in C++14.
2016-09-21 11:20:27	m_ben	you mean c++17
2016-09-21 11:20:28	slavanap	or C++17.
2016-09-21 11:20:39	slavanap	yeah I'm bad at counting
2016-09-21 11:21:26	-->	josh_ (~josh@168.103.191.142) has joined ##c++
2016-09-21 11:22:13	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Quit: fogbank)
2016-09-21 11:22:32	w3z	youre missing {} on line 7
2016-09-21 11:23:04	w3z	return { {f(I) ...} };
2016-09-21 11:24:10	<--	f10_ (~flo@2001:470:52af:1:dd05:b755:629c:9755) has quit (Ping timeout: 255 seconds)
2016-09-21 11:24:40	-->	rendar (~rendar@host90-90-dynamic.181-80-r.retail.telecomitalia.it) has joined ##c++
2016-09-21 11:24:46	<--	corebob (~corebob@cm-84.213.41.214.getinternet.no) has quit (Quit: WeeChat 1.5)
2016-09-21 11:25:04	<--	f10__ (~flo@2001:470:52af:1:59b:9657:6ac8:c864) has quit (Ping timeout: 255 seconds)
2016-09-21 11:25:27	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-21 11:25:35	kstar	I have a class Foo that must only provide const access to the elements of a std::vector<bar *> that it contains. I want to be able to use range-based for as for(const bar * : fooObject ) { ; }. But I don't wish to implement Foo::begin() and Foo::end(), and want to implement Foo::cbegin() and Foo::cend() instead.
2016-09-21 11:25:40	kstar	How do I accomplish that?
2016-09-21 11:26:23	<--	gagbo (~gagbo@unaffiliated/gagbo) has quit (Quit: Konversation terminated!)
2016-09-21 11:26:26	flebron	Hi folks. Say I have a std::array<T, N>, where T has no default ctor, but has a copy ctor. I want a T[N]. Is there a way for me to say something like T x[N] = {arr[0]...}? (The N here is a template argument.)
2016-09-21 11:26:53	ville	kstar: just make your begin/end the const overloads?
2016-09-21 11:27:07	slavanap	w3z, why you need that extra {} ? ideone.com compiles it somehow...
2016-09-21 11:27:13	slavanap	and MSVS2015 as well
2016-09-21 11:27:37	-->	Vincent7 (~NoIdent@dslb-088-077-121-042.088.077.pools.vodafone-ip.de) has joined ##c++
2016-09-21 11:28:17	<--	Suchorski (regex@unaffiliated/suchorski) has quit
2016-09-21 11:28:21	kstar	ville: Oh, okay. You mean for the free functions const IteratorType Foo::begin( const Foo & )?
2016-09-21 11:28:54	slavanap	kstar: const IteratorType Foo::begin( const Foo & ) const  <--- there's const too.
2016-09-21 11:29:04	ville	kstar: sure
2016-09-21 11:29:08	ville	slavanap: non-member
2016-09-21 11:29:13	slavanap	oh
2016-09-21 11:29:24	<--	avtolstoy (~avtolstoy@gateway/vpn/privateinternetaccess/avtolstoy) has quit (Ping timeout: 250 seconds)
2016-09-21 11:29:58	<--	xCrypto (~xCrypto@drmons0544w-142177154202.dhcp-dynamic.FibreOp.ns.bellaliant.net) has quit (Read error: No route to host)
2016-09-21 11:30:25	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 11:30:26	-->	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has joined ##c++
2016-09-21 11:30:48	-->	xCrypto (~xCrypto@drmons0544w-142177154202.dhcp-dynamic.FibreOp.ns.bellaliant.net) has joined ##c++
2016-09-21 11:30:50	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-21 11:31:13	<--	CuriousErnestBri (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has quit (Remote host closed the connection)
2016-09-21 11:31:45	<--	zagabar (~zagabar@unaffiliated/zagabar) has quit (Quit: WeeChat 1.5)
2016-09-21 11:31:53	-->	CuriousErnestBro (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has joined ##c++
2016-09-21 11:32:03	<--	DonRichie (~DonRichie@ricl.de) has quit (Quit: bye)
2016-09-21 11:32:47	w3z	flebron: its not clear from your description if youre asking about initialization or assignment
2016-09-21 11:32:53	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-21 11:33:17	w3z	slavanap: because clang says so :)
2016-09-21 11:33:31	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 11:33:43	<--	xCrypto (~xCrypto@drmons0544w-142177154202.dhcp-dynamic.FibreOp.ns.bellaliant.net) has quit (Client Quit)
2016-09-21 11:34:01	slavanap	geordi: --clang {} std::array<int, 5> f() { return { 1,2,3,4,5 }; }
2016-09-21 11:34:01		[11:34]
2016-09-21 11:34:02	geordi	warning: suggest braces around initialization of subobject (fix known)
2016-09-21 11:34:07	flebron	w3z: Initialization.
2016-09-21 11:34:09	-->	bx2 (~bx2@46.140.123.246) has joined ##c++
2016-09-21 11:34:12	slavanap	w3z, right as always.
2016-09-21 11:34:21	flebron	(T x[N] = {...} is initialization :p)
2016-09-21 11:35:10	-->	skweek (~skweek@68-200-146-225.res.bhn.net) has joined ##c++
2016-09-21 11:35:40	m_ben	it would be nice if geordi could fix it automatically and show the suggested version
2016-09-21 11:35:41	-->	xCrypto (~xCrypto@drmons0544w-142177154202.dhcp-dynamic.FibreOp.ns.bellaliant.net) has joined ##c++
2016-09-21 11:35:45	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-21 11:35:45	<--	martiert_ (~martin@78.37-191-164.fiber.lynet.no) has quit (Ping timeout: 260 seconds)
2016-09-21 11:35:49	et	geordi: fix
2016-09-21 11:35:49	geordi	error: Unexpected end of request. Expected '}' or balanced code.
2016-09-21 11:36:11	et	geordi: show
2016-09-21 11:36:11	geordi	--clang {} std::array<int, 5> f() { return { 1,2,3,4,5 }; }
2016-09-21 11:36:21	<--	JoshS (~jshjsh@172.56.38.82) has quit (Ping timeout: 244 seconds)
2016-09-21 11:36:34	-->	DonRichie (~DonRichie@ricl.de) has joined ##c++
2016-09-21 11:37:07	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 11:37:24	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-21 11:37:53	<--	a3Dman (~3Dman@unaffiliated/a3dman) has quit (Ping timeout: 240 seconds)
2016-09-21 11:38:33	<--	bx2 (~bx2@46.140.123.246) has quit (Ping timeout: 240 seconds)
2016-09-21 11:38:44	-->	f10__ (~flo@2001:470:52af:1:59b:9657:6ac8:c864) has joined ##c++
2016-09-21 11:38:51	-->	f10_ (~flo@2001:470:52af:1:dd05:b755:629c:9755) has joined ##c++
2016-09-21 11:38:52	slavanap	Is there easy way to detect int64_t * int64_t overflow?
2016-09-21 11:38:55	w3z	flebron now that its clear you want initialization, your question still doesnt make much sense - yes, you could initialize a builtin array with elements of a std::array
2016-09-21 11:39:11	flebron	w3z: How?
2016-09-21 11:39:29	flebron	Note, again, that N is a template parameter. I do not know what it is.
2016-09-21 11:40:37	<--	sanct (~sanct@212.35.67.11) has quit (Ping timeout: 265 seconds)
2016-09-21 11:41:12	w3z	is x an automatic variable inside the template?
2016-09-21 11:41:30	<--	iterati (~vangelis@79.103.112.83.dsl.dyn.forthnet.gr) has quit (Read error: Connection reset by peer)
2016-09-21 11:41:36	w3z	and i assume youre asking if you can get a magic expansion, not do it by hand
2016-09-21 11:41:36	<--	doppel (~chatzilla@ip70-189-197-158.lv.lv.cox.net) has quit (Quit: ChatZilla 0.9.92 [Firefox 48.0.2/20160823121617])
2016-09-21 11:41:53	flebron	Yes. Because I do not know what N is. It is not possible to do it by hand.
2016-09-21 11:42:27	-->	JoshS (~jshjsh@172.56.38.82) has joined ##c++
2016-09-21 11:43:01	<--	RebelCoder (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has quit (Ping timeout: 265 seconds)
2016-09-21 11:43:31	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 255 seconds)
2016-09-21 11:43:41	-->	bx2 (~bx2@46.140.123.246) has joined ##c++
2016-09-21 11:43:42	<--	swnc (~swnc@port-92-204-84-51.dynamic.qsc.de) has quit (Remote host closed the connection)
2016-09-21 11:44:28	<--	sh00p (~sh00p@84.216.39.31) has quit (Ping timeout: 265 seconds)
2016-09-21 11:45:14	<--	tadaa (~tadaaa@nat-wh-wz4-12.rz.uni-karlsruhe.de) has quit (Read error: Connection reset by peer)
2016-09-21 11:45:22	<--	biglama (~Day_dream@ram31-1-82-234-77-18.fbx.proxad.net) has quit (Remote host closed the connection)
2016-09-21 11:45:52	<--	flavi0 (~anon@unaffiliated/flavi0) has quit (Quit: leaving)
2016-09-21 11:46:44	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 11:46:55	<--	Lowl3v3l (~Lowl3v3l@ipservice-092-208-080-178.092.208.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2016-09-21 11:48:17	-->	a3Dman (~3Dman@unaffiliated/a3dman) has joined ##c++
2016-09-21 11:48:25	<--	bx2 (~bx2@46.140.123.246) has quit (Ping timeout: 265 seconds)
2016-09-21 11:49:07	w3z	something like:
2016-09-21 11:49:07		[11:49]
2016-09-21 11:49:08	w3z	struct S{S()=delete;}; template<size_t...N> void g(const array<S,sizeof...(N)>& A,index_sequence<N...> indx){S x[sizeof...(N)] ={{A[N]...}}; for(auto i:x);} template<size_t N> void f(const array<S,N>& A){g(A,make_index_sequence<N>{});}
2016-09-21 11:49:15	w3z	{} struct S{S()=delete;}; template<size_t...N> void g(const array<S,sizeof...(N)>& A,index_sequence<N...> indx){S x[sizeof...(N)] ={{A[N]...}}; for(auto i:x);} template<size_t N> void f(const array<S,N>& A){g(A,make_index_sequence<N>{});}
2016-09-21 11:49:16	geordi	<no output>
2016-09-21 11:49:31	<--	irrenhaus3 (~xenon@HSI-KBW-046-005-253-105.hsi8.kabel-badenwuerttemberg.de) has quit (Quit: Lost terminal)
2016-09-21 11:49:54	<--	Groscheri (~Dyonisos@unaffiliated/dyonisos) has quit (Quit: Quis custodiet ipsos custodes ?)
2016-09-21 11:50:04	w3z	its not very useful, x lives all the way down in g
2016-09-21 11:50:48	w3z	but you can adapt the above mechanism as you see fit
2016-09-21 11:51:32	-->	pullphinger (~pullphing@c-73-44-252-158.hsd1.il.comcast.net) has joined ##c++
2016-09-21 11:51:42	w3z	geordi: use --clang
2016-09-21 11:51:42	geordi	<no output>
2016-09-21 11:52:00	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-21 11:52:10	<--	Gathis (~TheBlack@unaffiliated/gathis) has quit (Remote host closed the connection)
2016-09-21 11:54:01	V-ille	perhaps we could cheat with UB
2016-09-21 11:54:42	<--	gp5st (17194381@gateway/web/freenode/ip.23.25.67.129) has quit (Ping timeout: 240 seconds)
2016-09-21 11:55:16	-->	RebelCoder (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has joined ##c++
2016-09-21 11:56:11	V-ille	or perhaps even without UB
2016-09-21 11:56:30	-->	sh00p (~sh00p@84-216-39-31.customers.ownit.se) has joined ##c++
2016-09-21 11:56:32	<--	syem (~s@unaffiliated/syem) has quit (Quit: leaving)
2016-09-21 11:56:43	<--	snover (~Adium@unaffiliated/snover) has quit (Read error: Connection reset by peer)
2016-09-21 11:57:04	-->	snover (~Adium@unaffiliated/snover) has joined ##c++
2016-09-21 11:57:10	<--	pullphinger (~pullphing@c-73-44-252-158.hsd1.il.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-21 11:57:29	<--	NightQuest (NQ@c-71-236-158-254.hsd1.or.comcast.net) has quit (Ping timeout: 248 seconds)
2016-09-21 11:57:36	-->	NightQuest (NQ@c-71-236-158-254.hsd1.or.comcast.net) has joined ##c++
2016-09-21 11:57:50	<--	Green (uid722@gateway/web/irccloud.com/x-cgwhradnhicufkvn) has quit (Read error: Connection reset by peer)
2016-09-21 11:57:51	V-ille	oh well, the standard doesn't say that array is a standard-layout type
2016-09-21 11:58:06	<--	AkaiSora (~quassel@197.22.151.106) has quit (Ping timeout: 264 seconds)
2016-09-21 11:58:08	<--	dpower (uid103540@gateway/web/irccloud.com/x-uhwuqimeojeuomwr) has quit (Read error: Connection reset by peer)
2016-09-21 11:58:09	-->	Green (uid722@gateway/web/irccloud.com/x-dhnsbvhrnoiiixeq) has joined ##c++
2016-09-21 11:58:10	m_ben	why not a simple for-loop? since the array size is known at compile time, the compiler will very likely unroll the loop
2016-09-21 11:58:14	-->	pullphinger (~pullphing@c-73-44-252-158.hsd1.il.comcast.net) has joined ##c++
2016-09-21 11:58:28	-->	dpower (uid103540@gateway/web/irccloud.com/x-obllgxhhrxlfvcpy) has joined ##c++
2016-09-21 11:58:31	<--	sh00p (~sh00p@84-216-39-31.customers.ownit.se) has quit (Client Quit)
2016-09-21 11:58:31	V-ille	geordi: { array<int, 3> arr{1,2,3}; int(&raw_arr)[3] = [&]() -> decltype(auto) {int* boink = arr.data(); return *reinterpret_cast<int(*)[3]>(boink);}(); cout << raw_arr;} // out of my way, foolish object/memory model
2016-09-21 11:58:32	geordi	{1, 2, 3}
2016-09-21 11:59:54	-->	C-Man (~Coldberg@78-56-219-19.static.zebra.lt) has joined ##c++
2016-09-21 12:00:42	-->	NeXTSUN (~textual@2601:83:8100:42cf:1c5:23b3:16b9:7c4) has joined ##c++
2016-09-21 12:01:28	<--	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has quit (Ping timeout: 265 seconds)
2016-09-21 12:02:21	-->	aapaaal (~aapaaal@89.123.23.65) has joined ##c++
2016-09-21 12:02:38	<--	RoKenn (~RoKenn@2001:a61:2264:901:a1bc:3faa:e7b0:a23a) has quit (Quit: NSA proxy service interrupted)
2016-09-21 12:05:11	<--	mfc (~mfc@unaffiliated/mfc) has quit (Read error: Connection reset by peer)
2016-09-21 12:05:11		[12:05]
2016-09-21 12:05:15	<--	coco (~coco@53541674.cm-6-5a.dynamic.ziggo.nl) has quit (Quit: WeeChat 1.5)
2016-09-21 12:05:54	w3z	heh, he said he wanted a new built-in array, with copies of the elements, not a bannas cast to a reference to a builtin array :) but i like how ugly it is
2016-09-21 12:06:05	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-21 12:06:10	w3z	the requirements as stated are kind of silly anyway
2016-09-21 12:06:13	-->	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has joined ##c++
2016-09-21 12:06:13	V-ille	yeah, I can't return an array even if I want to
2016-09-21 12:06:20	V-ille	I mean a raw array
2016-09-21 12:06:24	--	irc: disconnected from server
2016-09-21 12:41:34	-->	alyptik (~alyptik@unaffiliated/alyptik) has joined ##c++
2016-09-21 12:41:34		[12:41]
2016-09-21 12:41:34	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || https://isocpp.org/faq || pastes: http://melpon.org/wandbox"
2016-09-21 12:41:34	--	Topic set by V-ille (~ville@81-175-149-170.bb.dnainternet.fi) on Fri, 18 Sep 2015 07:13:01
2016-09-21 12:41:34	--	Channel ##c++: 976 nicks (0 ops, 0 voices, 976 normals)
2016-09-21 12:41:34	***	Buffer Playback...
2016-09-21 12:41:34	w3z	[21:49:07] something like: [21:49:07]
2016-09-21 12:41:34	w3z	[21:49:08] struct S{S()=delete;}; template<size_t...N> void g(const array<S,sizeof...(N)>& A,index_sequence<N...> indx){S x[sizeof...(N)] ={{A[N]...}}; for(auto i:x);} template<size_t N> void f(const array<S,N>& A){g(A,make_index_sequence<N>{});} [21:49:08]
2016-09-21 12:41:34	w3z	[21:49:15] {} struct S{S()=delete;}; template<size_t...N> void g(const array<S,sizeof...(N)>& A,index_sequence<N...> indx){S x[sizeof...(N)] ={{A[N]...}}; for(auto i:x);} template<size_t N> void f(const array<S,N>& A){g(A,make_index_sequence<N>{});} [21:49:15]
2016-09-21 12:41:34	geordi	[21:49:16] <no output> [21:49:16]
2016-09-21 12:41:34	w3z	[21:50:04] its not very useful, x lives all the way down in g [21:50:04]
2016-09-21 12:41:34	w3z	[21:50:48] but you can adapt the above mechanism as you see fit [21:50:48]
2016-09-21 12:41:34	w3z	[21:51:42] geordi: use --clang [21:51:42]
2016-09-21 12:41:34	geordi	[21:51:42] <no output> [21:51:42]
2016-09-21 12:41:34	V-ille	[21:54:01] perhaps we could cheat with UB [21:54:01]
2016-09-21 12:41:34	V-ille	[21:56:11] or perhaps even without UB [21:56:11]
2016-09-21 12:41:34	V-ille	[21:57:51] oh well, the standard doesn't say that array is a standard-layout type [21:57:51]
2016-09-21 12:41:34	m_ben	[21:58:10] why not a simple for-loop? since the array size is known at compile time, the compiler will very likely unroll the loop [21:58:10]
2016-09-21 12:41:34	V-ille	[21:58:31] geordi: { array<int, 3> arr{1,2,3}; int(&raw_arr)[3] = [&]() -> decltype(auto) {int* boink = arr.data(); return *reinterpret_cast<int(*)[3]>(boink);}(); cout << raw_arr;} // out of my way, foolish object/memory model [21:58:31]
2016-09-21 12:41:34	geordi	[21:58:32] {1, 2, 3} [21:58:32]
2016-09-21 12:41:34	w3z	[22:05:54] heh, he said he wanted a new built-in array, with copies of the elements, not a bannas cast to a reference to a builtin array :) but i like how ugly it is [22:05:54]
2016-09-21 12:41:34	w3z	[22:06:10] the requirements as stated are kind of silly anyway [22:06:10]
2016-09-21 12:41:34	V-ille	[22:06:13] yeah, I can't return an array even if I want to [22:06:13]
2016-09-21 12:41:34	V-ille	[22:06:20] I mean a raw array [22:06:20]
2016-09-21 12:41:34	V-ille	[22:06:27] returning a std::array is easy peasy [22:06:27]
2016-09-21 12:41:34	V-ille	[22:06:46] which is why people should just stop using these stupid raw arrays [22:06:46]
2016-09-21 12:41:34	w3z	[22:06:52] s/bannas/bananas/ [22:06:52]
2016-09-21 12:41:34	w3z	[22:07:33] yeah, its hard to imagine what his purpose in needing a raw array copy of a std::array is [22:07:33]
2016-09-21 12:41:34	V-ille	[22:09:14] well, perhaps he has stupid legacy functions that want a reference to a raw array [22:09:14]
2016-09-21 12:41:34	V-ille	[22:09:30] flebron: explain why you need a raw array [22:09:30]
2016-09-21 12:41:34	ubsan	[22:10:32] {} auto foo() { int x[] = {1, 2, 3}; return x; } [22:10:32]
2016-09-21 12:41:34	geordi	[22:10:32] warning: address of local variable 'x' returned [22:10:32]
2016-09-21 12:41:34	ubsan	[22:10:37] huh [22:10:37]
2016-09-21 12:41:34	ubsan	[22:10:47] ohhh [22:10:47]
2016-09-21 12:41:34	ubsan	[22:10:55] int *foo [22:10:55]
2016-09-21 12:41:34	V-ille	[22:11:08] the joys of decay [22:11:08]
2016-09-21 12:41:34	ubsan	[22:11:16] {} auto foo() -> int[3] { int x[] = {1, 2, 3}; return x; } [22:11:16]
2016-09-21 12:41:34	geordi	[22:11:16] error: cannot convert 'int [3]' to 'int [3]' in return [22:11:16]
2016-09-21 12:41:34	ubsan	[22:11:22] lol [22:11:22]
2016-09-21 12:41:34	ubsan	[22:11:24] nice [22:11:24]
2016-09-21 12:41:34	w3z	[22:11:43] theres the silly gcc bug that lets you declare a function returning an array [22:11:43]
2016-09-21 12:41:34	ubsan	[22:11:48] w3z: ? [22:11:48]
2016-09-21 12:41:34	w3z	[22:12:01] {} auto f()->int[10]; [22:12:01]
2016-09-21 12:41:34	V-ille	[22:12:01] is it a bug or an extension? [22:12:01]
2016-09-21 12:41:34	geordi	[22:12:02] <no output> [22:12:02]
2016-09-21 12:41:34	ubsan	[22:12:14] lol [22:12:14]
2016-09-21 12:41:34	w3z	[22:12:16] its a bug, you cant define f :) [22:12:16]
2016-09-21 12:41:34	ubsan	[22:12:26] {} int f()[10]; [22:12:26]
2016-09-21 12:41:34	geordi	[22:12:27] error: 'f' declared as function returning an array [22:12:27]
2016-09-21 12:41:34	w3z	[22:13:44] <<TYPE(f); auto f()->int[10]; [22:13:44]
2016-09-21 12:41:34	geordi	[22:13:45] lvalue int (()) [10] [22:13:45]
2016-09-21 12:41:34	ubsan	[22:15:27] <<TYPE(&f); auto f()->int[10]; [22:15:27]
2016-09-21 12:41:34	geordi	[22:15:28] prvalue int ((*)()) [10] [22:15:28]
2016-09-21 12:41:34	flebron	[22:20:15] V-ille: Because I want to sort a std::array in a constexpr expression, and you know why I want to do that I suppose :p (But please don't tell me the answer.) [22:20:15]
2016-09-21 12:41:34	w3z	[22:28:23] cppcon silliness? [22:28:23]
2016-09-21 12:41:34	flebron	[22:29:52] w3z: http://ideone.com/89rkm6 [22:29:52]
2016-09-21 12:41:34	***	Playback Complete.
2016-09-21 12:41:39	--	Channel created on Fri, 14 Sep 2001 17:15:35
2016-09-21 12:44:52	w3z	S x[sizeof...(N)]={{A[N]}...};
2016-09-21 12:45:06	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 12:45:43	<--	blackbeard420 (~blackbear@dynamic-acs-24-154-82-158.zoominternet.net) has quit (Quit: leaving)
2016-09-21 12:45:55	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-21 12:47:36	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 276 seconds)
2016-09-21 12:47:42	<--	illerucis (~illerucis@2620:10d:c091:200::8:bcc2) has quit (Remote host closed the connection)
2016-09-21 12:47:57	-->	jshjsh (~jshjsh@172.56.38.82) has joined ##c++
2016-09-21 12:48:13	-->	illerucis (~illerucis@2620:10d:c091:200::8:bcc2) has joined ##c++
2016-09-21 12:49:40	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 12:50:05	w3z	youre also running into the uint8_t as char sillyness when trying to print
2016-09-21 12:50:34	w3z	http://melpon.org/wandbox/permlink/2By0VBT0vCcP0MZS
2016-09-21 12:50:57	-->	Galik (~galik@unaffiliated/galik) has joined ##c++
2016-09-21 12:51:01	<--	JoshS (~jshjsh@172.56.38.82) has quit (Ping timeout: 255 seconds)
2016-09-21 12:51:10	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-21 12:51:22	w3z	wish everyone would just use wandbox so i dont have to cut and paste
2016-09-21 12:52:25	<--	illerucis (~illerucis@2620:10d:c091:200::8:bcc2) has quit (Ping timeout: 248 seconds)
2016-09-21 12:52:36	-->	paulywog (~paulywog@c-68-49-133-252.hsd1.mi.comcast.net) has joined ##c++
2016-09-21 12:53:08	<--	bjz (~bjz@104.222.140.104) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-21 12:54:00	<--	tompaw (~tompaw@tompaw.xxx) has quit (Quit: bye)
2016-09-21 12:55:11	<--	Veltas (~veltas@static.117.33.251.148.clients.your-server.de) has quit (Quit: reeeeeboot)
2016-09-21 12:55:58	<--	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has quit (Ping timeout: 255 seconds)
2016-09-21 12:56:44	-->	illerucis (~illerucis@2620:10d:c091:200::8:bcc2) has joined ##c++
2016-09-21 12:56:44		[12:56]
2016-09-21 12:57:11	-->	Veltas (~veltas@static.117.33.251.148.clients.your-server.de) has joined ##c++
2016-09-21 12:57:21	<--	UnlikeSuika_mobi (~UnlikeSui@115.93.122.107) has quit (Ping timeout: 276 seconds)
2016-09-21 12:57:33	<--	velco (~chill@vlan-185-78-38-153.comnet.bg) has quit (Quit: Leaving...)
2016-09-21 12:57:51	<--	vitimiti (~vitimiti@unaffiliated/vitimiti) has quit (Quit: Meows out)
2016-09-21 12:57:55	<--	refp (~refp@82.118.24.98) has left ##c++
2016-09-21 12:59:32	-->	refp (~refp@82.118.24.98) has joined ##c++
2016-09-21 12:59:44	-->	UnlikeSuika_mobi (~UnlikeSui@223.33.165.185) has joined ##c++
2016-09-21 12:59:55	<--	derpsauce__ (uid156583@gateway/web/irccloud.com/x-esqollbepfgvytem) has quit (Quit: Connection closed for inactivity)
2016-09-21 13:00:50	-->	symm- (~symm-@86.127.152.32) has joined ##c++
2016-09-21 13:01:30	<--	phinxy (~tehhhd@unaffiliated/phinxy) has quit (Quit: Leaving)
2016-09-21 13:02:26	<--	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has quit (Quit: Leaving.)
2016-09-21 13:02:28	<--	refp (~refp@82.118.24.98) has left ##c++
2016-09-21 13:02:33	<--	bumbar (~bumbar@unaffiliated/bumbar) has quit (Quit: Leaving)
2016-09-21 13:02:39	-->	api (~api@ip-64-134-161-207.public.wayport.net) has joined ##c++
2016-09-21 13:03:04	<--	crakrjak (merc@unaffiliated/crakrjak) has quit (Quit: merc - out!)
2016-09-21 13:03:14	m_ben	flebron: so all you're trying to do is initialize a default array with a std::array?
2016-09-21 13:03:35	Malkrith	What is wandbox
2016-09-21 13:03:59	<--	szulak (uid162164@gateway/web/irccloud.com/x-yxqsiwbrxnildiil) has quit (Quit: Connection closed for inactivity)
2016-09-21 13:04:00	m_ben	melpon.org/wandbox
2016-09-21 13:04:30	<--	AnarchyAo (~andrew@8.18.217.202) has quit (Quit: ircN 8.00 for mIRC (20100904) - www.ircN.org)
2016-09-21 13:05:23	-->	bx2 (~bx2@46.140.123.246) has joined ##c++
2016-09-21 13:06:53	-->	vitimiti (~vitimiti@unaffiliated/vitimiti) has joined ##c++
2016-09-21 13:07:23	<--	api (~api@ip-64-134-161-207.public.wayport.net) has quit (Quit:  HydraIRC -> http://www.hydrairc.com <- Nine out of ten l33t h4x0rz prefer it)
2016-09-21 13:07:52	<--	xkpe (~xkpe@host86-151-105-229.range86-151.btcentralplus.com) has quit (Quit: brb)
2016-09-21 13:08:00	<--	alexmh (~alex@c-67-166-124-41.hsd1.ut.comcast.net) has quit (Remote host closed the connection)
2016-09-21 13:09:19	<--	Burgundy (~burgundy@86.121.178.118) has left ##c++
2016-09-21 13:09:50	-->	Burgundy (~burgundy@86.121.178.118) has joined ##c++
2016-09-21 13:11:00	<--	bx2 (~bx2@46.140.123.246) has quit (Ping timeout: 276 seconds)
2016-09-21 13:13:06	<--	illerucis (~illerucis@2620:10d:c091:200::8:bcc2) has quit (Remote host closed the connection)
2016-09-21 13:13:06		[13:13]
2016-09-21 13:13:13	<--	de-facto (~de-facto@unaffiliated/de-facto) has quit (Quit: Leaving)
2016-09-21 13:15:24	<--	whytrytofly (~whytrytof@dslb-094-223-012-212.094.223.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2016-09-21 13:15:38	<--	Danishman (~kvirc@62-243-156-218-static.dk.customer.tdc.net) has quit (Quit: KVIrc 4.9.1 Aria http://www.kvirc.net/)
2016-09-21 13:15:44	<--	Nemus (~Nemus@unaffiliated/nemus) has left ##c++
2016-09-21 13:16:42	<--	Kirrahe (~kirrahe@ip51cc4257.adsl-surfen.hetnet.nl) has quit (Ping timeout: 264 seconds)
2016-09-21 13:17:24	Malkrith	Can you share code from there?
2016-09-21 13:17:29	Malkrith	Like a wandbox link
2016-09-21 13:17:37	<--	NoShlomo (~NoShlomo@90.74.151.136) has quit (Quit: NoShlomo)
2016-09-21 13:18:57	-->	avtolstoy (~avtolstoy@gateway/vpn/privateinternetaccess/avtolstoy) has joined ##c++
2016-09-21 13:19:30	m_ben	sure
2016-09-21 13:19:36	Malkrith	Found it
2016-09-21 13:20:43	<--	CuriousErnestBro (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has quit (Ping timeout: 255 seconds)
2016-09-21 13:20:52	<--	UnlikeSuika_mobi (~UnlikeSui@223.33.165.185) has quit (Quit: RIP)
2016-09-21 13:21:02	<--	sharazam (~sharazam@x4db1b72d.dyn.telefonica.de) has quit (Read error: Connection reset by peer)
2016-09-21 13:21:16	-->	grako (~grako@host86-163-229-238.range86-163.btcentralplus.com) has joined ##c++
2016-09-21 13:21:28	-->	quickbrownfox (~henrique_@177.131.178.138) has joined ##c++
2016-09-21 13:21:45	-->	Karyon (~yaaic@unaffiliated/karyon) has joined ##c++
2016-09-21 13:21:57	<--	orbiter (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has quit (Ping timeout: 250 seconds)
2016-09-21 13:21:57	-->	Anonaly (~Anonaly@unaffiliated/anom01y-/x-8370081) has joined ##c++
2016-09-21 13:22:06	<--	Fatbag (~quassel@nat-128-62-76-13.public.utexas.edu) has quit (Ping timeout: 265 seconds)
2016-09-21 13:22:36	<--	Brklyn (~truthbk@38.122.226.210) has quit (Ping timeout: 265 seconds)
2016-09-21 13:22:45	-->	nealshire_ (~Nealshire@unaffiliated/nealshire) has joined ##c++
2016-09-21 13:22:52	-->	antogon (4c7a5675@gateway/web/freenode/ip.76.122.86.117) has joined ##c++
2016-09-21 13:22:53	-->	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has joined ##c++
2016-09-21 13:23:05	<--	antogon (4c7a5675@gateway/web/freenode/ip.76.122.86.117) has left ##c++
2016-09-21 13:23:07	-->	tompaw (~tompaw@tompaw.xxx) has joined ##c++
2016-09-21 13:24:47	-->	kebabspion (~snowing@c-185-113-99-182.cust.bredband2.com) has joined ##c++
2016-09-21 13:25:03	<--	wolfcub (~henrique_@186.194.99.136) has quit (Ping timeout: 240 seconds)
2016-09-21 13:25:46	<--	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has quit (Quit: Leaving)
2016-09-21 13:25:51	<--	ezzieyguywuf (~wolfie@unaffiliated/ezzieyguywuf) has quit (Read error: Connection reset by peer)
2016-09-21 13:26:16	-->	UnlikeSuika_mobi (~UnlikeSui@147.47.141.16) has joined ##c++
2016-09-21 13:26:25	-->	ezzieyguywuf (~wolfie@unaffiliated/ezzieyguywuf) has joined ##c++
2016-09-21 13:26:45	<--	King_Hual_ (~failed@94.26.28.68) has quit (Read error: Connection reset by peer)
2016-09-21 13:26:50	<--	tompaw (~tompaw@tompaw.xxx) has quit (Remote host closed the connection)
2016-09-21 13:26:59	-->	tompaw (~tompaw@tompaw.xxx) has joined ##c++
2016-09-21 13:27:23	<--	tachoknight (~tachoknig@2601:241:102:60a6:8e70:5aff:fe24:3cb0) has quit (Ping timeout: 272 seconds)
2016-09-21 13:27:28	<--	f10_ (~flo@2001:470:52af:1:dd05:b755:629c:9755) has quit (Ping timeout: 255 seconds)
2016-09-21 13:27:28	<--	f10__ (~flo@2001:470:52af:1:59b:9657:6ac8:c864) has quit (Ping timeout: 255 seconds)
2016-09-21 13:27:36	<--	tompaw (~tompaw@tompaw.xxx) has quit (Client Quit)
2016-09-21 13:28:04	-->	tompaw (~tompaw@tompaw.xxx) has joined ##c++
2016-09-21 13:28:15	<--	tompaw (~tompaw@tompaw.xxx) has quit (Remote host closed the connection)
2016-09-21 13:28:15		[13:28]
2016-09-21 13:28:24	-->	tompaw (~tompaw@tompaw.xxx) has joined ##c++
2016-09-21 13:28:48	-->	doppel (~chatzilla@ip70-189-197-158.lv.lv.cox.net) has joined ##c++
2016-09-21 13:28:54	<--	tompaw (~tompaw@tompaw.xxx) has quit (Client Quit)
2016-09-21 13:29:01	-->	tachoknight (~tachoknig@2601:241:102:60a6:8e70:5aff:fe24:3cb0) has joined ##c++
2016-09-21 13:29:14	-->	tompaw (~tompaw@tompaw.xxx) has joined ##c++
2016-09-21 13:29:30	<--	Birchy (~Birchy@178-164-108.52.3p.ntebredband.no) has quit (Ping timeout: 260 seconds)
2016-09-21 13:29:43	-->	ptx0 (~cheesus_c@unaffiliated/ptx0) has joined ##c++
2016-09-21 13:30:00	-->	skweek (~skweek@2607:fe50:0:810b:bcae:516b:24e:ed39) has joined ##c++
2016-09-21 13:30:31	-->	voidah (~voidah@unaffiliated/voider) has joined ##c++
2016-09-21 13:31:05	-->	moony22 (moony22@wikipedia/Moony22) has joined ##c++
2016-09-21 13:31:52	<--	tompaw (~tompaw@tompaw.xxx) has quit (Client Quit)
2016-09-21 13:33:14	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 13:33:38	-->	tompaw (~tompaw@tompaw.xxx) has joined ##c++
2016-09-21 13:33:45	<--	tompaw (~tompaw@tompaw.xxx) has quit (Excess Flood)
2016-09-21 13:34:12	-->	tompaw (~tompaw@tompaw.xxx) has joined ##c++
2016-09-21 13:34:16	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 265 seconds)
2016-09-21 13:37:08	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-21 13:38:05	<--	w41 (~w41@unaffiliated/w41) has quit (Remote host closed the connection)
2016-09-21 13:38:09	<--	saedelaere (~saedelaer@unaffiliated/saedelaere) has quit (Quit: WeeChat 1.5)
2016-09-21 13:38:09	<--	ptx0 (~cheesus_c@unaffiliated/ptx0) has quit (Ping timeout: 272 seconds)
2016-09-21 13:40:11	<--	slavanap (~slavanap@5.145.251.251) has quit (Quit: Leaving)
2016-09-21 13:40:14	-->	Euston (~r1@cpc24-lewi14-2-0-cust589.2-4.cable.virginm.net) has joined ##c++
2016-09-21 13:44:03	-->	josef_k (~Jeremy@210-10-222-98.mel.static-ipl.aapt.com.au) has joined ##c++
2016-09-21 13:44:03		[13:44]
2016-09-21 13:47:28	flebron	w3z: Thanks. TIL about make_index_sequence.
2016-09-21 13:47:41	<--	fedepad (~fedepad@p4FE11069.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-09-21 13:47:43	flebron	m_ben: Not sure what you mean by a "default array"
2016-09-21 13:48:10	<--	ville (~ville@176-93-29-161.bb.dnainternet.fi) has quit (Ping timeout: 255 seconds)
2016-09-21 13:48:21	m_ben	flebron: int i[]
2016-09-21 13:50:49	Moto-chan	Still not sure what you mean by default array
2016-09-21 13:51:01	Moto-chan	You mean turn a std::array into a language array?
2016-09-21 13:51:05	<--	k_j (~no@151.42.78.158) has quit (Ping timeout: 240 seconds)
2016-09-21 13:51:07	-->	ptx0 (~cheesus_c@unaffiliated/ptx0) has joined ##c++
2016-09-21 13:51:49	-->	jaafar (~quassel@67.135.43.183) has joined ##c++
2016-09-21 13:52:24	-->	NeXTSUN (~textual@2601:83:8100:42cf:9cd1:d4d4:62cb:9727) has joined ##c++
2016-09-21 13:52:42	<--	jan64 (~jan64@agad109.neoplus.adsl.tpnet.pl) has quit (Quit: Leaving)
2016-09-21 13:52:42	m_ben	Moto-chan: yes, language array. I think that's what he wants
2016-09-21 13:53:01	Moto-chan	!stdref array
2016-09-21 13:53:01	refbot	std::array: http://en.cppreference.com/w/cpp/container/array
2016-09-21 13:53:17	Moto-chan	^ std::array.data()
2016-09-21 13:53:23	Moto-chan	Gives you a pointer to the array
2016-09-21 13:53:40	Moto-chan	Same thing really, for all intents and purposes.
2016-09-21 13:54:02	Moto-chan	No real reason to do it though, unless you have a function that wants a pointer/array
2016-09-21 13:54:15	-->	UnripeSuica_mobi (~UnlikeSui@223.33.165.185) has joined ##c++
2016-09-21 13:54:17	xaxxon	intensive porpoises
2016-09-21 13:56:30	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 13:56:40	flebron	m_ben: What I wanted w3z already wrote :p
2016-09-21 13:57:28	flebron	I wanted "T x[N] = {arr[0]...}", which actually ends up being T x[N] = {{arr[L]}...}, where L is make_index_sequence<N>.
2016-09-21 13:57:35	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 244 seconds)
2016-09-21 13:57:41	<--	davidstone (~davidston@75-166-170-107.hlrn.qwest.net) has quit (Quit: Leaving)
2016-09-21 13:57:57	<--	UnlikeSuika_mobi (~UnlikeSui@147.47.141.16) has quit (Ping timeout: 265 seconds)
2016-09-21 13:59:34	-->	illerucis (~illerucis@107.14.54.132) has joined ##c++
2016-09-21 13:59:34		[13:59]
2016-09-21 14:00:44	-->	ferdna (~ferdna@cpe-69-23-141-130.elp.res.rr.com) has joined ##c++
2016-09-21 14:04:13	<--	navidr (uid112413@gateway/web/irccloud.com/x-cpzzimbtwwpqurqn) has quit (Quit: Connection closed for inactivity)
2016-09-21 14:05:02	-->	andwan0 (~androirc@2a02:c7d:c73:7e00:413d:35fb:fd84:fa28) has joined ##c++
2016-09-21 14:05:07	<--	illerucis (~illerucis@107.14.54.132) has quit (Remote host closed the connection)
2016-09-21 14:05:40	<--	livingBEEF (~livingBEE@46.13.161.162) has quit (Read error: Connection reset by peer)
2016-09-21 14:06:02	andwan0	Miss u
2016-09-21 14:09:55	<--	UnripeSuica_mobi (~UnlikeSui@223.33.165.185) has quit (Quit: RIP)
2016-09-21 14:10:09	<--	Euston (~r1@cpc24-lewi14-2-0-cust589.2-4.cable.virginm.net) has quit (Ping timeout: 276 seconds)
2016-09-21 14:11:23	-->	UnlikeSuika_mobi (~UnlikeSui@223.33.165.185) has joined ##c++
2016-09-21 14:12:05	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-21 14:12:26	-->	feliwir (Elite16673@gateway/shell/elitebnc/x-jtcpdkhjlobzachk) has joined ##c++
2016-09-21 14:13:31	<--	UnlikeSuika_mobi (~UnlikeSui@223.33.165.185) has quit (Read error: Connection reset by peer)
2016-09-21 14:13:51	-->	UnlikeSuika_mobi (~UnlikeSui@223.33.165.185) has joined ##c++
2016-09-21 14:13:59	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 14:15:46	<--	UnlikeSuika_mobi (~UnlikeSui@223.33.165.185) has quit (Client Quit)
2016-09-21 14:15:46		[14:15]
2016-09-21 14:16:23	-->	vralphv (~vralp@d137-186-58-40.abhsia.telus.net) has joined ##c++
2016-09-21 14:16:47	<--	josh_ (~josh@168.103.191.142) has quit (Ping timeout: 272 seconds)
2016-09-21 14:16:59	<--	det (~chris@unaffiliated/det) has quit (Ping timeout: 250 seconds)
2016-09-21 14:17:11	<--	bazrush (~bazrush@149.152.238.178.in-addr.arpa) has quit (Ping timeout: 244 seconds)
2016-09-21 14:17:54	<--	HerzogDeXtEr (~farci@i59F6D2CF.versanet.de) has quit (Read error: Connection reset by peer)
2016-09-21 14:18:08	-->	k_j (~no@151.42.78.158) has joined ##c++
2016-09-21 14:19:11	-->	UnlikeSuika_mobi (~UnlikeSui@1.210.118.70) has joined ##c++
2016-09-21 14:20:07	<--	wilx (wilx@27.228.broadband3.iol.cz) has quit (Ping timeout: 255 seconds)
2016-09-21 14:21:47	-->	wilx (wilx@27.228.broadband3.iol.cz) has joined ##c++
2016-09-21 14:21:52	<--	symm- (~symm-@86.127.152.32) has quit (Ping timeout: 244 seconds)
2016-09-21 14:22:32	-->	w41 (~w41@213.243.91.10) has joined ##c++
2016-09-21 14:22:38	<--	w41 (~w41@213.243.91.10) has quit (Changing host)
2016-09-21 14:22:38	-->	w41 (~w41@unaffiliated/w41) has joined ##c++
2016-09-21 14:23:21	-->	razzmc (byte@unaffiliated/razzmc) has joined ##c++
2016-09-21 14:24:37	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 255 seconds)
2016-09-21 14:25:03	<--	grako (~grako@host86-163-229-238.range86-163.btcentralplus.com) has quit
2016-09-21 14:26:27	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 14:27:05	<--	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has quit (Quit: Leaving.)
2016-09-21 14:27:09	-->	andyhuzhill (~Thunderbi@14.23.45.178) has joined ##c++
2016-09-21 14:27:30	<--	jaafar (~quassel@67.135.43.183) has quit (Ping timeout: 264 seconds)
2016-09-21 14:28:16	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit
2016-09-21 14:28:34	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-21 14:30:08	<--	ScorpionJack (~Scorpion@unaffiliated/scorpionjack) has quit (Quit: ScorpionJack)
2016-09-21 14:30:17	<--	k_j (~no@151.42.78.158) has quit (Ping timeout: 240 seconds)
2016-09-21 14:30:27	-->	det (~chris@unaffiliated/det) has joined ##c++
2016-09-21 14:31:45	-->	JoshS (~jshjsh@172.56.38.82) has joined ##c++
2016-09-21 14:31:45		[14:31]
2016-09-21 14:32:18	<--	Karyon (~yaaic@unaffiliated/karyon) has quit (Quit: sayonara)
2016-09-21 14:32:32	<--	razzmc (byte@unaffiliated/razzmc) has quit
2016-09-21 14:33:38	<--	jshjsh (~jshjsh@172.56.38.82) has quit (Ping timeout: 265 seconds)
2016-09-21 14:33:45	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 244 seconds)
2016-09-21 14:34:29	-->	illerucis (~illerucis@cpe-69-201-187-231.nyc.res.rr.com) has joined ##c++
2016-09-21 14:35:53	-->	trw (~twa@184.250.139.97) has joined ##c++
2016-09-21 14:37:06	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 14:37:19	-->	P1RATEZ (piratez@unaffiliated/p1ratez) has joined ##c++
2016-09-21 14:37:52	-->	Kn|t3 (~agarwalvi@49.207.53.8) has joined ##c++
2016-09-21 14:38:18	<--	andyhuzhill (~Thunderbi@14.23.45.178) has quit (Remote host closed the connection)
2016-09-21 14:39:04	-->	bkboggy (~bkboggy@cpe-172-250-147-60.socal.res.rr.com) has joined ##c++
2016-09-21 14:39:22	<--	illerucis (~illerucis@cpe-69-201-187-231.nyc.res.rr.com) has quit (Remote host closed the connection)
2016-09-21 14:39:58	-->	illerucis (~illerucis@2620:10d:c090:180::81a6) has joined ##c++
2016-09-21 14:41:22	<--	tachoknight_ (~tachoknig@c-73-246-129-13.hsd1.il.comcast.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-21 14:41:24	-->	andyhuzhill (~Thunderbi@14.23.45.178) has joined ##c++
2016-09-21 14:45:13	<--	C-Man (~Coldberg@78-56-219-19.static.zebra.lt) has quit (Read error: Connection reset by peer)
2016-09-21 14:46:01	<--	skweek (~skweek@2607:fe50:0:810b:bcae:516b:24e:ed39) has quit (Ping timeout: 250 seconds)
2016-09-21 14:48:17	<--	andyhuzhill (~Thunderbi@14.23.45.178) has quit (Ping timeout: 240 seconds)
2016-09-21 14:48:17		[14:48]
2016-09-21 14:49:24	-->	merced (~merced@unaffiliated/merced) has joined ##c++
2016-09-21 14:49:46	<--	Ben2560 (~quassel@137.154.246.226) has quit (Ping timeout: 244 seconds)
2016-09-21 14:49:53	merced	can someone explain const functions?
2016-09-21 14:50:47	<--	GranoblasticMan (~Granoblas@108.9.147.73) has quit (Read error: Connection reset by peer)
2016-09-21 14:50:50	xaxxon	seems likely.   what is confusing you?
2016-09-21 14:51:13	<--	doppel (~chatzilla@ip70-189-197-158.lv.lv.cox.net) has quit (Quit: ChatZilla 0.9.92 [Firefox 48.0.2/20160823121617])
2016-09-21 14:52:04	xaxxon	merc
2016-09-21 14:52:05	xaxxon	merced
2016-09-21 14:53:03	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 276 seconds)
2016-09-21 14:53:09	merced	so my function's returning either an empty string or an older copy of an id object that we have to pass by reference for some silly reason. looking through the debugger, the field's set to something different than what the functions returning
2016-09-21 14:53:13	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 14:55:00	<--	m_ben (~m_ben@unaffiliated/m-ben/x-5917362) has quit (Quit: WeeChat 1.5)
2016-09-21 14:56:12	merced	this is just a get function too, so i'm wondering why the method being marked const would cause it to do this behavior
2016-09-21 14:56:54	-->	beatdown (beatdown@unaffiliated/beatdown) has joined ##c++
2016-09-21 14:56:57	<--	tesuji (~tesuji@unaffiliated/tesuji) has quit (Read error: Connection reset by peer)
2016-09-21 14:57:46	<--	Kn|t3 (~agarwalvi@49.207.53.8) has quit (Quit: Kn|t3)
2016-09-21 14:57:49	<--	CEnnis91 (uid3543@gateway/web/irccloud.com/x-jpdwkenixrbqxsrt) has quit (Quit: Connection closed for inactivity)
2016-09-21 14:58:09	<--	heiner (~heiner@dslb-178-000-016-173.178.000.pools.vodafone-ip.de) has quit (Disconnected by services)
2016-09-21 14:58:19	-->	heiner (~heiner@ipservice-092-209-143-031.092.209.pools.vodafone-ip.de) has joined ##c++
2016-09-21 14:59:17	-->	tesuji (~tesuji@unaffiliated/tesuji) has joined ##c++
2016-09-21 14:59:19	xaxxon	merced:  a const method is simply a method allowed to be called on a const object.   And inside that const method, all the data members of the object are const
2016-09-21 14:59:32	-->	YungRaj (~YungRaj@50-24-71-159.bcstcmtk01.res.dyn.suddenlink.net) has joined ##c++
2016-09-21 15:00:30	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-21 15:02:10	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 15:02:14	-->	Justinus (~Justinus@192.122.131.42) has joined ##c++
2016-09-21 15:02:23	<--	EvilPeng1 (~EvilPengu@bur-inet-pa-1.disney.com) has quit (Ping timeout: 272 seconds)
2016-09-21 15:02:59	-->	LauraGaucha (~cplusplus@h-67-102-175-59.sttn.wa.globalcapacity.com) has joined ##c++
2016-09-21 15:03:31	LauraGaucha	now I need to choose between lightning talks and ConcepTS teaching
2016-09-21 15:03:31		[15:03]
2016-09-21 15:03:41	-->	Ben2560 (~quassel@137.154.246.226) has joined ##c++
2016-09-21 15:03:46	-->	supay (nebuzen@unaffiliated/supay) has joined ##c++
2016-09-21 15:03:46	<--	supay (nebuzen@unaffiliated/supay) has quit (Changing host)
2016-09-21 15:03:46	-->	supay (nebuzen@gateway/shell/fnordserver.eu/x-pltgtjuctmfoxthk) has joined ##c++
2016-09-21 15:04:50	merced	i'll just blame it on microsoft
2016-09-21 15:06:20	-->	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2016-09-21 15:06:23	<--	illerucis (~illerucis@2620:10d:c090:180::81a6) has quit (Ping timeout: 250 seconds)
2016-09-21 15:06:32	<--	SecondForm_Glenn (~Thunderbi@108.189.70.212) has quit (Ping timeout: 265 seconds)
2016-09-21 15:06:34	-->	uboot_ (~moon@x4dbac248.dyn.telefonica.de) has joined ##c++
2016-09-21 15:06:35	<--	KAHR-Alpha (~Alpha@AReims-652-1-187-168.w92-142.abo.wanadoo.fr) has quit (Ping timeout: 265 seconds)
2016-09-21 15:06:49	<--	Justinus (~Justinus@192.122.131.42) has quit (Ping timeout: 244 seconds)
2016-09-21 15:08:10	LauraGaucha	lots of awesome ideas for C++20
2016-09-21 15:09:00	-->	kus_ubuntui686 (~kus@149.4.106.56) has joined ##c++
2016-09-21 15:09:01	<--	kus_ubuntui686 (~kus@149.4.106.56) has quit (Max SendQ exceeded)
2016-09-21 15:10:50	-->	kus_ubuntui686 (~kus@149.4.106.56) has joined ##c++
2016-09-21 15:10:51	<--	uboot__ (~moon@x4dbaa774.dyn.telefonica.de) has quit (Ping timeout: 265 seconds)
2016-09-21 15:10:53	<--	quickbrownfox (~henrique_@177.131.178.138) has quit (Quit: Leaving)
2016-09-21 15:11:13	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-21 15:11:17	-->	tminus36 (~tminus36@pdpc/supporter/student/tminus36) has joined ##c++
2016-09-21 15:11:20	-->	wolfcub (~henrique_@177.131.178.138) has joined ##c++
2016-09-21 15:12:16	-->	Fatbag (~quassel@nat-128-62-72-16.public.utexas.edu) has joined ##c++
2016-09-21 15:12:32	-->	andyhuzhill (~Thunderbi@14.23.45.178) has joined ##c++
2016-09-21 15:12:39	wolfcub	7.3.3.6 a using-declaration shall not name a namespace
2016-09-21 15:13:03	wolfcub	7.3.3.11 for a using-declaration that names a namespace
2016-09-21 15:13:30	wolfcub	i know it doesnt mean the same thing, but to use the same wording is a bit confusing
2016-09-21 15:14:30	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-21 15:15:37	-->	DEElekgolo (~DEElekgol@2602:30a:2e0e:a7a0:b7:6741:9b9d:2c3c) has joined ##c++
2016-09-21 15:15:44	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 15:15:48	<--	di0_ (~di0_@unaffiliated/di0-/x-5053590) has quit (Ping timeout: 276 seconds)
2016-09-21 15:15:57	-->	skweek (~skweek@USF-Gold-Wifi-nat-57.laptops.usf.edu) has joined ##c++
2016-09-21 15:16:24	-->	arescorpio (~arescorpi@132-219-114-200.fibertel.com.ar) has joined ##c++
2016-09-21 15:16:24	-->	jaafar (~quassel@50-206-78-205-static.hfc.comcastbusiness.net) has joined ##c++
2016-09-21 15:18:31	-->	k_sze[work] (daff8506@gateway/web/freenode/ip.218.255.133.6) has joined ##c++
2016-09-21 15:18:31		[15:18]
2016-09-21 15:19:22	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-21 15:21:46	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-21 15:22:39	-->	Justinus (~Justinus@192.122.131.42) has joined ##c++
2016-09-21 15:23:45	-->	dj_pi (~dj@c-73-191-212-56.hsd1.mi.comcast.net) has joined ##c++
2016-09-21 15:25:08	<--	MaddHatter (maddhatt@unaffiliated/maddhatter) has quit (Quit: brb)
2016-09-21 15:25:40	<--	blackbird1 (~blackbird@197.2.125.33) has quit (Quit: Leaving)
2016-09-21 15:26:15	<--	xaxxon (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has quit (Quit: This computer has gone to sleep)
2016-09-21 15:26:48	<--	The_Coolest (~Arthur_Li@bzq-84-108-121-56.cablep.bezeqint.net) has quit (Ping timeout: 265 seconds)
2016-09-21 15:26:51	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 276 seconds)
2016-09-21 15:26:53	<--	skweek (~skweek@USF-Gold-Wifi-nat-57.laptops.usf.edu) has quit (Ping timeout: 265 seconds)
2016-09-21 15:27:07	-->	systemfault (~rcyr@unaffiliated/rcyr) has joined ##c++
2016-09-21 15:27:19	<--	ibouvousaime (~ibouvousa@41.82.35.1) has quit (Ping timeout: 265 seconds)
2016-09-21 15:27:43	<--	bratner_ (~bratner@bzq-79-177-188-8.red.bezeqint.net) has quit (Ping timeout: 272 seconds)
2016-09-21 15:28:17	<--	Justinus (~Justinus@192.122.131.42) has quit (Ping timeout: 265 seconds)
2016-09-21 15:28:33	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 15:29:11	<--	esas (~esas@unaffiliated/esas) has quit
2016-09-21 15:29:26	-->	funfunctor (~edward@203.44.10.68) has joined ##c++
2016-09-21 15:29:42	funfunctor	Hi, what do these reordering warnings mean? https://paste.fedoraproject.org/432315/45076341/
2016-09-21 15:30:14	-->	The_Coolest (~Arthur_Li@bzq-84-108-121-56.cablep.bezeqint.net) has joined ##c++
2016-09-21 15:30:26	-->	bratner_ (~bratner@79.177.188.8) has joined ##c++
2016-09-21 15:31:45	LauraGaucha	funfunctor, aside your terrible taste for prefixes, that means they are declared in the wrong order they are initialized in the constructor
2016-09-21 15:32:13	LauraGaucha	you need to declare and initialize them in the same order
2016-09-21 15:33:56	<--	k_sze[work] (daff8506@gateway/web/freenode/ip.218.255.133.6) has quit (Quit: Page closed)
2016-09-21 15:33:56		[15:33]
2016-09-21 15:34:05	<--	magnicida (~raskolnik@2a02:8109:8c80:231:ea39:dfff:fe4d:275b) has quit (Ping timeout: 265 seconds)
2016-09-21 15:35:03	<--	funfunctor (~edward@203.44.10.68) has quit (Ping timeout: 244 seconds)
2016-09-21 15:35:05	<--	wget (~wget@unaffiliated/wget) has quit (Ping timeout: 248 seconds)
2016-09-21 15:35:25	-->	xaxxon (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has joined ##c++
2016-09-21 15:37:13	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 15:37:39	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-21 15:39:05	-->	PlasmaStar (Plasma@unaffiliated/plasmastar) has joined ##c++
2016-09-21 15:39:41	<--	pullphinger (~pullphing@c-73-44-252-158.hsd1.il.comcast.net) has quit
2016-09-21 15:39:56	-->	di0_ (~di0_@unaffiliated/di0-/x-5053590) has joined ##c++
2016-09-21 15:41:06	-->	SiN_Bizkit (~SiN_Bizki@90.188.118.76) has joined ##c++
2016-09-21 15:41:11	-->	Aph3x-WL (~Aph3x@shellie.darchoods.net) has joined ##c++
2016-09-21 15:43:12	-->	Justinus (~Justinus@192.122.131.42) has joined ##c++
2016-09-21 15:43:28	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-21 15:43:56	<--	zwliew (uid161395@gateway/web/irccloud.com/x-abzerqvmxclasnlw) has quit (Quit: Connection closed for inactivity)
2016-09-21 15:44:07	<--	elnormous (~elnormous@87.110.129.37) has quit (Remote host closed the connection)
2016-09-21 15:44:32	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 244 seconds)
2016-09-21 15:45:32	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-21 15:46:03	-->	Ropeney (~Ropeney@tank.mindvision.com.au) has joined ##c++
2016-09-21 15:47:54	<--	NightQuest (NQ@c-71-236-158-254.hsd1.or.comcast.net) has quit (Remote host closed the connection)
2016-09-21 15:47:59	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 15:48:34	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-21 15:49:31	<--	Justinus (~Justinus@192.122.131.42) has quit (Ping timeout: 265 seconds)
2016-09-21 15:49:31		[15:49]
2016-09-21 15:49:37	-->	fr_ (~fr@p548FE0D8.dip0.t-ipconnect.de) has joined ##c++
2016-09-21 15:50:26	-->	UnripeSuica_mobi (~UnlikeSui@223.33.165.68) has joined ##c++
2016-09-21 15:50:42	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-21 15:50:49	<--	UnripeSuica_mobi (~UnlikeSui@223.33.165.68) has quit (Client Quit)
2016-09-21 15:51:05	-->	elnormou_ (~elnormous@87.110.129.37) has joined ##c++
2016-09-21 15:51:06	-->	UnripeSuica_mobi (~UnlikeSui@147.47.142.48) has joined ##c++
2016-09-21 15:51:34	<--	UnlikeSuika_mobi (~UnlikeSui@1.210.118.70) has quit (Ping timeout: 276 seconds)
2016-09-21 15:51:46	<--	Ben2560 (~quassel@137.154.246.226) has quit (Ping timeout: 244 seconds)
2016-09-21 15:52:33	<--	fr (~fr@pD9577FC6.dip0.t-ipconnect.de) has quit (Ping timeout: 240 seconds)
2016-09-21 15:52:35	-->	fstd_ (~fstd@x4e3077c5.dyn.telefonica.de) has joined ##c++
2016-09-21 15:52:38	<--	fstd_ (~fstd@x4e3077c5.dyn.telefonica.de) has quit (Changing host)
2016-09-21 15:52:38	-->	fstd_ (~fstd@unaffiliated/fisted) has joined ##c++
2016-09-21 15:53:34	-->	Mnkras (~Mnkras@concrete5/781/Mnkras) has joined ##c++
2016-09-21 15:53:42	<--	Mnkras (~Mnkras@concrete5/781/Mnkras) has quit (Client Quit)
2016-09-21 15:55:00	-->	SecondForm_Glenn (~Thunderbi@97-102-42-24.res.bhn.net) has joined ##c++
2016-09-21 15:55:04	-->	funfunctor (~edward@promim2.lnk.telstra.net) has joined ##c++
2016-09-21 15:55:06	-->	jamlee (~Mutter@223.104.10.118) has joined ##c++
2016-09-21 15:55:17	<--	xaxxon (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has quit (Quit: This computer has gone to sleep)
2016-09-21 15:56:25	<--	fstd (~fstd@unaffiliated/fisted) has quit (Ping timeout: 255 seconds)
2016-09-21 15:56:25	--	fstd_ is now known as fstd
2016-09-21 15:58:40	-->	xaxxon (~xaxxon@2601:602:9d00:d58b:3d04:c46e:77f0:7958) has joined ##c++
2016-09-21 15:58:47	-->	rorro (~rorro@h-170-152-58.a163.priv.bahnhof.se) has joined ##c++
2016-09-21 15:59:04	<--	JoshS (~jshjsh@172.56.38.82) has quit (Quit: Leaving)
2016-09-21 15:59:18	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 15:59:27	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-21 15:59:40	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-21 15:59:47	<--	elnormou_ (~elnormous@87.110.129.37) has quit (Remote host closed the connection)
2016-09-21 15:59:58	-->	elnormous (~elnormous@87.110.129.37) has joined ##c++
2016-09-21 16:02:04	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-21 16:02:20	-->	DigiByteDev (~JT2@n218250011174.netvigator.com) has joined ##c++
2016-09-21 16:02:24	josef_k	LauraGaucha: Are you at CppCon?
2016-09-21 16:02:57	<--	rorro (~rorro@h-170-152-58.a163.priv.bahnhof.se) has quit (Ping timeout: 244 seconds)
2016-09-21 16:03:23	LauraGaucha	yes
2016-09-21 16:03:34	LauraGaucha	fun fun fun
2016-09-21 16:03:39	-->	Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2016-09-21 16:03:44	LauraGaucha	C++ is BIGGER than anyone can imagine
2016-09-21 16:03:49	 *	LauraGaucha is pretty excited
2016-09-21 16:04:17	<--	xaxxon (~xaxxon@2601:602:9d00:d58b:3d04:c46e:77f0:7958) has quit (Quit: This computer has gone to sleep)
2016-09-21 16:04:51	josef_k	Have they said anything about how quickly the recordings will go online?
2016-09-21 16:04:51		[16:04]
2016-09-21 16:05:01	<--	andyhuzhill (~Thunderbi@14.23.45.178) has quit (Ping timeout: 244 seconds)
2016-09-21 16:05:18	<--	SpaceDanceCJ (~Sasha@178.121.37.48) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-09-21 16:05:56	LauraGaucha	everyone asks that
2016-09-21 16:05:59	LauraGaucha	around one month :)
2016-09-21 16:06:23	<--	Henke37 (~Henrik@81-227-16-59-no133.bredband.skanova.com) has quit (Quit: ERR_SHUTDOWN)
2016-09-21 16:08:19	-->	jxv (~jxv@cpe-108-185-163-38.socal.res.rr.com) has joined ##c++
2016-09-21 16:08:46	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-21 16:09:17	<--	jamlee (~Mutter@223.104.10.118) has quit (Quit: Mutter: http://www.mutterirc.com)
2016-09-21 16:10:06	<--	jxv (~jxv@cpe-108-185-163-38.socal.res.rr.com) has quit (Read error: Connection reset by peer)
2016-09-21 16:10:09	-->	xaxxon (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has joined ##c++
2016-09-21 16:10:47	-->	FreeBirdLjj (~freebirdl@202.119.46.192) has joined ##c++
2016-09-21 16:10:51	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-21 16:11:06	-->	Vingador (~quassel@177.40.255.237) has joined ##c++
2016-09-21 16:11:29	<--	xaxxon (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has quit (Client Quit)
2016-09-21 16:12:42	-->	zwliew (uid161395@gateway/web/irccloud.com/x-lmgdfgdxwvvobrov) has joined ##c++
2016-09-21 16:13:59	-->	The_CooIest (~Arthur_Li@bzq-84-108-121-56.cablep.bezeqint.net) has joined ##c++
2016-09-21 16:14:03	<--	Vingador (~quassel@177.40.255.237) has quit (Remote host closed the connection)
2016-09-21 16:16:03	-->	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has joined ##c++
2016-09-21 16:16:11	<--	The_Coolest (~Arthur_Li@bzq-84-108-121-56.cablep.bezeqint.net) has quit (Ping timeout: 265 seconds)
2016-09-21 16:16:52	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-21 16:17:09	-->	Immune (~Immune@173.55.30.110) has joined ##c++
2016-09-21 16:17:33	-->	Ben2560 (~quassel@137.154.246.226) has joined ##c++
2016-09-21 16:17:46	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 16:19:07	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-21 16:20:07	<--	kebabspion (~snowing@c-185-113-99-182.cust.bredband2.com) has quit (Quit: Now, I am become Death, the destroyer of worlds)
2016-09-21 16:20:07		[16:20]
2016-09-21 16:20:09	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 276 seconds)
2016-09-21 16:20:32	-->	cplusplus_ (~cplusplus@NORDSTROM.edge6.LosAngeles1.Level3.net) has joined ##c++
2016-09-21 16:21:55	--	cplusplus_ is now known as GordinhoColecion
2016-09-21 16:22:20	--	GordinhoColecion is now known as GordinhoCanal3
2016-09-21 16:22:40	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-21 16:23:24	<--	LauraGaucha (~cplusplus@h-67-102-175-59.sttn.wa.globalcapacity.com) has quit (Ping timeout: 276 seconds)
2016-09-21 16:24:43	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Disconnected by services)
2016-09-21 16:24:54	--	fogb is now known as fogbank
2016-09-21 16:25:13	-->	iBleizo (~iBleizo@unaffiliated/ibleizo) has joined ##c++
2016-09-21 16:25:23	-->	jamlee (~Mutter@223.104.10.118) has joined ##c++
2016-09-21 16:26:25	<--	iBleizo (~iBleizo@unaffiliated/ibleizo) has quit (Client Quit)
2016-09-21 16:26:49	<--	ap4y (~user@210.54.39.82) has quit (Remote host closed the connection)
2016-09-21 16:26:57	-->	iBleizo (~iBleizo@unaffiliated/ibleizo) has joined ##c++
2016-09-21 16:29:43	<--	Vincent7 (~NoIdent@dslb-088-077-121-042.088.077.pools.vodafone-ip.de) has quit (Quit: Leaving)
2016-09-21 16:29:50	<--	pmercado (~pmercado@186-104-131-57.baf.movistar.cl) has quit (Quit: Konversation terminated!)
2016-09-21 16:29:58	-->	ryxai (~Jonathan@pool-72-89-246-128.nycmny.fios.verizon.net) has joined ##c++
2016-09-21 16:32:03	<--	gist (~jack@p5790769A.dip0.t-ipconnect.de) has quit (Ping timeout: 265 seconds)
2016-09-21 16:32:12	<--	jamlee (~Mutter@223.104.10.118) has quit (Remote host closed the connection)
2016-09-21 16:32:33	 *	GordinhoCanal3 coleciona jogos
2016-09-21 16:33:04	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-21 16:33:10	-->	Stanley00 (~Stanley_0@unaffiliated/stanley00) has joined ##c++
2016-09-21 16:33:27	-->	UnlikeSuika_mobi (~UnlikeSui@147.47.142.48) has joined ##c++
2016-09-21 16:33:42	<--	UnripeSuica_mobi (~UnlikeSui@147.47.142.48) has quit (Read error: Connection reset by peer)
2016-09-21 16:33:48	<--	UnlikeSuika_mobi (~UnlikeSui@147.47.142.48) has quit (Read error: Connection reset by peer)
2016-09-21 16:33:52	-->	UnripeSuica_mobi (~UnlikeSui@147.47.142.48) has joined ##c++
2016-09-21 16:33:53	<--	P1RATEZ (piratez@unaffiliated/p1ratez) has quit (Quit: superresistant bugs, no antibiotics...must be java.)
2016-09-21 16:33:55	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 250 seconds)
2016-09-21 16:36:23	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 16:36:23		[16:36]
2016-09-21 16:36:39	<--	lh_not_bot (~lh_bot@114.215.147.2) has quit (Quit: leaving)
2016-09-21 16:38:15	<--	Ben2560 (~quassel@137.154.246.226) has quit (Ping timeout: 244 seconds)
2016-09-21 16:41:46	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-21 16:42:38	-->	Mnkras (~Mnkras@concrete5/781/Mnkras) has joined ##c++
2016-09-21 16:44:13	-->	UnlikeSuika (~UnlikeSui@147.47.194.106) has joined ##c++
2016-09-21 16:44:26	-->	Kn|t3 (~agarwalvi@49.207.53.8) has joined ##c++
2016-09-21 16:46:15	-->	lh_not_bot (~lh_bot@114.215.147.2) has joined ##c++
2016-09-21 16:46:27	<--	lh_not_bot (~lh_bot@114.215.147.2) has quit (Client Quit)
2016-09-21 16:47:07	-->	lh_not_bot (~lh_bot@114.215.147.2) has joined ##c++
2016-09-21 16:47:11	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-21 16:48:13	-->	andyhuzhill (~Thunderbi@14.23.45.178) has joined ##c++
2016-09-21 16:48:15	<--	snover (~Adium@unaffiliated/snover) has quit (Quit: Leaving.)
2016-09-21 16:49:46	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 248 seconds)
2016-09-21 16:51:08	-->	Haruno (~Haruno@197.226.166.96) has joined ##c++
2016-09-21 16:51:08	<--	Haruno (~Haruno@197.226.166.96) has quit (Changing host)
2016-09-21 16:51:08	-->	Haruno (~Haruno@unaffiliated/haruno) has joined ##c++
2016-09-21 16:51:46	<--	hexagoxel (~hexagoxel@p200300798F20DD00021E33FFFE2231E9.dip0.t-ipconnect.de) has quit (Ping timeout: 255 seconds)
2016-09-21 16:51:46		[16:51]
2016-09-21 16:52:26	<--	chachasmooth (~chachasmo@unaffiliated/chachasmooth) has quit (Ping timeout: 265 seconds)
2016-09-21 16:52:52	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 16:52:59	<--	andyhuzhill (~Thunderbi@14.23.45.178) has quit (Ping timeout: 250 seconds)
2016-09-21 16:54:51	-->	chachasmooth (~chachasmo@unaffiliated/chachasmooth) has joined ##c++
2016-09-21 16:58:07	-->	andyhuzhill (~Thunderbi@14.23.45.178) has joined ##c++
2016-09-21 16:58:25	-->	hexagoxel (~hexagoxel@p5B29A2A3.dip0.t-ipconnect.de) has joined ##c++
2016-09-21 17:00:01	-->	zap0 (~moofy@14-201-222-143.tpgi.com.au) has joined ##c++
2016-09-21 17:00:36	<--	elnormous (~elnormous@87.110.129.37) has quit (Remote host closed the connection)
2016-09-21 17:01:28	<--	Kn|t3 (~agarwalvi@49.207.53.8) has quit (Quit: Kn|t3)
2016-09-21 17:02:01	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 248 seconds)
2016-09-21 17:02:01	GordinhoCanal3	they've had a very awesome presentation of compile time reflection techniques
2016-09-21 17:03:58	-->	enk0 (~enk0@cpe-76-168-177-40.socal.res.rr.com) has joined ##c++
2016-09-21 17:04:08	-->	Kn|t3 (~agarwalvi@49.207.53.8) has joined ##c++
2016-09-21 17:05:59	-->	Crazylemon64 (~Crazylemo@207.62.170.215) has joined ##c++
2016-09-21 17:07:02	--	GordinhoCanal3 is now known as Cppcon2016
2016-09-21 17:07:02		[17:07]
2016-09-21 17:07:15	vralphv	oh that they
2016-09-21 17:07:15	Cppcon2016	:)
2016-09-21 17:08:54	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 17:09:43	-->	AndyBotwin (~Gustavo@unaffiliated/andybotwin) has joined ##c++
2016-09-21 17:11:02	<--	vitimiti (~vitimiti@unaffiliated/vitimiti) has quit (Quit: Meows out)
2016-09-21 17:12:01	<--	jbud (~jbud@ip-24-54-73-229.user.start.ca) has quit (Quit: leaving)
2016-09-21 17:12:12	Cppcon2016	still deciding to go to ConcepTS presentation or to the lightning talks
2016-09-21 17:13:56	-->	Fredald (32b81c2b@gateway/web/freenode/ip.50.184.28.43) has joined ##c++
2016-09-21 17:14:43	<--	Fredald (32b81c2b@gateway/web/freenode/ip.50.184.28.43) has quit (Client Quit)
2016-09-21 17:15:13	-->	FredDilb (32b81c2b@gateway/web/freenode/ip.50.184.28.43) has joined ##c++
2016-09-21 17:15:45	<--	FredDilb (32b81c2b@gateway/web/freenode/ip.50.184.28.43) has quit (Client Quit)
2016-09-21 17:16:03	somaReverse	Hi, is it normal that a thread of gcc compilation takes 1GB memory?
2016-09-21 17:16:13	-->	asd_ (32b81c2b@gateway/web/freenode/ip.50.184.28.43) has joined ##c++
2016-09-21 17:17:15	<--	asd_ (32b81c2b@gateway/web/freenode/ip.50.184.28.43) has quit (Client Quit)
2016-09-21 17:17:41	-->	heyushoosh (32b81c2b@gateway/web/freenode/ip.50.184.28.43) has joined ##c++
2016-09-21 17:18:17	introom	I'd like to use all the xxbits (goodbit, badbit) from the class ios_base without the prefix ios_base::,
2016-09-21 17:18:26	-->	jxv (~jxv@cpe-108-185-163-38.socal.res.rr.com) has joined ##c++
2016-09-21 17:18:32	introom	using namespace ios_base; fails because ios_base is not a ns
2016-09-21 17:18:53	-->	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has joined ##c++
2016-09-21 17:19:03	<--	heyushoosh (32b81c2b@gateway/web/freenode/ip.50.184.28.43) has quit (Client Quit)
2016-09-21 17:19:45	-->	ScorpionJack (~Scorpion@unaffiliated/scorpionjack) has joined ##c++
2016-09-21 17:19:59	-->	FredDilb (32b81c2b@gateway/web/freenode/ip.50.184.28.43) has joined ##c++
2016-09-21 17:20:09	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 248 seconds)
2016-09-21 17:20:42	FredDilb	hello
2016-09-21 17:20:50	vralphv	hi
2016-09-21 17:20:55	<--	Cppcon2016 (~cplusplus@NORDSTROM.edge6.LosAngeles1.Level3.net) has quit (Quit: This computer has gone to sleep)
2016-09-21 17:21:40	FredDilb	I came in here looking for some help on a homework assignment. I'm not looking for the answer for the entire assignment but just a small problem within
2016-09-21 17:22:45	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 17:22:45		[17:22]
2016-09-21 17:22:57	FredDilb	I'm having problems copying words into a 2d character array
2016-09-21 17:23:36	-->	JoshS (~jshjsh@172.56.39.52) has joined ##c++
2016-09-21 17:23:41	<--	jxv (~jxv@cpe-108-185-163-38.socal.res.rr.com) has quit (Read error: Connection reset by peer)
2016-09-21 17:23:42	FredDilb	basically I'm inputting a file with lines of text in it and taking each word and testing if it's unique and then setting it in a 2d character array with each row being a unique word
2016-09-21 17:24:33	-->	k_sze[work] (daff8506@gateway/web/freenode/ip.218.255.133.6) has joined ##c++
2016-09-21 17:24:42	vralphv	are you allowed std::string?
2016-09-21 17:25:06	FredDilb	I'm not supposed to use strings for this assignment but I'm allowed to use some built-in string functions
2016-09-21 17:25:14	FredDilb	like strtok(), strcmp(), etc.
2016-09-21 17:26:12	vralphv	maybe a 1d array of char pointers.
2016-09-21 17:27:26	FredDilb	The problem I'm having is that I'm only copying duplicate words into the array while I'm trying to copy unique words and the ones I'm trying to identify as duplicates are not showing up consistently. Only a few words are registering as a duplicate word using strcomp
2016-09-21 17:28:13	FredDilb	Oops not only copying duplicates into the array. I'm copying the right words, but it seems as though the current line is being cut off before it ends and not all of the unique words are being put in the 2d array.
2016-09-21 17:28:31	FredDilb	So I'm copying part of the unique words from each individual line
2016-09-21 17:29:03	FredDilb	Seems like the 2nd time I run into the word "the" the current line stops and starts on the next line and keeps copying unique words into the array.
2016-09-21 17:29:15	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-21 17:30:29	vralphv	not sure how you can fix.
2016-09-21 17:30:50	<--	arescorpio (~arescorpi@132-219-114-200.fibertel.com.ar) has quit (Quit: Leaving.)
2016-09-21 17:31:19	FredDilb	the first line looks like this: the quick brown fox jumps over the lazy dog.
2016-09-21 17:31:45	FredDilb	it is copying all of the words up to the 2nd "the" in the string and starts at the next line ignoring the last few words
2016-09-21 17:31:46	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 17:32:33	vralphv	must be a loop problem
2016-09-21 17:32:33	<--	ejnahc (~hello@chan.je) has quit (Ping timeout: 265 seconds)
2016-09-21 17:32:37	<--	c0le (~c0le@59.99.251.45) has quit (Quit: "This is the end.. My beautiful friend.. The end.")
2016-09-21 17:32:43	<--	Guest60622 (~fnord@hieristdas.internetzuen.de) has quit (Ping timeout: 255 seconds)
2016-09-21 17:32:58	-->	ejnahc (~hello@chan.je) has joined ##c++
2016-09-21 17:34:07	<--	Akkarin (~Akkarin@bnc.basinmc.org) has quit (Quit: ZNC - 1.6.0 - http://znc.in)
2016-09-21 17:35:01	-->	skweek (~skweek@68-200-146-225.res.bhn.net) has joined ##c++
2016-09-21 17:35:12	-->	cbdev (~fnord@hieristdas.internetzuen.de) has joined ##c++
2016-09-21 17:35:15	-->	nonroot_ (~nonroot@cpe-76-169-22-126.socal.res.rr.com) has joined ##c++
2016-09-21 17:35:19	-->	LordAkkarin (~Akkarin@bnc.basinmc.org) has joined ##c++
2016-09-21 17:35:25	-->	vdamewood (~vdamewood@unaffiliated/vdamewood) has joined ##c++
2016-09-21 17:35:43	--	LordAkkarin is now known as Guest73275
2016-09-21 17:37:15	-->	wget (~wget@unaffiliated/wget) has joined ##c++
2016-09-21 17:37:33	<--	MoziM (~nonroot@cpe-76-169-22-126.socal.res.rr.com) has quit (Ping timeout: 272 seconds)
2016-09-21 17:38:45	<--	Guest73275 (~Akkarin@bnc.basinmc.org) has left ##c++
2016-09-21 17:38:45		[17:38]
2016-09-21 17:39:51	<--	Divega (~Divega@99-22-148-42.lightspeed.rcsntx.sbcglobal.net) has quit (Read error: Connection reset by peer)
2016-09-21 17:41:17	-->	jxv (~jxv@cpe-108-185-163-38.socal.res.rr.com) has joined ##c++
2016-09-21 17:41:57	<--	hosified (~hosified@unaffiliated/hosified) has quit (Quit: Leaving)
2016-09-21 17:42:54	<--	systemfault (~rcyr@unaffiliated/rcyr) has quit (Quit: Bye!)
2016-09-21 17:43:42	<--	UnlikeSuika (~UnlikeSui@147.47.194.106) has quit (Ping timeout: 244 seconds)
2016-09-21 17:45:36	-->	UnlikeSuika_mobi (~UnlikeSui@223.33.165.124) has joined ##c++
2016-09-21 17:45:49	<--	UnlikeSuika_mobi (~UnlikeSui@223.33.165.124) has quit (Client Quit)
2016-09-21 17:45:54	<--	UnripeSuica_mobi (~UnlikeSui@147.47.142.48) has quit (Read error: Connection reset by peer)
2016-09-21 17:46:01	-->	UnlikeSuika_mobi (~UnlikeSui@147.47.142.48) has joined ##c++
2016-09-21 17:46:07	-->	akkarin_ (~Akkarin@bnc.basinmc.org) has joined ##c++
2016-09-21 17:46:46	<--	Jitta (~Jitta@ip5b4135e8.dynamic.kabel-deutschland.de) has quit
2016-09-21 17:46:57	--	akkarin_ is now known as Akkarin
2016-09-21 17:48:30	-->	UnripeSuica_mobi (~UnlikeSui@223.33.165.124) has joined ##c++
2016-09-21 17:48:52	-->	fedepad (~fedepad@p4FE10D52.dip0.t-ipconnect.de) has joined ##c++
2016-09-21 17:49:08	<--	UnripeSuica_mobi (~UnlikeSui@223.33.165.124) has quit (Client Quit)
2016-09-21 17:49:21	-->	UnripeSuica_mobi (~UnlikeSui@147.47.142.48) has joined ##c++
2016-09-21 17:49:36	-->	TheVoid (~void@unaffiliated/thevoid) has joined ##c++
2016-09-21 17:50:25	<--	UnlikeSuika_mobi (~UnlikeSui@147.47.142.48) has quit (Ping timeout: 244 seconds)
2016-09-21 17:50:26	-->	UnrightSuika_mob (~UnlikeSui@223.33.165.124) has joined ##c++
2016-09-21 17:53:49	<--	fedepad (~fedepad@p4FE10D52.dip0.t-ipconnect.de) has quit (Ping timeout: 265 seconds)
2016-09-21 17:53:49		[17:53]
2016-09-21 17:54:24	<--	UnripeSuica_mobi (~UnlikeSui@147.47.142.48) has quit (Ping timeout: 276 seconds)
2016-09-21 17:56:37	<--	UnrightSuika_mob (~UnlikeSui@223.33.165.124) has quit (Quit: RIP)
2016-09-21 17:56:56	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-21 17:56:59	-->	rsampaio_ (~rodrigo@2601:643:8200:a3f0::f927) has joined ##c++
2016-09-21 17:56:59	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 17:57:11	<--	Sculptor (~Sculptor@cable-24-135-26-151.dynamic.sbb.rs) has quit (Ping timeout: 272 seconds)
2016-09-21 17:57:37	<--	SecondForm_Glenn (~Thunderbi@97-102-42-24.res.bhn.net) has quit (Ping timeout: 265 seconds)
2016-09-21 17:59:08	FredDilb	would you mind taking a look at it and see if there are any glaring problems?
2016-09-21 17:59:53	 *	lh_mouse is glaring.
2016-09-21 18:00:59	-->	elnormous (~elnormous@87.110.129.37) has joined ##c++
2016-09-21 18:01:04	<--	FreeBirdLjj (~freebirdl@202.119.46.192) has quit (Remote host closed the connection)
2016-09-21 18:01:44	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-21 18:02:01	-->	UnlikeSuika_mobi (~UnlikeSui@1.211.70.98) has joined ##c++
2016-09-21 18:02:28	<--	allen29 (~all@unaffiliated/allen29) has quit (Quit: Leaving)
2016-09-21 18:03:51	-->	Sculptor (~Sculptor@cable-24-135-26-151.dynamic.sbb.rs) has joined ##c++
2016-09-21 18:06:18	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-21 18:07:05	<--	skweek (~skweek@68-200-146-225.res.bhn.net) has quit (Ping timeout: 240 seconds)
2016-09-21 18:09:41	-->	silent_freak (672b7061@gateway/web/freenode/ip.103.43.112.97) has joined ##c++
2016-09-21 18:09:41		[18:09]
2016-09-21 18:11:11	<--	vralphv (~vralp@d137-186-58-40.abhsia.telus.net) has quit (Quit: leaving)
2016-09-21 18:17:00		[18:11]
2016-09-21 18:59:08	--	irc: disconnected from server
2016-09-21 18:59:08		[18:59]
2016-09-21 19:06:58	-->	alyptik (~alyptik@unaffiliated/alyptik) has joined ##c++
2016-09-21 19:06:58		[19:06]
2016-09-21 19:06:58	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || https://isocpp.org/faq || pastes: http://melpon.org/wandbox"
2016-09-21 19:06:58	--	Topic set by V-ille (~ville@81-175-149-170.bb.dnainternet.fi) on Fri, 18 Sep 2015 07:13:01
2016-09-21 19:06:58	--	Channel ##c++: 947 nicks (0 ops, 0 voices, 947 normals)
2016-09-21 19:06:58	***	Buffer Playback...
2016-09-21 19:06:58	xaxxon	[00:50:49] seems likely.   what is confusing you? [00:50:49]
2016-09-21 19:06:58	xaxxon	[00:52:03] merc [00:52:03]
2016-09-21 19:06:58	xaxxon	[00:52:04] merced [00:52:04]
2016-09-21 19:06:58	merced	[00:53:08] so my function's returning either an empty string or an older copy of an id object that we have to pass by reference for some silly reason. looking through the debugger, the field's set to something different than what the functions returning [00:53:08]
2016-09-21 19:06:58	merced	[00:56:12] this is just a get function too, so i'm wondering why the method being marked const would cause it to do this behavior [00:56:12]
2016-09-21 19:06:58	xaxxon	[00:59:19] merced:  a const method is simply a method allowed to be called on a const object.   And inside that const method, all the data members of the object are const [00:59:19]
2016-09-21 19:06:58	LauraGaucha	[01:03:31] now I need to choose between lightning talks and ConcepTS teaching [01:03:31]
2016-09-21 19:06:58	merced	[01:04:49] i'll just blame it on microsoft [01:04:49]
2016-09-21 19:06:58	LauraGaucha	[01:08:10] lots of awesome ideas for C++20 [01:08:10]
2016-09-21 19:06:58	wolfcub	[01:12:39] 7.3.3.6 a using-declaration shall not name a namespace [01:12:39]
2016-09-21 19:06:58	wolfcub	[01:13:03] 7.3.3.11 for a using-declaration that names a namespace [01:13:03]
2016-09-21 19:06:58	wolfcub	[01:13:29] i know it doesnt mean the same thing, but to use the same wording is a bit confusing [01:13:29]
2016-09-21 19:06:58	funfunctor	[01:29:42] Hi, what do these reordering warnings mean? https://paste.fedoraproject.org/432315/45076341/ [01:29:42]
2016-09-21 19:06:58	LauraGaucha	[01:31:45] funfunctor, aside your terrible taste for prefixes, that means they are declared in the wrong order they are initialized in the constructor [01:31:45]
2016-09-21 19:06:58	LauraGaucha	[01:32:13] you need to declare and initialize them in the same order [01:32:13]
2016-09-21 19:06:58	josef_k	[02:02:24] LauraGaucha: Are you at CppCon? [02:02:24]
2016-09-21 19:06:58	LauraGaucha	[02:03:23] yes [02:03:23]
2016-09-21 19:06:58	LauraGaucha	[02:03:34] fun fun fun [02:03:34]
2016-09-21 19:06:58	LauraGaucha	[02:03:44] C++ is BIGGER than anyone can imagine [02:03:44]
2016-09-21 19:06:58	 *	LauraGaucha [02:03:49] is pretty excited [02:03:49]
2016-09-21 19:06:58	josef_k	[02:04:51] Have they said anything about how quickly the recordings will go online? [02:04:51]
2016-09-21 19:06:58	LauraGaucha	[02:05:56] everyone asks that [02:05:56]
2016-09-21 19:06:58	LauraGaucha	[02:05:59] around one month :) [02:05:59]
2016-09-21 19:06:58	 *	GordinhoCanal3 [02:32:33] coleciona jogos [02:32:33]
2016-09-21 19:06:58	GordinhoCanal3	[03:02:01] they've had a very awesome presentation of compile time reflection techniques [03:02:01]
2016-09-21 19:06:58	vralphv	[03:07:15] oh that they [03:07:15]
2016-09-21 19:06:58	Cppcon2016	[03:07:15] :) [03:07:15]
2016-09-21 19:06:58	Cppcon2016	[03:12:12] still deciding to go to ConcepTS presentation or to the lightning talks [03:12:12]
2016-09-21 19:06:58	somaReverse	[03:16:03] Hi, is it normal that a thread of gcc compilation takes 1GB memory? [03:16:03]
2016-09-21 19:06:58	introom	[03:18:17] I'd like to use all the xxbits (goodbit, badbit) from the class ios_base without the prefix ios_base::, [03:18:17]
2016-09-21 19:06:58	introom	[03:18:32] using namespace ios_base; fails because ios_base is not a ns [03:18:32]
2016-09-21 19:06:58	FredDilb	[03:20:42] hello [03:20:42]
2016-09-21 19:06:58	vralphv	[03:20:50] hi [03:20:50]
2016-09-21 19:06:58	FredDilb	[03:21:40] I came in here looking for some help on a homework assignment. I'm not looking for the answer for the entire assignment but just a small problem within [03:21:40]
2016-09-21 19:06:58	FredDilb	[03:22:57] I'm having problems copying words into a 2d character array [03:22:57]
2016-09-21 19:06:58	FredDilb	[03:23:42] basically I'm inputting a file with lines of text in it and taking each word and testing if it's unique and then setting it in a 2d character array with each row being a unique word [03:23:42]
2016-09-21 19:06:58	vralphv	[03:24:42] are you allowed std::string? [03:24:42]
2016-09-21 19:06:58	FredDilb	[03:25:06] I'm not supposed to use strings for this assignment but I'm allowed to use some built-in string functions [03:25:06]
2016-09-21 19:06:58	FredDilb	[03:25:14] like strtok(), strcmp(), etc. [03:25:14]
2016-09-21 19:06:58	vralphv	[03:26:12] maybe a 1d array of char pointers. [03:26:12]
2016-09-21 19:06:58	FredDilb	[03:27:26] The problem I'm having is that I'm only copying duplicate words into the array while I'm trying to copy unique words and the ones I'm trying to identify as duplicates are not showing up consistently. Only a few words are registering as a duplicate word using strcomp [03:27:26]
2016-09-21 19:06:58	FredDilb	[03:28:13] Oops not only copying duplicates into the array. I'm copying the right words, but it seems as though the current line is being cut off before it ends and not all of the unique words are being put in the 2d array. [03:28:13]
2016-09-21 19:06:58	FredDilb	[03:28:31] So I'm copying part of the unique words from each individual line [03:28:31]
2016-09-21 19:06:58	FredDilb	[03:29:03] Seems like the 2nd time I run into the word "the" the current line stops and starts on the next line and keeps copying unique words into the array. [03:29:03]
2016-09-21 19:06:58	vralphv	[03:30:29] not sure how you can fix. [03:30:29]
2016-09-21 19:06:58	FredDilb	[03:31:19] the first line looks like this: the quick brown fox jumps over the lazy dog. [03:31:19]
2016-09-21 19:06:58	FredDilb	[03:31:45] it is copying all of the words up to the 2nd "the" in the string and starts at the next line ignoring the last few words [03:31:45]
2016-09-21 19:06:58	vralphv	[03:32:33] must be a loop problem [03:32:33]
2016-09-21 19:06:58	FredDilb	[03:59:08] would you mind taking a look at it and see if there are any glaring problems? [03:59:08]
2016-09-21 19:06:58	 *	lh_mouse [03:59:53] is glaring. [03:59:53]
2016-09-21 19:06:58	***	Playback Complete.
2016-09-21 19:07:04	<--	LetoThe2nd (~jd@s15387740.onlinehome-server.info) has quit (Changing host)
2016-09-21 19:07:04	-->	LetoThe2nd (~jd@unaffiliated/letothe2nd) has joined ##c++
2016-09-21 19:07:04	-->	DigiByteDev (~JT2@n218250011174.netvigator.com) has joined ##c++
2016-09-21 19:07:16	--	Channel created on Fri, 14 Sep 2001 17:15:35
2016-09-21 19:08:25	<--	LightYagami_ (~CanIHazMe@unaffiliated/canihazmemecats) has quit (Ping timeout: 248 seconds)
2016-09-21 19:08:53	zap0	matkatmusic, did you get MIDI working ?
2016-09-21 19:10:27	-->	Kn|t3 (~agarwalvi@49.207.53.8) has joined ##c++
2016-09-21 19:10:31	-->	DigiByteDev_ (~JT2@31.6.57.114) has joined ##c++
2016-09-21 19:10:40	<--	funfunctor (~edward@promim2.lnk.telstra.net) has quit (Ping timeout: 265 seconds)
2016-09-21 19:11:37	<--	DigiByteDev (~JT2@n218250011174.netvigator.com) has quit (Ping timeout: 248 seconds)
2016-09-21 19:11:38	--	DigiByteDev_ is now known as DigiByteDev
2016-09-21 19:12:49	-->	Adbray (~Adbtay@2001:470:1f11:def:79a9:66d3:ec47:c860) has joined ##c++
2016-09-21 19:15:05	<--	DigiByteDev (~JT2@31.6.57.114) has quit (Client Quit)
2016-09-21 19:15:14	-->	elnormous (~elnormous@87.110.129.37) has joined ##c++
2016-09-21 19:16:17	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 19:16:21	<--	JoshS (~jshjsh@172.56.39.52) has quit (Read error: Connection reset by peer)
2016-09-21 19:16:32	-->	JoshS (~jshjsh@172.56.39.52) has joined ##c++
2016-09-21 19:17:01	kstar	Can I modify the container in a range-for loop without disastrous consequences?
2016-09-21 19:17:22	Kaslai	No.
2016-09-21 19:17:29	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 240 seconds)
2016-09-21 19:17:52	kstar	Cool.
2016-09-21 19:18:17	Kaslai	Range based for loops operate on the iterator level. Modifying the container itself invalidates any outstanding iterators.
2016-09-21 19:18:41	w3z	depends on the container type
2016-09-21 19:19:08	-->	fedepad (~fedepad@p4FE10D52.dip0.t-ipconnect.de) has joined ##c++
2016-09-21 19:19:30	Kaslai	Of course you can modify the contents that each iterator is referring to, but modifying the length of say, a vector, is bad.
2016-09-21 19:19:49	kstar	Right.
2016-09-21 19:19:53	<--	dj_pi (~dj@c-73-191-212-56.hsd1.mi.comcast.net) has quit (Ping timeout: 250 seconds)
2016-09-21 19:20:13	-->	systemfault (~rcyr@unaffiliated/rcyr) has joined ##c++
2016-09-21 19:21:09	-->	mss_cyclist (~MSe@89-250-189-210.tangos.nl) has joined ##c++
2016-09-21 19:21:16	Kaslai	w3z: just out of curiosity, which containers, when modified, don't invalidate iterators? It's just been a "never do" in my book, so I don't know.
2016-09-21 19:22:29	<--	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has quit (Quit: Leaving.)
2016-09-21 19:22:29		[19:22]
2016-09-21 19:22:58	<--	Khaotic (Khaotic@unaffiliated/khaotic) has quit (Ping timeout: 255 seconds)
2016-09-21 19:23:03	w3z	list, set/map
2016-09-21 19:23:19	<--	ashkan (~ashkan@unaffiliated/askywalker/x-0000002) has quit (Ping timeout: 272 seconds)
2016-09-21 19:24:17	Kaslai	Okay, so the ones that are essentially expected to be implemented using linked nodes?
2016-09-21 19:25:10	Kaslai	I suppose that makes sense. I didn't know if the standard made any guarantees in that regard. Thanks.
2016-09-21 19:25:46	w3z	unordered_set/map, unless the container grows past max_load_factor*bucket_count, had to look that one up
2016-09-21 19:25:54	w3z	{list<int> L{1}; size_t N=5; for(auto x:L) if(N--) L.push_back(N); cout<<L;}
2016-09-21 19:25:55	geordi	{1, 4, 3, 2, 1, 0}
2016-09-21 19:26:41	w3z	the standard makes guarantees about the stability of iterators of the different containers, yes
2016-09-21 19:27:24	w3z	anyway, its still good advice not to modify a container while iterating over it in general
2016-09-21 19:27:40	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-21 19:27:41	-->	Khaotic (Khaotic@unaffiliated/khaotic) has joined ##c++
2016-09-21 19:27:50	-->	ashkan (~ashkan@unaffiliated/askywalker/x-0000002) has joined ##c++
2016-09-21 19:27:56	-->	LauraGaucha (~cplusplus@c-98-225-36-13.hsd1.wa.comcast.net) has joined ##c++
2016-09-21 19:28:12	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 19:29:26	<--	yeticry (~yeticry@183.160.5.162) has quit (Ping timeout: 260 seconds)
2016-09-21 19:30:28	-->	dusted (~dusted@77.68.146.169) has joined ##c++
2016-09-21 19:31:21	<--	soulz (~soulz@unaffiliated/soulz) has quit (Quit: leaving)
2016-09-21 19:31:26	-->	yeticry (~yeticry@60.168.40.152) has joined ##c++
2016-09-21 19:31:33	-->	zwoof (zwoof@modemcable076.238-20-96.mc.videotron.ca) has joined ##c++
2016-09-21 19:32:18	<--	Leovale (~Leovale@45.72.141.66) has quit (Read error: Connection reset by peer)
2016-09-21 19:33:15	-->	bocaneri (~bocaneri@about/linux/staff/sauvin) has joined ##c++
2016-09-21 19:35:11	-->	t0by (~t0by@host123-244-dynamic.25-79-r.retail.telecomitalia.it) has joined ##c++
2016-09-21 19:35:16	<--	t0by (~t0by@host123-244-dynamic.25-79-r.retail.telecomitalia.it) has quit (Remote host closed the connection)
2016-09-21 19:36:11	-->	UnlikeSuika_mobi (~UnlikeSui@223.33.165.124) has joined ##c++
2016-09-21 19:36:21	<--	UnlikeSuika_mobi (~UnlikeSui@223.33.165.124) has quit (Client Quit)
2016-09-21 19:36:26	<--	UnripeSuica_mobi (~UnlikeSui@147.47.143.22) has quit (Read error: Connection reset by peer)
2016-09-21 19:37:06	-->	zwliew (uid161395@gateway/web/irccloud.com/x-qduysqkvhkbmguzk) has joined ##c++
2016-09-21 19:37:13	<--	UnlikeSuika (~UnlikeSui@147.46.113.63) has quit (Ping timeout: 250 seconds)
2016-09-21 19:37:38	-->	UnlikeSuika_mobi (~UnlikeSui@223.33.165.124) has joined ##c++
2016-09-21 19:37:38		[19:37]
2016-09-21 19:37:46	<--	UnlikeSuika_mobi (~UnlikeSui@223.33.165.124) has quit (Client Quit)
2016-09-21 19:38:11	-->	irrenhaus3 (~xenon@HSI-KBW-046-005-253-088.hsi8.kabel-badenwuerttemberg.de) has joined ##c++
2016-09-21 19:39:20	-->	soulz (~soulz@unaffiliated/soulz) has joined ##c++
2016-09-21 19:39:29	<--	Kn|t3 (~agarwalvi@49.207.53.8) has quit (Quit: Kn|t3)
2016-09-21 19:39:46	<--	Markow (~Markow@176.122.215.103) has quit (Remote host closed the connection)
2016-09-21 19:40:54	-->	UnlikeSuika_mobi (~UnlikeSui@223.33.165.124) has joined ##c++
2016-09-21 19:42:00	-->	Kn|t3 (~agarwalvi@49.207.53.8) has joined ##c++
2016-09-21 19:44:17	-->	kaffeetrauma (~Thunderbi@n37.informatik.fh-dortmund.de) has joined ##c++
2016-09-21 19:45:17	-->	Paradisee (~quassel@93-47-195-64.ip114.fastwebnet.it) has joined ##c++
2016-09-21 19:45:30	<--	LauraGaucha (~cplusplus@c-98-225-36-13.hsd1.wa.comcast.net) has quit (Quit: This computer has gone to sleep)
2016-09-21 19:45:33	lh_mouse	geordi, { list<int> l{0,1,2,3,4,5,6,7,8,9}; for(auto next = l.begin(), cur = next; (next != l.end()) && (++next, true); cur = next){ if(*cur % 3 == 0){ cout <<"erasing " <<*cur <<", "; l.erase(cur); } } cout <<"l now contains: " <<l; }
2016-09-21 19:45:34	geordi	erasing 0, erasing 3, erasing 6, erasing 9, l now contains: {1, 2, 4, 5, 7, 8}
2016-09-21 19:45:48	-->	jamesaxl (~jamesaxl@176.98.129.195) has joined ##c++
2016-09-21 19:46:02	-->	LauraGaucha (~cplusplus@c-98-225-36-13.hsd1.wa.comcast.net) has joined ##c++
2016-09-21 19:46:51	lh_mouse	There are a number of solutions for modifying an std::list, std::set or std::map while iterating over it.
2016-09-21 19:46:51	<--	plee (~kurt@89.10.219.180) has quit (Read error: Connection reset by peer)
2016-09-21 19:47:15	-->	plee (~kurt@89.10.219.180) has joined ##c++
2016-09-21 19:48:11	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 19:48:32	<--	LauraGaucha (~cplusplus@c-98-225-36-13.hsd1.wa.comcast.net) has quit (Client Quit)
2016-09-21 19:48:58	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-21 19:49:46	<--	elnormous (~elnormous@87.110.129.37) has quit (Ping timeout: 265 seconds)
2016-09-21 19:50:10	josef_k	What's the twitter hashtag for CppCon?  Just #cppcon?
2016-09-21 19:51:26	<--	UnlikeSuika_mobi (~UnlikeSui@223.33.165.124) has quit (Quit: RIP)
2016-09-21 19:51:32	-->	orbiter (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has joined ##c++
2016-09-21 19:51:53	-->	UnlikeSuika_mobi (~UnlikeSui@1.210.122.72) has joined ##c++
2016-09-21 19:52:09	<--	orbiter (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has quit (Read error: Connection reset by peer)
2016-09-21 19:52:48	-->	calincru_ (~calin@c-73-231-85-3.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 19:52:48		[19:52]
2016-09-21 19:53:21	<--	FireRogue (~fireRogue@213.57.109.136) has quit (Ping timeout: 276 seconds)
2016-09-21 19:55:15	<--	peterhu (~peterhuen@segfault.guru) has quit (Quit: leaving)
2016-09-21 19:55:53	<--	MulleDK19 (MulleDK19@unaffiliated/mulledk19) has quit (Ping timeout: 248 seconds)
2016-09-21 19:56:50	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-21 19:57:39	-->	ambro718 (~ambro@unaffiliated/ambro718) has joined ##c++
2016-09-21 19:58:31	<--	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has quit (Ping timeout: 265 seconds)
2016-09-21 19:59:11	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 19:59:25	<--	Khaotic (Khaotic@unaffiliated/khaotic) has quit (Ping timeout: 255 seconds)
2016-09-21 20:02:46	-->	Khaotic (Khaotic@unaffiliated/khaotic) has joined ##c++
2016-09-21 20:03:21	<--	UnlikeSuika_mobi (~UnlikeSui@1.210.122.72) has quit (Ping timeout: 248 seconds)
2016-09-21 20:05:25	<--	ryxai (~Jonathan@pool-72-89-246-128.nycmny.fios.verizon.net) has quit (Quit: Leaving)
2016-09-21 20:06:22	-->	blaxter (~blaxter@62.101.183.90.dyn.user.ono.com) has joined ##c++
2016-09-21 20:06:28	-->	Justinus (~Justinus@192.122.131.42) has joined ##c++
2016-09-21 20:06:54	-->	FireRogue (~fireRogue@213.57.109.136) has joined ##c++
2016-09-21 20:08:19	-->	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2016-09-21 20:08:19		[20:08]
2016-09-21 20:08:20	-->	abaines (~abaines@host109-150-226-218.range109-150.btcentralplus.com) has joined ##c++
2016-09-21 20:08:30	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-21 20:09:11	<--	andyhuzhill (~Thunderbi@14.23.45.178) has quit (Quit: andyhuzhill)
2016-09-21 20:09:24	<--	jkhl (~j@host86-182-59-122.range86-182.btcentralplus.com) has quit (Ping timeout: 244 seconds)
2016-09-21 20:10:14	-->	Aquza (~Aquza@p578b4612.dip0.t-ipconnect.de) has joined ##c++
2016-09-21 20:10:33	-->	andyhuzhill (~Thunderbi@14.23.45.178) has joined ##c++
2016-09-21 20:12:07	Bigcheese	josef_k: yeah
2016-09-21 20:12:44	Bigcheese	lh_mouse: erase generally returns the next valid iterator.
2016-09-21 20:13:01	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 20:13:02	-->	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has joined ##c++
2016-09-21 20:15:53	lh_mouse	Bigcheese, I know. In that case I have to move the third expression in `for(;;)` out of there.
2016-09-21 20:16:09	<--	Khaotic (Khaotic@unaffiliated/khaotic) has quit (Ping timeout: 248 seconds)
2016-09-21 20:16:10	Bigcheese	yep
2016-09-21 20:16:32	Bigcheese	Unless you -- after the erase
2016-09-21 20:16:38	Bigcheese	Which isn't valid because it may return begin
2016-09-21 20:18:10	-->	casscode (~bru@169-1-129-208.ip.afrihost.co.za) has joined ##c++
2016-09-21 20:18:38	-->	squelch (~squelch@99-53-229-4.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2016-09-21 20:19:50	-->	lolek (~lolek@unaffiliated/marcin) has joined ##c++
2016-09-21 20:20:43	<--	kolko (~kolko@46.48.58.17) has quit (Read error: Connection reset by peer)
2016-09-21 20:20:57	-->	SHC (~quassel@160.202.182.156) has joined ##c++
2016-09-21 20:21:12	-->	TkeyCN (~TkeyCN@124.74.24.130) has joined ##c++
2016-09-21 20:21:18	<--	TkeyCN (~TkeyCN@124.74.24.130) has quit (Remote host closed the connection)
2016-09-21 20:22:06	-->	Khaotic (Khaotic@unaffiliated/khaotic) has joined ##c++
2016-09-21 20:22:10	-->	kolko (~kolko@46.48.58.17) has joined ##c++
2016-09-21 20:22:46	-->	DigiByteDev (~JT2@185.29.164.8) has joined ##c++
2016-09-21 20:22:53	-->	prsnmike (~hermes@66.158.189.29) has joined ##c++
2016-09-21 20:23:18	<--	prsnmike (~hermes@66.158.189.29) has quit (Client Quit)
2016-09-21 20:23:52	<--	vdamewood (~vdamewood@unaffiliated/vdamewood) has quit (Quit: Life beckons.)
2016-09-21 20:23:52		[20:23]
2016-09-21 20:24:32	<--	lolek (~lolek@unaffiliated/marcin) has left ##c++
2016-09-21 20:25:33	-->	FreeBirdLjj (~freebirdl@218.94.142.81) has joined ##c++
2016-09-21 20:26:30	<--	dv- (~dv@unaffiliated/dv-) has quit (Quit: leaving)
2016-09-21 20:27:16	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 20:28:10	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-21 20:29:51	<--	JoshS (~jshjsh@172.56.39.52) has quit (Ping timeout: 265 seconds)
2016-09-21 20:29:54	<--	hoshi (~hoshi@acck3.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 264 seconds)
2016-09-21 20:30:39	-->	hoshi (~hoshi@drk246.neoplus.adsl.tpnet.pl) has joined ##c++
2016-09-21 20:32:26	-->	Anodl1 (~Anodl@p2003007A2F1E7800319350DC9C1A69D8.dip0.t-ipconnect.de) has joined ##c++
2016-09-21 20:32:29	-->	dropaty (irssi@g71034.upc-g.chello.nl) has joined ##c++
2016-09-21 20:32:40	-->	kw01f (~kw01f@merlin.mvtec.com) has joined ##c++
2016-09-21 20:32:42	-->	antipsychiatry (50f689aa@gateway/web/cgi-irc/kiwiirc.com/ip.80.246.137.170) has joined ##c++
2016-09-21 20:32:50	-->	Vuks (~Vuks@unaffiliated/vuks69) has joined ##c++
2016-09-21 20:34:43	-->	Sceorem (~Sceorem@xbn44-3-82-232-76-9.fbx.proxad.net) has joined ##c++
2016-09-21 20:34:44	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 20:35:16	<--	mjuhl95 (~mikkel-@46.101.221.37) has quit (Remote host closed the connection)
2016-09-21 20:35:28	<--	FredDilb (32b81c2b@gateway/web/freenode/ip.50.184.28.43) has quit (Quit: Page closed)
2016-09-21 20:35:51	-->	mikkel- (~mikkel-@46.101.221.37) has joined ##c++
2016-09-21 20:36:19	<--	fedepad (~fedepad@p4FE10D52.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-09-21 20:37:05	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-21 20:37:37	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-21 20:37:48	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 20:37:58	-->	xnavor (~xnavor@vbg-gw.proceranetworks.com) has joined ##c++
2016-09-21 20:38:42	-->	rriemann_ (~rriemann@dhcp-67-135.ixxi.ens-lyon.fr) has joined ##c++
2016-09-21 20:39:09	<--	antipsychiatry (50f689aa@gateway/web/cgi-irc/kiwiirc.com/ip.80.246.137.170) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-09-21 20:39:09		[20:39]
2016-09-21 20:39:12	ferdna	i need to convert this: 0x00400eb3 to 179
2016-09-21 20:41:05	-->	chiken (~chiken@60-242-215-61.static.tpgi.com.au) has joined ##c++
2016-09-21 20:41:06	-->	tocka (~tocka@78-56-107-170.static.zebra.lt) has joined ##c++
2016-09-21 20:41:15	josef_k	(There is #CppCon2016 too, just for reference.)
2016-09-21 20:41:25	<--	mikkel- (~mikkel-@46.101.221.37) has left ##c++
2016-09-21 20:41:30	-->	Lowl3v3l (~Lowl3v3l@ipservice-092-208-080-178.092.208.pools.vodafone-ip.de) has joined ##c++
2016-09-21 20:41:50	ferdna	josef_k, cool thanks! =)
2016-09-21 20:42:22	<--	blueness (~blueness@gentoo/developer/blueness) has quit (Quit: blueness)
2016-09-21 20:42:28	josef_k	Erm, on Twitter, I mean, sorry, just realized the possible confusion.
2016-09-21 20:43:27	ferdna	thats a confenrece
2016-09-21 20:43:34	-->	sigtrm (~sigtrm@quassel.woboq.de) has joined ##c++
2016-09-21 20:43:37	ferdna	i thought i could get help by twitting or something
2016-09-21 20:43:40	ferdna	josef_k, ^
2016-09-21 20:43:43	josef_k	Yes.
2016-09-21 20:44:00	josef_k	I was referring back to a comment I made earlier.
2016-09-21 20:44:02	-->	antipsychiatry (50f68ac2@gateway/web/cgi-irc/kiwiirc.com/ip.80.246.138.194) has joined ##c++
2016-09-21 20:44:36	-->	rendar (~rendar@host64-182-dynamic.37-79-r.retail.telecomitalia.it) has joined ##c++
2016-09-21 20:44:44	-->	dj_pi (~dj@c-73-191-212-56.hsd1.mi.comcast.net) has joined ##c++
2016-09-21 20:45:05	ferdna	ohh
2016-09-21 20:45:10	urdh	ferdna, "convert" how? what's the input? and the output?
2016-09-21 20:45:25	ferdna	urdh, i am trying to convert code from python to c++
2016-09-21 20:45:28	urdh	surely you don't want to just convert a single input to a single output
2016-09-21 20:45:42	ferdna	this is the line:
2016-09-21 20:45:43	ferdna	hex( int(op1, 16) + 2 + int(i, 16) )
2016-09-21 20:46:00	<--	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has quit (Ping timeout: 276 seconds)
2016-09-21 20:46:07	ferdna	op1 = 0x00400eb3
2016-09-21 20:46:25	-->	AquaL1te (~AquaL1te@unaffiliated/aqual1te) has joined ##c++
2016-09-21 20:46:38	urdh	!stdref stoi
2016-09-21 20:46:39	refbot	std::stoi: http://en.cppreference.com/w/cpp/string/basic_string/stol
2016-09-21 20:46:41	ferdna	dont pay attention to the + 2 .... i know what that is...
2016-09-21 20:46:45	<--	antipsychiatry (50f68ac2@gateway/web/cgi-irc/kiwiirc.com/ip.80.246.138.194) has quit (Client Quit)
2016-09-21 20:46:51	ferdna	rudhi tried it...
2016-09-21 20:47:01	ferdna	i get this back4198067
2016-09-21 20:47:03	-->	t0by (~t0by@host123-244-dynamic.25-79-r.retail.telecomitalia.it) has joined ##c++
2016-09-21 20:47:08	-->	elnormous (~elnormous@87.110.129.37) has joined ##c++
2016-09-21 20:47:45	urdh	<< stoi("0x00400eb3", 0, 16)
2016-09-21 20:47:46	geordi	4198067
2016-09-21 20:48:00	ferdna	geordi, yes that is what i get
2016-09-21 20:48:00	geordi	error: 'yes' does not name a type; did you mean 'bytes'? (fix known)
2016-09-21 20:48:13	-->	Diyar (~Diyar@unaffiliated/diyar) has joined ##c++
2016-09-21 20:48:21	urdh	well, that is the value it represents
2016-09-21 20:48:36	<--	dusted (~dusted@77.68.146.169) has quit (Quit: Leaving)
2016-09-21 20:48:50	ferdna	any other idea?
2016-09-21 20:49:07	Diyar	Question: in which situation using this command " int main () " multi times?!!
2016-09-21 20:49:16	urdh	ferdna, no
2016-09-21 20:49:23	urdh	Diyar, never
2016-09-21 20:49:27	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-21 20:49:30	ferdna	:(
2016-09-21 20:49:32	ferdna	thanks
2016-09-21 20:49:40	Diyar	urdh, so just must be one time?
2016-09-21 20:49:52	ferdna	only one time
2016-09-21 20:50:10	ferdna	its not a command... its the main entry point for you app
2016-09-21 20:50:10	Diyar	May I know the reason please!
2016-09-21 20:50:15	urdh	Diyar, http://en.cppreference.com/w/cpp/language/main_function
2016-09-21 20:50:20	urdh	the standard says so
2016-09-21 20:50:26	zap0	cause you just have to
2016-09-21 20:50:49	urdh	although that goes for all functions
2016-09-21 20:51:03	urdh	which one would it call if you had two of them?
2016-09-21 20:51:08	zap0	unless they are static
2016-09-21 20:51:17	zap0	unless they are namespaced
2016-09-21 20:51:39	ferdna	urdh, geordi i got another clue...
2016-09-21 20:51:47	urdh	zap0, functions in different namespaces are not the same function
2016-09-21 20:51:48	zap0	unles they are member functions of different classes
2016-09-21 20:51:55	somaReverse	Hi, I get a vector reference from a empty map<uint32_t, vector<int>> by "auto& vec = map[42]". If I put some elements into this reference, will the next call "map[42]" returns this vector with content?
2016-09-21 20:51:56	w3z	<<("derp"?179:0x00400eb3)
2016-09-21 20:51:57	geordi	179
2016-09-21 20:52:03	urdh	good point about static/translation-unit loical functions though
2016-09-21 20:52:15	ferdna	0x00400eb3 this value has to return hex b3
2016-09-21 20:52:17	w3z	forgot inline too
2016-09-21 20:52:58	ferdna	YES!
2016-09-21 20:53:06	ferdna	w3z, can you explain it to me
2016-09-21 20:53:08	w3z	{} inline void f(){} \\ inline void f(){} \\ inline void f(){}
2016-09-21 20:53:08	urdh	ferdna, so you're working on 4-byte items when you should be working with 1-byte items
2016-09-21 20:53:10	geordi	<no output>
2016-09-21 20:53:17	ferdna	ohhhh
2016-09-21 20:53:38	w3z	hah, i was poking fun ...
2016-09-21 20:53:43	ferdna	lol...
2016-09-21 20:53:45	ferdna	i get it...
2016-09-21 20:53:49	ferdna	ternary operator
2016-09-21 20:53:52	ferdna	fake!
2016-09-21 20:54:06	<--	jaafar (~quassel@50-206-78-205-static.hfc.comcastbusiness.net) has quit (Ping timeout: 265 seconds)
2016-09-21 20:54:28	somaReverse	{ map<int, vector<int> m; auto& v = m[32]; v.push_back(1); auto& v2 = m[32]; cout<< v2.size(); }
2016-09-21 20:54:28		[20:54]
2016-09-21 20:54:28	geordi	error: template argument 2 is invalid
2016-09-21 20:54:35	somaReverse	{ map<int, vector<int>> m; auto& v = m[32]; v.push_back(1); auto& v2 = m[32]; cout<< v2.size(); }
2016-09-21 20:54:36	geordi	1
2016-09-21 20:54:37	-->	Munnu (~timo@91-158-145-247.elisa-laajakaista.fi) has joined ##c++
2016-09-21 20:54:37	w3z	<<(0x00400eb3&0xff)
2016-09-21 20:54:38	geordi	179
2016-09-21 20:54:59	somaReverse	{ map<int, vector<int>> m; auto v = m[32]; v.push_back(1); auto& v2 = m[32]; cout<< v2.size(); }
2016-09-21 20:55:00	geordi	0
2016-09-21 20:55:19	-->	eduardas_m (~eduardas_@213.197.143.19) has joined ##c++
2016-09-21 20:55:44	ferdna	w3z, explain it... i do not understand it...
2016-09-21 20:55:53	-->	blueness (~blueness@gentoo/developer/blueness) has joined ##c++
2016-09-21 20:56:27	-->	Jiwan (~jeangu@212.247.124.2) has joined ##c++
2016-09-21 20:56:41	<--	squelch (~squelch@99-53-229-4.lightspeed.irvnca.sbcglobal.net) has quit (Ping timeout: 248 seconds)
2016-09-21 20:57:00	w3z	{ map<int, vector<int>> m; auto& v = m[32]; v.push_back(1); auto& v2 = m[32]; cout<< v2.size(); }
2016-09-21 20:57:01	geordi	1
2016-09-21 20:57:11	-->	chardan (~chardan@209.119.211.66) has joined ##c++
2016-09-21 20:57:43	w3z	its the last byte of your number, i dont know if thats your actual mapping but eh
2016-09-21 20:57:57	Diyar	urdh, thanks for the link, so this way also return 0; too can't using it multi times?! right!!
2016-09-21 20:58:15	ferdna	w3z, hmmm dont know
2016-09-21 20:58:16	Diyar	in point 5 mentioned it
2016-09-21 20:58:52	-->	KAHR-Alpha (~Alpha@AReims-652-1-187-168.w92-142.abo.wanadoo.fr) has joined ##c++
2016-09-21 20:58:59	urdh	Diyar, what?
2016-09-21 20:59:14	urdh	!give Diyar basic
2016-09-21 20:59:15	nolyc	Diyar: Please ask your question in ##C++-basic, as it involves the fundamental basics of the language.
2016-09-21 20:59:25	urdh	or read a book maybe
2016-09-21 20:59:29	urdh	!books
2016-09-21 20:59:30	nolyc	A nice C++ book guide and list can be found at http://stackoverflow.com/q/388242/1090079
2016-09-21 20:59:47	Diyar	urdh, that I'm doing it, reading it for that I am asking !!!
2016-09-21 21:00:04	w3z	i hope its in your native language ...
2016-09-21 21:00:11	Diyar	nope
2016-09-21 21:00:16	urdh	because it seems like you are having trouble with fundamental language concepts like the difference between a function declaration and a return statement
2016-09-21 21:00:27	Diyar	In English and Russian and by native is Arabic
2016-09-21 21:00:46	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 21:00:46	w3z	so find an arabic translation, because youre not absorbing it as is
2016-09-21 21:01:45	Jiwan	it feels like yoda is on this channel
2016-09-21 21:01:48	Diyar	IN Arabic is just about Oil and Money with girls , not useful!!
2016-09-21 21:02:05	urdh	wut
2016-09-21 21:02:17	Diyar	urdh, joking
2016-09-21 21:02:18	-->	Heero (d467cb0a@gateway/web/freenode/ip.212.103.203.10) has joined ##c++
2016-09-21 21:02:22	w3z	that sounds like a badly translated c++ book then
2016-09-21 21:02:44	<--	pa (~pa@unaffiliated/pa) has quit (Remote host closed the connection)
2016-09-21 21:02:49	-->	karab44 (~karab44@unaffiliated/karab44) has joined ##c++
2016-09-21 21:03:01	-->	suppahsrv (~mopmop@host124-250-dynamic.181-80-r.retail.telecomitalia.it) has joined ##c++
2016-09-21 21:03:08	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 244 seconds)
2016-09-21 21:03:12	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-21 21:03:12	Diyar	command return 0; can using it multi times when need for each execute?!
2016-09-21 21:03:18	<--	kaffeetrauma (~Thunderbi@n37.informatik.fh-dortmund.de) has quit (Quit: kaffeetrauma)
2016-09-21 21:03:27	urdh	meh, I've had statistics excercises about drug dealers so whatever examples that make your point clear are fine i suppose
2016-09-21 21:03:30	Diyar	That mean can using it multi times!
2016-09-21 21:03:40	urdh	Diyar, it's not a "command", it's a statement
2016-09-21 21:03:52	Diyar	urdh, right, thanks
2016-09-21 21:03:53	urdh	you're not making any sense at all
2016-09-21 21:04:09	<--	ambro718 (~ambro@unaffiliated/ambro718) has quit (Ping timeout: 248 seconds)
2016-09-21 21:04:31	Diyar	< lost
2016-09-21 21:04:40	Diyar	anyway, have a nice day
2016-09-21 21:04:40	urdh	please ask your questions in ##C++-basic
2016-09-21 21:04:42	Diyar	thanks
2016-09-21 21:04:46	-->	jablo (~jablo@80-62-117-10-mobile.dk.customer.tdc.net) has joined ##c++
2016-09-21 21:05:37	<--	sigtrm (~sigtrm@quassel.woboq.de) has quit (Ping timeout: 250 seconds)
2016-09-21 21:05:44	Diyar	urdh, not available,
2016-09-21 21:06:13	-->	mfc (~mfc@unaffiliated/mfc) has joined ##c++
2016-09-21 21:06:15	<--	mfc (~mfc@unaffiliated/mfc) has quit (Remote host closed the connection)
2016-09-21 21:06:23	<--	lyindArk (~jzeiger@mail.talpidae.net) has quit (Quit: leaving)
2016-09-21 21:06:50	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-21 21:06:50	<--	verm1n (~verm1n@209-6-236-59.c3-0.wrx-ubr1.sbo-wrx.ma.cable.rcn.com) has quit (Ping timeout: 260 seconds)
2016-09-21 21:06:54	<--	bkboggy (~bkboggy@cpe-172-250-147-60.socal.res.rr.com) has quit (Quit: Leaving)
2016-09-21 21:07:01	-->	SwiftMatt (~Objective@162.242.94.252) has joined ##c++
2016-09-21 21:07:05	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-21 21:08:00	<--	Heero (d467cb0a@gateway/web/freenode/ip.212.103.203.10) has quit (Quit: Page closed)
2016-09-21 21:08:04	-->	lyindArk (~jzeiger@mail.talpidae.net) has joined ##c++
2016-09-21 21:08:06	-->	antipsychiatry (50f68ae5@gateway/web/cgi-irc/kiwiirc.com/ip.80.246.138.229) has joined ##c++
2016-09-21 21:08:33	-->	sigtrm (quassel@quassel.woboq.de) has joined ##c++
2016-09-21 21:08:37	-->	Kirrahe (~kirrahe@ip51cc4257.adsl-surfen.hetnet.nl) has joined ##c++
2016-09-21 21:09:05	-->	pa (~pa@unaffiliated/pa) has joined ##c++
2016-09-21 21:09:41	<--	jablo (~jablo@80-62-117-10-mobile.dk.customer.tdc.net) has quit (Quit: jablo)
2016-09-21 21:09:41		[21:09]
2016-09-21 21:09:57	-->	jablo (~jablo@80-62-117-10-mobile.dk.customer.tdc.net) has joined ##c++
2016-09-21 21:10:32	<--	elnormous (~elnormous@87.110.129.37) has quit (Ping timeout: 265 seconds)
2016-09-21 21:10:36	-->	biberu (~biberu@c-cf2d72d5.08-441-7570702.cust.bredbandsbolaget.se) has joined ##c++
2016-09-21 21:10:37	-->	Carbonflux (~Bob@75-172-112-206.tukw.qwest.net) has joined ##c++
2016-09-21 21:12:30	<--	Kimau (~bouncer@5.80.30.70) has quit (Quit: ZNC 1.6.3 - http://znc.in)
2016-09-21 21:12:50	<--	antipsychiatry (50f68ae5@gateway/web/cgi-irc/kiwiirc.com/ip.80.246.138.229) has quit (Client Quit)
2016-09-21 21:13:14	-->	seru76 (~seru76@77.89.191.179) has joined ##c++
2016-09-21 21:13:25	-->	verm1n (~verm1n@209-6-236-59.c3-0.wrx-ubr1.sbo-wrx.ma.cable.rcn.com) has joined ##c++
2016-09-21 21:15:22	<--	andwan0 (~androirc@2a02:c7d:c73:7e00:413d:35fb:fd84:fa28) has quit (Ping timeout: 265 seconds)
2016-09-21 21:16:05	-->	kaffeetrauma (~Thunderbi@n37.informatik.fh-dortmund.de) has joined ##c++
2016-09-21 21:16:44	<--	Stanley00 (~Stanley_0@unaffiliated/stanley00) has quit (Remote host closed the connection)
2016-09-21 21:18:48	-->	it_ (~it_@212.243.190.164) has joined ##c++
2016-09-21 21:19:52	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Read error: Connection reset by peer)
2016-09-21 21:20:01	<--	ferdna (~ferdna@cpe-69-23-141-130.elp.res.rr.com) has quit (Quit: Leaving)
2016-09-21 21:20:32	-->	ibouvousaime (~ibouvousa@41.82.45.22) has joined ##c++
2016-09-21 21:21:24	<--	sigtrm (quassel@quassel.woboq.de) has quit (Remote host closed the connection)
2016-09-21 21:22:14	<--	xaxxon (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has quit (Quit: This computer has gone to sleep)
2016-09-21 21:22:18	-->	pheenx (~pheenx@2a02:8071:b68a:1c00:225:22ff:fee7:7dc5) has joined ##c++
2016-09-21 21:24:50	<--	f32ff (~f32ff@129.69.216.241) has quit (Quit: leaving)
2016-09-21 21:24:50		[21:24]
2016-09-21 21:25:01	-->	sigtrm (quassel@quassel.woboq.de) has joined ##c++
2016-09-21 21:25:05	<--	pa (~pa@unaffiliated/pa) has quit (Ping timeout: 240 seconds)
2016-09-21 21:27:32	<--	systemfault (~rcyr@unaffiliated/rcyr) has quit (Quit: Bye!)
2016-09-21 21:28:03	<--	kw01f (~kw01f@merlin.mvtec.com) has quit (Remote host closed the connection)
2016-09-21 21:29:12	-->	f32ff (~f32ff@129.69.216.241) has joined ##c++
2016-09-21 21:29:54	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 21:29:56	<--	bberg (~bbergz@unaffiliated/bberg) has quit (Read error: Connection reset by peer)
2016-09-21 21:30:01	-->	ville (~ville@37-136-51-33.rev.dnainternet.fi) has joined ##c++
2016-09-21 21:30:14	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-21 21:30:33	-->	fedepad (~fedepad@eduroam-97-27.zdv.uni-mainz.de) has joined ##c++
2016-09-21 21:31:16	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-21 21:32:03	<--	sigtrm (quassel@quassel.woboq.de) has quit (Ping timeout: 240 seconds)
2016-09-21 21:32:31	-->	AndreasL (~Andlon@2a02:908:691:bd1c:b507:aebd:7b6c:edbe) has joined ##c++
2016-09-21 21:32:47	-->	sigtrm (quassel@quassel.woboq.de) has joined ##c++
2016-09-21 21:33:04	AndreasL	When writing template functions that take iterators, I'm never quite sure which type of iterator I need to require. Does anyone know of a good resource that could help me clear this confusion up for me?
2016-09-21 21:33:23	-->	blablablub (~howlymowl@euler.ilr.tu-berlin.de) has joined ##c++
2016-09-21 21:34:56	urdh	AndreasL, don't restrict the template to a given iterator type
2016-09-21 21:35:09	AndreasL	urdh, it's just in terms of naming
2016-09-21 21:35:22	AndreasL	the standard names the iterators as i.e. ForwardIterator, OutputIterator etc.
2016-09-21 21:35:56	urdh	yes
2016-09-21 21:36:13	urdh	http://en.cppreference.com/w/cpp/concept/Iterator is a good resource if you want to know which one guarantees what
2016-09-21 21:36:31	et	http://en.cppreference.com/w/cpp/iterator#Iterator_categories
2016-09-21 21:36:59	urdh	that's even better :
2016-09-21 21:37:08	-->	dv- (~dv@unaffiliated/dv-) has joined ##c++
2016-09-21 21:37:10	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-21 21:37:52	AndreasL	I was looking for something more intuitive; those pages essentially list a number of rules (which of course are very useful). However, I want to develop an intuition for which iterator is likely to be the right candidate
2016-09-21 21:37:56	<--	nealshire_ (~Nealshire@unaffiliated/nealshire) has quit (Ping timeout: 244 seconds)
2016-09-21 21:38:14	cbreak	AndreasL: random access is most powerful
2016-09-21 21:38:30	cbreak	AndreasL: input / output iterators are special purpose one-pass
2016-09-21 21:38:43	cbreak	the rest is in between
2016-09-21 21:38:45	urdh	the table in the link et posted should give you an idea
2016-09-21 21:38:50	-->	pa (~pa@unaffiliated/pa) has joined ##c++
2016-09-21 21:38:52	AndreasL	I think what confuses me the most is the 'multi-pass' part
2016-09-21 21:39:03	<--	ibouvousaime (~ibouvousa@41.82.45.22) has quit (Ping timeout: 240 seconds)
2016-09-21 21:39:13	<--	josef_k (~Jeremy@210-10-222-98.mel.static-ipl.aapt.com.au) has quit (Read error: Connection reset by peer)
2016-09-21 21:39:25	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-21 21:39:38	cbreak	AndreasL: imagine you have an iterator
2016-09-21 21:39:40	-->	lsk (~lsk@enucs/member/lsk) has joined ##c++
2016-09-21 21:39:43	urdh	if you copy an InputIterator and increment the copy, the original will not be the same
2016-09-21 21:39:44	cbreak	you make a copy of it
2016-09-21 21:39:48	<--	LightYagami__ (~CanIHazMe@122.58.99.222) has left ##c++
2016-09-21 21:40:01	urdh	i.e. it doesn't save its position
2016-09-21 21:40:01		[21:40]
2016-09-21 21:40:03	chardan	Question... anybody know of a way to find the type of a lambda function? I see that because lambdas are not named objects, you can't get at their address (?), but I don't need that -- what I /really/ want is the return type and parameter types?
2016-09-21 21:40:05	cbreak	AndreasL: can you use the copy, or only the original, after incrementing?
2016-09-21 21:40:06	chardan	Ideas?
2016-09-21 21:40:07	urdh	think of an input stream, for example
2016-09-21 21:40:35	cbreak	chardan: return type is easy
2016-09-21 21:40:42	cbreak	if you can call it :)
2016-09-21 21:40:45	chardan	cbreak: It's a start.
2016-09-21 21:40:46	cbreak	but parameters isn't
2016-09-21 21:40:50	chardan	Hm...
2016-09-21 21:40:52	-->	LightYagami (~CanIHazMe@unaffiliated/canihazmemecats) has joined ##c++
2016-09-21 21:40:57	chardan	Just a sec, let me see if I can be a bit more concrete.
2016-09-21 21:40:57	cbreak	you have to know how to call it, after all, it could be polymorphic
2016-09-21 21:41:01	w3z	if its a non capturing its easy
2016-09-21 21:41:26	<--	DEElekgolo (~DEElekgol@2602:30a:2e0e:a7a0:b7:6741:9b9d:2c3c) has quit (Read error: Connection reset by peer)
2016-09-21 21:41:28	w3z	if its capturing, no luck
2016-09-21 21:41:38	urdh	<< TYPE(+[](int a, bool b) -> char { return 0; });
2016-09-21 21:41:38	geordi	error: lambda-expression in unevaluated context
2016-09-21 21:41:48	urdh	bah
2016-09-21 21:41:51	AndreasL	So... with a ForwardIterator I can copy the iterator, increment it without changing the original? Whereas with InputIterator, if I copy it, it will mutate the state of the original as well?
2016-09-21 21:42:06	urdh	AndreasL, pretty much, yes
2016-09-21 21:42:08	cbreak	AndreasL: mutate or invalidate
2016-09-21 21:42:17	AndreasL	right. OK, thanks guys!
2016-09-21 21:42:18	cbreak	AndreasL: examples for input iterators are istream iterators
2016-09-21 21:42:19	w3z	<<TYPE(p); auto p=+[](int){};
2016-09-21 21:42:20	geordi	lvalue void (*)(int)
2016-09-21 21:42:29	chardan	w3z: It could definitely be capturing.
2016-09-21 21:42:40	w3z	well then youre out of luck
2016-09-21 21:42:57	chardan	cbreak: Yeah, this is inside a library. Someone passes me a "callable thingie", and I'm doing some magic, wrapping it up, and returning it.
2016-09-21 21:43:05	--	irc: disconnected from server
2016-09-22 00:23:51	-->	alyptik (~alyptik@unaffiliated/alyptik) has joined ##c++
2016-09-22 00:23:51		[00:23]
2016-09-22 00:23:51	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || https://isocpp.org/faq || pastes: http://melpon.org/wandbox"
2016-09-22 00:23:51	--	Topic set by V-ille (~ville@81-175-149-170.bb.dnainternet.fi) on Fri, 18 Sep 2015 07:13:01
2016-09-22 00:23:51	--	Channel ##c++: 986 nicks (0 ops, 0 voices, 986 normals)
2016-09-22 00:23:51	***	Buffer Playback...
2016-09-22 00:23:51	cbreak	[09:17:11] oop is still valuable [09:17:11]
2016-09-22 00:23:51	cbreak	[09:17:20] but as with everything, it has to be understood [09:17:20]
2016-09-22 00:23:51	w3z	[09:21:56] itll all seem silly eventually [09:21:56]
2016-09-22 00:23:51	w3z	[09:23:05] someday the machine model will change enough that even simple imperative programming will seem archaic [09:23:05]
2016-09-22 00:23:51	planet_en	[09:25:13] V-ille: Isn't C14 more relevant now? [09:25:13]
2016-09-22 00:23:51	cbreak	[09:30:11] planet_en: C? Relevant? HA! :D [09:30:11]
2016-09-22 00:23:51	V-ille	[09:33:20] once you grok c++11, learning the minor additions that c++14 brings is not hard [09:33:20]
2016-09-22 00:23:51	beaky	[09:33:48] hello what is the most screaming fast html parser [09:33:48]
2016-09-22 00:23:51	V-ille	[09:36:51] !give beaky general [09:36:51]
2016-09-22 00:23:51	nolyc	[09:36:52] beaky: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s. [09:36:52]
2016-09-22 00:23:51	beaky	[09:36:58] ah thanks [09:36:58]
2016-09-22 00:23:51	GrayShade	[09:42:58] i'm sure i'm missing something, but why does this print "1 1"? https://ideone.com/g4L5WX [09:42:58]
2016-09-22 00:23:51	V-ille	[09:45:01] because it prints bools [09:45:01]
2016-09-22 00:23:51	GrayShade	[09:45:49] is not &D1::x the address of the copy of x that C gets from D1? [09:45:49]
2016-09-22 00:23:51	GrayShade	[09:46:06] is &D1::x not* [09:46:06]
2016-09-22 00:23:51	V-ille	[09:46:52] no, it's a pointer to member [09:46:52]
2016-09-22 00:23:51	GrayShade	[09:47:17] oh, right [09:47:17]
2016-09-22 00:23:51	V-ille	[09:47:39] that pointer to member is then converted to bool and printed out [09:47:39]
2016-09-22 00:23:51	GrayShade	[09:48:53] so do i have to write &static_cast<D1 *>(this)->x for that? [09:48:53]
2016-09-22 00:23:51	V-ille	[09:49:40] no, because if you use &(this->x) you get the address of the member object, not a pointer to a member [09:49:40]
2016-09-22 00:23:51	qis	[09:50:00] GrayShade: http://melpon.org/wandbox/permlink/uo6VXt75es2yXD0P [09:50:00]
2016-09-22 00:23:51	V-ille	[09:50:17] like this https://ideone.com/gN972i [09:50:17]
2016-09-22 00:23:51	GrayShade	[09:50:35] qis: oh, nifty [09:50:35]
2016-09-22 00:23:51	GrayShade	[09:51:02] V-ille, qis: thanks! [09:51:02]
2016-09-22 00:23:51	V-ille	[09:51:04] or like qis wrote [09:51:04]
2016-09-22 00:23:51	V-ille	[09:51:31] the difference between &D1::x and &(D1::x) is less than obvious [09:51:31]
2016-09-22 00:23:51	GrayShade	[09:53:34] right, i've seen that trick before. to side-step template argument deduction rules, perhaps [09:53:34]
2016-09-22 00:23:51	qis	[09:53:47] V-ille: I was actually surprised since :: has the highest operator precedence. http://en.cppreference.com/w/cpp/language/operator_precedence [09:53:47]
2016-09-22 00:23:51	RokerHRO	[09:55:44] qis: :: is not really an operator. because you cannot use parentheses to re-order it:  if A::B::C is valid, (A::B)::C is a cast expression and A::(B::C) is a syntax error. [09:55:44]
2016-09-22 00:23:51	GrayShade	[09:56:55] yeah, i was thinking of decltype(foo) vs. decltype((foo)) [09:56:55]
2016-09-22 00:23:51	Olipro	[09:57:04] the specification calls it an operator [09:57:04]
2016-09-22 00:23:51	Olipro	[09:57:31] I don't think that something ceases to be an operator because it can't be used universally [09:57:31]
2016-09-22 00:23:51	V-ille	[09:57:44] Olipro: where does the specification call it an operator? [09:57:44]
2016-09-22 00:23:51	qis	[09:57:47] RokerHRO: Good point. [09:57:47]
2016-09-22 00:23:51	Olipro	[09:58:46] -> is clearly an operator but I can't do 1->5 [09:58:46]
2016-09-22 00:23:51	V-ille	[09:59:11] ah, the spec talks about a "scope resolution operator" [09:59:11]
2016-09-22 00:23:51	V-ille	[10:00:50] but that's not an operator, it's an operator [10:00:50]
2016-09-22 00:23:51	V-ille	[10:00:54] two very different things [10:00:54]
2016-09-22 00:23:51	Olipro	[10:01:35] are you feeling alright old chap? [10:01:35]
2016-09-22 00:23:51	V-ille	[10:01:57] yeah, no new insanities to report [10:01:57]
2016-09-22 00:23:51	V-ille	[10:02:31] the old ones are hopefully no more acute than they ever were [10:02:31]
2016-09-22 00:23:51	Olipro	[10:04:31] You know, I love how C++11 introduced this annotation syntax and then MSVC completely failed to bother letting you use it for their implementation's compiler directives [10:04:31]
2016-09-22 00:23:51	Olipro	[10:04:53] how hard would it be to make it so I can now do [[__declspec(whatever)]] [10:04:53]
2016-09-22 00:23:51	Olipro	[10:06:22] but no, clearly preprocessor #define is the way to go [10:06:22]
2016-09-22 00:23:51	Veltas	[10:11:57] Looks like they're uploading cppcon 2016 talks now https://www.youtube.com/channel/UCMlGfpWw-RUdWX_JbLCukXg [10:11:57]
2016-09-22 00:23:51	xkpe	[10:15:53] move elision is not comparible with rvalue references? http://melpon.org/wandbox/permlink/BI6Y1Q3puxuJqIwm [10:15:53]
2016-09-22 00:23:51	xkpe	[10:15:58] compatible* [10:15:58]
2016-09-22 00:23:51	xaxxon	[10:20:01] xkpe:  an rvalue ref requires an rvalue [10:20:01]
2016-09-22 00:23:51	xkpe	[10:21:14] i should have said universal/forward reference ? [10:21:14]
2016-09-22 00:23:51	xaxxon	[10:23:46] xkpe:  you're trying to return a unique_ptr by value [10:23:46]
2016-09-22 00:23:51	***	Playback Complete.
2016-09-22 00:24:06	xaxxon	errr, sry hang on
2016-09-22 00:24:11	--	Channel created on Fri, 14 Sep 2001 17:15:35
2016-09-22 00:24:13	xkpe	xaxxon, http://melpon.org/wandbox/permlink/COy0bfE6UP7yXETL
2016-09-22 00:24:30	xkpe	i mean as opposed to this code
2016-09-22 00:24:42	Kirrahe	a named rvalue reference is an lvalue, that's why it was attempting a copy
2016-09-22 00:24:57	xaxxon	xkpe:  when you do a conversion, it can't elide
2016-09-22 00:25:16	xaxxon	maybe
2016-09-22 00:25:47	xkpe	Kirrahe, my second example is an lvalue, the move gets eluded
2016-09-22 00:26:54	xaxxon	> If a function returns a class type by value, and the return statement's expression is the name of a non-volatile object with automatic storage duration
2016-09-22 00:27:02	-->	UnlikeSuika_mobi (~UnlikeSui@147.47.140.150) has joined ##c++
2016-09-22 00:27:23	Olipro	you could also return std::move(number)
2016-09-22 00:27:24	-->	elnormous (~elnormous@gateway.evolutiongaming.com) has joined ##c++
2016-09-22 00:27:32	-->	GrayArea (kvirc@178.208.173.11) has joined ##c++
2016-09-22 00:27:33	xaxxon	Olipro:  there is never copy elision when you std::move it
2016-09-22 00:27:41	xaxxon	since you are not returning a named parameter
2016-09-22 00:27:44	-->	FreeBirdLjj (~freebirdl@202.119.46.192) has joined ##c++
2016-09-22 00:27:45	xaxxon	named value
2016-09-22 00:27:55	Olipro	it's not taking a copy, it's moving it
2016-09-22 00:28:02	xaxxon	it's makig a shallow copy
2016-09-22 00:28:12	xaxxon	move doesn't elide copies of the shallow data
2016-09-22 00:28:31	Olipro	well, considering this is being done with std::unique_ptr, you can't do any copying
2016-09-22 00:28:31	xaxxon	it's only useful for "heap" data
2016-09-22 00:28:41	xaxxon	yes you can
2016-09-22 00:28:53	xaxxon	all the data members of unique_ptr are copied unless you elide copy
2016-09-22 00:29:55	<--	Stanley00 (~Stanley_0@unaffiliated/stanley00) has quit (Quit: Ex Chat)
2016-09-22 00:30:39	-->	Elirips (~Elirips@242.109.22.178.ftth.as8758.net) has joined ##c++
2016-09-22 00:31:05	xaxxon	xkpe:  anyhow, if the types don't match, you're not going to get copy elision, from what I can tell
2016-09-22 00:32:18	<--	elnormous (~elnormous@gateway.evolutiongaming.com) has quit (Remote host closed the connection)
2016-09-22 00:32:31	-->	elnormous (~elnormous@gateway.evolutiongaming.com) has joined ##c++
2016-09-22 00:33:24	xaxxon	Olipro:  think about what moving a unique_ptr entails.   You make a new copy that is exactly the same as the one you're moving out of, then you set all the values of the old one to values that won't clean up the memory it used to point to when the old unique_ptr is destroyed
2016-09-22 00:33:31	xkpe	would this prevent RVO when possible with just  auto? http://melpon.org/wandbox/permlink/i1NPrrwFmXVuUSYA
2016-09-22 00:34:01	xaxxon	pretty sure any casting kills nrvo
2016-09-22 00:34:27	xaxxon	so that example gets move'd but still re-constructed
2016-09-22 00:34:42	xaxxon	calling std::forward on a known r-value ref is the same as std::move
2016-09-22 00:34:57	Olipro	well, that's a more general statement about *any* move construction
2016-09-22 00:35:05	<--	planet_en (~nkh@80.227.221.138) has quit (Ping timeout: 260 seconds)
2016-09-22 00:35:32	Olipro	if the internal implementation of std::unique_ptr is to hold a single pointer to all the implementation details, a move construction would be as simple as setting the pointer in the receiving class and nulling it in the losing one
2016-09-22 00:35:40	xaxxon	Olipro:  jsut saying why copy elision is still important.   the "copy" in copy elision doesn't refer to the same "copy" as the copy in "copy construction"
2016-09-22 00:36:03	Olipro	yes, too bad it only just became mandatory
2016-09-22 00:36:12	<--	interki (~arch_@WOPR-p-144-134-32-216.prem.tmns.net.au) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-09-22 00:36:34	xaxxon	in real life, it doesn't matter
2016-09-22 00:37:04	Olipro	yeah, but real-life doesn't exist here
2016-09-22 00:37:11	Olipro	that's ##C++-general ;)
2016-09-22 00:37:22	xaxxon	"too bad" is off topic
2016-09-22 00:37:31	Olipro	and it does matter
2016-09-22 00:38:09	Olipro	as it currently stands, I suspect I can end up with no copy elision when doing a debug build vs a release build
2016-09-22 00:38:22	Olipro	with the new spec rule, I'm guaranteed the same behaviour
2016-09-22 00:38:25	xaxxon	on what compiler?
2016-09-22 00:38:29	SlashLife	"off topic" is not defined in the standard, so telling people they are off topic is off topic here. >_>
2016-09-22 00:38:41	xaxxon	SlashLife:  2meta4u
2016-09-22 00:40:41	-->	planet_en (~nkh@80.227.221.138) has joined ##c++
2016-09-22 00:40:41		[00:40]
2016-09-22 00:42:42	<--	elnormous (~elnormous@gateway.evolutiongaming.com) has quit (Remote host closed the connection)
2016-09-22 00:43:05	<--	Gluesticky (~nobody@unaffiliated/gluesticky) has quit (Quit: This is the end. Goodbye cruel world!)
2016-09-22 00:45:00	<--	SwiftMatt (~Objective@162.242.94.252) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-22 00:45:34	<--	planet_en (~nkh@80.227.221.138) has quit (Ping timeout: 265 seconds)
2016-09-22 00:45:59	-->	irco (~irco@HSI-KBW-134-3-111-4.hsi14.kabel-badenwuerttemberg.de) has joined ##c++
2016-09-22 00:46:02	-->	flavi0 (~anon@unaffiliated/flavi0) has joined ##c++
2016-09-22 00:47:17	-->	UnripeSuica_mobi (~UnlikeSui@223.33.164.24) has joined ##c++
2016-09-22 00:47:35	<--	UnripeSuica_mobi (~UnlikeSui@223.33.164.24) has quit (Client Quit)
2016-09-22 00:47:48	-->	UnripeSuica_mobi (~UnlikeSui@147.46.113.63) has joined ##c++
2016-09-22 00:48:00	<--	Betal (~Betal@unaffiliated/betal) has quit (Remote host closed the connection)
2016-09-22 00:48:58	-->	TMM (~hp@fsf/member/pdpc.professional.tmm) has joined ##c++
2016-09-22 00:50:23	-->	V-ille (~ville@59ec7803.symbio.com) has joined ##c++
2016-09-22 00:50:34	-->	metachr0n (~nobody@78.1.broadband13.iol.cz) has joined ##c++
2016-09-22 00:50:34	<--	UnlikeSuika_mobi (~UnlikeSui@147.47.140.150) has quit (Ping timeout: 255 seconds)
2016-09-22 00:51:26	-->	vuoto (~vuoto@80-71-135-9.u.parknet.dk) has joined ##c++
2016-09-22 00:52:44	<--	vuoto (~vuoto@80-71-135-9.u.parknet.dk) has quit (Remote host closed the connection)
2016-09-22 00:52:51	-->	planet_en (~nkh@80.227.221.138) has joined ##c++
2016-09-22 00:54:57	<--	asc232 (~Keith@179.38.203.21) has quit (Remote host closed the connection)
2016-09-22 00:57:11	-->	aslant (~aslant@149.18.68.178) has joined ##c++
2016-09-22 00:57:11		[00:57]
2016-09-22 00:57:33	<--	planet_en (~nkh@80.227.221.138) has quit (Ping timeout: 276 seconds)
2016-09-22 00:57:52	<--	metachr0n (~nobody@78.1.broadband13.iol.cz) has quit (Quit: WeeChat 1.5)
2016-09-22 01:00:02	ville	SlashLife: wanna bet?
2016-09-22 01:03:08	-->	elnormous (~elnormous@gateway.evolutiongaming.com) has joined ##c++
2016-09-22 01:04:10	-->	josef__k (~jeremy@59.102.31.229) has joined ##c++
2016-09-22 01:05:00	<--	StyxAlso (~markg@120.88.147.168) has quit (Quit: StyxAlso)
2016-09-22 01:05:11	<--	aslant (~aslant@149.18.68.178) has quit (Remote host closed the connection)
2016-09-22 01:05:30	<--	ARCADIVS (~RMM@97.84.20.251) has quit (Quit: ARCADIVS)
2016-09-22 01:05:57	-->	aslant (~aslant@149.18.68.178) has joined ##c++
2016-09-22 01:06:23	-->	Gluesticky (~IceChat9@unaffiliated/gluesticky) has joined ##c++
2016-09-22 01:06:29	<--	a3pq51 (~a3pq51@50-40-179-94.pool.ukrtel.net) has quit (Quit: Leaving)
2016-09-22 01:10:41	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-22 01:11:10	-->	planet_en (~nkh@80.227.221.138) has joined ##c++
2016-09-22 01:13:54	<--	symm- (~symm-@86.127.152.32) has quit (Ping timeout: 244 seconds)
2016-09-22 01:13:54		[01:13]
2016-09-22 01:15:16	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Ping timeout: 244 seconds)
2016-09-22 01:15:35	-->	ignatiz- (50c1d51a@gateway/web/freenode/ip.80.193.213.26) has joined ##c++
2016-09-22 01:15:55	<--	planet_en (~nkh@80.227.221.138) has quit (Ping timeout: 260 seconds)
2016-09-22 01:16:07	-->	DjBonadoobie (~DjBonadoo@gateway/vpn/privateinternetaccess/djbonadoobie) has joined ##c++
2016-09-22 01:16:47	<--	blackbird1 (~blackbird@41.226.75.194) has quit (Quit: Leaving)
2016-09-22 01:17:06	<--	flavi0 (~anon@unaffiliated/flavi0) has quit (Quit: leaving)
2016-09-22 01:18:17	<--	f32ff (~f32ff@129.69.216.241) has quit (Ping timeout: 240 seconds)
2016-09-22 01:21:18	-->	iterati (~vangelis@79.103.112.83.dsl.dyn.forthnet.gr) has joined ##c++
2016-09-22 01:21:35	-->	wolfcub (~henrique_@177.131.178.138) has joined ##c++
2016-09-22 01:23:38	-->	funfunctor (~edward@1.129.96.103) has joined ##c++
2016-09-22 01:26:37	-->	jan64_ (~jan64@agpn21.neoplus.adsl.tpnet.pl) has joined ##c++
2016-09-22 01:29:39	-->	cmedeiros (~cmedeiros@191.19.130.128) has joined ##c++
2016-09-22 01:29:39		[01:29]
2016-09-22 01:29:55	<--	jan64 (~jan64@agad109.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 260 seconds)
2016-09-22 01:30:28	ph88_	w3z, ah yes that could be a right assumption :P
2016-09-22 01:32:46	-->	flavi0 (~anon@unaffiliated/flavi0) has joined ##c++
2016-09-22 01:32:59	-->	vitimiti (~vitimiti@unaffiliated/vitimiti) has joined ##c++
2016-09-22 01:36:10	-->	kilbith (4ee51c3e@gateway/web/cgi-irc/kiwiirc.com/ip.78.229.28.62) has joined ##c++
2016-09-22 01:37:03	<--	SpaceDanceCJ (~Sasha@37.45.179.65) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-09-22 01:37:30	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-22 01:38:06	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-22 01:38:28	<--	Xunie (~xunie@unaffiliated/xunie) has quit (Read error: Connection reset by peer)
2016-09-22 01:38:37	-->	unlaudable (~bleurgh@41.180.1.122) has joined ##c++
2016-09-22 01:39:35	-->	meandrain (~meandrain@89.39.95.149) has joined ##c++
2016-09-22 01:41:27	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-22 01:41:40	-->	planet_en (~nkh@80.227.221.138) has joined ##c++
2016-09-22 01:41:41	<--	tlaxkit (~Thunderbi@92.185.154.236) has quit (Read error: Connection reset by peer)
2016-09-22 01:41:58	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-22 01:43:49	-->	tlaxkit (~Thunderbi@92.185.154.236) has joined ##c++
2016-09-22 01:45:30	<--	AndreasL (~Andlon@2a02:908:691:bd1c:b507:aebd:7b6c:edbe) has quit (Remote host closed the connection)
2016-09-22 01:45:30		[01:45]
2016-09-22 01:46:26	<--	yong (~vayne@pD9E441EB.dip0.t-ipconnect.de) has quit (Ping timeout: 265 seconds)
2016-09-22 01:46:29	<--	planet_en (~nkh@80.227.221.138) has quit (Ping timeout: 272 seconds)
2016-09-22 01:47:45	<--	kw01f (~kw01f@merlin.mvtec.com) has quit (Remote host closed the connection)
2016-09-22 01:48:56	<--	KAHR-Alpha (~Alpha@AReims-652-1-187-168.w92-142.abo.wanadoo.fr) has quit (Ping timeout: 265 seconds)
2016-09-22 01:51:09	-->	it_ (~it_@212.243.190.164) has joined ##c++
2016-09-22 01:51:30	<--	refbot (~MotoBot@unaffiliated/moto-chan/bot/refbot) has quit (Ping timeout: 264 seconds)
2016-09-22 01:52:06	<--	Moto-chan (~Rob@unaffiliated/moto-chan) has quit (Ping timeout: 264 seconds)
2016-09-22 01:52:28	-->	refbot (~MotoBot@78.17.126.107) has joined ##c++
2016-09-22 01:52:38	<--	refbot (~MotoBot@78.17.126.107) has quit (Changing host)
2016-09-22 01:52:38	-->	refbot (~MotoBot@unaffiliated/moto-chan/bot/refbot) has joined ##c++
2016-09-22 01:52:40	<--	tlaxkit (~Thunderbi@92.185.154.236) has quit (Quit: tlaxkit)
2016-09-22 01:52:48	-->	Moto-chan (~Rob@78.17.126.107) has joined ##c++
2016-09-22 01:52:48	<--	Moto-chan (~Rob@78.17.126.107) has quit (Changing host)
2016-09-22 01:52:48	-->	Moto-chan (~Rob@unaffiliated/moto-chan) has joined ##c++
2016-09-22 01:53:35	<--	Ahrotahntee (~ahrotahnt@unaffiliated/ahrotahntee) has quit (Quit: leaving)
2016-09-22 01:56:12	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-22 01:57:20	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-22 01:57:24	-->	kw01f (~kw01f@merlin.mvtec.com) has joined ##c++
2016-09-22 01:58:03	<--	Kn|t3 (~agarwalvi@49.207.53.8) has quit (Quit: Kn|t3)
2016-09-22 01:58:14	-->	unK_ (~drunK@78.8.105.174) has joined ##c++
2016-09-22 02:00:15	<--	Beetny (~Beetny@14-202-48-200.tpgi.com.au) has quit (Ping timeout: 260 seconds)
2016-09-22 02:00:27	-->	UnlikeSuika_mobi (~UnlikeSui@223.33.164.182) has joined ##c++
2016-09-22 02:01:07	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-22 02:01:07		[02:01]
2016-09-22 02:01:26	-->	c0le (~c0le@59.99.251.45) has joined ##c++
2016-09-22 02:01:29	-->	zap0 (~moofy@14-201-222-143.tpgi.com.au) has joined ##c++
2016-09-22 02:01:40	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 255 seconds)
2016-09-22 02:02:25	<--	UnlikeSuika_mobi (~UnlikeSui@223.33.164.182) has quit (Client Quit)
2016-09-22 02:02:37	-->	UnlikeSuika_mobi (~UnlikeSui@147.47.141.135) has joined ##c++
2016-09-22 02:02:54	<--	araml (~araml@unaffiliated/araml) has quit (Quit: WeeChat 1.0.1)
2016-09-22 02:03:08	<--	KeelOfSteel (~quassel@ti0049a400-0413.bb.online.no) has quit (Read error: Connection reset by peer)
2016-09-22 02:03:12	<--	UnripeSuica_mobi (~UnlikeSui@147.46.113.63) has quit (Ping timeout: 276 seconds)
2016-09-22 02:03:54	<--	zwliew (uid161395@gateway/web/irccloud.com/x-qduysqkvhkbmguzk) has quit (Quit: Connection closed for inactivity)
2016-09-22 02:04:37	-->	KeelOfSteel (~quassel@ti0049a400-0413.bb.online.no) has joined ##c++
2016-09-22 02:04:48	-->	UnripeSuica_mobi (~UnlikeSui@223.33.164.182) has joined ##c++
2016-09-22 02:06:00	-->	Lomex (~lomex@213.61.34.42) has joined ##c++
2016-09-22 02:06:01	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-22 02:06:05	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-22 02:07:18	<--	UnlikeSuika_mobi (~UnlikeSui@147.47.141.135) has quit (Ping timeout: 265 seconds)
2016-09-22 02:08:33	-->	Zunino (~Zunino@189.114.206.86.dynamic.adsl.gvt.net.br) has joined ##c++
2016-09-22 02:10:13	<--	emilsp (~emilsp@enucs/member/emilsp) has quit (Ping timeout: 255 seconds)
2016-09-22 02:10:43	-->	tuuket (tuuket@varis.damicon.fi) has joined ##c++
2016-09-22 02:11:04	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 244 seconds)
2016-09-22 02:11:53	<--	d_himro (~none@178.124.154.80) has quit (Ping timeout: 248 seconds)
2016-09-22 02:11:57	<--	FreeBirdLjj (~freebirdl@202.119.46.192) has quit (Remote host closed the connection)
2016-09-22 02:12:02	-->	emilsp (~emilsp@enucs/member/emilsp) has joined ##c++
2016-09-22 02:12:11	-->	planet_en (~nkh@80.227.221.138) has joined ##c++
2016-09-22 02:12:35	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-22 02:12:36	-->	d_himro (~none@178.124.154.80) has joined ##c++
2016-09-22 02:13:50	<--	sanct (~sanct@212.35.67.11) has quit (Ping timeout: 244 seconds)
2016-09-22 02:15:50	-->	ewanshin (~ewanshin@183.101.46.30) has joined ##c++
2016-09-22 02:17:27	-->	Palsson (~Palsson@c-a46fe555.06-213-6e6b701.cust.bredbandsbolaget.se) has joined ##c++
2016-09-22 02:17:27		[02:17]
2016-09-22 02:17:30	<--	planet_en (~nkh@80.227.221.138) has quit (Ping timeout: 276 seconds)
2016-09-22 02:17:34	-->	emlai (emil@melkki.cs.helsinki.fi) has joined ##c++
2016-09-22 02:18:20	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-22 02:18:49	<--	KindOne (kindone@freenude/topless/kindone) has quit (Ping timeout: 265 seconds)
2016-09-22 02:18:58	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-22 02:19:13	-->	KindOne (kindone@freenude/topless/kindone) has joined ##c++
2016-09-22 02:19:52	<--	emilsp (~emilsp@enucs/member/emilsp) has quit (Ping timeout: 265 seconds)
2016-09-22 02:20:13	-->	emilsp (~emilsp@enucs/member/emilsp) has joined ##c++
2016-09-22 02:21:32	-->	pheenx (~pheenx@2a02:8071:b68a:1c00:225:22ff:fee7:7dc5) has joined ##c++
2016-09-22 02:21:45	-->	tocka (~tocka@78-56-107-170.static.zebra.lt) has joined ##c++
2016-09-22 02:22:24	--	DingoSaar_ is now known as DingoSaar
2016-09-22 02:22:42	<--	zero_byte (zer0@nat/redhat/x-fqwglpnxyugtlknn) has quit (Ping timeout: 264 seconds)
2016-09-22 02:23:10	-->	LBV_User (~leonardo@177.156.226.0) has joined ##c++
2016-09-22 02:23:33	<--	UnripeSuica_mobi (~UnlikeSui@223.33.164.182) has quit (Quit: RIP)
2016-09-22 02:23:56	-->	UnlikeSuika_mobi (~UnlikeSui@147.47.141.135) has joined ##c++
2016-09-22 02:24:07	-->	GinoManWorks (~GinoMan@50-251-53-110-static.hfc.comcastbusiness.net) has joined ##c++
2016-09-22 02:24:09	-->	xarxer (~xarxer@194.218.229.29) has joined ##c++
2016-09-22 02:24:26	-->	KindOne_ (kindone@freenude/topless/kindone) has joined ##c++
2016-09-22 02:26:35	<--	KindOne (kindone@freenude/topless/kindone) has quit (Ping timeout: 252 seconds)
2016-09-22 02:26:49	-->	Kn|t3 (~agarwalvi@49.207.53.8) has joined ##c++
2016-09-22 02:27:02	-->	UnripeSuica_mobi (~UnlikeSui@223.33.164.182) has joined ##c++
2016-09-22 02:28:17	-->	ferdna (~ferdna@cpe-69-23-141-130.elp.res.rr.com) has joined ##c++
2016-09-22 02:28:42	--	KindOne_ is now known as KindOne
2016-09-22 02:28:46	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-22 02:28:50	<--	UnlikeSuika_mobi (~UnlikeSui@147.47.141.135) has quit (Ping timeout: 260 seconds)
2016-09-22 02:29:25	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-22 02:30:19	-->	mfc (~mfc@unaffiliated/mfc) has joined ##c++
2016-09-22 02:31:34	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-22 02:31:35	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-22 02:31:41	<--	mfc (~mfc@unaffiliated/mfc) has quit (Read error: Connection reset by peer)
2016-09-22 02:35:37	-->	zero_byte (zer0@nat/redhat/x-xbrzjvoxodeexlxa) has joined ##c++
2016-09-22 02:35:37		[02:35]
2016-09-22 02:37:54	<--	Kn|t3 (~agarwalvi@49.207.53.8) has quit (Quit: Kn|t3)
2016-09-22 02:38:37	<--	Palsson (~Palsson@c-a46fe555.06-213-6e6b701.cust.bredbandsbolaget.se) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-09-22 02:38:39	<--	tachoknight_ (~tachoknig@c-73-246-129-13.hsd1.il.comcast.net) has quit (Ping timeout: 265 seconds)
2016-09-22 02:38:55	-->	asc232 (~Keith@179.38.203.21) has joined ##c++
2016-09-22 02:40:29	-->	tachoknight_ (~tachoknig@c-73-246-129-13.hsd1.il.comcast.net) has joined ##c++
2016-09-22 02:41:04	<--	funfunctor (~edward@1.129.96.103) has quit (Quit: Leaving.)
2016-09-22 02:41:22	<--	zap0 (~moofy@14-201-222-143.tpgi.com.au) has quit (Quit: zap0)
2016-09-22 02:41:33	-->	riemann (~riemann@84-10-11-234.static.chello.pl) has joined ##c++
2016-09-22 02:42:07	<--	NeXTSUN (~textual@2601:83:8100:42cf:9cd1:d4d4:62cb:9727) has quit (Quit: My iMac has gone to sleep. ZZZzzz…)
2016-09-22 02:43:05	-->	planet_en (~nkh@80.227.221.138) has joined ##c++
2016-09-22 02:43:09	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-22 02:44:00	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-22 02:45:22	-->	ibouvousaime (~ibouvousa@41.82.45.22) has joined ##c++
2016-09-22 02:46:35	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-22 02:46:48	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-22 02:47:54	<--	planet_en (~nkh@80.227.221.138) has quit (Ping timeout: 264 seconds)
2016-09-22 02:48:18	<--	kasper^ (~safaf@82.137.15.15) has quit (Ping timeout: 265 seconds)
2016-09-22 02:51:53	<--	meandrain (~meandrain@89.39.95.149) has quit (Ping timeout: 248 seconds)
2016-09-22 02:51:53		[02:51]
2016-09-22 02:51:57	-->	SiN_Bizkit (~SiN_Bizki@31.211.38.69) has joined ##c++
2016-09-22 02:52:09	-->	NeXTSUN (~textual@2601:83:8100:42cf:9cd1:d4d4:62cb:9727) has joined ##c++
2016-09-22 02:52:33	<--	cmedeiros (~cmedeiros@191.19.130.128) has quit (Ping timeout: 240 seconds)
2016-09-22 02:52:54	<--	ewanshin (~ewanshin@183.101.46.30) has quit (Quit: Leaving...)
2016-09-22 02:52:55	<--	NeXTSUN (~textual@2601:83:8100:42cf:9cd1:d4d4:62cb:9727) has quit (Client Quit)
2016-09-22 02:54:12	<--	UnripeSuica_mobi (~UnlikeSui@223.33.164.182) has quit (Read error: Connection reset by peer)
2016-09-22 02:54:43	-->	f10 (~flo@2001:470:52af:1:dd05:b755:629c:9755) has joined ##c++
2016-09-22 02:55:40	<--	f10_ (~flo@2001:470:52af:1:dd05:b755:629c:9755) has quit (Ping timeout: 255 seconds)
2016-09-22 02:55:40	<--	f10__ (~flo@2001:470:52af:1:59b:9657:6ac8:c864) has quit (Ping timeout: 255 seconds)
2016-09-22 02:55:58	-->	f10_ (~flo@2001:470:52af:1:e083:b6f8:a539:bbc) has joined ##c++
2016-09-22 02:56:03	-->	UnlikeSuika_mobi (~UnlikeSui@115.93.122.107) has joined ##c++
2016-09-22 02:56:41	<--	rorro (~rorro@c-212-170.eduroam.liu.se) has quit (Ping timeout: 240 seconds)
2016-09-22 02:57:13	-->	p4trix (~p4trix@37.red-79-145-248.dynamicip.rima-tde.net) has joined ##c++
2016-09-22 02:58:18	<--	asc232 (~Keith@179.38.203.21) has quit (Remote host closed the connection)
2016-09-22 02:59:02	-->	Anodl1 (~Anodl@p2003007A2F1E7800B588B1FAF3AA1788.dip0.t-ipconnect.de) has joined ##c++
2016-09-22 03:00:06	-->	Vuks (~Vuks@unaffiliated/vuks69) has joined ##c++
2016-09-22 03:00:47	-->	asc232 (~Keith@179.38.203.21) has joined ##c++
2016-09-22 03:03:19	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 265 seconds)
2016-09-22 03:04:56	<--	Gluesticky (~IceChat9@unaffiliated/gluesticky) has quit (Quit: This is the end. Goodbye cruel world!)
2016-09-22 03:06:01	<--	Vuks (~Vuks@unaffiliated/vuks69) has quit (Ping timeout: 244 seconds)
2016-09-22 03:06:11	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-22 03:06:36	-->	SecondForm_Glenn (~Thunderbi@108.189.70.212) has joined ##c++
2016-09-22 03:06:56	Zunino	Hi. Does anybody know if there is any change planned for how initializer lists are treated and how they may clash with other constructors when the "universal" initialization syntax is used?
2016-09-22 03:06:56		[03:06]
2016-09-22 03:07:03	<--	iamthad (~iamthad@cpe-70-112-32-152.austin.res.rr.com) has quit (Quit: ZNC - http://znc.in)
2016-09-22 03:07:32	-->	slavanap (~slavanap@213.87.146.13) has joined ##c++
2016-09-22 03:07:50	-->	algae (~algae@blk-7-222-201.eastlink.ca) has joined ##c++
2016-09-22 03:08:10	slavanap	Is that possible to suppress g++ warning `overflow in constant expression` in one line with #pragma or __attribute__ ?
2016-09-22 03:08:18	<--	Anodl (~Anodl@213.157.2.74) has quit (Quit: Leaving.)
2016-09-22 03:08:21	-->	sctt (~sctt@107-141-7-158.lightspeed.nsvltn.sbcglobal.net) has joined ##c++
2016-09-22 03:08:53	Zunino	I remember feeling excited when I first saw a snippet of code like vector<int> nums = {4, 0, 5, 1}; I then read about initializer lists and about how one could use them in their own classes.
2016-09-22 03:09:31	-->	Lowl3v3l (~Lowl3v3l@dslb-088-075-098-175.088.075.pools.vodafone-ip.de) has joined ##c++
2016-09-22 03:10:52	Zunino	But then I learned about the possible issues when a class has constructor overloads that could clash with their initializer list one.
2016-09-22 03:10:57	<--	Mnkras (~Mnkras@concrete5/781/Mnkras) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-09-22 03:11:46	Zunino	Was that some kind of oversight by the committee?
2016-09-22 03:12:28	-->	gareppa (~gareppa@151.28.158.45) has joined ##c++
2016-09-22 03:12:36	-->	hosified (~hosified@unaffiliated/hosified) has joined ##c++
2016-09-22 03:13:34	-->	planet_en (~nkh@80.227.221.138) has joined ##c++
2016-09-22 03:13:36	-->	hk238 (~kvirc@unaffiliated/hk238) has joined ##c++
2016-09-22 03:14:17	-->	Limona (~Origin@BSN-142-59-105.dynamic.siol.net) has joined ##c++
2016-09-22 03:15:33	<--	sctt (~sctt@107-141-7-158.lightspeed.nsvltn.sbcglobal.net) has quit (Ping timeout: 240 seconds)
2016-09-22 03:18:04	-->	iik (~IIK@staticline-31-183-46-69.toya.net.pl) has joined ##c++
2016-09-22 03:18:16	<--	planet_en (~nkh@80.227.221.138) has quit (Ping timeout: 265 seconds)
2016-09-22 03:18:46	<--	rendar (~rendar@host64-182-dynamic.37-79-r.retail.telecomitalia.it) has quit (Remote host closed the connection)
2016-09-22 03:19:24	-->	bx3987 (d4db8ea1@gateway/web/freenode/ip.212.219.142.161) has joined ##c++
2016-09-22 03:20:02	<--	bx3987 (d4db8ea1@gateway/web/freenode/ip.212.219.142.161) has quit (Client Quit)
2016-09-22 03:20:51	<--	feliwir (Elite16673@gateway/shell/elitebnc/x-jtcpdkhjlobzachk) has quit (Ping timeout: 272 seconds)
2016-09-22 03:23:52	-->	rendar (~rendar@host64-182-dynamic.37-79-r.retail.telecomitalia.it) has joined ##c++
2016-09-22 03:23:52		[03:23]
2016-09-22 03:23:56	-->	CEnnis91 (uid3543@gateway/web/irccloud.com/x-ecarwkfmaotvasxl) has joined ##c++
2016-09-22 03:25:42	--	lh_cat is now known as lh_mouse
2016-09-22 03:26:43	<--	f10_ (~flo@2001:470:52af:1:e083:b6f8:a539:bbc) has quit (Ping timeout: 255 seconds)
2016-09-22 03:26:43	<--	f10 (~flo@2001:470:52af:1:dd05:b755:629c:9755) has quit (Ping timeout: 255 seconds)
2016-09-22 03:26:54	RokerHRO	Zunino: the initializer-list construction should be used only for containers to fill them with elements on their definition
2016-09-22 03:27:44	<--	lloda (~user@213-193-80-99.static.cablecom.ch) has quit (Read error: Connection reset by peer)
2016-09-22 03:28:13	-->	kimundi (~Kimundi@dynip-129-217-065-035.wifi.tu-dortmund.de) has joined ##c++
2016-09-22 03:28:33	-->	sctt (~sctt@95.143.198.99) has joined ##c++
2016-09-22 03:28:44	<--	xarxer (~xarxer@194.218.229.29) has quit (Quit: Leaving)
2016-09-22 03:29:29	-->	ovrh (~ovrh@93-39-51-19.ip74.fastwebnet.it) has joined ##c++
2016-09-22 03:29:30	<--	ovrh (~ovrh@93-39-51-19.ip74.fastwebnet.it) has quit (Changing host)
2016-09-22 03:29:30	-->	ovrh (~ovrh@unaffiliated/ovrh) has joined ##c++
2016-09-22 03:29:41	velco	I find it quite convenient to do "return {x, y, z};" instead of "return Foo(x, y, z);"
2016-09-22 03:29:42	Zunino	RokerHRO: Right, but that recommendation does not help with the issue of conflicting constructors, e.g. vector<T>::vector(int, int) vs initializer_list
2016-09-22 03:30:29	velco	design you classes so there's no confusion
2016-09-22 03:30:49	<--	emilsp (~emilsp@enucs/member/emilsp) has quit (Ping timeout: 248 seconds)
2016-09-22 03:31:07	velco	e.g. with explicit ctors
2016-09-22 03:31:24	<--	it_ (~it_@212.243.190.164) has quit (Quit: Nettalk6 - www.ntalk.de)
2016-09-22 03:31:50	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-22 03:32:28	-->	emilsp (~emilsp@enucs/member/emilsp) has joined ##c++
2016-09-22 03:33:15	Zunino	velco: Don't you agree it would have been better to not have to deal with that at all?
2016-09-22 03:33:23	Veltas	Zunino: This conflict is extremely annoying, it killed uniform initialization for me
2016-09-22 03:33:33	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-22 03:33:40	Veltas	Well it /is/ uniform initialization
2016-09-22 03:33:49	Zunino	Veltas: same thing here.
2016-09-22 03:34:12	Veltas	Problem is I was hoping for a fix to most vexing parse
2016-09-22 03:34:21	Zunino	What if initializer lists had their own "syntactic markers", so as to make them non ambiguous?
2016-09-22 03:34:21	<--	xnavor (~xnavor@vbg-gw.proceranetworks.com) has quit (Quit: This computer has gone to sleep)
2016-09-22 03:34:55	Veltas	Basically too late now anyway
2016-09-22 03:34:57	Zunino	Say, something like Foo foo{[3, 6, 7, 2]};
2016-09-22 03:35:00	velco	perhaps I do not really understand what is the problem
2016-09-22 03:35:21	-->	Murii (~Murii@86.127.60.21) has joined ##c++
2016-09-22 03:35:39	-->	f3r70rr35f (~fernando@186.36.52.35) has joined ##c++
2016-09-22 03:35:42	velco	(except for "old" classes, designed before c++11)
2016-09-22 03:35:50	Zunino	That should be interpreted as a constructor that takes a single argument: an explicitly defined initializer list.
2016-09-22 03:36:05	Veltas	velco: he return {x,y,z} is actually quite useful yes
2016-09-22 03:36:11	Veltas	the*
2016-09-22 03:36:29	<--	ovrh (~ovrh@unaffiliated/ovrh) has quit (Quit: ovrh)
2016-09-22 03:36:52	-->	ovrh (~ovrh@93-39-51-19.ip74.fastwebnet.it) has joined ##c++
2016-09-22 03:36:52	<--	ovrh (~ovrh@93-39-51-19.ip74.fastwebnet.it) has quit (Changing host)
2016-09-22 03:36:52	-->	ovrh (~ovrh@unaffiliated/ovrh) has joined ##c++
2016-09-22 03:37:33	<--	watersoul (~ircuser@172.245.255.61) has quit (Ping timeout: 240 seconds)
2016-09-22 03:37:38	<--	josef__k (~jeremy@59.102.31.229) has quit (Ping timeout: 265 seconds)
2016-09-22 03:38:08	-->	Mnkras (~Mnkras@concrete5/781/Mnkras) has joined ##c++
2016-09-22 03:38:16	Zunino	Veltas: what you said about it being too late now is what saddens me.
2016-09-22 03:38:30	-->	jaafar (~quassel@50-206-78-205-static.hfc.comcastbusiness.net) has joined ##c++
2016-09-22 03:38:41	-->	govg (~govg@unaffiliated/govg) has joined ##c++
2016-09-22 03:40:10	Zunino	With all the rust that C++ already has to carry over, people come up with a new feature to supposedly make things easier and universal, only to introduce new issues.
2016-09-22 03:40:10		[03:40]
2016-09-22 03:40:29	-->	Vuks (~Vuks@unaffiliated/vuks69) has joined ##c++
2016-09-22 03:40:46	-->	gp5st (17194381@gateway/web/freenode/ip.23.25.67.129) has joined ##c++
2016-09-22 03:40:59	Zunino	The irony is that, at least AFAIK, one of the greatest motivations was to rid C++ of its infamous "vexing parse".
2016-09-22 03:41:36	Veltas	I don't know if it was a motivation, but that's how it was sold to me, and it's false advertising
2016-09-22 03:41:54	<--	bjz (~bjz@14-201-215-168.tpgi.com.au) has quit (Read error: Connection reset by peer)
2016-09-22 03:42:06	Veltas	I suspect the going name of "uniform intialization" is a more accurate description
2016-09-22 03:42:31	-->	bjz (~bjz@14-201-215-168.tpgi.com.au) has joined ##c++
2016-09-22 03:43:02	Veltas	Because that's what it does, it unifies two different things... which is fun until it favors intializer lists, although it probably should if I understand their criteria
2016-09-22 03:43:23	-->	Kn|t3 (~agarwalvi@49.207.53.8) has joined ##c++
2016-09-22 03:44:07	-->	planet_en (~nkh@80.227.221.138) has joined ##c++
2016-09-22 03:44:09	<--	kimundi (~Kimundi@dynip-129-217-065-035.wifi.tu-dortmund.de) has quit (Ping timeout: 248 seconds)
2016-09-22 03:44:23	Zunino	Veltas: right, but don't you think there could be a win-win situation if initializer lists had their own, unambiguous syntax?
2016-09-22 03:44:46	<--	sctt (~sctt@95.143.198.99) has quit (Ping timeout: 244 seconds)
2016-09-22 03:45:07	LBV_User	then it would not be uniform...
2016-09-22 03:45:34	Veltas	Well they do. The problem is that they wanted to have a uniform way to make intializer list vs parameters irrelevant, and then people also decided they'd fixed the most vexing parse
2016-09-22 03:45:44	<--	jackhum (uid97400@gateway/web/irccloud.com/x-cckomcnmhdmhdzvk) has quit (Quit: Connection closed for inactivity)
2016-09-22 03:45:55	Veltas	I don't think they have because I don't actually want to worry about accidentally triggering an inappropriate intializer list constructor
2016-09-22 03:46:07	-->	bmt (~bmt@aena166.neoplus.adsl.tpnet.pl) has joined ##c++
2016-09-22 03:46:12	Veltas	It's still useful in some situations
2016-09-22 03:46:46	-->	maltouzes (~maltouzes@2a01:e35:8a43:21b0:a918:3a30:c327:3cbc) has joined ##c++
2016-09-22 03:46:59	<--	maltouzes (~maltouzes@2a01:e35:8a43:21b0:a918:3a30:c327:3cbc) has quit (Client Quit)
2016-09-22 03:47:00	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-22 03:47:00	-->	Eddi (~Eddi@cac94-8-82-245-27-76.fbx.proxad.net) has joined ##c++
2016-09-22 03:47:12	-->	maltouzes (~me@2a01:e35:8a43:21b0:a918:3a30:c327:3cbc) has joined ##c++
2016-09-22 03:47:15	<--	Eddi (~Eddi@cac94-8-82-245-27-76.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-22 03:47:28	-->	Kakarott (~mbellerse@109.104.42.73) has joined ##c++
2016-09-22 03:47:31	-->	occamsblazer (~occamsbla@131.228.197.63) has joined ##c++
2016-09-22 03:47:46	-->	mew (~mew@cac94-8-82-245-27-76.fbx.proxad.net) has joined ##c++
2016-09-22 03:47:54	-->	josef__k (~jeremy@59.102.16.55) has joined ##c++
2016-09-22 03:48:02	<--	mew (~mew@cac94-8-82-245-27-76.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-22 03:48:05	<--	maltouzes (~me@2a01:e35:8a43:21b0:a918:3a30:c327:3cbc) has quit (Client Quit)
2016-09-22 03:48:18	<--	Kn|t3 (~agarwalvi@49.207.53.8) has quit (Quit: Kn|t3)
2016-09-22 03:48:20	-->	maltouzes (~maltouzes@2a01:e35:8a43:21b0:a918:3a30:c327:3cbc) has joined ##c++
2016-09-22 03:48:23	Zunino	IIRC, Scott Meyers (why'd you leave us?!) once wrote about the universal initialization "fiasco" (my own wording).
2016-09-22 03:48:42	<--	bmt (~bmt@aena166.neoplus.adsl.tpnet.pl) has quit (Max SendQ exceeded)
2016-09-22 03:48:46	<--	planet_en (~nkh@80.227.221.138) has quit (Ping timeout: 255 seconds)
2016-09-22 03:49:12	-->	bmt (~bmt@aena166.neoplus.adsl.tpnet.pl) has joined ##c++
2016-09-22 03:49:26	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-22 03:49:47	<--	bmt (~bmt@aena166.neoplus.adsl.tpnet.pl) has quit (Max SendQ exceeded)
2016-09-22 03:49:53	Zunino	Found it: http://scottmeyers.blogspot.com.br/2015/09/thoughts-on-vagaries-of-c-initialization.html
2016-09-22 03:50:16	Zunino	It is not only focused on the very issue I've brought up, but still worth a read.
2016-09-22 03:50:17	-->	bmt (~bmt@aena166.neoplus.adsl.tpnet.pl) has joined ##c++
2016-09-22 03:50:37	Zunino	I meant to write "not focused only on"
2016-09-22 03:50:41	<--	Jiwan (~jeangu@212.247.124.2) has quit (Remote host closed the connection)
2016-09-22 03:50:51	<--	bmt (~bmt@aena166.neoplus.adsl.tpnet.pl) has quit (Max SendQ exceeded)
2016-09-22 03:51:11	-->	Jiwan (~jeangu@212.247.124.2) has joined ##c++
2016-09-22 03:51:19	-->	bmt (~bmt@aena166.neoplus.adsl.tpnet.pl) has joined ##c++
2016-09-22 03:51:55	<--	bmt (~bmt@aena166.neoplus.adsl.tpnet.pl) has quit (Max SendQ exceeded)
2016-09-22 03:52:24	-->	bmt (~bmt@aena166.neoplus.adsl.tpnet.pl) has joined ##c++
2016-09-22 03:53:04	<--	bmt (~bmt@aena166.neoplus.adsl.tpnet.pl) has quit (Max SendQ exceeded)
2016-09-22 03:53:25	-->	ouxg (~ouxg@mar13-2-82-246-223-195.fbx.proxad.net) has joined ##c++
2016-09-22 03:53:29	-->	bmt (~bmt@aena166.neoplus.adsl.tpnet.pl) has joined ##c++
2016-09-22 03:53:30	-->	inco6 (~pepe@cpepool9acmts2-6.sanbrunocable.com) has joined ##c++
2016-09-22 03:53:34	-->	josh_ (~josh@c-67-182-242-240.hsd1.ut.comcast.net) has joined ##c++
2016-09-22 03:54:10	<--	bmt (~bmt@aena166.neoplus.adsl.tpnet.pl) has quit (Max SendQ exceeded)
2016-09-22 03:54:19	-->	Rudolf (~rodolfo@unaffiliated/rudolf) has joined ##c++
2016-09-22 03:54:39	-->	bmt (~bmt@aena166.neoplus.adsl.tpnet.pl) has joined ##c++
2016-09-22 03:55:25	<--	bmt (~bmt@aena166.neoplus.adsl.tpnet.pl) has quit (Max SendQ exceeded)
2016-09-22 03:55:25		[03:55]
2016-09-22 03:55:26	<--	scs (~joseph@82.20.74.94) has quit (Quit: leaving)
2016-09-22 03:55:33	<--	mss_cyclist (~MSe@89-250-189-210.tangos.nl) has quit (Ping timeout: 250 seconds)
2016-09-22 03:55:58	<--	slavanap (~slavanap@213.87.146.13) has quit (Ping timeout: 244 seconds)
2016-09-22 03:56:37	<--	googol (~matthew@192.81.130.185) has quit (Read error: error:1408F10B:SSL routines:SSL3_GET_RECORD:wrong version number)
2016-09-22 03:56:44	-->	sctt (~sctt@107-141-7-158.lightspeed.nsvltn.sbcglobal.net) has joined ##c++
2016-09-22 03:57:01	-->	scs (~joseph@82.20.74.94) has joined ##c++
2016-09-22 03:57:09	<--	bjz (~bjz@14-201-215-168.tpgi.com.au) has quit (Read error: Connection reset by peer)
2016-09-22 03:57:24	-->	googol (~matthew@192.81.130.185) has joined ##c++
2016-09-22 03:57:49	-->	joeydelescrub (~joeydeles@2001:981:109d:1:f5d9:5369:6a5b:3ab2) has joined ##c++
2016-09-22 03:57:53	-->	bjz (~bjz@14-201-215-168.tpgi.com.au) has joined ##c++
2016-09-22 03:58:15	<--	googol (~matthew@192.81.130.185) has quit (Client Quit)
2016-09-22 03:58:19	-->	JohnMS_WORK (~chatzilla@host-193-59-178-3.gog.com) has joined ##c++
2016-09-22 03:58:22	-->	googol (~matthew@192.81.130.185) has joined ##c++
2016-09-22 03:58:54	<--	Karyon (~yaaic@unaffiliated/karyon) has quit (Remote host closed the connection)
2016-09-22 03:59:12	-->	erbse (~test@unaffiliated/erbse) has joined ##c++
2016-09-22 04:00:02	-->	FreeBirdLjj (~freebirdl@112.0.51.132) has joined ##c++
2016-09-22 04:00:36	-->	Karyon (~yaaic@unaffiliated/karyon) has joined ##c++
2016-09-22 04:00:37	<--	Aquza (~Aquza@p578b4612.dip0.t-ipconnect.de) has quit
2016-09-22 04:00:44	<--	kw01f (~kw01f@merlin.mvtec.com) has quit
2016-09-22 04:01:23	<--	kilbith (4ee51c3e@gateway/web/cgi-irc/kiwiirc.com/ip.78.229.28.62) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-09-22 04:01:30	<--	FreeBirdLjj (~freebirdl@112.0.51.132) has quit (Read error: Connection reset by peer)
2016-09-22 04:02:47	-->	FreeBirdLjj (~freebirdl@2002:df41:5483:0:8c28:15d4:c1cb:ac0a) has joined ##c++
2016-09-22 04:03:20	<--	ibouvousaime (~ibouvousa@41.82.45.22) has quit (Ping timeout: 260 seconds)
2016-09-22 04:03:22	<--	zero_byte (zer0@nat/redhat/x-xbrzjvoxodeexlxa) has quit (Ping timeout: 244 seconds)
2016-09-22 04:03:39	<--	hk238 (~kvirc@unaffiliated/hk238) has quit (Quit: http://www.kvirc.net/ 4.9.2 Aria)
2016-09-22 04:04:24	<--	Vuks (~Vuks@unaffiliated/vuks69) has quit (Ping timeout: 244 seconds)
2016-09-22 04:05:20	-->	cmedeiros (~cmedeiros@200.186.50.162) has joined ##c++
2016-09-22 04:06:11	-->	araml (~araml@unaffiliated/araml) has joined ##c++
2016-09-22 04:06:33	-->	Brklyn (~truthbk@38.122.226.210) has joined ##c++
2016-09-22 04:06:39	<--	anton02 (~quassel@lal1651212.lnk.telstra.net) has quit (Remote host closed the connection)
2016-09-22 04:07:24	-->	Palsson (~Palsson@c-a46fe555.06-213-6e6b701.cust.bredbandsbolaget.se) has joined ##c++
2016-09-22 04:07:41	<--	xaxxon (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has quit (Quit: This computer has gone to sleep)
2016-09-22 04:08:00	<--	ouxg (~ouxg@mar13-2-82-246-223-195.fbx.proxad.net) has quit (Ping timeout: 260 seconds)
2016-09-22 04:08:06	<--	rriemann_ (~rriemann@dhcp-67-135.ixxi.ens-lyon.fr) has quit (Quit: Konversation terminated!)
2016-09-22 04:08:57	<--	Palsson (~Palsson@c-a46fe555.06-213-6e6b701.cust.bredbandsbolaget.se) has quit (Client Quit)
2016-09-22 04:08:59	-->	planet_en (~nkh@80.227.221.138) has joined ##c++
2016-09-22 04:10:11	-->	snover (~Adium@unaffiliated/snover) has joined ##c++
2016-09-22 04:10:11	<--	Zunino (~Zunino@189.114.206.86.dynamic.adsl.gvt.net.br) has left ##c++
2016-09-22 04:10:19	<--	joeydelescrub (~joeydeles@2001:981:109d:1:f5d9:5369:6a5b:3ab2) has quit (Read error: Connection reset by peer)
2016-09-22 04:11:10	<--	gareppa (~gareppa@151.28.158.45) has quit (Quit: Leaving)
2016-09-22 04:11:10		[04:11]
2016-09-22 04:11:55	<--	asc232 (~Keith@179.38.203.21) has quit (Remote host closed the connection)
2016-09-22 04:12:19	-->	kasper^ (~safaf@46.97.122.30) has joined ##c++
2016-09-22 04:13:16	<--	Kakarott (~mbellerse@109.104.42.73) has quit (Quit: Kakarott)
2016-09-22 04:13:27	<--	norcuron (~norcuron@178.33.54.251) has quit (Ping timeout: 265 seconds)
2016-09-22 04:13:59	-->	Palsson (~Palsson@c-a46fe555.06-213-6e6b701.cust.bredbandsbolaget.se) has joined ##c++
2016-09-22 04:14:06	-->	norcuron (~norcuron@178.33.54.251) has joined ##c++
2016-09-22 04:14:09	-->	iamthad (~iamthad@cpe-70-112-32-152.austin.res.rr.com) has joined ##c++
2016-09-22 04:14:23	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-22 04:14:26	-->	lloda (~user@213-193-80-99.static.cablecom.ch) has joined ##c++
2016-09-22 04:14:39	-->	Gathis (~TheBlack@unaffiliated/gathis) has joined ##c++
2016-09-22 04:15:36	-->	kimundi (~Kimundi@p4FE2FDD6.dip0.t-ipconnect.de) has joined ##c++
2016-09-22 04:15:57	-->	zero_byte (zer0@nat/redhat/x-dmucglcouhyauala) has joined ##c++
2016-09-22 04:16:45	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-22 04:17:05	<--	re1 (~reiser@178.220.4.176) has quit (Ping timeout: 240 seconds)
2016-09-22 04:17:21	-->	kurushii (~kurushii@host86-140-98-159.range86-140.btcentralplus.com) has joined ##c++
2016-09-22 04:17:37	-->	re1 (~reiser@178.220.4.176) has joined ##c++
2016-09-22 04:17:40	<--	Palsson (~Palsson@c-a46fe555.06-213-6e6b701.cust.bredbandsbolaget.se) has quit (Client Quit)
2016-09-22 04:17:43	<--	maltouzes (~maltouzes@2a01:e35:8a43:21b0:a918:3a30:c327:3cbc) has quit (Quit: Leaving)
2016-09-22 04:18:41	-->	riksteri (~SpaceDino@62.102.148.177) has joined ##c++
2016-09-22 04:19:36	<--	flavi0 (~anon@unaffiliated/flavi0) has quit (Quit: leaving)
2016-09-22 04:19:41	-->	Kn|t3 (~agarwalvi@49.207.53.8) has joined ##c++
2016-09-22 04:20:23	<--	bmohan (~bmohan@host86-176-67-69.range86-176.btcentralplus.com) has quit (Ping timeout: 272 seconds)
2016-09-22 04:20:39	<--	Anticom (~quassel@217.6.33.234) has quit (Remote host closed the connection)
2016-09-22 04:20:50	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-22 04:20:50	<--	Karyon (~yaaic@unaffiliated/karyon) has quit (Remote host closed the connection)
2016-09-22 04:20:57	<--	dj_pi (~dj@c-73-191-212-56.hsd1.mi.comcast.net) has quit (Ping timeout: 248 seconds)
2016-09-22 04:21:15	-->	rtkt (~rtkt@226.18-78-194.adsl-static.isp.belgacom.be) has joined ##c++
2016-09-22 04:21:59	--	xissburg_ is now known as xissburg
2016-09-22 04:22:03	<--	zero_byte (zer0@nat/redhat/x-dmucglcouhyauala) has quit (Ping timeout: 240 seconds)
2016-09-22 04:22:34	-->	ibouvousaime (~ibouvousa@41.82.45.22) has joined ##c++
2016-09-22 04:25:12	<--	Markow (~Markow@176.122.215.103) has quit (Remote host closed the connection)
2016-09-22 04:25:13	Levitator	Hrm. constexpr function arguments are not a thing?
2016-09-22 04:25:28	-->	Orgy (~Orgy@prz29-1-78-205-58-16.fbx.proxad.net) has joined ##c++
2016-09-22 04:25:42	<--	Orgy (~Orgy@prz29-1-78-205-58-16.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-22 04:25:55	-->	gdqo (~gdqo@prz29-1-78-205-58-16.fbx.proxad.net) has joined ##c++
2016-09-22 04:26:03	<--	AquaL1te (~AquaL1te@unaffiliated/aqual1te) has quit (Quit: leaving)
2016-09-22 04:26:15	-->	m_ben (~m_ben@unaffiliated/m-ben/x-5917362) has joined ##c++
2016-09-22 04:26:15		[04:26]
2016-09-22 04:26:58	<--	w3z (~w3z@173-169-121-88.res.bhn.net) has quit (Quit: w3z)
2016-09-22 04:27:03	-->	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has joined ##c++
2016-09-22 04:27:04	<--	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has quit (Max SendQ exceeded)
2016-09-22 04:27:30	-->	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has joined ##c++
2016-09-22 04:27:31	<--	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has quit (Max SendQ exceeded)
2016-09-22 04:27:36	<--	merced (~merced@unaffiliated/merced) has left ##c++ ("WeeChat 0.4.2")
2016-09-22 04:27:54	Levitator	I was hoping that you could overload a function to be constexpr to obtain a certain behavior when passed a static string.
2016-09-22 04:27:56	-->	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has joined ##c++
2016-09-22 04:27:57	<--	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has quit (Max SendQ exceeded)
2016-09-22 04:28:03	-->	jackhum (uid97400@gateway/web/irccloud.com/x-ubukiyflzavauucy) has joined ##c++
2016-09-22 04:28:20	-->	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has joined ##c++
2016-09-22 04:28:21	<--	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has quit (Max SendQ exceeded)
2016-09-22 04:28:32	RokerHRO	Levitator: a static string? or a string literal?
2016-09-22 04:28:41	-->	GenteelBen (~GenteelBe@cpc70133-lutn12-2-0-cust324.9-3.cable.virginm.net) has joined ##c++
2016-09-22 04:28:45	-->	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has joined ##c++
2016-09-22 04:29:06	Levitator	More like a string literal, really.
2016-09-22 04:29:47	-->	snowkidind (~textual@pool-96-255-207-158.washdc.fios.verizon.net) has joined ##c++
2016-09-22 04:31:20	-->	Zunino (~Zunino@189.114.206.86.dynamic.adsl.gvt.net.br) has joined ##c++
2016-09-22 04:31:21	-->	fahadash (uid44972@gateway/web/irccloud.com/x-pvdrvscaxezzswdv) has joined ##c++
2016-09-22 04:31:48	-->	watersoul (~ircuser@172.245.255.61) has joined ##c++
2016-09-22 04:32:00	Levitator	Is there some compile-time way of overloading a function so that it operates only on read-only compile-time values?
2016-09-22 04:32:27	Levitator	Specifically, I want to make COW totally transparent for a String class I'm writing for a platform that lacks it.
2016-09-22 04:33:00	Levitator	I guess that's kind of redundant.
2016-09-22 04:33:11	-->	rorro (~rorro@c-227-152.eduroam.liu.se) has joined ##c++
2016-09-22 04:33:44	-->	Biokee (~BioKey@2a02:1205:506f:db70:e1cc:c2a6:9779:8517) has joined ##c++
2016-09-22 04:34:08	--	Biokee is now known as Guest14631
2016-09-22 04:34:40	-->	Vincent7 (~NoIdent@dslb-188-101-011-143.188.101.pools.vodafone-ip.de) has joined ##c++
2016-09-22 04:35:36	Levitator	Oh, I see. Looks like constexpr doesn't work on constructors.
2016-09-22 04:35:42	-->	zero_byte (zer0@nat/redhat/x-srdtmlulqrwutvrr) has joined ##c++
2016-09-22 04:36:07	-->	darthdeus (~darthdeus@146.185.169.128) has joined ##c++
2016-09-22 04:36:10	<--	magnicida (~raskolnik@2a02:8109:8c80:231:ea39:dfff:fe4d:275b) has quit (Quit: Leaving.)
2016-09-22 04:37:14	Levitator	Constexpr has a lot of restrictions. Looks like it's intended mostly for compile-time metaprogramming.
2016-09-22 04:37:37	<--	sarbs (~sarbs@c-67-182-146-128.hsd1.wa.comcast.net) has quit (Max SendQ exceeded)
2016-09-22 04:37:38	V-ille	constexpr doesn't work on constructors? wtf do you mean?
2016-09-22 04:37:57	V-ille	and no, you can't overload on constexpr
2016-09-22 04:38:05	-->	Haruno (~Haruno@unaffiliated/haruno) has joined ##c++
2016-09-22 04:38:06	-->	sarbs (~sarbs@2601:600:9001:69f0:dd9:58c8:7c0b:6266) has joined ##c++
2016-09-22 04:38:19	-->	syem (~s@unaffiliated/syem) has joined ##c++
2016-09-22 04:38:23	-->	dli (44432a43@gateway/web/freenode/ip.68.67.42.67) has joined ##c++
2016-09-22 04:38:48	RokerHRO	Levitator: string literals have the type  const char[length]  so you can overload on that
2016-09-22 04:38:54	Levitator	Ahhhhh.
2016-09-22 04:39:10	RokerHRO	but is that a good idea? I doubt that.
2016-09-22 04:39:15	V-ille	presumably you want to overload with a reference type
2016-09-22 04:39:27	V-ille	otherwise const char[length] will not mean what you think it means
2016-09-22 04:39:43	-->	Nilesh_ (uid116340@gateway/web/irccloud.com/x-dxoijapoyltjvyjp) has joined ##c++
2016-09-22 04:40:01	Levitator	It has to be a reference? That's counterintuitive.
2016-09-22 04:40:12	<--	Albori (~Albori@64-15-83-167.fidnet.com) has quit (Quit: WeeChat 1.6-rc1)
2016-09-22 04:40:31	V-ille	well, there are no parameters of array type
2016-09-22 04:40:34	<--	Furkiepurkie (~Furkie@2001:1af8:4700:a03c:7::) has quit (Quit: leaving)
2016-09-22 04:40:35	<--	Mnkras (~Mnkras@concrete5/781/Mnkras) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-09-22 04:40:37	dli	how do I declare a functional type with argument by reference to a raw array? std::fucntion<void( ? )> f = [](int (&arg)[4]){};
2016-09-22 04:40:49	-->	StardustX (~s@2001:da8:203:2209:9f0b:a7f:1ebc:1f01) has joined ##c++
2016-09-22 04:41:30	V-ille	{ std::fucntion<void(int (&)[4])> f = [](int (&arg)[4]){}; }
2016-09-22 04:41:30		[04:41]
2016-09-22 04:41:30	geordi	error: 'fucntion' is not a member of 'std'
2016-09-22 04:41:35	V-ille	{ std::function<void(int (&)[4])> f = [](int (&arg)[4]){}; }
2016-09-22 04:41:36	geordi	<no output>
2016-09-22 04:41:39	V-ille	like that, maybe?
2016-09-22 04:41:50	Levitator	So f(const char &blah[123]) is guaranteed to reference a string literal?
2016-09-22 04:41:57	V-ille	no
2016-09-22 04:42:16	V-ille	it's guaranteed to reference an array, but there's no way to guarantee that something references a literal
2016-09-22 04:42:18	dli	V-ille: thanks! :)
2016-09-22 04:42:18	Levitator	So, maybe template<T, size_t len> void f(const char &blah[len])
2016-09-22 04:42:43	Levitator	Hrm. That's disappointing.
2016-09-22 04:42:56	<--	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has quit (Read error: Connection reset by peer)
2016-09-22 04:42:59	Levitator	I'll just have to have an argument that allows you to specify COW.
2016-09-22 04:43:25	Levitator	It's for one of those tiny microcontrollers which would actually benefit from COW.
2016-09-22 04:44:09	<--	c0le (~c0le@59.99.251.45) has quit (Quit: "This is the end.. My beautiful friend.. The end.")
2016-09-22 04:44:39	-->	FreeBird_ (~freebirdl@223.65.84.131) has joined ##c++
2016-09-22 04:45:02	Levitator	So, this means that if I push five strings into a queue, and they happen to be literals, it will save five copies and frees.
2016-09-22 04:45:11	<--	Lomex (~lomex@213.61.34.42) has quit
2016-09-22 04:45:35	Levitator	Plus memory savings for the buffers.
2016-09-22 04:46:07	gp5st	Levitator: won't it just reference the original array/string? and not do a copy of the contents?
2016-09-22 04:46:27	Levitator	That's the point of COW.
2016-09-22 04:46:53	Levitator	And if you call a non-const member, then it performs the copy and acts as if it was always a copy, from then on.
2016-09-22 04:46:56	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-22 04:47:28	-->	Lomex (~lomex@213.61.34.42) has joined ##c++
2016-09-22 04:47:59	<--	inco6 (~pepe@cpepool9acmts2-6.sanbrunocable.com) has left ##c++
2016-09-22 04:48:00	-->	inco6 (~pepe@cpepool9acmts2-6.sanbrunocable.com) has joined ##c++
2016-09-22 04:48:09	<--	FreeBirdLjj (~freebirdl@2002:df41:5483:0:8c28:15d4:c1cb:ac0a) has quit (Ping timeout: 248 seconds)
2016-09-22 04:48:13	Levitator	So, I have my COW Vector, which I am using as the base class for my String, to minimize code emission.
2016-09-22 04:48:14	<--	gdqo (~gdqo@prz29-1-78-205-58-16.fbx.proxad.net) has quit (Remote host closed the connection)
2016-09-22 04:48:30	-->	Mnkras (~Mnkras@concrete5/781/Mnkras) has joined ##c++
2016-09-22 04:48:30	-->	yyzr (~yyzr@prz29-1-78-205-58-16.fbx.proxad.net) has joined ##c++
2016-09-22 04:49:03	-->	jkhl (~j@host86-182-59-122.range86-182.btcentralplus.com) has joined ##c++
2016-09-22 04:49:29	gp5st	to copy, don't you have to allocate memory?
2016-09-22 04:49:45	gp5st	Levitator: on my 8bits I try my hardest to never dynamically allocate memory
2016-09-22 04:50:05	<--	inco6 (~pepe@cpepool9acmts2-6.sanbrunocable.com) has quit (K-Lined)
2016-09-22 04:50:14	Levitator	Yes, you have to allocate memory. The point though, is to have a class that acts as if it allocates memory, but avoids it unless/until it's necessary.
2016-09-22 04:50:26	-->	inco6 (~pepe@41.86.36.53) has joined ##c++
2016-09-22 04:50:27	<--	inco6 (~pepe@41.86.36.53) has quit (Max SendQ exceeded)
2016-09-22 04:50:32	-->	bmohan (~bmohan@109.144.242.172) has joined ##c++
2016-09-22 04:50:36	-->	sanett (~sanett@202.119.43.93) has joined ##c++
2016-09-22 04:50:42	-->	feliwir (Elite16673@gateway/shell/elitebnc/x-fgneeavqusqdgjmd) has joined ##c++
2016-09-22 04:50:50	-->	inco6 (~pepe@41.86.36.53) has joined ##c++
2016-09-22 04:50:51	<--	inco6 (~pepe@41.86.36.53) has quit (Max SendQ exceeded)
2016-09-22 04:51:06	Levitator	Anyway, I'm writing this to be totally interrupt-driven with asynchronous I/O. I don't know why Arduino's crap is all blocking calls when AVR has such good interrupt support.
2016-09-22 04:51:11	-->	inco6 (~pepe@41.86.36.53) has joined ##c++
2016-09-22 04:51:12	<--	inco6 (~pepe@41.86.36.53) has quit (Max SendQ exceeded)
2016-09-22 04:51:33	-->	inco6 (~pepe@41.86.36.53) has joined ##c++
2016-09-22 04:51:34	<--	inco6 (~pepe@41.86.36.53) has quit (Max SendQ exceeded)
2016-09-22 04:51:45	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-22 04:52:06	Levitator	Dynamic memory isn't going to kill it in the least. The moment it exits free() or malloc(), it will jump to any interrupts that are pending. Doesn't matter if it's doing thousands of them in a loop.
2016-09-22 04:52:41	<--	kasper^ (~safaf@46.97.122.30) has quit (Ping timeout: 240 seconds)
2016-09-22 04:53:35	-->	UnlikeSuika (~UnlikeSui@115.93.122.107) has joined ##c++
2016-09-22 04:54:14	<--	navidr (uid112413@gateway/web/irccloud.com/x-herwvjfraxtmxxay) has quit (Quit: Connection closed for inactivity)
2016-09-22 04:54:43	gp5st	It's easier to teach beginners on the blocking stuff in my experience. Creating (in hardware) and handling exceptions well is difficult
2016-09-22 04:55:10	-->	inco6 (~pepe@bch66-h01-31-32-239-128.dsl.sta.abo.bbox.fr) has joined ##c++
2016-09-22 04:55:11	<--	inco6 (~pepe@bch66-h01-31-32-239-128.dsl.sta.abo.bbox.fr) has quit (Max SendQ exceeded)
2016-09-22 04:55:29	-->	inco6 (~pepe@bch66-h01-31-32-239-128.dsl.sta.abo.bbox.fr) has joined ##c++
2016-09-22 04:55:30	<--	inco6 (~pepe@bch66-h01-31-32-239-128.dsl.sta.abo.bbox.fr) has quit (Max SendQ exceeded)
2016-09-22 04:55:37	<--	McNozes (~McNozes@bl6-226-245.dsl.telepac.pt) has quit (Ping timeout: 248 seconds)
2016-09-22 04:55:46	gp5st	Also, dynamically allocating memory on an 8bit just feels wrong :-\ even more so if it's hidden
2016-09-22 04:55:50	-->	inco6 (~pepe@bch66-h01-31-32-239-128.dsl.sta.abo.bbox.fr) has joined ##c++
2016-09-22 04:55:51	<--	inco6 (~pepe@bch66-h01-31-32-239-128.dsl.sta.abo.bbox.fr) has quit (Max SendQ exceeded)
2016-09-22 04:56:13	gp5st	it's much harder to analyze
2016-09-22 04:56:25	-->	tlaxkit (~Thunderbi@92.185.154.236) has joined ##c++
2016-09-22 04:56:28	-->	Albori (~Albori@64-15-83-167.fidnet.com) has joined ##c++
2016-09-22 04:56:33	<--	perrier-jouet (~perrier-j@70.48.137.39) has quit (Quit: WeeChat 1.5)
2016-09-22 04:56:33		[04:56]
2016-09-22 04:57:01	catern	is there some way to automatically generate a definition of a hash function for the class I defined?
2016-09-22 04:57:02	catern	is there some way to automatically generate a definition of a hash function for the class I defined?
2016-09-22 04:57:10	<--	jaafar (~quassel@50-206-78-205-static.hfc.comcastbusiness.net) has quit (Ping timeout: 255 seconds)
2016-09-22 04:57:33	-->	McNozes (~McNozes@bl6-226-245.dsl.telepac.pt) has joined ##c++
2016-09-22 04:57:38	gp5st	catern: that's a vague question. what would it be generated to do?
2016-09-22 04:57:45	-->	inco6 (~pepe@176.122.120.65) has joined ##c++
2016-09-22 04:57:46	<--	inco6 (~pepe@176.122.120.65) has quit (Max SendQ exceeded)
2016-09-22 04:58:00	-->	inco6 (~pepe@176.122.120.65) has joined ##c++
2016-09-22 04:58:01	<--	inco6 (~pepe@176.122.120.65) has quit (Max SendQ exceeded)
2016-09-22 04:58:16	-->	inco6 (~pepe@176.122.120.65) has joined ##c++
2016-09-22 04:58:16	<--	inco6 (~pepe@176.122.120.65) has quit (Max SendQ exceeded)
2016-09-22 04:58:31	-->	inco6 (~pepe@176.122.120.65) has joined ##c++
2016-09-22 04:58:32	<--	inco6 (~pepe@176.122.120.65) has quit (Max SendQ exceeded)
2016-09-22 04:58:46	-->	inco6 (~pepe@176.122.120.65) has joined ##c++
2016-09-22 04:58:48	<--	inco6 (~pepe@176.122.120.65) has quit (Max SendQ exceeded)
2016-09-22 04:58:56	-->	meandrain (~meandrain@89.39.95.149) has joined ##c++
2016-09-22 04:59:01	-->	inco6 (~pepe@77.244.21.54) has joined ##c++
2016-09-22 04:59:01	<--	inco6 (~pepe@77.244.21.54) has quit (Max SendQ exceeded)
2016-09-22 04:59:15	-->	inco6 (~pepe@77.244.21.54) has joined ##c++
2016-09-22 04:59:16	<--	inco6 (~pepe@77.244.21.54) has quit (Max SendQ exceeded)
2016-09-22 04:59:29	-->	inco6 (~pepe@77.244.21.54) has joined ##c++
2016-09-22 04:59:30	<--	inco6 (~pepe@77.244.21.54) has quit (Max SendQ exceeded)
2016-09-22 04:59:43	-->	inco6 (~pepe@77.244.21.54) has joined ##c++
2016-09-22 04:59:44	<--	inco6 (~pepe@77.244.21.54) has quit (Max SendQ exceeded)
2016-09-22 04:59:57	-->	inco6 (~pepe@77.244.21.54) has joined ##c++
2016-09-22 04:59:58	<--	inco6 (~pepe@77.244.21.54) has quit (Max SendQ exceeded)
2016-09-22 05:00:11	-->	inco6 (~pepe@77.244.21.54) has joined ##c++
2016-09-22 05:00:12	<--	inco6 (~pepe@77.244.21.54) has quit (Max SendQ exceeded)
2016-09-22 05:01:11	<--	rtkt (~rtkt@226.18-78-194.adsl-static.isp.belgacom.be) has quit (Read error: Connection reset by peer)
2016-09-22 05:01:21	<--	JohnMS_WORK (~chatzilla@host-193-59-178-3.gog.com) has quit (Quit: ChatZilla 0.9.92 [Firefox 48.0.2/20160823121617])
2016-09-22 05:01:24	<--	drozdziak1 (~drozdziak@do-atman.cubiware.com) has quit (Quit: WeeChat 1.5)
2016-09-22 05:01:24	-->	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has joined ##c++
2016-09-22 05:01:25	-->	inco6 (~pepe@54.156.151.77.rev.sfr.net) has joined ##c++
2016-09-22 05:01:26	<--	inco6 (~pepe@54.156.151.77.rev.sfr.net) has quit (Max SendQ exceeded)
2016-09-22 05:01:29	<--	StardustX (~s@2001:da8:203:2209:9f0b:a7f:1ebc:1f01) has left ##c++ ("Leaving")
2016-09-22 05:01:40	-->	inco6 (~pepe@54.156.151.77.rev.sfr.net) has joined ##c++
2016-09-22 05:01:41	<--	inco6 (~pepe@54.156.151.77.rev.sfr.net) has quit (Max SendQ exceeded)
2016-09-22 05:01:44	catern	gp5st: hash each field and then combine the hashes
2016-09-22 05:02:00	<--	clr (~chris@chris.rorvick.com) has quit (Remote host closed the connection)
2016-09-22 05:02:04	<--	riemann (~riemann@84-10-11-234.static.chello.pl) has quit (Quit: Leaving)
2016-09-22 05:02:07	-->	inco6 (~pepe@54.156.151.77.rev.sfr.net) has joined ##c++
2016-09-22 05:02:08	<--	inco6 (~pepe@54.156.151.77.rev.sfr.net) has quit (Max SendQ exceeded)
2016-09-22 05:02:22	-->	inco6 (~pepe@54.156.151.77.rev.sfr.net) has joined ##c++
2016-09-22 05:02:23	<--	inco6 (~pepe@54.156.151.77.rev.sfr.net) has quit (Max SendQ exceeded)
2016-09-22 05:02:38	catern	i dunno, I mean, I am used to Rust where this is a feature that is available, I am now learning C++ and would like to use such a feature
2016-09-22 05:02:40	-->	inco6 (~pepe@54.156.151.77.rev.sfr.net) has joined ##c++
2016-09-22 05:02:41	<--	inco6 (~pepe@54.156.151.77.rev.sfr.net) has quit (Max SendQ exceeded)
2016-09-22 05:02:54	-->	w3z (~w3z@173-169-121-88.res.bhn.net) has joined ##c++
2016-09-22 05:02:54	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-22 05:02:59	-->	inco6 (~pepe@54.156.151.77.rev.sfr.net) has joined ##c++
2016-09-22 05:03:00	<--	inco6 (~pepe@54.156.151.77.rev.sfr.net) has quit (Max SendQ exceeded)
2016-09-22 05:04:22	-->	squelch (~squelch@169.235.217.27) has joined ##c++
2016-09-22 05:04:27	<--	Limona (~Origin@BSN-142-59-105.dynamic.siol.net) has quit (Read error: Connection reset by peer)
2016-09-22 05:04:29	<--	squelch (~squelch@169.235.217.27) has quit (Max SendQ exceeded)
2016-09-22 05:04:31	-->	Sculptor (~Sculptor@cable-24-135-26-151.dynamic.sbb.rs) has joined ##c++
2016-09-22 05:04:35	<--	ghostlight (~ghostligh@ec2-54-187-97-144.us-west-2.compute.amazonaws.com) has quit (Ping timeout: 260 seconds)
2016-09-22 05:04:37	<--	govg (~govg@unaffiliated/govg) has quit (Ping timeout: 265 seconds)
2016-09-22 05:04:55	-->	squelch (~squelch@169.235.217.27) has joined ##c++
2016-09-22 05:05:01	-->	lolek (~lolek@unaffiliated/marcin) has joined ##c++
2016-09-22 05:05:22	<--	rorro (~rorro@c-227-152.eduroam.liu.se) has quit (Ping timeout: 244 seconds)
2016-09-22 05:05:51	<--	planet_en (~nkh@80.227.221.138) has quit (Ping timeout: 276 seconds)
2016-09-22 05:06:17	<--	Brklyn (~truthbk@38.122.226.210) has quit (Read error: Connection reset by peer)
2016-09-22 05:06:25	<--	RazielZ (~Raziel@unaffiliated/raziel) has quit (Read error: Connection reset by peer)
2016-09-22 05:06:58	<--	Murii (~Murii@86.127.60.21) has quit (Remote host closed the connection)
2016-09-22 05:07:12	<--	Sculptor (~Sculptor@cable-24-135-26-151.dynamic.sbb.rs) has quit (Changing host)
2016-09-22 05:07:12	-->	Sculptor (~Sculptor@trivialand/master/sculptor) has joined ##c++
2016-09-22 05:07:52	-->	Murii (~Murii@86.127.60.21) has joined ##c++
2016-09-22 05:07:57	-->	ghostlight (~ghostligh@ec2-54-187-97-144.us-west-2.compute.amazonaws.com) has joined ##c++
2016-09-22 05:08:19	<--	Murii (~Murii@86.127.60.21) has quit (Read error: Connection reset by peer)
2016-09-22 05:08:45	-->	jncog (~dogfart@184-15-189-196.dsl2.chtn.wv.frontiernet.net) has joined ##c++
2016-09-22 05:08:46	<--	jncog (~dogfart@184-15-189-196.dsl2.chtn.wv.frontiernet.net) has quit (Max SendQ exceeded)
2016-09-22 05:08:52	-->	Murii (~Murii@86.127.60.21) has joined ##c++
2016-09-22 05:09:05	-->	jncog (~dogfart@184-15-189-196.dsl2.chtn.wv.frontiernet.net) has joined ##c++
2016-09-22 05:09:06	<--	phlpp (~Philipp@rihanna.cb.uni-bonn.de) has quit (Quit: Leaving)
2016-09-22 05:09:06	<--	jncog (~dogfart@184-15-189-196.dsl2.chtn.wv.frontiernet.net) has quit (Max SendQ exceeded)
2016-09-22 05:09:14	<--	Murii (~Murii@86.127.60.21) has quit (Read error: Connection reset by peer)
2016-09-22 05:09:20	-->	jncog (~dogfart@184-15-189-196.dsl2.chtn.wv.frontiernet.net) has joined ##c++
2016-09-22 05:09:21	<--	jncog (~dogfart@184-15-189-196.dsl2.chtn.wv.frontiernet.net) has quit (Max SendQ exceeded)
2016-09-22 05:09:25	<--	decimad (~deci@ip5f5be505.dynamic.kabel-deutschland.de) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-09-22 05:09:30	<--	yyzr (~yyzr@prz29-1-78-205-58-16.fbx.proxad.net) has quit (Remote host closed the connection)
2016-09-22 05:09:50	<--	sanett (~sanett@202.119.43.93) has quit (Ping timeout: 260 seconds)
2016-09-22 05:10:16	-->	RedOrangeZ (~RedOrange@c-73-30-227-113.hsd1.pa.comcast.net) has joined ##c++
2016-09-22 05:10:44	<--	RedOrangeZ2 (~RedOrange@c-73-30-227-113.hsd1.pa.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-22 05:11:58	-->	Murii (~Murii@86.127.60.21) has joined ##c++
2016-09-22 05:11:58		[05:11]
2016-09-22 05:12:00	<--	Murii (~Murii@86.127.60.21) has quit (Remote host closed the connection)
2016-09-22 05:12:01	-->	Brklyn (~truthbk@38.122.226.210) has joined ##c++
2016-09-22 05:12:11	-->	InfoTest (~Thunderbi@tgn.126.67.29.dts.mg) has joined ##c++
2016-09-22 05:12:16	-->	Murii (~Murii@86.127.60.21) has joined ##c++
2016-09-22 05:12:19	<--	feliwir (Elite16673@gateway/shell/elitebnc/x-fgneeavqusqdgjmd) has quit (Ping timeout: 272 seconds)
2016-09-22 05:12:25	<--	jkhl (~j@host86-182-59-122.range86-182.btcentralplus.com) has quit (Ping timeout: 244 seconds)
2016-09-22 05:12:26	<--	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has quit (Quit: Leaving.)
2016-09-22 05:12:44	Jidoor	hey what kind of data structure should i use to store the pressed state of 4 keys?
2016-09-22 05:13:36	-->	jkhl (~j@host86-182-59-122.range86-182.btcentralplus.com) has joined ##c++
2016-09-22 05:13:40	Jidoor	i could make a boolean for each key but there is probably something nicer
2016-09-22 05:14:34	Levitator	If you know the max is four keys, you could just have a fixed-size array of 4 objects.
2016-09-22 05:14:36	-->	inkog (~pepe@41.86.36.53) has joined ##c++
2016-09-22 05:15:03	Levitator	Most key combinations are no longer than 3, but something like a game might want more.
2016-09-22 05:15:03	TinoDidriksen	Boolean is not enough. Keys have 3+ states, since you usually consider a held key a separate state from press and release.
2016-09-22 05:15:08	-->	planet_en (~nkh@80.227.221.138) has joined ##c++
2016-09-22 05:15:13	<--	ferdna (~ferdna@cpe-69-23-141-130.elp.res.rr.com) has quit (Quit: Leaving)
2016-09-22 05:16:02	-->	jshjsh (~jshjsh@172.56.38.160) has joined ##c++
2016-09-22 05:16:31	<--	Anonaly (~Anonaly@unaffiliated/anom01y-/x-8370081) has quit (Ping timeout: 255 seconds)
2016-09-22 05:16:56	Levitator	Rather depends on his application, I think.
2016-09-22 05:18:22	-->	huggy (~huggy@46-227-67-177.pool.ovpn.se) has joined ##c++
2016-09-22 05:18:46	<--	JoshS (~jshjsh@172.56.38.160) has quit (Ping timeout: 255 seconds)
2016-09-22 05:19:24	<--	lolek (~lolek@unaffiliated/marcin) has quit (Remote host closed the connection)
2016-09-22 05:19:37	<--	planet_en (~nkh@80.227.221.138) has quit (Ping timeout: 248 seconds)
2016-09-22 05:20:06	<--	deekej (deekej@nat/redhat/x-krlkhobkmllbkceu) has quit (Read error: Connection reset by peer)
2016-09-22 05:20:34	<--	pheenx (~pheenx@2a02:8071:b68a:1c00:225:22ff:fee7:7dc5) has quit (Ping timeout: 265 seconds)
2016-09-22 05:21:18	-->	govg (~govg@unaffiliated/govg) has joined ##c++
2016-09-22 05:24:05	<--	imMute (~immute@about/networking/240.255.255.0/imMute) has quit (Quit: Im betting i wasnt supposed to be pulling on that wire)
2016-09-22 05:24:06	-->	flavi0 (~anon@unaffiliated/flavi0) has joined ##c++
2016-09-22 05:24:19	-->	imMute (~immute@about/networking/240.255.255.0/imMute) has joined ##c++
2016-09-22 05:27:47	-->	xaxxon__ (~xaxxon@2601:602:9d00:d58b:6cb3:dcf0:4210:6dce) has joined ##c++
2016-09-22 05:27:47		[05:27]
2016-09-22 05:28:20	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-22 05:29:07	-->	zwliew (uid161395@gateway/web/irccloud.com/x-olomzlqcchunwaua) has joined ##c++
2016-09-22 05:29:13	<--	erbse (~test@unaffiliated/erbse) has left ##c++
2016-09-22 05:29:15	-->	Anonaly (~Anonaly@unaffiliated/anom01y-/x-8370081) has joined ##c++
2016-09-22 05:29:47	gp5st	catern: I don't recall that feature in rust
2016-09-22 05:29:51	gp5st	docs?
2016-09-22 05:30:29	-->	RazielZ (~Raziel@unaffiliated/raziel) has joined ##c++
2016-09-22 05:30:36	gp5st	TinoDidriksen: also depends if keydown and keyup are counted
2016-09-22 05:31:16	<--	xaxxon_ (~xaxxon@2601:602:9d00:d58b:6cb3:dcf0:4210:6dce) has quit (Ping timeout: 265 seconds)
2016-09-22 05:31:23	-->	Rajamaa (~Rajamaa@a91-156-244-1.elisa-laajakaista.fi) has joined ##c++
2016-09-22 05:31:49	<--	elnormous (~elnormous@gateway.evolutiongaming.com) has quit (Remote host closed the connection)
2016-09-22 05:32:08	catern	gp5st: it's #[derive(Hash)]
2016-09-22 05:32:18	<--	Sceorem (~Sceorem@xbn44-3-82-232-76-9.fbx.proxad.net) has quit (Quit: Leaving)
2016-09-22 05:33:05	<--	fr_ (~fr@p548FE0D8.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-09-22 05:33:21	catern	but here's another question - why is it that I can declare std::map<MyClass, int> mymap; when I haven't created a less<MyClass>?
2016-09-22 05:33:23	-->	skweek (~skweek@68-200-146-225.res.bhn.net) has joined ##c++
2016-09-22 05:33:38	gp5st	catern: I was under the impression # was a compiler directive, so I don't think you'll find an equivalent here, since it's probably macro based
2016-09-22 05:34:05	-->	Tectu (~Tectu@193.231.195.178.dynamic.wline.res.cust.swisscom.ch) has joined ##c++
2016-09-22 05:34:14	-->	scai (~scai@p4FF0FE6D.dip0.t-ipconnect.de) has joined ##c++
2016-09-22 05:34:23	-->	rorro (~rorro@148.136.141.137) has joined ##c++
2016-09-22 05:34:50	GrayShade	catern: std::less is defined in the standard library
2016-09-22 05:34:59	catern	gp5st: fair enough
2016-09-22 05:35:09	catern	GrayShade: but how is it defined for my class?
2016-09-22 05:35:19	catern	which I just defined in this file
2016-09-22 05:35:35	GrayShade	using std::map with the default comparator of std::less will instantiate that with your type. do you have an operator< for it?
2016-09-22 05:35:41	catern	No
2016-09-22 05:35:53	kalven	try inserting something.
2016-09-22 05:35:53	GrayShade	oh?
2016-09-22 05:36:07	-->	mukunda (mukunda@c-71-205-185-63.hsd1.co.comcast.net) has joined ##c++
2016-09-22 05:36:14	catern	i mean the class is just struct A { char arr[16]; };
2016-09-22 05:36:14	<--	ezzieyguywuf (~wolfie@unaffiliated/ezzieyguywuf) has quit (Read error: Connection reset by peer)
2016-09-22 05:36:19	<--	aindros (~jacknife@93-57-35-194.ip162.fastwebnet.it) has quit (Quit: Sto andando via)
2016-09-22 05:36:25	kalven	you'll get errors once code is instantiated that tries to do operator< on it.
2016-09-22 05:36:31	-->	ezzieyguywuf (~wolfie@unaffiliated/ezzieyguywuf) has joined ##c++
2016-09-22 05:36:31	catern	kalven: ah, I see
2016-09-22 05:36:33	<--	govg (~govg@unaffiliated/govg) has quit (Quit: leaving)
2016-09-22 05:36:37	catern	that's upsetting :(
2016-09-22 05:36:52	catern	why does that only happen when I actually have code inserting?
2016-09-22 05:37:48	-->	tadaa (~tadaaa@nat-wh-wz4-12.rz.uni-karlsruhe.de) has joined ##c++
2016-09-22 05:37:56	w3z	because thats when it tries to use < ....
2016-09-22 05:38:44	-->	wanderman (~wanderman@unaffiliated/wanderman) has joined ##c++
2016-09-22 05:38:48	-->	sophia7 (~sophia7@unaffiliated/sophia7) has joined ##c++
2016-09-22 05:39:19	catern	that is a rather bizarre type checker if it doesn't actually check all possible usage of an object :)
2016-09-22 05:39:36	-->	JayKaye (~Jay@101.164.98.27) has joined ##c++
2016-09-22 05:39:42	catern	you're saying if I just tried to do mymap.size() and never inserted anything,  it would work fine?!
2016-09-22 05:39:44	-->	Karyon (~yaaic@unaffiliated/karyon) has joined ##c++
2016-09-22 05:40:01	kalven	depends on if size ends up trying to use operator< on your type
2016-09-22 05:40:20	w3z	size probably wouldnt invoke K<, but count will ...
2016-09-22 05:40:37	-->	rleigh (~rleigh@134.36.162.74) has joined ##c++
2016-09-22 05:40:37	<--	rleigh (~rleigh@134.36.162.74) has quit (Changing host)
2016-09-22 05:40:37	-->	rleigh (~rleigh@unaffiliated/rleigh) has joined ##c++
2016-09-22 05:40:43	w3z	(unless it shorts for a 0 size map)
2016-09-22 05:41:10	<--	snakefoil (~snakefoil@unaffiliated/snakefoil) has quit (Max SendQ exceeded)
2016-09-22 05:41:12	-->	LauraGaucha (~cplusplus@67.135.43.183) has joined ##c++
2016-09-22 05:41:21	w3z	{map<T,int> M; T t; M.count(t);} struct T{};
2016-09-22 05:41:22	geordi	error: no match for 'operator<' in '__x < __y' (operand types are 'const T' and 'const T')
2016-09-22 05:41:34	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-22 05:41:55	kalven	might seem bizarre to you, but it's quite powerful that functions aren't instantiated until you actually use them.
2016-09-22 05:42:03	-->	snakefoil (~snakefoil@unaffiliated/snakefoil) has joined ##c++
2016-09-22 05:42:13	-->	inco6 (~dogfart@184-15-189-196.dsl2.chtn.wv.frontiernet.net) has joined ##c++
2016-09-22 05:42:30	<--	blaxter (~blaxter@62.101.183.90.dyn.user.ono.com) has quit (Quit: foo)
2016-09-22 05:44:54	<--	sophia7 (~sophia7@unaffiliated/sophia7) has quit (Quit: sophia7)
2016-09-22 05:44:54		[05:44]
2016-09-22 05:44:59	-->	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has joined ##c++
2016-09-22 05:45:07	-->	shurane (shurane@2600:3c03::f03c:91ff:fe33:b477) has joined ##c++
2016-09-22 05:45:53	<--	inkog (~pepe@41.86.36.53) has quit (Ping timeout: 272 seconds)
2016-09-22 05:46:05	-->	planet_en (~nkh@80.227.221.138) has joined ##c++
2016-09-22 05:46:13	-->	spooooon (~cw@cpc84421-newc18-2-0-cust250.16-2.cable.virginm.net) has joined ##c++
2016-09-22 05:46:35	<--	blueness (~blueness@gentoo/developer/blueness) has quit (Quit: blueness)
2016-09-22 05:47:10	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-22 05:47:54	Jidoor	does visual studio show all changes since last commit anywhere? i can diff a specific file against latest commit but havent found where to see overview of all changed files
2016-09-22 05:48:13	Jidoor	and sorry if its wrong to ask about VS here
2016-09-22 05:48:25	<--	m_ben (~m_ben@unaffiliated/m-ben/x-5917362) has quit (Ping timeout: 248 seconds)
2016-09-22 05:48:41	-->	feliwir (Elite16673@gateway/shell/elitebnc/x-zkqaocfslhcdtmrq) has joined ##c++
2016-09-22 05:48:43	<--	kaffeetrauma (~Thunderbi@n37.informatik.fh-dortmund.de) has quit (Quit: kaffeetrauma)
2016-09-22 05:48:45	Jidoor	not sure if it has some own channel but usually ide channels are kinda dead
2016-09-22 05:48:50	<--	GrayShade (~quassel@unaffiliated/grayshade) has left ##c++
2016-09-22 05:49:00	Levitator	Someone will probably chase you off to ##C++-general shortly.
2016-09-22 05:49:08	<--	blablablub (~howlymowl@euler.ilr.tu-berlin.de) has quit (Quit: Konversation terminated!)
2016-09-22 05:49:18	Jidoor	ill check that out too
2016-09-22 05:49:45	Levitator	I don't personally care. This place is empty except for when someone is complaining like a ninety year-old.
2016-09-22 05:50:18	-->	dhk (~dhk@138.59.24.18) has joined ##c++
2016-09-22 05:51:00	-->	ctnguyen (~chau@2606:6000:fd00:bc00:8048:a03c:3885:a855) has joined ##c++
2016-09-22 05:51:17	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-22 05:51:21	<--	planet_en (~nkh@80.227.221.138) has quit (Ping timeout: 276 seconds)
2016-09-22 05:51:29	-->	EvilPeng1 (~EvilPengu@bur-inet-pa-1.disney.com) has joined ##c++
2016-09-22 05:52:05	Jidoor	okay found it, that team explorer view is so confusing
2016-09-22 05:52:21	<--	fedepad (~fedepad@eduroam-97-27.zdv.uni-mainz.de) has quit (Remote host closed the connection)
2016-09-22 05:52:22	<--	Rajamaa (~Rajamaa@a91-156-244-1.elisa-laajakaista.fi) has quit (Quit: Konversation terminated!)
2016-09-22 05:52:43	-->	planet_en (~nkh@80.227.221.138) has joined ##c++
2016-09-22 05:52:50	-->	JRajamaa (~Rajamaa@a91-156-244-1.elisa-laajakaista.fi) has joined ##c++
2016-09-22 05:53:02	<--	eduardas_m (~eduardas_@213.197.143.19) has quit (Quit: Leaving)
2016-09-22 05:53:13	-->	tsester (~tsester__@ppp046177178113.access.hol.gr) has joined ##c++
2016-09-22 05:53:14	<--	unlaudable (~bleurgh@41.180.1.122) has quit (Ping timeout: 244 seconds)
2016-09-22 05:53:43	<--	tsester (~tsester__@ppp046177178113.access.hol.gr) has quit (Remote host closed the connection)
2016-09-22 05:53:48	<--	LauraGaucha (~cplusplus@67.135.43.183) has quit (Quit: Leaving)
2016-09-22 05:55:22	<--	snakefoil (~snakefoil@unaffiliated/snakefoil) has quit (Max SendQ exceeded)
2016-09-22 05:56:16	-->	snakefoil (~snakefoil@unaffiliated/snakefoil) has joined ##c++
2016-09-22 05:57:02	catern	so if I use mymap[key] and key is not in map it will literally just construct an object and put it in mymap?
2016-09-22 05:57:06	--	shurane is now known as shoerain
2016-09-22 05:57:30	catern	that is unexpected
2016-09-22 05:57:33	<--	bmohan (~bmohan@109.144.242.172) has quit (Ping timeout: 240 seconds)
2016-09-22 05:58:00	SorcererX	what did you expect? an exception?
2016-09-22 05:58:06	catern	yes
2016-09-22 05:58:17	catern	or maybe null??
2016-09-22 05:58:21	catern	somehow
2016-09-22 05:58:43	--	shoerain is now known as shoerain_
2016-09-22 05:58:56	w3z	!book
2016-09-22 05:58:58	nolyc	A nice C++ book guide and list can be found at http://stackoverflow.com/q/388242/1090079
2016-09-22 05:59:00	--	shoerain_ is now known as shoerain__
2016-09-22 05:59:18	w3z	instead of just expecting stuff, you could read about how it actually operates
2016-09-22 05:59:31	w3z	youll be surprised less often ...
2016-09-22 06:00:30	-->	Adva (~Hyrule@2a02:810a:12c0:5068:2d74:d88:1085:6ed8) has joined ##c++
2016-09-22 06:00:30		[06:00]
2016-09-22 06:00:35	<--	rorro (~rorro@148.136.141.137) has quit (Ping timeout: 260 seconds)
2016-09-22 06:01:03	<--	nacon (~nacon@unaffiliated/nacon) has quit (Quit: leaving)
2016-09-22 06:01:14	<--	wanderman (~wanderman@unaffiliated/wanderman) has quit (Quit: Leaving)
2016-09-22 06:01:51	catern	okay
2016-09-22 06:02:06	catern	I do have another question though
2016-09-22 06:02:10	<--	rleigh (~rleigh@unaffiliated/rleigh) has quit (Quit: leaving)
2016-09-22 06:02:27	<--	TMM (~hp@fsf/member/pdpc.professional.tmm) has quit (Quit: Ex-Chat)
2016-09-22 06:02:34	-->	RangerBob (~brian@pool-173-72-130-20.clppva.fios.verizon.net) has joined ##c++
2016-09-22 06:03:08	-->	blueness (~blueness@gentoo/developer/blueness) has joined ##c++
2016-09-22 06:03:52	<--	shoerain__ (shurane@2600:3c03::f03c:91ff:fe33:b477) has left ##c++ ("WeeChat 1.2")
2016-09-22 06:05:06	<--	NoShlomo (~NoShlomo@90.74.151.136) has quit (Read error: Connection reset by peer)
2016-09-22 06:05:10	--	jshjsh is now known as JoshS
2016-09-22 06:05:23	-->	skoocda (~skoocda@76.74.139.126) has joined ##c++
2016-09-22 06:05:33	-->	skoocdallo (~skoocda@76.74.139.126) has joined ##c++
2016-09-22 06:05:47	<--	skoocdallo (~skoocda@76.74.139.126) has quit (Remote host closed the connection)
2016-09-22 06:05:59	<--	seishun (~Kakera@62.85.5.232) has quit (Ping timeout: 250 seconds)
2016-09-22 06:06:08	<--	Elirips (~Elirips@242.109.22.178.ftth.as8758.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2016-09-22 06:07:17	<--	tlaxkit (~Thunderbi@92.185.154.236) has quit (Quit: tlaxkit)
2016-09-22 06:07:49	-->	bumbar (~bumbar@unaffiliated/bumbar) has joined ##c++
2016-09-22 06:07:50	-->	yong (~vayne@pD9E441EB.dip0.t-ipconnect.de) has joined ##c++
2016-09-22 06:08:00	-->	elnormous (~elnormous@87.110.129.37) has joined ##c++
2016-09-22 06:09:27	-->	nealshire_ (~Nealshire@unaffiliated/nealshire) has joined ##c++
2016-09-22 06:09:34	kalven	catern: it's another thing that's quite nice.. allows you to do one-line "upserts". like: map[key]++
2016-09-22 06:12:06	-->	carado (~carado@bea44-1-78-193-226-57.fbxo.proxad.net) has joined ##c++
2016-09-22 06:12:17	<--	elnormous (~elnormous@87.110.129.37) has quit (Ping timeout: 240 seconds)
2016-09-22 06:12:23	-->	IceKarma (foo@wikipedia/IceKarma) has joined ##c++
2016-09-22 06:12:37	carado	hi ! what’s wrong with this code ? http://paste.awesom.eu/FmoG i’ve tried emplace, insert, = std::make_unique, = std::unique_ptr, everything seems to give me this error.
2016-09-22 06:12:39	<--	IceKarma (foo@wikipedia/IceKarma) has left ##c++
2016-09-22 06:13:17	-->	l_Digi_Dude_l (~l_Digi_Du@2602:30a:c7c3:4370:944d:682f:a05c:298f) has joined ##c++
2016-09-22 06:13:31	<--	l_Digi_Dude_l (~l_Digi_Du@2602:30a:c7c3:4370:944d:682f:a05c:298f) has left ##c++ ("Leaving")
2016-09-22 06:14:41	<--	lsk (~lsk@enucs/member/lsk) has quit (Read error: Connection reset by peer)
2016-09-22 06:15:23	-->	edr (~edr@pdpc/supporter/professional/edr) has joined ##c++
2016-09-22 06:15:37	<--	zero_byte (zer0@nat/redhat/x-srdtmlulqrwutvrr) has quit (Ping timeout: 244 seconds)
2016-09-22 06:15:37		[06:15]
2016-09-22 06:16:01	-->	seishun (~Kakera@62.85.5.232) has joined ##c++
2016-09-22 06:16:36	ppf	carado: the error is in the {{}}, not the reset
2016-09-22 06:17:32	-->	oxygene (~fred@ALille-652-1-134-14.w83-198.abo.wanadoo.fr) has joined ##c++
2016-09-22 06:17:53	carado	oh, right, hold on
2016-09-22 06:18:28	w3z	geordi --clang {vector<unordered_map<int,unique_ptr<int>>> V(1); V[0].emplace(1,make_unique<int>(0));}
2016-09-22 06:18:29	geordi	<no output>
2016-09-22 06:18:37	<--	marcofe (~marcofe@test-centre4-gw.estec.esa.int) has quit (Quit: Konversation terminated!)
2016-09-22 06:18:38	<--	planet_en (~nkh@80.227.221.138) has quit (Ping timeout: 265 seconds)
2016-09-22 06:19:00	-->	logan_e_ (uid164592@gateway/web/irccloud.com/x-xfmhdoqxdyzrgyyq) has joined ##c++
2016-09-22 06:19:15	-->	YungRaj (~YungRaj@nat-165-91-13-8.tamulink.tamu.edu) has joined ##c++
2016-09-22 06:19:17	-->	illerucis (~illerucis@199.201.65.132) has joined ##c++
2016-09-22 06:20:08	<--	GinoManWorks (~GinoMan@50-251-53-110-static.hfc.comcastbusiness.net) has quit (Quit: Leaving)
2016-09-22 06:20:40	-->	Enhex (~Enhex@82.252.138.77.rev.sfr.net) has joined ##c++
2016-09-22 06:21:18	w3z	if you try to do the map insertion in the construction of the vector, youre not going to have a good time
2016-09-22 06:21:24	w3z	{vector<unordered_map<int,unique_ptr<int>>> V{{{1,make_unique<int>(0)}}};}
2016-09-22 06:21:25	geordi	error: use of deleted function 'pair<_T1, _T2>::pair(const pair<_T1, _T2>&) [with _T1 = const int; _T2 = unique_ptr<int>]'
2016-09-22 06:21:55	ppf	but can you move it?
2016-09-22 06:22:12	ppf	{vector<unordered_map<int,unique_ptr<int>>> V{std::move(unordered_map<int,unique_ptr<int>>{{1,make_unique<int>(0)}})};}
2016-09-22 06:22:13	geordi	Same error.
2016-09-22 06:22:29	<--	FreeBird_ (~freebirdl@223.65.84.131) has quit (Remote host closed the connection)
2016-09-22 06:22:30	<--	seru76 (~seru76@77.89.191.179) has quit (Quit: Leaving)
2016-09-22 06:22:45	w3z	no, the contents of an initializer_list are const
2016-09-22 06:23:17	-->	asc232 (~Keith@179.38.203.21) has joined ##c++
2016-09-22 06:24:52	<--	kurushii (~kurushii@host86-140-98-159.range86-140.btcentralplus.com) has quit
2016-09-22 06:25:01	w3z	<<TYPE(*begin(L)); auto L={make_unique<int>(0)};
2016-09-22 06:25:03	geordi	lvalue unique_ptr<int, default_delete<int> > const
2016-09-22 06:25:32	-->	NeXTSUN (~textual@2601:83:8100:42cf:9cd1:d4d4:62cb:9727) has joined ##c++
2016-09-22 06:26:00	ppf	so i obviously can't move from const. why isn't there an error vor precisely that?
2016-09-22 06:26:19	carado	I’m having trouble making a snippet that produces the same error as my actual code, so I’m probably wrong about where it’s from
2016-09-22 06:26:58	-->	re1_ (~reiser@178.220.4.176) has joined ##c++
2016-09-22 06:27:03	<--	SiN_Bizkit (~SiN_Bizki@31.211.38.69) has quit (Quit: Lost terminal)
2016-09-22 06:27:29	-->	pheenx (~pheenx@2a02:8071:b68a:1c00:225:22ff:fee7:7dc5) has joined ##c++
2016-09-22 06:27:45	<--	reveredge (~reveredge@111.119.209.219) has quit (Ping timeout: 265 seconds)
2016-09-22 06:28:05	-->	BaneAliens (uid112512@gateway/web/irccloud.com/x-cqflgjtnvztcsaro) has joined ##c++
2016-09-22 06:28:06	<--	Lomex (~lomex@213.61.34.42) has quit (Remote host closed the connection)
2016-09-22 06:28:31	<--	re1 (~reiser@178.220.4.176) has quit (Ping timeout: 255 seconds)
2016-09-22 06:29:14	-->	Lomex (~lomex@213.61.34.42) has joined ##c++
2016-09-22 06:29:51	-->	kaleid0 (~kaleid0@194.sub-174-219-133.myvzw.com) has joined ##c++
2016-09-22 06:29:58	-->	fedepad (~fedepad@p4FE10D52.dip0.t-ipconnect.de) has joined ##c++
2016-09-22 06:31:39	<--	josef__k (~jeremy@59.102.16.55) has quit (Ping timeout: 244 seconds)
2016-09-22 06:31:39		[06:31]
2016-09-22 06:31:46	-->	bmohan (~bmohan@host86-176-67-69.range86-176.btcentralplus.com) has joined ##c++
2016-09-22 06:32:03	<--	merijn (~merijn@wcw-staff-145-18-167-76.wireless.uva.nl) has quit (Ping timeout: 240 seconds)
2016-09-22 06:32:54	<--	JayKaye (~Jay@101.164.98.27) has quit (Ping timeout: 264 seconds)
2016-09-22 06:33:43	-->	pmercado (~pmercado@186-104-216-78.baf.movistar.cl) has joined ##c++
2016-09-22 06:34:09	<--	Lomex (~lomex@213.61.34.42) has quit (Ping timeout: 250 seconds)
2016-09-22 06:35:04	<--	illerucis (~illerucis@199.201.65.132) has quit (Remote host closed the connection)
2016-09-22 06:35:10	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Read error: Connection reset by peer)
2016-09-22 06:35:35	-->	illerucis (~illerucis@2620:10d:c091:200::9:3361) has joined ##c++
2016-09-22 06:36:05	<--	snover (~Adium@unaffiliated/snover) has quit (Quit: Leaving.)
2016-09-22 06:37:25	carado	alright, so yeah, turns out the error came from somewhere else — http://paste.awesom.eu/nV3K . now that I’ve found it it’s trivail to fix (auto & x), but clang++ and g++ for some reason wouldn’t tell me where the error came from: http://paste.awesom.eu/mRj5 http://paste.awesom.eu/MjSX
2016-09-22 06:37:30	-->	theosirian (~theosiria@186.233.158.67) has joined ##c++
2016-09-22 06:37:31	<--	Amaranth (~Amaranth@ubuntu/member/Amaranth) has quit (Ping timeout: 255 seconds)
2016-09-22 06:37:33	-->	swnc (~swnc@port-92-204-70-93.dynamic.qsc.de) has joined ##c++
2016-09-22 06:37:58	<--	squelch (~squelch@169.235.217.27) has quit (Ping timeout: 255 seconds)
2016-09-22 06:40:03	<--	p4trix (~p4trix@37.red-79-145-248.dynamicip.rima-tde.net) has quit (Read error: Connection reset by peer)
2016-09-22 06:40:35	-->	ambro718 (~ambro@unaffiliated/ambro718) has joined ##c++
2016-09-22 06:41:22	-->	reveredge (~reveredge@115.110.126.75) has joined ##c++
2016-09-22 06:41:47	<--	rendar (~rendar@host64-182-dynamic.37-79-r.retail.telecomitalia.it) has quit (Remote host closed the connection)
2016-09-22 06:41:50	<--	flavi0 (~anon@unaffiliated/flavi0) has quit (Quit: leaving)
2016-09-22 06:42:20	introom	why is_literal_type deprecated in c++17 ?
2016-09-22 06:42:30	-->	MulleDK19 (MulleDK19@unaffiliated/mulledk19) has joined ##c++
2016-09-22 06:43:27	-->	kuahara (~kuahara@196-21.201-68.bham.res.rr.com) has joined ##c++
2016-09-22 06:43:32	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-22 06:43:56	-->	rikster (~SpaceDino@62.102.148.185) has joined ##c++
2016-09-22 06:44:09	<--	sag3 (~O@91.214.169.69) has quit (Ping timeout: 272 seconds)
2016-09-22 06:44:42	-->	armyriad (~armyriad@gateway/vpn/privateinternetaccess/armyriad) has joined ##c++
2016-09-22 06:44:46	-->	alexmh (~alex@c-67-166-124-41.hsd1.ut.comcast.net) has joined ##c++
2016-09-22 06:45:20	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Read error: Connection reset by peer)
2016-09-22 06:46:06	<--	riksteri (~SpaceDino@62.102.148.177) has quit (Ping timeout: 265 seconds)
2016-09-22 06:46:22	<--	aslant (~aslant@149.18.68.178) has quit (Remote host closed the connection)
2016-09-22 06:46:29	-->	vesim (~vesim@var.vesim.xyz) has joined ##c++
2016-09-22 06:47:00	-->	Enhex_ (~Enhex@82.252.138.77.rev.sfr.net) has joined ##c++
2016-09-22 06:47:00		[06:47]
2016-09-22 06:47:40	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-22 06:47:56	-->	Enhex__ (~Enhex@82.252.138.77.rev.sfr.net) has joined ##c++
2016-09-22 06:48:15	-->	sag3 (~O@91.214.169.69) has joined ##c++
2016-09-22 06:49:02	<--	pheenx (~pheenx@2a02:8071:b68a:1c00:225:22ff:fee7:7dc5) has quit (Ping timeout: 265 seconds)
2016-09-22 06:50:27	-->	Sylph-DS (~Sylph@176.74.251.29) has joined ##c++
2016-09-22 06:50:28	<--	vesim (~vesim@var.vesim.xyz) has quit (Client Quit)
2016-09-22 06:50:31	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-22 06:50:45	<--	Enhex (~Enhex@82.252.138.77.rev.sfr.net) has quit (Ping timeout: 260 seconds)
2016-09-22 06:51:13	-->	vesim (~vesim@var.vesim.xyz) has joined ##c++
2016-09-22 06:51:20	-->	kaffeetrauma (~Thunderbi@85-22-37-153.ip.dokom21.de) has joined ##c++
2016-09-22 06:51:33	<--	Enhex_ (~Enhex@82.252.138.77.rev.sfr.net) has quit (Ping timeout: 240 seconds)
2016-09-22 06:52:13	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-22 06:52:31	introom	ok. I see the reason. for classes that has a constexpr ctor and also a non-constexpr, it's hard to tell if it's literal type
2016-09-22 06:52:47	-->	dhk_ (~dhk@138.59.24.18) has joined ##c++
2016-09-22 06:56:09	-->	navidr (uid112413@gateway/web/irccloud.com/x-qtqotkbxmthrysut) has joined ##c++
2016-09-22 06:56:49	<--	dhk (~dhk@138.59.24.18) has quit (Ping timeout: 265 seconds)
2016-09-22 06:56:58	<--	DjBonadoobie (~DjBonadoo@gateway/vpn/privateinternetaccess/djbonadoobie) has quit (Quit: Leaving)
2016-09-22 06:57:00	<--	cmedeiros (~cmedeiros@200.186.50.162) has quit (Ping timeout: 276 seconds)
2016-09-22 06:57:03	catern	I have another question, I was using std::verctor::emplace_back, and noticed that while using it, the destructor was sometimes being called on my objects, which was caused some problems for me. why was that happening?
2016-09-22 06:57:29	-->	xtra_ (81070008@gateway/web/freenode/ip.129.7.0.8) has joined ##c++
2016-09-22 06:58:20	<--	xtra_ (81070008@gateway/web/freenode/ip.129.7.0.8) has left ##c++
2016-09-22 06:58:57	<--	munch (pls@gateway/shell/elitebnc/x-uddzvaxmxthdwiiu) has quit (Quit: Let's blast this shit and get naked)
2016-09-22 06:58:57	<--	AndrewPRS (AndrewPRS@gateway/shell/elitebnc/x-syvpwuzhzkakybob) has quit (Quit: Cya soon! :D)
2016-09-22 06:59:33	strtok	catern: i think you'd have to show us how you're using it
2016-09-22 06:59:36	<--	Mnkras (~Mnkras@concrete5/781/Mnkras) has quit (Ping timeout: 276 seconds)
2016-09-22 07:00:00	-->	rorro (~rorro@148.136.141.137) has joined ##c++
2016-09-22 07:00:27	megaTherion	!testcase
2016-09-22 07:00:28	nolyc	A testcase is the _least_ amount of code that replicates your problem, paste it to http://coliru.stacked-crooked.com and give us the link. Do _not_ paste code to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
2016-09-22 07:00:38	<--	Tectu (~Tectu@193.231.195.178.dynamic.wline.res.cust.swisscom.ch) has quit (Ping timeout: 265 seconds)
2016-09-22 07:01:23	catern	oh, it was a while ago... I kind of just assumed "I had a simple class with a constructor and a destructor, and std::vector::emplace_back was calling the destructor" would be enough information and that it was some obvious thing
2016-09-22 07:01:42	catern	like, "emplace_back uses the destroy_and_recreate constructor"
2016-09-22 07:01:51	megaTherion	catern: emplace_back would copy the object
2016-09-22 07:02:30	catern	would that involve calling the destructor?
2016-09-22 07:02:30		[07:02]
2016-09-22 07:02:39	megaTherion	sure
2016-09-22 07:02:47	megaTherion	but depends on the context I'd say
2016-09-22 07:02:52	-->	SteffanW (~steffanw@ip4da40774.direct-adsl.nl) has joined ##c++
2016-09-22 07:03:05	<--	ambro718 (~ambro@unaffiliated/ambro718) has quit (Ping timeout: 248 seconds)
2016-09-22 07:03:07	strtok	emplace_back constructs in place. why would you say it makes a copy, unless you used a copy constructor?
2016-09-22 07:03:16	-->	MethCat (~ruzhen@192.210.231.214) has joined ##c++
2016-09-22 07:03:19	MethCat	ahh it's a wonderful day
2016-09-22 07:03:24	catern	I didn't have a copy constructor (I don't even know how to define one)
2016-09-22 07:03:35	strtok	one is appointed to you if you cannot afford one
2016-09-22 07:03:52	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-22 07:04:01	<--	AndyBotwin (~Gustavo@unaffiliated/andybotwin) has quit (Ping timeout: 244 seconds)
2016-09-22 07:04:09	-->	pwcjr (~pwcjr@pool-74-96-89-148.washdc.fios.verizon.net) has joined ##c++
2016-09-22 07:04:18	megaTherion	strtok: wouldnt that happen if you do a thing like emplace_back( Foo(...) )? I mean then Foo would get destroyed
2016-09-22 07:04:34	strtok	yes, but that's not the usual way emplace_back is used
2016-09-22 07:04:37	catern	nah, I was doing emplace_back(args_to_foo);
2016-09-22 07:05:26	-->	tristans1 (~tristanse@128.194.3.4) has joined ##c++
2016-09-22 07:05:37	-->	harha_ (harha_@y55.ip4.netikka.fi) has joined ##c++
2016-09-22 07:05:50	<--	tristanseifert (~tristanse@128.194.3.4) has quit (Read error: Connection reset by peer)
2016-09-22 07:05:55	-->	AndyBotwin (~Gustavo@189.58.120.94.dynamic.adsl.gvt.net.br) has joined ##c++
2016-09-22 07:05:55	<--	AndyBotwin (~Gustavo@189.58.120.94.dynamic.adsl.gvt.net.br) has quit (Changing host)
2016-09-22 07:05:55	-->	AndyBotwin (~Gustavo@unaffiliated/andybotwin) has joined ##c++
2016-09-22 07:06:16	megaTherion	strtok: its often very usual to me :)
2016-09-22 07:07:34	-->	nilof (~saolof@92-32-80-134.tn.glocalnet.net) has joined ##c++
2016-09-22 07:08:30	-->	SwiftMatt (~Objective@162.242.94.231) has joined ##c++
2016-09-22 07:09:43	catern	so wait
2016-09-22 07:10:13	catern	i still don't know why a container would call my object's destructor without me explicitly asking for it (with erase say)
2016-09-22 07:10:32	-->	xnavor (~xnavor@88.131.217.66) has joined ##c++
2016-09-22 07:10:36	megaTherion	as you said, you dont know where it happened and you have no code *shrugs*
2016-09-22 07:11:11	catern	hazard a guess?
2016-09-22 07:11:39	megaTherion	some thing got out of scope obviously
2016-09-22 07:12:12	catern	with emplace_back??
2016-09-22 07:12:13	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-22 07:12:26	megaTherion	C++ and guessing dont go that well together
2016-09-22 07:12:38	-->	cmedeiros (~cmedeiros@200.186.50.162) has joined ##c++
2016-09-22 07:12:44	-->	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has joined ##c++
2016-09-22 07:13:12	strtok	catern: what if the vector has to resize itself?
2016-09-22 07:13:50	catern	wouldn't it just copy the bits?
2016-09-22 07:13:55	Kaslai	Remember, when an object is "moved" the original object still has its destructor called.
2016-09-22 07:14:06	megaTherion	catern: no it operates on the type you store in the vector<T>
2016-09-22 07:14:28	Kaslai	In the move constructor, you need to invalidate the state of the source object so that when the destructor is called, nothing bad happens.
2016-09-22 07:14:31	strtok	catern: copying the bits is dangerous
2016-09-22 07:14:40	<--	reveredge (~reveredge@115.110.126.75) has quit (Ping timeout: 260 seconds)
2016-09-22 07:14:50	strtok	if you emplace_back() and vector needs to resize, it may need to copy each T to a new vector
2016-09-22 07:15:23	<--	MulleDK19 (MulleDK19@unaffiliated/mulledk19) has quit
2016-09-22 07:15:27	-->	k_j (~no@151.42.78.158) has joined ##c++
2016-09-22 07:16:07	<--	Anodl1 (~Anodl@p2003007A2F1E7800B588B1FAF3AA1788.dip0.t-ipconnect.de) has quit (Read error: Connection reset by peer)
2016-09-22 07:16:12	-->	zagabar (~zagabar@c213-89-112-5.bredband.comhem.se) has joined ##c++
2016-09-22 07:16:12	<--	zagabar (~zagabar@c213-89-112-5.bredband.comhem.se) has quit (Changing host)
2016-09-22 07:16:12	-->	zagabar (~zagabar@unaffiliated/zagabar) has joined ##c++
2016-09-22 07:16:41	catern	and if I don't have a copy constructor defined, it uses the default?
2016-09-22 07:16:44	strtok	you can avoid this by calling reserve() before using the vector
2016-09-22 07:16:46	megaTherion	sure
2016-09-22 07:17:23	catern	or rather - if I don't have a copy constructor defined, it uses the implicitly defined copy constructor?
2016-09-22 07:17:27	-->	MulleDK19 (MulleDK19@unaffiliated/mulledk19) has joined ##c++
2016-09-22 07:17:42	-->	phinxy (~tehhhd@unaffiliated/phinxy) has joined ##c++
2016-09-22 07:17:42		[07:17]
2016-09-22 07:17:55	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-22 07:18:11	catern	but from my reading about the implicitly defined copy constructor, I didn't see that it would ever call the destructor
2016-09-22 07:18:20	catern	am I wrong?
2016-09-22 07:18:39	megaTherion	catern: if things go out of scope the destructor will be called
2016-09-22 07:19:11	Kaslai	If you have something, and you make a copy of it, doesn't that mean you now have two things?
2016-09-22 07:19:39	catern	Sure, I guess
2016-09-22 07:19:39	Kaslai	And if one of those things goes out of scope, doesn't that mean that the destructor for that thing should get called?
2016-09-22 07:20:38	strtok	catern: let's say you have a vector of three Ts, and you emplace_back and the vector ran out of capacity so now it needs to allocate a new continuous space to store the 4 Ts, it must construct the 3 you already had by calling their copy constructors with the old three Ts, but then the old 3 will be destructed
2016-09-22 07:20:45	catern	so, my class holds operating system resources and my destructor releases them
2016-09-22 07:20:48	--	inco6 is now known as incog
2016-09-22 07:20:54	<--	incog (~dogfart@184-15-189-196.dsl2.chtn.wv.frontiernet.net) has quit (Changing host)
2016-09-22 07:20:54	-->	incog (~dogfart@unaffiliated/incog) has joined ##c++
2016-09-22 07:20:57	<--	seishun (~Kakera@62.85.5.232) has quit (Ping timeout: 250 seconds)
2016-09-22 07:20:59	strtok	err contiguous
2016-09-22 07:20:59	catern	should I be defining the copy constructor to do... something special?
2016-09-22 07:21:04	strtok	only if you need to
2016-09-22 07:21:26	megaTherion	catern: you are free to make your class non-copyablw
2016-09-22 07:21:30	megaTherion	err non-copyable
2016-09-22 07:21:34	catern	well if the destructor is called on them, those resources are released
2016-09-22 07:21:45	catern	that is not good
2016-09-22 07:21:46	strtok	not if they're copied
2016-09-22 07:21:51	strtok	are you saying they're not copied?
2016-09-22 07:22:05	<--	YungRaj (~YungRaj@nat-165-91-13-8.tamulink.tamu.edu) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-22 07:22:06	catern	er, they are copied but they're still released
2016-09-22 07:22:13	strtok	why are they?
2016-09-22 07:22:21	kalven	catern: how about you show an example to reduce to confusion?
2016-09-22 07:22:33	catern	to be specific, my class A has a field "int fd;", and ~A calls close(fd);
2016-09-22 07:22:37	strtok	the fact you run into this problem may imply that you're not using modern containers like std::unique_ptr
2016-09-22 07:22:46	strtok	ahhhh
2016-09-22 07:22:55	megaTherion	catern: not a good idea ^^
2016-09-22 07:23:00	strtok	for a file descriptor you need to define your own move and copy constructors
2016-09-22 07:23:21	Kaslai	There are three approaches I have for such a problem. 1: Make the class non-copyable by deleting the copy constructor, 2: internally reference count the resource (such as with std::shared_ptr or my own control block) so that only the last copy of the resource will free it, or 3: Use the resource's built-in reference counting mechanism
2016-09-22 07:23:24	-->	Betal (~Betal@unaffiliated/betal) has joined ##c++
2016-09-22 07:23:26	-->	roygbiv (~JohnRambo@pdpc/supporter/active/roygbiv) has joined ##c++
2016-09-22 07:23:33	<--	iik (~IIK@staticline-31-183-46-69.toya.net.pl) has quit (Ping timeout: 250 seconds)
2016-09-22 07:23:41	megaTherion	catern: I think you should read a bit (more) about RAII
2016-09-22 07:23:57	catern	if I make the class non-copyable, I will no longer be able to use it in standard collections, right?
2016-09-22 07:24:00	strtok	i would make the class owning the FD to be non-copyable, then implement a move constructor
2016-09-22 07:24:06	megaTherion	catern: wrong
2016-09-22 07:24:24	Kaslai	catern: you only need a move constructor for most operations
2016-09-22 07:24:27	catern	oh, I see
2016-09-22 07:24:34	strtok	assuming he's on a language level that has move semantics
2016-09-22 07:24:52	catern	i'm on C++11
2016-09-22 07:24:54	Kaslai	If no move constructor is overloaded, copy is used by default though.
2016-09-22 07:25:05	-->	SecondForm_Glen1 (~Thunderbi@108.189.70.212) has joined ##c++
2016-09-22 07:25:06	catern	does C++11 have move semantics?
2016-09-22 07:25:09	strtok	yes
2016-09-22 07:25:10	<--	SecondForm_Glenn (~Thunderbi@108.189.70.212) has quit (Ping timeout: 260 seconds)
2016-09-22 07:25:10	--	SecondForm_Glen1 is now known as SecondForm_Glenn
2016-09-22 07:25:11	megaTherion	yes
2016-09-22 07:25:20	<--	jorj (~jorj@162.220.240.216) has quit (Ping timeout: 265 seconds)
2016-09-22 07:25:24	-->	Thorax (~Thorax@94.197.120.127.threembb.co.uk) has joined ##c++
2016-09-22 07:25:27	strtok	you may want to read one of the lengthy articles on the subject
2016-09-22 07:25:32	catern	is it possible to implement a move constructor that just copies the bits of my objects?
2016-09-22 07:25:50	Kaslai	Scott Meyers has also sperged out quite a bit over move semantics
2016-09-22 07:25:56	megaTherion	indeed, learning C++ wont work by not reading some good books :)
2016-09-22 07:26:05	strtok	i honestly don't think you're going to get much more out of this channel on the subject
2016-09-22 07:26:12	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-22 07:26:12	megaTherion	Kaslai: ya, in effective modern C++
2016-09-22 07:26:33	catern	I have experience with Rust so I'm familiar with the idea of move semantics (well - inasmuch as that means the same thing as it does in Rust...)
2016-09-22 07:26:43	megaTherion	catern: C++ is not Rust
2016-09-22 07:26:49	roygbiv	hey all, i have been away from C++ since the late 90s. is stroustrup’s book the best place to catch up the latest fun, or are other sources better recommended? thanks
2016-09-22 07:26:55	megaTherion	catern: if you assume Rust while coding C++, bad things will happen :)
2016-09-22 07:27:07	-->	Vuks (~Vuks@unaffiliated/vuks69) has joined ##c++
2016-09-22 07:27:24	catern	strtok: Kaslai: thank you for your help, I understand now what was going on and what I need to do :)
2016-09-22 07:27:37	strtok	catern: if i were you i'd read up on: copy constructors, move constructors/semantics, std::unique_ptr, std::shared_ptr
2016-09-22 07:27:59	-->	seishun (~Kakera@62.85.5.232) has joined ##c++
2016-09-22 07:28:02	catern	yeah... I have a pretty weird ownership structure so I'm not sure I can express it properly with smart pointers
2016-09-22 07:28:16	strtok	Kaslai gave an option of using std::shared_ptr as an alternative solution to this problem, so understanding how that'd work would help you too
2016-09-22 07:28:48	-->	merijn (~merijn@a212-238-239-156.adsl.xs4all.nl) has joined ##c++
2016-09-22 07:29:13	catern	and, wait a second.. so actually C++ *does* just copy the bits by default
2016-09-22 07:29:20	catern	and that was my whole problem :)
2016-09-22 07:29:24	-->	aslant (~aslant@37.157.39.138) has joined ##c++
2016-09-22 07:29:36	strtok	it does not copy bits by default
2016-09-22 07:29:39	-->	blackwind_123 (~IceChat9@117.192.140.9) has joined ##c++
2016-09-22 07:29:47	catern	it does for an int field
2016-09-22 07:30:00	strtok	the default copy constructor would invoke the copy constructor of every field in your class.
2016-09-22 07:30:04	strtok	yes
2016-09-22 07:30:13	Kaslai	catern: for primitives, you're guaranteed that the values will be copied exactly by default
2016-09-22 07:30:17	catern	sorry, I guess I mean "does just copy the bits for primitive types"
2016-09-22 07:30:22	strtok	yes
2016-09-22 07:30:37	Kaslai	However for non-trivial objects, the copy constructor is called, which obviously can do a lot more than just copy bits :)
2016-09-22 07:31:05	catern	yeah, I get that. my objects are all trivial though :)
2016-09-22 07:31:07	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-22 07:31:38	catern	(where trivial = not defining a copy constructor and not containing any non-trivial fields)
2016-09-22 07:31:53	kalven	besides your 'fd'
2016-09-22 07:32:04	-->	dusted (~dusted@77.68.146.169) has joined ##c++
2016-09-22 07:32:14	strtok	if this was my FD class i'd either delete all copy and move constructors, or delete all copy constructors and only implement move
2016-09-22 07:32:17	catern	sure - but that doesn't define a copy construtor, so it was just being copied bitwise
2016-09-22 07:32:20	strtok	to catch situations like this at compile time
2016-09-22 07:32:35	<--	dhk_ (~dhk@138.59.24.18) has quit (Ping timeout: 265 seconds)
2016-09-22 07:32:42	-->	hk238 (~kvirc@unaffiliated/hk238) has joined ##c++
2016-09-22 07:32:42		[07:32]
2016-09-22 07:32:46	catern	yeah
2016-09-22 07:34:20	-->	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has joined ##c++
2016-09-22 07:34:28	-->	orbiter (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has joined ##c++
2016-09-22 07:34:32	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-22 07:36:19	catern	i suppose there's no automatic way to define a move constructor that just does "copy any primitive fields bitwise, and call the move constructor on any compound fields"?
2016-09-22 07:37:03	strtok	http://en.cppreference.com/w/cpp/language/move_constructor
2016-09-22 07:37:13	strtok	read the section on "implicitly declared move constructor"
2016-09-22 07:37:42	strtok	well. i would read the whole page :)
2016-09-22 07:38:00	catern	oh, I missed the part on the trivial move constructor
2016-09-22 07:38:09	catern	perfect!
2016-09-22 07:38:51	<--	Rudolf (~rodolfo@unaffiliated/rudolf) has quit (Quit: [IRSSI])
2016-09-22 07:39:02	<--	ctnguyen (~chau@2606:6000:fd00:bc00:8048:a03c:3885:a855) has quit (Remote host closed the connection)
2016-09-22 07:39:15	strtok	yeah. life wasn't quite as nice without cppreference
2016-09-22 07:39:31	-->	Lenore (b84a0f22@gateway/web/freenode/ip.184.74.15.34) has joined ##c++
2016-09-22 07:39:36	-->	Rudolf (~rodolfo@unaffiliated/rudolf) has joined ##c++
2016-09-22 07:41:31	<--	asc232 (~Keith@179.38.203.21) has quit (Remote host closed the connection)
2016-09-22 07:43:03	<--	huggy (~huggy@46-227-67-177.pool.ovpn.se) has quit (Ping timeout: 272 seconds)
2016-09-22 07:44:55	<--	ropeney (~ropeney@CPE-58-170-196-106.lns2.lon.bigpond.net.au) has quit (Quit: Leaving)
2016-09-22 07:45:06	-->	Aeuee (~Aeuee@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has joined ##c++
2016-09-22 07:45:25	<--	Aeuee (~Aeuee@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-22 07:45:39	-->	svm (~svm@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has joined ##c++
2016-09-22 07:45:41	<--	hk238 (~kvirc@unaffiliated/hk238) has quit (Quit: http://www.kvirc.net/ 4.9.2 Aria)
2016-09-22 07:45:52	<--	svm (~svm@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-22 07:47:45	-->	decimad (~deci@ip5f5be505.dynamic.kabel-deutschland.de) has joined ##c++
2016-09-22 07:47:45		[07:47]
2016-09-22 07:49:00	-->	esas (~esas@unaffiliated/esas) has joined ##c++
2016-09-22 07:49:38	-->	f10 (~flo@2001:470:52af:1:dd05:b755:629c:9755) has joined ##c++
2016-09-22 07:49:48	-->	f10_ (~flo@2001:470:52af:1:e083:b6f8:a539:bbc) has joined ##c++
2016-09-22 07:49:56	<--	Guest14631 (~BioKey@2a02:1205:506f:db70:e1cc:c2a6:9779:8517) has quit (Ping timeout: 265 seconds)
2016-09-22 07:49:59	<--	zacts (~zacts@dragora/developer/zacts) has quit (Ping timeout: 250 seconds)
2016-09-22 07:50:48	<--	InfoTest (~Thunderbi@tgn.126.67.29.dts.mg) has quit (Quit: InfoTest)
2016-09-22 07:52:31	<--	Praise (~Fat@unaffiliated/praise) has quit (Quit: No Ping reply in 180 seconds.)
2016-09-22 07:52:38	-->	dhk_ (~dhk@138.59.24.18) has joined ##c++
2016-09-22 07:53:05	-->	GinoManWorks (~GinoMan@50-251-53-110-static.hfc.comcastbusiness.net) has joined ##c++
2016-09-22 07:53:31	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-22 07:53:46	-->	Praise (~Fat@unaffiliated/praise) has joined ##c++
2016-09-22 07:54:18	<--	jan64_ (~jan64@agpn21.neoplus.adsl.tpnet.pl) has quit (Quit: Leaving)
2016-09-22 07:54:41	<--	theosirian (~theosiria@186.233.158.67) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-09-22 07:55:24	<--	syem (~s@unaffiliated/syem) has quit (Quit: Lost terminal)
2016-09-22 07:55:25	-->	thadtheman (~tlophd@adsl-99-140-184-6.dsl.chcgil.sbcglobal.net) has joined ##c++
2016-09-22 07:55:45	-->	Vmmus (~Vmmus@prz29-1-78-205-58-16.fbx.proxad.net) has joined ##c++
2016-09-22 07:55:56	-->	Thorax2015 (~Thorax@94.197.121.39.threembb.co.uk) has joined ##c++
2016-09-22 07:56:03	<--	KnownSyntax (~KnownSynt@unaffiliated/knownsyntax) has quit (Ping timeout: 240 seconds)
2016-09-22 07:56:35	thadtheman	shared_ptr uses a reference count. Si there a maximum on the number of simultaneous references can exit?  What if you exceeed that count?
2016-09-22 07:56:51	<--	RangerBob (~brian@pool-173-72-130-20.clppva.fios.verizon.net) has quit (Quit: Leaving)
2016-09-22 07:58:02	<--	incog (~dogfart@unaffiliated/incog) has quit (Remote host closed the connection)
2016-09-22 07:58:07	-->	gegagome (~gegagome@206.83.5.2) has joined ##c++
2016-09-22 07:58:17	-->	inco6 (~dogfart@184-15-189-196.dsl2.chtn.wv.frontiernet.net) has joined ##c++
2016-09-22 07:58:38	<--	Thorax (~Thorax@94.197.120.127.threembb.co.uk) has quit (Ping timeout: 265 seconds)
2016-09-22 08:00:05	<--	re1_ (~reiser@178.220.4.176) has left ##c++
2016-09-22 08:00:31	-->	gelignite (~gelignite@x4db60b2a.dyn.telefonica.de) has joined ##c++
2016-09-22 08:00:54	-->	DjBonadoobie (~DjBonadoo@gateway/vpn/privateinternetaccess/djbonadoobie) has joined ##c++
2016-09-22 08:00:57	-->	re1 (~reiser@178.220.4.176) has joined ##c++
2016-09-22 08:01:54	<--	inco6 (~dogfart@184-15-189-196.dsl2.chtn.wv.frontiernet.net) has left ##c++
2016-09-22 08:02:19	<--	SwiftMatt (~Objective@162.242.94.231) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-22 08:02:24	kalven	then you have bigger issues
2016-09-22 08:02:33	RokerHRO	thadtheman: you got out-of-memory before
2016-09-22 08:04:06	<--	ph88_ (~h88@145.131.171.178) has quit (Read error: Connection reset by peer)
2016-09-22 08:04:06		[08:04]
2016-09-22 08:04:28	-->	ph88_ (~h88@145.131.171.178) has joined ##c++
2016-09-22 08:04:29	-->	theosirian (~theosiria@186.233.158.67) has joined ##c++
2016-09-22 08:04:37	<--	theosirian (~theosiria@186.233.158.67) has quit (Client Quit)
2016-09-22 08:06:05	<--	rikster (~SpaceDino@62.102.148.185) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-09-22 08:06:05	w3z	there are no guarantees about how the control block is implemented or the width of the reference counter, but its a ridiculous thing to worry about
2016-09-22 08:06:37	<--	araml (~araml@unaffiliated/araml) has quit (Quit: WeeChat 1.4)
2016-09-22 08:08:18	<--	kaffeetrauma (~Thunderbi@85-22-37-153.ip.dokom21.de) has quit (Quit: kaffeetrauma)
2016-09-22 08:11:56	k_j	is this atomic: std::shared_ptr::use_count ?
2016-09-22 08:12:05	<--	feliwir (Elite16673@gateway/shell/elitebnc/x-zkqaocfslhcdtmrq) has quit (Ping timeout: 250 seconds)
2016-09-22 08:14:21	<--	seishun (~Kakera@62.85.5.232) has quit (Disconnected by services)
2016-09-22 08:14:27	-->	seishun (~Kakera@46.109.114.184) has joined ##c++
2016-09-22 08:15:24	<--	CuriousErnestBro (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has quit (Quit: Leaving)
2016-09-22 08:15:48	-->	zacts (~zacts@dragora/developer/zacts) has joined ##c++
2016-09-22 08:16:47	<--	kaleid0 (~kaleid0@194.sub-174-219-133.myvzw.com) has quit
2016-09-22 08:17:27	-->	CuriousErnestBro (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has joined ##c++
2016-09-22 08:20:34	-->	dwrngr (~user@96-89-42-188-static.hfc.comcastbusiness.net) has joined ##c++
2016-09-22 08:20:34		[08:20]
2016-09-22 08:20:34	<--	irco (~irco@HSI-KBW-134-3-111-4.hsi14.kabel-badenwuerttemberg.de) has quit (Ping timeout: 255 seconds)
2016-09-22 08:20:43	w3z	your question doesnt make much sense, its a use count at the point of evaluation
2016-09-22 08:21:11	w3z	its returned as a long ....
2016-09-22 08:21:15	Bigcheese	I assume he means thread saf.e
2016-09-22 08:22:09	-->	pwcjr_ (~pwcjr@pool-74-96-89-148.washdc.fios.verizon.net) has joined ##c++
2016-09-22 08:22:56	<--	voidah (~voidah@unaffiliated/voider) has quit (Remote host closed the connection)
2016-09-22 08:24:33	<--	pwcjr (~pwcjr@pool-74-96-89-148.washdc.fios.verizon.net) has quit (Ping timeout: 240 seconds)
2016-09-22 08:26:06	<--	bocaneri (~bocaneri@about/linux/staff/sauvin) has quit (Remote host closed the connection)
2016-09-22 08:26:33	-->	YungRaj (~YungRaj@nat-165-91-13-27.tamulink.tamu.edu) has joined ##c++
2016-09-22 08:26:36	<--	aslant (~aslant@37.157.39.138) has quit (Remote host closed the connection)
2016-09-22 08:28:33	-->	aslant_ (~aslant@37.157.39.138) has joined ##c++
2016-09-22 08:29:18	<--	Vmmus (~Vmmus@prz29-1-78-205-58-16.fbx.proxad.net) has quit (Ping timeout: 276 seconds)
2016-09-22 08:29:23	-->	tmk (~tmk@124.40.246.86) has joined ##c++
2016-09-22 08:30:19	<--	pwcjr_ (~pwcjr@pool-74-96-89-148.washdc.fios.verizon.net) has quit (Quit: WeeChat 1.5)
2016-09-22 08:30:32	-->	sophia7 (~sophia7@unaffiliated/sophia7) has joined ##c++
2016-09-22 08:30:41	-->	zesterer (~zesterer@cpc88842-newt35-2-0-cust1970.19-3.cable.virginm.net) has joined ##c++
2016-09-22 08:32:05	<--	aslant_ (~aslant@37.157.39.138) has quit (Remote host closed the connection)
2016-09-22 08:32:06	-->	Amaranth (~Amaranth@ubuntu/member/Amaranth) has joined ##c++
2016-09-22 08:33:08	-->	przemkovv-bis (~przemkovv@d83-37.icpnet.pl) has joined ##c++
2016-09-22 08:33:54	<--	zwliew (uid161395@gateway/web/irccloud.com/x-olomzlqcchunwaua) has quit (Quit: Connection closed for inactivity)
2016-09-22 08:34:07	-->	martiert_work (~martin@78.37-191-164.fiber.lynet.no) has joined ##c++
2016-09-22 08:35:22	<--	Enhex__ (~Enhex@82.252.138.77.rev.sfr.net) has quit (Quit: Leaving)
2016-09-22 08:35:46	-->	Enhex (~Enhex@82.252.138.77.rev.sfr.net) has joined ##c++
2016-09-22 08:35:46		[08:35]
2016-09-22 08:37:26	-->	araml (~araml@unaffiliated/araml) has joined ##c++
2016-09-22 08:38:33	<--	ibouvousaime (~ibouvousa@41.82.45.22) has quit (Ping timeout: 240 seconds)
2016-09-22 08:42:35	<--	abaines (~abaines@host109-150-226-218.range109-150.btcentralplus.com) has quit (Ping timeout: 265 seconds)
2016-09-22 08:43:51	<--	JSharpe (~JSharpe@104.238.169.117) has quit (Quit: Leaving)
2016-09-22 08:44:17	-->	bthree (~quassel@65.131.44.155) has joined ##c++
2016-09-22 08:45:48	-->	Circuitsoft (4b92a52b@gateway/web/freenode/ip.75.146.165.43) has joined ##c++
2016-09-22 08:45:58	<--	V-ille (~ville@59ec7803.symbio.com) has quit (Ping timeout: 265 seconds)
2016-09-22 08:46:22	Circuitsoft	Hello - if I want to sort a list ascending, according to a series of fields in my object, would this be correct?
2016-09-22 08:46:27	-->	krypton_ (~krypton_@46.166.138.141) has joined ##c++
2016-09-22 08:46:31	<--	fahadash (uid44972@gateway/web/irccloud.com/x-pvdrvscaxezzswdv) has quit (Quit: Connection closed for inactivity)
2016-09-22 08:46:48	-->	symm- (~symm-@86.127.152.32) has joined ##c++
2016-09-22 08:47:07	Circuitsoft	mylist.sort([](myobj &a, myobj &b){ return (a.top_prio < b.top_prio) || (a.second_prio < b.second_prio);});
2016-09-22 08:47:24	gp5st	Circuitsoft: doesn't that return a bool?
2016-09-22 08:47:39	Circuitsoft	Yes
2016-09-22 08:48:29	<--	krypton_ (~krypton_@46.166.138.141) has quit (Remote host closed the connection)
2016-09-22 08:48:29	LBV_User	that may crash
2016-09-22 08:48:34	Circuitsoft	http://en.cppreference.com/w/cpp/container/list/sort - It would seem that would be correct.
2016-09-22 08:48:55	gp5st	Circuitsoft: interesting, I didn't realize bools were used for that now
2016-09-22 08:48:58	LBV_User	Circuitsoft: top_prio has precedence over second_prio?
2016-09-22 08:49:04	Circuitsoft	yes
2016-09-22 08:49:17	-->	strelox (~user@p200300754F401300F30D09DDF28AA3FA.dip0.t-ipconnect.de) has joined ##c++
2016-09-22 08:49:20	-->	forgottenone (~forgotten@176.40.23.252) has joined ##c++
2016-09-22 08:49:29	-->	pwcjr (~pwcjr@pool-74-96-89-148.washdc.fios.verizon.net) has joined ##c++
2016-09-22 08:49:48	gp5st	Circuitsoft: if b.top_prio is less than, then you sort by second_prio, not only if they're =?
2016-09-22 08:49:59	gp5st	they're = top_prio
2016-09-22 08:50:01	LBV_User	Circuitsoft: than if(a.top_prio<b.top_prio) return true; else if(a.top_prio==b.top_prio) a.second_prio<b.second_prio;
2016-09-22 08:50:09	LBV_User	return false;
2016-09-22 08:50:52	Circuitsoft	I would think that if a.top_prio == b.top_prio, then a.top_prio !< b.top_prio, so it should then evaluate a.second_prio < b.second_prio;
2016-09-22 08:50:52		[08:50]
2016-09-22 08:51:03	<--	re1 (~reiser@178.220.4.176) has quit (Read error: Connection reset by peer)
2016-09-22 08:51:30	-->	re1 (~reiser@178.220.4.176) has joined ##c++
2016-09-22 08:52:05	--	josh_ is now known as josh
2016-09-22 08:53:15	LBV_User	Circuitsoft: but you would get wrong order if a.top_prio>b.top_prio and a.second_prio<b.second_prio
2016-09-22 08:53:31	-->	irco (~irco@HSI-KBW-134-3-111-4.hsi14.kabel-badenwuerttemberg.de) has joined ##c++
2016-09-22 08:53:45	Circuitsoft	LBV_User: Same with your solution.
2016-09-22 08:53:57	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-22 08:54:13	LBV_User	no, my solution only test second_prio if a's and b's top_prio are equal
2016-09-22 08:54:38	LBV_User	if a.top_prio>b.top_prio it is a straight false
2016-09-22 08:54:39	Circuitsoft	Oh... Hmm...
2016-09-22 08:54:52	Circuitsoft	That'll get tricky - I have four levels of priority in my use case.
2016-09-22 08:55:00	<--	dhk_ (~dhk@138.59.24.18) has quit (Quit: Leaving)
2016-09-22 08:55:23	Circuitsoft	{list<pair<int,int> > mylist; mylist.emplace(1,1); mylist.emplace(1,2); mylist.emplace(2,1); mylist.sort([](pair<int,int> &a, pair<int,int> &b){return (a.first < b.first) || (a.second < b.second);}); for(auto i=mylist.begin; i != mylist.end();i++)cout<<i;}
2016-09-22 08:55:23	geordi	error: no matching function for call to 'list<pair<int, int> >::emplace(int, int)'
2016-09-22 08:55:44	Circuitsoft	{list<pair<int,int> > mylist; mylist.emplace_back(1,1); mylist.emplace_back(1,2); mylist.emplace_back(2,1); mylist.sort([](pair<int,int> &a, pair<int,int> &b){return (a.first < b.first) || (a.second < b.second);}); for(auto i=mylist.begin; i != mylist.end();i++)cout<<i;}
2016-09-22 08:55:45	geordi	error: unable to deduce 'auto' from 'mylist.list<pair<int, int> >::begin'
2016-09-22 08:56:08	<--	YungRaj (~YungRaj@nat-165-91-13-27.tamulink.tamu.edu) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-22 08:56:11	Circuitsoft	{list<pair<int,int> > mylist; mylist.emplace_back(1,1); mylist.emplace_back(1,2); mylist.emplace_back(2,1); mylist.sort([](pair<int,int> &a, pair<int,int> &b){return (a.first < b.first) || (a.second < b.second);}); for(auto i=mylist.begin(); i != mylist.end();i++)cout<<i;}
2016-09-22 08:56:11	geordi	error: no match for 'operator<<' in 'cout << i' (operand types are 'ostream {aka ostream}' and 'list<pair<int, int>>::iterator')
2016-09-22 08:56:29	Circuitsoft	{list<pair<int,int> > mylist; mylist.emplace_back(1,1); mylist.emplace_back(1,2); mylist.emplace_back(2,1); mylist.sort([](pair<int,int> &a, pair<int,int> &b){return (a.first < b.first) || (a.second < b.second);}); for(auto i=mylist.begin(); i != mylist.end();i++)cout<<i->first << i->second;}
2016-09-22 08:56:30	geordi	112112
2016-09-22 08:57:02	-->	xugv (~xugv@nag77-2-83-152-154-106.fbx.proxad.net) has joined ##c++
2016-09-22 08:57:12	LBV_User	see, you got 1,1; 2,1 then 1,2, instead of 1,1; 1,2; 2,1
2016-09-22 08:57:22	Circuitsoft	Yup, I see that.
2016-09-22 08:57:26	<--	xugv (~xugv@nag77-2-83-152-154-106.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-22 08:57:27	Circuitsoft	This'll take some thought.
2016-09-22 08:57:38	LBV_User	simple, test for equality first
2016-09-22 08:57:41	-->	piii (~piii@nag77-2-83-152-154-106.fbx.proxad.net) has joined ##c++
2016-09-22 08:57:45	Circuitsoft	I don't think I'll be able to clearly inline this comparison.
2016-09-22 08:58:03	<--	piii (~piii@nag77-2-83-152-154-106.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-22 08:58:08	<--	PaSaSaP (~PaSaSaP@nat.ds14.agh.edu.pl) has quit (Ping timeout: 265 seconds)
2016-09-22 08:58:13	LBV_User	Circuitsoft: ternary operator comes to rescue
2016-09-22 08:58:32	Circuitsoft	Yes, but with four levels, that gets very deeply nested and unclear.
2016-09-22 08:58:39	Circuitsoft	Keyword: clearly
2016-09-22 08:58:52	-->	Markow (~Markow@176.122.215.103) has joined ##c++
2016-09-22 08:58:57	-->	biglama (~Day_dream@ram31-1-82-234-77-18.fbx.proxad.net) has joined ##c++
2016-09-22 08:58:59	LBV_User	Circuitsoft: return (a.p1==b.p1? a.p2<b.p2 : a.p1<a.p2);
2016-09-22 08:59:35	LBV_User	Circuitsoft: return (a.p1==b.p1? (a.p2==b.p2? a.p3<b.p3 : a.p2<b.p2) : a.p1<a.p2);
2016-09-22 08:59:48	-->	jaafar (~quassel@67.135.43.183) has joined ##c++
2016-09-22 08:59:58	Circuitsoft	Yes, and that gets dicey. I'd rather write out a static function. More clear that way.
2016-09-22 09:00:16	<--	sctt (~sctt@107-141-7-158.lightspeed.nsvltn.sbcglobal.net) has quit (Ping timeout: 244 seconds)
2016-09-22 09:00:22	Circuitsoft	If I extend that out too far, it gets too hard for a human to read.
2016-09-22 09:00:39	LBV_User	that's missing only 1 level... p4
2016-09-22 09:00:55	Circuitsoft	Yes, and that's already too deep for a human to easily read.
2016-09-22 09:01:09	LBV_User	maybe you can even make a recursive template for that...
2016-09-22 09:01:23	<--	SteffanW (~steffanw@ip4da40774.direct-adsl.nl) has quit (Read error: Connection reset by peer)
2016-09-22 09:01:50	Circuitsoft	"Everyone knows that debugging is twice as hard as writing a program in the first place. So if you're as clever as you can be when you write it, how will you ever debug it?"
2016-09-22 09:01:55	LBV_User	is it possible to expand param packs in ternary operator?
2016-09-22 09:02:17	-->	PaSaSaP (~PaSaSaP@nat.ds14.agh.edu.pl) has joined ##c++
2016-09-22 09:02:58	<--	Cppg (~Cppg@host109-149-152-50.range109-149.btcentralplus.com) has quit (Quit: Nettalk6 - www.ntalk.de)
2016-09-22 09:03:27	LBV_User	from where did that came from, Circuitsoft?
2016-09-22 09:04:16	Circuitsoft	https://en.wikiquote.org/wiki/Brian_Kernighan
2016-09-22 09:05:07	-->	fahadash (uid44972@gateway/web/irccloud.com/x-dnuafhdeaftoxgxf) has joined ##c++
2016-09-22 09:05:23	--	Alina-malina is now known as Samsepiol
2016-09-22 09:05:39	--	Samsepiol is now known as Alina-malina
2016-09-22 09:06:12	LBV_User	in a book of 1974... I'm pretty sure debuggers got some evolution since...
2016-09-22 09:06:12		[09:06]
2016-09-22 09:06:23	-->	V-ille (~ville@81-175-149-170.bb.dnainternet.fi) has joined ##c++
2016-09-22 09:06:39	LBV_User	we are talking about 40 years of evolution...
2016-09-22 09:06:47	TheSchaf	nah
2016-09-22 09:07:40	Lenore	the quote refers to 'clever' in the perl sense...  where you end up with unreadable code.
2016-09-22 09:07:53	Lenore	C++ makes it quite easy to write that kind of code if you really want to
2016-09-22 09:08:02	-->	t0by (~t0by@host227-34-dynamic.15-87-r.retail.telecomitalia.it) has joined ##c++
2016-09-22 09:08:13	LBV_User	perl is unreadable by nature, for what I've seen
2016-09-22 09:09:18	<--	f10 (~flo@2001:470:52af:1:dd05:b755:629c:9755) has quit (Read error: Connection reset by peer)
2016-09-22 09:09:22	<--	f10_ (~flo@2001:470:52af:1:e083:b6f8:a539:bbc) has quit (Read error: Connection reset by peer)
2016-09-22 09:09:25	<--	JoshS (~jshjsh@172.56.38.160) has quit (Quit: Leaving)
2016-09-22 09:09:45	megaTherion	LBV_User: nah
2016-09-22 09:10:03	-->	f10_ (~flo@2001:470:52af:1:e083:b6f8:a539:bbc) has joined ##c++
2016-09-22 09:10:10	<--	seishun (~Kakera@46.109.114.184) has quit (Ping timeout: 265 seconds)
2016-09-22 09:10:22	Lenore	a great example is operator overloading.  if you try to be 'clever' you get iostreams.  but if the language designers decided to omit operator overloading, then math programming becomes really painful.
2016-09-22 09:10:25	Circuitsoft	It is possible to write clean easy-to-read perl. I've seen it.
2016-09-22 09:10:38	Circuitsoft	But it's uncommon.
2016-09-22 09:10:45	megaTherion	you can write also unreadable C++ code, no problem
2016-09-22 09:10:52	Circuitsoft	If you look at IOCCC contest entries, abuse of the ternary operator is not uncommon.
2016-09-22 09:10:59	-->	f10 (~flo@2001:470:52af:1:dd05:b755:629c:9755) has joined ##c++
2016-09-22 09:11:19	<--	sophia7 (~sophia7@unaffiliated/sophia7) has quit (Quit: sophia7)
2016-09-22 09:12:24	w3z	fyi, if youre sorting based on more than a couple arguments, you might consider tie and sorting based on the reuslting tuple
2016-09-22 09:12:35	w3z	itll be much simpler
2016-09-22 09:12:48	Lenore	i want my '+' operator to mean addition...  but it can mean addition of vectors, complex numbers, quaternions, matrices, etc, and i think most of us agree that string concatenation is also conceptually addition.
2016-09-22 09:12:57	 *	Lenore has had to do math code in java.  it's not a fun experience.
2016-09-22 09:13:02	-->	seishun (~Kakera@62.85.5.232) has joined ##c++
2016-09-22 09:17:02	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-22 09:18:12	-->	feliwir (Elite16673@gateway/shell/elitebnc/x-tpvfutvwrihddxvd) has joined ##c++
2016-09-22 09:18:40	-->	NoIdent (~NoIdent@dslb-188-101-011-143.188.101.pools.vodafone-ip.de) has joined ##c++
2016-09-22 09:19:22	-->	ZOrder (~shiranpur@unaffiliated/shiranpuri) has joined ##c++
2016-09-22 09:19:57	<--	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has quit (Ping timeout: 272 seconds)
2016-09-22 09:20:09	w3z	{list<S>L {{3,1},{3,0},{2,1}}; L.sort([](const auto& a,const auto& b){return tie(a.a,a.b)<tie(b.a,b.b);}); for(auto& x:L)cout<<x.a<<" "<<x.b<<", ";} struct S{int a,b;};
2016-09-22 09:20:11	geordi	2 1, 3 0, 3 1,
2016-09-22 09:21:13	<--	Vincent7 (~NoIdent@dslb-188-101-011-143.188.101.pools.vodafone-ip.de) has quit (Ping timeout: 248 seconds)
2016-09-22 09:21:13		[09:21]
2016-09-22 09:21:30	<--	Zoinks (~shiranpur@unaffiliated/shiranpuri) has quit (Ping timeout: 264 seconds)
2016-09-22 09:22:25	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-22 09:23:16	-->	afiefh (~afiefh@31.210.188.33) has joined ##c++
2016-09-22 09:24:03	w3z	itll of course extend to higher dimensions and you wont have to write an error prone lexicographic compare for multiple disparate variables
2016-09-22 09:24:40	<--	francoisk (~francoisk@154.66.250.11) has quit (Quit: Leaving)
2016-09-22 09:25:44	<--	jackhum (uid97400@gateway/web/irccloud.com/x-ubukiyflzavauucy) has quit (Quit: Connection closed for inactivity)
2016-09-22 09:26:33	<--	merijn (~merijn@a212-238-239-156.adsl.xs4all.nl) has quit (Ping timeout: 240 seconds)
2016-09-22 09:27:30	Circuitsoft	Oh, well that's nice and clean.
2016-09-22 09:27:31	<--	xBlackyII (~marc@p54B8B8BD.dip0.t-ipconnect.de) has left ##c++
2016-09-22 09:27:52	Circuitsoft	Is tie(a,b,c) equivalent to make_tuple(ref(a), ref(b), ref(c))?
2016-09-22 09:29:09	w3z	it makes a tuple of lvalue references, not a tuple of reference_wrappers but yes
2016-09-22 09:29:35	V-ille	so not at all equivalent
2016-09-22 09:30:22	Circuitsoft	Would this be performant? (return make_tuple(ref(a.first), a.second+1, ref(a.third)) < make_tuple(ref(b.first), b.second+1, ref(b.third)))
2016-09-22 09:30:54	-->	KAHR-Alpha (~Alpha@AReims-652-1-187-168.w92-142.abo.wanadoo.fr) has joined ##c++
2016-09-22 09:31:20	-->	peterhu (~peterhuen@segfault.guru) has joined ##c++
2016-09-22 09:31:22	w3z	why would you do that ....
2016-09-22 09:31:38	-->	sin3t (~sin3t@77.47.209.98) has joined ##c++
2016-09-22 09:31:59	Circuitsoft	Because a.second is a uint64_t where 0xffffffffffffffff is a special value lower than zero.
2016-09-22 09:33:28	w3z	well then you have the problem of incrementing to your special value if second is one less ...
2016-09-22 09:33:30	<--	sparetire (~sparetire@unaffiliated/sparetire) has quit (Ping timeout: 264 seconds)
2016-09-22 09:33:49	-->	planet_en (~nkh@5.107.65.47) has joined ##c++
2016-09-22 09:34:16	-->	zero_byte (~zer0@ip-89-103-110-138.net.upcbroadband.cz) has joined ##c++
2016-09-22 09:34:47	LBV_User	http://melpon.org/wandbox/permlink/iOuqp50jFYCXr0HO
2016-09-22 09:34:53	Circuitsoft	Unlikely. second is a hard drive LBA number, and I don't intend to support drives > 8 PiB
2016-09-22 09:35:11	LBV_User	and I guess it is even possible to make it handle the type of the member by itself
2016-09-22 09:35:16	<--	f10 (~flo@2001:470:52af:1:dd05:b755:629c:9755) has quit (Ping timeout: 255 seconds)
2016-09-22 09:35:42	Circuitsoft	Well that's cute.
2016-09-22 09:35:49	-->	Cppg (~Cppg@host109-149-152-50.range109-149.btcentralplus.com) has joined ##c++
2016-09-22 09:36:08	LBV_User	irony?
2016-09-22 09:36:40	-->	elnormous (~elnormous@87.110.129.37) has joined ##c++
2016-09-22 09:36:40		[09:36]
2016-09-22 09:36:55	<--	elnormous (~elnormous@87.110.129.37) has quit (Remote host closed the connection)
2016-09-22 09:37:01	-->	elnormou_ (~elnormous@87.110.129.37) has joined ##c++
2016-09-22 09:37:16	Circuitsoft	It's an interesting solution to the generalized problem, and might be worthwhile in a standard library, but since I only have one specific problem and not the general problem, I don't think it's the most readable solution.
2016-09-22 09:37:23	Circuitsoft	I do want to be able to debug this myself...
2016-09-22 09:37:35	<--	josh (~josh@c-67-182-242-240.hsd1.ut.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-22 09:38:08	LBV_User	I'm pretty sure you'll be able to debug this easy than digging into tuples/tie stdlib's code
2016-09-22 09:38:15	<--	planet_en (~nkh@5.107.65.47) has quit (Ping timeout: 265 seconds)
2016-09-22 09:38:27	w3z	youre out of your mind ...
2016-09-22 09:38:36	LBV_User	w3z: who?
2016-09-22 09:38:44	<--	nwkj86 (~nwkj86@144.66.6.51.dyn.plus.net) has quit (Ping timeout: 265 seconds)
2016-09-22 09:38:58	w3z	you, if you think introducing your template is a better solution than using tie/tuple
2016-09-22 09:39:21	Circuitsoft	So far, my method of debugging in standard library code is just to step up the call stack until I reach my own code, then take a close look.
2016-09-22 09:39:31	w3z	among other things, tie wont force each of the emmbers to be the same type
2016-09-22 09:39:49	w3z	and is a lot easier to read and maintain
2016-09-22 09:40:10	w3z	you dont have to dig into how a standard library implements tuple to use it properly :)
2016-09-22 09:40:15	LBV_User	w3z: he was talking about debug, and I don't thing stepping with a debugger inside the code of the stdlib is something easy to do
2016-09-22 09:40:33	<--	step1step2 (~step1step@p57A442E9.dip0.t-ipconnect.de) has quit (Read error: Connection reset by peer)
2016-09-22 09:40:35	LBV_User	but if you have to, it's kinda weird
2016-09-22 09:41:08	w3z	anyway
2016-09-22 09:41:24	-->	franl (~nobody@246.sub-70-215-16.myvzw.com) has joined ##c++
2016-09-22 09:41:50	Lenore	why debugging instead of using, say, gcc -S
2016-09-22 09:42:07	Lenore	i often spot-check my compiler.  it's usally really good at its job, but i still like to verify.
2016-09-22 09:42:40	 *	LBV_User wrote that code more as an exercise, anyway
2016-09-22 09:43:13	Circuitsoft	I'm not quite /that/ good at assembly, especially since I've barely touched anything beyond 16-bit intel, and ARM.
2016-09-22 09:43:22	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-22 09:44:09	Lenore	i try to avoid writing it when i can, but i don't place a whole lot of trust in compilers.  gcc and clang are both pretty good, sdcc for example is not.
2016-09-22 09:44:22	-->	planet_en (~nkh@5.107.65.47) has joined ##c++
2016-09-22 09:44:35	<--	zero_byte (~zer0@ip-89-103-110-138.net.upcbroadband.cz) has quit (Ping timeout: 260 seconds)
2016-09-22 09:44:49	-->	iik (~IIK@staticline-31-183-46-69.toya.net.pl) has joined ##c++
2016-09-22 09:45:10	urdh	what's "not good", generates inefficient executables or generates incorrect executables?
2016-09-22 09:45:26	Circuitsoft	sdcc targets chips that are easier to hand-assemble on.
2016-09-22 09:45:31	Lenore	urdh: occasionally both.
2016-09-22 09:45:42	urdh	that's not good
2016-09-22 09:45:46	Lenore	inefficient when it works.
2016-09-22 09:45:51	Lenore	i've had it generate bad code on more than one occasion.
2016-09-22 09:45:59	urdh	inefficient is fine I guess but incorrect is unforgivable
2016-09-22 09:46:08	Lenore	Circuitsoft: absolutely true.  and in those cases sometimes i do just that.
2016-09-22 09:47:06	Lenore	inefficient is terrible on embedded.  you often have tight MIPS budgets.
2016-09-22 09:47:23	<--	algae (~algae@blk-7-222-201.eastlink.ca) has quit (Quit: leaving)
2016-09-22 09:47:43	-->	YungRaj (~YungRaj@nat-165-91-13-184.tamulink.tamu.edu) has joined ##c++
2016-09-22 09:48:14	urdh	but incorrect is still worse
2016-09-22 09:48:25	Lenore	i've been surprised on both ends...  gcc often uses optimizations that i wouldn't expect, often generating code for patterns i thought i'd have to hand-roll when presented with clean standard code.
2016-09-22 09:48:40	Lenore	and i've seen many embedded compilers completely fall apart
2016-09-22 09:48:44	Lenore	yes, that it is
2016-09-22 09:48:54	<--	MethCat (~ruzhen@192.210.231.214) has quit (Quit: Lost terminal)
2016-09-22 09:49:38	-->	Asher (~asher@c-73-106-33-32.hsd1.ga.comcast.net) has joined ##c++
2016-09-22 09:49:39	-->	Mnkras (~Mnkras@concrete5/781/Mnkras) has joined ##c++
2016-09-22 09:49:55	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-22 09:50:13	Circuitsoft	If you're looking for an MCU, the P8x32a has an incredibly clean assembly language, and a GCC port, though hand-rolled assembly is far superior.
2016-09-22 09:50:50	Lenore	lol i think i'd get fired for selecting a propeller.
2016-09-22 09:50:55	Circuitsoft	Why?
2016-09-22 09:51:09	Lenore	reputation.
2016-09-22 09:51:11	Circuitsoft	Just 'cause no one else there knows it?
2016-09-22 09:51:24	Circuitsoft	Have you seen the "Why propeller works" paper?
2016-09-22 09:51:48	Circuitsoft	Among other things, it works perfectly consistently beyond the military temperature range on both ends.
2016-09-22 09:51:48		[09:51]
2016-09-22 09:52:05	Lenore	many micros do, though.
2016-09-22 09:52:16	Circuitsoft	Depending on your market, that might be worthwhile.
2016-09-22 09:52:40	-->	HerzogDeXtEr (~farci@89.246.162.36) has joined ##c++
2016-09-22 09:52:46	Circuitsoft	What do you tend to use, then? Kinetis?
2016-09-22 09:53:08	Circuitsoft	At this point, there are so many Cortex-M0+ chips that I don't see much reason to go with an 8051.
2016-09-22 09:53:16	Circuitsoft	Or 9s12.
2016-09-22 09:53:32	Lenore	honestly at this point, real-time requirements have mostly pushed us towards FPGA solutions.
2016-09-22 09:53:36	 *	Circuitsoft just realized how O/T this is.
2016-09-22 09:53:43	Lenore	it... really is :/
2016-09-22 09:54:12	Circuitsoft	For development, you may consider the Novena laptop.
2016-09-22 09:54:22	<--	Murii (~Murii@86.127.60.21) has quit
2016-09-22 09:55:06	<--	The_CooIest (~Arthur_Li@bzq-84-108-121-56.cablep.bezeqint.net) has quit (Ping timeout: 264 seconds)
2016-09-22 09:55:10	Lenore	i'm not sure what kind of development would suggest that?
2016-09-22 09:55:14	megaTherion	Circuitsoft: hand-rolled ASM is for ... nobody at our place does this nor encourages you to do so
2016-09-22 09:55:28	megaTherion	Circuitsoft: why would anybody do such crap?
2016-09-22 09:55:40	<--	rorro (~rorro@148.136.141.137) has quit (Ping timeout: 260 seconds)
2016-09-22 09:56:01	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-22 09:56:01	Circuitsoft	megaTherion: That statement was specific to only one CPU core.
2016-09-22 09:56:50	Circuitsoft	Because of how unusual the architecture of that chip is, C just doesn't fit well, and the hoops to make it fit significantly hurt performance.
2016-09-22 09:57:11	-->	Palsson (~Palsson@c-a46fe555.06-213-6e6b701.cust.bredbandsbolaget.se) has joined ##c++
2016-09-22 09:57:37	megaTherion	Circuitsoft: why would anybody on earth select this chip?
2016-09-22 09:57:55	LBV_User	looking at the assemblies: http://ix.io/1pqm
2016-09-22 09:58:09	<--	JRajamaa (~Rajamaa@a91-156-244-1.elisa-laajakaista.fi) has quit (Quit: Konversation terminated!)
2016-09-22 09:58:11	 *	LBV_User notices he needs to learn a little more about asm to understand this
2016-09-22 09:58:17	-->	p4trix (~p4trix@46.26.255.185) has joined ##c++
2016-09-22 09:58:46	Lenore	there have been a number of popular micros that have really uncooperative architectures.  i used to do a lot of PIC programming...
2016-09-22 09:58:49	-->	pheenx (~pheenx@2a02:8071:b68a:1c00:225:22ff:fee7:7dc5) has joined ##c++
2016-09-22 09:58:59	Lenore	C compilers often make a mess of that one
2016-09-22 09:59:35	Circuitsoft	Prop is extremely cooperative for human-written code, and brings many FPGA-like capabilities to programmers more comfortable with sequential logic.
2016-09-22 09:59:37	megaTherion	I dont think that there are no reasonable C compilers for PIC
2016-09-22 09:59:39	megaTherion	PIC is around for ages
2016-09-22 09:59:49	-->	The_Coolest (~Arthur_Li@bzq-84-108-121-56.cablep.bezeqint.net) has joined ##c++
2016-09-22 09:59:55	Lenore	that situation isn't as bad as it used to be, especially the 18F with extended instruction support.
2016-09-22 09:59:57	-->	yazdmich (~yazdmich@bytes.coffee) has joined ##c++
2016-09-22 10:00:02	Lenore	but it used to be really bad.
2016-09-22 10:00:07	w3z	!focus
2016-09-22 10:00:09	nolyc	##c++ focuses on C++. Discuss offtopic things elsewhere; ##c++-general or ##c++-social
2016-09-22 10:00:09	Circuitsoft	megaTherion: There are /okay/ compilers for it, but part of the problem is that PICs vary so much from chip to chip.
2016-09-22 10:00:12	-->	JRajamaa (~Rajamaa@a91-156-244-1.elisa-laajakaista.fi) has joined ##c++
2016-09-22 10:00:12	Lenore	thanks w3z.
2016-09-22 10:00:14	Lenore	way off topic
2016-09-22 10:00:14	<--	d_himro (~none@178.124.154.80) has quit (Read error: Connection reset by peer)
2016-09-22 10:00:24	 *	Circuitsoft reminds myself of what I /me'd earlier...
2016-09-22 10:00:38	Lenore	i'll happily continue this conversation on an appropriate channel if someone wants to suggest one, though.
2016-09-22 10:00:52	Circuitsoft	Uh, he just did - ##c++-social
2016-09-22 10:00:58	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-22 10:01:16	Lenore	works for me
2016-09-22 10:01:19	<--	fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2016-09-22 10:01:32	-->	d_himro (~none@178.124.154.80) has joined ##c++
2016-09-22 10:01:36	w3z	be forewarned, its a madhouse :)
2016-09-22 10:01:41	pragma-	Excellent. I look forward to not see this conversation there.
2016-09-22 10:01:49	pragma-	to not seeing
2016-09-22 10:02:09	Lenore	always the way of it
2016-09-22 10:02:09	<--	Palsson (~Palsson@c-a46fe555.06-213-6e6b701.cust.bredbandsbolaget.se) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-09-22 10:02:31	LBV_User	my solution got one instruction bigger]
2016-09-22 10:02:34	-->	fintler (~fintler@unaffiliated/fintler) has joined ##c++
2016-09-22 10:03:13	<--	stfn (~stfn@unaffiliated/stfn) has quit (Remote host closed the connection)
2016-09-22 10:03:34	<--	Asher (~asher@c-73-106-33-32.hsd1.ga.comcast.net) has quit (Quit: Leaving.)
2016-09-22 10:03:52	-->	Asher (~asher@c-73-106-33-32.hsd1.ga.comcast.net) has joined ##c++
2016-09-22 10:03:55	-->	o] (~achubergs@pool-108-54-98-223.nycmny.fios.verizon.net) has joined ##c++
2016-09-22 10:04:25	-->	stfn (~stfn@unaffiliated/stfn) has joined ##c++
2016-09-22 10:05:30	<--	baudejogos (~achubergs@pool-108-54-98-223.nycmny.fios.verizon.net) has quit (Ping timeout: 276 seconds)
2016-09-22 10:06:15	-->	sh00p (~sh00p@84.216.39.31) has joined ##c++
2016-09-22 10:07:06	<--	xCrypto (~xCrypto@drmons0544w-142177154202.dhcp-dynamic.FibreOp.ns.bellaliant.net) has quit (Quit: Nettalk6 - www.ntalk.de)
2016-09-22 10:07:06		[10:07]
2016-09-22 10:07:18	<--	skoocda (~skoocda@76.74.139.126) has quit (Quit: Leaving)
2016-09-22 10:10:06	<--	scai (~scai@p4FF0FE6D.dip0.t-ipconnect.de) has left ##c++ ("[IRSSI]")
2016-09-22 10:10:22	-->	catbeard (~lol@unaffiliated/walp) has joined ##c++
2016-09-22 10:10:35	<--	jaafar (~quassel@67.135.43.183) has quit (Ping timeout: 265 seconds)
2016-09-22 10:10:49	catbeard	is there a lib/app (other than audiowaveform) to generate a waveform graph from pcm/mp3 ?
2016-09-22 10:11:10	fooobarrr	you should probably just delete your compyuter catbeard
2016-09-22 10:11:18	fooobarrr	!give catbeard #general
2016-09-22 10:12:41	<--	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has quit (Quit: deeb)
2016-09-22 10:12:44	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-22 10:12:53	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-22 10:14:24	<--	tmk (~tmk@124.40.246.86) has quit (Quit: Leaving)
2016-09-22 10:15:20	-->	fstd (~fstd@unaffiliated/fisted) has joined ##c++
2016-09-22 10:15:24	-->	f10 (~flo@2001:470:52af:1:dd05:b755:629c:9755) has joined ##c++
2016-09-22 10:16:40	<--	plee (~kurt@89.10.219.180) has quit (Read error: Connection reset by peer)
2016-09-22 10:17:14	-->	plee (~kurt@89.10.219.180) has joined ##c++
2016-09-22 10:17:45	<--	sag3 (~O@91.214.169.69) has quit (Read error: Connection reset by peer)
2016-09-22 10:18:04	-->	matiu (~matiu@unaffiliated/matiu) has joined ##c++
2016-09-22 10:18:28	<--	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has quit (Ping timeout: 244 seconds)
2016-09-22 10:19:17	-->	ambro718 (~ambro@unaffiliated/ambro718) has joined ##c++
2016-09-22 10:19:45	-->	jaafar (~quassel@50-206-78-205-static.hfc.comcastbusiness.net) has joined ##c++
2016-09-22 10:19:50	<--	irco (~irco@HSI-KBW-134-3-111-4.hsi14.kabel-badenwuerttemberg.de) has quit (Ping timeout: 244 seconds)
2016-09-22 10:20:04	<--	karab44 (~karab44@unaffiliated/karab44) has quit (Quit: Bye bye! o/)
2016-09-22 10:20:22	--	franl is now known as franl_afk
2016-09-22 10:20:40	<--	bthree (~quassel@65.131.44.155) has quit (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
2016-09-22 10:23:17	<--	pmercado (~pmercado@186-104-216-78.baf.movistar.cl) has quit (Quit: Konversation terminated!)
2016-09-22 10:23:17		[10:23]
2016-09-22 10:23:28	<--	zesterer (~zesterer@cpc88842-newt35-2-0-cust1970.19-3.cable.virginm.net) has quit (Quit: Leaving)
2016-09-22 10:25:26	<--	bipul (~bipul7@139.59.5.42) has quit (Changing host)
2016-09-22 10:25:26	-->	bipul (~bipul7@linuxpadawan/padawan/bipul) has joined ##c++
2016-09-22 10:27:09	-->	snover (~Adium@unaffiliated/snover) has joined ##c++
2016-09-22 10:27:20	-->	bthree (~quassel@65.131.44.155) has joined ##c++
2016-09-22 10:28:17	<--	jaafar (~quassel@50-206-78-205-static.hfc.comcastbusiness.net) has quit (Ping timeout: 240 seconds)
2016-09-22 10:28:30	-->	m_ben (~m_ben@unaffiliated/m-ben/x-5917362) has joined ##c++
2016-09-22 10:28:54	<--	Amaranth (~Amaranth@ubuntu/member/Amaranth) has quit (Quit: So long!)
2016-09-22 10:30:14	-->	SpaceDanceCJ (~Sasha@178.121.26.16) has joined ##c++
2016-09-22 10:30:17	<--	jablo (~jablo@80-62-117-193-mobile.dk.customer.tdc.net) has quit (Quit: jablo)
2016-09-22 10:30:19	<--	gp5st (17194381@gateway/web/freenode/ip.23.25.67.129) has quit (Quit: Page closed)
2016-09-22 10:30:38	-->	josh_ (~josh@168.103.191.142) has joined ##c++
2016-09-22 10:31:40	-->	Hannibal_Smith (~nico@host153-103-dynamic.117-80-r.retail.telecomitalia.it) has joined ##c++
2016-09-22 10:31:41	<--	harha_ (harha_@y55.ip4.netikka.fi) has quit
2016-09-22 10:32:44	-->	pticochon (~smith@unaffiliated/pticochon) has joined ##c++
2016-09-22 10:33:20	<--	edr (~edr@pdpc/supporter/professional/edr) has quit (Read error: Connection reset by peer)
2016-09-22 10:33:41	-->	edr (~edr@d-65-175-151-56.cpe.metrocast.net) has joined ##c++
2016-09-22 10:34:33	-->	Cubbi (~cubbi@ool-4577c7b6.dyn.optonline.net) has joined ##c++
2016-09-22 10:35:05	<--	YungRaj (~YungRaj@nat-165-91-13-184.tamulink.tamu.edu) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-22 10:35:20	-->	nwkj86 (~nwkj86@144.66.6.51.dyn.plus.net) has joined ##c++
2016-09-22 10:37:21	-->	Amaranth (~Amaranth@ubuntu/member/Amaranth) has joined ##c++
2016-09-22 10:37:46	-->	sharazam (~sharazam@x4db07473.dyn.telefonica.de) has joined ##c++
2016-09-22 10:38:14	-->	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has joined ##c++
2016-09-22 10:38:22	<--	t0by (~t0by@host227-34-dynamic.15-87-r.retail.telecomitalia.it) has quit (Quit: Bye!)
2016-09-22 10:38:22		[10:38]
2016-09-22 10:40:19	-->	asc232 (~Keith@179.38.203.21) has joined ##c++
2016-09-22 10:40:22	-->	planet_e1 (~nkh@5.107.65.47) has joined ##c++
2016-09-22 10:41:15	<--	planet_en (~nkh@5.107.65.47) has quit (Ping timeout: 276 seconds)
2016-09-22 10:44:40	-->	rakts (04102a83@gateway/web/cgi-irc/kiwiirc.com/ip.4.16.42.131) has joined ##c++
2016-09-22 10:49:15	<--	planet_e1 (~nkh@5.107.65.47) has quit (Ping timeout: 272 seconds)
2016-09-22 10:50:08	-->	nn0 (~nnzero@node-737.pool-101-109.dynamic.totbb.net) has joined ##c++
2016-09-22 10:51:09	<--	forgottenone (~forgotten@176.40.23.252) has quit (Ping timeout: 265 seconds)
2016-09-22 10:51:58	<--	bthree (~quassel@65.131.44.155) has quit (Remote host closed the connection)
2016-09-22 10:52:08	-->	callq (931a6710@gateway/web/freenode/ip.147.26.103.16) has joined ##c++
2016-09-22 10:52:45	-->	gist (~jack@p57907422.dip0.t-ipconnect.de) has joined ##c++
2016-09-22 10:53:03	<--	dli (44432a43@gateway/web/freenode/ip.68.67.42.67) has quit (Quit: Page closed)
2016-09-22 10:53:04	<--	swnc (~swnc@port-92-204-70-93.dynamic.qsc.de) has left ##c++
2016-09-22 10:53:23	<--	NeXTSUN (~textual@2601:83:8100:42cf:9cd1:d4d4:62cb:9727) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-22 10:53:23		[10:53]
2016-09-22 10:53:32	<--	jamesaxl (~jamesaxl@176.98.129.195) has quit (Quit: Leaving)
2016-09-22 10:53:36	<--	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has quit (Ping timeout: 276 seconds)
2016-09-22 10:53:41	<--	bumbar (~bumbar@unaffiliated/bumbar) has quit (Quit: Leaving)
2016-09-22 10:53:59	<--	szulak (uid162164@gateway/web/irccloud.com/x-gizasrtgexfxsyxz) has quit (Quit: Connection closed for inactivity)
2016-09-22 10:54:08	-->	sparetire (~sparetire@unaffiliated/sparetire) has joined ##c++
2016-09-22 10:54:35	<--	franl_afk (~nobody@246.sub-70-215-16.myvzw.com) has quit (Ping timeout: 260 seconds)
2016-09-22 10:54:55	<--	xnavor (~xnavor@88.131.217.66) has quit (Quit: This computer has gone to sleep)
2016-09-22 10:55:02	<--	Thorax2015 (~Thorax@94.197.121.39.threembb.co.uk) has quit (Read error: Connection reset by peer)
2016-09-22 10:55:18	<--	callq (931a6710@gateway/web/freenode/ip.147.26.103.16) has quit (Client Quit)
2016-09-22 10:55:27	<--	spooooon (~cw@cpc84421-newc18-2-0-cust250.16-2.cable.virginm.net) has quit
2016-09-22 10:55:52	-->	Thorax (~Thorax@94.197.121.39.threembb.co.uk) has joined ##c++
2016-09-22 10:56:10	<--	rakts (04102a83@gateway/web/cgi-irc/kiwiirc.com/ip.4.16.42.131) has left ##c++
2016-09-22 10:56:11	<--	nn0 (~nnzero@node-737.pool-101-109.dynamic.totbb.net) has left ##c++
2016-09-22 10:56:32	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-22 10:56:36	-->	karts (04102a83@gateway/web/cgi-irc/kiwiirc.com/ip.4.16.42.131) has joined ##c++
2016-09-22 10:56:45	karts	I am having a class hierarchy like this one: http://ideone.com/gQzzcg. While this compiles fine, and all is well, I am, foolishly hoping there is someway I can avoid typing `AnOutsideClass::AnInternalClass' and `AnOutsideClass::AnInternalClass::Status' by either using an type alias or a typedef. Is it wishful thinking?
2016-09-22 10:57:20	karts	my attempts for a typedef or typename alias are failing miserably on visual studio 2013.
2016-09-22 10:59:27	<--	PaSaSaP (~PaSaSaP@nat.ds14.agh.edu.pl) has quit (Ping timeout: 265 seconds)
2016-09-22 11:00:08	-->	Leovale (~Leovale@45.72.141.66) has joined ##c++
2016-09-22 11:00:51	-->	anuxivm (~anuxi@92.185.154.236) has joined ##c++
2016-09-22 11:00:55	<--	Thorax (~Thorax@94.197.121.39.threembb.co.uk) has quit (Read error: Connection reset by peer)
2016-09-22 11:01:59	<--	dwrngr (~user@96-89-42-188-static.hfc.comcastbusiness.net) has quit (Read error: Connection reset by peer)
2016-09-22 11:02:03	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Ping timeout: 240 seconds)
2016-09-22 11:02:05	-->	nn0 (~nn0@node-737.pool-101-109.dynamic.totbb.net) has joined ##c++
2016-09-22 11:02:06	-->	Thorax (~Thorax@94.197.121.39.threembb.co.uk) has joined ##c++
2016-09-22 11:02:50	-->	jefcolbi (~Thunderbi@188.166.147.168) has joined ##c++
2016-09-22 11:03:32	<--	nn0 (~nn0@node-737.pool-101-109.dynamic.totbb.net) has left ##c++
2016-09-22 11:03:44	<--	MrP[Home] (~Palsson@c-a46fe555.06-213-6e6b701.cust.bredbandsbolaget.se) has quit (Read error: Connection reset by peer)
2016-09-22 11:04:01	LBV_User	using Status=AnOutsideClass::AnInternalClass::Status; karts
2016-09-22 11:04:28	LBV_User	but a typedef should work too
2016-09-22 11:04:37	-->	rorro (~rorro@176.10.248.234) has joined ##c++
2016-09-22 11:04:48	LBV_User	karts: but your problem is an accessibility problem
2016-09-22 11:05:07	-->	xaxxon (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has joined ##c++
2016-09-22 11:05:44	karts	LBV_User: That's exactly what I am running into. The class itself is internal to the outerclass, and so my attempt at using a type alias is foolish, I guess.
2016-09-22 11:06:15	karts	I guess, other than a public scope, there is no way I can do shorten the name (unless, of course, if I use a macro)
2016-09-22 11:06:20	w3z	neither will work, its private
2016-09-22 11:06:55	w3z	you can use a hack, but its not standard ... and i dont recommend it
2016-09-22 11:07:02	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-22 11:07:16	LBV_User	making an public alias in the outer class?!
2016-09-22 11:07:59	karts	w3z: what are you thinking? even if it is not recommended ;-)
2016-09-22 11:08:17	w3z	class O{class I{void f();};}; template<class=void> using I=O::I; void I<>::f() {}
2016-09-22 11:08:20	w3z	{} class O{class I{void f();};}; template<class=void> using I=O::I; void I<>::f() {}
2016-09-22 11:08:21	geordi	<no output>
2016-09-22 11:08:30	w3z	thatll work on clang and gcc, its a bug
2016-09-22 11:08:30		[11:08]
2016-09-22 11:08:55	-->	t0by (~t0by@host227-34-dynamic.15-87-r.retail.telecomitalia.it) has joined ##c++
2016-09-22 11:09:35	<--	flopsec (flopsec@gateway/shell/fnordserver.eu/x-iyoicmyjczvkauhc) has quit (Quit: https://fnordserver.eu)
2016-09-22 11:09:53	<--	supay (nebuzen@gateway/shell/fnordserver.eu/x-pltgtjuctmfoxthk) has quit (Quit: https://fnordserver.eu)
2016-09-22 11:09:56	-->	bberg (~bbergz@unaffiliated/bberg) has joined ##c++
2016-09-22 11:09:59	<--	WizJin (WizJin@gateway/shell/fnordserver.eu/x-lelbtbeafivgypyn) has quit (Quit: https://fnordserver.eu)
2016-09-22 11:10:05	<--	moony22 (moony22@wikipedia/Moony22) has quit (Quit: https://fnordserver.eu)
2016-09-22 11:10:08	 *	LBV_User feels like someone broke into his house just by looking at that
2016-09-22 11:10:42	<--	cliluw (~cliluw@unaffiliated/cliluw) has quit (Read error: Connection reset by peer)
2016-09-22 11:10:49	karts	w3z: but looks like I can use private typedefs.
2016-09-22 11:10:50	w3z	:) the puclic alias inside O would be legal and not as awful
2016-09-22 11:11:17	<--	Zunino (~Zunino@189.114.206.86.dynamic.adsl.gvt.net.br) has left ##c++
2016-09-22 11:11:17	w3z	that hack breaks the all the access restrictions
2016-09-22 11:11:18	w3z	-the
2016-09-22 11:11:47	<--	oxygene (~fred@ALille-652-1-134-14.w83-198.abo.wanadoo.fr) has quit (Quit: Quitte)
2016-09-22 11:11:53	-->	CuteAlien (~Micha@dslb-188-104-249-170.188.104.pools.vodafone-ip.de) has joined ##c++
2016-09-22 11:12:09	-->	PaSaSaP (~PaSaSaP@nat.ds14.agh.edu.pl) has joined ##c++
2016-09-22 11:12:22	w3z	if you insist on doing either, and im not sure why you would insist, then:
2016-09-22 11:12:23	w3z	class O{class I{void f();}; public:using T=I;}; using T=O::T; void T::f() {}
2016-09-22 11:12:35	w3z	{} class O{class I{void f();}; public:using T=I;}; using T=O::T; void T::f() {}
2016-09-22 11:12:36	geordi	<no output>
2016-09-22 11:12:41	<--	afiefh (~afiefh@31.210.188.33) has quit (Ping timeout: 272 seconds)
2016-09-22 11:12:45	w3z	as LBV_User suggested
2016-09-22 11:12:55	<--	Levitator (~Meh@cpe-2606-A000-E182-FB00-715D-7348-BCFA-D6B.dyn6.twc.com) has quit (Ping timeout: 255 seconds)
2016-09-22 11:13:15	w3z	but youre breaking encapsulation, so eh
2016-09-22 11:13:24	-->	zero_byte (~zer0@ip-89-103-110-138.net.upcbroadband.cz) has joined ##c++
2016-09-22 11:15:01	<--	LBV_User (~leonardo@177.156.226.0) has quit (Quit: done with this Instant Ramen Cup)
2016-09-22 11:15:23	<--	seishun (~Kakera@62.85.5.232) has quit (Ping timeout: 250 seconds)
2016-09-22 11:15:32	karts	You are probably right... if I am willing to make the using public, might as well make the declaration of the inner class public too.
2016-09-22 11:16:31	<--	CuteAlien (~Micha@dslb-188-104-249-170.188.104.pools.vodafone-ip.de) has quit (Client Quit)
2016-09-22 11:18:16	-->	franl (~nobody@4.sub-70-215-23.myvzw.com) has joined ##c++
2016-09-22 11:18:30	<--	tocka (~tocka@78-56-107-170.static.zebra.lt) has quit
2016-09-22 11:18:46	<--	karts (04102a83@gateway/web/cgi-irc/kiwiirc.com/ip.4.16.42.131) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-09-22 11:19:12	<--	asc232 (~Keith@179.38.203.21) has quit (Remote host closed the connection)
2016-09-22 11:19:18	-->	sag3 (~O@91.214.169.69) has joined ##c++
2016-09-22 11:19:42	-->	bkboggy (~bkboggy@cpe-172-250-147-60.socal.res.rr.com) has joined ##c++
2016-09-22 11:19:47	<--	elnormou_ (~elnormous@87.110.129.37) has quit (Remote host closed the connection)
2016-09-22 11:21:34	<--	Winslow- (~Winslow_@bnc.unknowncheats.me) has quit (Ping timeout: 250 seconds)
2016-09-22 11:22:32	<--	irrenhaus3 (~xenon@HSI-KBW-046-005-253-088.hsi8.kabel-badenwuerttemberg.de) has quit (Quit: Lost terminal)
2016-09-22 11:23:11	-->	Winslow_ (~Winslow_@bnc.unknowncheats.me) has joined ##c++
2016-09-22 11:23:25	-->	quickbrownfox (~henrique_@177.131.178.138) has joined ##c++
2016-09-22 11:23:40	-->	karts (04102a83@gateway/web/cgi-irc/kiwiirc.com/ip.4.16.42.131) has joined ##c++
2016-09-22 11:23:40		[11:23]
2016-09-22 11:23:50	-->	TMM (~hp@fsf/member/pdpc.professional.tmm) has joined ##c++
2016-09-22 11:23:53	<--	wolfcub (~henrique_@177.131.178.138) has quit (Ping timeout: 248 seconds)
2016-09-22 11:24:26	-->	josef__k (~jeremy@59.102.16.55) has joined ##c++
2016-09-22 11:24:37	-->	Azusa762 (~roy@2a02:8084:2ac1:ef00:f279:59ff:fe17:ce37) has joined ##c++
2016-09-22 11:25:08	<--	occamsblazer (~occamsbla@131.228.197.63) has quit (Quit: Ad somnum per aspera)
2016-09-22 11:25:33	<--	MulleDK19 (MulleDK19@unaffiliated/mulledk19) has quit
2016-09-22 11:26:11	w3z	i shouldnt give up the template alias trick, its awful, but *I* found it (or at least im not aware of anyone else having noticed it first) so im a little proud of it :)
2016-09-22 11:27:06	w3z	there are "legal" ways to get at private members using explicit instantiation too fwiw
2016-09-22 11:27:07	-->	MulleDK19 (MulleDK19@unaffiliated/mulledk19) has joined ##c++
2016-09-22 11:27:12	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-22 11:28:43	-->	kurahaupo (~kurahaupo@ppp121-44-230-180.bras2.syd2.internode.on.net) has joined ##c++
2016-09-22 11:28:45	Oxyd	You mean the trick litb found years ago?
2016-09-22 11:29:00	Oxyd	!fs private
2016-09-22 11:29:01	nolyc	template<typename Tag, typename Tag::type t> struct rob { friend typename Tag::type get(Tag) { return t; } }; class chock { long cock; }; struct C_c { typedef long chock::*type; friend type get(C_c); }; template struct rob<C_c,&chock::cock>; int main() { return chock().*get(C_c()); }
2016-09-22 11:29:09	<--	skweek (~skweek@68-200-146-225.res.bhn.net) has quit (Ping timeout: 272 seconds)
2016-09-22 11:29:10	-->	xCrypto (~xCrypto@drmons0544w-142177154202.dhcp-dynamic.FibreOp.ns.bellaliant.net) has joined ##c++
2016-09-22 11:29:18	<--	josef__k (~jeremy@59.102.16.55) has quit (Ping timeout: 264 seconds)
2016-09-22 11:29:39	-->	code_zombie (~code_zomb@136.63.230.43) has joined ##c++
2016-09-22 11:30:06	Circuitsoft	Is there any way to start two threads in such a way that the second thread does not start before the first thread hits a blocking ioctl()?
2016-09-22 11:30:32	-->	stomper_ (~stomper_@ool-45751986.dyn.optonline.net) has joined ##c++
2016-09-22 11:31:58	-->	Anodl (~Anodl@p2003007A2F1E7800881ACEF04B0C4372.dip0.t-ipconnect.de) has joined ##c++
2016-09-22 11:32:01	w3z	i didnt say i found that one, and that one is spelled out in the standard (sort of)
2016-09-22 11:32:11	-->	elnormous (~elnormous@87.110.129.37) has joined ##c++
2016-09-22 11:33:23	w3z	but yes, there are a couple variations along those lines
2016-09-22 11:33:51	<--	gagbo (~gagbo@unaffiliated/gagbo) has quit (Quit: Konversation terminated!)
2016-09-22 11:33:55	Oxyd	Well, if your trick isn't standard C++, then it's not an on-topic trick. :P
2016-09-22 11:34:08	<--	Mnkras (~Mnkras@concrete5/781/Mnkras) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-09-22 11:34:19	w3z	hrumph :)
2016-09-22 11:34:35	-->	SwiftMatt (~Objective@209.107.210.95) has joined ##c++
2016-09-22 11:35:45	-->	cliluw (~cliluw@unaffiliated/cliluw) has joined ##c++
2016-09-22 11:36:32	<--	fahadash (uid44972@gateway/web/irccloud.com/x-dnuafhdeaftoxgxf) has quit (Quit: Connection closed for inactivity)
2016-09-22 11:36:37	<--	JRajamaa (~Rajamaa@a91-156-244-1.elisa-laajakaista.fi) has quit (Quit: Konversation terminated!)
2016-09-22 11:36:59	<--	code_zombie (~code_zomb@136.63.230.43) has quit (*.net *.split)
2016-09-22 11:36:59	<--	karts (04102a83@gateway/web/cgi-irc/kiwiirc.com/ip.4.16.42.131) has quit (*.net *.split)
2016-09-22 11:36:59	<--	zero_byte (~zer0@ip-89-103-110-138.net.upcbroadband.cz) has quit (*.net *.split)
2016-09-22 11:36:59	<--	jefcolbi (~Thunderbi@188.166.147.168) has quit (*.net *.split)
2016-09-22 11:36:59	<--	edr (~edr@d-65-175-151-56.cpe.metrocast.net) has quit (*.net *.split)
2016-09-22 11:36:59	<--	o] (~achubergs@pool-108-54-98-223.nycmny.fios.verizon.net) has quit (*.net *.split)
2016-09-22 11:36:59	<--	ZOrder (~shiranpur@unaffiliated/shiranpuri) has quit (*.net *.split)
2016-09-22 11:36:59	<--	GinoManWorks (~GinoMan@50-251-53-110-static.hfc.comcastbusiness.net) has quit (*.net *.split)
2016-09-22 11:37:00	<--	SecondForm_Glenn (~Thunderbi@108.189.70.212) has quit (*.net *.split)
2016-09-22 11:37:00	<--	jkhl (~j@host86-182-59-122.range86-182.btcentralplus.com) has quit (*.net *.split)
2016-09-22 11:37:00	<--	Brklyn (~truthbk@38.122.226.210) has quit (*.net *.split)
2016-09-22 11:37:00	<--	Jiwan (~jeangu@212.247.124.2) has quit (*.net *.split)
2016-09-22 11:37:00	<--	ovrh (~ovrh@unaffiliated/ovrh) has quit (*.net *.split)
2016-09-22 11:37:00	<--	emilsp (~emilsp@enucs/member/emilsp) has quit (*.net *.split)
2016-09-22 11:37:00	<--	Lowl3v3l (~Lowl3v3l@dslb-088-075-098-175.088.075.pools.vodafone-ip.de) has quit (*.net *.split)
2016-09-22 11:37:00	<--	KeelOfSteel (~quassel@ti0049a400-0413.bb.online.no) has quit (*.net *.split)
2016-09-22 11:37:01	<--	ville (~ville@37-136-51-33.rev.dnainternet.fi) has quit (*.net *.split)
2016-09-22 11:37:01	<--	hoshi (~hoshi@drk246.neoplus.adsl.tpnet.pl) has quit (*.net *.split)
2016-09-22 11:37:01	<--	bratner_ (~bratner@79.177.188.8) has quit (*.net *.split)
2016-09-22 11:37:01	<--	trw (~twa@184.250.139.97) has quit (*.net *.split)
2016-09-22 11:37:02	<--	MalRD (~MalRD@50-87-176-177.unifiedlayer.com) has quit (*.net *.split)
2016-09-22 11:37:02	<--	TehWan (~TehWan@modemcable033.235-81-70.mc.videotron.ca) has quit (*.net *.split)
2016-09-22 11:37:02	<--	ftop (~ftop@ppp121-45-223-68.lns20.cbr1.internode.on.net) has quit (*.net *.split)
2016-09-22 11:37:02	<--	Hajime- (~Hajime@c-71-57-78-141.hsd1.il.comcast.net) has quit (*.net *.split)
2016-09-22 11:37:02	<--	Kostenko_ (~Kostenko@bl14-204-63.dsl.telepac.pt) has quit (*.net *.split)
2016-09-22 11:37:02	<--	Budd (~eric@cpe-67-242-201-146.nycap.res.rr.com) has quit (*.net *.split)
2016-09-22 11:37:03	<--	dmiles (dmiles@c-24-20-102-245.hsd1.wa.comcast.net) has quit (*.net *.split)
2016-09-22 11:37:04	<--	danieli (~duniel@unaffiliated/danieli) has quit (*.net *.split)
2016-09-22 11:37:04	<--	fflam (~mdt@ip72-192-136-18.sd.sd.cox.net) has quit (*.net *.split)
2016-09-22 11:37:04	<--	flonk (~flonk@ec2-52-40-29-25.us-west-2.compute.amazonaws.com) has quit (*.net *.split)
2016-09-22 11:37:05	<--	rafalcpp (~racalcppp@84-10-11-234.static.chello.pl) has quit (*.net *.split)
2016-09-22 11:37:05	<--	Belgarion0 (~aoeu@dedi.brokenbrain.se) has quit (*.net *.split)
2016-09-22 11:37:05	<--	op9 (~syphter@rouk.org) has quit (*.net *.split)
2016-09-22 11:37:05	<--	soulz (~soulz@unaffiliated/soulz) has quit (*.net *.split)
2016-09-22 11:37:06	<--	elementalest (~elemental@unaffiliated/elementalest) has quit (*.net *.split)
2016-09-22 11:37:06	<--	B0rnRu5H (~B0rnRu5H@162.243.109.139) has quit (*.net *.split)
2016-09-22 11:37:06	<--	Anodl (~Anodl@p2003007A2F1E7800881ACEF04B0C4372.dip0.t-ipconnect.de) has quit (*.net *.split)
2016-09-22 11:37:06	<--	t0by (~t0by@host227-34-dynamic.15-87-r.retail.telecomitalia.it) has quit (*.net *.split)
2016-09-22 11:37:06	<--	ambro718 (~ambro@unaffiliated/ambro718) has quit (*.net *.split)
2016-09-22 11:37:07	<--	martiert_work (~martin@78.37-191-164.fiber.lynet.no) has quit (*.net *.split)
2016-09-22 11:37:07	<--	zagabar (~zagabar@unaffiliated/zagabar) has quit (*.net *.split)
2016-09-22 11:37:07	<--	fedepad (~fedepad@p4FE10D52.dip0.t-ipconnect.de) has quit (*.net *.split)
2016-09-22 11:37:07	<--	xaxxon__ (~xaxxon@2601:602:9d00:d58b:6cb3:dcf0:4210:6dce) has quit (*.net *.split)
2016-09-22 11:37:07	<--	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has quit (*.net *.split)
2016-09-22 11:37:08	<--	Appleman1234 (~Appleman1@KD119104043017.au-net.ne.jp) has quit (*.net *.split)
2016-09-22 11:37:08	<--	Birchy (~Birchy@178-164-108.52.3p.ntebredband.no) has quit (*.net *.split)
2016-09-22 11:37:08	<--	dinfuehr (~dinfuehr@188-23-146-172.adsl.highway.telekom.at) has quit (*.net *.split)
2016-09-22 11:37:08	<--	pa (~pa@unaffiliated/pa) has quit (*.net *.split)
2016-09-22 11:37:08	<--	Kirrahe (~kirrahe@ip51cc4257.adsl-surfen.hetnet.nl) has quit (*.net *.split)
2016-09-22 11:37:08	<--	TheVoid (~void@unaffiliated/thevoid) has quit (*.net *.split)
2016-09-22 11:37:08	<--	enk0 (~enk0@cpe-76-168-177-40.socal.res.rr.com) has quit (*.net *.split)
2016-09-22 11:37:09	<--	fprophet (~fprophet@209.99.209.7) has quit (*.net *.split)
2016-09-22 11:37:09	<--	aalex (~aalex@64.187.177.58) has quit (*.net *.split)
2016-09-22 11:37:09	<--	pixelate^ (~pixelate@139.0.123.187) has quit (*.net *.split)
2016-09-22 11:37:10	<--	ERROH (mama@unaffiliated/almathea) has quit (*.net *.split)
2016-09-22 11:37:11	<--	Phlow (~Kiss@199.44.8.162) has quit (*.net *.split)
2016-09-22 11:37:11	<--	daedric (~Thomas@62-210-211-7.rev.poneytelecom.eu) has quit (*.net *.split)
2016-09-22 11:37:11	<--	akolar (AH3e@gateway/shell/firrre/x-ybukykykfzkctaka) has quit (*.net *.split)
2016-09-22 11:37:11	<--	mrphantom (mrphantom@gateway/shell/kde/x-whifnbgyzykqcetg) has quit (*.net *.split)
2016-09-22 11:37:12	<--	Hobbyboy (Hobbyboy@gateway/shell/panicbnc/x-zzwupfnhmxsatzmf) has quit (*.net *.split)
2016-09-22 11:37:12	<--	stowelly (~stowelly@2a01:4f8:160:51eb::2) has quit (*.net *.split)
2016-09-22 11:37:12	<--	PFault (~PFault@2a01:4f8:130:14b3::2) has quit (*.net *.split)
2016-09-22 11:37:12	<--	hasanin (hasanin@gateway/shell/panicbnc/x-enbenczskzvivjaa) has quit (*.net *.split)
2016-09-22 11:37:12	<--	nemesit|znc (~nemesit@2a01:488:66:1000:5bfa:72aa:0:1) has quit (*.net *.split)
2016-09-22 11:37:12	<--	Guest22228 (~quassel@bulbasaur.sjorsgielen.nl) has quit (*.net *.split)
2016-09-22 11:37:12	<--	xcor (~xcor@2a02:c7d:c07:7f00:5dce:636a:ea27:b411) has quit (*.net *.split)
2016-09-22 11:37:13	<--	tuxdev (~tuxdev@unaffiliated/tuxdev) has quit (*.net *.split)
2016-09-22 11:37:13	<--	sfan786_ (sid143344@gateway/web/irccloud.com/x-wsfvulyouviozpfu) has quit (*.net *.split)
2016-09-22 11:37:13	<--	TommyC (~TommyC@unaffiliated/sepulchralbloom) has quit (*.net *.split)
2016-09-22 11:37:13	<--	swatti (~memory@194.88.49.178) has quit (*.net *.split)
2016-09-22 11:37:13	<--	bigpet (uid25664@gateway/web/irccloud.com/x-zvqozlsfyoogdkjk) has quit (*.net *.split)
2016-09-22 11:37:13	<--	mgaunard_ (~mgaunard@host-92-8-36-190.as43234.net) has quit (*.net *.split)
2016-09-22 11:37:14	<--	anonnumberanon (~anonnumbe@unaffiliated/anonnumberanon) has quit (*.net *.split)
2016-09-22 11:37:14	<--	Neo_ (~neo@opennic/Neo) has quit (*.net *.split)
2016-09-22 11:37:14	<--	hypera1r (~hyperair@ubuntu/member/hyperair) has quit (*.net *.split)
2016-09-22 11:37:14	<--	Affliction` (affliction@2600:3c01::13:ffff) has quit (*.net *.split)
2016-09-22 11:37:15	<--	asd5a (~asd5a@unaffiliated/asd6a) has quit (*.net *.split)
2016-09-22 11:37:15	<--	PotatoGim (sid99505@gateway/web/irccloud.com/x-yktxeaqhoimniisv) has quit (*.net *.split)
2016-09-22 11:37:15	<--	jhill (sid1055@gateway/web/irccloud.com/x-brmgoomckpivztou) has quit (*.net *.split)
2016-09-22 11:37:15	<--	barq (sid103986@gateway/web/irccloud.com/x-mppunmwimsnfxeza) has quit (*.net *.split)
2016-09-22 11:37:16	<--	Khudher (~K@khudher.rocks) has quit (*.net *.split)
2016-09-22 11:37:16	<--	yrter (~yrter@unaffiliated/yrter) has quit (*.net *.split)
2016-09-22 11:37:16	<--	Garibaldi (~adalton@cpe-98-26-67-154.nc.res.rr.com) has quit (*.net *.split)
2016-09-22 11:37:16	<--	nitrix (~nitrix@unaffiliated/nitrix) has quit (*.net *.split)
2016-09-22 11:37:16	<--	bazzy (~bazz@2604:a880:800:10::1605:3001) has quit (*.net *.split)
2016-09-22 11:37:16	<--	elsewho (~elsewho@gna.informatik.tu-freiberg.de) has quit (*.net *.split)
2016-09-22 11:37:16	<--	Croepha (~Croepha@maryannanddave.com) has quit (*.net *.split)
2016-09-22 11:37:17	<--	Raed (~Raed@68.66.82.128) has quit (*.net *.split)
2016-09-22 11:37:17	<--	jlyndon (sid10913@gateway/web/irccloud.com/x-gexwamfulgmqahwr) has quit (*.net *.split)
2016-09-22 11:37:17	<--	Moyst (~moyst@212-149-200-72.bb.dnainternet.fi) has quit (*.net *.split)
2016-09-22 11:37:17	<--	beaky (~beaky@2a03:b0c0:0:1010::123:5003) has quit (*.net *.split)
2016-09-22 11:37:17	<--	ciaranm (~ciaranm@paludis/shiny-hat-wearer/ciaranm) has quit (*.net *.split)
2016-09-22 11:37:18	<--	huhlig (sid17687@gateway/web/irccloud.com/x-iimtfpckumuwvkdp) has quit (*.net *.split)
2016-09-22 11:37:18	<--	trig-ger (sid11664@gateway/web/irccloud.com/x-npqygswyrkxnfosj) has quit (*.net *.split)
2016-09-22 11:37:18	<--	sephiap (sid14177@gateway/web/irccloud.com/x-spxvojjxlamfiuaa) has quit (*.net *.split)
2016-09-22 11:37:18	<--	MLM (sid38638@gateway/web/irccloud.com/x-pcvyrcgwhnwneqwt) has quit (*.net *.split)
2016-09-22 11:37:18	<--	lhtseng (sid15322@gateway/web/irccloud.com/x-erzmegzngwgbawla) has quit (*.net *.split)
2016-09-22 11:37:19	<--	Oxyd (~oxyd@pdpc/supporter/student/oxyd) has quit (*.net *.split)
2016-09-22 11:37:19	<--	bathtub_shark (Zarthus@trivialand/guesser/zarthus) has quit (*.net *.split)
2016-09-22 11:37:19	<--	tazle (tazle@kapsi.fi) has quit (*.net *.split)
2016-09-22 11:37:19	<--	kantokomi (~kantokomi@b088d.studby.ntnu.no) has quit (*.net *.split)
2016-09-22 11:37:19	<--	fahren (fahren@diabel.pl) has quit (*.net *.split)
2016-09-22 11:37:19	<--	Linus (~quassel@legatus.cloud.tilaa.com) has quit (*.net *.split)
2016-09-22 11:37:20	<--	hazardous (~hz@openvpn/user/hazardous) has quit (*.net *.split)
2016-09-22 11:37:20	<--	Apocalypse (~Apocalyps@unaffiliated/apocalypse) has quit (*.net *.split)
2016-09-22 11:37:20	<--	i__ron (zbuddy@25.ip-37-187-47.eu) has quit (*.net *.split)
2016-09-22 11:37:20	<--	jbit (~jbit@unaffiliated/jbit) has quit (*.net *.split)
2016-09-22 11:37:20	<--	SlashLife (~slashlife@botters/slashlife) has quit (*.net *.split)
2016-09-22 11:37:21	<--	d1zzy (~dizzy@unaffiliated/developer) has quit (*.net *.split)
2016-09-22 11:37:21	<--	ineb (~ineb@i5DB52285.pool.tripleplugandplay.com) has quit (*.net *.split)
2016-09-22 11:37:22	<--	dan64 (~dan64@dannyadam.com) has quit (*.net *.split)
2016-09-22 11:37:22	<--	electrostat (~dag@unaffiliated/electrostat) has quit (*.net *.split)
2016-09-22 11:37:22	<--	Ring0` (~mike@unaffiliated/ring0/x-8667941) has quit (*.net *.split)
2016-09-22 11:37:22	<--	s1dev (~s1dev@199.241.28.135) has quit (*.net *.split)
2016-09-22 11:37:22	<--	int0x27h (~int0x27h@unaffiliated/int0x27h) has quit (*.net *.split)
2016-09-22 11:37:23	<--	Jonno_FTW (~come@mail.oneworldled.com) has quit (*.net *.split)
2016-09-22 11:37:23	<--	Twey (~twey@unaffiliated/twey) has quit (*.net *.split)
2016-09-22 11:37:23	<--	pcarrier (pcarrier@unaffiliated/pcarrier) has quit (*.net *.split)
2016-09-22 11:37:23	<--	Afforess (~Afforess@afforess.com) has quit (*.net *.split)
2016-09-22 11:37:23	<--	tritao (sid143391@gateway/web/irccloud.com/x-wcyshzovxmfumjez) has quit (*.net *.split)
2016-09-22 11:37:23	<--	asgs (~ident@unaffiliated/l0pher) has quit (*.net *.split)
2016-09-22 11:37:24	<--	va (~filler@ares40.inai.de) has quit (*.net *.split)
2016-09-22 11:37:24	<--	mafrasi2_ (~quassel@2a01:4f8:130:6426::2) has quit (*.net *.split)
2016-09-22 11:37:24	<--	VolkA (~quassel@j236733.servers.jiffybox.net) has quit (*.net *.split)
2016-09-22 11:37:24	<--	PanicSkittle (~PanicSkit@unaffiliated/panicskittle) has quit (*.net *.split)
2016-09-22 11:37:25	<--	suexec (~suexec@2001:16d8:ee92:9afa:47d0:3070:4883:d95e) has quit (*.net *.split)
2016-09-22 11:37:25	<--	twainwek (~user@104.233.121.62) has quit (*.net *.split)
2016-09-22 11:37:25	<--	e (e@freenode/staff/spy.edk) has quit (*.net *.split)
2016-09-22 11:37:25	<--	lord4163 (~lord4163@90-230-158-145-no86.tbcn.telia.com) has quit (*.net *.split)
2016-09-22 11:37:25	<--	louiz (~louiz@ciboule.louiz.org) has quit (*.net *.split)
2016-09-22 11:37:25	<--	axiak_ (~axiak@ec2-54-173-225-235.compute-1.amazonaws.com) has quit (*.net *.split)
2016-09-22 11:37:25	<--	KrzaQ (~kq@var.krzaq.cc) has quit (*.net *.split)
2016-09-22 11:37:26	<--	xsdg (~xsdg@sipb-vm-99.mit.edu) has quit (*.net *.split)
2016-09-22 11:37:26	<--	eagleflo (~aku@163.172.137.34) has quit (*.net *.split)
2016-09-22 11:37:27	<--	tomaw (tom@freenode/staff/tomaw) has quit (*.net *.split)
2016-09-22 11:37:27	<--	Akkarin (~Akkarin@bnc.basinmc.org) has quit (*.net *.split)
2016-09-22 11:37:27	<--	sonOfRa (sonOfRa@btbn.de) has quit (*.net *.split)
2016-09-22 11:37:27	<--	SorcererX (~SorcererX@cm-84.212.210.160.getinternet.no) has quit (*.net *.split)
2016-09-22 11:37:27	<--	mitch0 (~mitch@62-165-210-190.pool.digikabel.hu) has quit (*.net *.split)
2016-09-22 11:37:27	<--	dau (matthias@ipv6.nebelfront.org) has quit (*.net *.split)
2016-09-22 11:37:27	<--	k^ (k@91.219.237.227) has quit (*.net *.split)
2016-09-22 11:37:27	<--	\f (~condy@unaffiliated/condy) has quit (*.net *.split)
2016-09-22 11:37:28	<--	oldrobot (~oldrobot@192.241.221.244) has quit (*.net *.split)
2016-09-22 11:37:28	<--	Ewomire (~Ender@192.95.25.150) has quit (*.net *.split)
2016-09-22 11:37:28	<--	kini (~kini@unaffiliated/kini) has quit (*.net *.split)
2016-09-22 11:37:28	<--	Latexi95 (latexi95@kapsi.fi) has quit (*.net *.split)
2016-09-22 11:37:28	<--	edran (~edran@znc.nardel.li) has quit (*.net *.split)
2016-09-22 11:37:28	<--	Hogofwar (~Daniel@irc.pont.in) has quit (*.net *.split)
2016-09-22 11:37:28	<--	trigen (~MSX@studiovideo.org) has quit (*.net *.split)
2016-09-22 11:37:28	<--	ionelmc (sid20175@python/site-packages/ionelmc) has quit (*.net *.split)
2016-09-22 11:37:28	<--	SanguineAnomaly (~Sanguine@tickle.compsoc.man.ac.uk) has quit (*.net *.split)
2016-09-22 11:37:29	<--	xxpor (~xxpor@ec2-54-191-92-16.us-west-2.compute.amazonaws.com) has quit (*.net *.split)
2016-09-22 11:37:29	<--	Factionwars (~Factionwa@ev0.nl) has quit (*.net *.split)
2016-09-22 11:37:29	<--	redpill (~redpill@unaffiliated/redpill) has quit (*.net *.split)
2016-09-22 11:37:29	<--	Serus (~Serus@unaffiliated/serus) has quit (*.net *.split)
2016-09-22 11:37:29	<--	GreenLantern (~quassel@80.240.131.213) has quit (*.net *.split)
2016-09-22 11:37:29	<--	badone (badone@nat/redhat/x-bclpxghjjlewlqbl) has quit (*.net *.split)
2016-09-22 11:37:29	<--	odinj (~odinj@178.62.200.221) has quit (*.net *.split)
2016-09-22 11:37:29	<--	Guest57709 (~Talisman@am2.eu.twdev.net) has quit (*.net *.split)
2016-09-22 11:37:29	<--	banandana (~banandana@107.170.201.163) has quit (*.net *.split)
2016-09-22 11:37:30	<--	jantje (~jan@mozzy.smets.cx) has quit (*.net *.split)
2016-09-22 11:37:30	<--	Particularized (~me@dolphin.sergnet.net) has quit (*.net *.split)
2016-09-22 11:37:30	<--	ekem (~monkey@helium.nk3r.com) has quit (*.net *.split)
2016-09-22 11:37:30	<--	Cyp_ (~Cyp_@x1-6-e8-94-f6-cd-57-25.cpe.webspeed.dk) has quit (*.net *.split)
2016-09-22 11:37:30	<--	thomas (~thomas@freenode/staff/thomas) has quit (*.net *.split)
2016-09-22 11:37:31	<--	Phibonacci (~quassel@151.80.175.201) has quit (*.net *.split)
2016-09-22 11:37:31	<--	ski (~ski@remote11.chalmers.se) has quit (*.net *.split)
2016-09-22 11:37:31	<--	aidecoe (~aidecoe@gentoo/developer/aidecoe) has quit (*.net *.split)
2016-09-22 11:37:31	<--	urlgrabber (~urlgrabbe@li1195-32.members.linode.com) has quit (*.net *.split)
2016-09-22 11:37:31	<--	spb (~stephen@freenode/staff/spb) has quit (*.net *.split)
2016-09-22 11:37:32	<--	btipling (~btipling@unaffiliated/sk/x-5968384) has quit (*.net *.split)
2016-09-22 11:37:32	<--	Marqin (~marqin@unaffiliated/marqin) has quit (*.net *.split)
2016-09-22 11:37:32	<--	zxq2 (p6Lx8IPCE9@unaffiliated/zxq2) has quit (*.net *.split)
2016-09-22 11:37:32	<--	SpaghettiCat (~Spaghetti@ks23645.kimsufi.com) has quit (*.net *.split)
2016-09-22 11:37:32	<--	rvncerr_ (~quassel@unaffiliated/rvncerr) has quit (*.net *.split)
2016-09-22 11:37:32	<--	Cubbi (~cubbi@ool-4577c7b6.dyn.optonline.net) has quit (*.net *.split)
2016-09-22 11:37:32	<--	zaltekk (~zaltekk@ec2-52-11-19-159.us-west-2.compute.amazonaws.com) has quit (*.net *.split)
2016-09-22 11:37:33	<--	evansbee (~evansbee@swimyote.com) has quit (*.net *.split)
2016-09-22 11:37:33	<--	MrC (Ben@mrbenc.net) has quit (*.net *.split)
2016-09-22 11:37:33	<--	tobbe (~zagabar@c213-89-112-5.bredband.comhem.se) has quit (*.net *.split)
2016-09-22 11:37:33	<--	Axton (~R@56343a86.rev.stofanet.dk) has quit (*.net *.split)
2016-09-22 11:37:33	<--	heinrich5991 (~hein5991@unaffiliated/heinrich5991) has quit (*.net *.split)
2016-09-22 11:37:33	<--	thor12022 (~thor12022@ec2-52-38-180-186.us-west-2.compute.amazonaws.com) has quit (*.net *.split)
2016-09-22 11:37:33	<--	placer14 (sid86639@gateway/web/irccloud.com/x-hhchebvqroxovbrn) has quit (*.net *.split)
2016-09-22 11:37:33	<--	Jengu (~Ande@ec2-54-255-130-255.ap-southeast-1.compute.amazonaws.com) has quit (*.net *.split)
2016-09-22 11:37:34	<--	qlkzy (~qlkzy@li559-28.members.linode.com) has quit (*.net *.split)
2016-09-22 11:37:34	<--	veverak (~squirrel@ip-89-102-104-133.net.upcbroadband.cz) has quit (*.net *.split)
2016-09-22 11:37:34	<--	TobiasFar (~tfar@new.ayena.de) has quit (*.net *.split)
2016-09-22 11:37:34	<--	sfix (~gtierney@unaffiliated/sfix) has quit (*.net *.split)
2016-09-22 11:37:34	<--	phantomcircuit (~phantomci@192.241.205.97) has quit (*.net *.split)
2016-09-22 11:37:34	<--	low-profile (~low-profi@unaffiliated/low-profile) has quit (*.net *.split)
2016-09-22 11:37:35	<--	SHODAN (~shozan@fsf/member/shodan) has quit (*.net *.split)
2016-09-22 11:37:35	<--	hexagoxel (~hexagoxel@p5B29A2A3.dip0.t-ipconnect.de) has quit (*.net *.split)
2016-09-22 11:37:35	<--	Nik05 (~Nik05@unaffiliated/nik05) has quit (*.net *.split)
2016-09-22 11:37:36	<--	mountaingoat (~mountaing@unaffiliated/mountaingoat) has quit (*.net *.split)
2016-09-22 11:37:36	<--	rhol (~rhol@devinschwab.com) has quit (*.net *.split)
2016-09-22 11:37:36	<--	ddboline (~quassel@pool-72-80-130-28.nycmny.fios.verizon.net) has quit (*.net *.split)
2016-09-22 11:37:36	<--	woggle (~charles@c-73-251-125-90.hsd1.va.comcast.net) has quit (*.net *.split)
2016-09-22 11:37:36	<--	mrallweather (~ben@sydney.techieman.net) has quit (*.net *.split)
2016-09-22 11:37:37	<--	ubsan (~ubsan@frozen.darkfox.id.au) has quit (*.net *.split)
2016-09-22 11:37:37	<--	Jidoor (~Jidoor@unaffiliated/chilley) has quit (*.net *.split)
2016-09-22 11:37:37	<--	Timbo (~tma@cpc102378-sgyl38-2-0-cust55.18-2.cable.virginm.net) has quit (*.net *.split)
2016-09-22 11:37:37	<--	amrx (~amrx@50-1-51-188.dsl.dynamic.fusionbroadband.com) has quit (*.net *.split)
2016-09-22 11:37:37	<--	tgy (~toogy@too.gy) has quit (*.net *.split)
2016-09-22 11:37:37	<--	Nach0z (~nach0z@unaffiliated/nach0z) has quit (*.net *.split)
2016-09-22 11:37:38	<--	bolt (r00t@unaffiliated/bolt) has quit (*.net *.split)
2016-09-22 11:37:38	<--	M-ou-se (~m-ou.se@m-ou.se) has quit (*.net *.split)
2016-09-22 11:37:38	<--	abra0 (moo@unaffiliated/abra0) has quit (*.net *.split)
2016-09-22 11:37:38	<--	Soap__ (~Soap__@gentoo/developer/soap) has quit (*.net *.split)
2016-09-22 11:37:38	<--	MissionCritical (~MissionCr@unaffiliated/missioncritical) has quit (*.net *.split)
2016-09-22 11:37:38	<--	Defcronyke (~Defcronyk@88.143.197.104.bc.googleusercontent.com) has quit (*.net *.split)
2016-09-22 11:37:38	<--	Biohazard (~Biohazard@osiris.stary2001.co.uk) has quit (*.net *.split)
2016-09-22 11:37:38	<--	naudiz (~naudiz@ki-omniarts.de) has quit (*.net *.split)
2016-09-22 11:37:39	<--	blank (~blank@unaffiliated/blank) has quit (*.net *.split)
2016-09-22 11:37:39	<--	ntx (~ntx@a91-154-49-177.elisa-laajakaista.fi) has quit (*.net *.split)
2016-09-22 11:37:39	<--	mniip (mniip@freenode/staff/mniip) has quit (*.net *.split)
2016-09-22 11:37:39	<--	kstar (~kstar@kde/asimha) has quit (*.net *.split)
2016-09-22 11:37:39	<--	metallisto (~metallist@buschmanuel.de) has quit (*.net *.split)
2016-09-22 11:37:39	<--	DustyDingo (~nonamen@atommuell.mum.jku.at) has quit (*.net *.split)
2016-09-22 11:37:39	<--	zamN (~zamn@unaffiliated/zamn) has quit (*.net *.split)
2016-09-22 11:37:39	<--	Luker (~Luker@codepedia.eu) has quit (*.net *.split)
2016-09-22 11:37:39	<--	ptx (~ptx@5.186.53.38) has quit (*.net *.split)
2016-09-22 11:37:39	<--	muep (~quassel@muep.iki.fi) has quit (*.net *.split)
2016-09-22 11:37:39	<--	jweinberg (~jweinberg@unaffiliated/jweinberg) has quit (*.net *.split)
2016-09-22 11:37:40	<--	thinlizzy (~bauruzinh@104.132.34.75) has quit (*.net *.split)
2016-09-22 11:37:40	<--	bumbar_ (~bumbar@unaffiliated/bumbar) has quit (*.net *.split)
2016-09-22 11:37:40	<--	tomalak (~lolphin@andromeda.lolphin.com) has quit (*.net *.split)
2016-09-22 11:37:40	<--	fschmitt (~fschmitt@ltw.loris.tv) has quit (*.net *.split)
2016-09-22 11:37:40	<--	z16 (~zed@ffxidb.com) has quit (*.net *.split)
2016-09-22 11:37:40	<--	Dreg (~Dreg@fr33project.org) has quit (*.net *.split)
2016-09-22 11:37:40	<--	stefandxm (~stefan@deusexmachinae.se) has quit (*.net *.split)
2016-09-22 11:37:40	<--	vishesh (~vishesh@hydrogen.twistedplane.com) has quit (*.net *.split)
2016-09-22 11:37:40	<--	gnoirzox (~gnoirzox@178.170.103.136) has quit (*.net *.split)
2016-09-22 11:37:40	<--	klys (~mdasoh@45.55.20.239) has quit (*.net *.split)
2016-09-22 11:37:40	<--	Soliton (~Soliton@wesnoth/developer/soliton) has quit (*.net *.split)
2016-09-22 11:37:40	<--	Jammerx2 (~Jammerx2@bnc.jammerx2.net) has quit (*.net *.split)
2016-09-22 11:37:40	<--	Xeshi (~root@46.101.237.93) has quit (*.net *.split)
2016-09-22 11:37:40	<--	Buzzer (~buzbnc@unaffiliated/buzzer) has quit (*.net *.split)
2016-09-22 11:37:41	<--	TMM (~hp@fsf/member/pdpc.professional.tmm) has quit (*.net *.split)
2016-09-22 11:37:41	<--	rorro (~rorro@176.10.248.234) has quit (*.net *.split)
2016-09-22 11:37:41	<--	Thorax (~Thorax@94.197.121.39.threembb.co.uk) has quit (*.net *.split)
2016-09-22 11:37:41	<--	sharazam (~sharazam@x4db07473.dyn.telefonica.de) has quit (*.net *.split)
2016-09-22 11:37:41	<--	plee (~kurt@89.10.219.180) has quit (*.net *.split)
2016-09-22 11:37:41	<--	Cppg (~Cppg@host109-149-152-50.range109-149.btcentralplus.com) has quit (*.net *.split)
2016-09-22 11:37:41	<--	symm- (~symm-@86.127.152.32) has quit (*.net *.split)
2016-09-22 11:37:41	<--	nealshire_ (~Nealshire@unaffiliated/nealshire) has quit (*.net *.split)
2016-09-22 11:37:41	<--	yong (~vayne@pD9E441EB.dip0.t-ipconnect.de) has quit (*.net *.split)
2016-09-22 11:37:41	<--	norcuron (~norcuron@178.33.54.251) has quit (*.net *.split)
2016-09-22 11:37:41	<--	kurahaupo (~kurahaupo@ppp121-44-230-180.bras2.syd2.internode.on.net) has quit (*.net *.split)
2016-09-22 11:37:42	<--	vicenteH (~user@96.235.15.37.dynamic.jazztel.es) has quit (*.net *.split)
2016-09-22 11:37:42	<--	zwoof (zwoof@modemcable076.238-20-96.mc.videotron.ca) has quit (*.net *.split)
2016-09-22 11:37:42	<--	Justinus (~Justinus@192.122.131.42) has quit (*.net *.split)
2016-09-22 11:37:42	<--	wget (~wget@unaffiliated/wget) has quit (*.net *.split)
2016-09-22 11:37:42	<--	kus_ubuntui686 (~kus@149.4.106.56) has quit (*.net *.split)
2016-09-22 11:37:42	<--	uboot_ (~moon@x4dbac248.dyn.telefonica.de) has quit (*.net *.split)
2016-09-22 11:37:42	<--	Burgundy (~burgundy@86.121.178.118) has quit (*.net *.split)
2016-09-22 11:37:42	<--	cylon512 (~i_cylon51@nat2-nj02.vmpanel.net) has quit (*.net *.split)
2016-09-22 11:37:42	<--	Antichrist[m] (antichrist@gateway/shell/matrix.org/x-sawbfpsmbrwbwkad) has quit (*.net *.split)
2016-09-22 11:37:43	<--	sze (~sze@unaffiliated/sze) has quit (*.net *.split)
2016-09-22 11:37:43	<--	sphenxes02 (~sphenxes@192.164.150.155) has quit (*.net *.split)
2016-09-22 11:37:43	<--	dropaty (irssi@g71034.upc-g.chello.nl) has quit (*.net *.split)
2016-09-22 11:37:44	<--	akshaydixi (~akshaydix@14.140.69.161) has quit (*.net *.split)
2016-09-22 11:37:44	<--	smspillaz (smspillaz@motsugo.ucc.gu.uwa.edu.au) has quit (*.net *.split)
2016-09-22 11:37:44	<--	crusty (~unknown@unaffiliated/amt) has quit (*.net *.split)
2016-09-22 11:37:44	<--	Anodyne (~Anodyne@unaffiliated/anodyne) has quit (*.net *.split)
2016-09-22 11:37:44	<--	reidel (~jleh@173.254.238.161) has quit (*.net *.split)
2016-09-22 11:37:44	<--	plitter (~plitter@66.209.202.84.customer.cdi.no) has quit (*.net *.split)
2016-09-22 11:37:44	<--	salamanderrake (~quassel@v-216-52-148-169.unman-vds.premium-chicago.nfoservers.com) has quit (*.net *.split)
2016-09-22 11:37:44	<--	nacitar (~nacitar@unaffiliated/nacitar) has quit (*.net *.split)
2016-09-22 11:37:45	<--	ElectricSheep (~esheep_zn@c-71-225-69-61.hsd1.pa.comcast.net) has quit (*.net *.split)
2016-09-22 11:37:45	<--	softmetz (yGOv1KCAUb@menkent.uberspace.de) has quit (*.net *.split)
2016-09-22 11:37:45	<--	blb (~b@unaffiliated/bryno) has quit (*.net *.split)
2016-09-22 11:37:45	<--	kszatan2 (~kszatan@91.241.2.251) has quit (*.net *.split)
2016-09-22 11:37:45	<--	zedsdeadbaby (~null@fyodor.krmz.ovh) has quit (*.net *.split)
2016-09-22 11:37:45	<--	k1000 (~k1000@55.ip-198-50-149.net) has quit (*.net *.split)
2016-09-22 11:37:45	<--	pippijn (~pippijn@unixcorps/staff/pippijn) has quit (*.net *.split)
2016-09-22 11:37:45	<--	betheynyx (~b@45.63.97.181) has quit (*.net *.split)
2016-09-22 11:37:46	<--	jinie (~jimmy@vile.thoughtcrime.dk) has quit (*.net *.split)
2016-09-22 11:37:46	<--	kst (~user@infopath-2-old.ucsd.edu) has quit (*.net *.split)
2016-09-22 11:37:46	<--	jkhsjdhjs (jkhsjdhjs@unaffiliated/jkhsjdhjs) has quit (*.net *.split)
2016-09-22 11:37:46	<--	kuplatupsu (tonttu@baburuboburu.hyperkuutio.fi) has quit (*.net *.split)
2016-09-22 11:37:46	<--	Kasreyn (~i@unaffiliated/inquisitor) has quit (*.net *.split)
2016-09-22 11:37:47	<--	psionic (aleksah@shell.metropolia.fi) has quit (*.net *.split)
2016-09-22 11:37:47	<--	Starfire (~starfire@kekkonen.niksula.hut.fi) has quit (*.net *.split)
2016-09-22 11:37:47	<--	coon (coon@gateway/shell/c-base/x-ahzavogdulpefjjb) has quit (*.net *.split)
2016-09-22 11:37:47	<--	donwilliam (~donwillia@188.228.46.39) has quit (*.net *.split)
2016-09-22 11:37:47	<--	starius (~starius@static.107.229.47.78.clients.your-server.de) has quit (*.net *.split)
2016-09-22 11:37:47	<--	chaiomanot (~chaiomano@unaffiliated/chaiomanot) has quit (*.net *.split)
2016-09-22 11:37:47	<--	reda (~reda@unaffiliated/reda) has quit (*.net *.split)
2016-09-22 11:37:47	<--	drabard (systemd-ti@213.5.210.87) has quit (*.net *.split)
2016-09-22 11:37:47	<--	Deaod (~deaod@deaod.de) has quit (*.net *.split)
2016-09-22 11:37:47	<--	introom (~introom@unaffiliated/introom) has quit (*.net *.split)
2016-09-22 11:37:48	<--	elnormous (~elnormous@87.110.129.37) has quit (*.net *.split)
2016-09-22 11:37:48	<--	josh_ (~josh@168.103.191.142) has quit (*.net *.split)
2016-09-22 11:37:48	<--	HerzogDeXtEr (~farci@89.246.162.36) has quit (*.net *.split)
2016-09-22 11:37:48	<--	gegagome (~gegagome@206.83.5.2) has quit (*.net *.split)
2016-09-22 11:37:48	<--	phinxy (~tehhhd@unaffiliated/phinxy) has quit (*.net *.split)
2016-09-22 11:37:48	<--	cmedeiros (~cmedeiros@200.186.50.162) has quit (*.net *.split)
2016-09-22 11:37:48	<--	tristans1 (~tristanse@128.194.3.4) has quit (*.net *.split)
2016-09-22 11:37:48	<--	armyriad (~armyriad@gateway/vpn/privateinternetaccess/armyriad) has quit (*.net *.split)
2016-09-22 11:37:49	<--	Sculptor (~Sculptor@trivialand/master/sculptor) has quit (*.net *.split)
2016-09-22 11:37:49	<--	Albori (~Albori@64-15-83-167.fidnet.com) has quit (*.net *.split)
2016-09-22 11:37:49	<--	Jiggunjer_ (~Jiggunjer@unaffiliated/jiggunjer) has quit (*.net *.split)
2016-09-22 11:37:49	<--	Henke37 (~Henrik@81-227-16-59-no133.bredband.skanova.com) has quit (*.net *.split)
2016-09-22 11:37:49	<--	CoolBreeze (~CoolBreez@87-228-34.netrunf.cytanet.com.cy) has quit (*.net *.split)
2016-09-22 11:37:49	<--	velco (~chill@vlan-185-78-38-153.comnet.bg) has quit (*.net *.split)
2016-09-22 11:37:49	<--	Munnu (~timo@91-158-145-247.elisa-laajakaista.fi) has quit (*.net *.split)
2016-09-22 11:37:49	<--	nopf (~frosch@felderundfiguren.de) has quit (*.net *.split)
2016-09-22 11:37:49	<--	Aph3x-WL (~Aph3x@shellie.darchoods.net) has quit (*.net *.split)
2016-09-22 11:37:49	<--	karakedi (~eAC53C340@unaffiliated/orphan) has quit (*.net *.split)
2016-09-22 11:37:49	<--	jmnk (jargonmonk@gateway/shell/blinkenshell.org/x-slxftateroumxuwx) has quit (*.net *.split)
2016-09-22 11:37:49	<--	Chais (~Chais@unaffiliated/chais) has quit (*.net *.split)
2016-09-22 11:37:49	<--	akaWolf (~akaWolf@unaffiliated/akawolf) has quit (*.net *.split)
2016-09-22 11:37:50	<--	fooobarrr (~fooobarrr@unaffiliated/fooobarrr) has quit (*.net *.split)
2016-09-22 11:37:50	<--	Thorn (~Thorn@unaffiliated/thorn) has quit (*.net *.split)
2016-09-22 11:37:50	<--	coffee` (~coffee@169.ip-176-31-165.eu) has quit (*.net *.split)
2016-09-22 11:37:50	<--	SenpaiSilver (~SenpaiSil@ns3269120.ip-5-39-82.eu) has quit (*.net *.split)
2016-09-22 11:37:50	<--	trfl (~im@62.210.82.123) has quit (*.net *.split)
2016-09-22 11:37:51	<--	obihann_ (~jhann@156.34.9.72) has quit (*.net *.split)
2016-09-22 11:37:51	<--	urdh (~urdh@unaffiliated/urdh) has quit (*.net *.split)
2016-09-22 11:37:51	<--	wyre (wyre@gateway/shell/xshellz/x-brurjezjevftzhfu) has quit (*.net *.split)
2016-09-22 11:37:51	<--	obiwahn (~obiwahn@pdpc/supporter/student/obiwahn) has quit (*.net *.split)
2016-09-22 11:37:51	<--	Besk (~besk@51.254.51.96) has quit (*.net *.split)
2016-09-22 11:37:51	<--	richardwhiuk (~richardwh@scarlet.richardwhiuk.com) has quit (*.net *.split)
2016-09-22 11:37:51	<--	UukGoblin (~jaa@unaffiliated/uukgoblin) has quit (*.net *.split)
2016-09-22 11:37:51	<--	tapout (~tapout@unaffiliated/tapout) has quit (*.net *.split)
2016-09-22 11:37:52	<--	kloeri (~kloeri@freenode/staff/exherbo.kloeri) has quit (*.net *.split)
2016-09-22 11:37:52	<--	apt-get (~apt-get@ns397007.ip-94-23-211.eu) has quit (*.net *.split)
2016-09-22 11:37:53	<--	dw (~dmw@unaffiliated/dw) has quit (*.net *.split)
2016-09-22 11:37:53	<--	Neuron1k (~Neuron1k@156.ip-164-132-42.eu) has quit (*.net *.split)
2016-09-22 11:37:53	<--	octal_ (~octal@5.39.62.246) has quit (*.net *.split)
2016-09-22 11:37:53	<--	nwkj86 (~nwkj86@144.66.6.51.dyn.plus.net) has quit (*.net *.split)
2016-09-22 11:37:53	<--	sh00p (~sh00p@84.216.39.31) has quit (*.net *.split)
2016-09-22 11:37:54	<--	ph88_ (~h88@145.131.171.178) has quit (*.net *.split)
2016-09-22 11:37:54	<--	decimad (~deci@ip5f5be505.dynamic.kabel-deutschland.de) has quit (*.net *.split)
2016-09-22 11:37:54	<--	RedOrangeZ (~RedOrange@c-73-30-227-113.hsd1.pa.comcast.net) has quit (*.net *.split)
2016-09-22 11:37:54	<--	McNozes (~McNozes@bl6-226-245.dsl.telepac.pt) has quit (*.net *.split)
2016-09-22 11:37:54	<--	darthdeus (~darthdeus@146.185.169.128) has quit (*.net *.split)
2016-09-22 11:37:54	<--	watersoul (~ircuser@172.245.255.61) has quit (*.net *.split)
2016-09-22 11:37:54	<--	f3r70rr35f (~fernando@186.36.52.35) has quit (*.net *.split)
2016-09-22 11:37:54	<--	unK_ (~drunK@78.8.105.174) has quit (*.net *.split)
2016-09-22 11:37:54	<--	xkpe (~xkpe@212.250.200.210) has quit (*.net *.split)
2016-09-22 11:37:54	<--	wno (~foo@kekkonen.niksula.hut.fi) has quit (*.net *.split)
2016-09-22 11:37:55	<--	de-facto (~de-facto@unaffiliated/de-facto) has quit (*.net *.split)
2016-09-22 11:37:55	<--	et (~et@soohrt.org) has quit (*.net *.split)
2016-09-22 11:37:55	<--	ExeciN (~nicexe@bnc.stormbit.net) has quit (*.net *.split)
2016-09-22 11:37:56	<--	athend (~athend@199.43.186.25) has quit (*.net *.split)
2016-09-22 11:37:56	<--	Narwhaal (~quassel@188.166.150.103) has quit (*.net *.split)
2016-09-22 11:37:56	<--	Rabbit_ (~Rabbit@ec2-52-41-150-102.us-west-2.compute.amazonaws.com) has quit (*.net *.split)
2016-09-22 11:37:57	<--	cYmen (~quassel@squint.a-oben.org) has quit (*.net *.split)
2016-09-22 11:37:57	<--	DollyDuplex (~chatterbo@81.169.150.203) has quit (*.net *.split)
2016-09-22 11:37:57	<--	yan (~user@162.243.0.148) has quit (*.net *.split)
2016-09-22 11:37:57	<--	neuri8 (~neur@62.109.134.112) has quit (*.net *.split)
2016-09-22 11:37:57	<--	jokleinn1 (jokleinn@unaffiliated/jokleinn) has quit (*.net *.split)
2016-09-22 11:37:57	<--	AtnNn (~atnnn@circus.atnnn.com) has quit (*.net *.split)
2016-09-22 11:37:57	<--	Skruff (Elite15320@gateway/shell/elitebnc/x-ahsqoccsnmoowbti) has quit (*.net *.split)
2016-09-22 11:37:58	<--	Dslegends (~Dslegends@blk-215-99-131.eastlink.ca) has quit (*.net *.split)
2016-09-22 11:37:58	<--	Daxwax (~Daxwax@218.155.9.46.customer.cdi.no) has quit (*.net *.split)
2016-09-22 11:37:58	<--	mwehner (~martin@li910-8.members.linode.com) has quit (*.net *.split)
2016-09-22 11:37:58	<--	wondiws (~Jasper@5ED7DF59.cm-7-8d.dynamic.ziggo.nl) has quit (*.net *.split)
2016-09-22 11:37:58	<--	bmf1_ (~bmf1@216.252.64.158) has quit (*.net *.split)
2016-09-22 11:37:59	<--	phlym (~phlym@185.21.217.10) has quit (*.net *.split)
2016-09-22 11:37:59	<--	FabTG (~ftg@142.ip-37-59-108.eu) has quit (*.net *.split)
2016-09-22 11:37:59	<--	Mercury (~warp@c-24-56-193-55.customer.broadstripe.net) has quit (*.net *.split)
2016-09-22 11:37:59	<--	lukky513 (~lukky513@149.202.58.111) has quit (*.net *.split)
2016-09-22 11:37:59	<--	mic_e (~quassel@ipbcc36896.dynamic.kabel-deutschland.de) has quit (*.net *.split)
2016-09-22 11:37:59	<--	abracadaniel (~abracadan@130.185.134.250) has quit (*.net *.split)
2016-09-22 11:37:59	<--	rhythmx_ (~sean@nsfw.jp) has quit (*.net *.split)
2016-09-22 11:37:59	<--	adrian17 (~adrian17@thehyper.space) has quit (*.net *.split)
2016-09-22 11:37:59	<--	tafryn (~tafryn@c-73-254-147-88.hsd1.wa.comcast.net) has quit (*.net *.split)
2016-09-22 11:37:59	<--	dindinx (~dindinx@unaffiliated/dindinx) has quit (*.net *.split)
2016-09-22 11:37:59	<--	salan28 (~quassel@188.166.156.134) has quit (*.net *.split)
2016-09-22 11:38:00	<--	Seifer (~Seifer@221.83-213-226.dynamic.clientes.euskaltel.es) has quit (*.net *.split)
2016-09-22 11:38:01	<--	nwoki (~quassel@unaffiliated/nwoki) has quit (*.net *.split)
2016-09-22 11:38:01	<--	Shayanjm (~Shayanjm@shayanmohanty.com) has quit (*.net *.split)
2016-09-22 11:38:01	<--	mikroflops (~yogurt@178.174.137.46) has quit (*.net *.split)
2016-09-22 11:38:01	<--	DeadSix27 (~deadsix@unaffiliated/deadsix17) has quit (*.net *.split)
2016-09-22 11:38:01	<--	thegameg (~thegameg@39.ip-51-254-35.eu) has quit (*.net *.split)
2016-09-22 11:38:01	<--	eXeC64 (~eXeC64@exec64.co.uk) has quit (*.net *.split)
2016-09-22 11:38:01	<--	offs3tzer0 (~offs3tzer@85.92-220-180.customer.lyse.net) has quit (*.net *.split)
2016-09-22 11:38:01	<--	zagura (~mzagorsk@student.agh.edu.pl) has quit (*.net *.split)
2016-09-22 11:38:01	<--	cbreak (~cbreak@77-58-73-149.dclient.hispeed.ch) has quit (*.net *.split)
2016-09-22 11:38:02	<--	edman007 (~edman007@pdpc/supporter/active/edman007) has quit (*.net *.split)
2016-09-22 11:38:02	<--	devcoffee (~devcoffee@j236733.servers.jiffybox.net) has quit (*.net *.split)
2016-09-22 11:38:02	<--	dafull97 (~dafull97@unaffiliated/dafull97) has quit (*.net *.split)
2016-09-22 11:38:02	<--	Spark (~dcunnin@186.83.59.108.bc.googleusercontent.com) has quit (*.net *.split)
2016-09-22 11:38:02	<--	freanux (~freanux@unaffiliated/freanux) has quit (*.net *.split)
2016-09-22 11:38:02	<--	darka (~darka@178.62.108.202) has quit (*.net *.split)
2016-09-22 11:38:03	<--	wjf (~wjf@ec2-52-2-41-150.compute-1.amazonaws.com) has quit (*.net *.split)
2016-09-22 11:38:04	<--	Orphis (~orphis@adam.orphis.net) has quit (*.net *.split)
2016-09-22 11:38:04	<--	Hummer12007 (~Hummer120@46.101.222.236) has quit (*.net *.split)
2016-09-22 11:38:04	<--	Amun_Ra (~amun-ra@retro.rocks) has quit (*.net *.split)
2016-09-22 11:38:05	<--	Circuitsoft (4b92a52b@gateway/web/freenode/ip.75.146.165.43) has quit (*.net *.split)
2016-09-22 11:38:05	<--	Lenore (b84a0f22@gateway/web/freenode/ip.184.74.15.34) has quit (*.net *.split)
2016-09-22 11:38:05	<--	ignatiz- (50c1d51a@gateway/web/freenode/ip.80.193.213.26) has quit (*.net *.split)
2016-09-22 11:38:05	<--	anotherguy (2ec5b8ed@gateway/web/freenode/ip.46.197.184.237) has quit (*.net *.split)
2016-09-22 11:38:05	<--	silent_freak (672b7061@gateway/web/freenode/ip.103.43.112.97) has quit (*.net *.split)
2016-09-22 11:38:05	<--	k_sze[work] (daff8506@gateway/web/freenode/ip.218.255.133.6) has quit (*.net *.split)
2016-09-22 11:38:05	<--	xCrypto (~xCrypto@drmons0544w-142177154202.dhcp-dynamic.FibreOp.ns.bellaliant.net) has quit (*.net *.split)
2016-09-22 11:38:05	<--	MulleDK19 (MulleDK19@unaffiliated/mulledk19) has quit (*.net *.split)
2016-09-22 11:38:05	<--	Azusa762 (~roy@2a02:8084:2ac1:ef00:f279:59ff:fe17:ce37) has quit (*.net *.split)
2016-09-22 11:38:06	<--	xaxxon (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has quit (*.net *.split)
2016-09-22 11:38:06	<--	fstd (~fstd@unaffiliated/fisted) has quit (*.net *.split)
2016-09-22 11:38:06	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (*.net *.split)
2016-09-22 11:38:06	<--	pheenx (~pheenx@2a02:8071:b68a:1c00:225:22ff:fee7:7dc5) has quit (*.net *.split)
2016-09-22 11:38:06	<--	V-ille (~ville@81-175-149-170.bb.dnainternet.fi) has quit (*.net *.split)
2016-09-22 11:38:06	<--	Enhex (~Enhex@82.252.138.77.rev.sfr.net) has quit (*.net *.split)
2016-09-22 11:38:06	<--	nilof (~saolof@92-32-80-134.tn.glocalnet.net) has quit (*.net *.split)
2016-09-22 11:38:07	<--	navidr (uid112413@gateway/web/irccloud.com/x-qtqotkbxmthrysut) has quit (*.net *.split)
2016-09-22 11:38:07	<--	bmohan (~bmohan@host86-176-67-69.range86-176.btcentralplus.com) has quit (*.net *.split)
2016-09-22 11:38:07	<--	BaneAliens (uid112512@gateway/web/irccloud.com/x-cqflgjtnvztcsaro) has quit (*.net *.split)
2016-09-22 11:38:07	<--	Adva (~Hyrule@2a02:810a:12c0:5068:2d74:d88:1085:6ed8) has quit (*.net *.split)
2016-09-22 11:38:07	<--	meandrain (~meandrain@89.39.95.149) has quit (*.net *.split)
2016-09-22 11:38:07	<--	Nilesh_ (uid116340@gateway/web/irccloud.com/x-dxoijapoyltjvyjp) has quit (*.net *.split)
2016-09-22 11:38:07	<--	sarbs (~sarbs@2601:600:9001:69f0:dd9:58c8:7c0b:6266) has quit (*.net *.split)
2016-09-22 11:38:07	<--	GenteelBen (~GenteelBe@cpc70133-lutn12-2-0-cust324.9-3.cable.virginm.net) has quit (*.net *.split)
2016-09-22 11:38:07	<--	CEnnis91 (uid3543@gateway/web/irccloud.com/x-ecarwkfmaotvasxl) has quit (*.net *.split)
2016-09-22 11:38:07	<--	hosified (~hosified@unaffiliated/hosified) has quit (*.net *.split)
2016-09-22 11:38:08	<--	Domx (~Domx@ppp59-167-222-112.qld.adsl.internode.on.net) has quit (*.net *.split)
2016-09-22 11:38:08	<--	robogoat (~robogoat@163.172.136.88) has quit (*.net *.split)
2016-09-22 11:38:08	<--	carado (~carado@bea44-1-78-193-226-57.fbxo.proxad.net) has quit (*.net *.split)
2016-09-22 11:38:08	<--	LightYagami (~CanIHazMe@unaffiliated/canihazmemecats) has quit (*.net *.split)
2016-09-22 11:38:08	<--	wilx (wilx@27.228.broadband3.iol.cz) has quit (*.net *.split)
2016-09-22 11:38:08	<--	ptx0 (~cheesus_c@unaffiliated/ptx0) has quit (*.net *.split)
2016-09-22 11:38:08	<--	dpower (uid103540@gateway/web/irccloud.com/x-obllgxhhrxlfvcpy) has quit (*.net *.split)
2016-09-22 11:38:08	<--	Diyar (~Diyar@unaffiliated/diyar) has quit (*.net *.split)
2016-09-22 11:38:09	<--	disgusting[m] (disgusting@gateway/shell/matrix.org/x-kxtjjspbgibnbmdq) has quit (*.net *.split)
2016-09-22 11:38:09	<--	Feren^IRCCloud (sid180023@gateway/web/irccloud.com/x-zvzpxttcrkbtyjjt) has quit (*.net *.split)
2016-09-22 11:38:09	<--	bushido_ (~bushido@unaffiliated/bursihido) has quit (*.net *.split)
2016-09-22 11:38:09	<--	unreal (~unreal@unaffiliated/unreal) has quit (*.net *.split)
2016-09-22 11:38:10	<--	noexcept (~noexcept@2a03:b0c0:3:d0::33:9001) has quit (*.net *.split)
2016-09-22 11:38:10	<--	oldtopman (~oldtopman@unaffiliated/oldtopman) has quit (*.net *.split)
2016-09-22 11:38:10	<--	oftc_ftw (~oftc_ftw@unaffiliated/oftc-ftw/x-3443471) has quit (*.net *.split)
2016-09-22 11:38:10	<--	simius (~simius@unaffiliated/simius) has quit (*.net *.split)
2016-09-22 11:38:10	<--	rmunoz (~ricardo@217.124.142.50) has quit (*.net *.split)
2016-09-22 11:38:10	<--	Hansformer (hans@lagit.in) has quit (*.net *.split)
2016-09-22 11:38:10	<--	alamar (alamar@2a02:180:a:1:1::110) has quit (*.net *.split)
2016-09-22 11:38:10	<--	Polymorphism (~Astoundin@unaffiliated/polymorphism) has quit (*.net *.split)
2016-09-22 11:38:11	<--	Kaini (~quassel@unaffiliated/kaini) has quit (*.net *.split)
2016-09-22 11:38:11	<--	fluter (~fluter@fedora/fluter) has quit (*.net *.split)
2016-09-22 11:38:11	<--	KiNgMaR (~ingmar@cake.irsoft.de) has quit (*.net *.split)
2016-09-22 11:38:11	<--	Guest98158 (skarn@gateway/shell/firrre/x-jbgypusomgjgvzwy) has quit (*.net *.split)
2016-09-22 11:38:11	<--	Hellosun_ (~Hellosun@moon.cse.yzu.edu.tw) has quit (*.net *.split)
2016-09-22 11:38:12	<--	froggey (~froggey@unaffiliated/froggey) has quit (*.net *.split)
2016-09-22 11:38:12	<--	om3n (~jakub@wloch.co) has quit (*.net *.split)
2016-09-22 11:38:12	<--	As4xk (~as4xk@unaffiliated/as4xk) has quit (*.net *.split)
2016-09-22 11:38:12	<--	kazakuri (~kazakuri@shinjiru.me) has quit (*.net *.split)
2016-09-22 11:38:12	<--	xupicor (xupicor@shell.bshellz.net) has quit (*.net *.split)
2016-09-22 11:38:13	<--	tortal (tortal@unaffiliated/tortal) has quit (*.net *.split)
2016-09-22 11:38:13	<--	gravitron (~gravity@unaffiliated/gravitron) has quit (*.net *.split)
2016-09-22 11:38:13	<--	bosma (sid103570@gateway/web/irccloud.com/x-vltxtswxwakqeivh) has quit (*.net *.split)
2016-09-22 11:38:13	<--	megaTherion (~therion@unix.io) has quit (*.net *.split)
2016-09-22 11:38:14	<--	^9 (imr@gateway/shell/elitebnc/x-pycvvkzzluattnee) has quit (*.net *.split)
2016-09-22 11:38:14	<--	osse (~osse@zsh/user/osse) has quit (*.net *.split)
2016-09-22 11:38:14	<--	joel135 (sid136450@gateway/web/irccloud.com/x-spbeckhwnrkqahpr) has quit (*.net *.split)
2016-09-22 11:38:15	<--	termos (sid18647@gateway/web/irccloud.com/x-mhreqlmjvjejwlnn) has quit (*.net *.split)
2016-09-22 11:38:15	<--	spr0tsuki (sid14108@gateway/web/irccloud.com/x-uvtrmfsvpipoafpm) has quit (*.net *.split)
2016-09-22 11:38:15	<--	Meeh (~meeeeeeh@meeh.sigterm.no) has quit (*.net *.split)
2016-09-22 11:38:15	<--	HeTo (henkka@battery.modeemi.fi) has quit (*.net *.split)
2016-09-22 11:38:16	<--	Hellosun (sid103121@gateway/web/irccloud.com/x-uwqznxybixezeukz) has quit (*.net *.split)
2016-09-22 11:38:16	<--	FMJaguar (sid127157@gateway/web/irccloud.com/x-uzovyaojplqeuoaa) has quit (*.net *.split)
2016-09-22 11:38:16	<--	rfw (sid22696@gateway/web/irccloud.com/x-bqnqdwqymidfffnv) has quit (*.net *.split)
2016-09-22 11:38:17	<--	CARAM__ (sid27279@gateway/web/irccloud.com/x-lyptlchxfbeaibnk) has quit (*.net *.split)
2016-09-22 11:38:17	<--	jhasse (jhasse@2a03:b0c0:3:d0::7:4009) has quit (*.net *.split)
2016-09-22 11:38:17	<--	mads- (~mfrstar@eridanus.whatbox.ca) has quit (*.net *.split)
2016-09-22 11:38:17	<--	theanalyst (theanalyst@gateway/shell/firrre/x-yrtdzepdbdkfpvpp) has quit (*.net *.split)
2016-09-22 11:38:17	<--	brolaf (~brolaf@46.246.44.75) has quit (*.net *.split)
2016-09-22 11:38:17	<--	Vulcano (~freenode@90.149.84.164) has quit (*.net *.split)
2016-09-22 11:38:18	<--	Leovale (~Leovale@45.72.141.66) has quit (*.net *.split)
2016-09-22 11:38:18	<--	stfn (~stfn@unaffiliated/stfn) has quit (*.net *.split)
2016-09-22 11:38:18	<--	feliwir (Elite16673@gateway/shell/elitebnc/x-tpvfutvwrihddxvd) has quit (*.net *.split)
2016-09-22 11:38:19	<--	pwcjr (~pwcjr@pool-74-96-89-148.washdc.fios.verizon.net) has quit (*.net *.split)
2016-09-22 11:38:19	<--	CuriousErnestBro (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has quit (*.net *.split)
2016-09-22 11:38:19	<--	Praise (~Fat@unaffiliated/praise) has quit (*.net *.split)
2016-09-22 11:38:19	<--	roygbiv (~JohnRambo@pdpc/supporter/active/roygbiv) has quit (*.net *.split)
2016-09-22 11:38:19	<--	alexmh (~alex@c-67-166-124-41.hsd1.ut.comcast.net) has quit (*.net *.split)
2016-09-22 11:38:19	<--	Karyon (~yaaic@unaffiliated/karyon) has quit (*.net *.split)
2016-09-22 11:38:19	<--	vitimiti (~vitimiti@unaffiliated/vitimiti) has quit (*.net *.split)
2016-09-22 11:38:20	<--	lyindArk (~jzeiger@mail.talpidae.net) has quit (*.net *.split)
2016-09-22 11:38:20	<--	casscode (~bru@169-1-129-208.ip.afrihost.co.za) has quit (*.net *.split)
2016-09-22 11:38:20	<--	cbdev (~fnord@hieristdas.internetzuen.de) has quit (*.net *.split)
2016-09-22 11:38:20	<--	tompaw (~tompaw@tompaw.xxx) has quit (*.net *.split)
2016-09-22 11:38:20	<--	avtolstoy (~avtolstoy@gateway/vpn/privateinternetaccess/avtolstoy) has quit (*.net *.split)
2016-09-22 11:38:20	<--	Green (uid722@gateway/web/irccloud.com/x-dhnsbvhrnoiiixeq) has quit (*.net *.split)
2016-09-22 11:38:21	<--	MK (~MK@2602:252:d6e:a9b0:3c29:2096:5719:b76b) has quit (*.net *.split)
2016-09-22 11:38:21	<--	happy-dude (uid62780@gateway/web/irccloud.com/x-jfjyvfginuffwgmr) has quit (*.net *.split)
2016-09-22 11:38:21	<--	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has quit (*.net *.split)
2016-09-22 11:38:21	<--	jrolland-work (~jeff@155.92.176.224) has quit (*.net *.split)
2016-09-22 11:38:21	<--	Felgar (Felgar@pool-173-68-11-27.nycmny.fios.verizon.net) has quit (*.net *.split)
2016-09-22 11:38:21	<--	cpt-oblivious (~quassel@freebsd/user/cpt-oblivious) has quit (*.net *.split)
2016-09-22 11:38:21	<--	chasmo77 (~chas77@158.183-62-69.ftth.swbr.surewest.net) has quit (*.net *.split)
2016-09-22 11:38:22	<--	mcan (~m@unaffiliated/mrcan) has quit (*.net *.split)
2016-09-22 11:38:22	<--	justinabrahms (~justinabr@107.170.208.252) has quit (*.net *.split)
2016-09-22 11:38:22	<--	DogHackit_ (~quassel@2605:e000:1117:8043:ba27:ebff:fedb:ba9f) has quit (*.net *.split)
2016-09-22 11:38:22	<--	owa (~over@poisoned.dns.ug) has quit (*.net *.split)
2016-09-22 11:38:22	<--	Sausage (sausage@tehsausage.com) has quit (*.net *.split)
2016-09-22 11:38:22	<--	mehdi__ (sid15567@gateway/web/irccloud.com/x-rkpewmuxccapcawd) has quit (*.net *.split)
2016-09-22 11:38:22	<--	Olipro (~Olipro@uncyclopedia/pdpc.21for7.olipro) has quit (*.net *.split)
2016-09-22 11:38:22	<--	wallen (~wallen@2a04:1980:3100:1aac:e61d:2dff:feb1:7871) has quit (*.net *.split)
2016-09-22 11:38:23	<--	heatmis3r (sid112556@gateway/web/irccloud.com/x-kashyxvctwxoqykh) has quit (*.net *.split)
2016-09-22 11:38:23	<--	drizbit (~drizbit@128.199.183.1) has quit (*.net *.split)
2016-09-22 11:38:23	<--	archheretic (~archheret@cm-84.213.214.158.getinternet.no) has quit (*.net *.split)
2016-09-22 11:38:23	<--	coius (~coeus@ipservice-092-209-111-144.092.209.pools.vodafone-ip.de) has quit (*.net *.split)
2016-09-22 11:38:23	<--	Atrumx (~Atrumx@unaffiliated/fivedeltasix) has quit (*.net *.split)
2016-09-22 11:38:23	<--	soda1 (~soda@CPE00fc8d87a563-CM00fc8d87a560.cpe.net.cable.rogers.com) has quit (*.net *.split)
2016-09-22 11:38:23	<--	opios (~op10s@unaffiliated/opios) has quit (*.net *.split)
2016-09-22 11:38:23	<--	dexter0 (~dexter0@2601:647:4502:8c00:8538:865d:fd19:cc5) has quit (*.net *.split)
2016-09-22 11:38:24	<--	veep (uid186209@gateway/web/irccloud.com/x-ivyyqiuuuwhhqynz) has quit (*.net *.split)
2016-09-22 11:38:24	<--	alem0lars (alem0lars@0xcc.alem0lars.me) has quit (*.net *.split)
2016-09-22 11:38:24	<--	Smx (Elite8556@gateway/shell/elitebnc/x-ziwjrrsizkahtoco) has quit (*.net *.split)
2016-09-22 11:38:24	<--	GDiaX (Elite17712@gateway/shell/elitebnc/x-hvaxhkarjiulbnen) has quit (*.net *.split)
2016-09-22 11:38:24	<--	Bengi (sid73530@gateway/web/irccloud.com/x-lkoqcgdumwgdghwp) has quit (*.net *.split)
2016-09-22 11:38:24	<--	neunon (~neunon@unaffiliated/neunon) has quit (*.net *.split)
2016-09-22 11:38:24	<--	tax (~tax@cpe-72-182-55-97.austin.res.rr.com) has quit (*.net *.split)
2016-09-22 11:38:24	<--	Defaultti (defaultti@lakka.kapsi.fi) has quit (*.net *.split)
2016-09-22 11:38:24	<--	seg_violation (w718ELFbq5@2a00:d0c0:200:0:b9:1a:9c36:340) has quit (*.net *.split)
2016-09-22 11:38:25	<--	tharuin (sid159926@gateway/web/irccloud.com/x-qpnwrgqdpesqxmkz) has quit (*.net *.split)
2016-09-22 11:38:25	<--	GGMethos (methos@2600:3c00::f03c:91ff:fea8:426e) has quit (*.net *.split)
2016-09-22 11:38:25	<--	aca20031 (~aca@2607:5300:60:4768::1) has quit (*.net *.split)
2016-09-22 11:38:25	<--	god (dtscode@freenode/weird-exception/bartender/learnprogramming.nchambers) has quit (*.net *.split)
2016-09-22 11:38:25	<--	Vbitz (Vbitz@2600:3c00::f03c:91ff:feae:7a98) has quit (*.net *.split)
2016-09-22 11:38:25	<--	Globalirc (~Globalirc@2607:5300:100:200::1053) has quit (*.net *.split)
2016-09-22 11:38:25	<--	Phanes (Phanes@unaffiliated/phanes) has quit (*.net *.split)
2016-09-22 11:38:25	<--	Nitori- (~quassel@2601:7c0:c201:cbce:cf03:4448:da12:e3a6) has quit (*.net *.split)
2016-09-22 11:38:25	<--	Xjs|moonshine (moon@chrysostomos.aoide.de) has quit (*.net *.split)
2016-09-22 11:38:25	<--	Amadiro (jonathri@dalvik.ping.uio.no) has quit (*.net *.split)
2016-09-22 11:38:26	<--	stomper_ (~stomper_@ool-45751986.dyn.optonline.net) has quit (*.net *.split)
2016-09-22 11:38:26	<--	fintler (~fintler@unaffiliated/fintler) has quit (*.net *.split)
2016-09-22 11:38:26	<--	d_himro (~none@178.124.154.80) has quit (*.net *.split)
2016-09-22 11:38:26	<--	iik (~IIK@staticline-31-183-46-69.toya.net.pl) has quit (*.net *.split)
2016-09-22 11:38:26	<--	gelignite (~gelignite@x4db60b2a.dyn.telefonica.de) has quit (*.net *.split)
2016-09-22 11:38:26	<--	illerucis (~illerucis@2620:10d:c091:200::9:3361) has quit (*.net *.split)
2016-09-22 11:38:27	<--	snakefoil (~snakefoil@unaffiliated/snakefoil) has quit (*.net *.split)
2016-09-22 11:38:27	<--	imMute (~immute@about/networking/240.255.255.0/imMute) has quit (*.net *.split)
2016-09-22 11:38:27	<--	kimundi (~Kimundi@p4FE2FDD6.dip0.t-ipconnect.de) has quit (*.net *.split)
2016-09-22 11:38:27	<--	googol (~matthew@192.81.130.185) has quit (*.net *.split)
2016-09-22 11:38:27	<--	UnlikeSuika_mobi (~UnlikeSui@115.93.122.107) has quit (*.net *.split)
2016-09-22 11:38:27	<--	tuuket (tuuket@varis.damicon.fi) has quit (*.net *.split)
2016-09-22 11:38:27	<--	dv- (~dv@unaffiliated/dv-) has quit (*.net *.split)
2016-09-22 11:38:27	<--	Cabanossi (~Cabanossi@p5DD7BA7F.dip0.t-ipconnect.de) has quit (*.net *.split)
2016-09-22 11:38:28	<--	djcb (~user@85-76-16-54-nat.elisa-mobile.fi) has quit (*.net *.split)
2016-09-22 11:38:28	<--	chachasmooth (~chachasmo@unaffiliated/chachasmooth) has quit (*.net *.split)
2016-09-22 11:38:28	<--	tminus36 (~tminus36@pdpc/supporter/student/tminus36) has quit (*.net *.split)
2016-09-22 11:38:28	<--	PlasmaStar (Plasma@unaffiliated/plasmastar) has quit (*.net *.split)
2016-09-22 11:38:28	<--	heiner (~heiner@ipservice-092-209-143-031.092.209.pools.vodafone-ip.de) has quit (*.net *.split)
2016-09-22 11:38:28	<--	det (~chris@unaffiliated/det) has quit (*.net *.split)
2016-09-22 11:38:28	<--	Galik (~galik@unaffiliated/galik) has quit (*.net *.split)
2016-09-22 11:38:28	<--	justanotheruser (~justanoth@unaffiliated/justanotheruser) has quit (*.net *.split)
2016-09-22 11:38:28	<--	cd80 (~bf3@gateway/vpn/privateinternetaccess/emul16) has quit (*.net *.split)
2016-09-22 11:38:28	<--	Jesin (~Jesin@pool-108-28-56-201.washdc.fios.verizon.net) has quit (*.net *.split)
2016-09-22 11:38:29	<--	BustyLoli-Chan (~BustyLoli@2601:680:c201:cd2:7cdb:8cec:4aaf:411a) has quit (*.net *.split)
2016-09-22 11:38:29	<--	thadtheman (~tlophd@adsl-99-140-184-6.dsl.chcgil.sbcglobal.net) has quit (*.net *.split)
2016-09-22 11:38:29	<--	AndyDD (~AndyD@host-78-144-137-134.as13285.net) has quit (*.net *.split)
2016-09-22 11:38:29	<--	Brando753-o_O_o (~Brando753@63.143.51.198) has quit (*.net *.split)
2016-09-22 11:38:29	<--	bipul (~bipul7@linuxpadawan/padawan/bipul) has quit (*.net *.split)
2016-09-22 11:38:29	<--	nullfxn (~nullFxn@107-147-108-164.res.bhn.net) has quit (*.net *.split)
2016-09-22 11:38:29	<--	CtrlC (~CtrlC@unaffiliated/ctrlc) has quit (*.net *.split)
2016-09-22 11:38:29	<--	roentgen (~roentgen@unaffiliated/roentgen) has quit (*.net *.split)
2016-09-22 11:38:30	<--	neurodrone_ (~neurodron@unaffiliated/neurodrone) has quit (*.net *.split)
2016-09-22 11:38:30	<--	cysm (cysm@unaffiliated/paracyst) has quit (*.net *.split)
2016-09-22 11:38:30	<--	rsully (~rsully@unaffiliated/rsully) has quit (*.net *.split)
2016-09-22 11:38:30	<--	oberstein (~ober@2605:6400:20:748::ddee:deee) has quit (*.net *.split)
2016-09-22 11:38:30	<--	Pilum (~JKM@vps-85.201.170.217.stwvps.net) has quit (*.net *.split)
2016-09-22 11:38:31	<--	CrypticSquared (~CrypticS_@unaffiliated/crypticsquared) has quit (*.net *.split)
2016-09-22 11:38:31	<--	Synergiance (syn@lsv1.synerfiles.info) has quit (*.net *.split)
2016-09-22 11:38:31	<--	kasper93 (kasper93@unaffiliated/kasper93) has quit (*.net *.split)
2016-09-22 11:38:31	<--	coincoin169 (~coincoin1@193.55.29.209) has quit (*.net *.split)
2016-09-22 11:38:31	<--	yeltzooo (~yeltzooo@162.243.110.169) has quit (*.net *.split)
2016-09-22 11:38:31	<--	liseburne (~morgan@tolstoy.deptadapt.org) has quit (*.net *.split)
2016-09-22 11:38:31	<--	aurialLoop (~aurialLoo@60.234.120.196) has quit (*.net *.split)
2016-09-22 11:38:32	<--	Awesomecase (sid56584@gateway/web/irccloud.com/x-hcmrsqoybryezqjv) has quit (*.net *.split)
2016-09-22 11:38:32	<--	JackMc (sid85402@gateway/web/irccloud.com/x-skrnewwcmrfgssds) has quit (*.net *.split)
2016-09-22 11:38:32	<--	pulkit (uid186196@gateway/web/irccloud.com/x-tdrpqrbhhaussmyl) has quit (*.net *.split)
2016-09-22 11:38:32	<--	tcsc (~sid721@2620:101:8016:74::5:2d1) has quit (*.net *.split)
2016-09-22 11:38:32	<--	roflin (~dennis@alexstrasza.kassala.de) has quit (*.net *.split)
2016-09-22 11:38:32	<--	mad_enz (~mad_enz@CPE00508b114c3e-CM00fc8d50aef0.cpe.net.fido.ca) has quit (*.net *.split)
2016-09-22 11:38:33	<--	hgboron37 (~hgboron37@71.89.138.162) has quit (*.net *.split)
2016-09-22 11:38:33	<--	Gentle (~tier@quassel/contributors/gentle) has quit (*.net *.split)
2016-09-22 11:38:33	<--	de-vri-es (~maarten@irc.de-vri.es) has quit (*.net *.split)
2016-09-22 11:38:33	<--	voldyman (uid11639@gateway/web/irccloud.com/x-vockfbngfasuejlx) has quit (*.net *.split)
2016-09-22 11:38:33	<--	jcloud (sid40911@gateway/web/irccloud.com/x-tlirvkbsemeeguzx) has quit (*.net *.split)
2016-09-22 11:38:33	<--	tjpeden (sid42254@gateway/web/irccloud.com/x-uvktplcqpjfhljqd) has quit (*.net *.split)
2016-09-22 11:38:34	<--	eip` (sid27234@gateway/web/irccloud.com/x-pgmpewdvmvfskumx) has quit (*.net *.split)
2016-09-22 11:38:34	<--	CustosLimen (~CustosLim@unaffiliated/cust0slim3n) has quit (*.net *.split)
2016-09-22 11:38:34	<--	bone (~bone@unaffiliated/bone) has quit (*.net *.split)
2016-09-22 11:38:34	<--	TheSchaf (~Schaf@2a01:4f8:c17:1d52::2) has quit (*.net *.split)
2016-09-22 11:38:35	<--	lexxxx (lex@hattara.com) has quit (*.net *.split)
2016-09-22 11:38:35	<--	lecx (lex@yuuh.pw) has quit (*.net *.split)
2016-09-22 11:38:35	<--	Jupelius (jupelius@xen.ihme.org) has quit (*.net *.split)
2016-09-22 11:38:35	<--	kamilla (kamilla@kamillaproductions.com) has quit (*.net *.split)
2016-09-22 11:38:35	<--	belz (~mikael@isocpp.fi) has quit (*.net *.split)
2016-09-22 11:38:35	<--	pticochon (~smith@unaffiliated/pticochon) has quit (*.net *.split)
2016-09-22 11:38:35	<--	araml (~araml@unaffiliated/araml) has quit (*.net *.split)
2016-09-22 11:38:36	<--	blackwind_123 (~IceChat9@117.192.140.9) has quit (*.net *.split)
2016-09-22 11:38:36	<--	bjz (~bjz@14-201-215-168.tpgi.com.au) has quit (*.net *.split)
2016-09-22 11:38:36	<--	scs (~joseph@82.20.74.94) has quit (*.net *.split)
2016-09-22 11:38:36	<--	tachoknight_ (~tachoknig@c-73-246-129-13.hsd1.il.comcast.net) has quit (*.net *.split)
2016-09-22 11:38:36	<--	KindOne (kindone@freenude/topless/kindone) has quit (*.net *.split)
2016-09-22 11:38:37	<--	GrayArea (kvirc@178.208.173.11) has quit (*.net *.split)
2016-09-22 11:38:37	<--	bazrush (~bazrush@149.152.238.178.in-addr.arpa) has quit (*.net *.split)
2016-09-22 11:38:37	<--	sigtrm (quassel@quassel.woboq.de) has quit (*.net *.split)
2016-09-22 11:38:37	<--	di0_ (~di0_@unaffiliated/di0-/x-5053590) has quit (*.net *.split)
2016-09-22 11:38:37	<--	a3Dman (~3Dman@unaffiliated/a3dman) has quit (*.net *.split)
2016-09-22 11:38:37	<--	ejnahc (~hello@chan.je) has quit (*.net *.split)
2016-09-22 11:38:37	<--	tesuji (~tesuji@unaffiliated/tesuji) has quit (*.net *.split)
2016-09-22 11:38:37	<--	Minnozz (~minnozz@sanna.minnozz.com) has quit (*.net *.split)
2016-09-22 11:38:38	<--	lakin (~lakin@d108-173-185-33.abhsia.telus.net) has quit (*.net *.split)
2016-09-22 11:38:38	<--	przemkovv (~przemkovv@gandalf.kari.put.poznan.pl) has quit (*.net *.split)
2016-09-22 11:38:38	<--	turtlehat (~ouaei@5CEC365.rev.sefiber.dk) has quit (*.net *.split)
2016-09-22 11:38:38	<--	krizoek (~krizoek@vmi24145.contabo.host) has quit (*.net *.split)
2016-09-22 11:38:39	<--	jrolland-home (~jeff@cpe-75-86-41-3.wi.res.rr.com) has quit (*.net *.split)
2016-09-22 11:38:39	<--	altyr (~nobody@unaffiliated/altyr) has quit (*.net *.split)
2016-09-22 11:38:39	<--	geordi (~geordi@v.eelis.net) has quit (*.net *.split)
2016-09-22 11:38:39	<--	knittl (~knittl@unaffiliated/knittl) has quit (*.net *.split)
2016-09-22 11:38:39	<--	ppf (~pfaffe@i41pc78.ipd.uni-karlsruhe.de) has quit (*.net *.split)
2016-09-22 11:38:39	<--	PlasmaHH (~plasmahh@213.61.9.75) has quit (*.net *.split)
2016-09-22 11:38:40	<--	TheScholar (~randomman@ool-44c16ddc.dyn.optonline.net) has quit (*.net *.split)
2016-09-22 11:38:40		[11:38]
2016-09-22 11:38:40	<--	Vir (~mkretz@kde/mkretz) has quit (*.net *.split)
2016-09-22 11:38:40	<--	catern (~catern@catern.com) has quit (*.net *.split)
2016-09-22 11:38:40	<--	dflurker (~dimon@metaportal.ru) has quit (*.net *.split)
2016-09-22 11:38:40	<--	chewyDelicious (~nooblet@124.197.62.6) has quit (*.net *.split)
2016-09-22 11:38:40	<--	flebron (~flebron@li247-56.members.linode.com) has quit (*.net *.split)
2016-09-22 11:38:40	<--	edwinjarvis (~oldschool@unaffiliated/edwinjarvis) has quit (*.net *.split)
2016-09-22 11:38:40	<--	tabakhase (tabakhase@unaffiliated/tabakhase) has quit (*.net *.split)
2016-09-22 11:38:40	<--	DarthMeow (~aviator@hmm.wantstofly.org) has quit (*.net *.split)
2016-09-22 11:38:41	<--	mIGu (mig21@87.248.86.218) has quit (*.net *.split)
2016-09-22 11:38:41	<--	LetoThe2nd (~jd@unaffiliated/letothe2nd) has quit (*.net *.split)
2016-09-22 11:38:41	<--	Chris (sid107964@spy/chris) has quit (*.net *.split)
2016-09-22 11:38:41	<--	Smirnov (~Smirnov@about/csharp/ms/clrjit/smirnov) has quit (*.net *.split)
2016-09-22 11:38:41	<--	olesku (~oles@185.56.185.82) has quit (*.net *.split)
2016-09-22 11:38:42	<--	jumbers (~jumbers@fsf/member/jumbers) has quit (*.net *.split)
2016-09-22 11:38:42	<--	cliluw (~cliluw@unaffiliated/cliluw) has quit (*.net *.split)
2016-09-22 11:38:42	<--	bkboggy (~bkboggy@cpe-172-250-147-60.socal.res.rr.com) has quit (*.net *.split)
2016-09-22 11:38:42	<--	gist (~jack@p57907422.dip0.t-ipconnect.de) has quit (*.net *.split)
2016-09-22 11:38:43	<--	yazdmich (~yazdmich@bytes.coffee) has quit (*.net *.split)
2016-09-22 11:38:43	<--	peterhu (~peterhuen@segfault.guru) has quit (*.net *.split)
2016-09-22 11:38:43	<--	przemkovv-bis (~przemkovv@d83-37.icpnet.pl) has quit (*.net *.split)
2016-09-22 11:38:43	<--	Vuks (~Vuks@unaffiliated/vuks69) has quit (*.net *.split)
2016-09-22 11:38:43	<--	mukunda (mukunda@c-71-205-185-63.hsd1.co.comcast.net) has quit (*.net *.split)
2016-09-22 11:38:43	<--	Kn|t3 (~agarwalvi@49.207.53.8) has quit (*.net *.split)
2016-09-22 11:38:43	<--	Gathis (~TheBlack@unaffiliated/gathis) has quit (*.net *.split)
2016-09-22 11:38:43	<--	lloda (~user@213-193-80-99.static.cablecom.ch) has quit (*.net *.split)
2016-09-22 11:38:44	<--	olly_c (~Thunderbi@pmpc1318.nerc-pml.ac.uk) has quit (*.net *.split)
2016-09-22 11:38:44	<--	ashkan (~ashkan@unaffiliated/askywalker/x-0000002) has quit (*.net *.split)
2016-09-22 11:38:44	<--	TzilTzal (~yaron@mail.acronis.com.sg) has quit (*.net *.split)
2016-09-22 11:38:44	<--	lh_not_bot (~lh_bot@114.215.147.2) has quit (*.net *.split)
2016-09-22 11:38:44	<--	Veltas (~veltas@static.117.33.251.148.clients.your-server.de) has quit (*.net *.split)
2016-09-22 11:38:44	<--	matiu (~matiu@unaffiliated/matiu) has quit (*.net *.split)
2016-09-22 11:38:44	<--	mackal (~mike@pool-96-237-144-12.bstnma.fios.verizon.net) has quit (*.net *.split)
2016-09-22 11:38:44	<--	xissburg (~xissburg@unaffiliated/xissburg) has quit (*.net *.split)
2016-09-22 11:38:45	<--	diod (~diod@unaffiliated/diod) has quit (*.net *.split)
2016-09-22 11:38:45	<--	Jonbo (~Jonbo123@24-179-42-178.dhcp.leds.al.charter.com) has quit (*.net *.split)
2016-09-22 11:38:45	<--	Chestal (~thilo@vmax.unix-ag.uni-siegen.de) has quit (*.net *.split)
2016-09-22 11:38:45	<--	huntercool (~huntercoo@104.143.15.63) has quit (*.net *.split)
2016-09-22 11:38:45	<--	itari (~itari@176.96.64.113) has quit (*.net *.split)
2016-09-22 11:38:45	<--	robink (~quassel@unaffilated/robink) has quit (*.net *.split)
2016-09-22 11:38:45	<--	navid (~navid@unaffiliated/navid) has quit (*.net *.split)
2016-09-22 11:38:46	<--	qis (~qis@ip-178-200-100-75.hsi07.unitymediagroup.de) has quit (*.net *.split)
2016-09-22 11:38:46	<--	Jokler (~Jokler@46.101.144.183) has quit (*.net *.split)
2016-09-22 11:38:46	<--	pragma- (~chaos@unaffiliated/pragmatic-chaos) has quit (*.net *.split)
2016-09-22 11:38:46	<--	filcab (~irc@unaffiliated/filcab) has quit (*.net *.split)
2016-09-22 11:38:46	<--	patteh (~patteh@unaffiliated/patteh) has quit (*.net *.split)
2016-09-22 11:38:46	<--	Pyrus (~pyrus@unaffiliated/pyrus) has quit (*.net *.split)
2016-09-22 11:38:47	<--	ec\ (~me@ell.io) has quit (*.net *.split)
2016-09-22 11:38:47	<--	SM0TVI (~sm0tvi@unaffiliated/sm0tvi) has quit (*.net *.split)
2016-09-22 11:38:47	<--	Drathnix (~Drathnix@unaffiliated/drathnix) has quit (*.net *.split)
2016-09-22 11:38:47	<--	tctara (~quassel@128.199.61.169) has quit (*.net *.split)
2016-09-22 11:38:48	<--	orbitz (~orbitz@37.153.108.22) has quit (*.net *.split)
2016-09-22 11:38:48	<--	sujeet (sujeet@unaffiliated/freeboson) has quit (*.net *.split)
2016-09-22 11:38:48	<--	Stryyker (stryyker16@about/windows/staff/stryyker) has quit (*.net *.split)
2016-09-22 11:38:48	<--	Cathy (~Cathy@unaffiliated/cathy) has quit (*.net *.split)
2016-09-22 11:38:48	<--	chrisf (~chrisf@hamb.in) has quit (*.net *.split)
2016-09-22 11:38:48	<--	AustinIncognito (~AustinMat@li1047-129.members.linode.com) has quit (*.net *.split)
2016-09-22 11:38:48	<--	64MAAW279 (twingo@otitsun.oulu.fi) has quit (*.net *.split)
2016-09-22 11:38:48	<--	D9 (~Ron@104.236.71.143) has quit (*.net *.split)
2016-09-22 11:38:48	<--	Kido_SoraKi (kido@unic0rn.eu) has quit (*.net *.split)
2016-09-22 11:38:48	<--	Kronuz (~Kronuz@unaffiliated/kronuz) has quit (*.net *.split)
2016-09-22 11:38:48	<--	karalaine (~karalaine@unaffiliated/karalaine) has quit (*.net *.split)
2016-09-22 11:38:48	<--	GaveUp (gaveup@gaveup.net) has quit (*.net *.split)
2016-09-22 11:38:49	<--	dyreshark (~george@138.68.21.213) has quit (*.net *.split)
2016-09-22 11:38:49	<--	thesquib (~thesquib@squib.co.nz) has quit (*.net *.split)
2016-09-22 11:38:49	<--	catbeard (~lol@unaffiliated/walp) has quit (*.net *.split)
2016-09-22 11:38:50	<--	Taz|ZzZ (Tazen@gateway/shell/xzibition.com/x-jpmxdehohtmsuppe) has quit (*.net *.split)
2016-09-22 11:38:50	<--	primepie (~primepie@irc.primepie.com) has quit (*.net *.split)
2016-09-22 11:38:51	<--	harrow (~harrow@68.ip-149-56-14.net) has quit (*.net *.split)
2016-09-22 11:38:51	<--	Kage (~kage@unaffiliated/kage) has quit (*.net *.split)
2016-09-22 11:38:51	<--	yonatankoren (~yonatanko@ec2-52-32-209-141.us-west-2.compute.amazonaws.com) has quit (*.net *.split)
2016-09-22 11:38:51	<--	APic (apic@apic.name) has quit (*.net *.split)
2016-09-22 11:38:51	<--	noizex (~noizex@solitary.ninja) has quit (*.net *.split)
2016-09-22 11:38:51	<--	master007 (~master007@unaffiliated/master007) has quit (*.net *.split)
2016-09-22 11:38:51	<--	dostoyevsky (~sck@n096h062.rs.de.inter.net) has quit (*.net *.split)
2016-09-22 11:38:51	<--	holdsworth (~quassel@unaffiliated/holdsworth) has quit (*.net *.split)
2016-09-22 11:38:51	<--	Infamous (znc@185.38.14.119) has quit (*.net *.split)
2016-09-22 11:38:52	<--	Zharf (~eclipser@xmms2/developer/Eclipser) has quit (*.net *.split)
2016-09-22 11:38:52	<--	mnunberg (~mnunberg@71.9.102.60) has quit (*.net *.split)
2016-09-22 11:38:52	<--	SwiftMatt (~Objective@209.107.210.95) has quit (*.net *.split)
2016-09-22 11:38:53	<--	quickbrownfox (~henrique_@177.131.178.138) has quit (*.net *.split)
2016-09-22 11:38:53	<--	biglama (~Day_dream@ram31-1-82-234-77-18.fbx.proxad.net) has quit (*.net *.split)
2016-09-22 11:38:53	<--	Markow (~Markow@176.122.215.103) has quit (*.net *.split)
2016-09-22 11:38:53	<--	re1 (~reiser@178.220.4.176) has quit (*.net *.split)
2016-09-22 11:38:53	<--	zacts (~zacts@dragora/developer/zacts) has quit (*.net *.split)
2016-09-22 11:38:53	<--	vesim (~vesim@var.vesim.xyz) has quit (*.net *.split)
2016-09-22 11:38:53	<--	kuahara (~kuahara@196-21.201-68.bham.res.rr.com) has quit (*.net *.split)
2016-09-22 11:38:53	<--	logan_e_ (uid164592@gateway/web/irccloud.com/x-xfmhdoqxdyzrgyyq) has quit (*.net *.split)
2016-09-22 11:38:54	<--	UnlikeSuika (~UnlikeSui@115.93.122.107) has quit (*.net *.split)
2016-09-22 11:38:54	<--	snowkidind (~textual@pool-96-255-207-158.washdc.fios.verizon.net) has quit (*.net *.split)
2016-09-22 11:38:54	<--	iterati (~vangelis@79.103.112.83.dsl.dyn.forthnet.gr) has quit (*.net *.split)
2016-09-22 11:38:54	<--	verm1n (~verm1n@209-6-236-59.c3-0.wrx-ubr1.sbo-wrx.ma.cable.rcn.com) has quit (*.net *.split)
2016-09-22 11:38:54	<--	biberu (~biberu@c-cf2d72d5.08-441-7570702.cust.bredbandsbolaget.se) has quit (*.net *.split)
2016-09-22 11:38:54	<--	NeoGeo64 (~linux@2604:2d80:881a:0:b4a3:be16:d6fd:8559) has quit (*.net *.split)
2016-09-22 11:38:54	<--	ScorpionJack (~Scorpion@unaffiliated/scorpionjack) has quit (*.net *.split)
2016-09-22 11:38:55	<--	yo5phz (~yo5phz___@83.103.155.5) has quit (*.net *.split)
2016-09-22 11:38:55	<--	genpaku (~genpaku@107.191.100.185) has quit (*.net *.split)
2016-09-22 11:38:55	<--	drazil (~drazil@45.55.234.212) has quit (*.net *.split)
2016-09-22 11:38:55	<--	dv__ (~quassel@62.178.118.86) has quit (*.net *.split)
2016-09-22 11:38:55	<--	cjwelborn (cjwelborn@unaffiliated/cjwelborn) has quit (*.net *.split)
2016-09-22 11:38:56	<--	Aster (~Aster@april-fools/2013/ninth/aster) has quit (*.net *.split)
2016-09-22 11:38:56	<--	somaReverse (~amos@2400:dd01:1022:30:6af7:28ff:fe78:6901) has quit (*.net *.split)
2016-09-22 11:38:56	<--	bitonic (sid61915@gateway/web/irccloud.com/x-umxlmhftdstbpdpa) has quit (*.net *.split)
2016-09-22 11:38:56	<--	Malkrith (uid186536@gateway/web/irccloud.com/x-nmszkumvqboopzbc) has quit (*.net *.split)
2016-09-22 11:38:56	<--	strtok (~strtok@thales.strtok.net) has quit (*.net *.split)
2016-09-22 11:38:56	<--	wayne (~wayne@unaffiliated/wayne) has quit (*.net *.split)
2016-09-22 11:38:57	<--	String (~String@24.42.188.104) has quit (*.net *.split)
2016-09-22 11:38:57	<--	nghtshd (zagnut@2001:558:6011:43:1a:4db8:5f34:9c4e) has quit (*.net *.split)
2016-09-22 11:38:57	<--	flux (flux@coffee.modeemi.fi) has quit (*.net *.split)
2016-09-22 11:38:57	<--	segy (~segfault@pdpc/supporter/active/segy) has quit (*.net *.split)
2016-09-22 11:38:57	<--	Taywee (~taylor@www.axfive.net) has quit (*.net *.split)
2016-09-22 11:38:57	<--	Codaraxis (~Codaraxis@ip72-197-12-110.sd.sd.cox.net) has quit (*.net *.split)
2016-09-22 11:38:57	<--	Lord_of_Life (Elite12246@gateway/shell/elitebnc/x-vxsgkmdvkdommozn) has quit (*.net *.split)
2016-09-22 11:38:58	<--	tsjost (tsjost@2a01:7e00::f03c:91ff:fe56:f03c) has quit (*.net *.split)
2016-09-22 11:38:58	<--	nate (NBishop@pdpc/supporter/monthlybronze/synapt) has quit (*.net *.split)
2016-09-22 11:38:58	<--	italoacasas (sid172107@gateway/web/irccloud.com/x-zfpwlqdecbqzblws) has quit (*.net *.split)
2016-09-22 11:38:58	<--	Adam01 (~Adam01@2607:5300:60:b84::1) has quit (*.net *.split)
2016-09-22 11:38:58	<--	KNERD (~KNERD@2604:a880:1:20::9b:4001) has quit (*.net *.split)
2016-09-22 11:38:58	<--	^v (~v^@me.pxtst.com) has quit (*.net *.split)
2016-09-22 11:38:58	<--	jonasschnelli (~jonasschn@unaffiliated/jonasschnelli) has quit (*.net *.split)
2016-09-22 11:38:58	<--	Kamuela (sid111576@gateway/web/irccloud.com/x-hujlqqogispskglp) has quit (*.net *.split)
2016-09-22 11:38:58	<--	i7c (cmw@unaffiliated/i7c) has quit (*.net *.split)
2016-09-22 11:38:58	<--	teotwaki (~teotwaki@Maemo/community/contributor/crashanddie) has quit (*.net *.split)
2016-09-22 11:38:59	<--	Svitkona (Elite16564@gateway/shell/elitebnc/x-avooveyzvrmvusmb) has quit (*.net *.split)
2016-09-22 11:38:59	<--	blinky42 (~quassel@jabber.blinkylight.net) has quit (*.net *.split)
2016-09-22 11:38:59	<--	jzl (~jzl@2602:ffb6:2:0:f816:3eff:fe4e:915b) has quit (*.net *.split)
2016-09-22 11:38:59	<--	nurupo (~nurupo.ga@unaffiliated/nurupo) has quit (*.net *.split)
2016-09-22 11:38:59	<--	whiteline (~whiteline@unaffiliated/whiteline) has quit (*.net *.split)
2016-09-22 11:38:59	<--	YP-Cloud__ (sid130155@gateway/web/irccloud.com/x-oxgxxhzjuqftpvpb) has quit (*.net *.split)
2016-09-22 11:39:00	<--	potatoe (~potatoe@unaffiliated/potatoe5) has quit (*.net *.split)
2016-09-22 11:39:00	<--	unforgiven512 (~unforgive@freebsd-dev.unforgivendevelopment.com) has quit (*.net *.split)
2016-09-22 11:39:00	<--	Matsv (~Matsv@i.am.matsv.nl) has quit (*.net *.split)
2016-09-22 11:39:00	<--	kubrat (scoopio@shrek.bogda.co.uk) has quit (*.net *.split)
2016-09-22 11:39:00	<--	Dessimat0r (~Dessimat0@demio.us) has quit (*.net *.split)
2016-09-22 11:39:00	<--	bmcorser (sid18416@gateway/web/irccloud.com/x-cqkvtjsxnlqpjnzf) has quit (*.net *.split)
2016-09-22 11:39:00	<--	reem (sid78397@gateway/web/irccloud.com/x-uriwbxhapvvnleex) has quit (*.net *.split)
2016-09-22 11:39:00	<--	kilimanjaro (sid113699@gateway/web/irccloud.com/x-yegwexhuixacodee) has quit (*.net *.split)
2016-09-22 11:39:00	<--	toxicFork (sid60962@gateway/web/irccloud.com/x-srvnnrszakkrakkq) has quit (*.net *.split)
2016-09-22 11:39:00	<--	Furai (~Furai@furai.pl) has quit (*.net *.split)
2016-09-22 11:39:01	<--	tlipcon (~todd@173.227.38.131) has quit (*.net *.split)
2016-09-22 11:39:01	<--	AndrewAlexMac (~andrewale@185.21.218.136) has quit (*.net *.split)
2016-09-22 11:39:01	<--	nyuszika7h (nyuszika7h@cadoth.net) has quit (*.net *.split)
2016-09-22 11:39:01	<--	MultiColourPixel (~MultiColo@znc.mcp.io) has quit (*.net *.split)
2016-09-22 11:39:01	<--	bendem (~bendem@irc.bendem.be) has quit (*.net *.split)
2016-09-22 11:39:01	<--	SPoF95 (~SpoF@xdsl-188-154-229-161.adslplus.ch) has quit (*.net *.split)
2016-09-22 11:39:02	<--	Amperture (~Amp@24-136-5-183.c3-0.fld-ubr1.chi-fld.il.cable.rcn.com) has quit (*.net *.split)
2016-09-22 11:39:02	<--	tamaroth (~tamaroth@195.43.138.185) has quit (*.net *.split)
2016-09-22 11:39:02	<--	wedify (~flobberle@S01061cabc06b7d23.lb.shawcable.net) has quit (*.net *.split)
2016-09-22 11:39:02	<--	caipora (~weechat@104.245.37.78) has quit (*.net *.split)
2016-09-22 11:39:02	<--	Bloodust (~Bloodust@tinodidriksen.com) has quit (*.net *.split)
2016-09-22 11:39:02	<--	Kaslai (~Kaslai@unaffiliated/kaslai) has quit (*.net *.split)
2016-09-22 11:39:02	<--	JDevlieghere_ (~JDevliegh@jonasdevlieghere.com) has quit (*.net *.split)
2016-09-22 11:39:02	<--	fus_ (~fus@dev.rozestwinski.com) has quit (*.net *.split)
2016-09-22 11:39:03	<--	Zaneo (~Zaneo@45.55.2.85) has quit (*.net *.split)
2016-09-22 11:39:03	<--	noj (~jon@2a02:470:84:102::24) has quit (*.net *.split)
2016-09-22 11:39:03	<--	kszatan (~kszatan@dial-377.jgora.dialog.net.pl) has quit (*.net *.split)
2016-09-22 11:39:03	<--	msgctl (~msgctl@ometochtli.centzontotochtin.org) has quit (*.net *.split)
2016-09-22 11:39:03	<--	Eelis (~Eelis@unaffiliated/eelis) has quit (*.net *.split)
2016-09-22 11:39:03	<--	mihawk (~mihawk111@v-74-91-114-207.unman-vds.internap-dallas.nfoservers.com) has quit (*.net *.split)
2016-09-22 11:39:03	<--	strayArch (strayArch@2600:3c01::f03c:91ff:feb0:523) has quit (*.net *.split)
2016-09-22 11:39:03	<--	Lokomotiv (~ASAP@unaffiliated/lokomotiv) has quit (*.net *.split)
2016-09-22 11:39:03	<--	nolyc (~supybot@www.projectiwear.org) has quit (*.net *.split)
2016-09-22 11:39:04	<--	Flannel (~flannel@ubuntu/member/flannel) has quit (*.net *.split)
2016-09-22 11:39:04	<--	hackkitten (~hackkitte@HSI-KBW-149-172-240-159.hsi13.kabel-badenwuerttemberg.de) has quit (*.net *.split)
2016-09-22 11:39:04	<--	ido (~ido@pdpc/supporter/student/ido) has quit (*.net *.split)
2016-09-22 11:39:04	<--	xxx (~xxx@unaffiliated/xxx) has quit (*.net *.split)
2016-09-22 11:39:04	<--	ircnode0 (~salamande@kekkonen.niksula.hut.fi) has quit (*.net *.split)
2016-09-22 11:39:04	<--	kline (~kline@freenode/staff/enucs.kline) has quit (*.net *.split)
2016-09-22 11:39:04	<--	hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (*.net *.split)
2016-09-22 11:39:04	<--	Griwes (~griwes@znc.reaver-project.org) has quit (*.net *.split)
2016-09-22 11:39:05	<--	b_jonas (~x@russell2.math.bme.hu) has quit (*.net *.split)
2016-09-22 11:39:05	<--	xa0 (~zeta@unaffiliated/uoy) has quit (*.net *.split)
2016-09-22 11:39:05	<--	kalven (~calvin@2a02:470:84:102::24) has quit (*.net *.split)
2016-09-22 11:39:05	<--	horlicks (~simon@tickle.compsoc.man.ac.uk) has quit (*.net *.split)
2016-09-22 11:39:05	<--	PaSaSaP (~PaSaSaP@nat.ds14.agh.edu.pl) has quit (*.net *.split)
2016-09-22 11:39:05	<--	Hannibal_Smith (~nico@host153-103-dynamic.117-80-r.retail.telecomitalia.it) has quit (*.net *.split)
2016-09-22 11:39:05	<--	SpaceDanceCJ (~Sasha@178.121.26.16) has quit (*.net *.split)
2016-09-22 11:39:05	<--	m_ben (~m_ben@unaffiliated/m-ben/x-5917362) has quit (*.net *.split)
2016-09-22 11:39:05	<--	snover (~Adium@unaffiliated/snover) has quit (*.net *.split)
2016-09-22 11:39:05	<--	Asher (~asher@c-73-106-33-32.hsd1.ga.comcast.net) has quit (*.net *.split)
2016-09-22 11:39:05	<--	The_Coolest (~Arthur_Li@bzq-84-108-121-56.cablep.bezeqint.net) has quit (*.net *.split)
2016-09-22 11:39:05	<--	KAHR-Alpha (~Alpha@AReims-652-1-187-168.w92-142.abo.wanadoo.fr) has quit (*.net *.split)
2016-09-22 11:39:05	<--	NoIdent (~NoIdent@dslb-188-101-011-143.188.101.pools.vodafone-ip.de) has quit (*.net *.split)
2016-09-22 11:39:05	<--	esas (~esas@unaffiliated/esas) has quit (*.net *.split)
2016-09-22 11:39:05	<--	dusted (~dusted@77.68.146.169) has quit (*.net *.split)
2016-09-22 11:39:06	<--	k_j (~no@151.42.78.158) has quit (*.net *.split)
2016-09-22 11:39:06	<--	Sylph-DS (~Sylph@176.74.251.29) has quit (*.net *.split)
2016-09-22 11:39:06	<--	EvilPeng1 (~EvilPengu@bur-inet-pa-1.disney.com) has quit (*.net *.split)
2016-09-22 11:39:06	<--	ezzieyguywuf (~wolfie@unaffiliated/ezzieyguywuf) has quit (*.net *.split)
2016-09-22 11:39:06	<--	Haruno (~Haruno@unaffiliated/haruno) has quit (*.net *.split)
2016-09-22 11:39:06	<--	iamthad (~iamthad@cpe-70-112-32-152.austin.res.rr.com) has quit (*.net *.split)
2016-09-22 11:39:06	<--	DingoSaar (~hagen@pD9E09BA8.dip0.t-ipconnect.de) has quit (*.net *.split)
2016-09-22 11:39:06	<--	zwf (~Thunderbi@modemcable076.238-20-96.mc.videotron.ca) has quit (*.net *.split)
2016-09-22 11:39:06	<--	FireRogue (~fireRogue@213.57.109.136) has quit (*.net *.split)
2016-09-22 11:39:06	<--	yeticry (~yeticry@60.168.40.152) has quit (*.net *.split)
2016-09-22 11:39:07	<--	hyacinth (~yhyacinth@61.111.255.109) has quit (*.net *.split)
2016-09-22 11:39:07	<--	rbern (~rbern@unaffiliated/rbern) has quit (*.net *.split)
2016-09-22 11:39:07	<--	kolobyte (~aaa@unaffiliated/kolobyte) has quit (*.net *.split)
2016-09-22 11:39:07	<--	shirt (~shirt@adsl-v01-3db14831dc15da1b.tau.ac.il) has quit (*.net *.split)
2016-09-22 11:39:07	<--	meshugga (philip@amd.co.at) has quit (*.net *.split)
2016-09-22 11:39:07	<--	zenx (~serj@77.95.183.158) has quit (*.net *.split)
2016-09-22 11:39:08	<--	pocketprotector (~pocketpro@unaffiliated/pocketprotector) has quit (*.net *.split)
2016-09-22 11:39:08	<--	LangeOortjes (~LangeOort@ec2-52-58-250-220.eu-central-1.compute.amazonaws.com) has quit (*.net *.split)
2016-09-22 11:39:08	<--	Moonlight-Angel (~Moonlight@eth-east-parth2-46-193-65-193.wb.wifirst.net) has quit (*.net *.split)
2016-09-22 11:39:08	<--	sharkz_ (~sharkz@linux7.csie.ntu.edu.tw) has quit (*.net *.split)
2016-09-22 11:39:08	<--	dextertzu (~dexter@S0106bcd1656573c8.vs.shawcable.net) has quit (*.net *.split)
2016-09-22 11:39:08	<--	Renari (Renari@70.44.83.23.res-cmts.bgr.ptd.net) has quit (*.net *.split)
2016-09-22 11:39:08	<--	bernalex (~alexander@gentoo/developer/fsf.member.bernalex) has quit (*.net *.split)
2016-09-22 11:39:08	<--	zhr (~aleksi@107.170.226.29) has quit (*.net *.split)
2016-09-22 11:39:08	<--	lmat (~lmat@c-68-50-32-125.hsd1.in.comcast.net) has quit (*.net *.split)
2016-09-22 11:39:08	<--	alextai_ (~alextai@94.230.84.52) has quit (*.net *.split)
2016-09-22 11:39:09	<--	AstralStorm (~astralsto@unaffiliated/astralstorm) has quit (*.net *.split)
2016-09-22 11:39:09	<--	mafagafogigante (~mafagafog@201.37.160.209) has quit (*.net *.split)
2016-09-22 11:39:09	<--	smokex (smokex@gateway/shell/panicbnc/x-cbwraxpmomsdwyso) has quit (*.net *.split)
2016-09-22 11:39:09	<--	d_s (k7f@gateway/shell/mydevil.net/x-yhamcczpmfsgbxde) has quit (*.net *.split)
2016-09-22 11:39:09	<--	dahlia (foobar@ns504960.ip-198-27-67.net) has quit (*.net *.split)
2016-09-22 11:39:09	<--	izalove (~izabera@unaffiliated/izabera) has quit (*.net *.split)
2016-09-22 11:39:09	<--	isomorphismes (~ubuntu@ec2-54-243-213-161.compute-1.amazonaws.com) has quit (*.net *.split)
2016-09-22 11:39:09	<--	kward (keith@mercury.chaos-realm.net) has quit (*.net *.split)
2016-09-22 11:39:09	<--	astocko (~astocko@bongo.coder.gg) has quit (*.net *.split)
2016-09-22 11:39:09	<--	BlaXpirit (~irc@blaxpirit.com) has quit (*.net *.split)
2016-09-22 11:39:09	<--	q_plaz (sid153613@gateway/web/irccloud.com/x-kvozliqjhxheyxek) has quit (*.net *.split)
2016-09-22 11:39:09	<--	Madars (~null@unaffiliated/madars) has quit (*.net *.split)
2016-09-22 11:39:09	<--	baum (~baum@185.82.22.134) has quit (*.net *.split)
2016-09-22 11:39:09	<--	kbtr (~kbtr@zncb.io) has quit (*.net *.split)
2016-09-22 11:39:09	<--	VeXocide (vexocide@unaffiliated/vexocide) has quit (*.net *.split)
2016-09-22 11:39:09	<--	Calinou (~quassel@unaffiliated/calinou) has quit (*.net *.split)
2016-09-22 11:39:09	<--	Helheim (~helheim@static-ip-69-64-50-156.inaddr.ip-pool.com) has quit (*.net *.split)
2016-09-22 11:39:10	<--	fold4 (~JimmyRcom@rp.eliteskills.com) has quit (*.net *.split)
2016-09-22 11:39:10	<--	as3richa_ (~sigkill@165.ip-192-99-247.net) has quit (*.net *.split)
2016-09-22 11:39:10	<--	nopcode_ (~nop@static.181.231.46.78.clients.your-server.de) has quit (*.net *.split)
2016-09-22 11:39:10	<--	wickedmic (~wickedmic@wickedmic.com) has quit (*.net *.split)
2016-09-22 11:39:10	<--	markand (~markand@unaffiliated/markand) has quit (*.net *.split)
2016-09-22 11:39:10	<--	parasite_ (~parasite@mar75-4-82-230-46-11.fbx.proxad.net) has quit (*.net *.split)
2016-09-22 11:39:10	<--	kurti (~kurti@unaffiliated/kurti) has quit (*.net *.split)
2016-09-22 11:39:10	<--	HarryHallman (~Ulysses@ec2-52-23-192-47.compute-1.amazonaws.com) has quit (*.net *.split)
2016-09-22 11:39:10	<--	whaletechno (~whaletech@unaffiliated/whaletechno) has quit (*.net *.split)
2016-09-22 11:39:10	<--	LaunchDirector (~pi@unaffiliated/launch-director/x-8216596) has quit (*.net *.split)
2016-09-22 11:39:10	<--	anunnaki (~chris@unaffiliated/anunnaki) has quit (*.net *.split)
2016-09-22 11:39:10	<--	pwned (~irssi@nurett.in) has quit (*.net *.split)
2016-09-22 11:39:10	<--	dh (dh@bsd.ee) has quit (*.net *.split)
2016-09-22 11:39:11	<--	yorick (~yorick@oftn/oswg-member/yorick) has quit (*.net *.split)
2016-09-22 11:39:11	<--	muteki (~muteki@unaffiliated/muteki) has quit (*.net *.split)
2016-09-22 11:39:11	<--	Ekho (~Ekho@unaffiliated/ekho) has quit (*.net *.split)
2016-09-22 11:39:11	<--	wrmsr (~ubuntu@ec2-54-193-61-240.us-west-1.compute.amazonaws.com) has quit (*.net *.split)
2016-09-22 11:39:11	<--	ajaniMember (~ajaniMemb@45.55.137.32) has quit (*.net *.split)
2016-09-22 11:39:11	<--	ffualo (~ffualo@capybara.table2.com) has quit (*.net *.split)
2016-09-22 11:39:11	<--	jaagr (~jaagr@unaffiliated/jaagr) has quit (*.net *.split)
2016-09-22 11:39:11	<--	RzR (~RzR@unaffiliated/rzr) has quit (*.net *.split)
2016-09-22 11:39:11	<--	Kuukunen (~aki@kuukunen.net) has quit (*.net *.split)
2016-09-22 11:39:11	<--	mrazza (~mrazza@linux.matt.razza.me) has quit (*.net *.split)
2016-09-22 11:39:11	<--	npaperbot (~npaperbot@dodecahedron.m-ou.se) has quit (*.net *.split)
2016-09-22 11:39:11	<--	sohail (~sohail@unaffiliated/sohail) has quit (*.net *.split)
2016-09-22 11:39:11	<--	zackthehuman (~zmulgrew@8.22.121.45) has quit (*.net *.split)
2016-09-22 11:39:11	<--	RazWelles (~raz@192.241.177.166) has quit (*.net *.split)
2016-09-22 11:39:11	<--	lexano (~lexano@CPEa021b7ac59c9-CMf0f249028110.cpe.net.cable.rogers.com) has quit (*.net *.split)
2016-09-22 11:39:12	<--	paracyst (paracyst@unaffiliated/paracyst) has quit (*.net *.split)
2016-09-22 11:39:12	<--	GrecKo (~grecko@195-154-253-46.rev.poneytelecom.eu) has quit (*.net *.split)
2016-09-22 11:39:12	<--	jontxu (~jjc@unaffiliated/jontxu) has quit (*.net *.split)
2016-09-22 11:39:12	<--	ring3_ (~ring3@46.101.131.216) has quit (*.net *.split)
2016-09-22 11:39:12	<--	danzarov (~danzarov@unaffiliated/danzarov) has quit (*.net *.split)
2016-09-22 11:39:12	<--	Tiin57 (~tiin57@tiin57.net) has quit (*.net *.split)
2016-09-22 11:39:12	<--	bberg (~bbergz@unaffiliated/bberg) has quit (*.net *.split)
2016-09-22 11:39:13	<--	sparetire (~sparetire@unaffiliated/sparetire) has quit (*.net *.split)
2016-09-22 11:39:13	<--	anuxivm (~anuxi@92.185.154.236) has quit (*.net *.split)
2016-09-22 11:39:13	<--	Amaranth (~Amaranth@ubuntu/member/Amaranth) has quit (*.net *.split)
2016-09-22 11:39:13	<--	f10 (~flo@2001:470:52af:1:dd05:b755:629c:9755) has quit (*.net *.split)
2016-09-22 11:39:13	<--	p4trix (~p4trix@46.26.255.185) has quit (*.net *.split)
2016-09-22 11:39:13	<--	f10_ (~flo@2001:470:52af:1:e083:b6f8:a539:bbc) has quit (*.net *.split)
2016-09-22 11:39:13	<--	strelox (~user@p200300754F401300F30D09DDF28AA3FA.dip0.t-ipconnect.de) has quit (*.net *.split)
2016-09-22 11:39:13	<--	DjBonadoobie (~DjBonadoo@gateway/vpn/privateinternetaccess/djbonadoobie) has quit (*.net *.split)
2016-09-22 11:39:13	<--	orbiter (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has quit (*.net *.split)
2016-09-22 11:39:13	<--	Betal (~Betal@unaffiliated/betal) has quit (*.net *.split)
2016-09-22 11:39:13	<--	AndyBotwin (~Gustavo@unaffiliated/andybotwin) has quit (*.net *.split)
2016-09-22 11:39:13	<--	blueness (~blueness@gentoo/developer/blueness) has quit (*.net *.split)
2016-09-22 11:39:13	<--	RazielZ (~Raziel@unaffiliated/raziel) has quit (*.net *.split)
2016-09-22 11:39:13	<--	Anonaly (~Anonaly@unaffiliated/anom01y-/x-8370081) has quit (*.net *.split)
2016-09-22 11:39:13	<--	ghostlight (~ghostligh@ec2-54-187-97-144.us-west-2.compute.amazonaws.com) has quit (*.net *.split)
2016-09-22 11:39:14	<--	emlai (emil@melkki.cs.helsinki.fi) has quit (*.net *.split)
2016-09-22 11:39:14	<--	Lirrec (~Lirrec@lirrec.de) has quit (*.net *.split)
2016-09-22 11:39:14	<--	suppahsrv (~mopmop@host124-250-dynamic.181-80-r.retail.telecomitalia.it) has quit (*.net *.split)
2016-09-22 11:39:14	<--	Khaotic (Khaotic@unaffiliated/khaotic) has quit (*.net *.split)
2016-09-22 11:39:14	<--	Adbray (~Adbtay@2001:470:1f11:def:79a9:66d3:ec47:c860) has quit (*.net *.split)
2016-09-22 11:39:15	<--	Martchus (~martchus@dslb-188-105-110-202.188.105.pools.vodafone-ip.de) has quit (*.net *.split)
2016-09-22 11:39:15	<--	Snuupy (~Snuupy@unaffiliated/snuupy) has quit (*.net *.split)
2016-09-22 11:39:15	<--	aviraldg (aviraldgma@gateway/shell/matrix.org/x-efumytrelqbjztff) has quit (*.net *.split)
2016-09-22 11:39:15	<--	TSS_ (~TSS@86.127.142.242) has quit (*.net *.split)
2016-09-22 11:39:15	<--	yokel (~yokel@unaffiliated/contempt) has quit (*.net *.split)
2016-09-22 11:39:15	<--	andreyv (~andrey@unaffiliated/andreyv) has quit (*.net *.split)
2016-09-22 11:39:15	<--	talisein (~talisein@april-fools/2013/sixth/talisein) has quit (*.net *.split)
2016-09-22 11:39:15	<--	nopnopnop (~nope@138.197.143.202) has quit (*.net *.split)
2016-09-22 11:39:15	<--	bounce (bounce@unaffiliated/bounce) has quit (*.net *.split)
2016-09-22 11:39:15	<--	buumi (~quassel@26.ip-51-254-211.eu) has quit (*.net *.split)
2016-09-22 11:39:16	<--	miklcct (michael@server.miklcct.csproject.org) has quit (*.net *.split)
2016-09-22 11:39:16	<--	tz (~tz@pestilence.tzarc.ninja) has quit (*.net *.split)
2016-09-22 11:39:16	<--	txtsd (~txtsd@198.23.246.143) has quit (*.net *.split)
2016-09-22 11:39:16	<--	pingwindyktator (~pingwindy@pingwindyktator.tk) has quit (*.net *.split)
2016-09-22 11:39:16	<--	msb (~msb@unaffiliated/detergnet) has quit (*.net *.split)
2016-09-22 11:39:17	<--	segmond (~segmond@2601:40b:8404:fd10:5cf5:d753:50d9:e189) has quit (*.net *.split)
2016-09-22 11:39:17	<--	fury_ (~fury@znc.codexterous.com) has quit (*.net *.split)
2016-09-22 11:39:18	<--	Extreme- (extreme7@gateway/shell/xshellz/x-ramfytqgypfpbszi) has quit (*.net *.split)
2016-09-22 11:39:18	<--	Jubaleth (~Jubaleth@unaffiliated/jubaleth) has quit (*.net *.split)
2016-09-22 11:39:18	<--	beatdown (beatdown@unaffiliated/beatdown) has quit (*.net *.split)
2016-09-22 11:39:18	<--	hagabaka (hagabaka@unaffiliated/hagabaka) has quit (*.net *.split)
2016-09-22 11:39:18	<--	Alec_Wu__ (sid146390@gateway/web/irccloud.com/x-enbghecyrxwvsxpq) has quit (*.net *.split)
2016-09-22 11:39:18	<--	karstensrage (~karstensr@unaffiliated/karstensrage) has quit (*.net *.split)
2016-09-22 11:39:18	<--	lesderid (~lesderid@anna.lesderid.net) has quit (*.net *.split)
2016-09-22 11:39:19	<--	Bigcheese (~bigcheese@unaffiliated/bigcheese) has quit (*.net *.split)
2016-09-22 11:39:19	<--	destiny (uid73933@gateway/web/irccloud.com/x-jitdbqwlpbpffrsh) has quit (*.net *.split)
2016-09-22 11:39:19	<--	forrestv (forrestv@unaffiliated/forrestv) has quit (*.net *.split)
2016-09-22 11:39:19	<--	ericP (~eric@jay.w3.org) has quit (*.net *.split)
2016-09-22 11:39:19	<--	xiphiasx_ (sid165431@gateway/web/irccloud.com/x-spuyawhxclfmiqqh) has quit (*.net *.split)
2016-09-22 11:39:19	<--	hs_ (~hs_@c-24-18-196-90.hsd1.wa.comcast.net) has quit (*.net *.split)
2016-09-22 11:39:20	<--	Flaeme (sid36625@gateway/web/irccloud.com/x-sbkgeqjhsresmhpz) has quit (*.net *.split)
2016-09-22 11:39:20	<--	chewbranca (sid35447@couchdb/committer/chewbranca) has quit (*.net *.split)
2016-09-22 11:39:20	<--	Tee_Pee (uid23783@gateway/web/irccloud.com/x-rpqoyfcdxedotcvt) has quit (*.net *.split)
2016-09-22 11:39:20	<--	Lohengramm (sid1929@gateway/web/irccloud.com/x-qjmyugevqzzhjcsg) has quit (*.net *.split)
2016-09-22 11:39:20	<--	roolebo (sid64806@gateway/web/irccloud.com/x-rkdnjsljeimdxseg) has quit (*.net *.split)
2016-09-22 11:39:20	<--	ijij (sid107372@gateway/web/irccloud.com/x-xhfnnoddiukvvpva) has quit (*.net *.split)
2016-09-22 11:39:20	<--	Dschingiz (~Iloveyoug@109.ip-92-222-90.eu) has quit (*.net *.split)
2016-09-22 11:39:21	<--	Hello71 (~Hello71@wikipedia/Hello71) has quit (*.net *.split)
2016-09-22 11:39:21	<--	Exagone313 (exa@elou.world) has quit (*.net *.split)
2016-09-22 11:39:21	<--	trkl (~trkl@mail.mack.space) has quit (*.net *.split)
2016-09-22 11:39:21	<--	remmie (~remmie@yyz.cultfan.club) has quit (*.net *.split)
2016-09-22 11:39:21	<--	greenbagels (~gb@2604:a880:0:1010::8dc:2001) has quit (*.net *.split)
2016-09-22 11:39:21	<--	ashnur (~rak@unaffiliated/ashnur) has quit (*.net *.split)
2016-09-22 11:39:21	<--	Maple__ (Maple@gateway/shell/panicbnc/x-abzeihpsrfscsoye) has quit (*.net *.split)
2016-09-22 11:39:21	<--	Cthulhux (cthulhu@piratenpartei/ni/tux) has quit (*.net *.split)
2016-09-22 11:39:21	<--	StoBrendo (~tux@236.ip-149-56-143.net) has quit (*.net *.split)
2016-09-22 11:39:22	<--	RokerHRO (~zonc@shell.spamt.net) has quit (*.net *.split)
2016-09-22 11:39:22	<--	Koyaanis_ (~Koyaanis@185.137.92.38) has quit (*.net *.split)
2016-09-22 11:39:22	<--	bdd (~bdd@sfo.mindcast.net) has quit (*.net *.split)
2016-09-22 11:39:22	<--	Subsentient (~WhiteRat@techtavern/subsen) has quit (*.net *.split)
2016-09-22 11:39:22	<--	vinky (~vinky@90-229-215-218-no98.tbcn.telia.com) has quit (*.net *.split)
2016-09-22 11:39:22	<--	blackbit (ahuemer@unaffiliated/ahuemer) has quit (*.net *.split)
2016-09-22 11:39:23	<--	erikj (~erikj@unaffiliated/erikj) has quit (*.net *.split)
2016-09-22 11:39:23	<--	Adrinael (~adrinael@barrel.rolli.org) has quit (*.net *.split)
2016-09-22 11:39:23	<--	Chaser (~Chaser@192.241.229.182) has quit (*.net *.split)
2016-09-22 11:39:23	<--	klesk (~klesk@unaffiliated/klesk) has quit (*.net *.split)
2016-09-22 11:39:23	<--	icedev (~icedev@0x62.de) has quit (*.net *.split)
2016-09-22 11:39:23	<--	rpadn (~rpadn@host135-231-dynamic.181-80-r.retail.telecomitalia.it) has quit (*.net *.split)
2016-09-22 11:39:23	<--	klugez (kluge@xob.kapsi.fi) has quit (*.net *.split)
2016-09-22 11:39:23	<--	cnu- (~u@s8635.suka.se) has quit (*.net *.split)
2016-09-22 11:39:23	<--	felixsch (~felixsch@unaffiliated/felixsch) has quit (*.net *.split)
2016-09-22 11:39:23	<--	Motig (~Motig@unaffiliated/motig) has quit (*.net *.split)
2016-09-22 11:39:23	<--	TinoDidriksen (~TinoDidri@tinodidriksen.com) has quit (*.net *.split)
2016-09-22 11:39:24	w3z	heres another encapsulation breaking legal/standard trick ville noticed a month or so back
2016-09-22 11:39:24	w3z	{D d; ((B&)d).f();} struct B{void f(){BARK;}}; struct D:private B{};
2016-09-22 11:39:24	w3z	...come on geordi ...
2016-09-22 11:39:24	w3z	bah netsplit
2016-09-22 11:39:24	--	franl is now known as franl_afk
2016-09-22 11:39:24	<--	w3z (~w3z@173-169-121-88.res.bhn.net) has quit (Quit: w3z)
2016-09-22 11:39:31	<--	alyptik (~alyptik@unaffiliated/alyptik) has left ##c++
2016-09-22 11:39:32	--	irc: disconnected from server
2016-09-22 11:44:29	-->	alyptik (~alyptik@unaffiliated/alyptik) has joined ##c++
2016-09-22 11:44:29		[11:44]
2016-09-22 11:44:29	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || https://isocpp.org/faq || pastes: http://melpon.org/wandbox"
2016-09-22 11:44:29	--	Topic set by V-ille (~ville@81-175-149-170.bb.dnainternet.fi) on Fri, 18 Sep 2015 07:13:01
2016-09-22 11:44:30	--	Channel ##c++: 952 nicks (0 ops, 0 voices, 952 normals)
2016-09-22 11:44:38	<--	Sylph-DS (~Sylph@176.74.251.29) has quit (Read error: Connection reset by peer)
2016-09-22 11:44:41	<--	voldyman (uid11639@gateway/web/irccloud.com/x-vockfbngfasuejlx) has quit (Ping timeout: 248 seconds)
2016-09-22 11:44:52	<--	Martchus (~martchus@dslb-188-105-110-202.188.105.pools.vodafone-ip.de) has quit (Ping timeout: 255 seconds)
2016-09-22 11:45:17	-->	neurodrone_ (~neurodron@unaffiliated/neurodrone) has joined ##c++
2016-09-22 11:45:29	Lenore	oh nevermind, there it is.
2016-09-22 11:45:40	--	Channel created on Fri, 14 Sep 2001 17:15:35
2016-09-22 11:45:59	w3z	hah, fine, i'm not one to argue for someone elses achievement tally :)
2016-09-22 11:46:46	<--	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has quit (Ping timeout: 265 seconds)
2016-09-22 11:47:08	-->	Martchus (~martchus@dslb-188-105-102-112.188.105.pools.vodafone-ip.de) has joined ##c++
2016-09-22 11:47:40	<--	plusone (~plusone@176.24.26.166) has quit (Ping timeout: 260 seconds)
2016-09-22 11:48:18	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-22 11:48:31	-->	plusone (~plusone@176.24.26.166) has joined ##c++
2016-09-22 11:48:40	-->	yeticry (~yeticry@60.168.40.152) has joined ##c++
2016-09-22 11:48:45	-->	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has joined ##c++
2016-09-22 11:48:46	<--	franl (~nobody@4.sub-70-215-23.myvzw.com) has quit (Quit: O Elbereth! Gilthoniel! We still remember ...)
2016-09-22 11:49:32	-->	xiphiasx_ (sid165431@gateway/web/irccloud.com/x-uoiwyltxydsnblsu) has joined ##c++
2016-09-22 11:50:12	<--	CaptainPi (~edx@dslb-094-218-169-152.094.218.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2016-09-22 11:50:21	-->	destiny (uid73933@gateway/web/irccloud.com/x-eeoorgftrjayxnyu) has joined ##c++
2016-09-22 11:50:44	<--	Hannibal_Smith (~nico@host153-103-dynamic.117-80-r.retail.telecomitalia.it) has quit (Quit: Leaving)
2016-09-22 11:51:00	-->	tjpeden (sid42254@gateway/web/irccloud.com/x-airatxbahrtidceg) has joined ##c++
2016-09-22 11:51:09	-->	BaneAliens (uid112512@gateway/web/irccloud.com/x-lwvbhkfuibvxdthn) has joined ##c++
2016-09-22 11:51:44	<--	strelox (~user@p200300754F401300F30D09DDF28AA3FA.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-09-22 11:52:59	<--	GenteelBen (~GenteelBe@cpc70133-lutn12-2-0-cust324.9-3.cable.virginm.net) has quit
2016-09-22 11:53:07	-->	Feren^IRCCloud (sid180023@gateway/web/irccloud.com/x-gterbixzgjyqfswb) has joined ##c++
2016-09-22 11:53:18	<--	neurodrone_ (~neurodron@unaffiliated/neurodrone) has quit (Ping timeout: 264 seconds)
2016-09-22 11:53:24	-->	Rigel_ (~Alpha@AReims-652-1-187-168.w92-142.abo.wanadoo.fr) has joined ##c++
2016-09-22 11:53:25	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Ping timeout: 276 seconds)
2016-09-22 11:53:51	<--	biglama (~Day_dream@ram31-1-82-234-77-18.fbx.proxad.net) has quit (Remote host closed the connection)
2016-09-22 11:54:55	-->	MissionCritical (~MissionCr@unaffiliated/missioncritical) has joined ##c++
2016-09-22 11:55:06	<--	code_zombie (~code_zomb@136.63.230.43) has quit (Ping timeout: 264 seconds)
2016-09-22 11:55:17	-->	Nilesh_ (uid116340@gateway/web/irccloud.com/x-ruiopwfbfmtqsinl) has joined ##c++
2016-09-22 11:55:35	-->	reem (sid78397@gateway/web/irccloud.com/x-dzvzpugpmflbclwv) has joined ##c++
2016-09-22 11:55:41	-->	neurodrone_ (~neurodron@unaffiliated/neurodrone) has joined ##c++
2016-09-22 11:55:58	--	Rigel_ is now known as KAHR-Alpha
2016-09-22 11:56:35	-->	bmcorser (sid18416@gateway/web/irccloud.com/x-whzdjqglhogktguh) has joined ##c++
2016-09-22 11:56:42	-->	jaafar (~quassel@50-206-78-205-static.hfc.comcastbusiness.net) has joined ##c++
2016-09-22 11:57:24	-->	assb2 (~assb2@prz29-1-78-205-58-16.fbx.proxad.net) has joined ##c++
2016-09-22 11:57:52	<--	assb2 (~assb2@prz29-1-78-205-58-16.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-22 11:57:53	-->	joel135 (sid136450@gateway/web/irccloud.com/x-klntbojmgnacefnd) has joined ##c++
2016-09-22 11:58:09	-->	ivpvd (~ivpvd@prz29-1-78-205-58-16.fbx.proxad.net) has joined ##c++
2016-09-22 11:58:11	-->	bosma (sid103570@gateway/web/irccloud.com/x-abidoghouiuulaza) has joined ##c++
2016-09-22 11:58:51	-->	jcloud (sid40911@gateway/web/irccloud.com/x-muwtusubnhxfegao) has joined ##c++
2016-09-22 11:59:11	-->	Lohengramm (sid1929@gateway/web/irccloud.com/x-ufthkmbheusqckgj) has joined ##c++
2016-09-22 11:59:17	-->	jlyndon (sid10913@gateway/web/irccloud.com/x-szgojurbkcnpldqa) has joined ##c++
2016-09-22 11:59:42	-->	FMJaguar (sid127157@gateway/web/irccloud.com/x-ojkzpxsmllvhgqpa) has joined ##c++
2016-09-22 11:59:42		[11:59]
2016-09-22 11:59:43	-->	pulkit (uid186196@gateway/web/irccloud.com/x-nducapqoanvjenjo) has joined ##c++
2016-09-22 12:00:47	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 265 seconds)
2016-09-22 12:00:55	-->	Awesomecase (sid56584@gateway/web/irccloud.com/x-hctxfvlggnzkhnol) has joined ##c++
2016-09-22 12:00:55	-->	allen29 (~all@unaffiliated/allen29) has joined ##c++
2016-09-22 12:00:58	-->	logan_e_ (uid164592@gateway/web/irccloud.com/x-zqfucpltccwqwyzi) has joined ##c++
2016-09-22 12:01:01	-->	tritao (sid143391@gateway/web/irccloud.com/x-olofnzjrmvwacaqv) has joined ##c++
2016-09-22 12:01:03	-->	DEElekgolo (~DEElekgol@2602:30a:2e0e:a7a0:c9e6:8dd9:47d8:15e6) has joined ##c++
2016-09-22 12:01:03	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-22 12:01:08	-->	kilimanjaro (sid113699@gateway/web/irccloud.com/x-ohvezugcilcagnjd) has joined ##c++
2016-09-22 12:01:12	-->	trig-ger (sid11664@gateway/web/irccloud.com/x-lczkygphtrjahsfw) has joined ##c++
2016-09-22 12:01:45	-->	Malkrith (uid186536@gateway/web/irccloud.com/x-ipqgozywjwbestrb) has joined ##c++
2016-09-22 12:01:49	-->	rfw (sid22696@gateway/web/irccloud.com/x-sswysxprenieabpr) has joined ##c++
2016-09-22 12:02:13	-->	chewbranca (sid35447@couchdb/committer/chewbranca) has joined ##c++
2016-09-22 12:02:58	<--	Lenore (b84a0f22@gateway/web/freenode/ip.184.74.15.34) has left ##c++
2016-09-22 12:03:07	-->	toxicFork (sid60962@gateway/web/irccloud.com/x-rxsytgzojsogwxen) has joined ##c++
2016-09-22 12:03:15	<--	JRajamaa (~Rajamaa@a91-156-244-1.elisa-laajakaista.fi) has quit (Quit: Konversation terminated!)
2016-09-22 12:03:50	-->	JRajamaa (~Rajamaa@a91-156-244-1.elisa-laajakaista.fi) has joined ##c++
2016-09-22 12:04:17	-->	termos (sid18647@gateway/web/irccloud.com/x-suckfsaycfxfolmb) has joined ##c++
2016-09-22 12:04:27	<--	jaafar (~quassel@50-206-78-205-static.hfc.comcastbusiness.net) has quit (Ping timeout: 276 seconds)
2016-09-22 12:05:05	-->	spr0tsuki (sid14108@gateway/web/irccloud.com/x-nnginttkzwlryjey) has joined ##c++
2016-09-22 12:05:19	-->	skweek (~skweek@2607:fe50:0:810b:ed75:37b:d904:8135) has joined ##c++
2016-09-22 12:05:33	-->	MLM (sid38638@gateway/web/irccloud.com/x-gdzilammeyrvavcu) has joined ##c++
2016-09-22 12:05:40	-->	italoacasas (sid172107@gateway/web/irccloud.com/x-nwdbmfbltcqxclqy) has joined ##c++
2016-09-22 12:05:51	-->	roolebo (sid64806@gateway/web/irccloud.com/x-rrekwszbxljpprik) has joined ##c++
2016-09-22 12:06:42	<--	KAHR-Alpha (~Alpha@AReims-652-1-187-168.w92-142.abo.wanadoo.fr) has quit (Remote host closed the connection)
2016-09-22 12:06:43	-->	PotatoGim (sid99505@gateway/web/irccloud.com/x-diopgjkuleeepuvl) has joined ##c++
2016-09-22 12:07:10	-->	voldyman (uid11639@gateway/web/irccloud.com/x-lccelcqqxpkjvyxk) has joined ##c++
2016-09-22 12:07:14	-->	KAHR-Alpha (~Alpha@AReims-652-1-187-168.w92-142.abo.wanadoo.fr) has joined ##c++
2016-09-22 12:07:35	-->	mehdi__ (sid15567@gateway/web/irccloud.com/x-xlfdbyooczcuzdmh) has joined ##c++
2016-09-22 12:07:54	-->	ionelmc (sid20175@python/site-packages/ionelmc) has joined ##c++
2016-09-22 12:08:05	-->	Tee_Pee (uid23783@gateway/web/irccloud.com/x-wodxilciyqikhplv) has joined ##c++
2016-09-22 12:08:59	-->	Kamuela (sid111576@gateway/web/irccloud.com/x-yrbptwaczxqvdlyp) has joined ##c++
2016-09-22 12:09:10	-->	heatmis3r (sid112556@gateway/web/irccloud.com/x-wjgpiusiizztwqui) has joined ##c++
2016-09-22 12:09:20	-->	Bengi (sid73530@gateway/web/irccloud.com/x-sxjsinaiqmfjeqmy) has joined ##c++
2016-09-22 12:09:34	-->	q_plaz (sid153613@gateway/web/irccloud.com/x-ypeiirspaljtdfyi) has joined ##c++
2016-09-22 12:09:38	-->	CEnnis91 (uid3543@gateway/web/irccloud.com/x-rsvjtqnvfxojxbdo) has joined ##c++
2016-09-22 12:09:56	<--	deeb (~dee@a85-139-8-162.cpe.netcabo.pt) has quit (Quit: deeb)
2016-09-22 12:10:35	-->	YP-Cloud__ (sid130155@gateway/web/irccloud.com/x-lwiruyfwfpdzubhn) has joined ##c++
2016-09-22 12:11:35	-->	blacksyke (sid151792@gateway/web/irccloud.com/x-qqeaoipjmvduolju) has joined ##c++
2016-09-22 12:11:51	-->	sfan786_ (sid143344@gateway/web/irccloud.com/x-bxdvrrfiudhgrgtz) has joined ##c++
2016-09-22 12:12:19	<--	nopenever (~tourist@rrcs-173-197-104-130.west.biz.rr.com) has quit (Quit: leaving)
2016-09-22 12:12:37	-->	jhill (sid1055@gateway/web/irccloud.com/x-rxwnirjsxwzgwsyu) has joined ##c++
2016-09-22 12:13:05	-->	lhtseng (sid15322@gateway/web/irccloud.com/x-puahratjponcvvrx) has joined ##c++
2016-09-22 12:13:33	-->	CARAM__ (sid27279@gateway/web/irccloud.com/x-ibuvrzjlwxpunmdz) has joined ##c++
2016-09-22 12:13:40	<--	JRajamaa (~Rajamaa@a91-156-244-1.elisa-laajakaista.fi) has quit (Quit: Konversation terminated!)
2016-09-22 12:13:43	-->	CAPITANOOO (~CAPITANOO@host122-156-static.117-2-b.business.telecomitalia.it) has joined ##c++
2016-09-22 12:13:44	-->	huhlig (sid17687@gateway/web/irccloud.com/x-dhkngopkxdzujqap) has joined ##c++
2016-09-22 12:13:55	-->	Rajamaa (~Rajamaa@a91-156-244-1.elisa-laajakaista.fi) has joined ##c++
2016-09-22 12:14:20	-->	SwiftMatt (~Objective@209.107.210.97) has joined ##c++
2016-09-22 12:14:51	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-22 12:14:51		[12:14]
2016-09-22 12:14:56	-->	barq (sid103986@gateway/web/irccloud.com/x-gdoxobyjvhuzipfq) has joined ##c++
2016-09-22 12:15:10	-->	ijij (sid107372@gateway/web/irccloud.com/x-ipzmpialprovuwnh) has joined ##c++
2016-09-22 12:15:20	<--	ambro718 (~ambro@unaffiliated/ambro718) has quit (Ping timeout: 265 seconds)
2016-09-22 12:15:29	-->	jbud (~jbud@ip-24-54-73-229.user.start.ca) has joined ##c++
2016-09-22 12:15:31	-->	JackMc (sid85402@gateway/web/irccloud.com/x-tuyhryxlvauppnxd) has joined ##c++
2016-09-22 12:15:40	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-22 12:16:02	<--	satifant (~sati@unaffiliated/satifant) has quit (Quit: Verlassend)
2016-09-22 12:16:11	-->	bigpet (uid25664@gateway/web/irccloud.com/x-czhsnaykcrhwvqui) has joined ##c++
2016-09-22 12:17:07	<--	Vuks (~Vuks@unaffiliated/vuks69) has quit (Ping timeout: 244 seconds)
2016-09-22 12:17:13	-->	Flaeme (sid36625@gateway/web/irccloud.com/x-riwcapitkzsfgkan) has joined ##c++
2016-09-22 12:18:03	<--	Rajamaa (~Rajamaa@a91-156-244-1.elisa-laajakaista.fi) has quit (Client Quit)
2016-09-22 12:18:10	-->	AndrewPRS (AndrewPRS@gateway/shell/elitebnc/x-iuhxsqdtbhdczewk) has joined ##c++
2016-09-22 12:18:26	-->	navidr (uid112413@gateway/web/irccloud.com/x-coziiqylcsnishov) has joined ##c++
2016-09-22 12:18:33	<--	ResidentBiscuit (~ResidentB@unaffiliated/residentbiscuit) has quit (Read error: Connection reset by peer)
2016-09-22 12:18:36	-->	Rajamaa (~Rajamaa@a91-156-244-1.elisa-laajakaista.fi) has joined ##c++
2016-09-22 12:19:03	-->	jaafar (~quassel@67.135.43.183) has joined ##c++
2016-09-22 12:20:06	<--	Rajamaa (~Rajamaa@a91-156-244-1.elisa-laajakaista.fi) has quit (Client Quit)
2016-09-22 12:21:02	-->	sephiap (sid14177@gateway/web/irccloud.com/x-dkoydudsjmyjlgqf) has joined ##c++
2016-09-22 12:21:27	-->	Rajamaa (~Rajamaa@a91-156-244-1.elisa-laajakaista.fi) has joined ##c++
2016-09-22 12:22:33	-->	onca (47b8c04d@gateway/web/freenode/ip.71.184.192.77) has joined ##c++
2016-09-22 12:24:02	<--	Kirrahe (~kirrahe@ip51cc4257.adsl-surfen.hetnet.nl) has quit (Ping timeout: 265 seconds)
2016-09-22 12:24:29	<--	tadaa (~tadaaa@nat-wh-wz4-12.rz.uni-karlsruhe.de) has quit (Read error: Connection reset by peer)
2016-09-22 12:26:16	<--	bmohan (~bmohan@host86-176-67-69.range86-176.btcentralplus.com) has left ##c++
2016-09-22 12:26:26	-->	divno (~divno@unaffiliated/divno) has joined ##c++
2016-09-22 12:26:57	-->	scellow (~quassel@bly33-1-78-246-251-30.fbx.proxad.net) has joined ##c++
2016-09-22 12:26:59	-->	rd4455 (~rd45@198.188.4.4) has joined ##c++
2016-09-22 12:28:28	<--	onca (47b8c04d@gateway/web/freenode/ip.71.184.192.77) has left ##c++
2016-09-22 12:29:04	-->	kasper_ (~safaf@82.137.11.238) has joined ##c++
2016-09-22 12:29:53	<--	Lowl3v3l (~Lowl3v3l@dslb-088-075-098-175.088.075.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2016-09-22 12:29:53		[12:29]
2016-09-22 12:30:03	<--	illerucis (~illerucis@2620:10d:c091:200::9:3361) has quit (Remote host closed the connection)
2016-09-22 12:30:21	<--	bjz (~bjz@14-201-215-168.tpgi.com.au) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-22 12:30:37	-->	illerucis (~illerucis@2620:10d:c091:200::9:3361) has joined ##c++
2016-09-22 12:33:18	<--	Karyon (~yaaic@unaffiliated/karyon) has quit (Quit: sayonara)
2016-09-22 12:33:23	<--	Markow (~Markow@176.122.215.103) has quit (Ping timeout: 250 seconds)
2016-09-22 12:33:29	<--	GrayArea (kvirc@178.208.173.11) has quit (Ping timeout: 240 seconds)
2016-09-22 12:33:41	-->	Markow (~Markow@176.122.215.103) has joined ##c++
2016-09-22 12:34:01	<--	Enhex (~Enhex@82.252.138.77.rev.sfr.net) has quit (Quit: Leaving)
2016-09-22 12:34:39	-->	zwliew (uid161395@gateway/web/irccloud.com/x-uwwkknyniebhnegs) has joined ##c++
2016-09-22 12:35:07	<--	illerucis (~illerucis@2620:10d:c091:200::9:3361) has quit (Ping timeout: 250 seconds)
2016-09-22 12:36:36	-->	alessandro_ (02ec61d0@gateway/web/freenode/ip.2.236.97.208) has joined ##c++
2016-09-22 12:36:49	<--	biberu (~biberu@c-cf2d72d5.08-441-7570702.cust.bredbandsbolaget.se) has quit
2016-09-22 12:37:37	-->	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has joined ##c++
2016-09-22 12:37:58	<--	alessandro_ (02ec61d0@gateway/web/freenode/ip.2.236.97.208) has quit (Client Quit)
2016-09-22 12:38:25	<--	Rajamaa (~Rajamaa@a91-156-244-1.elisa-laajakaista.fi) has quit (Quit: Konversation terminated!)
2016-09-22 12:38:57	<--	Azusa762 (~roy@2a02:8084:2ac1:ef00:f279:59ff:fe17:ce37) has quit (Ping timeout: 265 seconds)
2016-09-22 12:40:02	-->	Azusa762 (~roy@37.228.232.111) has joined ##c++
2016-09-22 12:41:13	-->	dj_pi (~dj@c-73-191-212-56.hsd1.mi.comcast.net) has joined ##c++
2016-09-22 12:42:20	<--	symm- (~symm-@86.127.152.32) has quit (Ping timeout: 265 seconds)
2016-09-22 12:42:28	-->	munch (pls@gateway/shell/elitebnc/x-uprfyibfroedqxyu) has joined ##c++
2016-09-22 12:42:28	<--	munch (pls@gateway/shell/elitebnc/x-uprfyibfroedqxyu) has quit (Excess Flood)
2016-09-22 12:42:33	<--	Renari (Renari@70.44.83.23.res-cmts.bgr.ptd.net) has quit (Read error: Connection reset by peer)
2016-09-22 12:42:42	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-22 12:43:03	<--	SwiftMatt (~Objective@209.107.210.97) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-22 12:43:22	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 265 seconds)
2016-09-22 12:43:41	-->	justan0theruser (~justanoth@unaffiliated/justanotheruser) has joined ##c++
2016-09-22 12:45:25	-->	symm- (~symm-@86.127.152.32) has joined ##c++
2016-09-22 12:45:25		[12:45]
2016-09-22 12:46:14	-->	magnicida (~raskolnik@2a02:8109:8c80:231:ea39:dfff:fe4d:275b) has joined ##c++
2016-09-22 12:46:21	<--	symm- (~symm-@86.127.152.32) has quit (Client Quit)
2016-09-22 12:46:33	<--	justanotheruser (~justanoth@unaffiliated/justanotheruser) has quit (Ping timeout: 248 seconds)
2016-09-22 12:47:13	<--	t0by (~t0by@host227-34-dynamic.15-87-r.retail.telecomitalia.it) has quit (Quit: Bye!)
2016-09-22 12:50:32	<--	vicenteH (~user@96.235.15.37.dynamic.jazztel.es) has quit (Ping timeout: 265 seconds)
2016-09-22 12:51:15	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-22 12:51:23	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-22 12:51:24	-->	karts (43a45b4e@gateway/web/cgi-irc/kiwiirc.com/ip.67.164.91.78) has joined ##c++
2016-09-22 12:51:48	<--	edr (~edr@pdpc/supporter/professional/edr) has quit (Quit: Leaving)
2016-09-22 12:51:54	<--	cmedeiros (~cmedeiros@200.186.50.162) has quit (Ping timeout: 244 seconds)
2016-09-22 12:52:45	<--	karts (43a45b4e@gateway/web/cgi-irc/kiwiirc.com/ip.67.164.91.78) has quit (Client Quit)
2016-09-22 12:53:37	<--	vitimiti (~vitimiti@unaffiliated/vitimiti) has quit (Read error: Connection reset by peer)
2016-09-22 12:54:18	<--	Gathis (~TheBlack@unaffiliated/gathis) has quit (Remote host closed the connection)
2016-09-22 12:54:36	-->	vitimiti (~vitimiti@unaffiliated/vitimiti) has joined ##c++
2016-09-22 12:54:49	-->	Tempesta (~Tempesta@unaffiliated/tempesta) has joined ##c++
2016-09-22 12:55:04	-->	Thorax2015 (~Thorax@94.197.121.39.threembb.co.uk) has joined ##c++
2016-09-22 12:55:42	-->	v1r0 (~viro@unaffiliated/viro) has joined ##c++
2016-09-22 12:56:08	<--	gelignite (~gelignite@x4db60b2a.dyn.telefonica.de) has quit (Quit: http://bit.ly/1kso8Ta)
2016-09-22 12:56:18	<--	jefcolbi (~Thunderbi@188.166.147.168) has quit (Ping timeout: 264 seconds)
2016-09-22 12:56:37	-->	shirty (~shirty@109.131.156.130) has joined ##c++
2016-09-22 12:56:49	<--	Thorax (~Thorax@94.197.121.39.threembb.co.uk) has quit (Ping timeout: 265 seconds)
2016-09-22 12:57:38	<--	zero_byte (~zer0@ip-89-103-110-138.net.upcbroadband.cz) has quit (Read error: Connection reset by peer)
2016-09-22 12:58:24	-->	Karyon (~yaaic@unaffiliated/karyon) has joined ##c++
2016-09-22 13:00:12	<--	rorro (~rorro@176.10.248.234) has quit (Ping timeout: 265 seconds)
2016-09-22 13:00:19	-->	Thorax (~Thorax@94.197.121.115.threembb.co.uk) has joined ##c++
2016-09-22 13:01:03	<--	Thorax2015 (~Thorax@94.197.121.39.threembb.co.uk) has quit (Ping timeout: 240 seconds)
2016-09-22 13:01:03		[13:01]
2016-09-22 13:01:11	<--	bushido_ (~bushido@unaffiliated/bursihido) has quit (Ping timeout: 265 seconds)
2016-09-22 13:01:42	<--	HerzogDeXtEr (~farci@89.246.162.36) has quit (Quit: Leaving.)
2016-09-22 13:03:27	-->	bushido_ (~bushido@unaffiliated/bursihido) has joined ##c++
2016-09-22 13:04:06	<--	Brklyn (~truthbk@38.122.226.210) has quit (Ping timeout: 264 seconds)
2016-09-22 13:05:10	<--	rd4455 (~rd45@198.188.4.4) has quit (Ping timeout: 244 seconds)
2016-09-22 13:06:12	<--	sharazam (~sharazam@x4db07473.dyn.telefonica.de) has quit (Read error: Connection reset by peer)
2016-09-22 13:06:19	-->	code_zombie (~code_zomb@2605:a601:aa1:5c00:6473:245e:49a4:3a47) has joined ##c++
2016-09-22 13:06:34	izalove	is there a structure that associates keys and values 1-1 ?
2016-09-22 13:06:35	<--	w3z (~w3z@173-169-121-88.res.bhn.net) has quit (Quit: w3z)
2016-09-22 13:06:45	-->	casscode_ (~bru@41.53.130.49) has joined ##c++
2016-09-22 13:06:50	izalove	where a value can be used to quickly retrieve the key
2016-09-22 13:07:06	izalove	do i have to use two unordered maps?
2016-09-22 13:07:06	kalven	boost has a bimap
2016-09-22 13:07:13	izalove	ok thanks
2016-09-22 13:07:24	<--	CAPITANOOO (~CAPITANOO@host122-156-static.117-2-b.business.telecomitalia.it) has quit (Quit: CAPITANOOO)
2016-09-22 13:07:45	-->	prehensileNipple (~nooblet@124.197.62.6) has joined ##c++
2016-09-22 13:07:57	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-22 13:08:08	<--	orbiter (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has quit (Read error: Connection reset by peer)
2016-09-22 13:08:44	-->	orbiter (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has joined ##c++
2016-09-22 13:09:35	-->	naraku9333 (~quassel@unaffiliated/naraku9333) has joined ##c++
2016-09-22 13:10:01	<--	phinxy (~tehhhd@unaffiliated/phinxy) has quit (Read error: Connection reset by peer)
2016-09-22 13:10:20	<--	sh00p (~sh00p@84.216.39.31) has quit
2016-09-22 13:10:35	-->	doppel (~chatzilla@ip70-189-197-158.lv.lv.cox.net) has joined ##c++
2016-09-22 13:12:49	pingwindyktator	thread_local for local objects doesn't make sense, right?
2016-09-22 13:13:06	pingwindyktator	void foo () { thread_local int a; }
2016-09-22 13:13:25	kalven	nope
2016-09-22 13:13:25	<--	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has quit (Ping timeout: 260 seconds)
2016-09-22 13:13:36	et	pingwindyktator: they do
2016-09-22 13:13:38	pingwindyktator	it's local auto object, every thread has own copy of stack frame, so own copy of a
2016-09-22 13:13:41	pingwindyktator	uh, why?
2016-09-22 13:13:51	et	pingwindyktator: they are automatically static
2016-09-22 13:14:01	kalven	oh
2016-09-22 13:14:03	pingwindyktator	oh
2016-09-22 13:14:13	pingwindyktator	I didnt know, thanks et
2016-09-22 13:15:10	-->	munch (pls@gateway/shell/elitebnc/x-qahnhzeiuircqrsi) has joined ##c++
2016-09-22 13:15:24	izalove	:(  can't initialize a boost::bimap like an unordered_map
2016-09-22 13:15:49	<--	Thorax (~Thorax@94.197.121.115.threembb.co.uk) has quit (Read error: Connection reset by peer)
2016-09-22 13:16:22	-->	Thorax (~Thorax@94.197.121.115.threembb.co.uk) has joined ##c++
2016-09-22 13:16:22		[13:16]
2016-09-22 13:18:46	<--	v1r0 (~viro@unaffiliated/viro) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-09-22 13:19:17	<--	shingshang (~shingshan@115-64-27-246.static.tpgi.com.au) has quit (Ping timeout: 244 seconds)
2016-09-22 13:22:44	-->	wolfcub (~henrique_@177.55.195.190) has joined ##c++
2016-09-22 13:22:46	<--	EvilPeng1 (~EvilPengu@bur-inet-pa-1.disney.com) has quit (Read error: Connection reset by peer)
2016-09-22 13:23:26	<--	Thorax (~Thorax@94.197.121.115.threembb.co.uk) has quit (Ping timeout: 244 seconds)
2016-09-22 13:23:53	<--	jaafar (~quassel@67.135.43.183) has quit (Ping timeout: 248 seconds)
2016-09-22 13:24:22	-->	rd4455 (~rd45@198-188-4-4.pasadena.edu) has joined ##c++
2016-09-22 13:25:23	<--	quickbrownfox (~henrique_@177.131.178.138) has quit (Ping timeout: 250 seconds)
2016-09-22 13:25:57	-->	Mike11 (~Mike@unaffiliated/mike11) has joined ##c++
2016-09-22 13:26:02	-->	EvilPeng1 (~EvilPengu@bur-inet-pa-1.disney.com) has joined ##c++
2016-09-22 13:26:07	<--	badone (badone@nat/redhat/x-bclpxghjjlewlqbl) has quit (Quit: k?thxbyebyenow)
2016-09-22 13:26:17	<--	scellow (~quassel@bly33-1-78-246-251-30.fbx.proxad.net) has quit (Remote host closed the connection)
2016-09-22 13:27:50	<--	CEnnis91 (uid3543@gateway/web/irccloud.com/x-rsvjtqnvfxojxbdo) has quit (Quit: Connection closed for inactivity)
2016-09-22 13:29:19	<--	alexmh (~alex@c-67-166-124-41.hsd1.ut.comcast.net) has quit (Remote host closed the connection)
2016-09-22 13:29:46	<--	anuxivm (~anuxi@92.185.154.236) has quit (Read error: Connection reset by peer)
2016-09-22 13:29:52	<--	ovrh (~ovrh@unaffiliated/ovrh) has quit (Quit: ovrh)
2016-09-22 13:30:09	-->	l2esonance (~l2esonanc@c-73-223-132-245.hsd1.ca.comcast.net) has joined ##c++
2016-09-22 13:30:25	-->	edr (~edr@pdpc/supporter/professional/edr) has joined ##c++
2016-09-22 13:30:55	<--	Azusa762 (~roy@37.228.232.111) has quit (Ping timeout: 260 seconds)
2016-09-22 13:31:09	<--	Adva (~Hyrule@2a02:810a:12c0:5068:2d74:d88:1085:6ed8) has quit (Read error: Connection reset by peer)
2016-09-22 13:31:18	<--	gegagome (~gegagome@206.83.5.2) has quit (Quit: gegagome)
2016-09-22 13:31:31	<--	blueness (~blueness@gentoo/developer/blueness) has quit (Quit: blueness)
2016-09-22 13:31:31		[13:31]
2016-09-22 13:32:57	<--	Karyon (~yaaic@unaffiliated/karyon) has quit (Remote host closed the connection)
2016-09-22 13:33:03	<--	PaSaSaP (~PaSaSaP@nat.ds14.agh.edu.pl) has quit (Ping timeout: 240 seconds)
2016-09-22 13:35:05	-->	mrkotfw (~mrkotfw@99-57-140-149.lightspeed.sntcca.sbcglobal.net) has joined ##c++
2016-09-22 13:36:03	<--	Birchy (~Birchy@178-164-108.52.3p.ntebredband.no) has quit (Ping timeout: 265 seconds)
2016-09-22 13:37:54	-->	glenfe (~glen@unaffiliated/glenfe) has joined ##c++
2016-09-22 13:38:12	-->	josef_k (~Jeremy@210-10-222-98.mel.static-ipl.aapt.com.au) has joined ##c++
2016-09-22 13:38:17	-->	w3z (~w3z@173-169-121-88.res.bhn.net) has joined ##c++
2016-09-22 13:40:06	<--	dj_pi (~dj@c-73-191-212-56.hsd1.mi.comcast.net) has quit (Ping timeout: 264 seconds)
2016-09-22 13:41:34	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-22 13:41:47	<--	al1o (~al1o@236.red-88-16-49.dynamicip.rima-tde.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-22 13:42:16	<--	dusted (~dusted@77.68.146.169) has quit (Quit: Leaving)
2016-09-22 13:42:34	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-22 13:42:51	-->	Renari (~Renari@70.44.83.23.res-cmts.bgr.ptd.net) has joined ##c++
2016-09-22 13:42:54	<--	ivpvd (~ivpvd@prz29-1-78-205-58-16.fbx.proxad.net) has quit (Remote host closed the connection)
2016-09-22 13:43:26	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Read error: No route to host)
2016-09-22 13:44:01	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-22 13:46:20	-->	smabv (~smabv@prz29-1-78-205-58-16.fbx.proxad.net) has joined ##c++
2016-09-22 13:46:36	<--	smabv (~smabv@prz29-1-78-205-58-16.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-22 13:46:36		[13:46]
2016-09-22 13:46:49	-->	Ceqa (~Ceqa@prz29-1-78-205-58-16.fbx.proxad.net) has joined ##c++
2016-09-22 13:47:06	<--	Ceqa (~Ceqa@prz29-1-78-205-58-16.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-22 13:47:20	-->	Kyamq (~Kyamq@prz29-1-78-205-58-16.fbx.proxad.net) has joined ##c++
2016-09-22 13:48:57	<--	skweek (~skweek@2607:fe50:0:810b:ed75:37b:d904:8135) has quit (Ping timeout: 248 seconds)
2016-09-22 13:49:34	-->	funfunctor (~edward@203.44.10.68) has joined ##c++
2016-09-22 13:50:20	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-22 13:50:24	-->	blackbeard420 (~blackbear@dynamic-acs-24-154-82-158.zoominternet.net) has joined ##c++
2016-09-22 13:50:27	-->	blueness (~blueness@gentoo/developer/blueness) has joined ##c++
2016-09-22 13:51:33	<--	fintler (~fintler@unaffiliated/fintler) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-22 13:52:11	<--	Kyamq (~Kyamq@prz29-1-78-205-58-16.fbx.proxad.net) has quit (Ping timeout: 244 seconds)
2016-09-22 13:52:11	-->	systemfault (~rcyr@unaffiliated/rcyr) has joined ##c++
2016-09-22 13:52:21	<--	velco (~chill@vlan-185-78-38-153.comnet.bg) has quit (Quit: Leaving...)
2016-09-22 13:52:40	<--	prehensileNipple (~nooblet@124.197.62.6) has quit (Ping timeout: 255 seconds)
2016-09-22 13:53:07	<--	DjBonadoobie (~DjBonadoo@gateway/vpn/privateinternetaccess/djbonadoobie) has quit (Ping timeout: 255 seconds)
2016-09-22 13:54:20	<--	BaneAliens (uid112512@gateway/web/irccloud.com/x-lwvbhkfuibvxdthn) has quit (Quit: Connection closed for inactivity)
2016-09-22 13:54:50	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-22 13:55:11	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-22 13:56:06	-->	petercooper (~peterc@host81-132-80-154.range81-132.btcentralplus.com) has joined ##c++
2016-09-22 13:59:35	-->	Thorax (~Thorax@94.197.121.143.threembb.co.uk) has joined ##c++
2016-09-22 14:01:05	<--	a3Dman (~3Dman@unaffiliated/a3dman) has quit (Ping timeout: 240 seconds)
2016-09-22 14:03:44	<--	heiner (~heiner@ipservice-092-209-143-031.092.209.pools.vodafone-ip.de) has quit (Read error: No route to host)
2016-09-22 14:03:44		[14:03]
2016-09-22 14:03:55	-->	Nome (68db6b52@gateway/web/freenode/ip.104.219.107.82) has joined ##c++
2016-09-22 14:05:38	-->	DjBonadoobie (~DjBonadoo@gateway/vpn/privateinternetaccess/djbonadoobie) has joined ##c++
2016-09-22 14:06:56	-->	a3Dman (~3Dman@unaffiliated/a3dman) has joined ##c++
2016-09-22 14:08:09	-->	skweek (~skweek@2607:fe50:0:810b:ed75:37b:d904:8135) has joined ##c++
2016-09-22 14:10:35	-->	AnarchyAo (~andrew@dhcp.1lakeside.web-pass.com) has joined ##c++
2016-09-22 14:10:40	<--	f10_ (~flo@2001:470:52af:1:e083:b6f8:a539:bbc) has quit (Ping timeout: 255 seconds)
2016-09-22 14:11:01	-->	JoshS (~jshjsh@172.56.38.166) has joined ##c++
2016-09-22 14:11:34	<--	f10 (~flo@2001:470:52af:1:dd05:b755:629c:9755) has quit (Ping timeout: 255 seconds)
2016-09-22 14:12:05	-->	spoonman (~fred@2804:7f2:581:10f1:1dff:14b9:231e:d8d0) has joined ##c++
2016-09-22 14:12:55	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-22 14:13:01	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-22 14:13:06	<--	casscode_ (~bru@41.53.130.49) has quit (Ping timeout: 264 seconds)
2016-09-22 14:13:29	<--	petercooper (~peterc@host81-132-80-154.range81-132.btcentralplus.com) has quit (Ping timeout: 248 seconds)
2016-09-22 14:13:53	<--	spoonman (~fred@2804:7f2:581:10f1:1dff:14b9:231e:d8d0) has quit (Client Quit)
2016-09-22 14:14:47	-->	casscode_ (~bru@41.53.130.49) has joined ##c++
2016-09-22 14:15:22	-->	jeromelanteri (~jeromelan@cm-119-76-54-163.revip17.asianet.co.th) has joined ##c++
2016-09-22 14:16:56	<--	divno (~divno@unaffiliated/divno) has quit (Quit: divno)
2016-09-22 14:17:44	nikki93_	anyone got a guide for all annotations like 'noexcept' etc. summarized somewhere?
2016-09-22 14:17:46	-->	JustinHitla (~JustinHit@unaffiliated/justinhitla) has joined ##c++
2016-09-22 14:17:48	nikki93_	writing some new cpp and want to keep it clean
2016-09-22 14:17:54	JustinHitla	from that page https://talks.golang.org/2012/splash.article  "The Go programming language was conceived in late 2007 as an answer to some of the problems we were seeing developing software infrastructure at Google. The computing landscape today is almost unrelated to the environment in which the languages being used, mostly C++, Java, and Python, had been created. The problems introduced by multicore
2016-09-22 14:18:01	JustinHitla	processors, networked systems, massive computation clusters, and the web programming model were being worked around rather than addressed head-on." what do you think ? is sutuation with C++, Java, and Python really so bad or that article is biased ?
2016-09-22 14:20:08	kalven	what do you think?
2016-09-22 14:20:08		[14:20]
2016-09-22 14:20:20	JustinHitla	I think they are right
2016-09-22 14:23:39	-->	fred1 (~fred@2804:7f2:581:10f1:1dff:14b9:231e:d8d0) has joined ##c++
2016-09-22 14:23:51	-->	FreeBirdLjj (~freebirdl@223.65.84.131) has joined ##c++
2016-09-22 14:25:19	<--	fred1 (~fred@2804:7f2:581:10f1:1dff:14b9:231e:d8d0) has left ##c++
2016-09-22 14:25:39	-->	spoonman (~fred@2804:7f2:581:10f1:1dff:14b9:231e:d8d0) has joined ##c++
2016-09-22 14:25:58	<--	rd4455 (~rd45@198-188-4-4.pasadena.edu) has quit (Ping timeout: 255 seconds)
2016-09-22 14:26:54	<--	casscode_ (~bru@41.53.130.49) has quit (Ping timeout: 264 seconds)
2016-09-22 14:28:44	<--	FreeBirdLjj (~freebirdl@223.65.84.131) has quit (Ping timeout: 265 seconds)
2016-09-22 14:31:34	<--	pheenx (~pheenx@2a02:8071:b68a:1c00:225:22ff:fee7:7dc5) has quit (Ping timeout: 265 seconds)
2016-09-22 14:32:11	<--	Rudolf (~rodolfo@unaffiliated/rudolf) has quit (Quit: [IRSSI])
2016-09-22 14:32:12	--	josh_ is now known as josh
2016-09-22 14:33:06	<--	roygbiv (~JohnRambo@pdpc/supporter/active/roygbiv) has quit (Quit: ™)
2016-09-22 14:34:17	<--	kimundi (~Kimundi@p4FE2FDD6.dip0.t-ipconnect.de) has quit (Ping timeout: 248 seconds)
2016-09-22 14:35:10	-->	fahadash (uid44972@gateway/web/irccloud.com/x-cvmxmgqnublfizvl) has joined ##c++
2016-09-22 14:35:10		[14:35]
2016-09-22 14:37:19	-->	dj_pi (~dj@c-73-191-212-56.hsd1.mi.comcast.net) has joined ##c++
2016-09-22 14:37:55	-->	casscode_ (~bru@41.53.130.49) has joined ##c++
2016-09-22 14:39:38	-->	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has joined ##c++
2016-09-22 14:39:42	<--	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has quit (Max SendQ exceeded)
2016-09-22 14:39:54	-->	imdone (~imdone@cable-94-189-189-9.dynamic.sbb.rs) has joined ##c++
2016-09-22 14:40:23	-->	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has joined ##c++
2016-09-22 14:40:26	<--	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has quit (Max SendQ exceeded)
2016-09-22 14:41:16	-->	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has joined ##c++
2016-09-22 14:41:25	<--	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has quit (Max SendQ exceeded)
2016-09-22 14:41:56	-->	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has joined ##c++
2016-09-22 14:42:13	-->	gp5st (~jim@pool-98-111-192-215.pitbpa.fios.verizon.net) has joined ##c++
2016-09-22 14:42:59	<--	ScorpionJack (~Scorpion@unaffiliated/scorpionjack) has quit (Quit: ScorpionJack)
2016-09-22 14:43:06	<--	casscode_ (~bru@41.53.130.49) has quit (Ping timeout: 264 seconds)
2016-09-22 14:44:18	<--	Thorax (~Thorax@94.197.121.143.threembb.co.uk) has quit (Ping timeout: 264 seconds)
2016-09-22 14:45:02	-->	casscode_ (~bru@41.53.130.49) has joined ##c++
2016-09-22 14:45:08	imdone	hello
2016-09-22 14:45:24	<--	Haruno (~Haruno@unaffiliated/haruno) has quit (Quit: Leaving)
2016-09-22 14:46:19	imdone	does anyone in here have a decent knowledge of photonics/silicon photonics ?
2016-09-22 14:46:42	-->	davidstone (~davidston@75-166-170-107.hlrn.qwest.net) has joined ##c++
2016-09-22 14:47:15	JustinHitla	imdone: go #hardware #electronics #cs #physics #chemistry #haskell
2016-09-22 14:47:18	<--	NeoGeo64 (~linux@2604:2d80:881a:0:b4a3:be16:d6fd:8559) has quit (Remote host closed the connection)
2016-09-22 14:47:31	-->	chiken (~chiken@60-242-215-61.static.tpgi.com.au) has joined ##c++
2016-09-22 14:47:44	imdone	yeah but i actually wanted to ask a question regarding c++
2016-09-22 14:47:52	-->	Haruno (~Haruno@unaffiliated/haruno) has joined ##c++
2016-09-22 14:48:00	imdone	someone who's at least familiar with photonics
2016-09-22 14:48:04	JustinHitla	then ask it here
2016-09-22 14:48:10	-->	ghostlight (~ghostligh@ec2-54-187-97-144.us-west-2.compute.amazonaws.com) has joined ##c++
2016-09-22 14:48:39	-->	jxv (~jxv@cpe-108-185-163-38.socal.res.rr.com) has joined ##c++
2016-09-22 14:49:06	-->	casscode__ (~bru@41.53.130.49) has joined ##c++
2016-09-22 14:49:09	<--	p4trix (~p4trix@46.26.255.185) has quit (Read error: Connection reset by peer)
2016-09-22 14:49:38	-->	Cppcon2016 (~cplusplus@ip-64-134-130-1.public.wayport.net) has joined ##c++
2016-09-22 14:49:42	<--	casscode_ (~bru@41.53.130.49) has quit (Ping timeout: 264 seconds)
2016-09-22 14:49:47	imdone	thing is, in my second year of university, on a module called 'physical electronics' we have a few courses which we can choose to attend
2016-09-22 14:50:19	imdone	and my plan is to learn and study photonics specifically
2016-09-22 14:50:19		[14:50]
2016-09-22 14:50:33	imdone	one of the courses i can choose is a c++ programming
2016-09-22 14:51:23	imdone	and while i've programmed quite a bit on c already, i'm not yet sure whether c++ will have effect, or rather, will it help with what i'm about to study
2016-09-22 14:51:25	 *	Cppcon2016 just saw a presentation from Griwes. do you remember him?
2016-09-22 14:51:42	<--	tachoknight_ (~tachoknig@c-73-246-129-13.hsd1.il.comcast.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-22 14:51:45	-->	CAPITANOOO (~CAPITANOO@host122-156-static.117-2-b.business.telecomitalia.it) has joined ##c++
2016-09-22 14:52:14	imdone	i really have no idea where to ask this, so i tried here
2016-09-22 14:52:30	imdone	any help is appreciated
2016-09-22 14:52:36	Cppcon2016	!general
2016-09-22 14:52:37	nolyc	##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2016-09-22 14:53:27	<--	de-facto (~de-facto@unaffiliated/de-facto) has quit (Ping timeout: 276 seconds)
2016-09-22 14:54:45	<--	Haruno (~Haruno@unaffiliated/haruno) has quit (Quit: Bye)
2016-09-22 14:55:24	<--	casscode__ (~bru@41.53.130.49) has quit (Ping timeout: 244 seconds)
2016-09-22 14:55:41	<--	tesuji (~tesuji@unaffiliated/tesuji) has quit (Read error: Connection reset by peer)
2016-09-22 14:55:43	<--	salamanderrake (~quassel@v-216-52-148-169.unman-vds.premium-chicago.nfoservers.com) has quit (Ping timeout: 265 seconds)
2016-09-22 14:55:45	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 265 seconds)
2016-09-22 14:55:49	gp5st	is what I'm doing here clever or horrible? I'm trying to enforce the stack depth and a rule that an output can only be set once at compile time. https://github.com/jimktrains/uil/blob/master/LadderRung.h
2016-09-22 14:56:42	gp5st	those static asserts can probably be turned into a an enable_if
2016-09-22 14:57:58	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-22 14:58:35	<--	fedepad (~fedepad@p4FE10D52.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-09-22 14:58:49	-->	tesuji (~tesuji@unaffiliated/tesuji) has joined ##c++
2016-09-22 14:58:53	<--	systemfault (~rcyr@unaffiliated/rcyr) has quit (Quit: Bye!)
2016-09-22 14:59:03	imdone	this channel is deserted af
2016-09-22 14:59:41	gp5st	imdone: or, like all IRC channels, it's quite sometimes
2016-09-22 15:00:03	imdone	that's sad
2016-09-22 15:00:10	-->	andyhuzhill (~Thunderbi@14.23.45.178) has joined ##c++
2016-09-22 15:00:55	gp5st	imdone: you're also not asking a real question. The answer is both yes and no, but really "It depends on what the people you're working with use." FORTRAN is still in use in scientific circles; I had to learn it myself at one point. C and C++ have found usage as well.  Things like python (with numpy) is also finding a good bit of usage
2016-09-22 15:01:53	Cppcon2016	lol, I was banned from #programming because I was talking about the Cppcon. it looks like C++ is not popular there
2016-09-22 15:02:03	<--	k_j (~no@151.42.78.158) has quit (Ping timeout: 240 seconds)
2016-09-22 15:02:06	imdone	thanks
2016-09-22 15:02:18	-->	grako (~grako@host86-163-229-238.range86-163.btcentralplus.com) has joined ##c++
2016-09-22 15:02:30	gp5st	Cppcon2016: were you just kicked from -general too?
2016-09-22 15:02:47	Cppcon2016	that I never got figured out
2016-09-22 15:02:47	et	gp5st: don't play audience
2016-09-22 15:03:03	Cppcon2016	I started getting banned from there since the last year and no single op told me why
2016-09-22 15:03:23	pragma-	can we ban Cppcon2016 for spamming?
2016-09-22 15:03:25	gp5st	et: audience?
2016-09-22 15:03:36	et	for the troll.
2016-09-22 15:03:38	Cppcon2016	anyway, Cppcon is really good. they aced it this time
2016-09-22 15:03:38	-->	casscode_ (~bru@41.53.130.49) has joined ##c++
2016-09-22 15:03:47	gp5st	et: ah, I didn't realize; sorry
2016-09-22 15:03:52	SlashLife	Cppcon2016: Still not impressed.
2016-09-22 15:03:59	 *	Cppcon2016 is impressed
2016-09-22 15:04:37	Cppcon2016	it is nice shaking hands with Bjarne Stroustroup, Herb Sutter, Chandler, etc.
2016-09-22 15:05:13	<--	Cabanossi (~Cabanossi@p5DD7BA7F.dip0.t-ipconnect.de) has quit (Ping timeout: 248 seconds)
2016-09-22 15:05:23	Cppcon2016	sometimes Jon Kalb joins this channel too
2016-09-22 15:05:23		[15:05]
2016-09-22 15:05:31	-->	uboot__ (~moon@x4dbaaedf.dyn.telefonica.de) has joined ##c++
2016-09-22 15:05:33	SlashLife	If that's what you need in your life: Good for you. Now ... this is the third channel I see you on and you're *STILL* off topic.
2016-09-22 15:05:56	Griwes	Cppcon2016: who are you? :P
2016-09-22 15:06:09	Cppcon2016	nice presentation, Griwes . it is nice to finally see you again
2016-09-22 15:06:16	Cppcon2016	and you are way nicer in person than on IRC
2016-09-22 15:06:21	et	if you reply to him, you're as bad as he is
2016-09-22 15:06:26	-->	Haruno (~Haruno@unaffiliated/haruno) has joined ##c++
2016-09-22 15:06:41	Cppcon2016	I loved the lesson on variadic templates
2016-09-22 15:07:02	gp5st	anyway, I'm proud of that file, though I am a little scared by it
2016-09-22 15:07:16	Cppcon2016	btw, what happens with your variant state after an exception is thrown during assignment?
2016-09-22 15:07:27	Cppcon2016	I was about to ask that question, but I just forgot
2016-09-22 15:07:59	<--	CAPITANOOO (~CAPITANOO@host122-156-static.117-2-b.business.telecomitalia.it) has quit (Quit: CAPITANOOO)
2016-09-22 15:08:00	Griwes	Cppcon2016: in the code in the slides I completely ignore that
2016-09-22 15:08:18	Cppcon2016	I know. I am asking about your current code in your lib
2016-09-22 15:08:23	Griwes	If you want to see how I handle that in real code, see my github. :P
2016-09-22 15:08:32	Cppcon2016	you claimed you did not like std::variant "empty" state
2016-09-22 15:08:33	Griwes	I require nothrow movability.
2016-09-22 15:08:34	gp5st	I'm not sure if I'm using or abusing the templates
2016-09-22 15:08:37	gp5st	I need to find a F/OSS C++ project to work on to see how people really use the language, outside of my own use-cases on an 8bit microcontroller
2016-09-22 15:09:03	Cppcon2016	Griwes, ok. you require nothrow. that explains it
2016-09-22 15:09:03	Griwes	So if copy can throw, I move the old value out
2016-09-22 15:09:13	Cppcon2016	ooohh you have double buffer
2016-09-22 15:09:15	Cppcon2016	:(
2016-09-22 15:09:44	<--	uboot_ (~moon@x4dbac248.dyn.telefonica.de) has quit (Ping timeout: 265 seconds)
2016-09-22 15:09:45	Cppcon2016	that might be bad if your variant holds large values
2016-09-22 15:10:00	-->	mmhun (~anonymous@mobile-130-126-255-91.near.illinois.edu) has joined ##c++
2016-09-22 15:10:06	<--	casscode_ (~bru@41.53.130.49) has quit (Ping timeout: 264 seconds)
2016-09-22 15:10:37	Cppcon2016	anyway, it is your decision. thanks for the presentation. it really helped me
2016-09-22 15:10:56	Griwes	No
2016-09-22 15:11:03	<--	chiken (~chiken@60-242-215-61.static.tpgi.com.au) has quit (Quit: Leaving)
2016-09-22 15:11:05	Griwes	I don't have double buffer
2016-09-22 15:11:16	Griwes	I move out onto the stack
2016-09-22 15:11:29	Griwes	Copy construct
2016-09-22 15:11:38	-->	casscode_ (~bru@41.53.130.49) has joined ##c++
2016-09-22 15:11:41	Griwes	If that fails I move back into the buffer
2016-09-22 15:11:56	Cppcon2016	well, you don't want to put arrays or large aggregates into your variant, though
2016-09-22 15:12:01	Cppcon2016	because you are doing double copy
2016-09-22 15:12:32	Cppcon2016	so your variant is more tailored to movable or small types :)
2016-09-22 15:12:36	<--	jxv (~jxv@cpe-108-185-163-38.socal.res.rr.com) has quit (Quit: Leaving)
2016-09-22 15:12:45	-->	jaafar (~quassel@50-206-78-205-static.hfc.comcastbusiness.net) has joined ##c++
2016-09-22 15:13:12	<--	shirty (~shirty@109.131.156.130) has quit (Ping timeout: 265 seconds)
2016-09-22 15:13:20	<--	JustinHitla (~JustinHit@unaffiliated/justinhitla) has left ##c++ ("yes, I eat clowns on breakfast, I find them taste funny")
2016-09-22 15:14:08	-->	Cabanossi (~Cabanossi@93.215.172.97) has joined ##c++
2016-09-22 15:14:18	Cppcon2016	wondering if I should go to the lightning talks again
2016-09-22 15:15:33	gp5st	I am curious if moving my stack between each one would be a prudent thing to do. Using the return value more than once isn't an allowed thing to do (though I'm not sure how to enforce _that_ at compile time)
2016-09-22 15:15:47	-->	vralphv (~vralp@d137-186-58-40.abhsia.telus.net) has joined ##c++
2016-09-22 15:15:54	-->	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2016-09-22 15:16:02	<--	magnicida (~raskolnik@2a02:8109:8c80:231:ea39:dfff:fe4d:275b) has quit (Ping timeout: 265 seconds)
2016-09-22 15:16:05	Cppcon2016	next year I will gonna present something
2016-09-22 15:16:33	Cppcon2016	gp5st, where is the code again?
2016-09-22 15:16:39	-->	Stanley00 (~Stanley_0@unaffiliated/stanley00) has joined ##c++
2016-09-22 15:16:42	<--	casscode_ (~bru@41.53.130.49) has quit (Ping timeout: 264 seconds)
2016-09-22 15:17:43	<--	Markow (~Markow@176.122.215.103) has quit (Ping timeout: 255 seconds)
2016-09-22 15:18:39	-->	BaneAliens (uid112512@gateway/web/irccloud.com/x-rlmjgdbataeekhdg) has joined ##c++
2016-09-22 15:18:41	gp5st	https://github.com/jimktrains/uil/blob/master/LadderRung.h example usage at https://github.com/jimktrains/uil/blob/master/test.cc
2016-09-22 15:19:29	Cppcon2016	gaaah
2016-09-22 15:19:41	-->	casscode_ (~bru@41.53.130.49) has joined ##c++
2016-09-22 15:19:58	Cppcon2016	you can use enable_if_v
2016-09-22 15:20:03	kalven	Cppcon2016: you're banned from ##c++-general because your attitude isn't acceptable.
2016-09-22 15:20:36	Cppcon2016	finally someone is talking!!! which attitude?
2016-09-22 15:20:36		[15:20]
2016-09-22 15:20:36	Cppcon2016	I think you just banned me because you don't like me for some stupid reason
2016-09-22 15:20:46	gp5st	oi
2016-09-22 15:21:09	gp5st	boost is too large for me
2016-09-22 15:21:20	gp5st	(i have 32k of space, take a little)
2016-09-22 15:21:27	Cppcon2016	and when you finally got op there, you decided to take your sweet nerd revenge on me :-)
2016-09-22 15:22:07	Cppcon2016	boost?
2016-09-22 15:22:10	kalven	you've been banned from this channel too
2016-09-22 15:22:19	Cppcon2016	nope
2016-09-22 15:22:47	 *	gp5st rolls his eyes
2016-09-22 15:23:02	sujeet	i often have to deal with polymorphic functors, and i can't tell which syntax is less ugly: (*baseftor)(params) or baseftor->operator()(params). is there ever going to be a nicer way to do this
2016-09-22 15:23:04	sujeet	?
2016-09-22 15:23:07	Cppcon2016	don't try to cover your silly behavior. that is definitely not a thing that a Googler would do
2016-09-22 15:23:07	Cppcon2016	gp5st, sorry, enable_if_t
2016-09-22 15:23:38	Cppcon2016	gp5st, unless you can't use C++14
2016-09-22 15:23:39	sujeet	obviously baseftor->do_the_thing() is best, but operator() is more generic
2016-09-22 15:23:39	-->	SunnyD (~SunnyD@cpe-72-178-78-211.hot.res.rr.com) has joined ##c++
2016-09-22 15:24:09	<--	casscode_ (~bru@41.53.130.49) has quit (Ping timeout: 244 seconds)
2016-09-22 15:24:40	<--	KAHR-Alpha (~Alpha@AReims-652-1-187-168.w92-142.abo.wanadoo.fr) has quit (Ping timeout: 260 seconds)
2016-09-22 15:25:03	<--	xcor (~xcor@2a02:c7d:c07:7f00:5dce:636a:ea27:b411) has quit (Quit: No Ping reply in 180 seconds.)
2016-09-22 15:25:04	gp5st	Cppcon2016: I havn't checked, but I know c++11 works for my target
2016-09-22 15:25:08	gp5st	I havn't tried 14 yet
2016-09-22 15:25:10	Cppcon2016	gp5st, do you need all these inline attributes?
2016-09-22 15:25:38	gp5st	Cppcon2016: unless I want a copy of the function for each instantiation of the type. I talk about that in the class comments
2016-09-22 15:26:08	Cppcon2016	I've seen weirder things done in the cppcon presentations and all they were optimized out automatically
2016-09-22 15:26:16	Cppcon2016	when using const or constexpr
2016-09-22 15:26:28	-->	divno (~divno@unaffiliated/divno) has joined ##c++
2016-09-22 15:26:30	gp5st	I have 32k, I can't have it creating a new function each time I add a rung to my ladder
2016-09-22 15:26:40	Cppcon2016	they are my new rule of thumb now
2016-09-22 15:26:50	SlashLife	gp5st: Is this a || b || (c && d)?
2016-09-22 15:26:50	Cppcon2016	everything that can be const or constexpr will be
2016-09-22 15:26:52	Cppcon2016	and the compiler will take care of the rest
2016-09-22 15:26:52	gp5st	my inputs aren't const, since they're read from the environment
2016-09-22 15:27:04	gp5st	SlashLife: is what?
2016-09-22 15:27:19	SlashLife	https://github.com/jimktrains/uil/blob/master/LadderRung.h#L51
2016-09-22 15:27:26	Cppcon2016	SlashLife, you should try cppcon next year :)
2016-09-22 15:27:28	-->	xcor (~xcor@2a02:c7d:c07:7f00:a520:9d73:ddb4:f629) has joined ##c++
2016-09-22 15:27:36	gp5st	Cppcon2016: also nice for embedded work because it then uses rom, not ram. 2k of ram
2016-09-22 15:27:56	SlashLife	Cppcon2016: Sure. You get me a plane ticket and the assurance that I won't be seized on entering the country.
2016-09-22 15:28:08	gp5st	SlashLife: ah, yes,
2016-09-22 15:28:21	Cppcon2016	if you aren't a criminal, then I assure you :)
2016-09-22 15:28:42	SlashLife	Otherwise I'll happily stick to European conferences.
2016-09-22 15:28:52	gp5st	SlashLife: not even citizens of the US have that assurance
2016-09-22 15:28:58	Cppcon2016	we welcome european friends here
2016-09-22 15:29:03	SlashLife	gp5st: Indeed.
2016-09-22 15:29:05	Cppcon2016	<3
2016-09-22 15:29:25	<--	RazielZ (~Raziel@unaffiliated/raziel) has quit (Ping timeout: 255 seconds)
2016-09-22 15:29:44	Cppcon2016	also lots of the presenters weren't americans, so it seems the trips worked well for them :)
2016-09-22 15:30:09	gp5st	SlashLife: but yeah, thats a || b ( c && d )  represented in LadderLogic (well, a textual representation of ladder logic)
2016-09-22 15:30:22	-->	joehunt5888 (~joehunt@115.164.86.100) has joined ##c++
2016-09-22 15:30:36	SlashLife	I'm not sure what ladder logic is. (:
2016-09-22 15:30:42	<--	Nome (68db6b52@gateway/web/freenode/ip.104.219.107.82) has quit (Ping timeout: 240 seconds)
2016-09-22 15:30:56	SlashLife	... but Google seems to know.
2016-09-22 15:30:57	SlashLife	*reads*
2016-09-22 15:31:36	<--	Henke37 (~Henrik@81-227-16-59-no133.bredband.skanova.com) has quit (Quit: ERR_SHUTDOWN)
2016-09-22 15:31:48	gp5st	SlashLife: used to represent relay logic (https://en.wikipedia.org/wiki/Ladder_logic) before microelectronics, and just kind of became the standard for PLCs (https://en.wikipedia.org/wiki/Programmable_logic_controller)
2016-09-22 15:31:53	gp5st	oh, gotchya, sorry
2016-09-22 15:33:30	<--	jkhl (~j@host86-182-59-122.range86-182.btcentralplus.com) has quit (Ping timeout: 264 seconds)
2016-09-22 15:33:40	-->	casscode_ (~bru@41.53.130.49) has joined ##c++
2016-09-22 15:33:44	-->	cplusplus_ (~cplusplus@h-67-102-175-59.sttn.wa.globalcapacity.com) has joined ##c++
2016-09-22 15:33:45	-->	ctnguyen (~chau@2606:6000:fd00:bc00:80a0:db6b:9dfc:dc5c) has joined ##c++
2016-09-22 15:34:14	<--	navidr (uid112413@gateway/web/irccloud.com/x-coziiqylcsnishov) has quit (Quit: Connection closed for inactivity)
2016-09-22 15:34:24	<--	carado (~carado@bea44-1-78-193-226-57.fbxo.proxad.net) has quit (Ping timeout: 265 seconds)
2016-09-22 15:34:43	--	cplusplus_ is now known as Cppcon2016_
2016-09-22 15:35:00	<--	Cppcon2016 (~cplusplus@ip-64-134-130-1.public.wayport.net) has quit (Ping timeout: 244 seconds)
2016-09-22 15:35:46	-->	pticochon2 (~smith@x5ce1e57f.dyn.telefonica.de) has joined ##c++
2016-09-22 15:35:46		[15:35]
2016-09-22 15:36:10	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 255 seconds)
2016-09-22 15:36:43	-->	casscode__ (~bru@41.53.130.49) has joined ##c++
2016-09-22 15:36:50	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-22 15:37:00	-->	RazielZ (~Raziel@unaffiliated/raziel) has joined ##c++
2016-09-22 15:37:19	<--	fluter (~fluter@fedora/fluter) has quit (Ping timeout: 265 seconds)
2016-09-22 15:38:54	<--	casscode_ (~bru@41.53.130.49) has quit (Ping timeout: 264 seconds)
2016-09-22 15:39:05	<--	pticochon (~smith@unaffiliated/pticochon) has quit (Ping timeout: 240 seconds)
2016-09-22 15:39:11	-->	casscode_ (~bru@41.53.130.49) has joined ##c++
2016-09-22 15:39:44	-->	xaanimus (~user@nat-128-84-124-0-161.cit.cornell.edu) has joined ##c++
2016-09-22 15:41:42	-->	moony22 (moony22@wikipedia/Moony22) has joined ##c++
2016-09-22 15:41:43	<--	l2esonance (~l2esonanc@c-73-223-132-245.hsd1.ca.comcast.net) has quit (Ping timeout: 265 seconds)
2016-09-22 15:41:54	<--	casscode__ (~bru@41.53.130.49) has quit (Ping timeout: 264 seconds)
2016-09-22 15:42:05	k_sze[work]	What's the difference between `namespace fs = std::filesystem` and `using fs = std::filesystem`?
2016-09-22 15:42:55	-->	l2esonance (~l2esonanc@c-73-223-132-245.hsd1.ca.comcast.net) has joined ##c++
2016-09-22 15:43:37	kalven	the first makes a namespace alias, the second doesn't work.
2016-09-22 15:43:54	<--	zwliew (uid161395@gateway/web/irccloud.com/x-uwwkknyniebhnegs) has quit (Quit: Connection closed for inactivity)
2016-09-22 15:44:14	--	Cppcon2016_ is now known as Cppcon2016
2016-09-22 15:44:19	-->	casscode__ (~bru@41.53.130.49) has joined ##c++
2016-09-22 15:44:45	k_sze[work]	kalven: the second is only for importing specific *object* from a namespace?
2016-09-22 15:44:47	-->	Ropeney (~Ropeney@tank.mindvision.com.au) has joined ##c++
2016-09-22 15:44:53	<--	NoIdent (~NoIdent@dslb-188-101-011-143.188.101.pools.vodafone-ip.de) has quit (Quit: Leaving)
2016-09-22 15:44:54	<--	casscode_ (~bru@41.53.130.49) has quit (Ping timeout: 264 seconds)
2016-09-22 15:44:56	<--	casscode__ (~bru@41.53.130.49) has quit (Read error: Connection reset by peer)
2016-09-22 15:44:57	-->	al1o (~al1o@236.red-88-16-49.dynamicip.rima-tde.net) has joined ##c++
2016-09-22 15:45:04	-->	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-22 15:45:13	Cppcon2016	k_sze[work], using blah = std::filesytem::SOMETHING;
2016-09-22 15:45:32	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-22 15:45:52	Cppcon2016	and  using std::filesystem::SOMETHING;
2016-09-22 15:46:05	Cppcon2016	the former is a type alias. the latter imports a name into the current namespace
2016-09-22 15:46:16	Cppcon2016	I mean, the current SCOPE
2016-09-22 15:46:28	<--	nwkj86 (~nwkj86@144.66.6.51.dyn.plus.net) has quit (Remote host closed the connection)
2016-09-22 15:46:34	<--	DingoSaar (~hagen@pD9E09BA8.dip0.t-ipconnect.de) has quit (Ping timeout: 240 seconds)
2016-09-22 15:46:38	Cppcon2016	k_sze[work], check cppreference.com - search for the keyword USING
2016-09-22 15:46:40	-->	IWishIKnew (~IWishIKne@68-184-181-81.dhcp.ftwo.tx.charter.com) has joined ##c++
2016-09-22 15:46:53	-->	nwkj86 (~nwkj86@144.66.6.51.dyn.plus.net) has joined ##c++
2016-09-22 15:46:53	-->	casscode_ (~bru@41.53.130.49) has joined ##c++
2016-09-22 15:47:18	-->	fluter (~fluter@fedora/fluter) has joined ##c++
2016-09-22 15:50:38	-->	fstd_ (~fstd@unaffiliated/fisted) has joined ##c++
2016-09-22 15:52:00	-->	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has joined ##c++
2016-09-22 15:52:00		[15:52]
2016-09-22 15:52:00	nikki93	join
2016-09-22 15:52:02	<--	hyacinth (~yhyacinth@61.111.255.109) has quit (Remote host closed the connection)
2016-09-22 15:52:22	nikki93	hmm I still need to learn the 'new ...' param stuff
2016-09-22 15:52:24	nikki93	i mean new '...' param
2016-09-22 15:52:46	-->	jshjsh (~jshjsh@172.56.38.166) has joined ##c++
2016-09-22 15:52:52	nikki93	I'm trying to do a thing where given a vector of length N you call a given in function with v[0], v[1], ... as params, depending on the length of the argument list in the func
2016-09-22 15:53:15	Cppcon2016	can't :)
2016-09-22 15:53:28	<--	DjBonadoobie (~DjBonadoo@gateway/vpn/privateinternetaccess/djbonadoobie) has quit (Quit: Leaving)
2016-09-22 15:53:34	Cppcon2016	you can do something different with variadic templates, though
2016-09-22 15:53:56	Cppcon2016	you can do tuple unpacking in C++14 or use apply in C++17
2016-09-22 15:53:59	nikki93	http://en.cppreference.com/w/cpp/utility/integer_sequence seems handly
2016-09-22 15:54:11	Cppcon2016	these are the solutions I know
2016-09-22 15:54:17	Cppcon2016	with a vector? nope
2016-09-22 15:54:21	nikki93	aww
2016-09-22 15:54:25	<--	nikki93_ (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-22 15:54:36	nikki93	oh no I mean like, we know statically what the length is cuz of the function paramlist
2016-09-22 15:54:43	<--	fstd (~fstd@unaffiliated/fisted) has quit (Ping timeout: 265 seconds)
2016-09-22 15:54:43	--	fstd_ is now known as fstd
2016-09-22 15:54:54	-->	Carbonflux (~Bob@174-24-244-113.tukw.qwest.net) has joined ##c++
2016-09-22 15:55:01	nikki93	I'm trying to do this thing where a lib gives me args as a vector, and I want to just bind it to a lambda function that impls the function
2016-09-22 15:55:03	-->	rd4455 (~rd45@lib-02-subnet-171.rdns.cenic.net) has joined ##c++
2016-09-22 15:55:10	-->	casscode__ (~bru@41.53.130.49) has joined ##c++
2016-09-22 15:55:16	nikki93	the types are ok because they autoconvert (the conversion constructors aren't explicit)
2016-09-22 15:55:28	Cppcon2016	nope. vector size is dynamic (aka runtime obtained)
2016-09-22 15:55:42	nikki93	no like the length of the function arglist is known
2016-09-22 15:55:44	<--	casscode_ (~bru@41.53.130.49) has quit (Ping timeout: 265 seconds)
2016-09-22 15:55:50	<--	JoshS (~jshjsh@172.56.38.166) has quit (Ping timeout: 244 seconds)
2016-09-22 15:55:53	Cppcon2016	and there are no current facilities to determine the number of arguments of a function
2016-09-22 15:56:21	-->	CEnnis91 (uid3543@gateway/web/irccloud.com/x-oxevuyibxxpgyova) has joined ##c++
2016-09-22 15:56:26	nikki93	you can sort of fake it with a weird macro
2016-09-22 15:56:34	Cppcon2016	you have to use tuples or structs to achieve that... or annotate your shit with macros :)
2016-09-22 15:56:35	nikki93	that plus index_sequence can work i think
2016-09-22 15:56:38	--	jshjsh is now known as JoshS
2016-09-22 15:57:04	<--	skweek (~skweek@2607:fe50:0:810b:ed75:37b:d904:8135) has quit (Ping timeout: 272 seconds)
2016-09-22 15:57:16	nikki93	like if you have a macro that returns like __VA_ARGS__, 5, 4, 3, 2, 1
2016-09-22 15:57:33	Cppcon2016	Griwes, help him :D
2016-09-22 15:57:33	nikki93	and then you put that in a macro that returns the 6th arg
2016-09-22 15:57:41	nikki93	you'll get the length of the list
2016-09-22 15:57:47	-->	chiken (~chiken@60-242-215-61.static.tpgi.com.au) has joined ##c++
2016-09-22 15:58:01	<--	UnlikeSuika_mobi (~UnlikeSui@115.93.122.107) has quit (Ping timeout: 248 seconds)
2016-09-22 15:58:04	-->	Jiggunjer (~Jiggunjer@unaffiliated/jiggunjer) has joined ##c++
2016-09-22 15:58:27	chiken	how would i go about parsing multi-dimensional arrays to functions?
2016-09-22 15:59:04	Cppcon2016	explain your problem better
2016-09-22 15:59:05	nikki93	lol there is a sizeof...(x) operator
2016-09-22 15:59:22	chiken	void read_array(const double arr[][], int size);
2016-09-22 15:59:22	Cppcon2016	nikki93, that is for parameter packs only
2016-09-22 15:59:26	chiken	will that work?
2016-09-22 15:59:37	-->	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has joined ##c++
2016-09-22 15:59:39	Cppcon2016	chiken, can you use C++11 arrays instead?
2016-09-22 15:59:40	nikki93	yeah exactly I'm doing
2016-09-22 15:59:48	-->	calq (~calq@c-71-205-14-244.hsd1.co.comcast.net) has joined ##c++
2016-09-22 15:59:58	<--	SunnyD (~SunnyD@cpe-72-178-78-211.hot.res.rr.com) has quit (Quit: ChatZilla 0.9.90.1 [Firefox 30.0/20140605174243])
2016-09-22 15:59:59	chiken	Cppcon2016, learning c++; haven't gotten there yet
2016-09-22 16:00:05	<--	UnlikeSuika (~UnlikeSui@115.93.122.107) has quit (Ping timeout: 250 seconds)
2016-09-22 16:00:08	chiken	Cppcon2016, what about c-style?
2016-09-22 16:00:12	Cppcon2016	chiken, if you don't use std::array or std::vector, you will have a hard time
2016-09-22 16:00:20	Cppcon2016	C arrays are confusing, they decay to pointers and such
2016-09-22 16:00:28	nikki93	magicFunction(std::vector<V> v, std::function<B(A... a))
2016-09-22 16:00:29	Cppcon2016	learn C++ instead of C
2016-09-22 16:00:29	<--	Jiggunjer_ (~Jiggunjer@unaffiliated/jiggunjer) has quit (Ping timeout: 244 seconds)
2016-09-22 16:00:31	nikki93	so it'll know A... length
2016-09-22 16:00:51	chiken	Cppcon2016, but surely you can use the c-style way right?
2016-09-22 16:00:59	Cppcon2016	chiken, it is super confusing
2016-09-22 16:01:09	chiken	Cppcon2016, can you still explain it to me?
2016-09-22 16:01:12	Cppcon2016	you don't need to learn C to learn C++
2016-09-22 16:01:13	nikki93	magicFunction will call the function with v, we learn length from the function not from the vector
2016-09-22 16:01:25	Cppcon2016	chiken, try /j ##C
2016-09-22 16:01:42	<--	bushido_ (~bushido@unaffiliated/bursihido) has quit (Ping timeout: 276 seconds)
2016-09-22 16:01:47	-->	mangolisk (~mangolisk@S0106848dc7ebaa06.vc.shawcable.net) has joined ##c++
2016-09-22 16:01:48	nikki93	chiken: this channel mostly focuses on cpp specific features tbh, the ##c will help!
2016-09-22 16:02:24	et	chiken: you can't have [][], all sizes except the first have to be known
2016-09-22 16:02:27	Cppcon2016	yes, they are super friendly there :)
2016-09-22 16:03:01	-->	UnlikeSuika_mobi (~UnlikeSui@223.62.172.186) has joined ##c++
2016-09-22 16:03:58	Cppcon2016	template<size_t R, size_t C> void process(std::array<std::array<int,C>,R> const & matrix);
2016-09-22 16:04:13	SlashLife	gp5st: Mhh ... first thing I'm pondering: If you'd switch the MAX_STACK_DEPTH and STACK_DEPTH template parameters, you could skip the STACK_DEPTH=0 argument on variable declaration by defaulting it.
2016-09-22 16:04:33	<--	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has quit (Ping timeout: 240 seconds)
2016-09-22 16:04:47	<--	grako (~grako@host86-163-229-238.range86-163.btcentralplus.com) has quit
2016-09-22 16:05:52	k_sze[work]	Why does this segfault? http://melpon.org/wandbox/permlink/Bwmxb3MdkgLnm2Me
2016-09-22 16:05:54	SlashLife	gp5st: And that being done, you could derive another class from it that would create a stack of the given size and pass it on.
2016-09-22 16:06:01	Cppcon2016	!works
2016-09-22 16:06:02	nolyc	It works it works! Omg omg omg! I mean it compiles. Now what's a segfault?
2016-09-22 16:06:31	SlashLife	Replacing LadderRung<0, 3>(x).FOO().BAR() with LadderRung<3>().FOO().BAR()
2016-09-22 16:06:33	chiken	Cppcon2016, yet so many people use C
2016-09-22 16:06:54	<--	Haruno (~Haruno@unaffiliated/haruno) has quit (Read error: Connection reset by peer)
2016-09-22 16:06:56	chiken	et: thx for answering my question friend
2016-09-22 16:06:58	Cppcon2016	chiken, I don't care :) /j ##C if you have C issues
2016-09-22 16:07:03	-->	skweek (~skweek@2607:fe50:0:810b:ed75:37b:d904:8135) has joined ##c++
2016-09-22 16:07:03		[16:07]
2016-09-22 16:07:12	-->	systemfault (~rcyr@unaffiliated/rcyr) has joined ##c++
2016-09-22 16:07:16	Cppcon2016	k_sze[work], probably melpon does not like filesystem
2016-09-22 16:07:28	Cppcon2016	k_sze[work], try asking in ##boost
2016-09-22 16:07:35	-->	salamanderrake (~quassel@v-216-52-148-169.unman-vds.premium-chicago.nfoservers.com) has joined ##c++
2016-09-22 16:07:42	gp5st	SlashLife: hmm
2016-09-22 16:07:45	<--	mangolisk (~mangolisk@S0106848dc7ebaa06.vc.shawcable.net) has quit (Read error: Connection timed out)
2016-09-22 16:08:08	chiken	Cppcon2016, apparently, you can use some sort of complex polymorphism by parsing pointers around properly in C
2016-09-22 16:08:09	-->	mangolisk (~mangolisk@S0106848dc7ebaa06.vc.shawcable.net) has joined ##c++
2016-09-22 16:08:10	SlashLife	gp5st: Also wondering if it could be of interest / possible to use operator overloading rather than defining opcodes.
2016-09-22 16:08:31	<--	unK_ (~drunK@78.8.105.174) has quit (Quit: KVIrc 4.3.1 Aria http://www.kvirc.net/)
2016-09-22 16:08:40	Cppcon2016	chiken, I think the answer is zero
2016-09-22 16:08:43	<--	UnlikeSuika_mobi (~UnlikeSui@223.62.172.186) has quit (Quit: RIP)
2016-09-22 16:08:46	-->	FreeBirdLjj (~freebirdl@202.119.46.192) has joined ##c++
2016-09-22 16:08:47	<--	EvilPeng1 (~EvilPengu@bur-inet-pa-1.disney.com) has quit (Ping timeout: 265 seconds)
2016-09-22 16:09:00	gp5st	SlashLife: I went the opcode rought because that's how the language is described https://en.wikipedia.org/wiki/Instruction_list
2016-09-22 16:09:05	SlashLife	Okay
2016-09-22 16:09:21	chiken	Cppcon2016, ?
2016-09-22 16:09:25	-->	UnlikeSuika_mobi (~UnlikeSui@1.210.159.145) has joined ##c++
2016-09-22 16:09:26	Cppcon2016	yes
2016-09-22 16:09:39	SlashLife	nvm then. It just feels unnatural for me, that's why I asked. If it is modelled after an existing language, then this is obviously the correct way to do it.
2016-09-22 16:09:57	-->	YungRaj (~YungRaj@50-24-71-159.bcstcmtk01.res.dyn.suddenlink.net) has joined ##c++
2016-09-22 16:10:03	gp5st	SlashLife: I'm modeling it after the linked pdf at the bottom. I like the idea about swapping the params
2016-09-22 16:10:42	<--	dj_pi (~dj@c-73-191-212-56.hsd1.mi.comcast.net) has quit (Ping timeout: 264 seconds)
2016-09-22 16:10:46	<--	Kn|t3 (~agarwalvi@49.207.53.8) has quit (Quit: Kn|t3)
2016-09-22 16:11:48	<--	chiken (~chiken@60-242-215-61.static.tpgi.com.au) has quit (Quit: Leaving)
2016-09-22 16:11:58	introom	I did a `vector<const int> a', and it failed.
2016-09-22 16:12:03	SlashLife	I was just thinking about something like: Ladder<3>() = (...), (OUT(S0wa) = IN(T0) && IN(T1e) && !IN(Tm1w)), (...); which feels more natural to me - but then again you notice that I don't work in that segment. :)
2016-09-22 16:12:06	Cppcon2016	introom, thank god
2016-09-22 16:12:16	-->	UnripeSuica_mobi (~UnlikeSui@223.62.172.186) has joined ##c++
2016-09-22 16:12:33	introom	google says for vector<T>, the T should be copy assignable.  But I found it no where in the yr14 standard.
2016-09-22 16:12:37	Cppcon2016	introom, now go to cppreference.com and search for vector. then check what are the requirements for T
2016-09-22 16:12:48	SlashLife	Not sure what you mean by swapping parameters, though.
2016-09-22 16:13:10	catern	hello ##c++, I am often passing around things of char *, typically pointers into arrays of data
2016-09-22 16:13:15	gp5st	SlashLife: having STACK_DEPTH be the second param so that it can be initialized
2016-09-22 16:13:24	SlashLife	Oh
2016-09-22 16:13:29	Cppcon2016	catern, I am so sorry for you
2016-09-22 16:13:29	introom	Cppcon2016: I checked. for (until 11, it has the copyassignable requirement, but did you look at the since 17 stuff ?
2016-09-22 16:13:30	catern	is there some general purpose replacement for doing that in C++?
2016-09-22 16:13:36	SlashLife	I thought you meant something about the language. x)
2016-09-22 16:13:52	Cppcon2016	introom, probably it is there somewhere :)
2016-09-22 16:14:25	Cppcon2016	catern, nothing on C++ is "general purpose do it solve everything"
2016-09-22 16:14:30	Cppcon2016	each case is treated separately
2016-09-22 16:14:49	Cppcon2016	catern, try using strings, vectors, etc
2016-09-22 16:14:49	introom	Cppcon2016: I didn't find it. Either in cppref or the iso14 standard, so I asked here.
2016-09-22 16:14:57	Cppcon2016	cpprefernce has it
2016-09-22 16:15:15	Cppcon2016	and the std has it too, but I am not going there to look it up for you :D
2016-09-22 16:15:18	-->	bushido_ (~bushido@unaffiliated/bursihido) has joined ##c++
2016-09-22 16:15:23	<--	al1o (~al1o@236.red-88-16-49.dynamicip.rima-tde.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-22 16:15:53	SlashLife	Well, theoretically you could just quickly derive from it as well: template<size_t MAX_STACK_DEPTH> struct Ladder : LadderRung<0, MAX_STACK_DEPTH> { Ladder(): LadderRung<0, MAX_STACK_DEPTH>(stack) {}; Ladder(const Ladder &)=delete; private: Pentastate state[MAX_STACK_DEPTH]; }
2016-09-22 16:15:57	introom	Cppcon2016: just admit you didn't find it. ;)
2016-09-22 16:16:08	Cppcon2016	I admit only zero
2016-09-22 16:16:13	<--	elnormous (~elnormous@87.110.129.37) has quit (Remote host closed the connection)
2016-09-22 16:16:31	<--	UnlikeSuika_mobi (~UnlikeSui@1.210.159.145) has quit (Ping timeout: 265 seconds)
2016-09-22 16:16:53	gp5st	constructor=delete always threw me for a loop; what's the meaning of it?
2016-09-22 16:18:01	ubsan	Cppcon2016: pls upload C++ for C programmers soon
2016-09-22 16:18:16	ubsan	I've got some C programmers I need to introduce C++ to
2016-09-22 16:18:17	Cppcon2016	cppcon had an amazing talk about it
2016-09-22 16:18:22	SlashLife	Just was my easy way out - it doesn't make sense to copy this thing, as that would copy the stack, too, but you'd lose all the instructions you put onto it afterwards.
2016-09-22 16:18:31	SlashLife	It just means that the constructor will not be available, though.
2016-09-22 16:18:34	Cppcon2016	how to help C programmers to embrace C++
2016-09-22 16:18:39	SlashLife	The pre-C++11 way would be to make it private.
2016-09-22 16:18:42	ubsan	Cppcon2016: yeah, I know
2016-09-22 16:18:46	ubsan	Cppcon2016: pls upload
2016-09-22 16:18:54	 *	ubsan wants to watch it
2016-09-22 16:19:02	<--	esas (~esas@unaffiliated/esas) has quit
2016-09-22 16:19:02	SlashLife	The result here just is that the ladder can't be copied and attempting to do so will result in a compile error.
2016-09-22 16:19:08	Cppcon2016	we, fellow attendees, need some leverage, you know :)
2016-09-22 16:19:10	gp5st	oooh
2016-09-22 16:19:12	gp5st	hmmm
2016-09-22 16:19:17	Cppcon2016	so... you only will be seeing it around one month
2016-09-22 16:19:22	ubsan	nooooooo
2016-09-22 16:19:35	ubsan	C++ is good now :(
2016-09-22 16:21:08	SlashLife	I'm a little bit split minded here, though, because I'm thinking of Boost.Spirit a bit, with the consideration that the ladder and its instructions could possibly be saved and rerun at a later time (using the then current inputs)
2016-09-22 16:21:20	Cppcon2016	yuck yuck
2016-09-22 16:21:46	SlashLife	I'd have to think about how that'd be done, though ... and I don't even know whether that's actually what you'd want to do. :)
2016-09-22 16:21:52	ubsan	I wish I was in bellevue right now
2016-09-22 16:22:17	SlashLife	ubsan: The talks will be uploaded anyway.
2016-09-22 16:22:17		[16:22]
2016-09-22 16:22:25	Cppcon2016	it will take time
2016-09-22 16:22:31	Cppcon2016	until then, I will keep bragging :)
2016-09-22 16:22:39	ubsan	SlashLife: but I want to watch it now :3
2016-09-22 16:22:40	gp5st	SlashLife: boost is too big for an 8bit microcontroller :)
2016-09-22 16:22:44	ubsan	I'm impatient :P
2016-09-22 16:22:46	Cppcon2016	but you can come next year, SlashLife \o/
2016-09-22 16:22:53	catern	hey ##c++, say I have a Thing *p, and I want to pass it to some other function func. should I define void func(Thing *p) and pass it as func(p), or should I define void func(Thing &p) and pass it as func(*p) ????
2016-09-22 16:23:01	catern	which is better style?
2016-09-22 16:23:07	ubsan	catern: depends
2016-09-22 16:23:08	Cppcon2016	catern, the latter
2016-09-22 16:23:09	-->	SiN_Bizkit (~SiN_Bizki@88.204.115.96) has joined ##c++
2016-09-22 16:23:15	ubsan	catern: usually the latter
2016-09-22 16:23:18	catern	ubsan: what does it depend on?
2016-09-22 16:23:19	SlashLife	catern: Depends on your assumptions about p within func.
2016-09-22 16:23:24	ubsan	catern: ^
2016-09-22 16:23:24	Cppcon2016	also it would be great if you had a Thing p instead :)
2016-09-22 16:23:24	catern	btw, the argument will also be const
2016-09-22 16:23:29	k_sze[work]	Cppcon2016: right, looks like it's just melpon not liking filesystem.
2016-09-22 16:23:36	<--	doppel (~chatzilla@ip70-189-197-158.lv.lv.cox.net) has quit (Quit: ChatZilla 0.9.92 [Firefox 48.0.2/20160823121617])
2016-09-22 16:23:37	catern	Cppcon2016: unfortunately I don't
2016-09-22 16:23:37	SlashLife	If you can't deal with null pointers, get it by reference and let the caller deal with it.
2016-09-22 16:23:48	k_sze[work]	The same snippet compiles and runs fine on my machine.
2016-09-22 16:23:50	catern	OK, that is fair
2016-09-22 16:23:51	ubsan	s/can't/don't want to/
2016-09-22 16:23:52	SlashLife	If it is optional, you obviously can't take it by reference.
2016-09-22 16:24:03	catern	you've convinced me
2016-09-22 16:24:04	Cppcon2016	avoid pointers :D
2016-09-22 16:24:14	catern	i'll do func(*p) even though that reads as really weird to me
2016-09-22 16:24:23	catern	from my C experience :)
2016-09-22 16:24:34	-->	zwliew (uid161395@gateway/web/irccloud.com/x-zkpsmjzeslvmplyo) has joined ##c++
2016-09-22 16:24:35	ubsan	catern: you should get rid of Thing *p
2016-09-22 16:24:48	ubsan	it should either be Thing &p or std::unique_ptr<Thing> p
2016-09-22 16:24:53	SlashLife	catern: If you aren't absolutely sure that it is not a nullptr, add an assert(p && "must not be NULL") beforehand.
2016-09-22 16:24:59	Cppcon2016	ubsan, https://scontent.xx.fbcdn.net/v/t1.0-9/14344766_10154138005422701_3163467275696567837_n.jpg?oh=6aae79dce1a08f6f06c013a21a1a8c51&oe=5868ECCB
2016-09-22 16:25:10	-->	casscode_ (~bru@41.53.130.49) has joined ##c++
2016-09-22 16:25:11	ubsan	Thing *p looks *very* code-smelly to me in modern c++
2016-09-22 16:25:17	Cppcon2016	or Thing p
2016-09-22 16:25:24	ubsan	Cppcon2016: you make me sad :(
2016-09-22 16:25:30	Cppcon2016	bellevue is beautiful
2016-09-22 16:25:32	ubsan	I miss home
2016-09-22 16:25:39	catern	ubsan: I can't - be thankful that at least it's a Thing *p and not a char *p  :) since I just got it off the network, put it into a char buf[4096], inspected the first few bytes, and cast it to the appropriate type of Thing.
2016-09-22 16:25:42	<--	casscode__ (~bru@41.53.130.49) has quit (Ping timeout: 264 seconds)
2016-09-22 16:25:45	Cppcon2016	I was living in seattle 2 years ago
2016-09-22 16:25:49	ubsan	catern: ewwwwwww
2016-09-22 16:25:49	-->	dj_pi (~dj@c-73-191-212-56.hsd1.mi.comcast.net) has joined ##c++
2016-09-22 16:25:59	catern	ubsan: unless there's some way in that scenario to make it into a Thing p?
2016-09-22 16:26:02	ubsan	catern: ewwwwwwwwwwwwwwwwww
2016-09-22 16:26:06	Cppcon2016	ubland
2016-09-22 16:26:07	SlashLife	!give Cppcon2016 focus
2016-09-22 16:26:08	nolyc	Cppcon2016: ##c++ focuses on C++. Discuss offtopic things elsewhere; ##c++-general or ##c++-social
2016-09-22 16:26:10	catern	hey, that's the reality of network programming!
2016-09-22 16:26:18	<--	vitimiti (~vitimiti@unaffiliated/vitimiti) has quit (Ping timeout: 264 seconds)
2016-09-22 16:26:20	Cppcon2016	network != ubland
2016-09-22 16:26:26	ubsan	catern: that's very UB
2016-09-22 16:26:34	catern	eh?
2016-09-22 16:27:12	ubsan	oh wait, char *
2016-09-22 16:27:13	catern	Thing is just a struct containing primitive field types, doesn't have methods, isn't special at all
2016-09-22 16:27:17	<--	xaxxon__ (~xaxxon@2601:602:9d00:d58b:6cb3:dcf0:4210:6dce) has quit (Quit: Leaving)
2016-09-22 16:27:20	ubsan	it's at least unspecified
2016-09-22 16:27:23	ubsan	because of alignment
2016-09-22 16:27:25	SlashLife	catern: ... and may be misaligned.
2016-09-22 16:27:34	catern	sorry, uh... do you have a better suggestion?
2016-09-22 16:27:38	Cppcon2016	choose your 'ed here
2016-09-22 16:27:51	catern	I mean, you are using a machine that does this same action a million times a second right now...
2016-09-22 16:27:52	Cppcon2016	do proper serialization
2016-09-22 16:27:57	ubsan	catern: Thing thing; memcpy(&thing, buf, 1024);
2016-09-22 16:28:00	Cppcon2016	lol
2016-09-22 16:28:04	nikki93	hmm
2016-09-22 16:28:04	Cppcon2016	memcpy lol
2016-09-22 16:28:06	<--	UnripeSuica_mobi (~UnlikeSui@223.62.172.186) has quit (Quit: RIP)
2016-09-22 16:28:07	nikki93	why doesn't this compile Cppcon2016 http://cpp.sh/2xbd6
2016-09-22 16:28:18	-->	UnlikeSuika_mobi (~UnlikeSui@147.47.141.47) has joined ##c++
2016-09-22 16:28:26	<--	IWishIKnew (~IWishIKne@68-184-181-81.dhcp.ftwo.tx.charter.com) has quit (Quit: GOODBYE)
2016-09-22 16:28:34	<--	nilof (~saolof@92-32-80-134.tn.glocalnet.net) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-09-22 16:28:44	catern	ubsan: a fair try :) but the copy is superfluous
2016-09-22 16:28:50	ubsan	catern: no it isn't
2016-09-22 16:28:53	SlashLife	catern: It leaves a horrible gut feeling, but the correct thing would be to actually create a Thing and memcpy the data from your network buffer into it - IF Thing is a POD type AND you are absolutely certain that it has the same binary representation in memory as it has in the network stream.
2016-09-22 16:28:53	catern	what does it gain me?
2016-09-22 16:28:53	ubsan	because of alignment
2016-09-22 16:29:02	ubsan	you aren't reading misaligned shit?
2016-09-22 16:29:03	Cppcon2016	nikki93, because your vector is a temporary
2016-09-22 16:29:11	Cppcon2016	no
2016-09-22 16:29:13	Cppcon2016	disregard
2016-09-22 16:29:16	ubsan	or do what SlashLife is saying
2016-09-22 16:29:35	SlashLife	Otherwise - give Thing a static unserializing member function ... or constructor.
2016-09-22 16:29:38	Cppcon2016	nikki93, cast your lambda first
2016-09-22 16:29:44	Cppcon2016	to a function pointer
2016-09-22 16:29:45	catern	ubsan: no, i'm not, i'm reading into a stack-allocated buffer which is aligned
2016-09-22 16:29:48	ubsan	or use a union
2016-09-22 16:29:55	Cppcon2016	the error message says the types mismatch
2016-09-22 16:29:57	ubsan	catern: you assume because?
2016-09-22 16:30:06	-->	al1o (~al1o@236.red-88-16-49.dynamicip.rima-tde.net) has joined ##c++
2016-09-22 16:30:17	catern	¯\_(ツ)_/¯ i assume the compiler will give me an aligned buffer on the stack
2016-09-22 16:30:33	catern	i can ensure it is aligned in other ways so it's not a big deal
2016-09-22 16:30:33	<--	CtrlC (~CtrlC@unaffiliated/ctrlc) has quit (Ping timeout: 248 seconds)
2016-09-22 16:30:35	Cppcon2016	nikki93, remember that templates don't like implicit casts much when they are deducing inner types :)
2016-09-22 16:30:36	SlashLife	struct unserialize_tag {}; struct Thing { Thing(unserialize_tag, const char *buffer, size_t buffer_length); };
2016-09-22 16:30:44	<--	nikki93 (~nikki93@c-73-170-252-147.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2016-09-22 16:30:51	catern	SlashLife: sadly, again, that copy is pretty much superfluous
2016-09-22 16:31:19	ubsan	catern: union { char buf[1024]; Thing thing; } buf;
2016-09-22 16:31:23	catern	what are you people even writing in C++ that you can afford to luxurious copy data :)
2016-09-22 16:31:27	catern	luxuriously*
2016-09-22 16:31:30	catern	ubsan: oho!
2016-09-22 16:31:31	ubsan	oh wait, that's UB in C++ isn't it
2016-09-22 16:31:34	ubsan	damnit C++
2016-09-22 16:31:35	catern	now that is actually a good idea
2016-09-22 16:31:37	-->	perrier-jouet (~perrier-j@bas1-montreal30-1177586835.dsl.bell.ca) has joined ##c++
2016-09-22 16:31:38	catern	:)
2016-09-22 16:31:40	-->	NeoGeo64 (~linux@2604:2d80:881a:0:b4a3:be16:d6fd:8559) has joined ##c++
2016-09-22 16:31:44	-->	CtrlC (~CtrlC@unaffiliated/ctrlc) has joined ##c++
2016-09-22 16:31:45	ubsan	well, it's defined in MSVC
2016-09-22 16:31:50	ubsan	and LLVM
2016-09-22 16:31:55	catern	is it actually really super undefined
2016-09-22 16:31:59	ubsan	and gcc probably won't break your code
2016-09-22 16:32:03	<--	divno (~divno@unaffiliated/divno) has quit (Quit: divno)
2016-09-22 16:32:22	-->	athend_ (~athend@199.43.187.5) has joined ##c++
2016-09-22 16:32:26	ubsan	meh, it's one of those things which is like, kinda sorta undefined
2016-09-22 16:32:36	k_sze[work]	Erm, I don't see the "/" operator defined for boost::filesystem::path here: http://www.boost.org/doc/libs/1_54_0/libs/filesystem/doc/reference.html#path-concatenation
2016-09-22 16:32:47	catern	I think I will use it
2016-09-22 16:32:49	catern	it's a good idea
2016-09-22 16:32:51	catern	thanks ubsan!
2016-09-22 16:32:52	-->	mandeep (~mandeep@2602:306:3013:d610:fc3b:8f7f:c410:c063) has joined ##c++
2016-09-22 16:33:01	k_sze[work]	So how come `path("foo") / path("bar")` works?
2016-09-22 16:33:47	SlashLife	http://www.eelis.net/c++draft/class.union#4
2016-09-22 16:33:53	SlashLife	Deleted dtor :)
2016-09-22 16:34:03	-->	chang (~vayne@pD9E4549E.dip0.t-ipconnect.de) has joined ##c++
2016-09-22 16:35:11	<--	tsjost (tsjost@2a01:7e00::f03c:91ff:fe56:f03c) has quit (Ping timeout: 250 seconds)
2016-09-22 16:35:18	<--	casscode_ (~bru@41.53.130.49) has quit (Ping timeout: 264 seconds)
2016-09-22 16:35:30	<--	athend (~athend@199.43.186.25) has quit (Ping timeout: 276 seconds)
2016-09-22 16:35:57	-->	athend (~athend@199.43.186.25) has joined ##c++
2016-09-22 16:35:58	decimad	k_sze[work]: did you actually try to find operator/ on that page?
2016-09-22 16:36:33	<--	Cppcon2016 (~cplusplus@h-67-102-175-59.sttn.wa.globalcapacity.com) has quit (Quit: This computer has gone to sleep)
2016-09-22 16:36:59	<--	perrier-jouet (~perrier-j@bas1-montreal30-1177586835.dsl.bell.ca) has quit (Quit: WeeChat 1.5)
2016-09-22 16:38:10	-->	sanett (~sanett@202.119.41.123) has joined ##c++
2016-09-22 16:38:10		[16:38]
2016-09-22 16:38:11	<--	yong (~vayne@pD9E441EB.dip0.t-ipconnect.de) has quit (Ping timeout: 265 seconds)
2016-09-22 16:38:12	k_sze[work]	decimad: oh, I was expecting it would fall under the "concatenation" section.
2016-09-22 16:38:33	<--	athend_ (~athend@199.43.187.5) has quit (Ping timeout: 244 seconds)
2016-09-22 16:38:52	<--	Smx (Elite8556@gateway/shell/elitebnc/x-ziwjrrsizkahtoco) has quit (Quit: EliteBNC free bnc service - http://elitebnc.org - be a part of the Elite!)
2016-09-22 16:38:55	-->	raphaelsc (~raphaelsc@179.187.140.226) has joined ##c++
2016-09-22 16:38:57	k_sze[work]	But the description seems wrong, no?
2016-09-22 16:39:02	sanett	I find discrete mathematics difficult to understand. Is there a way to understand it better?
2016-09-22 16:39:18	SlashLife	k_sze[work]: It is a free function so you can do things like: "/usr/bin" / path
2016-09-22 16:40:08	<--	spoonman (~fred@2804:7f2:581:10f1:1dff:14b9:231e:d8d0) has quit (Quit: WeeChat 1.5)
2016-09-22 16:40:22	<--	mmhun (~anonymous@mobile-130-126-255-91.near.illinois.edu) has quit (Quit: mmhun)
2016-09-22 16:40:51	-->	casscode_ (~bru@41.53.130.49) has joined ##c++
2016-09-22 16:40:55	-->	Cppcon2016 (~cplusplus@NORDSTROM.edge6.LosAngeles1.Level3.net) has joined ##c++
2016-09-22 16:41:12	-->	tsjost (tsjost@2a01:7e00::f03c:91ff:fe56:f03c) has joined ##c++
2016-09-22 16:41:30	ubsan	catern: The relevant bytes of the representation of the object are treated as an object of the type used for the access. See Type-punning. This may be a trap representation.
2016-09-22 16:41:34	gp5st	SlashLife: I wonder if passing an rval ref and std::move instead of just a reference and passing as normal would work better
2016-09-22 16:41:47	ubsan	alright, so it'll work in all three major compilers
2016-09-22 16:41:56	SlashLife	Mhh. Do I understand this correctly: namespace filesystem { struct path { path(const char*); }; path operator/(const path &, const path &); } will allow path/path, "foo"/path and path/"foo" ...
2016-09-22 16:41:57	gp5st	off to the assembly!
2016-09-22 16:42:11	SlashLife	... whereas taking the operator in the global namespace would also allow "foo"/"bar"?
2016-09-22 16:43:04	-->	Smx (Elite8556@gateway/shell/elitebnc/x-wmqchjmkmslgyonw) has joined ##c++
2016-09-22 16:43:29	catern	hey - in C++ - is it possible to somehow do char a[16]; char b[16]; a = b; ?
2016-09-22 16:43:39	catern	I don't like invoking memcpy to copy the bits you see
2016-09-22 16:43:49	catern	I know this isn't possible in C but maybe in the magic world of C++ :)
2016-09-22 16:44:02	ubsan	catern: std::array<char, 16>
2016-09-22 16:44:09	ubsan	instead of char a[16]
2016-09-22 16:44:29	ubsan	y'all shouldn't be using language arrays, they're kinda awful
2016-09-22 16:44:38	catern	can I turn a char * that I know the size of into a std::array?
2016-09-22 16:44:41	introom	Cppcon2016: I've searched for the relevant part till now. If you do know where it is, it would be appreciated if you can inform me. ;)
2016-09-22 16:45:02	ubsan	{ array<char, 16> a = {0}; array<char, 16> b = a; }
2016-09-22 16:45:03	geordi	<no output>
2016-09-22 16:45:08	ubsan	catern: hrmm
2016-09-22 16:45:18	Cppcon2016	introom, I told you. it is zero
2016-09-22 16:45:32	catern	without copying?
2016-09-22 16:45:40	SlashLife	gp5st: I don't think it models the semantics correctly. After all you're working on this particular stack; you never actually relinquish ownership of it.
2016-09-22 16:45:54	ubsan	catern: I mean, you can't do it without copying
2016-09-22 16:46:06	ubsan	catern: you can turn it into a array<char, 16>& w/o copying
2016-09-22 16:46:16	catern	I can certainly do it with copying in a variety of ways
2016-09-22 16:46:17	ubsan	or an array<char, 16>*
2016-09-22 16:46:22	gp5st	SlashLife: but every function call creates a new Rung and the previous one should never be used again
2016-09-22 16:46:24	catern	ubsan: oh? how is that?
2016-09-22 16:46:29	catern	that is exciting to hear
2016-09-22 16:46:33	-->	zap0 (~moofy@14-201-222-143.tpgi.com.au) has joined ##c++
2016-09-22 16:46:34	<--	m_ben (~m_ben@unaffiliated/m-ben/x-5917362) has quit (Ping timeout: 240 seconds)
2016-09-22 16:46:35	-->	elnormous (~elnormous@87.110.129.37) has joined ##c++
2016-09-22 16:46:45	ubsan	reinterpret_cast<array<char, 16>*>(pointer)
2016-09-22 16:46:52	gp5st	so it actually models how I'm thinking about it more closely
2016-09-22 16:47:01	catern	ubsan: uhhhhhh I am a bit scared to do that
2016-09-22 16:47:09	ubsan	add a * at the front to turn it into a reference
2016-09-22 16:47:21	SlashLife	gp5st: I'm rather wondering whether it would be possible to actually remove the stack from the Rung itself and just change indices and instead transform the calls to transparently insert the stack.
2016-09-22 16:47:21	ubsan	catern: well, any other way will be equivalent to that
2016-09-22 16:47:25	catern	to reinterpret_cast into something that I don't have the definition of right in front of me
2016-09-22 16:47:45	ubsan	array<T, N> is equivalent to struct { T[N] }
2016-09-22 16:47:51	ubsan	which is equivalent to T[N]
2016-09-22 16:47:55	-->	voidah (~voidah@unaffiliated/voider) has joined ##c++
2016-09-22 16:48:06	introom	Cppcon2016: well. ok.
2016-09-22 16:48:08	gp5st	SlashLife: If I understand you correctly, I'd been trying to think of a way to do that, but I can't quite conceive it
2016-09-22 16:48:09	-->	Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2016-09-22 16:48:11	catern	yeah, but, I just have your word for that!
2016-09-22 16:48:20	catern	I would like a guarantee from the language
2016-09-22 16:48:36	 *	ubsan finds the guarantee
2016-09-22 16:48:44	catern	but if I'm doing reinterpret_cast, I'm saying "hey language, don't bother me with any guarantees!"
2016-09-22 16:48:46	ubsan	http://en.cppreference.com/w/cpp/container/array
2016-09-22 16:48:54	ubsan	> This container is an aggregate type with the same semantics as a struct holding a C-style array T[N] as its only non-static data member. Unlike a C-style array, it doesn't decay to T* automatically. As an aggregate type, it can be initialized with aggregate-initialization given at most N initializers that are convertible to T: std::array<int, 3> a = {1,2,3};.
2016-09-22 16:49:31	-->	jjz (~jjz@183.64.203.198) has joined ##c++
2016-09-22 16:49:58	gp5st	Why does this require 2 moves? https://dpaste.de/kqe5/raw
2016-09-22 16:50:17	ubsan	catern: this is the only way to convert T* to T(*)[N], afaik
2016-09-22 16:50:17	SlashLife	gp5st: Basically transforming a call to Rung<curstack,maxstack>::Foo(X); where Rung<> has a reference to the stack to a call to Rung<curstack,maxstack>::Foo(stack,X); that doesn't need to know the stack.
2016-09-22 16:50:20	catern	ubsan: so "semantics" there includes even when doing undefined things like reinterpret_cast??
2016-09-22 16:50:21	<--	dj_pi (~dj@c-73-191-212-56.hsd1.mi.comcast.net) has quit (Ping timeout: 265 seconds)
2016-09-22 16:50:29	ubsan	catern: yep
2016-09-22 16:50:31	SlashLife	gp5st: ... all while the user still just types .Foo(X)
2016-09-22 16:50:35	catern	oh, well, okay
2016-09-22 16:50:45	catern	you can understand my concern though, I'm scared of nasal demons
2016-09-22 16:50:55	ubsan	lol, no worries
2016-09-22 16:51:00	ubsan	see my name <-
2016-09-22 16:51:07	catern	thank you ub-san
2016-09-22 16:51:21	<--	chachasmooth (~chachasmo@unaffiliated/chachasmooth) has quit (Ping timeout: 248 seconds)
2016-09-22 16:51:27	-->	UnripeSuica_mobi (~UnlikeSui@223.62.172.186) has joined ##c++
2016-09-22 16:51:37	<--	hexagoxel (~hexagoxel@p5B29A2A3.dip0.t-ipconnect.de) has quit (Ping timeout: 244 seconds)
2016-09-22 16:51:38	gp5st	SlashLife: would that pass a refernce to the stack or copy the stack each time?
2016-09-22 16:51:44	<--	imdone (~imdone@cable-94-189-189-9.dynamic.sbb.rs) has quit (Ping timeout: 265 seconds)
2016-09-22 16:51:48	<--	elnormous (~elnormous@87.110.129.37) has quit (Ping timeout: 265 seconds)
2016-09-22 16:52:10	-->	gegagome (~gegagome@ip68-6-89-154.sb.sd.cox.net) has joined ##c++
2016-09-22 16:53:03	<--	UnripeSuica_mobi (~UnlikeSui@223.62.172.186) has quit (Client Quit)
2016-09-22 16:53:05	<--	UnlikeSuika_mobi (~UnlikeSui@147.47.141.47) has quit (Read error: Connection reset by peer)
2016-09-22 16:53:08	-->	nikki93 (~nikki93@166.177.249.43) has joined ##c++
2016-09-22 16:53:15	-->	UnlikeSuika_mobi (~UnlikeSui@147.47.141.47) has joined ##c++
2016-09-22 16:53:15		[16:53]
2016-09-22 16:53:49	-->	hexagoxel (~hexagoxel@p200300798F210800021E33FFFE2231E9.dip0.t-ipconnect.de) has joined ##c++
2016-09-22 16:54:14	gp5st	SlashLife: because being able to do that would be very nice, then there would be none of this silly copying the address to the stack around
2016-09-22 16:54:20	SlashLife	It'd pass a reference, but the moment it passes a parameter, whether it passes a reference of copies is a minor and trivial detail.
2016-09-22 16:54:28	SlashLife	I'm pondering something *extremely* evil.
2016-09-22 16:54:53	SlashLife	Instead of constructing and returning a new Rung every time ...
2016-09-22 16:55:02	SlashLife	... return a reference to *this.
2016-09-22 16:55:14	SlashLife	... typecast to the new type.
2016-09-22 16:55:32	SlashLife	"It's the same thing. We just gave it a new name."
2016-09-22 16:55:59	gp5st	SlashLife: one sec
2016-09-22 16:57:13	-->	casscode__ (~bru@41.53.130.49) has joined ##c++
2016-09-22 16:57:31	gp5st	SlashLife: I can't find it  but I used to have a global stack and just reinterpert_cast the new stackdepth :-p
2016-09-22 16:57:57	gp5st	then I moved to a static value on the rung for a stack depth and just kept returning new instances
2016-09-22 16:58:12	gp5st	and now that I can't do that, I'm needing an externally provided stack
2016-09-22 16:58:23	gp5st	and also so that different parts of one application can have different ladders
2016-09-22 16:58:39	-->	chachasmooth (~chachasmo@unaffiliated/chachasmooth) has joined ##c++
2016-09-22 16:59:31	-->	dj_pi (~dj@c-73-191-212-56.hsd1.mi.comcast.net) has joined ##c++
2016-09-22 16:59:39	gp5st	SlashLife: https://github.com/jimktrains/uil/blob/548d81733ba127e70e6e31c0ab02b46490ef8277/test.cc
2016-09-22 16:59:46	nikki93	sorry Cppcon2016 i had to go for a sec
2016-09-22 16:59:46	nikki93	but
2016-09-22 16:59:54	<--	casscode_ (~bru@41.53.130.49) has quit (Ping timeout: 264 seconds)
2016-09-22 16:59:54	nikki93	using std::function in the arg works
2016-09-22 16:59:58	nikki93	gonna work on implicit lambda convert now
2016-09-22 17:00:02	Cppcon2016	argh
2016-09-22 17:01:03	gp5st	OK, I guess I know nothing about x86 assembly `movq    (%rax), %rax    # *_310, D.75628`
2016-09-22 17:01:04	<--	Mike11 (~Mike@unaffiliated/mike11) has quit (Quit: Leaving.)
2016-09-22 17:01:54	gp5st	thought I should probably use gcc-avr and target my 8bit, but still
2016-09-22 17:02:00	SlashLife	gp5st: Yeah, basically like that - except with a reference type rather than a pointer type.
2016-09-22 17:02:08	<--	snover (~Adium@unaffiliated/snover) has quit (Quit: Leaving.)
2016-09-22 17:02:09	<--	happy-dude (uid62780@gateway/web/irccloud.com/x-jfjyvfginuffwgmr) has quit (Quit: Connection closed for inactivity)
2016-09-22 17:02:16	catern	hey ##c++
2016-09-22 17:02:23	<--	UnlikeSuika_mobi (~UnlikeSui@147.47.141.47) has quit (Quit: RIP)
2016-09-22 17:02:23	catern	here's another generic question
2016-09-22 17:02:40	SlashLife	Any reason why you abandoned it? (Aside of the foo.op1->op2->op3 discrepancy.)
2016-09-22 17:02:57	-->	c0le (~c0le@59.99.251.45) has joined ##c++
2016-09-22 17:03:06	ubsan	catern: go
2016-09-22 17:03:11	-->	Rickmasta (~Rick@pool-96-246-90-176.nycmny.fios.verizon.net) has joined ##c++
2016-09-22 17:03:11	xaxxon	catern:  stop
2016-09-22 17:03:14	ubsan	you have interesting questions
2016-09-22 17:03:26	catern	I have a (pointer to a) tagged union and I would like to cast it to the right type and pass it to a handler function based on the tag
2016-09-22 17:03:51	ubsan	switch on the tag?
2016-09-22 17:03:58	gp5st	SlashLife: I didn't like polluting the global space, and now I need to be able to have multiple stacks for multiple ladder programs within the same overall application
2016-09-22 17:04:11	catern	is there a fancy way to do this in C++? I mean right now I just have the bog-standard boring switch () { case: p = reinterpret(p); func(p); }
2016-09-22 17:04:33	ubsan	catern: not yet
2016-09-22 17:04:38	ubsan	catern: maybe C++23
2016-09-22 17:04:41	catern	but I am used to pattern matching from fancy languages like Ocaml and Rust
2016-09-22 17:04:45	catern	ubsan: oh, really?
2016-09-22 17:04:53	ubsan	yeah, lvariant
2016-09-22 17:05:15	ubsan	technically, you can use std::variant, but it's kinda silly
2016-09-22 17:05:27	ubsan	once you've used those languages
2016-09-22 17:05:29	-->	danderian (~danderian@190.247.42.119) has joined ##c++
2016-09-22 17:05:42	ubsan	basically, it's type based, so you do
2016-09-22 17:05:43	<--	sanett (~sanett@202.119.41.123) has quit (Ping timeout: 255 seconds)
2016-09-22 17:05:48	catern	(oh boy, I only have to wait 7 years :) )
2016-09-22 17:06:12	<--	silent_freak (672b7061@gateway/web/freenode/ip.103.43.112.97) has quit (Ping timeout: 240 seconds)
2016-09-22 17:06:13	catern	please go on
2016-09-22 17:06:25	ubsan	uh, shoot
2016-09-22 17:06:34	ubsan	it's been a while since I've done any variant programming
2016-09-22 17:06:55	<--	mad_enz (~mad_enz@CPE00508b114c3e-CM00fc8d50aef0.cpe.net.fido.ca) has quit (Quit: Leaving)
2016-09-22 17:07:41	catern	i found http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0095r1.html so that is fine
2016-09-22 17:07:56	ubsan	yeah
2016-09-22 17:08:03	zap0	some people really seem to think C++ is for high level abstract functional programming....   WHY!?!    at what point did you believe this?
2016-09-22 17:08:03	ubsan	I have no idea, it's gross
2016-09-22 17:08:19	ubsan	anyways, I have a library which uses macros to make Rust-enum style things
2016-09-22 17:08:19		[17:08]
2016-09-22 17:08:28	ubsan	if you want to use it
2016-09-22 17:08:54	ubsan	https://github.com/ubsan/variant/blob/master/test/test.cpp
2016-09-22 17:09:01	ubsan	the code looks like that
2016-09-22 17:09:39	catern	the feature I would really like from Rust as a beginner C++ programmer is #[derive()]
2016-09-22 17:09:48	ubsan	yeah, that'd be nice
2016-09-22 17:09:59	catern	defining my own hash functions is quite a drag, after getting used to Rust
2016-09-22 17:10:19	ubsan	yeah
2016-09-22 17:10:24	ubsan	there's automatic hash... coming?
2016-09-22 17:10:25	ubsan	maybe?
2016-09-22 17:10:31	ubsan	don't remember
2016-09-22 17:11:34	catern	that would solve that specific issue I guess
2016-09-22 17:11:45	catern	(which would indeed be quite useful)
2016-09-22 17:13:11	nikki93	can i make a bot here print the type of an expression
2016-09-22 17:13:14	SlashLife	gp5st: Ah, it was a different problem then, okay.
2016-09-22 17:13:36	ubsan	<< TYPEOF(std::vector<int>())
2016-09-22 17:13:37	geordi	error: 'TYPEOF' was not declared in this scope
2016-09-22 17:13:42	ubsan	<< TYPE(std::vector<int>());
2016-09-22 17:13:43	geordi	prvalue vector<int>
2016-09-22 17:13:46	ubsan	nikki93: ^
2016-09-22 17:14:25	nikki93	<< TYPE(&decltype([](int a, int b){})::operator())
2016-09-22 17:14:25	geordi	error: lambda-expression in unevaluated context
2016-09-22 17:16:34	nikki93	ubsan: can I add a statement before it?
2016-09-22 17:16:40	<--	jbud (~jbud@ip-24-54-73-229.user.start.ca) has quit (Quit: leaving)
2016-09-22 17:16:51	nikki93	geordi: { auto x = 3; cout << x }
2016-09-22 17:16:51	geordi	error: expected ';' before '}' (fix known)
2016-09-22 17:16:55	nikki93	geordi: { auto x = 3; cout << x; }
2016-09-22 17:16:56	geordi	3
2016-09-22 17:16:59	ubsan	nikki93: yeah
2016-09-22 17:17:00	nikki93	geordi: { auto x = 3; cout << TYPEOF(x); }
2016-09-22 17:17:01	geordi	error: 'TYPEOF' was not declared in this scope
2016-09-22 17:17:04	ubsan	TYPE
2016-09-22 17:17:06	ubsan	:)
2016-09-22 17:17:07	nikki93	geordi: { auto x = 3; cout << TYPE(x); }
2016-09-22 17:17:08	geordi	lvalue int
2016-09-22 17:17:08	nikki93	o haha
2016-09-22 17:17:24	catern	ubsan: thank you for all the interesting C++ knowledge
2016-09-22 17:17:31	nikki93	geordi: { auto f = [](int a, int b){}; cout << TYPE(&decltype(f)::operator()); }
2016-09-22 17:17:31	ubsan	catern: sure :)
2016-09-22 17:17:31	-->	syem (~s@unaffiliated/syem) has joined ##c++
2016-09-22 17:17:32	geordi	prvalue void (main::{lambda(int, int)#1}::*)(int, int) const
2016-09-22 17:17:35	ubsan	catern: I like C++ a lot
2016-09-22 17:17:39	nikki93	o
2016-09-22 17:18:20	<--	bkboggy (~bkboggy@cpe-172-250-147-60.socal.res.rr.com) has quit (Ping timeout: 244 seconds)
2016-09-22 17:18:53	ubsan	catern: it's a good language, only outclassed by one ;)
2016-09-22 17:18:59	 *	ubsan whistles
2016-09-22 17:19:16	<--	syem (~s@unaffiliated/syem) has quit (Quit: leaving)
2016-09-22 17:19:18	catern	I am working on my first project at my first job so it is very important that I impress my teammates with the first code they see from me; so naturally I should choke it with as many clever hacks as possible, or at least that seems to be the strategy I am pursuing :)
2016-09-22 17:19:58	-->	arescorpio (~arescorpi@112-226-114-200.fibertel.com.ar) has joined ##c++
2016-09-22 17:20:02	catern	ubsan: ah, I think I know which one, since I see you in the channel :)
2016-09-22 17:20:04	<--	Cppcon2016 (~cplusplus@NORDSTROM.edge6.LosAngeles1.Level3.net) has quit (Quit: This computer has gone to sleep)
2016-09-22 17:20:13	ubsan	catern: :)
2016-09-22 17:20:55	-->	bkboggy (~bkboggy@cpe-172-250-147-60.socal.res.rr.com) has joined ##c++
2016-09-22 17:21:50	SlashLife	gp5st: I stumbled across another annoying thing: All that code duplication due to stack sizes.
2016-09-22 17:21:52	xaxxon	catern:  I wouldn't suggest introducing new paradigms for your first code review unless you've discussed it with the group beforehand
2016-09-22 17:21:59	ubsan	agreed ^
2016-09-22 17:22:34	nikki93	ubsan: is there no way to infer std::function conversion from lambda? :(
2016-09-22 17:22:49	nikki93	ubsan: for this http://cpp.sh/2xbd6
2016-09-22 17:22:55	xaxxon	nikki93:  you can use your lambda's operator() signature
2016-09-22 17:22:58	nikki93	it works if I change the `auto` to something explicit
2016-09-22 17:23:14	xaxxon	but it's not trivial
2016-09-22 17:23:15	nikki93	xaxxon: I was trying that but it didn't rly work :o any example of how it could be used?
2016-09-22 17:23:15	catern	xaxxon: yeah, it was (mostly) just a joke :)
2016-09-22 17:23:24	xaxxon	catern:  it's good to say, anyhow :)
2016-09-22 17:23:24		[17:23]
2016-09-22 17:23:27	xaxxon	-,
2016-09-22 17:23:30	nikki93	xaxxon: oh sounds fun
2016-09-22 17:23:54	xaxxon	nikki93:  make sure you deal with both mutable and immutable lambdas if you're doing something generic, as the operator() signatures are diff
2016-09-22 17:23:59	-->	sanett (~sanett@218.94.142.72) has joined ##c++
2016-09-22 17:24:03	nikki93	:O
2016-09-22 17:24:17	ubsan	nikki93: you could also static_cast
2016-09-22 17:24:18	-->	mmhun (~anonymous@mobile-130-126-255-91.near.illinois.edu) has joined ##c++
2016-09-22 17:24:18	<--	mmhun (~anonymous@mobile-130-126-255-91.near.illinois.edu) has quit (Client Quit)
2016-09-22 17:24:22	xaxxon	well, one is const, the other is not, but when you're doing partial specialization, you have to cover both explicitly
2016-09-22 17:24:24	-->	EvilPeng1 (~EvilPengu@2605:e000:6189:9600:60:7509:7529:ce3e) has joined ##c++
2016-09-22 17:24:32	ubsan	to void(*)(int, int)
2016-09-22 17:25:06	<--	casscode__ (~bru@41.53.130.49) has quit (Ping timeout: 264 seconds)
2016-09-22 17:25:12	xaxxon	ubsan:  only if it's not capturing
2016-09-22 17:25:22	ubsan	xaxxon: that's true
2016-09-22 17:26:20	xaxxon	I just have a little hleper that takes a callable and "returns" the std::function taht can hold it
2016-09-22 17:26:34	-->	casscode_ (~bru@41.53.130.49) has joined ##c++
2016-09-22 17:26:36	ubsan	I just dislike std::function
2016-09-22 17:26:48	ubsan	because I dislike heap alloc
2016-09-22 17:27:04	-->	Zxpr1jk (~zxpr1jk@24.214.61.47) has joined ##c++
2016-09-22 17:27:15	-->	jshjsh (~jshjsh@172.56.38.166) has joined ##c++
2016-09-22 17:27:51	xaxxon	yes, std::function is bad for manyn reasons, but for getting things done, it works quite well
2016-09-22 17:28:14	ubsan	yeah
2016-09-22 17:28:20	ubsan	concepts pls
2016-09-22 17:28:22	ubsan	:)
2016-09-22 17:28:38	xaxxon	std::function instantiates a LOT of other templates
2016-09-22 17:30:11	ubsan	that's what I'd do in Rust
2016-09-22 17:30:13	<--	JoshS (~jshjsh@172.56.38.166) has quit (Ping timeout: 244 seconds)
2016-09-22 17:30:34	ubsan	template<F> requires Callable<auto (int, int) -> void>
2016-09-22 17:30:50	catern	xaxxon: so I should probably not be calling system calls directly with syscall(2) because they don't yet have glibc wrappers, right?
2016-09-22 17:31:16	xaxxon	if that's already in place, then sure.
2016-09-22 17:31:17	catern	(I've just now realized that at some point I crossed the line from "I want to make this really well designed!!" into... something else)
2016-09-22 17:31:26	--	jshjsh is now known as JoshS
2016-09-22 17:31:31	catern	xaxxon: oh the project is from scratch
2016-09-22 17:31:37	<--	blackbeard420 (~blackbear@dynamic-acs-24-154-82-158.zoominternet.net) has quit (Quit: Lost terminal)
2016-09-22 17:31:43	xaxxon	presumably it exists in an ecosystem of some sort
2016-09-22 17:32:53	gp5st	SlashLife: do you mean because of the template?
2016-09-22 17:33:13	catern	xaxxon: not really, it runs as a separate process from everything existing, so
2016-09-22 17:33:19	<--	dj_pi (~dj@c-73-191-212-56.hsd1.mi.comcast.net) has quit (Ping timeout: 272 seconds)
2016-09-22 17:33:20	catern	and doesn't talk to anything existing
2016-09-22 17:33:25	<--	k_sze[work] (daff8506@gateway/web/freenode/ip.218.255.133.6) has quit (Quit: Page closed)
2016-09-22 17:34:10	xaxxon	catern:  just make sure everyone else doesn't have to learn large amounts of new concepts/dependencies to work on it unless you've talked to people.
2016-09-22 17:34:52	xaxxon	anyhow, !topic :)
2016-09-22 17:34:59	catern	!give catern focus
2016-09-22 17:35:01	nolyc	catern: ##c++ focuses on C++. Discuss offtopic things elsewhere; ##c++-general or ##c++-social
2016-09-22 17:35:28	xaxxon	I was more talking to me
2016-09-22 17:35:57	-->	SwiftMatt (~Objective@209.107.210.96) has joined ##c++
2016-09-22 17:36:05	<--	sanett (~sanett@218.94.142.72) has quit (Ping timeout: 244 seconds)
2016-09-22 17:36:30	-->	sanett (~sanett@208.167.241.249) has joined ##c++
2016-09-22 17:36:36	xaxxon	I just had it "reinforced" that class... Args only picks up type args, not integral template param arguments.   Couldn't figure out why my specialization wasn't being considered, but it required 4 types, not 2 types, and int and a bool
2016-09-22 17:37:33	gp5st	SlashLife: if you mean because of the template, that's the purpose of the inline and keeping those functions very tiny (still some work to do on that)
2016-09-22 17:37:34	<--	AnarchyAo (~andrew@dhcp.1lakeside.web-pass.com) has quit (Ping timeout: 240 seconds)
2016-09-22 17:37:38	<--	justan0theruser (~justanoth@unaffiliated/justanotheruser) has quit (Ping timeout: 265 seconds)
2016-09-22 17:37:43	xaxxon	and by "reinforced" i mean spent a couple hours tracking down what was going on
2016-09-22 17:38:00	<--	edr (~edr@pdpc/supporter/professional/edr) has quit (Quit: Leaving)
2016-09-22 17:38:33	<--	sanett (~sanett@208.167.241.249) has quit (Read error: Connection reset by peer)
2016-09-22 17:38:33		[17:38]
2016-09-22 17:38:49	-->	ferdna (~ferdna@cpe-69-23-141-130.elp.res.rr.com) has joined ##c++
2016-09-22 17:39:20	<--	al1o (~al1o@236.red-88-16-49.dynamicip.rima-tde.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-22 17:40:21	-->	Levitator (~Meh@cpe-2606-A000-E182-FB00-5037-2FD5-78B5-D0E8.dyn6.twc.com) has joined ##c++
2016-09-22 17:41:26	SlashLife	Is it possible to force uninlining?
2016-09-22 17:42:00	xaxxon	-O0
2016-09-22 17:42:23	SlashLife	Nah, I want optimized code - just not beyond the call of certain functions.
2016-09-22 17:42:44	SlashLife	GCC has __attribute__((noinline)), though.
2016-09-22 17:43:00	ubsan	__attribute__((neverinline))
2016-09-22 17:43:01	ubsan	or something
2016-09-22 17:43:03	ubsan	iirc
2016-09-22 17:43:41	xaxxon	there are compiler flags for clang (and presumably other): https://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html#Optimize-Options
2016-09-22 17:43:42	ubsan	oh, noinline, lol, sorry :(
2016-09-22 17:45:27	-->	mmhun (~anonymous@c-50-148-127-82.hsd1.il.comcast.net) has joined ##c++
2016-09-22 17:45:41	-->	justanotheruser (~justanoth@unaffiliated/justanotheruser) has joined ##c++
2016-09-22 17:45:48	<--	mmhun (~anonymous@c-50-148-127-82.hsd1.il.comcast.net) has quit (Client Quit)
2016-09-22 17:46:08	<--	danderian (~danderian@190.247.42.119) has quit (Remote host closed the connection)
2016-09-22 17:46:14	<--	rd4455 (~rd45@lib-02-subnet-171.rdns.cenic.net) has quit (Ping timeout: 244 seconds)
2016-09-22 17:47:01	-->	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has joined ##c++
2016-09-22 17:47:41	-->	GrayArea (~GrayArea@cpc73846-dals21-2-0-cust384.20-2.cable.virginm.net) has joined ##c++
2016-09-22 17:48:59	<--	glenfe (~glen@unaffiliated/glenfe) has quit (Quit: Leaving)
2016-09-22 17:49:28	<--	Budd (~eric@cpe-67-242-201-146.nycap.res.rr.com) has quit (Read error: No route to host)
2016-09-22 17:50:05	<--	ctnguyen (~chau@2606:6000:fd00:bc00:80a0:db6b:9dfc:dc5c) has quit (Remote host closed the connection)
2016-09-22 17:50:16	<--	DEElekgolo (~DEElekgol@2602:30a:2e0e:a7a0:c9e6:8dd9:47d8:15e6) has quit (Ping timeout: 255 seconds)
2016-09-22 17:50:19	<--	nikki93 (~nikki93@166.177.249.43) has quit (Remote host closed the connection)
2016-09-22 17:50:31	-->	casscode__ (~bru@41.53.130.49) has joined ##c++
2016-09-22 17:50:34	SlashLife	So ... https://godbolt.org/g/hSEyp4 vs. https://godbolt.org/g/hXLenh
2016-09-22 17:51:08	-->	elnormous (~elnormous@87.110.129.37) has joined ##c++
2016-09-22 17:51:10	-->	bsdnoob (2d7c8c8a@gateway/web/cgi-irc/kiwiirc.com/ip.45.124.140.138) has joined ##c++
2016-09-22 17:51:11	<--	systemfault (~rcyr@unaffiliated/rcyr) has quit (Quit: Bye!)
2016-09-22 17:51:14	xaxxon	SlashLife:  can I get the executive summary?
2016-09-22 17:51:20	SlashLife	Returning a typecast *this doesn't smack the stack as hard ... still tons of stack smacking going on nontheless. :(
2016-09-22 17:51:24	SlashLife	@ gp5st
2016-09-22 17:51:44	<--	Brklyn (~truthbk@207-38-215-87.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has quit (Ping timeout: 265 seconds)
2016-09-22 17:52:26	SlashLife	xaxxon: Considering how to allow opcode chaining with compile type stack checking while keeping the API clean and generated boilerplate at a minimum.
2016-09-22 17:52:27	xaxxon	passing templated types to macros is a sad thing to do syntactically, since you basically have to have a comma macro
2016-09-22 17:52:39	SlashLife	Aye.
2016-09-22 17:52:55	SlashLife	I have an ENABLE_IF(condition, type) macro in my IRC lib. >_<
2016-09-22 17:53:03	xaxxon	CAST_TO_JS_TEMPLATED(eastl::fixed_string<CharType V8TOOLKIT_COMMA Length V8TOOLKIT_COMMA Overflow V8TOOLKIT_COMMA Allocator>, class CharType V8TOOLKIT_COMMA int Length V8TOOLKIT_COMMA bool Overflow V8TOOLKIT_COMMA class Allocator)
2016-09-22 17:53:18	<--	casscode_ (~bru@41.53.130.49) has quit (Ping timeout: 264 seconds)
2016-09-22 17:53:49	SlashLife	And I don't even need it for C++ reasons - it only exists so I can (p)redefine it as "#define ENABLE_IF(condition, type) type" when running Doxygen.
2016-09-22 17:53:49		[17:53]
2016-09-22 17:54:38	<--	xaanimus (~user@nat-128-84-124-0-161.cit.cornell.edu) has quit (Ping timeout: 265 seconds)
2016-09-22 17:54:44	xaxxon	that makes sense.
2016-09-22 17:55:11	<--	josh (~josh@168.103.191.142) has quit (Ping timeout: 244 seconds)
2016-09-22 17:56:07	SlashLife	No. It would make sense to have a \override return Foo in Doxygen.
2016-09-22 17:57:07	<--	FreeBirdLjj (~freebirdl@202.119.46.192) has quit (Remote host closed the connection)
2016-09-22 17:57:15	-->	gist_ (~jack@p57906AA3.dip0.t-ipconnect.de) has joined ##c++
2016-09-22 17:59:27	-->	chiken (~chiken@60-242-215-61.static.tpgi.com.au) has joined ##c++
2016-09-22 17:59:44	-->	xaanimus (~user@nat-128-84-124-0-161.cit.cornell.edu) has joined ##c++
2016-09-22 17:59:52	gp5st	SlashLife: yeah, I was hoping the compiler would just get rid of it all
2016-09-22 17:59:57	-->	petercooper (~peterc@host81-132-80-154.range81-132.btcentralplus.com) has joined ##c++
2016-09-22 18:00:04	gp5st	doesn't seem so bad at the moment, IDK, we'll see
2016-09-22 18:00:14	SlashLife	It basically just keeps on pushing *this to the stack. :/
2016-09-22 18:00:19	-->	DEElekgolo (~DEElekgol@2602:30a:2e0e:a7a0:c9e6:8dd9:47d8:15e6) has joined ##c++
2016-09-22 18:01:10	-->	k_sze[work] (~Kira@unaffiliated/kira) has joined ##c++
2016-09-22 18:01:13	<--	gist (~jack@p57907422.dip0.t-ipconnect.de) has quit (Ping timeout: 244 seconds)
2016-09-22 18:02:06	SlashLife	Mh. Maybe it is faster like this rather than adjusting the stack pointer back after every call.
2016-09-22 18:02:30	<--	vralphv (~vralp@d137-186-58-40.abhsia.telus.net) has quit (Quit: Lost terminal)
2016-09-22 18:04:13	<--	Martchus (~martchus@dslb-188-105-102-112.188.105.pools.vodafone-ip.de) has quit (Ping timeout: 265 seconds)
2016-09-22 18:04:33	<--	bkboggy (~bkboggy@cpe-172-250-147-60.socal.res.rr.com) has quit (Ping timeout: 276 seconds)
2016-09-22 18:04:59	<--	skweek (~skweek@2607:fe50:0:810b:ed75:37b:d904:8135) has quit (Ping timeout: 272 seconds)
2016-09-22 18:06:04	-->	Martchus (~martchus@dslb-178-007-025-023.178.007.pools.vodafone-ip.de) has joined ##c++
2016-09-22 18:06:10	<--	oldtopman (~oldtopman@unaffiliated/oldtopman) has quit (Ping timeout: 265 seconds)
2016-09-22 18:07:13	gp5st	SlashLife: it's all inlined, I don't think it's using the stack?
2016-09-22 18:08:16	-->	shingshang (~shingshan@101.164.159.8) has joined ##c++
2016-09-22 18:09:04	<--	Zxpr1jk (~zxpr1jk@24.214.61.47) has quit (Quit: Leaving)
2016-09-22 18:09:04		[18:09]
2016-09-22 18:10:03	-->	nikki93 (~nikki93@c-67-169-12-37.hsd1.ca.comcast.net) has joined ##c++
2016-09-22 18:10:23	-->	oldtopman (~oldtopman@unaffiliated/oldtopman) has joined ##c++
2016-09-22 18:10:31	SlashLife	gp5st: Ah, sorry; was looking at https://godbolt.org/g/IdrRKC and https://godbolt.org/g/j8nWrw with force-uninlined opcode handlers
2016-09-22 18:11:02	SlashLife	They're stacking 168 resp. 112 bytes
2016-09-22 18:11:09	-->	makerman (~makerman@2602:306:36c6:76c0:708c:5cc:1bd9:4fef) has joined ##c++
2016-09-22 18:11:32	gp5st	ah
2016-09-22 18:11:54	<--	casscode__ (~bru@41.53.130.49) has quit (Ping timeout: 264 seconds)
2016-09-22 18:12:11	SlashLife	168 and 128 actually
2016-09-22 18:12:51	gp5st	I wish I could get inline names like on godbold
2016-09-22 18:12:53	gp5st	bolt
2016-09-22 18:12:56	SlashLife	Interesting that it's adding 168 in one version but subtracting -128 in the other. Probably shaving off a byte in the latter case.
2016-09-22 18:13:02	-->	jshjsh (~jshjsh@172.56.38.166) has joined ##c++
2016-09-22 18:13:28	-->	casscode_ (~bru@41.53.130.49) has joined ##c++
2016-09-22 18:14:20	SlashLife	(And I'm uninlining them here to prevent the optimizer from precalculating the results.)
2016-09-22 18:14:45	gp5st	gotchya
2016-09-22 18:15:52	gp5st	how'd you get it to not generate a class per stack depth?
2016-09-22 18:16:14	SlashLife	I didn't.
2016-09-22 18:16:35	SlashLife	It still has L<3,0>::add and L<3,1>::add
2016-09-22 18:16:42	<--	JoshS (~jshjsh@172.56.38.166) has quit (Ping timeout: 264 seconds)
2016-09-22 18:16:54	SlashLife	They just only consist to a call to add_ and returning *this
2016-09-22 18:16:59	SlashLife	And are inlined.
2016-09-22 18:17:29	SlashLife	I had hoped it'd optimize away the return *this as well.
2016-09-22 18:17:35	gp5st	ah, automatically
2016-09-22 18:17:49	SlashLife	Oh - and add_ is in a non-template base class.
2016-09-22 18:17:59	gp5st	yeah
2016-09-22 18:18:02	SlashLife	So there's only one for all template instantiations.
2016-09-22 18:18:24	<--	makerman (~makerman@2602:306:36c6:76c0:708c:5cc:1bd9:4fef) has left ##c++ ("Leaving")
2016-09-22 18:18:44	<--	xaanimus (~user@nat-128-84-124-0-161.cit.cornell.edu) has quit (Ping timeout: 265 seconds)
2016-09-22 18:18:46	gp5st	yeah, makes sense.
2016-09-22 18:20:04	-->	k4rtik (~k4rtik@unaffiliated/k4rtik) has joined ##c++
2016-09-22 18:20:04	gp5st	it's subtracting 168, right?
2016-09-22 18:20:48	SlashLife	Ah, right.
2016-09-22 18:20:58	SlashLife	Subtracting 168, but adding -128
2016-09-22 18:22:01	-->	TheSeven (~quassel@rockbox/developer/TheSeven) has joined ##c++
2016-09-22 18:22:29	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-22 18:22:56	gp5st	man, so much i need to learn about assembly
2016-09-22 18:23:11	<--	code_zombie (~code_zomb@2605:a601:aa1:5c00:6473:245e:49a4:3a47) has quit (Read error: Connection reset by peer)
2016-09-22 18:23:26	-->	hyacinth (~yhyacinth@61.111.255.109) has joined ##c++
2016-09-22 18:23:35	-->	code_zombie (~code_zomb@136.63.230.43) has joined ##c++
2016-09-22 18:23:38	-->	z8z (~x@ac230029.ppp.asahi-net.or.jp) has joined ##c++
2016-09-22 18:23:54	gp5st	my example program is allocating 888 on the stack
2016-09-22 18:24:34	<--	chiken (~chiken@60-242-215-61.static.tpgi.com.au) has quit (Quit: Leaving)
2016-09-22 18:24:34		[18:24]
2016-09-22 18:25:51	<--	arescorpio (~arescorpi@112-226-114-200.fibertel.com.ar) has quit (Excess Flood)
2016-09-22 18:26:45	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-22 18:26:48	-->	vdamewood (~vdamewood@unaffiliated/vdamewood) has joined ##c++
2016-09-22 18:27:28	-->	forgottenone (~forgotten@176.40.23.252) has joined ##c++
2016-09-22 18:28:02	SlashLife	Mhh. What would be the correct channel for assembly questions?
2016-09-22 18:28:42	<--	hoshi (~hoshi@drk246.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 264 seconds)
2016-09-22 18:29:51	<--	elnormous (~elnormous@87.110.129.37) has quit (Ping timeout: 265 seconds)
2016-09-22 18:30:17	<--	bsdnoob (2d7c8c8a@gateway/web/cgi-irc/kiwiirc.com/ip.45.124.140.138) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-09-22 18:30:41	-->	hoshi (~hoshi@abzm134.neoplus.adsl.tpnet.pl) has joined ##c++
2016-09-22 18:31:53	<--	Cabanossi (~Cabanossi@93.215.172.97) has quit (Ping timeout: 244 seconds)
2016-09-22 18:32:27	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-22 18:33:18	-->	FreeBirdLjj (~freebirdl@218.94.142.81) has joined ##c++
2016-09-22 18:33:26	-->	Cabanossi (~Cabanossi@p5DD7A790.dip0.t-ipconnect.de) has joined ##c++
2016-09-22 18:33:44	<--	plee (~kurt@89.10.219.180) has quit (Read error: Connection reset by peer)
2016-09-22 18:33:45	<--	cysm (cysm@unaffiliated/paracyst) has quit (Ping timeout: 248 seconds)
2016-09-22 18:34:06	-->	plee (~kurt@89.10.219.180) has joined ##c++
2016-09-22 18:34:41	-->	JayKaye (~Jay@c27-253-116-193.carlnfd2.nsw.optusnet.com.au) has joined ##c++
2016-09-22 18:34:47	<--	cjwelborn (cjwelborn@unaffiliated/cjwelborn) has quit (Ping timeout: 250 seconds)
2016-09-22 18:34:56	-->	ARCADIVS (~RMM@97.84.20.251) has joined ##c++
2016-09-22 18:35:15	-->	WizJin (WizJin@gateway/shell/fnordserver.eu/x-kkingetaaoggdebl) has joined ##c++
2016-09-22 18:38:55	<--	gp5st (~jim@pool-98-111-192-215.pitbpa.fios.verizon.net) has quit (Ping timeout: 260 seconds)
2016-09-22 18:43:14	vdamewood	SlashLife: ##asm perhaps; also, alis is a bot for finding channels. /msg alis help
2016-09-22 18:43:14		[18:43]
2016-09-22 18:44:04	-->	Kn|t3 (~agarwalvi@104.132.196.76) has joined ##c++
2016-09-22 18:44:28	SlashLife	Ah.
2016-09-22 18:44:42	SlashLife	Yeah, but ##asm is too short to be listed for *assemb* x)
2016-09-22 18:44:43	<--	AndyBotwin (~Gustavo@unaffiliated/andybotwin) has quit (Ping timeout: 255 seconds)
2016-09-22 18:45:24	SlashLife	Which had 1-7 inhabitants - ##asm looks better, thanks.
2016-09-22 18:46:33	-->	AndyBotwin (~Gustavo@unaffiliated/andybotwin) has joined ##c++
2016-09-22 18:46:42	vdamewood	 /msg alis list * -topic *assembly*
2016-09-22 18:46:50	<--	z8z (~x@ac230029.ppp.asahi-net.or.jp) has quit (Ping timeout: 265 seconds)
2016-09-22 18:46:53	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-22 18:47:05	<--	Crazylemon64 (~Crazylemo@207.62.170.215) has quit (Ping timeout: 260 seconds)
2016-09-22 18:47:21	<--	low-profile (~low-profi@unaffiliated/low-profile) has quit (Quit: low-profile)
2016-09-22 18:47:40	<--	JayKaye (~Jay@c27-253-116-193.carlnfd2.nsw.optusnet.com.au) has quit (Ping timeout: 260 seconds)
2016-09-22 18:51:15	-->	m_ben (~m_ben@unaffiliated/m-ben/x-5917362) has joined ##c++
2016-09-22 18:52:49	-->	V|r (~mkretz@kde/mkretz) has joined ##c++
2016-09-22 18:54:41	<--	Vir (~mkretz@kde/mkretz) has quit (Ping timeout: 240 seconds)
2016-09-22 18:55:07	<--	Sculptor (~Sculptor@trivialand/master/sculptor) has quit (Ping timeout: 244 seconds)
2016-09-22 18:56:43	<--	casscode_ (~bru@41.53.130.49) has quit (Read error: Connection reset by peer)
2016-09-22 18:59:00	<--	FreeBirdLjj (~freebirdl@218.94.142.81) has quit (Remote host closed the connection)
2016-09-22 18:59:00		[18:59]
2016-09-22 18:59:03	<--	vdamewood (~vdamewood@unaffiliated/vdamewood) has quit (Ping timeout: 250 seconds)
2016-09-22 18:59:30	-->	xaanimus (~user@nat-128-84-124-0-161.cit.cornell.edu) has joined ##c++
2016-09-22 18:59:47	-->	fedepad (~fedepad@p4FE11F83.dip0.t-ipconnect.de) has joined ##c++
2016-09-22 19:00:47	-->	buffsy (~bufk@BSN-61-24-107.dynamic.siol.net) has joined ##c++
2016-09-22 19:04:15	<--	xaanimus (~user@nat-128-84-124-0-161.cit.cornell.edu) has quit (Ping timeout: 244 seconds)
2016-09-22 19:04:17	-->	vdamewood (~vdamewood@unaffiliated/vdamewood) has joined ##c++
2016-09-22 19:04:55	-->	ambro718 (~ambro@unaffiliated/ambro718) has joined ##c++
2016-09-22 19:05:00	<--	fedepad (~fedepad@p4FE11F83.dip0.t-ipconnect.de) has quit (Ping timeout: 276 seconds)
2016-09-22 19:06:20	<--	Winslow_ (~Winslow_@bnc.unknowncheats.me) has quit (Ping timeout: 260 seconds)
2016-09-22 19:06:40	-->	Winslow_ (~Winslow_@bnc.unknowncheats.me) has joined ##c++
2016-09-22 19:06:49	<--	wolfcub (~henrique_@177.55.195.190) has quit (Ping timeout: 248 seconds)
2016-09-22 19:07:52	-->	kaffeetrauma (~Thunderbi@85-22-37-153.ip.dokom21.de) has joined ##c++
2016-09-22 19:11:41	<--	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has quit (Quit: Leaving.)
2016-09-22 19:12:41	<--	jjz (~jjz@183.64.203.198) has quit (Read error: Connection reset by peer)
2016-09-22 19:13:20	<--	kurahaupo (~kurahaupo@ppp121-44-230-180.bras2.syd2.internode.on.net) has quit (Ping timeout: 265 seconds)
2016-09-22 19:13:23	<--	EvilPeng1 (~EvilPengu@2605:e000:6189:9600:60:7509:7529:ce3e) has quit (Ping timeout: 272 seconds)
2016-09-22 19:14:19	ubsan	hey
2016-09-22 19:14:19		[19:14]
2016-09-22 19:14:25	ubsan	I'm writing a C++ package manager
2016-09-22 19:14:30	ubsan	and I need a name
2016-09-22 19:14:46	ubsan	anybody have any ideas?
2016-09-22 19:14:58	ubsan	I am literally the worst at coming up with names
2016-09-22 19:18:01	kalven	cpan
2016-09-22 19:18:45	ubsan	kalven: :(
2016-09-22 19:19:42	SlashLife	ubsan: A manager for C++ packages or a package manager written in C++?
2016-09-22 19:19:42	decimad	packman
2016-09-22 19:19:47	ubsan	SlashLife: both
2016-09-22 19:19:59	SlashLife	A manager for C++ packages written in C++?
2016-09-22 19:20:05	ubsan	yep
2016-09-22 19:20:09	SlashLife	couppler?
2016-09-22 19:20:11	ubsan	I mean, C++ libraries
2016-09-22 19:20:15	ubsan	but, you know
2016-09-22 19:20:21	<--	SwiftMatt (~Objective@209.107.210.96) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-22 19:21:17	ubsan	hmm
2016-09-22 19:22:03	<--	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has quit (Quit: ZNC 1.6.3 - http://znc.in)
2016-09-22 19:22:18	-->	Alina-malina (~Alina-mal@37.157.216.188) has joined ##c++
2016-09-22 19:22:59	-->	t0by (~t0by@host114-180-dynamic.0-87-r.retail.telecomitalia.it) has joined ##c++
2016-09-22 19:24:04	<--	Alina-malina (~Alina-mal@37.157.216.188) has quit (Changing host)
2016-09-22 19:24:04	-->	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has joined ##c++
2016-09-22 19:25:02	<--	YungRaj (~YungRaj@50-24-71-159.bcstcmtk01.res.dyn.suddenlink.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-22 19:25:16	-->	SwiftMatt (~Objective@209.107.210.94) has joined ##c++
2016-09-22 19:25:52	-->	mss_cyclist (~MSe@89-250-189-210.tangos.nl) has joined ##c++
2016-09-22 19:26:03	-->	elnormous (~elnormous@87.110.129.37) has joined ##c++
2016-09-22 19:26:16	-->	Cppcon2016 (~cplusplus@c-98-225-36-13.hsd1.wa.comcast.net) has joined ##c++
2016-09-22 19:26:46	-->	badone (badone@nat/redhat/x-tmkifbballtmjxsy) has joined ##c++
2016-09-22 19:29:58	Cppcon2016	\m/
2016-09-22 19:29:58		[19:29]
2016-09-22 19:31:13	-->	jorj (~jorj@162.220.240.216) has joined ##c++
2016-09-22 19:31:56	-->	silent_freak (672b7061@gateway/web/freenode/ip.103.43.112.97) has joined ##c++
2016-09-22 19:34:04	ubsan	Cppcon2016: also, while I'm requesting things of you
2016-09-22 19:34:08	ubsan	Cppcon2016: operator. pls
2016-09-22 19:34:21	Cppcon2016	operator. yes
2016-09-22 19:34:31	Cppcon2016	more people there wants it
2016-09-22 19:34:52	ubsan	I'm so excited for C++17 and 20
2016-09-22 19:34:54	Cppcon2016	concepts are something weird. some people love it, some people hate it, but want it better
2016-09-22 19:34:56	ubsan	ahhhh!
2016-09-22 19:35:06	ubsan	Cppcon2016: yeah
2016-09-22 19:35:16	ubsan	I'm firmly in the love it and want it better camp :P
2016-09-22 19:35:24	Cppcon2016	I just saw a nice presentation from someone who just presented a better version of concepts by just using constexpr
2016-09-22 19:35:24	<--	Leovale (~Leovale@45.72.141.66) has quit (Read error: Connection reset by peer)
2016-09-22 19:36:43	Cppcon2016	and there was another guy who presented ConcepTS, but he also has shown lots of failures on it. his last sentence was "I am glad they did not make it for C++17 and I hope they make it by C++20 with these improvements"
2016-09-22 19:37:00	Cppcon2016	so C++17 will be a blast and C++20 will be a revolution
2016-09-22 19:37:02	-->	PaSaSaP (~PaSaSaP@nat.ds14.agh.edu.pl) has joined ##c++
2016-09-22 19:37:10	-->	Haruno (~Haruno@unaffiliated/haruno) has joined ##c++
2016-09-22 19:38:00	<--	orbiter (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has quit (Read error: Connection reset by peer)
2016-09-22 19:38:17	xaxxon	I dont' get why people are exceited about 17
2016-09-22 19:38:32	ubsan	Cppcon2016: :D
2016-09-22 19:38:32	xaxxon	it looks about as exciting as 14
2016-09-22 19:38:49	Cppcon2016	xaxxon, oh you poor boy
2016-09-22 19:38:52	xaxxon	which is to say nice, but I wouldn't really care if I didn't have it
2016-09-22 19:39:04	Cppcon2016	get out of that cave
2016-09-22 19:39:18	ubsan	auto v = vector{1, 2, 3};
2016-09-22 19:39:21	ubsan	:)
2016-09-22 19:39:26	Cppcon2016	:DDDD
2016-09-22 19:39:55	Cppcon2016	if( LockGuard g; v.empty() ) { ....
2016-09-22 19:39:58	ubsan	auto [x, y] = tuple(1, 2); // this is how you do?
2016-09-22 19:40:33	Cppcon2016	sentinels on range fors :)
2016-09-22 19:40:41	ubsan	Cppcon2016: ooh, what's that?
2016-09-22 19:40:53	Cppcon2016	now begin and end can return different types
2016-09-22 19:41:23	Cppcon2016	so you can use sentinel values to stop ranged for loops
2016-09-22 19:41:27	<--	TzilTzal (~yaron@mail.acronis.com.sg) has quit (Quit: Leaving.)
2016-09-22 19:41:36	ubsan	ohhhh
2016-09-22 19:41:39	ubsan	right :D
2016-09-22 19:42:03	Cppcon2016	optional, variant, filesystem
2016-09-22 19:42:19	Cppcon2016	fold fold fold fold
2016-09-22 19:42:22	Cppcon2016	...
2016-09-22 19:42:53	Cppcon2016	I gonna refactor my code so hard until my fingers bleed
2016-09-22 19:43:11	ubsan	hahaha
2016-09-22 19:43:11	Cppcon2016	(sfw adaptation of an Archer joke)
2016-09-22 19:43:12	-->	Birchy (~Birchy@178-164-108.52.3p.ntebredband.no) has joined ##c++
2016-09-22 19:43:37	ubsan	Cppcon2016: https://github.com/ubsan/capnproto
2016-09-22 19:43:39	-->	karab44 (~karab44@unaffiliated/karab44) has joined ##c++
2016-09-22 19:43:52	Cppcon2016	wow
2016-09-22 19:43:55	Cppcon2016	better protobufs
2016-09-22 19:43:58	ubsan	this is what my thing is supposed to look like
2016-09-22 19:44:06	ubsan	any opinions?
2016-09-22 19:44:48	Cppcon2016	so can I use it like I use protobufs? to write to streams, sockets, etc?
2016-09-22 19:44:50	ubsan	(eventually, I'll have a cpppm.toml file which tells cpppm that it's called capnproto, and the author)
2016-09-22 19:45:02	ubsan	Cppcon2016: oh, yeah, I recommend capnproto
2016-09-22 19:45:02		[19:45]
2016-09-22 19:45:07	Cppcon2016	how versioning works?
2016-09-22 19:45:12	ubsan	not from that repo tho
2016-09-22 19:45:18	-->	DigiByteDev (~JT2@185.29.164.102) has joined ##c++
2016-09-22 19:45:31	ubsan	capnproto's just a test library for my package manager
2016-09-22 19:45:39	Cppcon2016	if I add a field, will the new blob be backwards compatible with the previous one?
2016-09-22 19:45:42	ubsan	because it's nice and big and modern c++y
2016-09-22 19:45:52	ubsan	https://capnproto.org/
2016-09-22 19:46:35	Cppcon2016	the @s are the IDs?
2016-09-22 19:46:39	ubsan	I do not know
2016-09-22 19:46:42	<--	SiN_Bizkit (~SiN_Bizki@88.204.115.96) has quit (Quit: Lost terminal)
2016-09-22 19:46:46	ubsan	I did not write this library :3
2016-09-22 19:46:48	Cppcon2016	:(
2016-09-22 19:46:50	ubsan	I have never used this library
2016-09-22 19:47:04	ubsan	it's just big and modern C++y
2016-09-22 19:47:10	Cppcon2016	I see
2016-09-22 19:47:27	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-22 19:47:30	ubsan	I have heard it's good tho
2016-09-22 19:47:32	SlashLife	https://github.com/SlashLife/libslirc/blob/master/test/test.component_container.cpp#L99 - Given the naming of the current REQUIRE_* macros ... how would you name one that checks whether an assertion failed? REQUIRE_ASSERTS? REQUIRE_FAILS_ASSERT? ... or something different?
2016-09-22 19:47:58	Cppcon2016	REQUIRE_ASSERT_FAIL
2016-09-22 19:48:00	-->	shampa (3b91ae4e@gateway/web/freenode/ip.59.145.174.78) has joined ##c++
2016-09-22 19:48:03	ubsan	SlashLife: I wouldn't use a macro...
2016-09-22 19:48:07	Cppcon2016	^
2016-09-22 19:48:19	SlashLife	ubsan: Catch uses macros.
2016-09-22 19:48:22	ubsan	assert(!foo) seems... much better
2016-09-22 19:48:25	Cppcon2016	yuck
2016-09-22 19:48:30	Cppcon2016	(for catch)
2016-09-22 19:48:52	SlashLife	Ah, right. That's lowercased.
2016-09-22 19:48:59	SlashLife	Anyway ...
2016-09-22 19:49:08	Cppcon2016	not sure why people use such blunt test frameworks. TUT seems to be way simpler and better than most of these macro based ones
2016-09-22 19:49:10	Cppcon2016	!tut
2016-09-22 19:49:11	nolyc	tut is a wonderfully elegant C++ unit testing framework: http://tut-framework.sf.net (apt-get install libtut-dev)
2016-09-22 19:49:14	SlashLife	I need to write test cases that check whether the target code will actually trip its assertion.
2016-09-22 19:51:03	<--	shampa (3b91ae4e@gateway/web/freenode/ip.59.145.174.78) has left ##c++
2016-09-22 19:51:16	<--	allen29 (~all@unaffiliated/allen29) has quit (Quit: Leaving)
2016-09-22 19:51:56	-->	shampa (3b91ae4e@gateway/web/freenode/ip.59.145.174.78) has joined ##c++
2016-09-22 19:52:13	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Ping timeout: 255 seconds)
2016-09-22 19:52:20	-->	tocka (~tocka@78-56-107-170.static.zebra.lt) has joined ##c++
2016-09-22 19:53:39	<--	shampa (3b91ae4e@gateway/web/freenode/ip.59.145.174.78) has quit (Client Quit)
2016-09-22 19:55:19	-->	spooooon (~cw@cpc84421-newc18-2-0-cust250.16-2.cable.virginm.net) has joined ##c++
2016-09-22 19:55:48	<--	ezzieyguywuf (~wolfie@unaffiliated/ezzieyguywuf) has quit (Read error: Connection reset by peer)
2016-09-22 19:56:52	-->	ezzieyguywuf (~wolfie@unaffiliated/ezzieyguywuf) has joined ##c++
2016-09-22 19:57:39	-->	abaines (~abaines@host109-150-226-218.range109-150.btcentralplus.com) has joined ##c++
2016-09-22 19:58:34	introom	{array<int, 10> a = {1,2}; a = {3}}
2016-09-22 19:58:34	geordi	error: expected ';' before '}' (fix known)
2016-09-22 19:58:42	introom	{array<int, 10> a = {1,2}; a = {3};}
2016-09-22 19:58:46	geordi	<no output>
2016-09-22 19:58:49	SlashLife	I don't find try { something(); fail(); } catch(expected_exception&) {} particularly elegant.
2016-09-22 19:58:57	<--	elnormous (~elnormous@87.110.129.37) has quit (Ping timeout: 276 seconds)
2016-09-22 19:58:58	introom	why `a = {3}' succeeds ?
2016-09-22 19:59:28	SlashLife	REQUIRE_THROWS_AS(something(), expected_exception); conveys the intention much better imo.
2016-09-22 20:00:36	xaxxon	introom:  you're assigning a new array using the assignment operator.
2016-09-22 20:00:36		[20:00]
2016-09-22 20:00:54	SlashLife	introom: Why do you think it shouldn't?
2016-09-22 20:01:01	SlashLife	Because it is too short?
2016-09-22 20:01:28	introom	SlashLife: there is no operator= satisfying that.
2016-09-22 20:01:31	SlashLife	Or because it is not an initialization.
2016-09-22 20:01:34	SlashLife	Okay.
2016-09-22 20:01:40	SlashLife	Yes, there isn't ... directly.
2016-09-22 20:01:40	introom	SlashLife: it's not aggreagate init...
2016-09-22 20:01:53	SlashLife	But you can always create a new array and assign from that.
2016-09-22 20:02:17	Cppcon2016	The first two of the CppCon 2016 videos are now up on the CppCon YouTube channel. Others will follow soon and all should be uploaded one month from the end of the conference.
2016-09-22 20:02:18	<--	karakedi (~eAC53C340@unaffiliated/orphan) has quit (Ping timeout: 244 seconds)
2016-09-22 20:02:50	Cppcon2016	also check their github for presentation materials
2016-09-22 20:02:51	introom	SlashLife: so you are saying there is an implicit conversion from {1,2} to std::array ?
2016-09-22 20:02:51	ubsan	Cppcon2016: yayayaya
2016-09-22 20:02:57	ubsan	Cppcon2016: excitement!
2016-09-22 20:03:02	SlashLife	Cppcon2016: Shut up about it already. People that care will look it up anyway. This channel is not your personal "Hey, look, I'm on CppCon" twitter stream.
2016-09-22 20:03:09	-->	lolek (~lolek@unaffiliated/marcin) has joined ##c++
2016-09-22 20:03:21	ubsan	SlashLife: lol
2016-09-22 20:03:22	<--	lolek (~lolek@unaffiliated/marcin) has left ##c++
2016-09-22 20:03:26	Cppcon2016	I definitely gonna use some of their materials in my own presentations (with their permission)
2016-09-22 20:03:26	ubsan	introom: yeah
2016-09-22 20:03:34	xaxxon	introom: http://en.cppreference.com/w/cpp/language/aggregate_initialization
2016-09-22 20:03:37	ubsan	it's called "construction"
2016-09-22 20:03:59	ubsan	(which is a form of initialization)
2016-09-22 20:04:06	Cppcon2016	SlashLife, you have enough time to prepare for Cppcon 2017. it will be better than ever!
2016-09-22 20:04:14	xaxxon	!give Cppcon2016 topic
2016-09-22 20:04:15	nolyc	Cppcon2016: Welcome to ##c++. This channel is for the discussion of standard C++, including potential and future standardizations. This channel is NOT for discussion of: development platforms (OSes and other tools not directly related to C++), non-standard libraries, programs written in C++, other programming languages, a/s/l, or anything else that isn't C++.
2016-09-22 20:04:15	SlashLife	!ops
2016-09-22 20:04:16	nolyc	Adrinael V-ille ville wcstok LIM orbitz woggle PlasmaHH Eelis TinoDidriksen are ops in this channel
2016-09-22 20:04:57	xaxxon	access
2016-09-22 20:05:41	SlashLife	xaxxon: If by that you mean chanserv ... I intended the highlight. He's been thrown out of two channels for this already.
2016-09-22 20:05:57	Cppcon2016	stop being offtopic, SlashLife
2016-09-22 20:06:06	xaxxon	how to get list of ops for any channel:  /msg chanserv access ##c++ list
2016-09-22 20:06:14	SlashLife	xaxxon: Yes, I know.
2016-09-22 20:06:21	xaxxon	oh, but I see.   that will notify all of them
2016-09-22 20:06:26	xaxxon	since it puts their name to the channel
2016-09-22 20:06:32	<--	fahadash (uid44972@gateway/web/irccloud.com/x-cvmxmgqnublfizvl) has quit (Quit: Connection closed for inactivity)
2016-09-22 20:06:36	introom	xaxxon: ubsan sorry, the I didn't understand it. The examples listed there don't include the form of ` a= {1,2}'. They are all initializations there.
2016-09-22 20:06:49	ubsan	introom: yeah, but basically
2016-09-22 20:07:02	Cppcon2016	the structured binding which I learned in cppcon was one of the best things I want to use in C++17
2016-09-22 20:07:14	ubsan	a = {1, 2}; turns {1, 2} into a std::array, and then assigns that std::array to a
2016-09-22 20:07:15	xaxxon	introom:  syntax example #1 at the very top of the link I gave you
2016-09-22 20:07:22	introom	and I am reading the primer 5th edition, it says `a = {1,2}' is error.
2016-09-22 20:07:25	xaxxon	introom:  oh, I guess not quite
2016-09-22 20:07:49	Cppcon2016	same for auto p = pair{1,2};  I am never missing any cppcon again
2016-09-22 20:07:49	xaxxon	introom:  http://en.cppreference.com/w/cpp/language/list_initialization
2016-09-22 20:08:26	Cppcon2016	ohh I forgot atomics
2016-09-22 20:08:45	Cppcon2016	ubsan, Hans Bohem gave a very nice presentation about atomics. they are super duper tricky
2016-09-22 20:08:55	SlashLife	introom: But for T x; x = y; the compiler will try to find a way to make it happen. Since there is the possibility for x = T(), and T can be initialized with y, it can take this route to make the assignment happen.
2016-09-22 20:09:00	Cppcon2016	if you want to use the weakly ordered guarantees to gain performance
2016-09-22 20:09:03	SlashLife	{ f({1,2}); } void f(array<int, 3> x) { cout << x; } // introom - same here
2016-09-22 20:09:03	-->	Aquza (~Aquza@p578b4612.dip0.t-ipconnect.de) has joined ##c++
2016-09-22 20:09:04	geordi	{1, 2, 0}
2016-09-22 20:10:59	Cppcon2016	{ auto p = pair{1,2}; }
2016-09-22 20:10:59	geordi	error: missing template arguments before '{' token
2016-09-22 20:11:00	introom	SlashLife: this means the ctor must implicit, right ?
2016-09-22 20:11:02	Cppcon2016	:((((
2016-09-22 20:11:25	SlashLife	introom: Yes
2016-09-22 20:11:34	SlashLife	... for all I understand at least.
2016-09-22 20:11:42	introom	and another indication here, IIUC, for aggregate type, the ctor is implicit!
2016-09-22 20:11:46	xaxxon	implicit ctor doesn't mean "not marked explicit"
2016-09-22 20:12:01	-->	FreeBirdLjj (~freebirdl@202.119.46.192) has joined ##c++
2016-09-22 20:12:09	xaxxon	implicit ctor is a ctor that's not written in the user's source
2016-09-22 20:12:22	<--	Cppcon2016 (~cplusplus@c-98-225-36-13.hsd1.wa.comcast.net) has quit (Quit: CPPCON!!!)
2016-09-22 20:12:30	SlashLife	What a fucking asshole.
2016-09-22 20:12:37	 *	SlashLife vents.
2016-09-22 20:12:39	xaxxon	that should be the topic.
2016-09-22 20:12:44	 *	SlashLife breathes.
2016-09-22 20:12:49	SlashLife	Okay. Back to C++.
2016-09-22 20:12:59	introom	xaxxon: and `implicit ctor' is not explciit ?
2016-09-22 20:13:14	xaxxon	c++ has lots of overloaded terms
2016-09-22 20:13:27	ubsan	SlashLife: sorry for feeding into it, I'm just excited
2016-09-22 20:13:46	<--	alamar (alamar@2a02:180:a:1:1::110) has quit (Ping timeout: 265 seconds)
2016-09-22 20:13:47	SlashLife	introom: I understood it as "not explicit" ... but yes, implicitly defined ctors aren't explicit.
2016-09-22 20:14:20	SlashLife	ubsan: nvm; he already got me banned from ##programming for indeterminate time - while I was in the middle of helping someone with his Java stuff.
2016-09-22 20:14:33	ubsan	SlashLife: ... how
2016-09-22 20:14:37	xaxxon	!otpic
2016-09-22 20:14:41	ubsan	sorry
2016-09-22 20:14:54	-->	rorro (~rorro@c-227-201.eduroam.liu.se) has joined ##c++
2016-09-22 20:15:12	<--	ferdna (~ferdna@cpe-69-23-141-130.elp.res.rr.com) has quit (Quit: Leaving)
2016-09-22 20:15:41	<--	Winslow_ (~Winslow_@bnc.unknowncheats.me) has quit (Excess Flood)
2016-09-22 20:15:41		[20:15]
2016-09-22 20:15:56	<--	DigiByteDev (~JT2@185.29.164.102) has quit (Quit: DigiByteDev)
2016-09-22 20:17:25	-->	jablo (~jablo@80.243.123.111) has joined ##c++
2016-09-22 20:17:51	introom	SlashLife: sorry I may bother you much. But do you know the where it's mentioned in the standard?
2016-09-22 20:18:03	SlashLife	Which part of it?
2016-09-22 20:18:08	-->	UnlikeSuika (~UnlikeSui@147.47.195.118) has joined ##c++
2016-09-22 20:18:09	-->	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has joined ##c++
2016-09-22 20:18:11	-->	Winslow_ (~Winslow_@bnc.unknowncheats.me) has joined ##c++
2016-09-22 20:18:13	introom	SlashLife: implicit ctor is not explicit.
2016-09-22 20:18:31	-->	rendar (~rendar@host55-19-dynamic.44-79-r.retail.telecomitalia.it) has joined ##c++
2016-09-22 20:18:32	SlashLife	Any ctor that is not marked explicit is not explicit.
2016-09-22 20:18:38	-->	bocaneri (~bocaneri@about/linux/staff/sauvin) has joined ##c++
2016-09-22 20:18:51	SlashLife	If a ctor is defined implicitly, you don't have the chance to put the "explicit" anywhere.
2016-09-22 20:19:14	-->	julian (alamar@oops.kernel.de) has joined ##c++
2016-09-22 20:19:17	introom	you don't know if the compiler puts that.
2016-09-22 20:19:33	xaxxon	yes you do
2016-09-22 20:19:35	<--	jablo (~jablo@80.243.123.111) has quit (Read error: Connection reset by peer)
2016-09-22 20:19:38	--	julian is now known as Guest81290
2016-09-22 20:20:35	introom	xaxxon: so just to make sure, I tried to find it in the standard.
2016-09-22 20:21:39	xaxxon	and?
2016-09-22 20:21:59	introom	xaxxon: and failed to find the relevant part.
2016-09-22 20:23:08	xaxxon	well, you can test it on a compiler and then think about whether it would make sense for it to be allowed to be different across implementations and make a pretty good deduction from that
2016-09-22 20:25:43	SlashLife	introom: http://www.eelis.net/c++draft/class.conv.ctor#1 - "A constructor declared *without* the function-specifier explicit ..." ... also #3: "[ Note: An implicitly-declared copy/move constructor is not an explicit constructor; it may be called for implicit type conversions.  — end note ]"
2016-09-22 20:25:53	-->	rd4455 (~rd45@cpe-108-185-89-248.socal.res.rr.com) has joined ##c++
2016-09-22 20:27:23	<--	snowkidind (~textual@pool-96-255-207-158.washdc.fios.verizon.net) has quit (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
2016-09-22 20:28:49	introom	SlashLife: yeah. thanks. I should check by index instead of searching the keyword.
2016-09-22 20:29:08	-->	Elirips (~Elirips@193.135.165.208) has joined ##c++
2016-09-22 20:30:15	<--	zagabar (~zagabar@unaffiliated/zagabar) has quit (Quit: WeeChat 1.5)
2016-09-22 20:32:18	-->	xnavor (~xnavor@2001:7a0:8000:1002:1cab:250b:1c65:11cd) has joined ##c++
2016-09-22 20:32:18		[20:32]
2016-09-22 20:33:37	<--	DEElekgolo (~DEElekgol@2602:30a:2e0e:a7a0:c9e6:8dd9:47d8:15e6) has quit (Ping timeout: 255 seconds)
2016-09-22 20:33:54	-->	KnownSyntax (~KnownSynt@unaffiliated/knownsyntax) has joined ##c++
2016-09-22 20:34:14	-->	Sceorem (~Sceorem@xbn44-3-82-232-76-9.fbx.proxad.net) has joined ##c++
2016-09-22 20:34:37	-->	blablablub (~howlymowl@euler.ilr.tu-berlin.de) has joined ##c++
2016-09-22 20:34:45	-->	planet_en (~nkh@5.107.65.47) has joined ##c++
2016-09-22 20:35:27	-->	calincru_ (~calin@c-73-231-85-3.hsd1.ca.comcast.net) has joined ##c++
2016-09-22 20:35:35	<--	jaafar (~quassel@50-206-78-205-static.hfc.comcastbusiness.net) has quit (Ping timeout: 265 seconds)
2016-09-22 20:36:00	<--	UnlikeSuika (~UnlikeSui@147.47.195.118) has quit (Ping timeout: 276 seconds)
2016-09-22 20:37:51	<--	CEnnis91 (uid3543@gateway/web/irccloud.com/x-oxevuyibxxpgyova) has quit (Quit: Connection closed for inactivity)
2016-09-22 20:38:19	<--	rmunoz (~ricardo@217.124.142.50) has quit (Remote host closed the connection)
2016-09-22 20:38:24	<--	nealshire_ (~Nealshire@unaffiliated/nealshire) has quit (Ping timeout: 265 seconds)
2016-09-22 20:38:43	<--	dv__ (~quassel@62.178.118.86) has quit (Ping timeout: 250 seconds)
2016-09-22 20:40:47	-->	fedepad (~fedepad@p4FE11F83.dip0.t-ipconnect.de) has joined ##c++
2016-09-22 20:41:00	-->	dv_ (~quassel@62.178.118.86) has joined ##c++
2016-09-22 20:41:05	<--	planet_en (~nkh@5.107.65.47) has quit (Ping timeout: 240 seconds)
2016-09-22 20:43:36	-->	rmunoz (~ricardo@217.124.142.50) has joined ##c++
2016-09-22 20:44:18	<--	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has quit (Ping timeout: 264 seconds)
2016-09-22 20:44:20	<--	vdamewood (~vdamewood@unaffiliated/vdamewood) has quit (Quit: Life beckons.)
2016-09-22 20:45:27	<--	AstralStorm (~astralsto@unaffiliated/astralstorm) has quit (Read error: Connection reset by peer)
2016-09-22 20:46:32	<--	gegagome (~gegagome@ip68-6-89-154.sb.sd.cox.net) has quit (Quit: gegagome)
2016-09-22 20:50:45	-->	eduardas_m (~eduardas_@213.197.143.19) has joined ##c++
2016-09-22 20:50:45		[20:50]
2016-09-22 20:52:13	-->	bkboggy (~bkboggy@cpe-172-250-147-60.socal.res.rr.com) has joined ##c++
2016-09-22 20:54:51	<--	t0by (~t0by@host114-180-dynamic.0-87-r.retail.telecomitalia.it) has quit (Ping timeout: 276 seconds)
2016-09-22 20:54:58	-->	elnormous (~elnormous@87.110.129.37) has joined ##c++
2016-09-22 20:55:10	SlashLife	lol @ http://www.eelis.net/c++draft/hardware.interference#cats!interfering%20with%20canines
2016-09-22 20:55:27	-->	blaxter (~blaxter@62.101.183.90.dyn.user.ono.com) has joined ##c++
2016-09-22 20:57:45	-->	Palsson (~Palsson@pc-193-235-91-227.norrkoping.se) has joined ##c++
2016-09-22 21:00:22	decimad	are you laughing at the naming or the intent? :)
2016-09-22 21:02:41	<--	pticochon2 (~smith@x5ce1e57f.dyn.telefonica.de) has quit (Ping timeout: 240 seconds)
2016-09-22 21:02:53	ubsan	maybe the "cats! interfering with canines"
2016-09-22 21:03:52	ubsan	decimad: or perhaps the examples
2016-09-22 21:03:57	SlashLife	decimad: The intent is cool, and interesting to know about ... I like the actual name - and the fact that this is, indeed, in the index of the standard.
2016-09-22 21:04:13	SlashLife	cats
2016-09-22 21:04:13	SlashLife	  - interfering with canines, [hardware.interference]
2016-09-22 21:04:52	SlashLife	And I hate that I misunderstood the part about dynamic_cast during object construction before. :|
2016-09-22 21:05:37	SlashLife	I thought that in struct A {}; struct B: A {};, during B my_b(); you could successfully cast this to B* in A::A().
2016-09-22 21:05:51	<--	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has quit (Read error: Connection reset by peer)
2016-09-22 21:05:51		[21:05]
2016-09-22 21:06:13	SlashLife	Unfortunately this is possible only after construction of A has finished and construction of B has begun.
2016-09-22 21:06:19	-->	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2016-09-22 21:06:55	-->	vuoto (~vuoto@80-71-135-9.u.parknet.dk) has joined ##c++
2016-09-22 21:07:10	SlashLife	Unfortunately that kills my assertion for correct use of CRTP in my lib.
2016-09-22 21:07:11	decimad	Yeah, first the derived class needs to update the vtables
2016-09-22 21:08:16	decimad	SlashLife: Are you trying to test if the given template parameter is indeed deriving?
2016-09-22 21:08:26	SlashLife	Well, I considered that the RTTI might be available from the start, even if the virtual functions aren't adjusted to the most derived class yet (the latter of which absolutely makes sense)
2016-09-22 21:08:31	SlashLife	Yeah
2016-09-22 21:08:43	decimad	Couldn't you get away with std::is_base
2016-09-22 21:09:21	<--	andyhuzhill (~Thunderbi@14.23.45.178) has quit (Ping timeout: 265 seconds)
2016-09-22 21:09:38	decimad	like static_assert( std::is_base_of< my_crtp<foo>, foo >::value, "foo!" );
2016-09-22 21:10:15	-->	DEElekgolo (~DEElekgol@2602:30a:2e0e:a7a0:c9e6:8dd9:47d8:15e6) has joined ##c++
2016-09-22 21:10:18	SlashLife	Yeah, but that won't catch struct bar: my_crtp<foo> {}
2016-09-22 21:10:55	SlashLife	Because the check would then check whether foo uses it correctly, not whether bar does.
2016-09-22 21:11:03	SlashLife	Oh, well - it just was a nice little extra.
2016-09-22 21:11:03	<--	rbern (~rbern@unaffiliated/rbern) has quit (Ping timeout: 240 seconds)
2016-09-22 21:11:10	-->	AquaL1te (~AquaL1te@unaffiliated/aqual1te) has joined ##c++
2016-09-22 21:11:41	decimad	SlashLife: Right... Don't waste time on such checks.
2016-09-22 21:11:56	<--	calincru_ (~calin@c-73-231-85-3.hsd1.ca.comcast.net) has quit (Quit: Konversation terminated!)
2016-09-22 21:12:40	-->	calincru_ (~calin@c-73-231-85-3.hsd1.ca.comcast.net) has joined ##c++
2016-09-22 21:13:40	-->	Anodl (~Anodl@p2003007A2F243400FD7F500A2CBD124A.dip0.t-ipconnect.de) has joined ##c++
2016-09-22 21:13:42	<--	SecondForm_Glenn (~Thunderbi@108.189.70.212) has quit (Ping timeout: 264 seconds)
2016-09-22 21:16:30	-->	andyhuzhill (~Thunderbi@14.23.45.178) has joined ##c++
2016-09-22 21:16:30	<--	Diyar (~Diyar@unaffiliated/diyar) has quit (Read error: Connection reset by peer)
2016-09-22 21:16:36	-->	gagbo (~gagbo@unaffiliated/gagbo) has joined ##c++
2016-09-22 21:17:25	-->	Enhex (~Enhex@82.252.138.77.rev.sfr.net) has joined ##c++
2016-09-22 21:17:26	nikki93	if you want to move from a deque to the end of another deque and empty the first, what's a good way to do that?
2016-09-22 21:17:28	nikki93	move iterator?
2016-09-22 21:18:02	va	move what though?
2016-09-22 21:18:14	nikki93	or to make the receiving deque be a deque of deques and just swap w/ a new last element on the receive?
2016-09-22 21:18:15	nikki93	it's one-way
2016-09-22 21:18:33	nikki93	va: right now the elements are std::function<void(void)>s (just abstract 'work' to do)
2016-09-22 21:18:39	-->	biberu (~biberu@c-cf2d72d5.08-441-7570702.cust.bredbandsbolaget.se) has joined ##c++
2016-09-22 21:19:11	va	if you had access to the ->next and ->prev pointers, you could splice the entire list
2016-09-22 21:19:15	nikki93	the situation is: one thread sends 'Op's to run, but you only ever expect them to start being done when you say "GO" which you say whenever you want once in a while
2016-09-22 21:19:40	nikki93	receiving thread runs its backlog
2016-09-22 21:19:54	-->	seru76 (~seru76@77.89.191.179) has joined ##c++
2016-09-22 21:20:10	nikki93	va: is a deque a good input for this? maybe should use two lists and splice them?
2016-09-22 21:20:33	nikki93	the main thing to take note of is that I want to be able to write to each batch rly fast since I will write a lot, but only once in a while say batch ended
2016-09-22 21:20:46	nikki93	and the batches each may be big, but there are few
2016-09-22 21:22:03	SlashLife	nikki93: So you'll write one queue and at some point "lock it", stop writing to it and give it away to be worked on?
2016-09-22 21:22:03		[21:22]
2016-09-22 21:22:05	TinoDidriksen	But it's still only function pointers, which are tiny.
2016-09-22 21:22:07	va	not quite sure why std::deque exists even.. most implementation do map to something like a doubly-linked list, don't they..
2016-09-22 21:22:15	nikki93	SlashLife: exactly
2016-09-22 21:22:32	nikki93	I'm only writing to one queue and at some point I say "ok this is done, do this now"
2016-09-22 21:22:33	SlashLife	In that case, is there a reason why you don't use a vector to store the work to and pass it on?
2016-09-22 21:22:42	nikki93	I use a deque to store the work, I can use a vector
2016-09-22 21:22:57	nikki93	yeah good point
2016-09-22 21:23:03	nikki93	is a vector good for each unit?
2016-09-22 21:23:03	SlashLife	Doesn't change your initial problem, but considering you don't need to keep on adding and removing, it seems like a better choice.
2016-09-22 21:23:29	TinoDidriksen	Deque guarantees that elements remain at the same address, but is still allocated in chunks. It's a good middle ground if you don't want the overhead of a list but need reference stability.
2016-09-22 21:23:32	nikki93	yeah because when I get to reading off a batch it's closed for work
2016-09-22 21:23:45	<--	przemkovv-bis (~przemkovv@d83-37.icpnet.pl) has quit (Ping timeout: 244 seconds)
2016-09-22 21:24:37	va	TinoDidriksen: but in a std::list, elements remain in their position too (same address), do they not?
2016-09-22 21:24:51	SlashLife	And I think I'd write an iterator wrapper for this: Keep some reference (or pointer) to the current container you're working on, and fetch its begin and end iterators.
2016-09-22 21:24:51	TinoDidriksen	Yes, but each is individually allocated, which is crazy.
2016-09-22 21:25:21	decimad	Unless the objects are heavy
2016-09-22 21:25:24	nikki93	SlashLife: yeah that's exactly the idea, to keep a deque as the metacontainer which is the backlog
2016-09-22 21:25:28	TinoDidriksen	Deque is more a vector<array<T,1024>>
2016-09-22 21:25:42	SlashLife	For as long as this begin!=end, just keep on iterating over it. When you're done with the container, then request the next container to work on from wherever you store your work to.
2016-09-22 21:25:52	nikki93	and then the idea was to push_back a 'new' batch to it then swap() it with the currently being written to batch when the "GO" call happens
2016-09-22 21:26:08	SlashLife	(That storage backend can use this as a clue to kill the container that you just finished.)
2016-09-22 21:26:33	<--	calincru_ (~calin@c-73-231-85-3.hsd1.ca.comcast.net) has quit (Ping timeout: 248 seconds)
2016-09-22 21:28:11	-->	issac (~issac@39.128.11.8) has joined ##c++
2016-09-22 21:28:12	-->	anton02 (~quassel@lal1651212.lnk.telstra.net) has joined ##c++
2016-09-22 21:28:26	nikki93	so yeah do you guys think that the best way to transfer the batch from current to backlog and empty the current
2016-09-22 21:28:34	nikki93	is to make an empty on the backlog and swap it with current
2016-09-22 21:28:34	nikki93	?
2016-09-22 21:28:35	SlashLife	So ... struct thing_iterator { queue_master *master; typedef vector<foo> underlying_type; underlying_type::iterator begin, end; thing_iterator &operator++(int) { begin++; if (begin == end) { auto &container = master->get_next_container(); begin=container.begin(); end=container.end(); } return *this; } }
2016-09-22 21:29:04	nikki93	I'm using newcpp so using for (auto & ...) etc.
2016-09-22 21:29:08	nikki93	and no pointers
2016-09-22 21:29:34	nikki93	SlashLife: but I see what you mean with the begin end...
2016-09-22 21:29:45	nikki93	you're allowing read simultaneously?
2016-09-22 21:30:00	SlashLife	If you write it accordingly ... sure.
2016-09-22 21:30:13	nikki93	so would the mutex be each meta iteration only
2016-09-22 21:30:14	nikki93	makes sense
2016-09-22 21:30:28	<--	Ropeney (~Ropeney@tank.mindvision.com.au) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-22 21:30:50	<--	elnormous (~elnormous@87.110.129.37) has quit (Ping timeout: 272 seconds)
2016-09-22 21:30:51	SlashLife	Although I'd wrap it even once more in that case - and it will complicate getting rid of the old container.
2016-09-22 21:31:22	nikki93	i think i'll just wrap the entire old container
2016-09-22 21:31:37	nikki93	because in this case mostly the backlog is like just one batch probably
2016-09-22 21:31:41	-->	velco (~chill@vlan-185-78-38-153.comnet.bg) has joined ##c++
2016-09-22 21:31:48	nikki93	it's for buffered rendering from a JS thread to an OpenGL thread
2016-09-22 21:32:08	SlashLife	And now I'll need to find out why my redefining assert() doesn't work.
2016-09-22 21:32:19	<--	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has quit (Quit: For the Red Army!)
2016-09-22 21:32:37	-->	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2016-09-22 21:32:38	-->	Munnu (~timo@91-158-145-247.elisa-laajakaista.fi) has joined ##c++
2016-09-22 21:33:51	va	SlashLife: cause libc might have an evil #undef assert, #define assert(x) myhouse?
2016-09-22 21:34:33	SlashLife	va: That ... and it is undef-ed and re-def-ed outside of the include guard.
2016-09-22 21:35:10	SlashLife	Evil #undef indeed.
2016-09-22 21:35:40	-->	lsk (~lsk@enucs/member/lsk) has joined ##c++
2016-09-22 21:37:44	SlashLife	Really evil. It even carries a little note:
2016-09-22 21:37:44		[21:37]
2016-09-22 21:37:52	-->	zack_s_ (57ea344a@gateway/web/freenode/ip.87.234.52.74) has joined ##c++
2016-09-22 21:38:01	<--	rd4455 (~rd45@cpe-108-185-89-248.socal.res.rr.com) has quit (Quit: Leaving)
2016-09-22 21:38:04	SlashLife	According to C99 standard (section 7.2) the assert macro shall be redefined each time assert.h gets included depending on the status of NDEBUG macro.
2016-09-22 21:38:48	SlashLife	Off to replace assert() everywhere in my code then. (:
2016-09-22 21:40:18	-->	pylbrecht (~pylbrecht@2a02:8109:8a00:b6c:e6:6be5:827e:7b01) has joined ##c++
2016-09-22 21:40:39	zack_s_	I want to use a time span class in my application
2016-09-22 21:40:53	-->	karakedi (~eAC53C340@unaffiliated/orphan) has joined ##c++
2016-09-22 21:40:55	<--	shingshang (~shingshan@101.164.159.8) has quit (Ping timeout: 260 seconds)
2016-09-22 21:41:08	-->	ReverseFunctions (4b8dae9a@gateway/web/freenode/ip.75.141.174.154) has joined ##c++
2016-09-22 21:41:08	nikki93	SlashLife: you could change your includepath priorities such that your own custom assert.h is included which guards and includes assert.h inside
2016-09-22 21:41:20	zack_s_	should I take std::chrono::duration or boost::posix_time; time_duration ?
2016-09-22 21:41:35	<--	josef_k (~Jeremy@210-10-222-98.mel.static-ipl.aapt.com.au) has quit (Ping timeout: 272 seconds)
2016-09-22 21:41:39	-->	unlaudable (~bleurgh@demadia.net.afrihost.co.za) has joined ##c++
2016-09-22 21:41:42	ubsan	zack_s_: the former?
2016-09-22 21:41:55	-->	Lomex (~lomex@213.61.34.42) has joined ##c++
2016-09-22 21:41:58	zack_s_	and why?
2016-09-22 21:42:01	zack_s_	ubsan: ?
2016-09-22 21:42:02	ubsan	generally always take the stdlib type if possible
2016-09-22 21:42:04	SlashLife	nikki93: I don't want to provide a <cassert> header, though, and I just want to override the assert() behavior while running test cases.
2016-09-22 21:42:18	nikki93	haha yes definitely
2016-09-22 21:42:24	nikki93	I was just trying to think of silly ways to do it
2016-09-22 21:42:28	nikki93	:)
2016-09-22 21:42:59	-->	StardustX (~s@2001:da8:203:2209:9f0b:a7f:1ebc:1f01) has joined ##c++
2016-09-22 21:43:19	-->	Lowl3v3l (~Lowl3v3l@dslb-088-075-098-175.088.075.pools.vodafone-ip.de) has joined ##c++
2016-09-22 21:43:39	-->	bjz (~bjz@pa49-199-193-226.pa.vic.optusnet.com.au) has joined ##c++
2016-09-22 21:44:35	TinoDidriksen	So use my_assert() in your own code, and have it forward to assert() outside the test env.
2016-09-22 21:44:45	-->	marcofe (~marcofe@test-centre4-gw.estec.esa.int) has joined ##c++
2016-09-22 21:44:52	SlashLife	Yeah, that's what I'm going to do now.
2016-09-22 21:45:08	SlashLife	Hence replacing.
2016-09-22 21:45:25	cbreak	SlashLife: or: don't use assert
2016-09-22 21:45:28	cbreak	it's dumb anyway
2016-09-22 21:45:40	-->	ScorpionJack (~Scorpion@unaffiliated/scorpionjack) has joined ##c++
2016-09-22 21:45:40	urdh	wut
2016-09-22 21:47:19	-->	kasper^ (~safaf@82.137.10.102) has joined ##c++
2016-09-22 21:48:29	<--	mangolisk (~mangolisk@S0106848dc7ebaa06.vc.shawcable.net) has quit (Read error: Connection reset by peer)
2016-09-22 21:49:05	<--	kasper_ (~safaf@82.137.11.238) has quit (Ping timeout: 260 seconds)
2016-09-22 21:49:09	-->	Kirrahe (~kirrahe@ip51cc4257.adsl-surfen.hetnet.nl) has joined ##c++
2016-09-22 21:49:19	-->	kasper_ (~safaf@82.137.9.11) has joined ##c++
2016-09-22 21:49:23	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-22 21:49:30	-->	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has joined ##c++
2016-09-22 21:49:49	<--	StardustX (~s@2001:da8:203:2209:9f0b:a7f:1ebc:1f01) has left ##c++ ("Leaving")
2016-09-22 21:50:02	<--	bkboggy (~bkboggy@cpe-172-250-147-60.socal.res.rr.com) has quit (Quit: Leaving)
2016-09-22 21:51:54	<--	kasper^ (~safaf@82.137.10.102) has quit (Ping timeout: 265 seconds)
2016-09-22 21:51:56	-->	merijn (~merijn@wcw-staff-145-18-167-76.wireless.uva.nl) has joined ##c++
2016-09-22 21:52:58	-->	shingshang (~shingshan@101.164.159.8) has joined ##c++
2016-09-22 21:52:58		[21:52]
2016-09-22 21:53:38	-->	coincoin4ever (~coincoin@178.16.163.28) has joined ##c++
2016-09-22 21:54:12	-->	drozdziak1 (~drozdziak@do-atman.cubiware.com) has joined ##c++
2016-09-22 21:54:15	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Ping timeout: 272 seconds)
2016-09-22 21:54:56	<--	bjz (~bjz@pa49-199-193-226.pa.vic.optusnet.com.au) has quit (Read error: Connection reset by peer)
2016-09-22 21:54:58	m_ben	cbreak: why is assert dumb?
2016-09-22 21:55:08	m_ben	helped me quite often to find bugs
2016-09-22 21:55:18	cbreak	because it aborts the program instead of providing proper diagnostics
2016-09-22 21:55:27	cbreak	because it hides bugs instead of making them easy to find
2016-09-22 21:55:46	<--	FreeBirdLjj (~freebirdl@202.119.46.192) has quit (Remote host closed the connection)
2016-09-22 21:55:50	cbreak	because it leads to some hard-to-debug errors when used incorrectly (which is easy for noobs)
2016-09-22 21:56:03	cbreak	because it's a macro with an all lowercase name
2016-09-22 21:56:05	-->	chris64 (~chris@unaffiliated/chris64) has joined ##c++
2016-09-22 21:56:42	-->	bjz (~bjz@pa49-199-193-226.pa.vic.optusnet.com.au) has joined ##c++
2016-09-22 21:57:51	<--	bushido_ (~bushido@unaffiliated/bursihido) has quit (Ping timeout: 244 seconds)
2016-09-22 21:57:55	<--	Jiwan (~jeangu@212.247.124.2) has quit (Remote host closed the connection)
2016-09-22 21:57:57	k_sze[work]	By definition, when I want to dynamically allocate memory for an array of structs, I can just do malloc(number_of_elements * sizeof(my_struct)), right?
2016-09-22 21:58:10	cbreak	k_sze[work]: no
2016-09-22 21:58:16	TinoDidriksen	Don't use malloc() in C++
2016-09-22 21:58:27	<--	raphaelsc (~raphaelsc@179.187.140.226) has quit (Remote host closed the connection)
2016-09-22 21:58:31	cbreak	k_sze[work]: std::vector<x> v;
2016-09-22 21:58:41	TinoDidriksen	Use std::vector<my_struct> and forget about silly manual memory management.
2016-09-22 21:58:58	k_sze[work]	TinoDidriksen, can it do memory aligned allocation?
2016-09-22 21:59:03	-->	KAHR-Alpha (~Alpha@AReims-652-1-187-168.w92-142.abo.wanadoo.fr) has joined ##c++
2016-09-22 21:59:04	k_sze[work]	I'm actually doing aligned_alloc
2016-09-22 21:59:04	<--	Guest98158 (skarn@gateway/shell/firrre/x-jbgypusomgjgvzwy) has quit (Excess Flood)
2016-09-22 21:59:11	cbreak	it is aligned
2016-09-22 21:59:22	cbreak	enough to be able to safely store its contents
2016-09-22 21:59:42	cbreak	likely aligned enough to store even max_align_t
2016-09-22 21:59:45	-->	elnormous (~elnormous@87.110.129.37) has joined ##c++
2016-09-22 21:59:46	TinoDidriksen	Just set the alignment requirements for the type if they're bigger than default, then no need to manually manage that either.
2016-09-22 21:59:55	-->	Jiwan (~jeangu@212.247.124.2) has joined ##c++
2016-09-22 22:00:01	-->	riemann (~riemann@84-10-11-234.static.chello.pl) has joined ##c++
2016-09-22 22:00:18	k_sze[work]	I mean I need to align to 32-byte boundaries so ffmpeg can take advantage of SSE/AVX vectorization.
2016-09-22 22:00:33	et	 except that "just setting it" doesn't work pre-c++17, and I've not checked if it really works there
2016-09-22 22:00:45	et	k_sze[work]: have a look at how Eigen does it
2016-09-22 22:01:02	<--	k_sze[work] (~Kira@unaffiliated/kira) has left ##c++ ("Leaving")
2016-09-22 22:01:08	-->	k_sze[work] (~Kira@unaffiliated/kira) has joined ##c++
2016-09-22 22:01:10	k_sze[work]	oops
2016-09-22 22:01:17	cbreak	<< alignof(max_align_t)
2016-09-22 22:01:18	geordi	16
2016-09-22 22:01:24	cbreak	k_sze[work]: that's what you'll get
2016-09-22 22:01:30	et	and that's not enough
2016-09-22 22:01:37	<--	ambro718 (~ambro@unaffiliated/ambro718) has quit (Ping timeout: 265 seconds)
2016-09-22 22:01:43	cbreak	if you want more, you'll have to do it yourself
2016-09-22 22:01:46	<--	bjz (~bjz@pa49-199-193-226.pa.vic.optusnet.com.au) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-22 22:01:48	<--	elnormous (~elnormous@87.110.129.37) has quit (Remote host closed the connection)
2016-09-22 22:01:55	<--	gist_ (~jack@p57906AA3.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2016-09-22 22:02:01	k_sze[work]	cbreak, which is exactly my case. I need 32-bytes.
2016-09-22 22:02:37	-->	JohnMS_WORK (~chatzilla@host-193-59-178-3.gog.com) has joined ##c++
2016-09-22 22:03:02	cbreak	<< alignof(X); struct alignas(32) X {};
2016-09-22 22:03:03	geordi	32
2016-09-22 22:03:08	cbreak	k_sze[work]: like this?
2016-09-22 22:03:17	et	that's ill-formed
2016-09-22 22:03:34	-->	FreeBirdLjj (~freebirdl@202.119.46.192) has joined ##c++
2016-09-22 22:03:41	cbreak	et: why?
2016-09-22 22:04:05	<--	pylbrecht (~pylbrecht@2a02:8109:8a00:b6c:e6:6be5:827e:7b01) has quit (Quit: Segmentation fault (core dumped))
2016-09-22 22:05:19	cbreak	et: http://eel.is/c++draft/dcl.align#attribute!alignment
2016-09-22 22:05:19	-->	szulak (uid162164@gateway/web/irccloud.com/x-dumvopyjfgfdgxnj) has joined ##c++
2016-09-22 22:05:20	et	ah, that one isn't, but it's not guaranteed to work
2016-09-22 22:05:25	-->	pylbrecht (~pylbrecht@2a02:8109:8a00:b6c:e6:6be5:827e:7b01) has joined ##c++
2016-09-22 22:05:31	cbreak	if it wouldn't work it'd be ill formed :)
2016-09-22 22:05:54	<--	TMM (~hp@fsf/member/pdpc.professional.tmm) has quit (Quit: Ex-Chat)
2016-09-22 22:05:58	-->	al1o (~al1o@236.red-88-16-49.dynamicip.rima-tde.net) has joined ##c++
2016-09-22 22:06:27	<--	dinfuehr (~dinfuehr@188-23-146-172.adsl.highway.telekom.at) has quit (Ping timeout: 265 seconds)
2016-09-22 22:06:43	cbreak	<< __STDCPP_DEFAULT_NEW_ALIGNMENT__;
2016-09-22 22:06:43	geordi	error: '__STDCPP_DEFAULT_NEW_ALIGNMENT__' was not declared in this scope
2016-09-22 22:07:04	<--	rorro (~rorro@c-227-201.eduroam.liu.se) has quit (Ping timeout: 240 seconds)
2016-09-22 22:07:26	cbreak	geordi: use --clang
2016-09-22 22:07:27	geordi	error: use of undeclared identifier '__STDCPP_DEFAULT_NEW_ALIGNMENT__'
2016-09-22 22:07:32	cbreak	:(
2016-09-22 22:08:43	-->	dinfuehr (~dinfuehr@194-166-115-102.adsl.highway.telekom.at) has joined ##c++
2016-09-22 22:08:43		[22:08]
2016-09-22 22:09:10	<--	ElectricSheep (~esheep_zn@c-71-225-69-61.hsd1.pa.comcast.net) has quit (Remote host closed the connection)
2016-09-22 22:10:06	<--	Goplat (~goplat@reactos/developer/Goplat) has quit (Remote host closed the connection)
2016-09-22 22:11:17	k_sze[work]	Is there something inherently wrong with using aligned_alloc in C++11 or later, other than the fact that I don't get automatic memory management?
2016-09-22 22:13:32	<--	Winslow_ (~Winslow_@bnc.unknowncheats.me) has quit (Excess Flood)
2016-09-22 22:14:01	cbreak	k_sze[work]: you can use unique_ptr
2016-09-22 22:14:02	-->	Winslow_ (~Winslow_@bnc.unknowncheats.me) has joined ##c++
2016-09-22 22:14:08	TinoDidriksen	You could make an allocator that uses aligned_alloc() and give that to vector.
2016-09-22 22:14:11	cbreak	that'll give you automatic memory management with it
2016-09-22 22:14:17	<--	DEElekgolo (~DEElekgol@2602:30a:2e0e:a7a0:c9e6:8dd9:47d8:15e6) has quit (Read error: Connection reset by peer)
2016-09-22 22:14:34	<--	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has quit (Ping timeout: 248 seconds)
2016-09-22 22:14:43	-->	pheenx (~pheenx@2a02:8071:b68a:1c00:225:22ff:fee7:7dc5) has joined ##c++
2016-09-22 22:14:49	cbreak	TinoDidriksen: like http://www.boost.org/doc/libs/1_61_0/doc/html/align/tutorial.html#align.tutorial.using_aligned_allocator? :)
2016-09-22 22:15:23	-->	rorro (~rorro@c-227-201.eduroam.liu.se) has joined ##c++
2016-09-22 22:16:55	-->	bjz (~bjz@14-201-215-168.tpgi.com.au) has joined ##c++
2016-09-22 22:17:54	<--	al1o (~al1o@236.red-88-16-49.dynamicip.rima-tde.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-22 22:18:28	-->	elnormous (~elnormous@gateway.evolutiongaming.com) has joined ##c++
2016-09-22 22:18:30	-->	irrenhaus3 (~xenon@HSI-KBW-046-005-253-043.hsi8.kabel-badenwuerttemberg.de) has joined ##c++
2016-09-22 22:18:54	<--	elnormous (~elnormous@gateway.evolutiongaming.com) has quit (Remote host closed the connection)
2016-09-22 22:19:01	ubsan	did anyone see that ^
2016-09-22 22:19:01	-->	elnormous (~elnormous@gateway.evolutiongaming.com) has joined ##c++
2016-09-22 22:19:21	ubsan	I think my irc client auto-sent it
2016-09-22 22:19:42	ubsan	if so, I'm sorry :(
2016-09-22 22:20:21	-->	Markow (~Markow@176.122.215.103) has joined ##c++
2016-09-22 22:20:42	TinoDidriksen	Didn't see anything...
2016-09-22 22:20:59	ubsan	okay, good
2016-09-22 22:21:26	ubsan	although weird UX bug then
2016-09-22 22:21:31	-->	jjz (~jjz@183.64.203.198) has joined ##c++
2016-09-22 22:22:06	<--	shingshang (~shingshan@101.164.159.8) has quit (Ping timeout: 264 seconds)
2016-09-22 22:22:12	-->	seishun (~Kakera@46.109.98.192) has joined ##c++
2016-09-22 22:23:03	-->	planet_en (~nkh@5.107.65.47) has joined ##c++
2016-09-22 22:23:12	-->	AstralStorm (~astralsto@unaffiliated/astralstorm) has joined ##c++
2016-09-22 22:23:12	k_sze[work]	hmm, boost.align doesn't exist in boost 1.54, it seems?
2016-09-22 22:24:20	<--	k_sze[work] (~Kira@unaffiliated/kira) has left ##c++ ("Leaving")
2016-09-22 22:24:20		[22:24]
2016-09-22 22:24:24	-->	k_sze[work] (~Kira@unaffiliated/kira) has joined ##c++
2016-09-22 22:24:29	decimad	Which century was 1.54?
2016-09-22 22:25:04	k_sze[work]	decimad, I'm developing for Ubuntu 14.04 and want to avoid installing non-base stuff.
2016-09-22 22:25:20	k_sze[work]	1.54 is what I get on Ubuntu 14.04.
2016-09-22 22:25:52	k_sze[work]	also, clang 3.8, which means C++11
2016-09-22 22:26:07	decimad	seems to be introduced with 1.56
2016-09-22 22:26:07	-->	Rajamaa (~Rajamaa@a91-156-244-1.elisa-laajakaista.fi) has joined ##c++
2016-09-22 22:26:12	<--	ReverseFunctions (4b8dae9a@gateway/web/freenode/ip.75.141.174.154) has quit (Quit: Page closed)
2016-09-22 22:26:28	<--	unlaudable (~bleurgh@demadia.net.afrihost.co.za) has quit (Quit: Leaving)
2016-09-22 22:26:29	TinoDidriksen	Isn't that part header-only? I'd expect so.
2016-09-22 22:26:55	cbreak	k_sze[work]: you can install boost just fine
2016-09-22 22:27:08	cbreak	k_sze[work]: developing for ubuntu 14.4 doesn't mean developing ON it :)
2016-09-22 22:27:22	cbreak	especially since this particular boost library seems header only
2016-09-22 22:27:34	<--	planet_en (~nkh@5.107.65.47) has quit (Ping timeout: 240 seconds)
2016-09-22 22:27:40	-->	Miroboru (~myrvoll@78.91.103.24) has joined ##c++
2016-09-22 22:27:45	TinoDidriksen	It makes packaging a tiny bit harder, unless you just bundle that part.
2016-09-22 22:28:30	k_sze[work]	cbreak, what will give me automatic memory management? unique_ptr or aligned_allocator?
2016-09-22 22:28:38	-->	z8z (~x@ac230029.ppp.asahi-net.or.jp) has joined ##c++
2016-09-22 22:28:46	cbreak	k_sze[work]: both, I guess
2016-09-22 22:28:56	cbreak	allocators would be used together with a container (std::vector)
2016-09-22 22:29:32	<--	SwiftMatt (~Objective@209.107.210.94) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-22 22:30:30	-->	p4trix (~p4trix@37.red-79-145-248.dynamicip.rima-tde.net) has joined ##c++
2016-09-22 22:32:29	<--	joehunt5888 (~joehunt@115.164.86.100) has quit (Ping timeout: 265 seconds)
2016-09-22 22:32:51	-->	sophia7 (~sophia7@unaffiliated/sophia7) has joined ##c++
2016-09-22 22:33:43	-->	lolek (~lolek@unaffiliated/marcin) has joined ##c++
2016-09-22 22:34:20	<--	BaneAliens (uid112512@gateway/web/irccloud.com/x-rlmjgdbataeekhdg) has quit (Quit: Connection closed for inactivity)
2016-09-22 22:34:20	<--	lolek (~lolek@unaffiliated/marcin) has left ##c++
2016-09-22 22:34:39	-->	SiN_Bizkit (~SiN_Bizki@90.188.118.76) has joined ##c++
2016-09-22 22:34:55	-->	cysm (cysm@unaffiliated/paracyst) has joined ##c++
2016-09-22 22:35:58	<--	AstralStorm (~astralsto@unaffiliated/astralstorm) has quit (Read error: Connection reset by peer)
2016-09-22 22:36:08	-->	AstralStorm (~astralsto@unaffiliated/astralstorm) has joined ##c++
2016-09-22 22:36:09	-->	kilbith (4ee51c3e@gateway/web/cgi-irc/kiwiirc.com/ip.78.229.28.62) has joined ##c++
2016-09-22 22:36:11	<--	kasper_ (~safaf@82.137.9.11) has quit
2016-09-22 22:36:30	-->	kasper^ (~safaf@82.137.9.11) has joined ##c++
2016-09-22 22:37:26	-->	cjwelborn (cjwelborn@coder.firrre.com) has joined ##c++
2016-09-22 22:37:38	<--	cjwelborn (cjwelborn@coder.firrre.com) has quit (Changing host)
2016-09-22 22:37:39	-->	cjwelborn (cjwelborn@unaffiliated/cjwelborn) has joined ##c++
2016-09-22 22:37:58	-->	shingshang (~shingshan@101.164.159.8) has joined ##c++
2016-09-22 22:39:26	-->	carado (~carado@bea44-1-78-193-226-57.fbxo.proxad.net) has joined ##c++
2016-09-22 22:39:26		[22:39]
2016-09-22 22:39:43	-->	giraffe (skarn@gateway/shell/firrre/x-impnvoeaincywfbc) has joined ##c++
2016-09-22 22:40:04	-->	mimi89999 (~michel@89-70-102-105.dynamic.chello.pl) has joined ##c++
2016-09-22 22:40:06	--	giraffe is now known as Guest54448
2016-09-22 22:40:24	mimi89999	Hello
2016-09-22 22:40:25	mimi89999	If I do a, b =c; will a and b be equal to c in C++?
2016-09-22 22:40:52	SlashLife	Only if c is 0 and these variables have static storage duration.
2016-09-22 22:41:00	SlashLife	Generally: No.
2016-09-22 22:41:03	TinoDidriksen	You want a = b = c;
2016-09-22 22:41:31	V-ille	SlashLife: storage duration has nothing to do with it, that's assignment, not initialization
2016-09-22 22:41:50	SlashLife	Yeah, I was imagining an "int" in front of it.
2016-09-22 22:42:04	SlashLife	Probably due to the ,
2016-09-22 22:42:04	<--	plee (~kurt@89.10.219.180) has quit (Read error: Connection reset by peer)
2016-09-22 22:42:12	cbreak	operator, lives!
2016-09-22 22:42:13	V-ille	I like your vivid imagination
2016-09-22 22:42:14	ubsan	SlashLife: technically, could be std::vector<int> c{}; auto a, b = c;
2016-09-22 22:42:18	ubsan	I wonder if that works
2016-09-22 22:42:26	ubsan	{ std::vector<int> c{}; auto a, b = c; }
2016-09-22 22:42:26	geordi	error: declaration of 'auto a' has no initializer
2016-09-22 22:42:29	ubsan	aww
2016-09-22 22:42:31	-->	plee (~kurt@89.10.219.180) has joined ##c++
2016-09-22 22:42:37	ubsan	{ std::vector<int> c{}; auto a = c, b; }
2016-09-22 22:42:37	geordi	error: declaration of 'auto b' has no initializer
2016-09-22 22:42:37	SlashLife	V-ille: Sleep deprivation does that to people. :)
2016-09-22 22:42:39	ubsan	dang
2016-09-22 22:43:01	mimi89999	So if I want to assign c to a and b I a=b=c;?
2016-09-22 22:43:11	V-ille	yes
2016-09-22 22:43:14	V-ille	!next
2016-09-22 22:43:15	nolyc	Another satisfied customer, next!
2016-09-22 22:43:36	cbreak	mimi89999: or clearer: a = c; b = c;
2016-09-22 22:43:36	<--	m_ben (~m_ben@unaffiliated/m-ben/x-5917362) has quit (Ping timeout: 265 seconds)
2016-09-22 22:43:53	cbreak	a = b = c; will assign c to b, then b to a
2016-09-22 22:44:02	cbreak	that might or might not be the same as assigning c to both
2016-09-22 22:44:21	cbreak	(simple example: with auto_ptr it is not the same :D)
2016-09-22 22:44:30	ubsan	cbreak: lol
2016-09-22 22:44:42	<--	Rickmasta (~Rick@pool-96-246-90-176.nycmny.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-22 22:44:44	ubsan	cbreak: but a = c; b = c; would also not make a == b; true
2016-09-22 22:44:45	ubsan	:P
2016-09-22 22:44:59	cbreak	depends
2016-09-22 22:45:31	mimi89999	So a=b=c; or a=c; b=c;?
2016-09-22 22:45:43	SlashLife	I want to be able to use constants from multiple different enums as identifiers; so far so fine, I can just take the type of the enum and use a (type_index, static_cast<underlying_type>(enum)) tuple (assuming all enums use the same underlying type).
2016-09-22 22:45:48	cbreak	mimi89999: pick the second :)
2016-09-22 22:46:07	mimi89999	OK. Thanks
2016-09-22 22:46:18	-->	bx2 (~bx2@46.140.123.246) has joined ##c++
2016-09-22 22:46:52	-->	vicenteH (~user@195.235.96.150) has joined ##c++
2016-09-22 22:47:04	SlashLife	I would like to limit the eligible enum types to types which were specifically declared for this use; as users may define additional types, I'm not too fond of using a namespaced trait type ... any good alternatives for it?
2016-09-22 22:47:55	cbreak	SlashLife: traits are nice.
2016-09-22 22:48:10	<--	msb (~msb@unaffiliated/detergnet) has quit (Ping timeout: 255 seconds)
2016-09-22 22:48:33	<--	Winslow_ (~Winslow_@bnc.unknowncheats.me) has quit (Excess Flood)
2016-09-22 22:48:34	mimi89999	a, b=c; was assigning 32765 to a and c was equal to 1. :P
2016-09-22 22:48:34	SlashLife	Ideally I would've liked to let the enum inherit from some "base enum" (which would also have solved unifying the underlying type), but that is not possible unfortunately.
2016-09-22 22:48:42	mimi89999	Thanks
2016-09-22 22:48:55	-->	Winslow_ (~Winslow_@bnc.unknowncheats.me) has joined ##c++
2016-09-22 22:48:55	cbreak	mimi89999: no
2016-09-22 22:49:05	cbreak	mimi89999: a, b=c was not doing anything to a
2016-09-22 22:49:12	mimi89999	.
2016-09-22 22:49:15	cbreak	mimi89999: it's the same as (a), (b=c)
2016-09-22 22:49:18	-->	RFIDtag (~RFIDtag@63-140-91-215-radius.dynamic.acsalaska.net) has joined ##c++
2016-09-22 22:49:27	cbreak	mimi89999: which is similar to a; b = c;
2016-09-22 22:49:28	mimi89999	the int assigned 32765 to a
2016-09-22 22:49:32	mimi89999	OK.
2016-09-22 22:49:38	cbreak	so: a wasn't changed
2016-09-22 22:49:43	cbreak	you probably failed to initialize it
2016-09-22 22:49:58	cbreak	so you invoked UB and got a random number that case.
2016-09-22 22:50:03	cbreak	it could just as well crash
2016-09-22 22:50:39	SlashLife	cbreak: Yeah, but breaking out of your namespace and possibly having to enter another one to specialize the trait type is not so much. namespace my_ns { enum class ids : ::lib::id_type { one, two }; } namespace lib { template<> struct is_id_type<::my_ns::ids>: std::bool_constant<true> {}; }
2016-09-22 22:50:44	-->	TMM (~hp@fsf/member/pdpc.professional.tmm) has joined ##c++
2016-09-22 22:50:45	SlashLife	Lots of boilerplate. :/
2016-09-22 22:50:51	mimi89999	Ah yes. In the int I didn't give it a value
2016-09-22 22:50:57	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-22 22:51:04	-->	phinxy (~tehhhd@unaffiliated/phinxy) has joined ##c++
2016-09-22 22:52:05	cbreak	SlashLife: template<typename X> constexpr bool adl_traitish(X) { return false; } constexpr bool adl_traitish(Y) { return true; }
2016-09-22 22:52:27	cbreak	hmm...
2016-09-22 22:52:38	<--	bx2 (~bx2@46.140.123.246) has quit
2016-09-22 22:53:13	cbreak	wonder if that can even be used
2016-09-22 22:53:30	mimi89999	But I can: int a, b, c, d, e, f = 0; ?
2016-09-22 22:53:36	cbreak	maybe as in enable_if<adl_traitish(declval<X>())
2016-09-22 22:53:41	cbreak	mimi89999: no
2016-09-22 22:53:46	cbreak	mimi89999: don't write such shitty code
2016-09-22 22:53:53	cbreak	one definition per statement please :)
2016-09-22 22:54:35	<--	fedepad (~fedepad@p4FE11F83.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-09-22 22:54:35		[22:54]
2016-09-22 22:54:49	-->	zero_byte (~zer0@ip-89-103-110-138.net.upcbroadband.cz) has joined ##c++
2016-09-22 22:55:18	-->	Anticom (~quassel@217.6.33.234) has joined ##c++
2016-09-22 22:55:42	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Ping timeout: 264 seconds)
2016-09-22 22:57:34	<--	z8z (~x@ac230029.ppp.asahi-net.or.jp) has quit (Quit: Quitting)
2016-09-22 22:57:35	<--	Winslow_ (~Winslow_@bnc.unknowncheats.me) has quit (Excess Flood)
2016-09-22 22:57:47	-->	jamesaxl (~jamesaxl@176.98.129.195) has joined ##c++
2016-09-22 22:58:13	-->	Winslow_ (~Winslow_@bnc.unknowncheats.me) has joined ##c++
2016-09-22 22:59:57	<--	dynastic (~dynastic@astound-66-234-205-111.ca.astound.net) has quit (Read error: Connection reset by peer)
2016-09-22 23:00:15	<--	brendel (~brice@LAubervilliers-656-1-215-246.w217-128.abo.wanadoo.fr) has quit (Ping timeout: 260 seconds)
2016-09-22 23:00:34	-->	msb (~msb@unaffiliated/detergnet) has joined ##c++
2016-09-22 23:01:03	<--	phinxy (~tehhhd@unaffiliated/phinxy) has quit (Read error: Connection reset by peer)
2016-09-22 23:02:00	<--	spooooon (~cw@cpc84421-newc18-2-0-cust250.16-2.cable.virginm.net) has quit (Ping timeout: 260 seconds)
2016-09-22 23:02:21	-->	jan64 (~jan64@agpn21.neoplus.adsl.tpnet.pl) has joined ##c++
2016-09-22 23:02:21	<--	bjz (~bjz@14-201-215-168.tpgi.com.au) has quit (Read error: Connection reset by peer)
2016-09-22 23:02:58	-->	bjz (~bjz@14-201-215-168.tpgi.com.au) has joined ##c++
2016-09-22 23:03:59	<--	mukunda (mukunda@c-71-205-185-63.hsd1.co.comcast.net) has quit (Ping timeout: 244 seconds)
2016-09-22 23:04:20	<--	Immune (~Immune@173.55.30.110) has quit (Ping timeout: 260 seconds)
2016-09-22 23:04:24	-->	gaqwas_ (~nick@195.37.61.177) has joined ##c++
2016-09-22 23:04:26	gaqwas_	hi
2016-09-22 23:04:55	<--	jjz (~jjz@183.64.203.198) has quit
2016-09-22 23:05:06	<--	RFIDtag (~RFIDtag@63-140-91-215-radius.dynamic.acsalaska.net) has quit (Quit: leaving)
2016-09-22 23:05:22	gaqwas_	uhm is there still a channel like c++-general for not-strictly-but-related c++ questions such as c++ third-party library discussion and so on?
2016-09-22 23:05:54	cbreak	!general
2016-09-22 23:05:56	nolyc	##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2016-09-22 23:06:12	gaqwas_	yeah it still exists :)
2016-09-22 23:06:14	gaqwas_	thanks
2016-09-22 23:06:21	<--	mimi89999 (~michel@89-70-102-105.dynamic.chello.pl) has left ##c++
2016-09-22 23:06:38	gaqwas_	i joined c++-general with one # and was subsequently redirected to ##namespace
2016-09-22 23:06:44	gaqwas_	dats why
2016-09-22 23:08:58	-->	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has joined ##c++
2016-09-22 23:09:00	-->	Immune (~Immune@173.55.30.110) has joined ##c++
2016-09-22 23:09:26	<--	bjz (~bjz@14-201-215-168.tpgi.com.au) has quit (Read error: Connection reset by peer)
2016-09-22 23:09:30	<--	emilsp (~emilsp@enucs/member/emilsp) has quit (Ping timeout: 264 seconds)
2016-09-22 23:10:16	-->	bjz (~bjz@14-201-215-168.tpgi.com.au) has joined ##c++
2016-09-22 23:10:16		[23:10]
2016-09-22 23:10:57	-->	emilsp (~emilsp@enucs/member/emilsp) has joined ##c++
2016-09-22 23:11:22	-->	joehunt5888 (~joehunt@115.164.80.101) has joined ##c++
2016-09-22 23:11:30	-->	brendel (~brice@LAubervilliers-656-1-215-246.w217-128.abo.wanadoo.fr) has joined ##c++
2016-09-22 23:11:45	-->	bx2 (~bx2@46.140.123.246) has joined ##c++
2016-09-22 23:13:03	<--	xaxxon (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has quit (Quit: This computer has gone to sleep)
2016-09-22 23:14:24	<--	elnormous (~elnormous@gateway.evolutiongaming.com) has quit (Remote host closed the connection)
2016-09-22 23:19:55	-->	elnormous (~elnormous@gateway.evolutiongaming.com) has joined ##c++
2016-09-22 23:20:37	-->	blackbird1 (~blackbird@41.226.170.212) has joined ##c++
2016-09-22 23:21:50	<--	sin3t (~sin3t@77.47.209.98) has quit (Ping timeout: 260 seconds)
2016-09-22 23:22:54	-->	Azusa762 (~roy@37.228.232.111) has joined ##c++
2016-09-22 23:22:58	-->	Murii (~Murii@86.127.60.21) has joined ##c++
2016-09-22 23:25:48	-->	navidr (uid112413@gateway/web/irccloud.com/x-sppptnjkflxyqdht) has joined ##c++
2016-09-22 23:25:48		[23:25]
2016-09-22 23:25:49	<--	chang (~vayne@pD9E4549E.dip0.t-ipconnect.de) has quit (Read error: Connection reset by peer)
2016-09-22 23:26:15	-->	Karyon (~yaaic@unaffiliated/karyon) has joined ##c++
2016-09-22 23:27:10	-->	f0g (~fog_proxy@117.82.187.109) has joined ##c++
2016-09-22 23:28:04	<--	code_zombie (~code_zomb@136.63.230.43) has quit (Quit: Leaving)
2016-09-22 23:29:46	<--	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has quit (Quit: This computer has gone to sleep)
2016-09-22 23:30:13	-->	xnavor_ (~xnavor@mmo-gw.proceranetworks.com) has joined ##c++
2016-09-22 23:30:44	-->	sin3t (~sin3t@77.47.209.98) has joined ##c++
2016-09-22 23:30:44	Murii	anyone here using  PHYSFS?
2016-09-22 23:31:01	RokerHRO	what is it?
2016-09-22 23:31:17	irrenhaus3	probably belongs in general
2016-09-22 23:31:20	irrenhaus3	!give Murii general
2016-09-22 23:31:21	nolyc	Murii: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2016-09-22 23:31:38	RokerHRO	I am just curious.
2016-09-22 23:31:38	Murii	ok
2016-09-22 23:31:41	TinoDidriksen	Definitely belongs in ##C++-general
2016-09-22 23:32:02	<--	andyhuzhill (~Thunderbi@14.23.45.178) has quit (Quit: andyhuzhill)
2016-09-22 23:32:55	<--	xnavor (~xnavor@2001:7a0:8000:1002:1cab:250b:1c65:11cd) has quit (Ping timeout: 250 seconds)
2016-09-22 23:35:08	<--	w41 (~w41@unaffiliated/w41) has quit (Read error: Connection reset by peer)
2016-09-22 23:35:11	-->	imdone (~imdone@cable-94-189-189-9.dynamic.sbb.rs) has joined ##c++
2016-09-22 23:37:13	<--	SiN_Bizkit (~SiN_Bizki@90.188.118.76) has quit (Ping timeout: 248 seconds)
2016-09-22 23:37:58	-->	symm- (~symm-@86.127.152.32) has joined ##c++
2016-09-22 23:39:15	somaReverse	Hi, I have a string " aaa\tbbb\tNULL\tccc\tddd ". I'd like to convert it to " aaa\0bbb\0NULL\0ccc\0ddd " and get a null vector that indicate the col 3 is null. What string method should I use?
2016-09-22 23:40:17	<--	Winslow_ (~Winslow_@bnc.unknowncheats.me) has quit (Excess Flood)
2016-09-22 23:41:14	-->	SwiftMatt (~Objective@162.242.95.100) has joined ##c++
2016-09-22 23:41:14		[23:41]
2016-09-22 23:41:58	symm-	null vector, somaReverse?
2016-09-22 23:42:20	<--	Betal (~Betal@unaffiliated/betal) has quit (Remote host closed the connection)
2016-09-22 23:43:02	symm-	somaReverse: http://stackoverflow.com/a/2896627
2016-09-22 23:43:40	-->	Winslow_ (~Winslow_@bnc.unknowncheats.me) has joined ##c++
2016-09-22 23:43:51	-->	kimundi (~Kimundi@p4FE2E168.dip0.t-ipconnect.de) has joined ##c++
2016-09-22 23:43:58	-->	UnlikeSuika (~UnlikeSui@147.46.113.63) has joined ##c++
2016-09-22 23:44:32	-->	fedepad (~fedepad@eduroam-97-27.zdv.uni-mainz.de) has joined ##c++
2016-09-22 23:45:43	<--	Azusa762 (~roy@37.228.232.111) has quit (Ping timeout: 272 seconds)
2016-09-22 23:46:36	<--	nikki93 (~nikki93@c-67-169-12-37.hsd1.ca.comcast.net) has quit
2016-09-22 23:48:12	-->	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has joined ##c++
2016-09-22 23:49:06	<--	KAHR-Alpha (~Alpha@AReims-652-1-187-168.w92-142.abo.wanadoo.fr) has quit (Ping timeout: 264 seconds)
2016-09-22 23:49:35	<--	ScorpionJack (~Scorpion@unaffiliated/scorpionjack) has quit (Quit: ScorpionJack)
2016-09-22 23:49:47	-->	dkaspar (~deekej@ip4-83-240-97-205.cust.nbox.cz) has joined ##c++
2016-09-22 23:50:01	-->	shirty (~shirty@109.131.156.130) has joined ##c++
2016-09-22 23:52:33	<--	SwiftMatt (~Objective@162.242.95.100) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-22 23:52:41	<--	f0g (~fog_proxy@117.82.187.109) has quit (Ping timeout: 240 seconds)
2016-09-22 23:52:43	-->	fog_proxy (~fog_proxy@117.82.187.109) has joined ##c++
2016-09-22 23:55:38	-->	vitimiti (~vitimiti@unaffiliated/vitimiti) has joined ##c++
2016-09-22 23:55:53	<--	seishun (~Kakera@46.109.98.192) has quit (Ping timeout: 250 seconds)
2016-09-22 23:56:02	-->	NightQuest (NQ@c-71-236-158-254.hsd1.or.comcast.net) has joined ##c++
2016-09-22 23:56:29	<--	itari (~itari@176.96.64.113) has quit (Read error: Connection reset by peer)
2016-09-22 23:56:29		[23:56]
2016-09-22 23:56:29	-->	xaxxon (~xaxxon@2601:602:9d00:d58b:d9ae:ae6e:f329:b70b) has joined ##c++
2016-09-22 23:57:19	-->	magnicida (~raskolnik@2a02:8109:8c80:231:ea39:dfff:fe4d:275b) has joined ##c++
2016-09-22 23:58:01	-->	DigiByteDev (~JT2@220.241.252.65) has joined ##c++
2016-09-22 23:58:04	-->	Ele4nor (~Eleanor@5.232.32.0) has joined ##c++
2016-09-22 23:59:36	<--	hyacinth (~yhyacinth@61.111.255.109) has quit (Quit: Leaving)
2016-09-23 00:01:00	<--	Appleman1234 (~Appleman1@KD119104043017.au-net.ne.jp) has quit (Ping timeout: 265 seconds)
2016-09-23 00:01:42	-->	seishun (~Kakera@46.109.98.192) has joined ##c++
2016-09-23 00:03:00	-->	Enhex_ (~Enhex@82.252.138.77.rev.sfr.net) has joined ##c++
2016-09-23 00:04:18	<--	fedepad (~fedepad@eduroam-97-27.zdv.uni-mainz.de) has quit (Ping timeout: 265 seconds)
2016-09-23 00:04:52	<--	rorro (~rorro@c-227-201.eduroam.liu.se) has quit (Ping timeout: 265 seconds)
2016-09-23 00:06:14	<--	Enhex (~Enhex@82.252.138.77.rev.sfr.net) has quit (Ping timeout: 265 seconds)
2016-09-23 00:10:14	-->	aslant (~aslant@fpc74295-dals20-2-0-cust7.20-2.static.cable.virginm.net) has joined ##c++
2016-09-23 00:10:33	-->	asc232 (~Keith@179.38.203.21) has joined ##c++
2016-09-23 00:11:07	-->	planet_en (~nkh@5.107.65.47) has joined ##c++
2016-09-23 00:11:25	SlashLife	somaReverse: How about creating a secondary vector for the columns that you fill with pointers to the first character of each field while you replace the \t with \0 (don't forget to append a \0 to the end of your vector first, so it won't reallocate)
2016-09-23 00:11:31	-->	Appleman1234 (~Appleman1@KD119104042061.au-net.ne.jp) has joined ##c++
2016-09-23 00:11:31		[00:11]
2016-09-23 00:11:47	-->	nacon (~nacon@ipbcc12340.dynamic.kabel-deutschland.de) has joined ##c++
2016-09-23 00:11:47	<--	nacon (~nacon@ipbcc12340.dynamic.kabel-deutschland.de) has quit (Changing host)
2016-09-23 00:11:47	-->	nacon (~nacon@unaffiliated/nacon) has joined ##c++
2016-09-23 00:12:18	SlashLife	Then in a second pass check each of these pointers whether what it points to equals "NULL", and if it does, replace it with a nullptr.
2016-09-23 00:13:07	-->	nkr (Elite14718@gateway/shell/elitebnc/x-nstqfymoduxssizz) has joined ##c++
2016-09-23 00:13:20	SlashLife	So in the end you'll have a vector of pointers to NUL terminated strings if they have contents or null pointers if it is NULL.
2016-09-23 00:13:36	-->	phlpp (~Philipp@rihanna.cb.uni-bonn.de) has joined ##c++
2016-09-23 00:13:42	<--	ignatiz- (50c1d51a@gateway/web/freenode/ip.80.193.213.26) has quit (Quit: Page closed)
2016-09-23 00:14:05	<--	Stanley00 (~Stanley_0@unaffiliated/stanley00) has quit (Quit: Leaving)
2016-09-23 00:14:09	<--	UnlikeSuika (~UnlikeSui@147.46.113.63) has quit (Read error: Connection reset by peer)
2016-09-23 00:15:07	<--	pylbrecht (~pylbrecht@2a02:8109:8a00:b6c:e6:6be5:827e:7b01) has quit (Remote host closed the connection)
2016-09-23 00:15:55	<--	planet_en (~nkh@5.107.65.47) has quit (Ping timeout: 265 seconds)
2016-09-23 00:16:17	-->	gagbo_ (~gagbo@unaffiliated/gagbo) has joined ##c++
2016-09-23 00:17:18	<--	gagbo (~gagbo@unaffiliated/gagbo) has quit (Ping timeout: 264 seconds)
2016-09-23 00:18:37	<--	Karyon (~yaaic@unaffiliated/karyon) has quit (Ping timeout: 255 seconds)
2016-09-23 00:18:51	<--	seishun (~Kakera@46.109.98.192) has quit (Ping timeout: 250 seconds)
2016-09-23 00:19:47	<--	funfunctor (~edward@203.44.10.68) has quit (Quit: Leaving.)
2016-09-23 00:20:04	<--	NightQuest (NQ@c-71-236-158-254.hsd1.or.comcast.net) has quit (Remote host closed the connection)
2016-09-23 00:20:27	-->	Henke37 (~Henrik@81-227-16-59-no133.bredband.skanova.com) has joined ##c++
2016-09-23 00:20:40	-->	Rickmasta (~Rick@pool-96-246-90-176.nycmny.fios.verizon.net) has joined ##c++
2016-09-23 00:20:46	<--	V-ille (~ville@81-175-149-170.bb.dnainternet.fi) has quit (Ping timeout: 265 seconds)
2016-09-23 00:20:52	<--	Rickmasta (~Rick@pool-96-246-90-176.nycmny.fios.verizon.net) has quit (Client Quit)
2016-09-23 00:20:53	-->	rorro (~rorro@c-227-201.eduroam.liu.se) has joined ##c++
2016-09-23 00:21:06	-->	GenteelBen (~GenteelBe@cpc70133-lutn12-2-0-cust324.9-3.cable.virginm.net) has joined ##c++
2016-09-23 00:23:33	-->	keestu (~jelari@122.183.135.102) has joined ##c++
2016-09-23 00:23:43	-->	Mike11 (~Mike@unaffiliated/mike11) has joined ##c++
2016-09-23 00:24:22	<--	Mike11 (~Mike@unaffiliated/mike11) has quit (Client Quit)
2016-09-23 00:26:00	<--	Immune (~Immune@173.55.30.110) has quit (Ping timeout: 260 seconds)
2016-09-23 00:26:18	<--	rorro (~rorro@c-227-201.eduroam.liu.se) has quit (Ping timeout: 264 seconds)
2016-09-23 00:26:23	SlashLife	cbreak: Works like a charm, thanks!
2016-09-23 00:26:31	SlashLife	-> http://ideone.com/zjrahX
2016-09-23 00:26:31		[00:26]
2016-09-23 00:26:40	cbreak	uhmn, what?
2016-09-23 00:26:48	cbreak	what the hell
2016-09-23 00:26:52	cbreak	you actually did it...
2016-09-23 00:26:53	-->	rorro (~rorro@c-227-201.eduroam.liu.se) has joined ##c++
2016-09-23 00:27:42	-->	Suchorski (regex@unaffiliated/suchorski) has joined ##c++
2016-09-23 00:28:18	<--	fog_proxy (~fog_proxy@117.82.187.109) has quit (Quit: Leaving)
2016-09-23 00:28:20	<--	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has quit (Quit: This computer has gone to sleep)
2016-09-23 00:28:20	cbreak	SlashLife: the problem with that solution is to actually use it :)
2016-09-23 00:28:26	-->	DjBonadoobie (~DjBonadoo@208.167.254.96) has joined ##c++
2016-09-23 00:28:31	SlashLife	Why?
2016-09-23 00:28:43	<--	justinabrahms (~justinabr@107.170.208.252) has quit (Quit: ZNC - http://znc.in)
2016-09-23 00:28:50	cbreak	not sure if my declval from above works
2016-09-23 00:29:04	-->	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has joined ##c++
2016-09-23 00:29:17	SlashLife	Ah
2016-09-23 00:29:25	SlashLife	Mh.
2016-09-23 00:29:31	SlashLife	Could I change the return type?
2016-09-23 00:29:36	cbreak	sure can
2016-09-23 00:29:44	cbreak	SlashLife: std::true_type and false_type are popular
2016-09-23 00:29:52	SlashLife	Yeah, I was thinking of those. :)
2016-09-23 00:30:06	symm-	wat
2016-09-23 00:30:31	-->	justinabrahms (~justinabr@107.170.208.252) has joined ##c++
2016-09-23 00:30:32	<--	FreeBirdLjj (~freebirdl@202.119.46.192) has quit (Remote host closed the connection)
2016-09-23 00:31:59	-->	Furkiepurkie (~Furkie@2001:1af8:4700:a03c:7::) has joined ##c++
2016-09-23 00:32:32	symm-	I'm reading http://www.cplusplus.com/reference/type_traits/integral_constant/ and not getting a clue
2016-09-23 00:32:47	symm-	what is the purpose of integral_constant<int,42>::type ?
2016-09-23 00:33:01	<--	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has quit (Ping timeout: 255 seconds)
2016-09-23 00:33:21	cbreak	you get its own type?
2016-09-23 00:33:35	symm-	isn't integral_constant<int,42> already a type?
2016-09-23 00:33:36	SlashLife	cbreak: http://ideone.com/c40mrx
2016-09-23 00:33:48	cbreak	it is
2016-09-23 00:34:06	SlashLife	I like that even better.
2016-09-23 00:34:16	cbreak	SlashLife: that won't solve the problem though
2016-09-23 00:34:20	cbreak	you still have to call them :)
2016-09-23 00:34:32	SlashLife	No need to define them means no danger of people actually attempting to use them by accident.
2016-09-23 00:34:37	cbreak	with the old version it'd be func(declval<X>())
2016-09-23 00:35:05	<--	shirty (~shirty@109.131.156.130) has quit (Ping timeout: 240 seconds)
2016-09-23 00:35:10	cbreak	with the new it'd be decltype(func(declval<X>()))::value
2016-09-23 00:35:14	cbreak	probably...
2016-09-23 00:35:22	SlashLife	return decltype(impldetail_is_id_type(std::declval<IdType>()))::value; - pretty sure I could just use that in an enable_if or a static_assert :P
2016-09-23 00:35:34	cbreak	yes.
2016-09-23 00:35:43	cbreak	it looked simpler before :)
2016-09-23 00:35:43	SlashLife	Problem averted. \o/
2016-09-23 00:37:01	<--	cjwelborn (cjwelborn@unaffiliated/cjwelborn) has quit (Ping timeout: 272 seconds)
2016-09-23 00:37:23	SlashLife	As far as I know you're not allowed to actually have declval<X>() in an evaluated context. (... crossing fingers that I got the terminology right ...)
2016-09-23 00:37:31	<--	cysm (cysm@unaffiliated/paracyst) has quit (Ping timeout: 255 seconds)
2016-09-23 00:37:34	cbreak	I know
2016-09-23 00:37:57	cbreak	but you could always make your own declval that doesn't have that problem :)
2016-09-23 00:38:05	SlashLife	Anyway; used like this the functions can't even be called. I actually like that detail.
2016-09-23 00:38:12	cbreak	or just use func(T{}) instead of func(declval<T>())
2016-09-23 00:38:48	<--	aslant (~aslant@fpc74295-dals20-2-0-cust7.20-2.static.cable.virginm.net) has quit (Remote host closed the connection)
2016-09-23 00:39:00	-->	DingoSaar (~hagen@pD9E087E6.dip0.t-ipconnect.de) has joined ##c++
2016-09-23 00:39:18	SlashLife	We're talking about enums, so it probably wouldn't be a problem anyway ... but I like how this is going to go on. :)
2016-09-23 00:39:39	-->	Immune (~Immune@173.55.30.110) has joined ##c++
2016-09-23 00:39:52	cbreak	SlashLife: now you have a non-standard solution to a problem that's normally used via specializing trait types
2016-09-23 00:39:59	<--	DjBonadoobie (~DjBonadoo@208.167.254.96) has quit (Quit: Leaving)
2016-09-23 00:40:01	-->	jason_zhang (~jason_zha@42.120.74.200) has joined ##c++
2016-09-23 00:40:04	ubsan	I'm pretty sure declval is literally just
2016-09-23 00:40:20	cbreak	that means you need more documentation than normal
2016-09-23 00:40:23	ubsan	template <typename T> T declval();
2016-09-23 00:40:39	 *	ubsan shrugs
2016-09-23 00:41:56	cbreak	ubsan: I think it returns a ref
2016-09-23 00:41:56		[00:41]
2016-09-23 00:42:05	ubsan	cbreak: does it?
2016-09-23 00:42:07	ubsan	fun
2016-09-23 00:42:08	cbreak	but anyway, it's not allowed to call it :)
2016-09-23 00:42:27	ubsan	the important bit is that you can't do anything wif it
2016-09-23 00:42:33	cbreak	http://en.cppreference.com/w/cpp/utility/declval
2016-09-23 00:42:39	ubsan	because otherwise linker errors
2016-09-23 00:44:04	ubsan	oh man, I could *really* use structured bindings right now
2016-09-23 00:44:30	<--	DingoSaar (~hagen@pD9E087E6.dip0.t-ipconnect.de) has quit (Excess Flood)
2016-09-23 00:44:50	<--	jason_zhang (~jason_zha@42.120.74.200) has quit (Client Quit)
2016-09-23 00:44:56	-->	DingoSaar (~hagen@pD9E087E6.dip0.t-ipconnect.de) has joined ##c++
2016-09-23 00:45:11	SlashLife	cbreak: I find this more elegant though. :P
2016-09-23 00:45:37	-->	FreeBirdLjj (~freebirdl@202.119.46.192) has joined ##c++
2016-09-23 00:45:47	-->	supay (nebuzen@gateway/shell/fnordserver.eu/x-qcnlucbhnwonfsnb) has joined ##c++
2016-09-23 00:46:46	<--	Murii (~Murii@86.127.60.21) has quit
2016-09-23 00:46:53	<--	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has quit (Quit: This computer has gone to sleep)
2016-09-23 00:49:01	-->	bjz_ (~bjz@104.222.140.37) has joined ##c++
2016-09-23 00:49:04	<--	DigiByteDev (~JT2@220.241.252.65) has quit (Quit: DigiByteDev)
2016-09-23 00:49:15	<--	bjz (~bjz@14-201-215-168.tpgi.com.au) has quit (Ping timeout: 265 seconds)
2016-09-23 00:50:29	qis	Hmm, I'm surprised that structured bindings are neither in gcc 7 nor in clang 4.
2016-09-23 00:50:56	<--	blackbird1 (~blackbird@41.226.170.212) has quit (Remote host closed the connection)
2016-09-23 00:51:01	<--	vuoto (~vuoto@80-71-135-9.u.parknet.dk) has quit (Remote host closed the connection)
2016-09-23 00:51:21	<--	dkaspar (~deekej@ip4-83-240-97-205.cust.nbox.cz) has quit (Ping timeout: 250 seconds)
2016-09-23 00:51:45	-->	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has joined ##c++
2016-09-23 00:52:54	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-23 00:53:49	Elirips	Hello. How does it work that std::this_thread::sleep_for accepts arguments like (10s)?
2016-09-23 00:54:19	-->	DigiByteDev (~JT2@220.241.252.65) has joined ##c++
2016-09-23 00:54:27	Elirips	and will something like std::this_thread::sleep_for(i * 10s) evalute to 100 seconds if i = 10, etc?
2016-09-23 00:54:59	<--	riemann (~riemann@84-10-11-234.static.chello.pl) has quit (Quit: Leaving)
2016-09-23 00:55:14	-->	riemann (~riemann@84-10-11-234.static.chello.pl) has joined ##c++
2016-09-23 00:56:10	-->	shirty (~shirty@109.131.156.130) has joined ##c++
2016-09-23 00:57:01	Moto-chan	Elirips: it accepts an argument of std::chrono::duration
2016-09-23 00:57:01		[00:57]
2016-09-23 00:57:21	Moto-chan	10s is using a user defined literal
2016-09-23 00:57:38	Moto-chan	It's like 10u, which means 10 is unsigned, except s turns it into seconds.
2016-09-23 00:57:52	Moto-chan	!stdref chrono::duration
2016-09-23 00:57:52	refbot	std::chrono::duration: http://en.cppreference.com/w/cpp/chrono/duration
2016-09-23 00:57:54	-->	aslant (~aslant@37.157.39.138) has joined ##c++
2016-09-23 00:57:57	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Ping timeout: 265 seconds)
2016-09-23 00:58:16	Moto-chan	Elirips: As you can see on that page, there are operator overloads, so it should work.
2016-09-23 00:58:26	-->	fahadash (uid44972@gateway/web/irccloud.com/x-bcgoflvnamqlpmgg) has joined ##c++
2016-09-23 00:58:28	Elirips	Moto-chan: thx for the link
2016-09-23 00:58:33	<--	Anticom (~quassel@217.6.33.234) has quit (Remote host closed the connection)
2016-09-23 00:58:41	<--	przemkovv (~przemkovv@gandalf.kari.put.poznan.pl) has quit (Ping timeout: 240 seconds)
2016-09-23 00:58:52	<--	Aquza (~Aquza@p578b4612.dip0.t-ipconnect.de) has quit (Ping timeout: 244 seconds)
2016-09-23 00:58:59	<--	voidah (~voidah@unaffiliated/voider) has quit (Remote host closed the connection)
2016-09-23 00:59:14	-->	Vuks (~Vuks@unaffiliated/vuks69) has joined ##c++
2016-09-23 00:59:34	<--	AquaL1te (~AquaL1te@unaffiliated/aqual1te) has quit (Ping timeout: 240 seconds)
2016-09-23 01:01:28	<--	asc232 (~Keith@179.38.203.21) has quit (Remote host closed the connection)
2016-09-23 01:02:38	<--	aslant (~aslant@37.157.39.138) has quit (Remote host closed the connection)
2016-09-23 01:04:07	<--	kilbith (4ee51c3e@gateway/web/cgi-irc/kiwiirc.com/ip.78.229.28.62) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-09-23 01:04:22	-->	spindle (~spindle@27-33-39-55.static.tpgi.com.au) has joined ##c++
2016-09-23 01:05:17	-->	Gluesticky (~IceChat9@unaffiliated/gluesticky) has joined ##c++
2016-09-23 01:07:10	-->	pylbrecht (~pylbrecht@2a02:8109:8a00:b6c:e6:6be5:827e:7b01) has joined ##c++
2016-09-23 01:07:40	SlashLife	Not to be mistaken for "Hello, World!"s, which is the same thing, but turns it into an std::string. :)
2016-09-23 01:09:26	-->	aslant (~aslant@feur003.pndsl.co.uk) has joined ##c++
2016-09-23 01:10:01	<--	djcb (~user@85-76-16-54-nat.elisa-mobile.fi) has quit (Ping timeout: 248 seconds)
2016-09-23 01:10:11	<--	Lomex (~lomex@213.61.34.42) has quit (Remote host closed the connection)
2016-09-23 01:10:19	ville	overloading for clearer code!
2016-09-23 01:10:29	-->	Lomex (~lomex@213.61.34.42) has joined ##c++
2016-09-23 01:12:01	-->	przemkovv (~przemkovv@gandalf.kari.put.poznan.pl) has joined ##c++
2016-09-23 01:12:01		[01:12]
2016-09-23 01:12:06	-->	Mike11 (~Mike@unaffiliated/mike11) has joined ##c++
2016-09-23 01:12:23	-->	AquaL1te (~AquaL1te@unaffiliated/aqual1te) has joined ##c++
2016-09-23 01:12:38	<--	matiu (~matiu@unaffiliated/matiu) has quit (Ping timeout: 244 seconds)
2016-09-23 01:12:49	<--	aslant (~aslant@feur003.pndsl.co.uk) has quit (Remote host closed the connection)
2016-09-23 01:13:00	<--	blablablub (~howlymowl@euler.ilr.tu-berlin.de) has quit (Quit: Konversation terminated!)
2016-09-23 01:13:47	-->	kilbith (4ee51c3e@gateway/web/cgi-irc/kiwiirc.com/ip.78.229.28.62) has joined ##c++
2016-09-23 01:13:50	<--	Immune (~Immune@173.55.30.110) has quit (Ping timeout: 260 seconds)
2016-09-23 01:14:44	-->	dkaspar (~deekej@ip4-83-240-97-205.cust.nbox.cz) has joined ##c++
2016-09-23 01:16:18	<--	Kn|t3 (~agarwalvi@104.132.196.76) has quit (Quit: Kn|t3)
2016-09-23 01:17:56	-->	Murii (~Murii@86.127.60.21) has joined ##c++
2016-09-23 01:19:01	<--	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has quit (Quit: This computer has gone to sleep)
2016-09-23 01:19:20	w3z	<<&decltype(!*"")()["wee"]; //can't get clearer than that
2016-09-23 01:19:21	<--	Carbonflux (~Bob@174-24-244-113.tukw.qwest.net) has quit (Quit: Leaving)
2016-09-23 01:19:21	geordi	wee
2016-09-23 01:19:50	-->	Immune (~Immune@173.55.30.110) has joined ##c++
2016-09-23 01:20:17	w3z	qis, your surprise is unfounded
2016-09-23 01:20:45	<--	magnicida (~raskolnik@2a02:8109:8c80:231:ea39:dfff:fe4d:275b) has quit (Ping timeout: 265 seconds)
2016-09-23 01:21:59	w3z	geordi: --clang {auto [x,y]=make_tuple("yup,","works"); cout<<x<<y;}
2016-09-23 01:22:00	geordi	yup,works
2016-09-23 01:22:49	cbreak	what the hell..
2016-09-23 01:22:52	chris64	nice
2016-09-23 01:23:02	introom	w3z: what's the above syntax ?
2016-09-23 01:23:48	w3z	deompositin declarations/structured bindings
2016-09-23 01:23:55	-->	V-ille (~ville@59ec7803.symbio.com) has joined ##c++
2016-09-23 01:23:56	chris64	introom: c++17 I guess
2016-09-23 01:24:09	w3z	yes, its a 17 language feature
2016-09-23 01:24:17	-->	cmedeiros (~cmedeiros@200.186.50.162) has joined ##c++
2016-09-23 01:24:26	-->	maltouzes (~maltouzes@2a01:e35:8a43:21b0:d1f9:2672:e07f:5640) has joined ##c++
2016-09-23 01:24:33	-->	yong (~vayne@pD9E4549E.dip0.t-ipconnect.de) has joined ##c++
2016-09-23 01:24:33	w3z	http://eel.is/c++draft/dcl.decomp
2016-09-23 01:25:04	decimad	finally a way to bind to tuples with references?
2016-09-23 01:25:35	ville	i still like to  point out that it's called decompositing _declarations_ and is under the _declarator_ part not declaration part in the standard
2016-09-23 01:25:41	w3z	it can handle structs too
2016-09-23 01:25:56	chris64	geordi: --clang {cout << __clang__; }
2016-09-23 01:25:57	geordi	1
2016-09-23 01:26:03	introom	w3z: so the ell.is is not the c++14 ?
2016-09-23 01:26:09	cbreak	<< __cplusplus
2016-09-23 01:26:10	geordi	201500
2016-09-23 01:26:10	chris64	:(
2016-09-23 01:26:20	w3z	no, thats the 17 draft
2016-09-23 01:26:23	chris64	geordi: --clang {cout << __llvm__; }
2016-09-23 01:26:24	geordi	1
2016-09-23 01:26:27	qis	w3z: http://melpon.org/wandbox/permlink/f8glzqxpbahCJqt8
2016-09-23 01:26:31	ville	introom: nope, it's intermitently updated from the git repo. see the date
2016-09-23 01:26:33	<--	dkaspar (~deekej@ip4-83-240-97-205.cust.nbox.cz) has quit (Ping timeout: 265 seconds)
2016-09-23 01:26:41	chris64	ah, it's just boolean, not the version..
2016-09-23 01:26:42	qis	w3z: Probably an outdated build?
2016-09-23 01:26:44	ville	http://eel.is/c++draft/
2016-09-23 01:26:50	qis	geordi: --clang --version
2016-09-23 01:26:51	geordi	Clang 4.0.0 (trunk 279141)
2016-09-23 01:26:52	-->	jan64_ (~jan64@agaz161.neoplus.adsl.tpnet.pl) has joined ##c++
2016-09-23 01:27:04	ville	"Generated on 2016-09-12 from the C++ standard's draft LaTeX sources by cxxdraft-htmlgen.
2016-09-23 01:27:04		[01:27]
2016-09-23 01:27:05	w3z	qis... notice the difference in syntax ...
2016-09-23 01:27:09	w3z	its [] not {}
2016-09-23 01:27:11	qis	w3z: hmm, wandbox is ahead of geordi
2016-09-23 01:27:18	-->	josef_k (~Jeremy@210-10-222-98.mel.static-ipl.aapt.com.au) has joined ##c++
2016-09-23 01:27:24	-->	jokoon (~jokoon@2a01:e35:398b:5d60:f5d4:4afc:b2cb:4e65) has joined ##c++
2016-09-23 01:27:50	<--	joehunt5888 (~joehunt@115.164.80.101) has quit (Ping timeout: 260 seconds)
2016-09-23 01:28:05	-->	ScorpionJack (~Scorpion@unaffiliated/scorpionjack) has joined ##c++
2016-09-23 01:28:23	w3z	http://melpon.org/wandbox/permlink/vnehiMecukfmEhNs .... dont get me cranky with syntax errors its very early here :)
2016-09-23 01:29:03	 *	ubsan <3 C++17
2016-09-23 01:29:04	<--	Haruno (~Haruno@unaffiliated/haruno) has quit (Ping timeout: 240 seconds)
2016-09-23 01:29:16	-->	Haruno (~Haruno@unaffiliated/haruno) has joined ##c++
2016-09-23 01:29:43	qis	w3z: Thanks! Sad that it didn't make it into 3.9
2016-09-23 01:30:04	<--	jan64 (~jan64@agpn21.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 240 seconds)
2016-09-23 01:30:13	w3z	it didnt get added to the draft until after oulu iirc
2016-09-23 01:30:49	qis	Hmm, is it a good idea to use tuple instead of a miriad of structs that were just used for the purpose of returning a single value?
2016-09-23 01:31:19	cbreak	no
2016-09-23 01:32:03	cbreak	qis: member names in tuples suck.
2016-09-23 01:32:05	qis	cbreak: I also wouldn't have to write conversion/proxy template structs for soci and json.
2016-09-23 01:32:46	<--	kasper^ (~safaf@82.137.9.11) has quit (Ping timeout: 265 seconds)
2016-09-23 01:33:03	cbreak	I like to know if the two floats I get from get_coordinate are x,y or row,col or r,rho or long,lat
2016-09-23 01:34:22	-->	aslant (~aslant@37.157.39.138) has joined ##c++
2016-09-23 01:34:51	-->	Zunino (~Zunino@201.49.127.2) has joined ##c++
2016-09-23 01:35:32	-->	Aquza (~Aquza@p578b4612.dip0.t-ipconnect.de) has joined ##c++
2016-09-23 01:35:35	w3z	you could capture that with a properly named alias, but yeah, theyre not a replacement for structs
2016-09-23 01:35:43	-->	DjBonadoobie (~DjBonadoo@208.167.254.215) has joined ##c++
2016-09-23 01:36:07	<--	Zunino (~Zunino@201.49.127.2) has left ##c++
2016-09-23 01:36:22	<--	kaffeetrauma (~Thunderbi@85-22-37-153.ip.dokom21.de) has quit (Quit: kaffeetrauma)
2016-09-23 01:36:36	w3z	they do have the advantage of simple application to a function unlike the struct though, just throwing that out there
2016-09-23 01:38:23	-->	dkaspar (~deekej@ip4-83-240-97-205.cust.nbox.cz) has joined ##c++
2016-09-23 01:38:24	qis	cbreak: Any thoughts on this concept then? http://melpon.org/wandbox/permlink/Ro56MJUE7Sc3Bztk
2016-09-23 01:38:32	qis	w3z: ^
2016-09-23 01:38:35	cbreak	w3z: C++ Compile Time introspection.
2016-09-23 01:38:36	w3z	{xy a{0,0}; apply(f,a); } using xy=tuple<int,int>; void f(int x,int y){}
2016-09-23 01:38:36	geordi	<no output>
2016-09-23 01:39:21	cbreak	qis: risky
2016-09-23 01:39:50	cbreak	qis: think about the lifetime of objects you bind to the refs
2016-09-23 01:41:10	w3z	he has a lvalue tuple
2016-09-23 01:41:14	w3z	theyre copies
2016-09-23 01:41:55	-->	whytrytofly (~whytrytof@dslb-094-223-012-212.094.223.pools.vodafone-ip.de) has joined ##c++
2016-09-23 01:42:12	<--	KindOne (kindone@freenude/topless/kindone) has quit (Quit: https://tools.ietf.org/html/rfc1459#section-4.1.6)
2016-09-23 01:42:12		[01:42]
2016-09-23 01:42:23	w3z	its spaghetti code though, if youre asking is it sane to use that way, no, but not because of lifetie issues
2016-09-23 01:42:29	qis	w3z: They are references…
2016-09-23 01:42:30	-->	KindOne (kindone@freenude/topless/kindone) has joined ##c++
2016-09-23 01:42:35	cbreak	w3z: yes, but think what copying a reference does
2016-09-23 01:42:50	w3z	no ... the tuple values contains objects
2016-09-23 01:43:03	qis	cbreak: I would put the tuple in a base class and find a way to convert all inherited objects to json/soci without writing proxy structs for all of them.
2016-09-23 01:43:04	-->	funfunctor (~edward@1.129.96.208) has joined ##c++
2016-09-23 01:43:06	cbreak	w3z: and copying the object copies the references into the tuple of the original object
2016-09-23 01:43:11	qis	And we have a *lot* of those structs.
2016-09-23 01:43:15	cbreak	w3z: not into the copy of the tuple
2016-09-23 01:43:42	qis	Hmm, good point.
2016-09-23 01:43:51	qis	Accessor functions then?
2016-09-23 01:44:19	xaxxon	a different copy constructor
2016-09-23 01:45:17	w3z	cbreak right, i was referring to qis's assertion that theyre referrences, i agree that copying user as written is going to refer to the original user object in the copies reference memebers
2016-09-23 01:45:20	cbreak	qis: yes.
2016-09-23 01:45:36	<--	maltouzes (~maltouzes@2a01:e35:8a43:21b0:d1f9:2672:e07f:5640) has quit (Quit: Leaving)
2016-09-23 01:46:06	<--	dkaspar (~deekej@ip4-83-240-97-205.cust.nbox.cz) has quit (Ping timeout: 264 seconds)
2016-09-23 01:46:49	<--	Mike11 (~Mike@unaffiliated/mike11) has quit (Quit: Leaving.)
2016-09-23 01:48:14	qis	Hmm, not as pretty as public member variables: http://melpon.org/wandbox/permlink/EB0fdxPoehKBqAT2
2016-09-23 01:48:24	<--	nacon (~nacon@unaffiliated/nacon) has quit (Quit: leaving)
2016-09-23 01:48:47	qis	And I would have to write both, non-const and const accessor functions.
2016-09-23 01:49:15	-->	JoshS (~jshjsh@172.56.38.166) has joined ##c++
2016-09-23 01:49:35	xaxxon	what's wrong with writing a copy construcotr?
2016-09-23 01:50:25	kstar	Suppose I want a type Bar, which is identical with type Foo, but can never be implicitly cast into type Foo, how would I achieve that?
2016-09-23 01:50:43	cbreak	xaxxon: it'd still be non-assignable
2016-09-23 01:50:50	xaxxon	class Bar : Foo {};
2016-09-23 01:50:51	kstar	An example would be types of angles. So there is radian, and degree, but both are really just double.
2016-09-23 01:50:55	cbreak	... somewhat :)
2016-09-23 01:51:20	kstar	xaxxon: I see. So you can't implicitly cast the inherited class to the base, except via pointers?
2016-09-23 01:51:22	xaxxon	class Bar {double d;};
2016-09-23 01:51:31	cbreak	kstar: just make separate types
2016-09-23 01:51:35	-->	kasper^ (~safaf@46.97.122.30) has joined ##c++
2016-09-23 01:51:35	cbreak	kstar: or make a wrapper type
2016-09-23 01:51:36	<--	jshjsh (~jshjsh@172.56.38.166) has quit (Ping timeout: 265 seconds)
2016-09-23 01:51:52	kstar	No, my type is more complicated than double, although I used that as an example.
2016-09-23 01:52:10	cbreak	kstar: for examples, take a look at boost::units
2016-09-23 01:52:14	kstar	My type is a pair of spherical coordinates represented as classes. But there are multiple standard frames of reference.
2016-09-23 01:52:17	kstar	cbreak: Okay.
2016-09-23 01:52:32	cbreak	kstar: there are boost::units for spatial lengths
2016-09-23 01:52:44	xaxxon	doesn't boost have something for making same but incompatible types?
2016-09-23 01:52:48	xaxxon	strong typedef or something?
2016-09-23 01:52:48	cbreak	meter and miles can be converted, and they convert with numerical conversion
2016-09-23 01:52:53	-->	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has joined ##c++
2016-09-23 01:52:56	cbreak	but meters and seconds can not
2016-09-23 01:53:16	cbreak	and if you divide a meter by a second, you get a speed (meter/sec)
2016-09-23 01:53:25	cbreak	xaxxon: yes
2016-09-23 01:53:27	kstar	I see.
2016-09-23 01:53:34	cbreak	xaxxon: but I wouldn't use that, it's hacky
2016-09-23 01:53:35	xaxxon	http://www.boost.org/doc/libs/1_61_0/libs/serialization/doc/strong_typedef.html
2016-09-23 01:53:39	kstar	that's exactly what I'm looking for. 'strong typedef'
2016-09-23 01:53:41	xaxxon	oh
2016-09-23 01:53:47	kstar	Well, not really.
2016-09-23 01:53:50	kstar	something that behaves like that.
2016-09-23 01:54:05	<--	Immune (~Immune@173.55.30.110) has quit (Ping timeout: 260 seconds)
2016-09-23 01:54:29	kstar	xaxxon: I like your solution too:
2016-09-23 01:54:37	<--	iterati (~vangelis@79.103.112.83.dsl.dyn.forthnet.gr) has quit (Ping timeout: 250 seconds)
2016-09-23 01:54:37	kstar	{ class Foo { public: int a; }; class Bar : public Foo {}; Bar b; Foo a; a.a = 3; b = a; }
2016-09-23 01:54:37	geordi	error: no match for 'operator=' in 'b = a' (operand types are 'main(int, char**)::Bar' and 'main(int, char**)::Foo')
2016-09-23 01:54:41	kstar	So that's nice.
2016-09-23 01:54:56	xaxxon	well, it will allow upcasting, though.
2016-09-23 01:54:57	kstar	Plus, it's possible that my types might gain some extra sugar.
2016-09-23 01:55:08	kstar	{ class Foo { public: int a; }; class Bar : public Foo {}; Bar b; Foo a; a.a = 3; a = b; }
2016-09-23 01:55:09	geordi	<no output>
2016-09-23 01:55:13	kstar	Oh, you're right.
2016-09-23 01:55:15	kstar	That's an issue.
2016-09-23 01:55:21	xaxxon	yeah.. I kinda forgot about that at first
2016-09-23 01:55:39	Henke37	does C++ say that the implementation can't add in a base class for all classes that lack one?
2016-09-23 01:56:11	<--	FreeBirdLjj (~freebirdl@202.119.46.192) has quit (Remote host closed the connection)
2016-09-23 01:56:20	cbreak	Henke37: it's logical that it can not
2016-09-23 01:56:27	cbreak	Henke37: after all, there can not be turtles all the way down
2016-09-23 01:56:31	cbreak	it has to end somewhere
2016-09-23 01:56:47	xaxxon	cbreak:  don't many languages already have that?
2016-09-23 01:57:26	kstar	xaxxon: Oh but your solution might still work for me. Let's see
2016-09-23 01:57:27		[01:57]
2016-09-23 01:58:08	xaxxon	kstar:  I have something similar, but I just build the type twice.   You could always use a macro if it came to it.
2016-09-23 01:58:10	kstar	{ class GenericType { public: int a; }; class Specialized1 : public GenericType {}; class Specialized2 : public GenericType {}; Specialized1 a; Specialized2 b; b = a; }
2016-09-23 01:58:11	geordi	error: no match for 'operator=' in 'b = a' (operand types are 'main(int, char**)::Specialized2' and 'main(int, char**)::Specialized1')
2016-09-23 01:58:17	kstar	{ class GenericType { public: int a; }; class Specialized1 : public GenericType {}; class Specialized2 : public GenericType {}; Specialized1 a; Specialized2 b; a = b; }
2016-09-23 01:58:17	geordi	error: no match for 'operator=' in 'a = b' (operand types are 'main(int, char**)::Specialized1' and 'main(int, char**)::Specialized2')
2016-09-23 01:58:23	kstar	I think that's good enough for me ^
2016-09-23 01:58:26	xaxxon	class Foo {BUILD_CLASS}; class Bar{BUILD_CLASS};
2016-09-23 01:58:43	kstar	xaxxon: Oh, that's interesting too! Nice idea.
2016-09-23 01:59:00	xaxxon	then you can put stuff additionally in just one or the other.   including conversions if appropriate.
2016-09-23 01:59:15	-->	planet_en (~nkh@5.107.65.47) has joined ##c++
2016-09-23 01:59:32	xaxxon	or maybe use something like boost::hana to build your types
2016-09-23 01:59:36	<--	destiny (uid73933@gateway/web/irccloud.com/x-eeoorgftrjayxnyu) has quit (Quit: Connection closed for inactivity)
2016-09-23 01:59:44	kstar	But well, given that I'm trying to make sure that Coordinates in reference frame1 can't be inadvertently converted to Coordinates in reference frame2, I might as well have a GenericCoordinate base type, for some functions that might not care.
2016-09-23 01:59:49	cbreak	xaxxon: no
2016-09-23 01:59:59	-->	Immune (~Immune@173.55.30.110) has joined ##c++
2016-09-23 02:00:05	kstar	xaxxon: Thanks, will look it up.
2016-09-23 02:00:06	<--	xnavor_ (~xnavor@mmo-gw.proceranetworks.com) has quit (Quit: This computer has gone to sleep)
2016-09-23 02:00:08	cbreak	xaxxon: all I know have explicit bases
2016-09-23 02:00:11	kstar	!next
2016-09-23 02:00:13	nolyc	Another satisfied customer, next!
2016-09-23 02:00:14	-->	grako (~grako@host86-163-229-238.range86-163.btcentralplus.com) has joined ##c++
2016-09-23 02:00:28	cbreak	i.e. Objective-C has NSObject, if you want, but it's optional, NSObject itself has no base
2016-09-23 02:00:41	cbreak	similar with java, they also have an Object that has no base
2016-09-23 02:00:42	xaxxon	java Object?
2016-09-23 02:00:46	xaxxon	hrmm
2016-09-23 02:01:23	cbreak	xaxxon: they also have types that have no base, such as int
2016-09-23 02:01:24	-->	afiefh_ (~afiefh@31.210.188.33) has joined ##c++
2016-09-23 02:01:26	<--	kilbith (4ee51c3e@gateway/web/cgi-irc/kiwiirc.com/ip.78.229.28.62) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-09-23 02:01:40	xaxxon	cbreak:  that's irrelevant
2016-09-23 02:01:40	-->	kilbith (4ee51c3e@gateway/web/cgi-irc/kiwiirc.com/ip.78.229.28.62) has joined ##c++
2016-09-23 02:01:46	<--	MulleDK19 (MulleDK19@unaffiliated/mulledk19) has quit (Ping timeout: 265 seconds)
2016-09-23 02:02:13	cbreak	kstar: have you looked at std::chrono?
2016-09-23 02:02:37	cbreak	kstar: it has time_point and time_duration types in different "reference frames" called clocks
2016-09-23 02:02:39	<--	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has quit (Quit: This computer has gone to sleep)
2016-09-23 02:03:00	cbreak	it's of course done via template
2016-09-23 02:03:13	<--	ARCADIVS (~RMM@97.84.20.251) has quit (Quit: ARCADIVS)
2016-09-23 02:04:15	<--	planet_en (~nkh@5.107.65.47) has quit (Ping timeout: 276 seconds)
2016-09-23 02:05:21	-->	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has joined ##c++
2016-09-23 02:08:33	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-23 02:11:56	<--	whytrytofly (~whytrytof@dslb-094-223-012-212.094.223.pools.vodafone-ip.de) has quit (Quit: Leaving)
2016-09-23 02:13:44	<--	araml (~araml@unaffiliated/araml) has quit (Quit: WeeChat 1.0.1)
2016-09-23 02:13:44		[02:13]
2016-09-23 02:15:02	-->	kasper_ (~safaf@86.125.13.178) has joined ##c++
2016-09-23 02:15:09	<--	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has quit (Quit: This computer has gone to sleep)
2016-09-23 02:16:16	-->	emlai_ (emil@melkinpaasi.cs.helsinki.fi) has joined ##c++
2016-09-23 02:16:19	qis	cbreak: I'm not sure about your reference concerns. Seems to work with minimal effort: http://melpon.org/wandbox/permlink/DSyCQwRtYVpIwA2r
2016-09-23 02:16:37	-->	fedepad (~fedepad@p4FE11F83.dip0.t-ipconnect.de) has joined ##c++
2016-09-23 02:18:12	<--	kasper^ (~safaf@46.97.122.30) has quit (Ping timeout: 265 seconds)
2016-09-23 02:18:16	<--	DigiByteDev (~JT2@220.241.252.65) has quit (Quit: DigiByteDev)
2016-09-23 02:18:44	qis	Oh, the assignment ops also have to be defined. =)
2016-09-23 02:18:56	-->	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has joined ##c++
2016-09-23 02:19:05	<--	kasper_ (~safaf@86.125.13.178) has quit (Ping timeout: 240 seconds)
2016-09-23 02:19:37	<--	Lowl3v3l (~Lowl3v3l@dslb-088-075-098-175.088.075.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2016-09-23 02:20:09	cbreak	yes
2016-09-23 02:21:00	-->	Lowl3v3l (~Lowl3v3l@dslb-088-075-098-175.088.075.pools.vodafone-ip.de) has joined ##c++
2016-09-23 02:21:08	--	yazdmich is now known as BytesAndCoffee
2016-09-23 02:21:12	<--	zack_s_ (57ea344a@gateway/web/freenode/ip.87.234.52.74) has quit (Ping timeout: 240 seconds)
2016-09-23 02:21:13	-->	DigiByteDev (~JT2@220.241.252.65) has joined ##c++
2016-09-23 02:21:32	-->	jkhl (~j@host86-182-59-122.range86-182.btcentralplus.com) has joined ##c++
2016-09-23 02:21:39	w3z	{S a(42); S b(a); a.r++; cout<<b.r;} struct S{tuple<int> t; int& r; S(int i):t{make_tuple(i)},r{get<0>(t)}{}};
2016-09-23 02:21:40	geordi	43
2016-09-23 02:21:59	w3z	and yes, assignment as well
2016-09-23 02:22:08	-->	viro (~viro@unaffiliated/viro) has joined ##c++
2016-09-23 02:22:19	-->	deekej (~deekej@ip4-83-240-97-205.cust.nbox.cz) has joined ##c++
2016-09-23 02:22:36	w3z	oh, nm, i see you did delegate to the constructor in your cc now
2016-09-23 02:22:42	<--	funfunctor (~edward@1.129.96.208) has quit (Ping timeout: 264 seconds)
2016-09-23 02:22:48	qis	http://melpon.org/wandbox/permlink/9krx8jYMGjy66YRn
2016-09-23 02:23:12	qis	I'm not happy with it yet since there is a lot of boilerplate in the "user" class…
2016-09-23 02:23:20	qis	And I don't like to resort to macros.
2016-09-23 02:23:43	<--	meandrain (~meandrain@89.39.95.149) has quit (Read error: No route to host)
2016-09-23 02:23:54	<--	deekej (~deekej@ip4-83-240-97-205.cust.nbox.cz) has quit (Read error: Connection reset by peer)
2016-09-23 02:24:48	w3z	you realize that member references take up space right ...
2016-09-23 02:25:25	cbreak	and it makes everything more complex
2016-09-23 02:25:35	-->	PJBoy (~PJBoy_@unaffiliated/pjboy) has joined ##c++
2016-09-23 02:25:47	cbreak	i.e. struct X { double a; double b; }; // trivially copyable, aggregate initializable, ...
2016-09-23 02:25:54	cbreak	your thing: not.
2016-09-23 02:26:05	w3z	<<sizeof(S); struct S{int &a,&b,&c;};
2016-09-23 02:26:06	geordi	24
2016-09-23 02:26:16	qis	w3z: Yes and it leads me to the conclusion that constexpr accessor functions might be faster, smaller and safer.
2016-09-23 02:26:38	w3z	the whole thing smells of over-engineering for no gain
2016-09-23 02:27:51	qis	w3z: Not sure about that. I want to reduce the boilerplate code in this type of headers: https://paste.ubuntu.com/23219843/
2016-09-23 02:28:16	qis	w3z: If you have a few hundred of those and add new ones on a regular basis, it's error prone and cumbersome.
2016-09-23 02:28:59	qis	w3z: With a tuple member for data I could write a single proxy for ice::json and a single proxy for soci::row and be done with it.
2016-09-23 02:28:59		[02:28]
2016-09-23 02:30:40	-->	ibouvousaime (~ibouvousa@41.83.35.164) has joined ##c++
2016-09-23 02:31:16	-->	kasper^ (~safaf@109.166.135.1) has joined ##c++
2016-09-23 02:31:24	-->	planet_en (~nkh@5.107.65.47) has joined ##c++
2016-09-23 02:31:42	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-23 02:33:54	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-23 02:34:20	<--	Immune (~Immune@173.55.30.110) has quit (Ping timeout: 260 seconds)
2016-09-23 02:34:21	<--	kasper^ (~safaf@109.166.135.1) has quit (Read error: Connection reset by peer)
2016-09-23 02:34:33	-->	deekej (~deekej@ip4-83-240-97-205.cust.nbox.cz) has joined ##c++
2016-09-23 02:35:29	<--	planet_en (~nkh@5.107.65.47) has quit (Ping timeout: 240 seconds)
2016-09-23 02:35:51	<--	rmunoz (~ricardo@217.124.142.50) has quit (Remote host closed the connection)
2016-09-23 02:37:14	<--	Palsson (~Palsson@pc-193-235-91-227.norrkoping.se) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-09-23 02:37:24	<--	Nilesh_ (uid116340@gateway/web/irccloud.com/x-ruiopwfbfmtqsinl) has quit (Quit: Connection closed for inactivity)
2016-09-23 02:37:48	<--	Lomex (~lomex@213.61.34.42) has quit (Remote host closed the connection)
2016-09-23 02:38:01	-->	seishun (~Kakera@46.109.98.192) has joined ##c++
2016-09-23 02:40:13	-->	Immune (~Immune@173.55.30.110) has joined ##c++
2016-09-23 02:40:39	<--	deekej (~deekej@ip4-83-240-97-205.cust.nbox.cz) has quit (Ping timeout: 244 seconds)
2016-09-23 02:42:53	-->	Palsson (~Palsson@pc-193-235-91-227.norrkoping.se) has joined ##c++
2016-09-23 02:43:50	-->	Alina-malina (~Alina-mal@37.157.216.133) has joined ##c++
2016-09-23 02:45:08	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-23 02:45:08		[02:45]
2016-09-23 02:45:31	-->	voidah (~voidah@unaffiliated/voider) has joined ##c++
2016-09-23 02:47:11	<--	Alina-malina (~Alina-mal@37.157.216.133) has quit (Changing host)
2016-09-23 02:47:11	-->	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has joined ##c++
2016-09-23 02:47:18	<--	gagbo_ (~gagbo@unaffiliated/gagbo) has quit (Quit: Konversation terminated!)
2016-09-23 02:47:48	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-23 02:49:42	<--	Murii (~Murii@86.127.60.21) has quit (Remote host closed the connection)
2016-09-23 02:49:55	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-23 02:50:00	<--	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has quit (Quit: This computer has gone to sleep)
2016-09-23 02:50:32	-->	Lomex (~lomex@213.61.34.42) has joined ##c++
2016-09-23 02:51:00	-->	nikki93 (~nikki93@2601:645:8104:cb10:fcab:cc29:b179:4762) has joined ##c++
2016-09-23 02:53:22	-->	magnicida (~raskolnik@2a02:8109:8c80:231:ea39:dfff:fe4d:275b) has joined ##c++
2016-09-23 02:55:42	<--	Lomex (~lomex@213.61.34.42) has quit (Ping timeout: 264 seconds)
2016-09-23 02:55:55	<--	GrayArea (~GrayArea@cpc73846-dals21-2-0-cust384.20-2.cable.virginm.net) has quit (Ping timeout: 260 seconds)
2016-09-23 02:56:22	-->	k299 (~chatzilla@219-84-241-235-adsl-tao.dynamic.so-net.net.tw) has joined ##c++
2016-09-23 02:56:36	-->	erbse (~test@unaffiliated/erbse) has joined ##c++
2016-09-23 02:57:05	<--	DonRichie (~DonRichie@ricl.de) has quit (Ping timeout: 260 seconds)
2016-09-23 02:57:10	<--	DingoSaar (~hagen@pD9E087E6.dip0.t-ipconnect.de) has quit (Read error: Connection reset by peer)
2016-09-23 02:58:03	-->	DonRichie (~DonRichie@ricl.de) has joined ##c++
2016-09-23 02:58:12	-->	ewanshin (~ewanshin@183.101.46.30) has joined ##c++
2016-09-23 02:58:28	-->	KNRO_ (~quassel@94.187.209.247) has joined ##c++
2016-09-23 02:58:29	<--	phlpp (~Philipp@rihanna.cb.uni-bonn.de) has quit (Quit: Leaving)
2016-09-23 02:58:41	-->	zack_s_ (57ea344a@gateway/web/freenode/ip.87.234.52.74) has joined ##c++
2016-09-23 02:58:46	<--	Hello71 (~Hello71@wikipedia/Hello71) has quit (Quit: Bye.)
2016-09-23 02:58:57	zack_s_	how can I retrieve the milliseconds part of a std::chrono::duration?
2016-09-23 02:59:20	-->	Hello71 (~Hello71@wikipedia/Hello71) has joined ##c++
2016-09-23 02:59:45	zack_s_	e.g. 2500000000 ns = milliseconds part is 500
2016-09-23 03:01:17	<--	rorro (~rorro@c-227-201.eduroam.liu.se) has quit (Ping timeout: 265 seconds)
2016-09-23 03:01:17		[03:01]
2016-09-23 03:02:24	daedric	% 1 microseconds ?
2016-09-23 03:02:43	<--	kolko (~kolko@46.48.58.17) has quit (Read error: Connection reset by peer)
2016-09-23 03:02:53	<--	ibouvousaime (~ibouvousa@41.83.35.164) has quit (Read error: Connection reset by peer)
2016-09-23 03:03:10	-->	joehunt5888 (~joehunt@115.164.94.232) has joined ##c++
2016-09-23 03:03:34	-->	Arlen0 (~Arlen0@38-103-219-200.alamobb.net) has joined ##c++
2016-09-23 03:04:12	-->	kolko (~kolko@2a02:17d0:66:1500:9c42:7234:4536:54d3) has joined ##c++
2016-09-23 03:04:28	<--	Arlen0 (~Arlen0@38-103-219-200.alamobb.net) has quit (Client Quit)
2016-09-23 03:06:31	<--	dmiles (dmiles@c-24-20-102-245.hsd1.wa.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-23 03:07:58	-->	sctt (~sctt@107-141-7-158.lightspeed.nsvltn.sbcglobal.net) has joined ##c++
2016-09-23 03:08:47	grako	duration_cast
2016-09-23 03:08:48	-->	phinxy (~tehhhd@unaffiliated/phinxy) has joined ##c++
2016-09-23 03:10:13	<--	xaxxon (~xaxxon@2601:602:9d00:d58b:d9ae:ae6e:f329:b70b) has quit (Quit: This computer has gone to sleep)
2016-09-23 03:10:22	-->	rorro (~rorro@c-227-201.eduroam.liu.se) has joined ##c++
2016-09-23 03:11:05	zack_s_	grako: show me
2016-09-23 03:11:33	<--	casscode (~bru@169-1-129-208.ip.afrihost.co.za) has quit (Ping timeout: 272 seconds)
2016-09-23 03:12:42	-->	luminoso (~lumos@114.21.166.178.rev.vodafone.pt) has joined ##c++
2016-09-23 03:14:00	<--	Immune (~Immune@173.55.30.110) has quit (Ping timeout: 260 seconds)
2016-09-23 03:14:54	qis	<< std::duration_cast<std::chrono::milliseconds>(std::chrono::minutes(1)).count();
2016-09-23 03:14:55	geordi	error: 'duration_cast' is not a member of 'std'
2016-09-23 03:14:58	-->	esas (~esas@unaffiliated/esas) has joined ##c++
2016-09-23 03:15:01	qis	<< std::chrono::duration_cast<std::chrono::milliseconds>(std::chrono::minutes(1)).count();
2016-09-23 03:15:02	geordi	60000
2016-09-23 03:16:08	-->	riksteri (~SpaceDino@62.102.148.158) has joined ##c++
2016-09-23 03:16:25	<--	AndyDD (~AndyD@host-78-144-137-134.as13285.net) has quit (Ping timeout: 248 seconds)
2016-09-23 03:16:25		[03:16]
2016-09-23 03:16:32	<--	fahadash (uid44972@gateway/web/irccloud.com/x-bcgoflvnamqlpmgg) has quit (Quit: Connection closed for inactivity)
2016-09-23 03:16:40	zack_s_	is there somewhere the conversion factor from nanoseconds to milliseconds stored in chono?
2016-09-23 03:16:52	-->	SecondForm_Glenn (~Thunderbi@108.189.70.212) has joined ##c++
2016-09-23 03:17:23	-->	CEnnis91 (uid3543@gateway/web/irccloud.com/x-cfqculwfozrvcaim) has joined ##c++
2016-09-23 03:17:31	-->	AndyDD (~AndyD@host-78-144-137-19.as13285.net) has joined ##c++
2016-09-23 03:17:53	<--	feliwir (Elite16673@gateway/shell/elitebnc/x-tpvfutvwrihddxvd) has quit (Ping timeout: 272 seconds)
2016-09-23 03:17:59	qis	zack_s_: Yes, ratio.
2016-09-23 03:18:13	qis	http://en.cppreference.com/w/cpp/numeric/ratio/ratio
2016-09-23 03:18:51	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-23 03:19:09	qis	zack_s_: milli is the ratio for milliseconds copared to seconds. See here for other duration ratios: http://en.cppreference.com/w/cpp/chrono/duration
2016-09-23 03:19:38	qis	zack_s_: Howard Hinnant uses the same principle to define days, weeks, months and years.
2016-09-23 03:20:06	qis	using years = std::chrono::duration <int, std::ratio_multiply<std::ratio<146097, 400>, days::period>>;
2016-09-23 03:20:22	-->	Immune (~Immune@173.55.30.110) has joined ##c++
2016-09-23 03:20:27	qis	using days = std::chrono::duration <int, std::ratio_multiply<std::ratio<24>, std::chrono::hours::period>>;
2016-09-23 03:21:17	-->	ghdf (c3f30e22@gateway/web/cgi-irc/kiwiirc.com/ip.195.243.14.34) has joined ##c++
2016-09-23 03:21:28	-->	Lomex (~lomex@213.61.34.42) has joined ##c++
2016-09-23 03:21:35	-->	Dweezahr (~Dweezahr@RN-145-97-176-156.eduroam.rug.nl) has joined ##c++
2016-09-23 03:21:38	<--	ghdf (c3f30e22@gateway/web/cgi-irc/kiwiirc.com/ip.195.243.14.34) has left ##c++
2016-09-23 03:21:44	-->	ghdf (c3f30e22@gateway/web/cgi-irc/kiwiirc.com/ip.195.243.14.34) has joined ##c++
2016-09-23 03:22:16	Dweezahr	Hi, I read the cpp core guidelines and I found in the myths section: "one class per source file"
2016-09-23 03:22:39	Dweezahr	so this is not necessarily a good technique
2016-09-23 03:22:48	Dweezahr	However, there are no guidelines on this topic
2016-09-23 03:22:55	Dweezahr	I have searched through 5 books already, 3 on coding style
2016-09-23 03:23:01	klys	I follow that technique
2016-09-23 03:23:01	-->	Thorax (~Thorax@94.197.120.25.threembb.co.uk) has joined ##c++
2016-09-23 03:23:09	<--	ghdf (c3f30e22@gateway/web/cgi-irc/kiwiirc.com/ip.195.243.14.34) has left ##c++
2016-09-23 03:23:32	Dweezahr	klys, me too, and in Java it is recommended
2016-09-23 03:23:54	-->	Baumfaust (c3f30e22@gateway/web/cgi-irc/kiwiirc.com/ip.195.243.14.34) has joined ##c++
2016-09-23 03:23:59	Baumfaust	hi
2016-09-23 03:24:05	klys	to a point, in ten or so .cc files I have one with two or more classes
2016-09-23 03:24:26	qis	Dweezahr: I am pretty sure this guideline is not for helper classes in anonymous namespaces.
2016-09-23 03:24:34	-->	dmiles (dmiles@c-24-20-102-245.hsd1.wa.comcast.net) has joined ##c++
2016-09-23 03:24:41	<--	blackwind_123 (~IceChat9@117.192.140.9) has quit (Ping timeout: 240 seconds)
2016-09-23 03:24:43	<--	DigiByteDev (~JT2@220.241.252.65) has quit (Quit: DigiByteDev)
2016-09-23 03:25:04	klys	hi
2016-09-23 03:25:21	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-23 03:26:18	<--	sctt (~sctt@107-141-7-158.lightspeed.nsvltn.sbcglobal.net) has quit (Ping timeout: 264 seconds)
2016-09-23 03:26:30	qis	klys: Beware of the .cc file ending. You might get scolded for it here. XD
2016-09-23 03:26:41	qis	s/file ending/file extention/
2016-09-23 03:26:44	-->	blackwind_123 (~IceChat9@117.192.151.163) has joined ##c++
2016-09-23 03:26:48	RokerHRO	qis: why?
2016-09-23 03:26:58	Dweezahr	everyone uses .cpp I have noticed indeed
2016-09-23 03:27:08	Dweezahr	.cc is something for the GNU?
2016-09-23 03:27:10	klys	I like it better.  Style is a matter of personal preference.
2016-09-23 03:29:38	qis	Dweezahr: No, something from google. I would never use something even remotely GNU related without being forced or paid.
2016-09-23 03:29:52	<--	AquaL1te (~AquaL1te@unaffiliated/aqual1te) has quit (Ping timeout: 255 seconds)
2016-09-23 03:30:07	klys	When I first started coding C I liked to indent two spaces, though all code I saw indented three spaces.  I came to like and then adopted three-space indents with time.
2016-09-23 03:30:26	Dweezahr	I always use 4
2016-09-23 03:30:40	Baumfaust	I have made a class with some basic members like strings and ints, now i used the operator << to print the mebers with a defined length
2016-09-23 03:30:42	Baumfaust	like this
2016-09-23 03:30:44	Baumfaust	http://npaste.de/p/Zu/
2016-09-23 03:30:46	<--	pheenx (~pheenx@2a02:8071:b68a:1c00:225:22ff:fee7:7dc5) has quit (Ping timeout: 265 seconds)
2016-09-23 03:31:18	Baumfaust	now i also need to read back into my class with the same length, what would be the best diea to do this
2016-09-23 03:31:30	Baumfaust	using seekg inside operator>> ?
2016-09-23 03:31:30		[03:31]
2016-09-23 03:33:00	klys	operator>> is just an extraction operator, not an input method.  SIGIO is an input method.  watch out for vulnerable input methodology.
2016-09-23 03:33:25	<--	kuahara (~kuahara@196-21.201-68.bham.res.rr.com) has quit (Ping timeout: 250 seconds)
2016-09-23 03:33:47	-->	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has joined ##c++
2016-09-23 03:34:02	<--	Aquza (~Aquza@p578b4612.dip0.t-ipconnect.de) has quit
2016-09-23 03:34:28	-->	rebb (~rebb3@p54B81C99.dip0.t-ipconnect.de) has joined ##c++
2016-09-23 03:34:49	Baumfaust	i want to read for example from a std::string into my class
2016-09-23 03:34:56	-->	t3hb0b (~b0b@193.105.134.166) has joined ##c++
2016-09-23 03:34:59	Baumfaust	simple parsing
2016-09-23 03:35:28	qis	There is no such think as simple parsing of strings.
2016-09-23 03:35:35	klys	then assert that it is a std::string and that it matches expected limits and doesn't cheat
2016-09-23 03:35:39	qis	You either do it manually or with a code generator like re2c.
2016-09-23 03:35:55	Baumfaust	manuallay
2016-09-23 03:36:04	qis	You will do critical mistakes.
2016-09-23 03:36:12	Baumfaust	why?
2016-09-23 03:36:13	qis	Since you already did them with formatting. =)
2016-09-23 03:36:25	<--	aslant (~aslant@37.157.39.138) has quit (Read error: Connection reset by peer)
2016-09-23 03:36:25	Baumfaust	why?
2016-09-23 03:36:53	-->	AquaL1te (~AquaL1te@unaffiliated/aqual1te) has joined ##c++
2016-09-23 03:37:23	-->	aslant (~aslant@37.157.39.138) has joined ##c++
2016-09-23 03:38:21	symm-	I don't re2c is the answer for a homework assignment
2016-09-23 03:38:41	-->	sctt (~sctt@71.19.249.4) has joined ##c++
2016-09-23 03:39:24	symm-	+think
2016-09-23 03:40:03	<--	rorro (~rorro@c-227-201.eduroam.liu.se) has quit (Ping timeout: 272 seconds)
2016-09-23 03:40:15	<--	sin3t (~sin3t@77.47.209.98) has quit (Ping timeout: 260 seconds)
2016-09-23 03:42:28	chris64	Baumfaust: you could use boost::spirit::x3 it's a great parser generator :-)
2016-09-23 03:42:46	<--	AquaL1te (~AquaL1te@unaffiliated/aqual1te) has quit (Ping timeout: 265 seconds)
2016-09-23 03:42:58	<--	nikki93 (~nikki93@2601:645:8104:cb10:fcab:cc29:b179:4762) has quit (Remote host closed the connection)
2016-09-23 03:43:06	Baumfaust	i know, but I guess this is too much overhead for such a simple thing
2016-09-23 03:43:28	-->	AquaL1te (~AquaL1te@unaffiliated/aqual1te) has joined ##c++
2016-09-23 03:44:42	-->	gp5st (17194381@gateway/web/freenode/ip.23.25.67.129) has joined ##c++
2016-09-23 03:44:53	-->	slavanap (~slavanap@5.145.251.251) has joined ##c++
2016-09-23 03:46:21	qis	Baumfaust: This is probably a bit safer but still not perfect: http://melpon.org/wandbox/permlink/7zlML2M54EZNkmpx
2016-09-23 03:46:34	-->	sin3t (~sin3t@77.47.209.98) has joined ##c++
2016-09-23 03:46:34		[03:46]
2016-09-23 03:46:49	-->	fahadash (uid44972@gateway/web/irccloud.com/x-ambtdbtylvecpabz) has joined ##c++
2016-09-23 03:46:54	qis	symm-: You complain about re2c but say nothing about using Boost.Spirit as a newbie?
2016-09-23 03:47:01	<--	sctt (~sctt@71.19.249.4) has quit (Ping timeout: 272 seconds)
2016-09-23 03:47:17	<--	spindle (~spindle@27-33-39-55.static.tpgi.com.au) has quit (Ping timeout: 250 seconds)
2016-09-23 03:47:41	Baumfaust	qis yes you are right
2016-09-23 03:48:24	qis	Baumfaust: I'm a bit confused about length and time being defined as integers but the "Bytes" seem to refer to the amount of bytes when formatted as a decimal value.
2016-09-23 03:48:33	-->	w41 (~w41@unaffiliated/w41) has joined ##c++
2016-09-23 03:48:33	qis	Baumfaust: This protocol is really bad.
2016-09-23 03:48:59	chris64	;)
2016-09-23 03:49:00	Baumfaust	you are right again, but this protocol is not defined by me
2016-09-23 03:49:04	Baumfaust	i just have to use it
2016-09-23 03:49:08	-->	joaoleao (c17e50f9@gateway/web/freenode/ip.193.126.80.249) has joined ##c++
2016-09-23 03:49:08	qis	At least rename "Bytes" to "Characters".
2016-09-23 03:49:18	Baumfaust	yes
2016-09-23 03:49:45	<--	Palsson (~Palsson@pc-193-235-91-227.norrkoping.se) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-09-23 03:49:57	<--	Elirips (~Elirips@193.135.165.208) has quit (Quit: KVIrc 4.9.1 Aria http://www.kvirc.net/)
2016-09-23 03:50:35	-->	planet_en (~nkh@5.107.65.47) has joined ##c++
2016-09-23 03:50:36	symm-	I object to boost::spirit as well! :)
2016-09-23 03:50:52	Baumfaust	i guess the mean, byte = 1 char
2016-09-23 03:50:53	qis	Baumfaust: Well, then you don't have to worry about time being too large: http://melpon.org/wandbox/permlink/eRMgRkay4Gob9NMb
2016-09-23 03:51:12	<--	joaoleao (c17e50f9@gateway/web/freenode/ip.193.126.80.249) has quit (Client Quit)
2016-09-23 03:51:41	qis	Baumfaust: Yes but it should be written somewhere how to serialize those fields.
2016-09-23 03:52:21	qis	Baumfaust: And your encoding is broken. It said "TelegrammlÃ¤nge" in your pastie so either you or your professor still uses non-unicode character sets.
2016-09-23 03:52:32	qis	This should be punishable by law.
2016-09-23 03:52:49	<--	magnicida (~raskolnik@2a02:8109:8c80:231:ea39:dfff:fe4d:275b) has quit (Quit: Leaving.)
2016-09-23 03:52:57	Baumfaust	hehe
2016-09-23 03:53:35	Baumfaust	visual studio uses ansi endcoding
2016-09-23 03:53:39	Baumfaust	encoding
2016-09-23 03:53:59	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-23 03:54:12	<--	gp5st (17194381@gateway/web/freenode/ip.23.25.67.129) has quit (Ping timeout: 240 seconds)
2016-09-23 03:54:15	<--	Immune (~Immune@173.55.30.110) has quit (Ping timeout: 260 seconds)
2016-09-23 03:54:41	<--	planet_en (~nkh@5.107.65.47) has quit (Ping timeout: 240 seconds)
2016-09-23 03:54:49	<--	ewanshin (~ewanshin@183.101.46.30) has quit (Quit: Leaving...)
2016-09-23 03:55:22	Baumfaust	but lets talk about reading into the class
2016-09-23 03:55:46	qis	Baumfaust: By default, yes. Unless you specify /utf-8 in the compiler options.
2016-09-23 03:56:10	qis	And the editor has unicode save options.
2016-09-23 03:56:14	<--	Dweezahr (~Dweezahr@RN-145-97-176-156.eduroam.rug.nl) has quit (Quit: Leaving)
2016-09-23 03:56:36	qis	And if you add a few kana in a comment at the beginning of each file, they will never be saved in the local character set.
2016-09-23 03:57:02	-->	Brklyn (~truthbk@38.122.226.210) has joined ##c++
2016-09-23 03:57:16	Baumfaust	i will fix this
2016-09-23 03:57:42	-->	illerucis (~illerucis@2604:2000:14c4:8125:bae8:56ff:fe35:7ff0) has joined ##c++
2016-09-23 03:58:14	<--	illerucis (~illerucis@2604:2000:14c4:8125:bae8:56ff:fe35:7ff0) has quit (Remote host closed the connection)
2016-09-23 03:58:23	<--	k299 (~chatzilla@219-84-241-235-adsl-tao.dynamic.so-net.net.tw) has quit (Remote host closed the connection)
2016-09-23 03:58:50	-->	illerucis (~illerucis@2620:10d:c090:180::1:4113) has joined ##c++
2016-09-23 03:58:59	<--	chris64 (~chris@unaffiliated/chris64) has quit (Quit: leaving)
2016-09-23 03:59:15	-->	baudejogos (~achubergs@pool-108-54-98-223.nycmny.fios.verizon.net) has joined ##c++
2016-09-23 03:59:42	<--	o] (~achubergs@pool-108-54-98-223.nycmny.fios.verizon.net) has quit (Read error: Connection reset by peer)
2016-09-23 04:00:32	-->	Immune (~Immune@173.55.30.110) has joined ##c++
2016-09-23 04:01:59	<--	Baumfaust (c3f30e22@gateway/web/cgi-irc/kiwiirc.com/ip.195.243.14.34) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-09-23 04:01:59		[04:01]
2016-09-23 04:02:07	<--	joehunt5888 (~joehunt@115.164.94.232) has quit (Ping timeout: 265 seconds)
2016-09-23 04:05:14	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-23 04:09:25	qis	Baumfaust: http://melpon.org/wandbox/permlink/FyNdaPTMlGhUdNWK
2016-09-23 04:09:25	-->	araml (~araml@unaffiliated/araml) has joined ##c++
2016-09-23 04:09:44	qis	And he's gone. =)
2016-09-23 04:09:55	<--	Vuks (~Vuks@unaffiliated/vuks69) has quit (Ping timeout: 265 seconds)
2016-09-23 04:10:00	qis	Well, this is the first time I have ever looked ad istream operator>> implementations so it doesn't hurt.
2016-09-23 04:10:07	qis	Way too unsafe.
2016-09-23 04:10:19	qis	And inflexible.
2016-09-23 04:11:06	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-23 04:11:14	qis	s/ad/at/
2016-09-23 04:11:49	-->	josh (~josh@c-67-182-242-240.hsd1.ut.comcast.net) has joined ##c++
2016-09-23 04:11:49	<--	Chais (~Chais@unaffiliated/chais) has quit (Read error: Connection reset by peer)
2016-09-23 04:13:00	-->	FreeBirdLjj (~freebirdl@2002:df41:5483:0:c80b:89b2:8bb6:6abd) has joined ##c++
2016-09-23 04:13:19	-->	MrP[Home] (~Palsson@c-a46fe555.06-213-6e6b701.cust.bredbandsbolaget.se) has joined ##c++
2016-09-23 04:15:14	-->	Twinsen (~Twinsen@2a00:1028:8380:be9e:447b:2601:50fc:d91d) has joined ##c++
2016-09-23 04:15:16	w3z	yawn, how has c++ iostreams survived without your insight for so long :)
2016-09-23 04:16:32	w3z	(sure its garbage like, but until theres a better alternative, eh)
2016-09-23 04:16:36	-->	Chais (~Chais@unaffiliated/chais) has joined ##c++
2016-09-23 04:18:44	<--	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has quit (Quit: This computer has gone to sleep)
2016-09-23 04:18:44		[04:18]
2016-09-23 04:20:34	<--	FreeBirdLjj (~freebirdl@2002:df41:5483:0:c80b:89b2:8bb6:6abd) has quit (Remote host closed the connection)
2016-09-23 04:21:14	-->	Murii (~Murii@86.127.60.21) has joined ##c++
2016-09-23 04:21:18	-->	comando (uid185287@gateway/web/irccloud.com/x-eaiskdeqthdhzhwu) has joined ##c++
2016-09-23 04:22:00	-->	zeus_ (2be4e52a@gateway/web/freenode/ip.43.228.229.42) has joined ##c++
2016-09-23 04:22:25	slavanap	Is there a cross-platform way to check in check with `#ifdef` whether support for features higher than c++11 (like c++14, c++17) is enabled?
2016-09-23 04:22:35	-->	Leovale (~Leovale@45.72.141.66) has joined ##c++
2016-09-23 04:23:08	<--	drozdziak1 (~drozdziak@do-atman.cubiware.com) has quit (Quit: WeeChat 1.5)
2016-09-23 04:23:13	slavanap	__cplusplus == 199711L for c++11, c++14 & c++17...
2016-09-23 04:23:23	<--	Markow (~Markow@176.122.215.103) has quit (Remote host closed the connection)
2016-09-23 04:23:27	-->	AquaL1te_ (~AquaL1te@unaffiliated/aqual1te) has joined ##c++
2016-09-23 04:23:31	slavanap	* == 201103L
2016-09-23 04:24:03	<--	zero_byte (~zer0@ip-89-103-110-138.net.upcbroadband.cz) has quit (Ping timeout: 240 seconds)
2016-09-23 04:24:37	-->	FreeBirdLjj (~freebirdl@2002:df41:5483:0:7465:9f5c:4bef:89ab) has joined ##c++
2016-09-23 04:24:58	-->	feliwir (Elite16673@gateway/shell/elitebnc/x-bycuijvjvtdmunav) has joined ##c++
2016-09-23 04:25:54	<--	Gluesticky (~IceChat9@unaffiliated/gluesticky) has quit (Quit: This is the end. Goodbye cruel world!)
2016-09-23 04:26:05	-->	Bhargav97 (uid33983@gateway/web/irccloud.com/x-rhpbaniagfyrczwt) has joined ##c++
2016-09-23 04:26:11	V-ille	__cplusplus is not 201103L for c++14
2016-09-23 04:26:25	slavanap	V-ille, well. It works only for GCC
2016-09-23 04:26:40	-->	m_ben (~m_ben@unaffiliated/m-ben/x-5917362) has joined ##c++
2016-09-23 04:26:52	slavanap	already get the point that __cplusplus in MSVS is always 199711L ...
2016-09-23 04:26:53	V-ille	meaning that it doesn't work for msvc?
2016-09-23 04:26:56	V-ille	right
2016-09-23 04:27:11	V-ille	well, I'm not going to suggest using feature macros, then :)
2016-09-23 04:27:29	ppf	does static assert work inside an if?
2016-09-23 04:27:45	lh_mouse	slavanap, MSVC isn't lying. It has never been supporting C++11.
2016-09-23 04:27:47	-->	deMoivre (~deMoivre@unaffiliated/demoivre) has joined ##c++
2016-09-23 04:27:48	slavanap	just need to check for _MSC_VER separately.
2016-09-23 04:28:09	deMoivre	I pulled the entire gcc repo in order to inspect some of the source code for the C++ standard library
2016-09-23 04:28:19	deMoivre	I'm having a hard time finding the implementation(s) for calloc
2016-09-23 04:28:24	V-ille	ppf: you can put a static_assert wherever you like, because you can put it into a lambda and then use the lambda wherever you use an expression
2016-09-23 04:28:27	deMoivre	I was able to find them for C just fine
2016-09-23 04:28:38	deMoivre	Does anyone have experience doing something like this?
2016-09-23 04:28:52	<--	grako (~grako@host86-163-229-238.range86-163.btcentralplus.com) has quit
2016-09-23 04:28:59	V-ille	!give deMoivre general
2016-09-23 04:29:00	nolyc	deMoivre: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2016-09-23 04:29:00	ppf	V-ille: when is this static_assert evaluated then?
2016-09-23 04:29:05	lh_mouse	deMoivre, calloc() isn't part of gcc.
2016-09-23 04:29:15	deMoivre	o rly?
2016-09-23 04:29:15	V-ille	ppf: when it's parsed, unless it's dependent
2016-09-23 04:29:25	slavanap	V-ille, lh_mouse, I just leave it here:  https://msdn.microsoft.com/en-us/library/hh567368.aspx
2016-09-23 04:29:27	deMoivre	g++ just calls gcc
2016-09-23 04:29:36	V-ille	nonsense
2016-09-23 04:29:49	<--	beatdown (beatdown@unaffiliated/beatdown) has quit (Quit: ZNC 1.6.1 - http://znc.in)
2016-09-23 04:29:50	<--	brendel (~brice@LAubervilliers-656-1-215-246.w217-128.abo.wanadoo.fr) has quit (Ping timeout: 260 seconds)
2016-09-23 04:30:17	ppf	V-ille: so the dynamic if control flow doesn't matter
2016-09-23 04:30:25	V-ille	it doesn't
2016-09-23 04:30:30	V-ille	static_assert is, well, static
2016-09-23 04:31:00	<--	FreeBirdLjj (~freebirdl@2002:df41:5483:0:7465:9f5c:4bef:89ab) has quit (Remote host closed the connection)
2016-09-23 04:31:08	ppf	yea
2016-09-23 04:31:38	w3z	(exceptfor the dependent case asyou mentioned earlier)
2016-09-23 04:31:42	-->	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has joined ##c++
2016-09-23 04:31:52	lh_mouse	deMoivre, calloc() is a function from the C standard library. So you probably have to turn to GLIBC or MSVCRT etc.
2016-09-23 04:31:57	-->	mangolisk (~mangolisk@S0106848dc7ebaa06.vc.shawcable.net) has joined ##c++
2016-09-23 04:32:03	ppf	i'm guessing even if the if's condition is constexpr
2016-09-23 04:32:08	ppf	what about the dependant case
2016-09-23 04:32:10	<--	Winslow_ (~Winslow_@bnc.unknowncheats.me) has quit (Ping timeout: 260 seconds)
2016-09-23 04:32:18	ppf	then its evaluated once it is expanded?
2016-09-23 04:32:25	V-ille	in the dependent case, the static assert is evaluated at instantiation time
2016-09-23 04:32:34	-->	Winslow_ (~Winslow_@bnc.unknowncheats.me) has joined ##c++
2016-09-23 04:32:50	ppf	as one would expect
2016-09-23 04:32:52	ppf	alright
2016-09-23 04:32:53	-->	deekej (~deekej@ip4-83-240-97-205.cust.nbox.cz) has joined ##c++
2016-09-23 04:32:58	V-ille	w3z: well, even for a dependent case, the *dynamic* control flow doesn't matter for a static_assert
2016-09-23 04:32:58	hs_	ppf, static_assert evaluates a constant expression
2016-09-23 04:33:03	lh_mouse	slavanap, MSVC isn't a conforming compiler. So, bear with it, or get rid of it if you don't.
2016-09-23 04:33:45	<--	hosified (~hosified@unaffiliated/hosified) has quit (Quit: Leaving)
2016-09-23 04:33:45		[04:33]
2016-09-23 04:33:56	slavanap	lh_mouse, I'm choosing 1st. Just figuring out in what MSVS versions std::integer_sequence got supported...
2016-09-23 04:33:57	-->	Sculptor (~Sculptor@cable-24-135-26-151.dynamic.sbb.rs) has joined ##c++
2016-09-23 04:34:30	<--	Immune (~Immune@173.55.30.110) has quit (Ping timeout: 260 seconds)
2016-09-23 04:34:51	-->	pmercado (~pmercado@186-104-216-78.baf.movistar.cl) has joined ##c++
2016-09-23 04:35:21	<--	BustyLoli-Chan (~BustyLoli@2601:680:c201:cd2:7cdb:8cec:4aaf:411a) has quit (Ping timeout: 248 seconds)
2016-09-23 04:35:36	ppf	hs_: yes
2016-09-23 04:35:44	<--	k^ (k@91.219.237.227) has quit (Ping timeout: 252 seconds)
2016-09-23 04:37:02	slavanap	lh_mouse, I'm starting to love cppreference http://en.cppreference.com/w/cpp/compiler_support
2016-09-23 04:37:12	-->	eclaire (~claire@dc.35.01a8.ip4.static.sl-reverse.com) has joined ##c++
2016-09-23 04:38:34	-->	magnicida (~raskolnik@2a02:8109:8c80:231:ea39:dfff:fe4d:275b) has joined ##c++
2016-09-23 04:39:04	w3z	V-ille: oh, i didnt mean to assert that it does, assuming that means if(b) static_assert(dependant_value);
2016-09-23 04:39:04	<--	vitimiti (~vitimiti@unaffiliated/vitimiti) has quit (Read error: Connection reset by peer)
2016-09-23 04:39:30	<--	mss_cyclist (~MSe@89-250-189-210.tangos.nl) has quit (Ping timeout: 264 seconds)
2016-09-23 04:39:32	<--	Winslow_ (~Winslow_@bnc.unknowncheats.me) has quit (Excess Flood)
2016-09-23 04:39:46	lh_mouse	:|
2016-09-23 04:39:51	-->	beatdown (beatdown@unaffiliated/beatdown) has joined ##c++
2016-09-23 04:40:41	-->	Immune (~Immune@173.55.30.110) has joined ##c++
2016-09-23 04:42:05	<--	mandeep (~mandeep@2602:306:3013:d610:fc3b:8f7f:c410:c063) has quit (Quit: Leaving)
2016-09-23 04:42:21	-->	Mike11 (~Mike@unaffiliated/mike11) has joined ##c++
2016-09-23 04:43:23	w3z	{S<void> s; s.f();} template<class T> struct S{void f(){if constexpr(is_same_v<T,int>) static_assert(is_same_v<T,int>);}}; // i assume the quotes weer a way to differentiate between that and the constexpr if case
2016-09-23 04:43:24	geordi	<no output>
2016-09-23 04:43:26	-->	Winslow_ (~Winslow_@bnc.unknowncheats.me) has joined ##c++
2016-09-23 04:43:49	w3z	err s/quotes/asterisks/
2016-09-23 04:45:16	<--	AquaL1te_ (~AquaL1te@unaffiliated/aqual1te) has quit (Quit: leaving)
2016-09-23 04:45:27	-->	Karyon (~yaaic@unaffiliated/karyon) has joined ##c++
2016-09-23 04:45:48	-->	brendel (~brice@LAubervilliers-656-1-215-246.w217-128.abo.wanadoo.fr) has joined ##c++
2016-09-23 04:46:04	-->	vitimiti (~vitimiti@unaffiliated/vitimiti) has joined ##c++
2016-09-23 04:46:15	<--	AquaL1te (~AquaL1te@unaffiliated/aqual1te) has quit (Remote host closed the connection)
2016-09-23 04:46:40	-->	frib (~dynorsau@95.236.60.18) has joined ##c++
2016-09-23 04:46:45	<--	forgottenone (~forgotten@176.40.23.252) has quit (Ping timeout: 260 seconds)
2016-09-23 04:46:54	-->	mad_enz (~mad_enz@CPE00508b114c3e-CM00fc8d50aef0.cpe.net.fido.ca) has joined ##c++
2016-09-23 04:47:28	<--	deMoivre (~deMoivre@unaffiliated/demoivre) has left ##c++
2016-09-23 04:48:57	-->	allen29 (~all@unaffiliated/allen29) has joined ##c++
2016-09-23 04:48:57		[04:48]
2016-09-23 04:49:00	<--	magnicida (~raskolnik@2a02:8109:8c80:231:ea39:dfff:fe4d:275b) has quit (Ping timeout: 265 seconds)
2016-09-23 04:49:41	<--	issac (~issac@39.128.11.8) has quit (Quit: Leaving)
2016-09-23 04:50:35	-->	fusta (~fusta@88.241.30.9) has joined ##c++
2016-09-23 04:50:58	<--	riemann (~riemann@84-10-11-234.static.chello.pl) has quit (Quit: Leaving)
2016-09-23 04:51:01	-->	Gathis (~TheBlack@unaffiliated/gathis) has joined ##c++
2016-09-23 04:52:45	<--	beatdown (beatdown@unaffiliated/beatdown) has quit (Changing host)
2016-09-23 04:52:45	-->	beatdown (beatdown@chainsawed.and.strangled.net) has joined ##c++
2016-09-23 04:53:16	-->	jshjsh (~jshjsh@172.56.38.166) has joined ##c++
2016-09-23 04:53:40	-->	tmk (~tmk@124.40.246.86) has joined ##c++
2016-09-23 04:54:01	<--	illerucis (~illerucis@2620:10d:c090:180::1:4113) has quit (Ping timeout: 250 seconds)
2016-09-23 04:54:11	-->	leehambley (~textual@p57A845E4.dip0.t-ipconnect.de) has joined ##c++
2016-09-23 04:54:15	<--	slavanap (~slavanap@5.145.251.251) has quit (Quit: Leaving)
2016-09-23 04:54:23	-->	FreeBirdLjj (~freebirdl@223.65.84.131) has joined ##c++
2016-09-23 04:55:33	-->	unK_ (~drunK@78-8-38-61.static.ip.netia.com.pl) has joined ##c++
2016-09-23 04:55:50	<--	Thorax (~Thorax@94.197.120.25.threembb.co.uk) has quit (Ping timeout: 265 seconds)
2016-09-23 04:56:27	-->	Thorax (~Thorax@94.197.120.132.threembb.co.uk) has joined ##c++
2016-09-23 04:56:39	-->	snover (~Adium@unaffiliated/snover) has joined ##c++
2016-09-23 04:56:54	<--	JoshS (~jshjsh@172.56.38.166) has quit (Ping timeout: 264 seconds)
2016-09-23 04:57:31	-->	drozdziak1 (~drozdziak@89-70-116-45.dynamic.chello.pl) has joined ##c++
2016-09-23 04:57:57	frib	is there a low level way to dump pixels on the screen? (linux)
2016-09-23 04:58:11	frib	i.e. dump the current screen's pixels to file
2016-09-23 04:58:32	TinoDidriksen	Ask #linux or ##C++-general
2016-09-23 04:58:46	<--	JohnMS_WORK (~chatzilla@host-193-59-178-3.gog.com) has quit (Quit: ChatZilla 0.9.92 [Firefox 48.0.2/20160823121617])
2016-09-23 04:58:55	frib	thanks
2016-09-23 04:59:30	-->	Bhargav97_ (uid33983@gateway/web/irccloud.com/x-quzfabvnhpubpbog) has joined ##c++
2016-09-23 04:59:38	Bhargav97_	Hi
2016-09-23 04:59:43	-->	mukunda (mukunda@c-71-205-185-63.hsd1.co.comcast.net) has joined ##c++
2016-09-23 05:00:50	Bhargav97_	Is size of int and long same in CPP? because sizeof is showing me the same -_-
2016-09-23 05:01:04	Bhargav97_	which is 2 bytes
2016-09-23 05:01:17	Bhargav97_	Also, long long is showing 4 bytes. So I can store numbers of order 10^9 with the help of long long
2016-09-23 05:01:23	<--	yo5phz (~yo5phz___@83.103.155.5) has quit (Ping timeout: 250 seconds)
2016-09-23 05:01:25	Bhargav97_	 What do I use if I'm given 10^18 in constraints? Long double is a float data type, I would like int datatype
2016-09-23 05:02:20	-->	Ender13 (uid187286@gateway/web/irccloud.com/x-qkyriwoaavtdxthf) has joined ##c++
2016-09-23 05:03:05	ppf	Bhargav97_: no it isn't
2016-09-23 05:03:16	<--	Karyon (~yaaic@unaffiliated/karyon) has quit (Remote host closed the connection)
2016-09-23 05:03:16	ppf	might be, might be not
2016-09-23 05:03:29	ppf	use explicitely sized int types instead
2016-09-23 05:03:56	Bhargav97_	And how does one define explicit size for int datattype?
2016-09-23 05:05:30	ppf	http://en.cppreference.com/w/cpp/types/integer
2016-09-23 05:05:30		[05:05]
2016-09-23 05:05:33	-->	skweek (~skweek@USF-Gold-Wifi-nat-58.laptops.usf.edu) has joined ##c++
2016-09-23 05:06:28	-->	InfoTest (~Thunderbi@tgn.188.53.107.dts.mg) has joined ##c++
2016-09-23 05:06:59	<--	Sceorem (~Sceorem@xbn44-3-82-232-76-9.fbx.proxad.net) has quit (Quit: Leaving)
2016-09-23 05:07:36	-->	ph88^ (~h88@095-097-065-054.static.chello.nl) has joined ##c++
2016-09-23 05:08:54	<--	PJBoy (~PJBoy_@unaffiliated/pjboy) has quit (Ping timeout: 264 seconds)
2016-09-23 05:09:51	-->	prehensileNipple (~nooblet@124.197.62.6) has joined ##c++
2016-09-23 05:10:31	-->	occamsblazer (~occamsbla@131.228.197.44) has joined ##c++
2016-09-23 05:11:27	<--	ph88_ (~h88@145.131.171.178) has quit (Ping timeout: 276 seconds)
2016-09-23 05:11:38	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-23 05:11:50	<--	Hatraz (~Hatraz@c-73-90-43-92.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-09-23 05:11:52	<--	Bhargav97 (uid33983@gateway/web/irccloud.com/x-rhpbaniagfyrczwt) has quit
2016-09-23 05:11:52	--	Bhargav97_ is now known as Bhargav97
2016-09-23 05:13:02	-->	Enhex__ (~Enhex@82.252.138.77.rev.sfr.net) has joined ##c++
2016-09-23 05:13:59	<--	lsk (~lsk@enucs/member/lsk) has quit (Read error: Connection reset by peer)
2016-09-23 05:14:44	-->	Kn|t3 (~agarwalvi@49.207.53.8) has joined ##c++
2016-09-23 05:14:45	<--	Immune (~Immune@173.55.30.110) has quit (Ping timeout: 260 seconds)
2016-09-23 05:14:49	-->	illerucis (~illerucis@2620:10d:c090:180::1:4113) has joined ##c++
2016-09-23 05:15:10	-->	Enhex (~Enhex@82.252.138.77.rev.sfr.net) has joined ##c++
2016-09-23 05:15:18	<--	scs (~joseph@82.20.74.94) has quit (Quit: leaving)
2016-09-23 05:15:36	<--	zeus_ (2be4e52a@gateway/web/freenode/ip.43.228.229.42) has quit (Quit: Page closed)
2016-09-23 05:16:19	<--	Enhex_ (~Enhex@82.252.138.77.rev.sfr.net) has quit (Ping timeout: 272 seconds)
2016-09-23 05:16:22	<--	Kn|t3 (~agarwalvi@49.207.53.8) has quit (Client Quit)
2016-09-23 05:16:36	<--	Anodl (~Anodl@p2003007A2F243400FD7F500A2CBD124A.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2016-09-23 05:16:46	-->	Kn|t3 (~agarwalvi@49.207.53.8) has joined ##c++
2016-09-23 05:17:03	-->	Anodl (~Anodl@p2003007A2F243400FD7F500A2CBD124A.dip0.t-ipconnect.de) has joined ##c++
2016-09-23 05:17:57	<--	Enhex__ (~Enhex@82.252.138.77.rev.sfr.net) has quit (Ping timeout: 276 seconds)
2016-09-23 05:18:36	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Ping timeout: 276 seconds)
2016-09-23 05:18:53	<--	FreeBirdLjj (~freebirdl@223.65.84.131) has quit (Remote host closed the connection)
2016-09-23 05:19:25	<--	voidah (~voidah@unaffiliated/voider) has quit (Remote host closed the connection)
2016-09-23 05:20:48	-->	Immune (~Immune@173.55.30.110) has joined ##c++
2016-09-23 05:20:48		[05:20]
2016-09-23 05:21:14	<--	fusta (~fusta@88.241.30.9) has quit (Quit: Leaving)
2016-09-23 05:21:27	<--	Anodl (~Anodl@p2003007A2F243400FD7F500A2CBD124A.dip0.t-ipconnect.de) has quit (Ping timeout: 265 seconds)
2016-09-23 05:22:11	<--	tristans1 (~tristanse@128.194.3.4) has quit (Read error: Connection reset by peer)
2016-09-23 05:22:27	-->	tristans1 (~tristanse@128.194.3.4) has joined ##c++
2016-09-23 05:23:19	-->	kaldoran (~kaldoran@cable-192.222.205.239.electronicbox.net) has joined ##c++
2016-09-23 05:25:08	-->	Crazylemon64 (~Crazylemo@207.62.170.215) has joined ##c++
2016-09-23 05:27:18	<--	l2esonance (~l2esonanc@c-73-223-132-245.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-23 05:27:25	-->	edr (~edr@pdpc/supporter/professional/edr) has joined ##c++
2016-09-23 05:27:28	<--	Furkiepurkie (~Furkie@2001:1af8:4700:a03c:7::) has quit (Quit: leaving)
2016-09-23 05:28:57	<--	t3hb0b (~b0b@193.105.134.166) has quit (Quit: Leaving)
2016-09-23 05:29:37	<--	illerucis (~illerucis@2620:10d:c090:180::1:4113) has quit (Ping timeout: 272 seconds)
2016-09-23 05:31:18	-->	Foepq (~Foepq@nag77-2-83-152-154-106.fbx.proxad.net) has joined ##c++
2016-09-23 05:31:38	<--	Foepq (~Foepq@nag77-2-83-152-154-106.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-23 05:31:56	-->	coc (~coc@nag77-2-83-152-154-106.fbx.proxad.net) has joined ##c++
2016-09-23 05:32:11	<--	coc (~coc@nag77-2-83-152-154-106.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-23 05:32:53	-->	ugi (~ugi@ADijon-553-1-7-184.w92-161.abo.wanadoo.fr) has joined ##c++
2016-09-23 05:33:09	<--	ugi (~ugi@ADijon-553-1-7-184.w92-161.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-23 05:33:49	-->	scai (~scai@p4FF0EA1E.dip0.t-ipconnect.de) has joined ##c++
2016-09-23 05:33:50	-->	Azpoa (~Azpoa@ADijon-553-1-7-184.w92-161.abo.wanadoo.fr) has joined ##c++
2016-09-23 05:34:04	-->	SHC (~quassel@59.88.212.103) has joined ##c++
2016-09-23 05:34:09	<--	Azpoa (~Azpoa@ADijon-553-1-7-184.w92-161.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-23 05:34:31	<--	TMM (~hp@fsf/member/pdpc.professional.tmm) has quit (Remote host closed the connection)
2016-09-23 05:34:43	-->	JoshS (~jshjsh@172.56.38.166) has joined ##c++
2016-09-23 05:35:52	-->	josef__k (~jeremy@59.102.16.55) has joined ##c++
2016-09-23 05:35:52		[05:35]
2016-09-23 05:36:22	<--	coincoin4ever (~coincoin@178.16.163.28) has quit (Quit: \_o< 1.5)
2016-09-23 05:36:53	-->	Thorax2015 (~Thorax@94.197.120.233.threembb.co.uk) has joined ##c++
2016-09-23 05:37:06	<--	jshjsh (~jshjsh@172.56.38.166) has quit (Ping timeout: 264 seconds)
2016-09-23 05:37:08	-->	TMM (~hp@fsf/member/pdpc.professional.tmm) has joined ##c++
2016-09-23 05:38:10	-->	jshjsh (~jshjsh@172.56.38.166) has joined ##c++
2016-09-23 05:40:14	<--	Thorax (~Thorax@94.197.120.132.threembb.co.uk) has quit (Ping timeout: 265 seconds)
2016-09-23 05:40:16	-->	tadaa (~tadaaa@nat-wh-wz4-12.rz.uni-karlsruhe.de) has joined ##c++
2016-09-23 05:40:46	<--	Kn|t3 (~agarwalvi@49.207.53.8) has quit (Quit: Kn|t3)
2016-09-23 05:40:59	-->	Enhex_ (~Enhex@82.252.138.77.rev.sfr.net) has joined ##c++
2016-09-23 05:41:30	-->	kaffeetrauma (~Thunderbi@85-22-37-153.ip.dokom21.de) has joined ##c++
2016-09-23 05:41:41	<--	imdone (~imdone@cable-94-189-189-9.dynamic.sbb.rs) has quit (Ping timeout: 265 seconds)
2016-09-23 05:41:43	<--	JoshS (~jshjsh@172.56.38.166) has quit (Ping timeout: 255 seconds)
2016-09-23 05:42:05	-->	Enhex__ (~Enhex@82.252.138.77.rev.sfr.net) has joined ##c++
2016-09-23 05:42:38	-->	JoshS (~jshjsh@172.56.38.166) has joined ##c++
2016-09-23 05:43:36	-->	Kn|t3 (~agarwalvi@49.207.53.8) has joined ##c++
2016-09-23 05:44:17	-->	magnicida (~raskolnik@ip5b41d3af.dynamic.kabel-deutschland.de) has joined ##c++
2016-09-23 05:44:18	<--	elnormous (~elnormous@gateway.evolutiongaming.com) has quit (Ping timeout: 264 seconds)
2016-09-23 05:44:36	<--	Enhex (~Enhex@82.252.138.77.rev.sfr.net) has quit (Ping timeout: 276 seconds)
2016-09-23 05:44:48	-->	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has joined ##c++
2016-09-23 05:45:33	<--	Enhex_ (~Enhex@82.252.138.77.rev.sfr.net) has quit (Ping timeout: 240 seconds)
2016-09-23 05:45:41	-->	Enhex (~Enhex@82.252.138.77.rev.sfr.net) has joined ##c++
2016-09-23 05:45:46	<--	jshjsh (~jshjsh@172.56.38.166) has quit (Ping timeout: 255 seconds)
2016-09-23 05:46:35	-->	meandrain (~meandrain@89.39.95.149) has joined ##c++
2016-09-23 05:46:56	-->	illerucis (~illerucis@2620:10d:c090:180::1:dc88) has joined ##c++
2016-09-23 05:47:03	<--	Enhex__ (~Enhex@82.252.138.77.rev.sfr.net) has quit (Ping timeout: 240 seconds)
2016-09-23 05:48:58	<--	blaxter (~blaxter@62.101.183.90.dyn.user.ono.com) has quit (Quit: foo)
2016-09-23 05:49:25	-->	Anodl (~Anodl@p2003007A2F243400445CD7068E3423DD.dip0.t-ipconnect.de) has joined ##c++
2016-09-23 05:51:18	-->	Nilesh_ (uid116340@gateway/web/irccloud.com/x-ulghevejeodgphmf) has joined ##c++
2016-09-23 05:51:18		[05:51]
2016-09-23 05:52:09	<--	shirty (~shirty@109.131.156.130) has quit (Ping timeout: 244 seconds)
2016-09-23 05:55:00	<--	Immune (~Immune@173.55.30.110) has quit (Ping timeout: 260 seconds)
2016-09-23 05:55:21	<--	josh (~josh@c-67-182-242-240.hsd1.ut.comcast.net) has quit (Ping timeout: 248 seconds)
2016-09-23 05:55:53	-->	slavanap (~slavanap@5.145.251.251) has joined ##c++
2016-09-23 05:56:32	<--	fahadash (uid44972@gateway/web/irccloud.com/x-ambtdbtylvecpabz) has quit (Quit: Connection closed for inactivity)
2016-09-23 05:57:18	<--	Jiwan (~jeangu@212.247.124.2) has quit (Remote host closed the connection)
2016-09-23 05:59:33	-->	oxygene (~fred@ALille-652-1-134-14.w83-198.abo.wanadoo.fr) has joined ##c++
2016-09-23 05:59:54	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-23 05:59:59	-->	Enhex_ (~Enhex@82.252.138.77.rev.sfr.net) has joined ##c++
2016-09-23 06:00:20	-->	EvilPenguin (~EvilPengu@bur-inet-pa-1.disney.com) has joined ##c++
2016-09-23 06:00:57	-->	Immune (~Immune@173.55.30.110) has joined ##c++
2016-09-23 06:01:20	-->	Enhex__ (~Enhex@82.252.138.77.rev.sfr.net) has joined ##c++
2016-09-23 06:02:07	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-23 06:02:23	-->	Karyon (~yaaic@unaffiliated/karyon) has joined ##c++
2016-09-23 06:03:03	<--	Enhex (~Enhex@82.252.138.77.rev.sfr.net) has quit (Ping timeout: 240 seconds)
2016-09-23 06:04:06	<--	TMM (~hp@fsf/member/pdpc.professional.tmm) has quit (Quit: Ex-Chat)
2016-09-23 06:04:14	<--	navidr (uid112413@gateway/web/irccloud.com/x-sppptnjkflxyqdht) has quit (Quit: Connection closed for inactivity)
2016-09-23 06:04:26	-->	Sylph-DS (~Sylph@176.74.251.29) has joined ##c++
2016-09-23 06:04:48	<--	KNRO_ (~quassel@94.187.209.247) has quit (Remote host closed the connection)
2016-09-23 06:05:01	-->	DEElekgolo (~DEElekgol@2602:30a:2e0e:a7a0:1452:c860:ad5e:462e) has joined ##c++
2016-09-23 06:05:05	<--	Enhex_ (~Enhex@82.252.138.77.rev.sfr.net) has quit (Ping timeout: 250 seconds)
2016-09-23 06:05:28	<--	frib (~dynorsau@95.236.60.18) has quit (Quit: Leaving)
2016-09-23 06:06:58	<--	eduardas_m (~eduardas_@213.197.143.19) has quit (Quit: Leaving)
2016-09-23 06:06:58		[06:06]
2016-09-23 06:07:03	<--	mangolisk (~mangolisk@S0106848dc7ebaa06.vc.shawcable.net) has quit (Read error: Connection reset by peer)
2016-09-23 06:07:18	<--	symm- (~symm-@86.127.152.32) has quit (Ping timeout: 244 seconds)
2016-09-23 06:07:49	-->	hualet (~hualet@183.94.116.177) has joined ##c++
2016-09-23 06:07:50	<--	viro (~viro@unaffiliated/viro) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-09-23 06:08:07	<--	yong (~vayne@pD9E4549E.dip0.t-ipconnect.de) has quit (Quit: Bye~)
2016-09-23 06:08:29	-->	flavi0 (~anon@unaffiliated/flavi0) has joined ##c++
2016-09-23 06:09:26	<--	Kn|t3 (~agarwalvi@49.207.53.8) has quit (Quit: Kn|t3)
2016-09-23 06:09:53	<--	Sculptor (~Sculptor@cable-24-135-26-151.dynamic.sbb.rs) has quit (Changing host)
2016-09-23 06:09:53	-->	Sculptor (~Sculptor@trivialand/master/sculptor) has joined ##c++
2016-09-23 06:09:59	-->	rimdeker (~rimdeker@unaffiliated/rimdeker) has joined ##c++
2016-09-23 06:11:06	-->	alexmh (~alex@c-67-166-124-41.hsd1.ut.comcast.net) has joined ##c++
2016-09-23 06:11:39	<--	flavi0 (~anon@unaffiliated/flavi0) has quit (Client Quit)
2016-09-23 06:11:53	<--	stomper_ (~stomper_@ool-45751986.dyn.optonline.net) has quit (Ping timeout: 248 seconds)
2016-09-23 06:12:08	<--	hualet (~hualet@183.94.116.177) has quit (Remote host closed the connection)
2016-09-23 06:13:27	<--	Karyon (~yaaic@unaffiliated/karyon) has quit (Remote host closed the connection)
2016-09-23 06:13:49	<--	zack_s_ (57ea344a@gateway/web/freenode/ip.87.234.52.74) has quit (Quit: Page closed)
2016-09-23 06:13:53	-->	frib (~dynorsau@95.236.60.18) has joined ##c++
2016-09-23 06:14:32	<--	scai (~scai@p4FF0EA1E.dip0.t-ipconnect.de) has quit (Ping timeout: 265 seconds)
2016-09-23 06:14:52	-->	scai (~scai@p4FF0EA1E.dip0.t-ipconnect.de) has joined ##c++
2016-09-23 06:16:42	<--	josef__k (~jeremy@59.102.16.55) has quit (Ping timeout: 264 seconds)
2016-09-23 06:16:45	-->	HerzogDeXtEr (~farci@i59F6CE96.versanet.de) has joined ##c++
2016-09-23 06:16:48	-->	nealshire_ (~Nealshire@unaffiliated/nealshire) has joined ##c++
2016-09-23 06:17:51	-->	imdone (~imdone@cable-94-189-189-9.dynamic.sbb.rs) has joined ##c++
2016-09-23 06:18:01	-->	divno (~divno@unaffiliated/divno) has joined ##c++
2016-09-23 06:18:16	<--	frib (~dynorsau@95.236.60.18) has quit (Client Quit)
2016-09-23 06:18:33	-->	shirty (~shirty@109.131.156.130) has joined ##c++
2016-09-23 06:19:05	-->	frib (~dynorsau@95.236.60.18) has joined ##c++
2016-09-23 06:19:49	-->	CaptainPi (~edx@ipservice-092-217-031-250.092.217.pools.vodafone-ip.de) has joined ##c++
2016-09-23 06:19:56	<--	erbse (~test@unaffiliated/erbse) has left ##c++
2016-09-23 06:20:04	-->	juanmapalad (~Administr@112.201.168.185) has joined ##c++
2016-09-23 06:20:07	-->	josh (~josh@168.103.191.142) has joined ##c++
2016-09-23 06:20:17	juanmapalad	hello
2016-09-23 06:21:34	-->	Iuju (~Iuju@mar13-2-82-246-223-195.fbx.proxad.net) has joined ##c++
2016-09-23 06:22:00	<--	Iuju (~Iuju@mar13-2-82-246-223-195.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-23 06:22:00		[06:22]
2016-09-23 06:22:28	-->	Wykh2 (~Wykh2@mar13-2-82-246-223-195.fbx.proxad.net) has joined ##c++
2016-09-23 06:22:43	<--	Wykh2 (~Wykh2@mar13-2-82-246-223-195.fbx.proxad.net) has quit (Max SendQ exceeded)
2016-09-23 06:23:24	-->	BaneAliens (uid112512@gateway/web/irccloud.com/x-bsbuliiunvcepvre) has joined ##c++
2016-09-23 06:23:47	slavanap	Assume I have .cpp file with utf8 encoding and text in it like L"АБВГД", then in what binary this literal will be compiled? Will that be the same binary representation for all compilers?
2016-09-23 06:25:01	juanmapalad	what is the editor to use for studying c++?
2016-09-23 06:25:07	juanmapalad	for a beginner
2016-09-23 06:26:31	va	juanmapalad: who said you need an *editor*
2016-09-23 06:26:42	slavanap	juanmapalad, that's the wrong channel for such question.
2016-09-23 06:27:06	slavanap	justanotheruser, but go ahead and try QtCreator.
2016-09-23 06:27:22	slavanap	oh shit
2016-09-23 06:27:27	<--	tmk (~tmk@124.40.246.86) has quit (Read error: Connection reset by peer)
2016-09-23 06:27:29	<--	merijn (~merijn@wcw-staff-145-18-167-76.wireless.uva.nl) has quit (Ping timeout: 240 seconds)
2016-09-23 06:27:30	slavanap	juanmapalad, that's the wrong channel for such question.
2016-09-23 06:27:43	slavanap	justanotheruser, sorry for disturbing you.
2016-09-23 06:27:57	juanmapalad	what channel should i be?
2016-09-23 06:28:07	-->	tmk (~tmk@124.40.246.86) has joined ##c++
2016-09-23 06:28:19	slavanap	juanmapalad, ##c++-basic
2016-09-23 06:28:21	juanmapalad	how can i code if i dont use editor?
2016-09-23 06:28:37	-->	SwiftMatt (~Objective@162.242.94.102) has joined ##c++
2016-09-23 06:29:03	va	you asked about learning, not coding. Learning can, for example, be done with books.
2016-09-23 06:29:15	va	but I guess I'm splitting hairs already
2016-09-23 06:29:19	juanmapalad	i mean, what program for coding do i need to have to study?
2016-09-23 06:29:41	juanmapalad	va, i need to code in order to learn c++
2016-09-23 06:29:44	slavanap	juanmapalad, C/C++ is just a text. You can use literally ANY text editor to code in it. But you need editor with a compiler to be more productive, this is when IDE becomes useful.
2016-09-23 06:30:01	<--	chowmeined (~chowmeine@unaffiliated/chowmeined) has quit (Read error: Connection reset by peer)
2016-09-23 06:30:18	va	editor and compiler can be separate
2016-09-23 06:30:29	<--	Lowl3v3l (~Lowl3v3l@dslb-088-075-098-175.088.075.pools.vodafone-ip.de) has quit (Quit: Leaving)
2016-09-23 06:30:36	juanmapalad	what IDE in particular? is eclipse ok?
2016-09-23 06:30:48	slavanap	juanmapalad, ^^^ QtCreator.
2016-09-23 06:30:51	va	vi works
2016-09-23 06:31:01	SlashLife	Is it possible to put a free function binary operator for a nested class as a static member function of the containing class?
2016-09-23 06:31:03	juanmapalad	vim?
2016-09-23 06:31:50	-->	Lowl3v3l (~Lowl3v3l@dslb-088-075-098-175.088.075.pools.vodafone-ip.de) has joined ##c++
2016-09-23 06:32:04	va	yeah, vim
2016-09-23 06:32:22	-->	sh00p (~sh00p@84.216.39.31) has joined ##c++
2016-09-23 06:32:54	-->	theOneWho (~tom@5.151.203.59) has joined ##c++
2016-09-23 06:33:36	<--	my123 (~my123@unaffiliated/kill--9-1/x-8776976) has quit (Read error: Connection reset by peer)
2016-09-23 06:33:44	<--	marcofe (~marcofe@test-centre4-gw.estec.esa.int) has quit (Quit: Konversation terminated!)
2016-09-23 06:33:49	<--	aurialLoop (~aurialLoo@60.234.120.196) has quit (Read error: Connection reset by peer)
2016-09-23 06:34:33	<--	V-ille (~ville@59ec7803.symbio.com) has quit (Ping timeout: 240 seconds)
2016-09-23 06:34:45	SlashLife	G++ says "no".
2016-09-23 06:35:15	<--	Immune (~Immune@173.55.30.110) has quit (Ping timeout: 260 seconds)
2016-09-23 06:35:27	<--	zap0 (~moofy@14-201-222-143.tpgi.com.au) has quit (Quit: zap0)
2016-09-23 06:36:24	--	tmk is now known as shams
2016-09-23 06:37:52	-->	Anodl1 (~Anodl@p2003007A2F24340020B531955CDCDDC8.dip0.t-ipconnect.de) has joined ##c++
2016-09-23 06:37:52		[06:37]
2016-09-23 06:38:12	-->	} (~none@unaffiliated/bsdbeard) has joined ##c++
2016-09-23 06:38:48	lh_mouse	SlashLife, like `struct foo { static foo &operator+(const foo &lhs, int rhs){ return lhs; } };` ?
2016-09-23 06:38:55	w3z	SlashLife: no, you can make it a friend though
2016-09-23 06:39:03	<--	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has quit (Quit: This computer has gone to sleep)
2016-09-23 06:39:10	<--	pmercado (~pmercado@186-104-216-78.baf.movistar.cl) has quit (Ping timeout: 244 seconds)
2016-09-23 06:39:19	}	Is there a way to std::getline(stream, line) and keep the newline in line? Or do I have to manually line += '\n' after each getline?
2016-09-23 06:39:31	w3z	{} struct S{friend int operator+(const S&,const S&){return 0;}};
2016-09-23 06:39:32	geordi	<no output>
2016-09-23 06:39:34	-->	pmercado (~pmercado@186-104-171-4.baf.movistar.cl) has joined ##c++
2016-09-23 06:39:34	SlashLife	w3z: Yup, that's what I did. Thanks.
2016-09-23 06:39:41	SlashLife	It's the better solution anyway.
2016-09-23 06:39:45	<--	feliwir (Elite16673@gateway/shell/elitebnc/x-bycuijvjvtdmunav) has quit (Ping timeout: 250 seconds)
2016-09-23 06:39:58	w3z	now, without a declaration in namespace scope, its only eligible for adl
2016-09-23 06:40:14	<--	Anodl (~Anodl@p2003007A2F243400445CD7068E3423DD.dip0.t-ipconnect.de) has quit (Ping timeout: 265 seconds)
2016-09-23 06:40:16	<--	seru76 (~seru76@77.89.191.179) has quit (Quit: Leaving)
2016-09-23 06:40:19	w3z	that is, qualified name lookup will no worky
2016-09-23 06:41:04	-->	Immune (~Immune@173.55.30.110) has joined ##c++
2016-09-23 06:41:13	<--	illerucis (~illerucis@2620:10d:c090:180::1:dc88) has quit (Ping timeout: 248 seconds)
2016-09-23 06:41:30	-->	sanct (~sanct@212.35.67.11) has joined ##c++
2016-09-23 06:41:33	w3z	<<f(S{}); struct S{friend int f(S){return 0;}}; //simplified example
2016-09-23 06:41:34	geordi	0
2016-09-23 06:41:46	w3z	<<::f(S{}); struct S{friend int f(S){return 0;}}; //simplified example
2016-09-23 06:41:46	geordi	error: '::f' has not been declared
2016-09-23 06:42:14	w3z	<<::f(S{}); struct S{friend int f(S){return 0;}}; int f(S);
2016-09-23 06:42:15	geordi	0
2016-09-23 06:42:30	-->	gegagome (~gegagome@206.83.5.2) has joined ##c++
2016-09-23 06:42:34	<--	shirty (~shirty@109.131.156.130) has quit (Ping timeout: 265 seconds)
2016-09-23 06:43:15	SlashLife	Yeah, it is a type that can be constructed from arbitrary enum types, though; I want an op== that can take any of these enums on either side, but I don't want it to be eligible if there are enum values on both sides.
2016-09-23 06:44:20	-->	roia (~a.jensen@97.65.103.250) has joined ##c++
2016-09-23 06:44:20	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-23 06:44:55	-->	Karyon (~yaaic@unaffiliated/karyon) has joined ##c++
2016-09-23 06:45:15	-->	illerucis (~illerucis@2620:10d:c091:200::4:6036) has joined ##c++
2016-09-23 06:45:22	<--	frib (~dynorsau@95.236.60.18) has quit (Quit: Leaving)
2016-09-23 06:45:47	-->	P1RATEZ (piratez@unaffiliated/p1ratez) has joined ##c++
2016-09-23 06:46:17	<--	pmercado (~pmercado@186-104-171-4.baf.movistar.cl) has quit (Quit: Konversation terminated!)
2016-09-23 06:47:14	-->	my123 (~my123@13.85.69.239) has joined ##c++
2016-09-23 06:47:15	<--	my123 (~my123@13.85.69.239) has quit (Changing host)
2016-09-23 06:47:15	-->	my123 (~my123@unaffiliated/kill--9-1/x-8776976) has joined ##c++
2016-09-23 06:47:20	-->	ambro718 (~ambro@unaffiliated/ambro718) has joined ##c++
2016-09-23 06:48:57	-->	avqqo (~avqqo@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has joined ##c++
2016-09-23 06:49:13	<--	avqqo (~avqqo@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-23 06:49:18	-->	korans (~korans@62.68.160.220) has joined ##c++
2016-09-23 06:49:40	-->	Casu (~Casu@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has joined ##c++
2016-09-23 06:49:54	<--	Asher (~asher@c-73-106-33-32.hsd1.ga.comcast.net) has quit (Quit: Leaving.)
2016-09-23 06:49:57	<--	Casu (~Casu@ARennes-656-1-331-103.w2-12.abo.wanadoo.fr) has quit (Max SendQ exceeded)
2016-09-23 06:51:19	-->	Bluewave_76 (~IceChat9@82-169-90-193.ip.telfort.nl) has joined ##c++
2016-09-23 06:51:19	<--	Bluewave_76 (~IceChat9@82-169-90-193.ip.telfort.nl) has quit (Client Quit)
2016-09-23 06:51:33	<--	sanct (~sanct@212.35.67.11) has quit (Quit: Leaving)
2016-09-23 06:52:45	-->	sanct (~sanct@212.35.67.11) has joined ##c++
2016-09-23 06:53:24	<--	deekej (~deekej@ip4-83-240-97-205.cust.nbox.cz) has quit (Remote host closed the connection)
2016-09-23 06:53:24		[06:53]
2016-09-23 06:53:29	-->	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has joined ##c++
2016-09-23 06:54:03	<--	comando (uid185287@gateway/web/irccloud.com/x-eaiskdeqthdhzhwu) has quit (Quit: Connection closed for inactivity)
2016-09-23 06:54:10	<--	keestu (~jelari@122.183.135.102) has quit (Remote host closed the connection)
2016-09-23 06:55:06	-->	snowkidind (~textual@pool-96-255-207-158.washdc.fios.verizon.net) has joined ##c++
2016-09-23 06:56:10	-->	elnormous (~elnormous@87.110.129.37) has joined ##c++
2016-09-23 06:57:59	-->	zagabar (~zagabar@unaffiliated/zagabar) has joined ##c++
2016-09-23 06:58:49	-->	shirty (~shirty@109.131.156.130) has joined ##c++
2016-09-23 06:59:54	<--	Thorax2015 (~Thorax@94.197.120.233.threembb.co.uk) has quit (Ping timeout: 264 seconds)
2016-09-23 07:00:08	-->	Akahige (~Rob@78.18.33.162) has joined ##c++
2016-09-23 07:00:08	<--	Akahige (~Rob@78.18.33.162) has quit (Changing host)
2016-09-23 07:00:08	-->	Akahige (~Rob@unaffiliated/moto-chan) has joined ##c++
2016-09-23 07:00:20	<--	refbot (~MotoBot@unaffiliated/moto-chan/bot/refbot) has quit (Ping timeout: 260 seconds)
2016-09-23 07:00:35	-->	AnarchyAo (~andrew@8.18.217.202) has joined ##c++
2016-09-23 07:00:55	<--	elnormous (~elnormous@87.110.129.37) has quit (Ping timeout: 255 seconds)
2016-09-23 07:01:10	<--	p4trix (~p4trix@37.red-79-145-248.dynamicip.rima-tde.net) has quit (Read error: Connection reset by peer)
2016-09-23 07:01:20	<--	zwf (~Thunderbi@modemcable076.238-20-96.mc.videotron.ca) has quit (Quit: zwf)
2016-09-23 07:01:20	<--	zwoof (zwoof@modemcable076.238-20-96.mc.videotron.ca) has quit
2016-09-23 07:01:30	<--	Moto-chan (~Rob@unaffiliated/moto-chan) has quit (Ping timeout: 260 seconds)
2016-09-23 07:01:30	-->	refbot (~MotoBot@78.18.33.162) has joined ##c++
2016-09-23 07:01:30	<--	refbot (~MotoBot@78.18.33.162) has quit (Changing host)
2016-09-23 07:01:30	-->	refbot (~MotoBot@unaffiliated/moto-chan/bot/refbot) has joined ##c++
2016-09-23 07:01:34	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-23 07:02:23	-->	Azusa762 (~roy@37.228.234.160) has joined ##c++
2016-09-23 07:02:28	-->	V-ille (~ville@81-175-149-170.bb.dnainternet.fi) has joined ##c++
2016-09-23 07:03:10	korans	im firmiliar with the greater and less than operator although i cant understand this, i attempted to search for this but i cant find any searchengine good at searching for special charaters, anyway heres an example "vsx_string<>arg2 = argv[i];" where vsx_string is an class, assuming c++ allows you to creat your own operators instead of just overloading new ones the class doesnt do this and implements both > a
2016-09-23 07:03:16	korans	nd < as comparison operators. I'm not firmiliar with C++ but is it valid to use a calss without initilizing it as an object ? and what would the purpose of such a statement be as mentioned previously ? also heres another obscure one vsx_nw_vector< vsx_string<> > parts;
2016-09-23 07:03:20	<--	Winslow_ (~Winslow_@bnc.unknowncheats.me) has quit (Excess Flood)
2016-09-23 07:03:21	<--	brendel (~brice@LAubervilliers-656-1-215-246.w217-128.abo.wanadoo.fr) has quit (Ping timeout: 265 seconds)
2016-09-23 07:03:44	}	<> means the default template
2016-09-23 07:03:54	<--	NeoGeo64 (~linux@2604:2d80:881a:0:b4a3:be16:d6fd:8559) has quit (Remote host closed the connection)
2016-09-23 07:03:58	-->	Winslow_ (~Winslow_@bnc.unknowncheats.me) has joined ##c++
2016-09-23 07:04:07	}	{f<> stuff;} template<class T= void> struct f;
2016-09-23 07:04:07	geordi	error: aggregate 'f<> stuff' has incomplete type and cannot be defined
2016-09-23 07:04:11	}	{f<> stuff;} template<class T= void> struct f{};
2016-09-23 07:04:12	geordi	<no output>
2016-09-23 07:04:26	<--	DjBonadoobie (~DjBonadoo@208.167.254.215) has quit (Quit: Leaving)
2016-09-23 07:04:27	<--	drozdziak1 (~drozdziak@89-70-116-45.dynamic.chello.pl) has quit (Read error: Connection reset by peer)
2016-09-23 07:04:29	}	its not a comparison operator
2016-09-23 07:04:53	korans	}: ahh great thanks
2016-09-23 07:05:40	korans	do the operators other than <> have any other meaning than comparison in vsx_nw_vector< vsx_string<> > parts;
2016-09-23 07:05:50	-->	Zunino (~Zunino@201.49.127.2) has joined ##c++
2016-09-23 07:05:57	-->	mandeep (~mandeep@2602:306:3013:d610:c4d0:54ef:9d05:9d4c) has joined ##c++
2016-09-23 07:06:03	va	in vsx_nw_vector< vsx_string<> > it's not an operator
2016-09-23 07:06:16	<--	decimad (~deci@ip5f5be505.dynamic.kabel-deutschland.de) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-09-23 07:06:20	}	korans, are you familiar with templates?
2016-09-23 07:06:44	korans	}: im not at all firmiliar with C++ or templates
2016-09-23 07:07:37	}	I see, well in C++ when <> is used with *types* its not a comparison operator
2016-09-23 07:07:45	<--	roia (~a.jensen@97.65.103.250) has quit (Quit: Leaving)
2016-09-23 07:08:03	va	surely the committee could have used   vector«int» instead to avoid the ambiguity with </> :-)
2016-09-23 07:08:07	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-23 07:08:28	}	I think some older compilers couldnt parse nested templates that end in >> properly, so you had to write > >
2016-09-23 07:08:28		[07:08]
2016-09-23 07:08:33	}	=\
2016-09-23 07:08:42	-->	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has joined ##c++
2016-09-23 07:08:45	V-ille	it's not a question of whether a compiler is old
2016-09-23 07:08:58	V-ille	or whether the compiler can or cannot parse >>
2016-09-23 07:09:34	korans	va wouldnt that be ambiguous to bitshifting operators though
2016-09-23 07:09:49	<--	aslant (~aslant@37.157.39.138) has quit (Remote host closed the connection)
2016-09-23 07:09:55	va	korans: no, because the Unicode character » is different from >
2016-09-23 07:09:56	-->	wildlander (~wild@unaffiliated/wildlander) has joined ##c++
2016-09-23 07:10:34	<--	skweek (~skweek@USF-Gold-Wifi-nat-58.laptops.usf.edu) has quit (Ping timeout: 248 seconds)
2016-09-23 07:10:40	korans	va ahh i see although thats not ascii which most languages consit of for language syntax
2016-09-23 07:11:02	-->	a3pq51 (~a3pq51@61-58-179-94.pool.ukrtel.net) has joined ##c++
2016-09-23 07:11:28	korans	anyway thanks va and } for your help
2016-09-23 07:12:06	--	shams is now known as shamstk
2016-09-23 07:12:11	-->	al1o (~al1o@236.red-88-16-49.dynamicip.rima-tde.net) has joined ##c++
2016-09-23 07:12:31	-->	hualet (~hualet@183.94.116.177) has joined ##c++
2016-09-23 07:12:53	}	va, solution - use interpretive dance instead of text
2016-09-23 07:13:03	<--	shamstk (~tmk@124.40.246.86) has left ##c++ ("Leaving")
2016-09-23 07:13:04	-->	EricWF (~EricwF@67.135.43.183) has joined ##c++
2016-09-23 07:14:04	<--	leehambley (~textual@p57A845E4.dip0.t-ipconnect.de) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-09-23 07:14:06	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-23 07:15:30	<--	Immune (~Immune@173.55.30.110) has quit (Ping timeout: 260 seconds)
2016-09-23 07:16:13	slavanap	V-ille, do you think I'm stupid? http://stackoverflow.com/questions/39665733/unicode-contained-string-literals-in-utf8-encoded-cpp-file-work-same-for-all-co
2016-09-23 07:17:15	<--	hualet (~hualet@183.94.116.177) has quit (Ping timeout: 260 seconds)
2016-09-23 07:17:20	}	"I'm not sure every compiler will correctly guess the encoding", I think you can just tell the compiler what encoding to use
2016-09-23 07:17:32	-->	elnormous (~elnormous@87.110.129.37) has joined ##c++
2016-09-23 07:17:41	}	I have to sometimes set -Wno-invalid-source-encoding if I'm not using utf8 with clang
2016-09-23 07:18:12	-->	MulleDK19 (MulleDK19@unaffiliated/mulledk19) has joined ##c++
2016-09-23 07:18:14	<--	jan64_ (~jan64@agaz161.neoplus.adsl.tpnet.pl) has quit (Read error: Connection reset by peer)
2016-09-23 07:18:20	va	some compilers look at your environment settings to determine what your C(++) file has for encoding. So depending on whether you ssh from a putty or from a linux makes the difference :/
2016-09-23 07:18:23	slavanap	}, how I can tell that? I use CMake to build my project in Windows (MSVS, MinGW), Linux(GCC, QtCreator)
2016-09-23 07:18:28	Eelis	<< TYPE(L"bla"), TYPE(u"bla"), TYPE(U"bla"), TYPE(u8"bla") // slavanap just say no to 'wide' stuff
2016-09-23 07:18:29	geordi	lvalue wchar_t const [4], lvalue char16_t const [4], lvalue char32_t const [4], lvalue char const [4]
2016-09-23 07:18:48	<--	Phlow (~Kiss@199.44.8.162) has quit (Read error: Connection reset by peer)
2016-09-23 07:19:23	-->	V7 (~v7@unaffiliated/v7) has joined ##c++
2016-09-23 07:19:29	V7	hey all
2016-09-23 07:19:35	V7	I've installed VS 2015
2016-09-23 07:19:39	V7	On WIndows 7
2016-09-23 07:19:47	V-ille	!give V7 general
2016-09-23 07:19:48	nolyc	V7: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2016-09-23 07:19:49	-->	Adva (~Hyrule@2a02:810a:12c0:5068:60e9:b7:c3dd:f5b3) has joined ##c++
2016-09-23 07:19:55	slavanap	Eelis, wow I haven't know about char*_t stuff, but still it doesn't answer the question. How do compiler determine that my file is utf-8 encoded. And if it is windows-1251 encoded. Will it convert L"" literals to Unicode correcylt?
2016-09-23 07:20:06	}	!moobotfactoids listkeys wchar
2016-09-23 07:20:07	nolyc	If you're here and you have problems with wchar_t* 'string's, then you have 2 options: 1) use std::wstring 2) goto ##C
2016-09-23 07:20:12	<--	peterhu (~peterhuen@segfault.guru) has quit (Quit: leaving)
2016-09-23 07:20:16	Eelis	slavanap: i didn't mean to answer your question
2016-09-23 07:20:25	slavanap	Eelis, okay.
2016-09-23 07:20:29	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Read error: Connection reset by peer)
2016-09-23 07:20:43	<--	DEElekgolo (~DEElekgol@2602:30a:2e0e:a7a0:1452:c860:ad5e:462e) has quit (Ping timeout: 255 seconds)
2016-09-23 07:20:45	va	slavanap: determing the encoding of the source file is implementation-defined and not covered.
2016-09-23 07:20:46	slavanap	<< L"АБВГД";
2016-09-23 07:20:47	geordi	?????
2016-09-23 07:20:49	-->	Kn|t3 (~agarwalvi@49.207.53.8) has joined ##c++
2016-09-23 07:21:05	jamesaxl	V7, you should not install VS 2015
2016-09-23 07:21:08	-->	Immune (~Immune@173.55.30.110) has joined ##c++
2016-09-23 07:21:17	megaTherion	V7: good
2016-09-23 07:21:18	V-ille	vs 2015 installation is off-topic here
2016-09-23 07:21:22	va	<< (wchar_t)L'俺';
2016-09-23 07:21:22	geordi	?
2016-09-23 07:21:27	V-ille	so take that discussion to -general, all of you
2016-09-23 07:21:34	slavanap	va, I'm pretty sad about it. Does standard say so?
2016-09-23 07:21:45	<--	imdone (~imdone@cable-94-189-189-9.dynamic.sbb.rs) has quit (Ping timeout: 265 seconds)
2016-09-23 07:21:47	V7	jamesaxl, Why ?
2016-09-23 07:21:49	va	slavanap: it probably says nothing about it, which makes it "unspecified"
2016-09-23 07:21:50	V7	I have only this one
2016-09-23 07:21:57	V7	megaTherion, ?
2016-09-23 07:22:06	V-ille	V7: I told you to take it to -general
2016-09-23 07:22:09	megaTherion	V7: jamesaxl is high, but what's correct its off-topic in here
2016-09-23 07:22:15	slavanap	va, ok. Thank you.
2016-09-23 07:22:22	}	slavanap, Why do you want to use wchar_t so much
2016-09-23 07:22:23	V7	V-ille, I've already there moved
2016-09-23 07:22:44	<--	tristans1 (~tristanse@128.194.3.4) has quit (Quit: WeeChat 1.5)
2016-09-23 07:22:57	slavanap	}, out of the question. My program uses Unicode. Is that so unusual nowadays?
2016-09-23 07:23:08	-->	PJBoy (~PJBoy_@unaffiliated/pjboy) has joined ##c++
2016-09-23 07:23:39	SlashLife	slavanap: Where exactly does the leap "Unicode, therefore wchar_t" happen?
2016-09-23 07:23:39		[07:23]
2016-09-23 07:23:40	}	Also if you want your strings to work across platforms you might have other problems, i.e. getline() will interpret newlines differently depending on the runtime library (libc++/libstdc++/and vcruntime)
2016-09-23 07:24:10	}	slavanap, "Unicode"
2016-09-23 07:24:15	Murii	If I got a const char* a = "hey" and I want to attach to this variable "a" another string how would I do it?
2016-09-23 07:24:21	-->	tristanseifert (~tristanse@128.194.3.4) has joined ##c++
2016-09-23 07:24:31	va	a = "foo"
2016-09-23 07:24:31	Murii	like ; a = a .. " bye" ;
2016-09-23 07:24:35	SlashLife	Murii: You'd use std::string.
2016-09-23 07:24:43	}	Murii, use a std::string
2016-09-23 07:24:57	Murii	without std pls :)
2016-09-23 07:25:02	jamesaxl	V7, VS 2015 for compiling standard C++, ssem slike you fly from you home to supermarket :)
2016-09-23 07:25:10	SlashLife	##c pls. kthxbyebbq
2016-09-23 07:25:11	}	Murii, go to ##c, they will teach you to use strcpy()
2016-09-23 07:25:15	-->	k_j (~no@151.42.78.158) has joined ##c++
2016-09-23 07:25:20	Murii	k :}
2016-09-23 07:25:21	V7	jamesaxl, ?
2016-09-23 07:25:27	SlashLife	strcat*
2016-09-23 07:25:34	jamesaxl	V7, and also is off-topic
2016-09-23 07:25:36	slavanap	}, yes. All that std stuff that accept wchar_t looks unreliable for me now.
2016-09-23 07:25:37	megaTherion	jamesaxl: works quite good actually
2016-09-23 07:25:45	V7	jamesaxl, wtf areyalking about ?!
2016-09-23 07:25:45	<--	SHC (~quassel@59.88.212.103) has quit (Remote host closed the connection)
2016-09-23 07:25:50	-->	Betal (~Betal@unaffiliated/betal) has joined ##c++
2016-09-23 07:25:53	-->	hk238 (~kvirc@unaffiliated/hk238) has joined ##c++
2016-09-23 07:25:54	megaTherion	V7: he is on crack, ignore him
2016-09-23 07:26:00	SlashLife	slavanap: Where exactly does the leap "Unicode, therefore wchar_t" happen?
2016-09-23 07:26:28	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-23 07:26:32	jamesaxl	megaTherion, works good, but it took a lot space
2016-09-23 07:26:39	megaTherion	s/space/time/?
2016-09-23 07:26:50	slavanap	SlashLife, at compile time. .cpp file encoded in A encoding. L"" binary is specified sizeof(wchar_t) == 2 or sizeof(wchar_t) == 4 (clang).
2016-09-23 07:27:01	SlashLife	I mean ... your *mental* leap.
2016-09-23 07:27:03	jamesaxl	megaTherion, both, space and tome for installation
2016-09-23 07:27:07	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-23 07:27:37	megaTherion	jamesaxl: get an better machine I'd say, newer suite's dont aim for 20y old desktops
2016-09-23 07:27:58	w3z	!focus
2016-09-23 07:28:00	nolyc	##c++ focuses on C++. Discuss offtopic things elsewhere; ##c++-general or ##c++-social
2016-09-23 07:28:08	slavanap	SlashLife, well I would like to leap at Unicode to make my app multi-language.
2016-09-23 07:28:16	-->	Yuri6037 (~Yuri6037@ALagny-155-1-12-224.w83-114.abo.wanadoo.fr) has joined ##c++
2016-09-23 07:28:22	-->	DEElekgolo (~DEElekgol@2602:30a:2e0e:a7a0:9550:2cd2:e1ce:2f) has joined ##c++
2016-09-23 07:28:27	slavanap	and here w3c comes and makes me quite.
2016-09-23 07:28:33	}	slavanap, Do you understand what Unicode means?
2016-09-23 07:28:37	}	slavanap, Do you know what utf8 is?
2016-09-23 07:28:42	}	slavanap, Do you understand what a wchar_t is?
2016-09-23 07:28:50	slavanap	}, yes. yes. yes.
2016-09-23 07:28:54	}	I very much doubt that
2016-09-23 07:28:59	w3z	youre on topic slavanap even if your subject matter is boring
2016-09-23 07:29:08	}	slavanap, Now read this, http://stackoverflow.com/questions/11107608/whats-wrong-with-c-wchar-t-and-wstrings-what-are-some-alternatives-to-wide
2016-09-23 07:29:12	}	And then find out what Unicode is
2016-09-23 07:29:14	slavanap	}, want me to be more precise. Wait a sec.
2016-09-23 07:30:27	<--	Guest81290 (alamar@oops.kernel.de) has quit (Ping timeout: 250 seconds)
2016-09-23 07:31:30	-->	julian (alamar@oops.kernel.de) has joined ##c++
2016-09-23 07:31:49	--	julian is now known as Guest94040
2016-09-23 07:32:02	Yuri6037	hey all
2016-09-23 07:32:21	<--	prehensileNipple (~nooblet@124.197.62.6) has quit (Ping timeout: 265 seconds)
2016-09-23 07:32:55	Yuri6037	I'm creating a custom implementation of lists and strings for my own project as STD lib does not provide enough functionality for my project's needs
2016-09-23 07:33:32	ville	!grab Yuri6037
2016-09-23 07:33:33	nolyc	By your command.
2016-09-23 07:33:56	}	@_@
2016-09-23 07:33:59	Yuri6037	however creating a custom list implementation results in random segmentation fault
2016-09-23 07:34:01	<--	abaines (~abaines@host109-150-226-218.range109-150.btcentralplus.com) has quit (Ping timeout: 248 seconds)
2016-09-23 07:34:17	ville	what's this nonsense nick }? i suggest you change it
2016-09-23 07:34:22	<--	KindOne (kindone@freenude/topless/kindone) has quit (Remote host closed the connection)
2016-09-23 07:34:24	--	} is now known as bsdbeard
2016-09-23 07:34:26	-->	snyp (~Snyp@nas4.meghbelabroadband.in) has joined ##c++
2016-09-23 07:34:32	bsdbeard	Yuri6037, what functionality are you missing
2016-09-23 07:34:35	-->	Diyar (~Diyar@unaffiliated/diyar) has joined ##c++
2016-09-23 07:35:05	Yuri6037	network serialize/deserialize, easy file writing/reading
2016-09-23 07:35:11	slavanap	}, utf8 encoding: 1 char - from 1 to 4 bytes. utf16 encoding 1 char - 1 or 2 words (little endian or big endian). On Windows wchar_t === UTF16LE. On Mac wchar_t uses UTF32. UTF32: 1 char 4 bytes (1 dword). for every wchar_t it valid that wcslen(wstr) * sizeof(wchar_t) <= actuall binary length is bytes.
2016-09-23 07:35:20	<--	Karyon (~yaaic@unaffiliated/karyon) has quit (Quit: sayonara)
2016-09-23 07:35:31	bsdbeard	Yuri6037, And have you considered simply writing a function that accepts lists and performs those actions?
2016-09-23 07:35:35	-->	jan64 (~jan64@agaz161.neoplus.adsl.tpnet.pl) has joined ##c++
2016-09-23 07:35:37	Yuri6037	the lits is just for ease the string is because I need a full parsing
2016-09-23 07:35:55	w3z	!give Yuri6037 basic
2016-09-23 07:35:57	nolyc	Yuri6037: Please ask your question in ##C++-basic, as it involves the fundamental basics of the language.
2016-09-23 07:36:14	<--	vicenteH (~user@195.235.96.150) has quit (Ping timeout: 265 seconds)
2016-09-23 07:36:25	ville	!fs read
2016-09-23 07:36:26	nolyc	Key search for "read" (11 found): "boost::thread", "mindreading", "multithreading", "pthread member function", "read", "readable operator example", "readable operators", "readabook", "readfile", "sliced bread", and "threading"
2016-09-23 07:36:35	ville	!readfile
2016-09-23 07:36:36	nolyc	<< string(istream_iterator<char>(f),{}); ifstream f(__FILE__);
2016-09-23 07:36:37	geordi	#if!defined(GEORDI_PRELUDE)&&!defined(__clang__)#defineGEORDI_PRELUDE#include"prelude-1z.hpp"#endifusingnamespacestd;ifstreamf(__FILE__);intmain(intargc,char*argv[]){cout<<string(istream_iterator<char>(f),{});}
2016-09-23 07:36:52	bsdbeard	Wouldnt an istreambuf iterator be better
2016-09-23 07:36:57	bsdbeard	So it keeps spaces
2016-09-23 07:36:57	Yuri6037	Yeah also counting on cross platform code
2016-09-23 07:37:02	<--	hk238 (~kvirc@unaffiliated/hk238) has quit (Quit: http://www.kvirc.net/ 4.9.2 Aria)
2016-09-23 07:37:07	ville	Yuri6037: that's how you can "easily" read a file to a string pretty easily
2016-09-23 07:37:16	Yuri6037	but the problem is not with platform dependent code
2016-09-23 07:37:21	<--	illerucis (~illerucis@2620:10d:c091:200::4:6036) has quit (Remote host closed the connection)
2016-09-23 07:37:22	<--	Guest94040 (alamar@oops.kernel.de) has quit (Ping timeout: 255 seconds)
2016-09-23 07:37:43	bsdbeard	A regular istream_iterator will chomp the spaces :(
2016-09-23 07:38:03	-->	julian_ (~alamar@oops.kernel.de) has joined ##c++
2016-09-23 07:38:08	bsdbeard	<< string(istreambuf_iterator<char>(f),{}); ifstream f(__FILE__);
2016-09-23 07:38:09	geordi	#if !defined(GEORDI_PRELUDE) && !defined(__clang__) [+ 8 discarded lines]
2016-09-23 07:38:27	Yuri6037	when I try to store std::string inside my FList (for testing) I get random seg fault on the ReAllocate function inside FList
2016-09-23 07:38:29	ville	yes i know. it's there to make anyone copypasting the solution with out thinking to run into the problem
2016-09-23 07:38:29	<--	GenteelBen (~GenteelBe@cpc70133-lutn12-2-0-cust324.9-3.cable.virginm.net) has quit
2016-09-23 07:38:52	ville	dunno if that's too sneaky or something
2016-09-23 07:38:52		[07:38]
2016-09-23 07:39:15	Yuri6037	The debugger points me that delete[] RawList causes seg fault inside std::string de-constructor
2016-09-23 07:39:15	bsdbeard	Yuri6037, Well if you're a beginner, it's fairly common to make mistakes when working with raw pointers, which is what I assume you're doing
2016-09-23 07:39:31	<--	tocka (~tocka@78-56-107-170.static.zebra.lt) has quit
2016-09-23 07:39:33	<--	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has quit (Remote host closed the connection)
2016-09-23 07:39:38	bsdbeard	Yuri6037, I suggest you use a std::list<>, you will not be able to write a better implementation in any reasonable amount of time
2016-09-23 07:40:48	Yuri6037	Yeah exactly the answer I thought, everytime I try to do that kine of things and that I get problems I never get other answers as use lib/api !!
2016-09-23 07:40:58	SlashLife	bsdbeard: Why not? He already has something that !works.
2016-09-23 07:41:16	bsdbeard	That's why a lot of very smart people work on those libraries/apis, so you don't have to use your poorly made implementation
2016-09-23 07:41:27	w3z	Yuri6037: consider that its the right answer, and that youre being extra derp
2016-09-23 07:41:41	w3z	some order in here would be nice, ugh
2016-09-23 07:41:47	bsdbeard	!order
2016-09-23 07:41:57	Yuri6037	UE4 did it so why Can't I do that !!?
2016-09-23 07:42:03	SlashLife	Yuri6037: So you tell us that the stdlib doesn't help you and you want to implement your own, and then somehow your own thing doesn't work either and now you expect *us* to fix your stuff when you could just have used the stdlib provided facilities?
2016-09-23 07:42:12	<--	Lomex (~lomex@213.61.34.42) has quit (Remote host closed the connection)
2016-09-23 07:42:23	bsdbeard	I don't know what UE4 is and how it's related to C++
2016-09-23 07:42:35	Yuri6037	Unreal Engine 4!
2016-09-23 07:43:02	-->	k^ (k@91.219.237.227) has joined ##c++
2016-09-23 07:43:07	Yuri6037	And that's not the only one ! QT also has custom implementations !
2016-09-23 07:43:10	SlashLife	Yuri6037: Somewhere in your mind you should be aware that your inability to fix your own lists segfaults does not shine kindly on the credibility of your assertion that the stdlib provided facilities are unsuited for your use case.
2016-09-23 07:43:20	bsdbeard	Yuri6037, If you explain what problems you have with std::list<> I'm sure people in this channel coud help you
2016-09-23 07:43:40	-->	Lomex (~lomex@213.61.34.42) has joined ##c++
2016-09-23 07:43:48	-->	hualet (~hualet@183.94.116.177) has joined ##c++
2016-09-23 07:43:56	EricWF	bsdbeard: Yeah I would love to know the issue you have with std::list.
2016-09-23 07:44:05	bsdbeard	EricWF, o_O
2016-09-23 07:44:16	Yuri6037	Ok well I guess you're not going to help me ? The question is unrelated to std !! I'm not working with std and THAT's ALL !
2016-09-23 07:44:22	EricWF	Woops I meant Yuri6037
2016-09-23 07:44:28	<--	Bhargav97 (uid33983@gateway/web/irccloud.com/x-quzfabvnhpubpbog) has quit (Quit: Connection closed for inactivity)
2016-09-23 07:44:39	EricWF	Why are you not working with std Yuri6037?
2016-09-23 07:44:43	-->	fahadash (uid44972@gateway/web/irccloud.com/x-cbzdyarooebyzggk) has joined ##c++
2016-09-23 07:44:54	Yuri6037	Stop telling me to use STD !! I want my own implementation !!
2016-09-23 07:45:03	-->	code_zombie (~code_zomb@136.63.230.43) has joined ##c++
2016-09-23 07:45:04	bsdbeard	Maybe when he was a little child a big mean std:: bit him in the butt and how he's scared of it
2016-09-23 07:45:13	Yuri6037	Even if that would be school work what would you say ?
2016-09-23 07:45:14	slavanap	!give Yuri6037 std
2016-09-23 07:45:16	nolyc	Yuri6037: ISO restricts distribution of C++ standards and recent drafts. You can buy C++11 at http://tinyurl.com/bm82as8 for 30 USD or http://tinyurl.com/isocxx11 for ~290 EUR, or C++03 at http://tinyurl.com/isocxx03 for 30 USD. The least outdated freely available draft is downloadable at http://isocpp.org/
2016-09-23 07:45:21	EricWF	Your implementation is going to be shitty.
2016-09-23 07:45:26	w3z	then stfu and write a braindead linked list or string like every intro to cs stdudent ever ...
2016-09-23 07:45:38	EricWF	nolyc: Or the github trunk.
2016-09-23 07:46:02	w3z	its not rocket science to write poor implementations of either
2016-09-23 07:46:09	<--	Twinsen (~Twinsen@2a00:1028:8380:be9e:447b:2601:50fc:d91d) has quit (Read error: Connection reset by peer)
2016-09-23 07:46:13	EricWF	w3z++
2016-09-23 07:46:23	Yuri6037	But why is it forcely a bad implementation ?!
2016-09-23 07:46:31	bsdbeard	forcely?
2016-09-23 07:46:34	EricWF	It isn't.
2016-09-23 07:46:42	EricWF	It’s a good implementation of a doubly linked list.
2016-09-23 07:46:44	Yuri6037	UE4 is not using std and it's not a bad implementation !!
2016-09-23 07:46:55	w3z	you havent asked a question, youve just whined that you dont want to use the std lib and your implementation segfaults
2016-09-23 07:47:25	<--	afiefh_ (~afiefh@31.210.188.33) has quit (Ping timeout: 265 seconds)
2016-09-23 07:47:28	Yuri6037	I would like help with my seg fault problem but you derived in "why not use STD !"
2016-09-23 07:47:32	EricWF	My code breaks! It must be everybodies fault but my own!
2016-09-23 07:47:44	SlashLife	Yuri6037: So considering what you've said so far, you claim that you're on the same level as the developers of Qt or Unreal Engine.
2016-09-23 07:47:46	V-ille	!give Yuri6037 testcase
2016-09-23 07:47:48	nolyc	Yuri6037: A testcase is the _least_ amount of code that replicates your problem, paste it to http://coliru.stacked-crooked.com and give us the link. Do _not_ paste code to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
2016-09-23 07:47:48	w3z	so go ask in basic, perhaps someone will hold your hand
2016-09-23 07:48:02	 *	EricWF waves at V-ille. 
2016-09-23 07:48:25	Yuri6037	SlashLife: No you must be stupid you never read anything of what I said !!!???
2016-09-23 07:48:29	SlashLife	Yuri6037: In that case feel free to completely disregard our advice, as you obviously know better than we do. On the same note: Don't hope for help here, because what you're doing is too advanced for any of us. So you're on your own.
2016-09-23 07:48:29	<--	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has quit (Quit: This computer has gone to sleep)
2016-09-23 07:48:31	V-ille	EricWF: I need to dig up our chatlogs, there was some constexpr that you wanted me to add and some other minor thing
2016-09-23 07:48:47	slavanap	EricWF, << ++w3z;
2016-09-23 07:48:47	-->	matiu (~matiu@unaffiliated/matiu) has joined ##c++
2016-09-23 07:48:57	<--	Lomex (~lomex@213.61.34.42) has quit (Ping timeout: 272 seconds)
2016-09-23 07:49:01	EricWF	V-ille: Oh in optional<T>?
2016-09-23 07:49:01	-->	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has joined ##c++
2016-09-23 07:49:11	V-ille	I have a vague recollection of that, yes
2016-09-23 07:49:16	V-ille	I have the logs, so it's not lost
2016-09-23 07:49:36	bsdbeard	Yuri6037, You didn't show any code, but you mentioned it segfaults on delete[], using delete[] is highly suspicious for a linked list
2016-09-23 07:49:43	-->	FreeBirdLjj (~freebirdl@2002:df41:5483:0:d43c:fc3d:45be:72ab) has joined ##c++
2016-09-23 07:49:52	bsdbeard	So I guess you need to rethink whatever you were doing
2016-09-23 07:49:53	V-ille	EricWF: I should perhaps do those tweaks before I cross-port to experimental and backport to gcc6
2016-09-23 07:50:07	-->	robmurrer (~robmurrer@75-172-95-19.tukw.qwest.net) has joined ##c++
2016-09-23 07:50:08	<--	jokoon (~jokoon@2a01:e35:398b:5d60:f5d4:4afc:b2cb:4e65) has quit (Quit: Leaving)
2016-09-23 07:50:14	<--	hualet (~hualet@183.94.116.177) has quit (Ping timeout: 265 seconds)
2016-09-23 07:50:18	bsdbeard	Unless ofcourse it was some very smart linked list that uses some kind of neat allocator
2016-09-23 07:50:25	EricWF	V-ille: Perhaps…
2016-09-23 07:50:27	w3z	EricWF: finish variant yet?
2016-09-23 07:50:28	Yuri6037	well I delete to avoid memory leak as I allocate a list of elements defined by template<class T>
2016-09-23 07:50:39	V-ille	show us a testcase
2016-09-23 07:50:45	V-ille	you have the instructions
2016-09-23 07:51:15	V-ille	EricWF: are you at cppcon?
2016-09-23 07:51:19	<--	shingshang (~shingshan@101.164.159.8) has quit (Ping timeout: 255 seconds)
2016-09-23 07:51:21	Yuri6037	The problem is that TestCase requires you to have all the codes and I have no git repo yet
2016-09-23 07:51:37	EricWF	V-ille: I am and you should be too. It’s Herbs keynote night now.
2016-09-23 07:51:39	V-ille	it doesn't require us to have "all the codes"
2016-09-23 07:51:41	bsdbeard	No testcase explicitly required you to show a *minimal* example
2016-09-23 07:51:43	EricWF	s/night/right
2016-09-23 07:51:50	V-ille	EricWF: I don't have unlimited leisure time
2016-09-23 07:52:09	V-ille	and since I plan to go to ACCU 2017, I'm not going to waste budgets on cppcon :P
2016-09-23 07:52:19	Yuri6037	And I will tell you that I can't get a minimal test case as seg fault only happens when every files are compiled
2016-09-23 07:52:29	V-ille	nonsense
2016-09-23 07:52:29	EricWF	V-ille: Lucky for you cppcon only requires finite leisure time.
2016-09-23 07:52:30	 *	bsdbeard facepalms
2016-09-23 07:52:33	-->	Guest18061 (~tmk@124.40.246.86) has joined ##c++
2016-09-23 07:53:20	<--	Mike11 (~Mike@unaffiliated/mike11) has quit (Quit: Leaving.)
2016-09-23 07:53:26	<--	Yuri6037 (~Yuri6037@ALagny-155-1-12-224.w83-114.abo.wanadoo.fr) has left ##c++ ("Leaving")
2016-09-23 07:53:35	V-ille	well, that was entertaining
2016-09-23 07:54:17	<--	FreeBirdLjj (~freebirdl@2002:df41:5483:0:d43c:fc3d:45be:72ab) has quit (Ping timeout: 248 seconds)
2016-09-23 07:54:17		[07:54]
2016-09-23 07:54:35	<--	Immune (~Immune@173.55.30.110) has quit (Ping timeout: 260 seconds)
2016-09-23 07:54:36	EricWF	w3z: Varients pretty much done. The problem is every time I god to review it I end up finding compiler/spec bugs.
2016-09-23 07:54:42	EricWF	And that prevents me from committing it.
2016-09-23 07:55:06	EricWF	Optional will land in trunk this week. Hopfully varient will as well.
2016-09-23 07:55:24	<--	Guest18061 (~tmk@124.40.246.86) has quit (Read error: Connection reset by peer)
2016-09-23 07:55:25	EricWF	s/this week/a week from today
2016-09-23 07:55:29	EricWF	Not by sunday.
2016-09-23 07:55:30	V-ille	funny how you haven't reported such spec bugs
2016-09-23 07:55:59	EricWF	I complain about them to you, mpark or others and then they file the bugs.
2016-09-23 07:56:00	-->	Vuks (~Vuks@unaffiliated/vuks69) has joined ##c++
2016-09-23 07:56:09	V-ille	I haven't noticed that either
2016-09-23 07:56:16	SlashLife	V-ille: Even more entertaining in -basic
2016-09-23 07:56:19	SlashLife	<Yuri6037> hey all, I suppose it's not a good idea to ask here either because I will never get help with what I'm trying to do...
2016-09-23 07:56:22	SlashLife	Great debut!
2016-09-23 07:56:26	-->	francis36012 (~francis@136.159.49.119) has joined ##c++
2016-09-23 07:56:38	bsdbeard	SlashLife, And no testcase was seen that day
2016-09-23 07:56:39	V-ille	a rather pessimistic approach
2016-09-23 07:57:01	V-ille	bsdbeard: come on, he told us that it's impossible to write that testcase without giving us all da codez
2016-09-23 07:57:01	-->	YungRaj (~YungRaj@50-24-71-159.bcstcmtk01.res.dyn.suddenlink.net) has joined ##c++
2016-09-23 07:57:06	<--	rimdeker (~rimdeker@unaffiliated/rimdeker) has quit (Read error: Connection reset by peer)
2016-09-23 07:57:24	<--	Nilesh_ (uid116340@gateway/web/irccloud.com/x-ulghevejeodgphmf) has quit (Quit: Connection closed for inactivity)
2016-09-23 07:57:31	SlashLife	And he can't give us the code because that would mean he can't patent his great new approach.
2016-09-23 07:57:54	<--	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has quit (Read error: Connection reset by peer)
2016-09-23 07:58:00	bsdbeard	He will replace std::list with yuri::list and then conquer the world
2016-09-23 07:58:17	-->	Sc0tty- (~Scott@2a02:c7d:2fd1:4f00:6c5f:2ae9:4d23:8e9e) has joined ##c++
2016-09-23 07:58:27	bsdbeard	Because all the runtime libraries will have segfaulted around the globe
2016-09-23 07:58:47	w3z	hmm, how would i write a non recursive variadic ratio_add ... my compile time brain isnt firing correctly this afternoon
2016-09-23 07:58:50	w3z	<<TYPE(radd<ratio<1,2>,ratio<1,3>,ratio<1,4>>::type{}); template<class A,class B,class...As> struct radd{using type=typename radd<ratio_add<A,B>,As...>::type;}; template<class A,class B> struct radd<A,B>{using type=ratio_add<A,B>;};
2016-09-23 07:58:51	geordi	prvalue ratio<13l, 12l>
2016-09-23 07:59:27	w3z	i cant think of how i would keep a running ratio as i iterate
2016-09-23 07:59:54	-->	lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2016-09-23 08:00:05	m_ben	w3z: what is a ratio_add?
2016-09-23 08:00:17	-->	sphenxes01 (~sphenxes@81-5-248-87.hdsl.highway.telekom.at) has joined ##c++
2016-09-23 08:00:24	w3z	it adds two std::ratio types :)
2016-09-23 08:00:26	SlashLife	1/2 + 1/6 = 2/3, I assume.
2016-09-23 08:01:07	-->	Immune (~Immune@173.55.30.110) has joined ##c++
2016-09-23 08:01:21	-->	KindOne (kindone@freenude/topless/kindone) has joined ##c++
2016-09-23 08:02:19	bsdbeard	why non recursive?
2016-09-23 08:02:30	w3z	im off to luch, show me a index_sequence fold by the time i get back :)
2016-09-23 08:02:34	w3z	lunch
2016-09-23 08:02:54	<--	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has quit (Ping timeout: 264 seconds)
2016-09-23 08:02:55	bsdbeard	Im pretty sure boost::mpl had a moost::mpl::fold or such
2016-09-23 08:03:08	SlashLife	w3z: I don't think I'd attempt to add them all at once. The result of a/A + b/B + c/C + ... + z/Z would be (a*B*C*D*...*Z + A*b*C*D*...*Z + ... + A*B*...*X*y*Z + A*B*...*Y*Z) / A*B*C*...*Y*Z, before you could start to cancel them out.
2016-09-23 08:03:14	bsdbeard	I don't really understand the problem, why must it be non recursive :(
2016-09-23 08:03:31	m_ben	bsdbeard: because recursive algos are slow to compile
2016-09-23 08:03:32	w3z	of course it does, and why isnt the right question :) why am i calculating e at compile-time, because i can :)
2016-09-23 08:03:46	<--	kilbith (4ee51c3e@gateway/web/cgi-irc/kiwiirc.com/ip.78.229.28.62) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-09-23 08:03:46	<--	sphenxes02 (~sphenxes@192.164.150.155) has quit (Ping timeout: 265 seconds)
2016-09-23 08:03:55	bsdbeard	Then you can just look at pure functional programmers would do it and do that with templates
2016-09-23 08:04:06	bsdbeard	But I dont know how without recursion
2016-09-23 08:04:21	<--	Azusa762 (~roy@37.228.234.160) has quit (Ping timeout: 276 seconds)
2016-09-23 08:04:31	w3z	der, i know how to calculate it :) the question is how to use ratio_add a parameter pack of ratio types and an index sequnce
2016-09-23 08:05:27	w3z	pushing the sequence in to a tuple might help, ill explore that if nobody has a better approach when i get back
2016-09-23 08:05:35	<--	fstd (~fstd@unaffiliated/fisted) has quit (Quit: leaving)
2016-09-23 08:05:46	-->	sssilver (~sssilver@38.122.48.218) has joined ##c++
2016-09-23 08:06:21	V-ille	surely it can be done by using an index_sequence and then just fold-expressing it
2016-09-23 08:06:56	<--	Guest54448 (skarn@gateway/shell/firrre/x-impnvoeaincywfbc) has quit (Remote host closed the connection)
2016-09-23 08:07:30	bsdbeard	This reminded me of a language I stumbled upon https://github.com/feresum/tmp-lang, a language composed of C++ templates, which is executed by having a C++11-enabled compiler evaluate a typedef
2016-09-23 08:07:39	-->	AkaiSora (~quassel@197.17.55.252) has joined ##c++
2016-09-23 08:08:04	EricWF	C++11… yucky. Give me C++14 or give me death!
2016-09-23 08:08:35	<--	oxygene (~fred@ALille-652-1-134-14.w83-198.abo.wanadoo.fr) has quit (Ping timeout: 272 seconds)
2016-09-23 08:08:39	-->	fstd (~fstd@unaffiliated/fisted) has joined ##c++
2016-09-23 08:08:59	-->	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has joined ##c++
2016-09-23 08:09:20	V-ille	c++14, meh, I want c++20
2016-09-23 08:09:20		[08:09]
2016-09-23 08:09:46	bsdbeard	What happens in 2098, will it be C++98 again
2016-09-23 08:09:59	V-ille	I doubt that's going to be my problem
2016-09-23 08:10:16	<--	shirty (~shirty@109.131.156.130) has quit (Quit: shirty)
2016-09-23 08:10:42	-->	NeoGeo64 (~linux@2604:2d80:881a:0:b4a3:be16:d6fd:8559) has joined ##c++
2016-09-23 08:10:44	<--	juanmapalad (~Administr@112.201.168.185) has quit (Quit: Leaving)
2016-09-23 08:10:45	-->	feliwir (Elite16673@gateway/shell/elitebnc/x-rjoihdxmfmmntnbg) has joined ##c++
2016-09-23 08:11:33	--	blank is now known as GiantNose
2016-09-23 08:11:55	m_ben	very unlikely that c++ will stay active for that long
2016-09-23 08:12:10	bsdbeard	not with that attitude
2016-09-23 08:12:18	bsdbeard	;)
2016-09-23 08:12:41	m_ben	I mean, new languages will emerge
2016-09-23 08:12:57	V-ille	so far they haven't
2016-09-23 08:14:24	EricWF	Yeah but by 2098 we’ll probably have self-hosting robots that write their own OS or something insane like that.
2016-09-23 08:14:49	m_ben	and don't forget quantum computers
2016-09-23 08:14:58	fooobarrr	will a C++2098 compiler really have a compataliity mode for c++1998?
2016-09-23 08:15:10	slavanap	Any guesses why this code may fail in g++ 4.9.2 while it compiles at ideone.com?  https://ideone.com/HqDt8s
2016-09-23 08:15:29	slavanap	g++ error log at the end of the sample at ideone.
2016-09-23 08:15:43	<--	karab44 (~karab44@unaffiliated/karab44) has quit (Quit: Bye bye! o/)
2016-09-23 08:15:44	m_ben	slavanap: use melpon.org/wandbox, you can select compiler and version
2016-09-23 08:16:32	bsdbeard	EricWF, And we still won't have pattern matching in C++ despite all that
2016-09-23 08:16:34	bsdbeard	:<
2016-09-23 08:17:09	Bigcheese	bsdbeard: there's work being done there.
2016-09-23 08:17:14	Bigcheese	It's hard though.
2016-09-23 08:18:07	slavanap	m_ben,  http://melpon.org/wandbox/permlink/978i3Ht4w7BGZjDb
2016-09-23 08:18:25	-->	leehambley (~textual@p4FC4FAD0.dip0.t-ipconnect.de) has joined ##c++
2016-09-23 08:18:48	-->	sctt (~sctt@107-141-7-158.lightspeed.nsvltn.sbcglobal.net) has joined ##c++
2016-09-23 08:19:03	-->	TMM (~hp@fsf/member/pdpc.professional.tmm) has joined ##c++
2016-09-23 08:19:19	-->	kurushii (~kurushii@host86-140-98-159.range86-140.btcentralplus.com) has joined ##c++
2016-09-23 08:20:56	-->	xaxxon (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has joined ##c++
2016-09-23 08:21:27	-->	oxygene (~fred@ALille-652-1-298-119.w92-147.abo.wanadoo.fr) has joined ##c++
2016-09-23 08:21:55	bsdbeard	slavanap, where did you get that code?
2016-09-23 08:22:15	<--	bocaneri (~bocaneri@about/linux/staff/sauvin) has quit (Read error: Connection reset by peer)
2016-09-23 08:22:19	slavanap	bsdbeard, integer_sequence is copy-paste from MSVS headers, other is mine.
2016-09-23 08:22:33	-->	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has joined ##c++
2016-09-23 08:24:05	-->	the_abra (~philipp@p4FFF663D.dip0.t-ipconnect.de) has joined ##c++
2016-09-23 08:25:04	<--	sctt (~sctt@107-141-7-158.lightspeed.nsvltn.sbcglobal.net) has quit (Ping timeout: 240 seconds)
2016-09-23 08:25:04		[08:25]
2016-09-23 08:25:43	-->	Karyon (~yaaic@unaffiliated/karyon) has joined ##c++
2016-09-23 08:26:29	<--	tadaa (~tadaaa@nat-wh-wz4-12.rz.uni-karlsruhe.de) has quit
2016-09-23 08:27:58	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-23 08:28:21	slavanap	bsdbeard, m_ben, it works with with g++ 5.1.0 but fails with g++ 4.9.3. Code in define block is included (see printout). http://melpon.org/wandbox/permlink/978i3Ht4w7BGZjDb
2016-09-23 08:28:43	-->	orbiter (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has joined ##c++
2016-09-23 08:29:15	-->	Derjik (~Derjik@unaffiliated/derjik) has joined ##c++
2016-09-23 08:29:33	-->	xnavor (~xnavor@61.213.216.81.static.r.siw.siwnet.net) has joined ##c++
2016-09-23 08:30:04	-->	dusted (~dusted@77.68.146.169) has joined ##c++
2016-09-23 08:31:24	<--	Sc0tty- (~Scott@2a02:c7d:2fd1:4f00:6c5f:2ae9:4d23:8e9e) has quit (Ping timeout: 265 seconds)
2016-09-23 08:31:34	V-ille	well, that's probably because 4.9 has a bug there
2016-09-23 08:32:19	<--	oftc_ftw (~oftc_ftw@unaffiliated/oftc-ftw/x-3443471) has quit (Ping timeout: 265 seconds)
2016-09-23 08:32:24	bsdbeard	time to switch to gcc 7 :-P
2016-09-23 08:32:43	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Ping timeout: 255 seconds)
2016-09-23 08:32:51	-->	grako (~grako@host86-163-229-238.range86-163.btcentralplus.com) has joined ##c++
2016-09-23 08:32:57	<--	offs3tzer0 (~offs3tzer@85.92-220-180.customer.lyse.net) has quit (Ping timeout: 276 seconds)
2016-09-23 08:33:23	-->	RangerBob (~brian@pool-173-72-130-20.clppva.fios.verizon.net) has joined ##c++
2016-09-23 08:33:32	SlashLife	Is there a good way around insufficient ctor visibility with make_shared? If I friend make_shared that would allow everyone to construct them again, right?
2016-09-23 08:33:59	SlashLife	Possibly making the ctor public, but have it take a parameter of a private nested struct?
2016-09-23 08:34:01	EricWF	libc++’s fallback integer_sequence implementation is much better.
2016-09-23 08:34:50	<--	Immune (~Immune@173.55.30.110) has quit (Ping timeout: 260 seconds)
2016-09-23 08:36:16	slavanap	EricWF, can you show it. Maybe if I change MSVS impl with the one you name it will compile somehow :)
2016-09-23 08:36:35	-->	cjwelborn (cjwelborn@coder.firrre.com) has joined ##c++
2016-09-23 08:36:35	<--	cjwelborn (cjwelborn@coder.firrre.com) has quit (Changing host)
2016-09-23 08:36:35	-->	cjwelborn (cjwelborn@unaffiliated/cjwelborn) has joined ##c++
2016-09-23 08:36:45	slavanap	V-ille, yeahhhh, looks like a bug.
2016-09-23 08:37:07	EricWF	https://github.com/llvm-mirror/libcxx/blob/master/include/__tuple#L83
2016-09-23 08:37:23	<--	logan_e_ (uid164592@gateway/web/irccloud.com/x-zqfucpltccwqwyzi) has quit (Quit: Connection closed for inactivity)
2016-09-23 08:37:40	EricWF	It’s logarithmic as opposed to linear.
2016-09-23 08:37:58	-->	skweek (~skweek@2607:fe50:0:810b:ed75:37b:d904:8135) has joined ##c++
2016-09-23 08:38:04	<--	P1RATEZ (piratez@unaffiliated/p1ratez) has quit
2016-09-23 08:38:23	-->	sctt (~sctt@95.143.195.43) has joined ##c++
2016-09-23 08:38:26	-->	KAHR-Alpha (~Alpha@AReims-652-1-187-168.w92-142.abo.wanadoo.fr) has joined ##c++
2016-09-23 08:38:56	-->	nadder (~nadder@c83-248-23-129.bredband.comhem.se) has joined ##c++
2016-09-23 08:39:13	-->	jefcolbi (~Thunderbi@188.166.147.168) has joined ##c++
2016-09-23 08:39:33	<--	sctt (~sctt@95.143.195.43) has quit (Max SendQ exceeded)
2016-09-23 08:40:06	-->	sctt (~sctt@95.143.195.43) has joined ##c++
2016-09-23 08:40:06		[08:40]
2016-09-23 08:40:13	<--	YungRaj (~YungRaj@50-24-71-159.bcstcmtk01.res.dyn.suddenlink.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-23 08:40:34	EricWF	The primary implementation is a compiler builtin __make_integer_seq. MSVC provides that builtin as well.
2016-09-23 08:40:41	-->	rimdeker (~rimdeker@unaffiliated/rimdeker) has joined ##c++
2016-09-23 08:41:02	<--	Kn|t3 (~agarwalvi@49.207.53.8) has quit (Quit: Kn|t3)
2016-09-23 08:41:11	-->	Immune (~Immune@173.55.30.110) has joined ##c++
2016-09-23 08:42:04	-->	Kn|t3 (~agarwalvi@49.207.53.8) has joined ##c++
2016-09-23 08:42:38	<--	leehambley (~textual@p4FC4FAD0.dip0.t-ipconnect.de) has quit (Read error: Connection reset by peer)
2016-09-23 08:42:48	-->	illerucis (~illerucis@2620:10d:c090:180::1:b7e0) has joined ##c++
2016-09-23 08:43:54	<--	zwliew (uid161395@gateway/web/irccloud.com/x-zkpsmjzeslvmplyo) has quit (Quit: Connection closed for inactivity)
2016-09-23 08:44:28	-->	oftc_ftw (~oftc_ftw@unaffiliated/oftc-ftw/x-3443471) has joined ##c++
2016-09-23 08:44:57	-->	TheMontyChrist (c6d0fb17@gateway/web/freenode/ip.198.208.251.23) has joined ##c++
2016-09-23 08:44:59	m_ben	EricWF: gcc's version isn't logarithmic (yet)?
2016-09-23 08:45:00	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-23 08:45:08	EricWF	V-ille: ^^^
2016-09-23 08:45:22	V-ille	I haven't looked
2016-09-23 08:45:34	V-ille	we might not have the built-int
2016-09-23 08:45:38	<--	TheMontyChrist (c6d0fb17@gateway/web/freenode/ip.198.208.251.23) has quit (Changing host)
2016-09-23 08:45:39	-->	TheMontyChrist (c6d0fb17@unaffiliated/monty-hall/x-7689368) has joined ##c++
2016-09-23 08:45:39	<--	TheMontyChrist (c6d0fb17@unaffiliated/monty-hall/x-7689368) has quit (Changing host)
2016-09-23 08:45:39	-->	TheMontyChrist (c6d0fb17@gateway/web/freenode/ip.198.208.251.23) has joined ##c++
2016-09-23 08:45:44	EricWF	You don’t have the builtin AFAIK.
2016-09-23 08:45:47	m_ben	oh so V-ille works on gcc and EricWF on clang?
2016-09-23 08:45:53	TheMontyChrist	how to undefine macro in c++?
2016-09-23 08:45:57	-->	tristans1 (~tristanse@nat-165-91-12-22.tamulink.tamu.edu) has joined ##c++
2016-09-23 08:46:06	bsdbeard	#undef
2016-09-23 08:46:09	TheMontyChrist	:P
2016-09-23 08:46:13	TheMontyChrist	well, that works
2016-09-23 08:46:13	EricWF	m_ben: Technically libstdc++ and libc++, but yes.
2016-09-23 08:46:13	V-ille	I nowadays spend most of my nocturnal hours on libstdc++, I do occasional g++ patches
2016-09-23 08:46:13	TheMontyChrist	lol
2016-09-23 08:46:27	-->	willy23123 (~willy2312@51-171-151-33-dynamic.agg2.lky.bge-rtd.eircom.net) has joined ##c++
2016-09-23 08:46:59	<--	cjwelborn (cjwelborn@unaffiliated/cjwelborn) has quit (Remote host closed the connection)
2016-09-23 08:47:05	-->	hualet (~hualet@183.94.116.177) has joined ##c++
2016-09-23 08:47:27	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-23 08:48:29	<--	SwiftMatt (~Objective@162.242.94.102) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-23 08:48:51	-->	peterhu (~peterhuen@segfault.guru) has joined ##c++
2016-09-23 08:49:06	<--	tristanseifert (~tristanse@128.194.3.4) has quit (Ping timeout: 264 seconds)
2016-09-23 08:52:06	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-23 08:52:50	w3z	so did any of you puzzlers come up with a solution?
2016-09-23 08:53:00	bsdbeard	well
2016-09-23 08:53:10	-->	asc232 (~Keith@179.38.203.21) has joined ##c++
2016-09-23 08:53:18	bsdbeard	i tried something but it didnt quite work, I put all the ratios in a tuple
2016-09-23 08:53:21	w3z	i decided its along the same lines as the linear hierarchy problem, which also require recursion
2016-09-23 08:53:23	bsdbeard	and made an operator overload for + on tuples
2016-09-23 08:53:29	bsdbeard	and then expanded the tuples
2016-09-23 08:53:33	bsdbeard	it kind of worked nut not really
2016-09-23 08:53:48	SlashLife	w3z: Yes. We have determined that Yuri needs to write his own printf(), because it's printfs fault that his list segfaults.
2016-09-23 08:53:48	bsdbeard	I used an index_sequence to get<> expand the tuple
2016-09-23 08:54:01	bsdbeard	w3z, did that make sense?
2016-09-23 08:54:10	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-23 08:54:15	<--	the_abra (~philipp@p4FFF663D.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-09-23 08:54:25	-->	planet_en (~nkh@5.107.65.47) has joined ##c++
2016-09-23 08:54:32	w3z	bsdbeard: yes, i dont think that approach will work though, thats along the lines of what i was thinking before i went to get food
2016-09-23 08:55:06	bsdbeard	mmm food
2016-09-23 08:55:06		[08:55]
2016-09-23 08:55:23	<--	Defaultti (defaultti@lakka.kapsi.fi) has quit (Quit: Quitting.)
2016-09-23 08:55:39	w3z	the issue is: X<A0,X<A1,X<A2,A3>>> is recursive, and we have no way of simply holding on to the generated type as we iterate without recursion
2016-09-23 08:55:41	<--	blueness (~blueness@gentoo/developer/blueness) has quit (Quit: blueness)
2016-09-23 08:55:52	bsdbeard	well
2016-09-23 08:56:07	bsdbeard	there is technically a way
2016-09-23 08:56:08	bsdbeard	but you wont like it
2016-09-23 08:56:17	<--	hualet (~hualet@183.94.116.177) has quit (Ping timeout: 240 seconds)
2016-09-23 08:56:28	bsdbeard	you would have to specialize every single case from 0 to N arguments (where N is as much as your compiler can handle) :P
2016-09-23 08:56:56	<--	Murii (~Murii@86.127.60.21) has quit
2016-09-23 08:57:01	-->	SwiftMatt (~Objective@162.242.94.102) has joined ##c++
2016-09-23 08:57:08	<--	SwiftMatt (~Objective@162.242.94.102) has quit (Client Quit)
2016-09-23 08:57:19	 *	bsdbeard goes to try another approach which will likely fail
2016-09-23 08:57:23	-->	Defaultti (defaultti@lakka.kapsi.fi) has joined ##c++
2016-09-23 08:57:34	<--	kurushii (~kurushii@host86-140-98-159.range86-140.btcentralplus.com) has quit
2016-09-23 08:58:14	w3z	recursive type list comprehension/folding isnt the end of the world, i guess :(
2016-09-23 08:59:17	<--	Levitator (~Meh@cpe-2606-A000-E182-FB00-5037-2FD5-78B5-D0E8.dyn6.twc.com) has quit (Ping timeout: 250 seconds)
2016-09-23 08:59:21	<--	planet_en (~nkh@5.107.65.47) has quit (Ping timeout: 265 seconds)
2016-09-23 08:59:33	bsdbeard	I remember trying to solve a simple problem with some other programmers and then it turned out the edge cases are NP-complete and ridiculously complicated
2016-09-23 08:59:51	<--	V7 (~v7@unaffiliated/v7) has quit (Read error: Connection reset by peer)
2016-09-23 08:59:55	bsdbeard	And this reminded me of that ...
2016-09-23 09:00:55	w3z	this problem is analgous to the linear hierarchy generation problem, for a crtp template, which ends up requiring recursion as well afaik
2016-09-23 09:01:15	<--	Kn|t3 (~agarwalvi@49.207.53.8) has quit (Quit: Kn|t3)
2016-09-23 09:02:07	w3z	the issue being we need a temporary type, and parameter pack expansion/fold doesnt get us there
2016-09-23 09:03:06	<--	plee (~kurt@89.10.219.180) has quit (Read error: Connection reset by peer)
2016-09-23 09:03:33	-->	plee (~kurt@89.10.219.180) has joined ##c++
2016-09-23 09:03:46	w3z	fwiw, the mpl and generative programming techniques from a decade ago were all recurive (in the olden times before parameter packs and index_sequences)
2016-09-23 09:03:57	bsdbeard	yeah I remember using boost::mpl
2016-09-23 09:04:02	bsdbeard	fun times with ::apply and ::call
2016-09-23 09:04:13	bsdbeard	and BOOST_PP before variadic templates
2016-09-23 09:04:18	-->	cjwelborn (cjwelborn@unaffiliated/cjwelborn) has joined ##c++
2016-09-23 09:04:27	ubsan	bsdbeard: how'd that work?
2016-09-23 09:04:33	bsdbeard	ubsan, how did what work?
2016-09-23 09:04:51	ubsan	bsdbeard: recursive templates w/o parameter packs?
2016-09-23 09:05:12	bsdbeard	they generated a certain predefined length of paramaters using preprocessor magic
2016-09-23 09:05:19	--	anunnaki is now known as vertigo
2016-09-23 09:05:21	ubsan	aw
2016-09-23 09:05:22	ubsan	fun
2016-09-23 09:05:23	ubsan	*ah
2016-09-23 09:05:36	slavanap	EricWF, bsdbeard, V-ille, tried another logarithmic approach. Still same result. http://melpon.org/wandbox/permlink/XO4nUcHHf4bmXhZD   Looks like only way is to upgrade g++ on Debian machine.
2016-09-23 09:05:50	<--	Karyon (~yaaic@unaffiliated/karyon) has quit (Ping timeout: 260 seconds)
2016-09-23 09:05:57	bsdbeard	ubsan, That taught me some neat tricks though
2016-09-23 09:06:22	ubsan	bsdbeard: I imagine
2016-09-23 09:06:33	ubsan	boost likes the insane tricks
2016-09-23 09:06:48	w3z	the preprocessor tricks predate boost
2016-09-23 09:06:53	bsdbeard	Like in real world applications a finite state machine is as good as a nondeterministic pushdown automata, as long as you dont need it to be infinitely recursive
2016-09-23 09:07:05	ubsan	w3z: true
2016-09-23 09:07:11	bsdbeard	Since you can just permutate all the states
2016-09-23 09:07:20	ubsan	I've personally used them
2016-09-23 09:07:32	ubsan	but boost does enjoy them
2016-09-23 09:07:45	w3z	enjoy is the wrong verb
2016-09-23 09:07:53	ubsan	"enjoy"
2016-09-23 09:07:56	ubsan	"is forced to use'
2016-09-23 09:08:01	 *	ubsan shrugs
2016-09-23 09:08:31	bsdbeard	I remember watching stroustrup why he chose a cumbersome syntax for templates, and he said something along the lines of new technology doesnt have to look similair to existing technology
2016-09-23 09:08:35	bsdbeard	That seemed weird to me
2016-09-23 09:08:50	bsdbeard	Err, he said it shouldnt look similair to existing technology*
2016-09-23 09:09:20	bsdbeard	And now we're going the other way, i.e. using instead of typedef has the similair assignment operator
2016-09-23 09:09:43	ubsan	bsdbeard: ?
2016-09-23 09:09:59	ubsan	they thought about a different syntax?
2016-09-23 09:10:06	ubsan	(for templates)
2016-09-23 09:10:06		[09:10]
2016-09-23 09:10:44	bsdbeard	ubsan, I guess? In the same video stroustrup talked about how people wanted him to make java years before java existed and he refused
2016-09-23 09:10:55	bsdbeard	I'll try to find it
2016-09-23 09:10:57	-->	corebob (~corebob@cm-84.213.41.214.getinternet.no) has joined ##c++
2016-09-23 09:10:57	ubsan	bsdbeard: well, I'm happy about that
2016-09-23 09:12:39	<--	EricWF (~EricwF@67.135.43.183) has quit (Quit: EricWF)
2016-09-23 09:15:05	<--	Immune (~Immune@173.55.30.110) has quit (Ping timeout: 260 seconds)
2016-09-23 09:15:10	-->	jurisl__ (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has joined ##c++
2016-09-23 09:15:20	<--	nullfxn (~nullFxn@107-147-108-164.res.bhn.net) has quit (Quit: leaving)
2016-09-23 09:16:06	<--	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has quit (Ping timeout: 264 seconds)
2016-09-23 09:16:25	<--	xnavor (~xnavor@61.213.216.81.static.r.siw.siwnet.net) has quit (Quit: This computer has gone to sleep)
2016-09-23 09:16:34	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-23 09:16:49	<--	jefcolbi (~Thunderbi@188.166.147.168) has quit (Quit: jefcolbi)
2016-09-23 09:16:53	-->	xnavor (~xnavor@61.213.216.81.static.r.siw.siwnet.net) has joined ##c++
2016-09-23 09:17:09	bsdbeard	ubsan, yeah tell me about it... I haven't used c++ in about 2.5 years and just now coming back, other languages are extremely uncomfortable to use after c++
2016-09-23 09:18:46	<--	CaptainPi (~edx@ipservice-092-217-031-250.092.217.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2016-09-23 09:18:59	--	GiantNose is now known as blank
2016-09-23 09:19:02	bsdbeard	You would think garbage collection is great, but the lack of RAI just makes you write more code
2016-09-23 09:19:14	RokerHRO	ACK
2016-09-23 09:19:17	-->	navidr (uid112413@gateway/web/irccloud.com/x-hrvrjqrvlnbrhkvq) has joined ##c++
2016-09-23 09:20:14	ubsan	RAII is da bomb
2016-09-23 09:21:54	-->	biglama (~Day_dream@ram31-1-82-234-77-18.fbx.proxad.net) has joined ##c++
2016-09-23 09:22:18	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-23 09:23:23	-->	iik (~IIK@staticline-31-183-46-69.toya.net.pl) has joined ##c++
2016-09-23 09:23:49	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-23 09:24:05	-->	blueness (~blueness@gentoo/developer/blueness) has joined ##c++
2016-09-23 09:24:10	<--	InfoTest (~Thunderbi@tgn.188.53.107.dts.mg) has quit (Quit: InfoTest)
2016-09-23 09:24:24	PJBoy	!raii
2016-09-23 09:24:26	nolyc	Resource Acquisition Is Initialization: a bad name for the idea of acquiring resources in constructors (generally) and having destructors make sure they're released. Failure to acquire any resources is signaled by throwing an exception. It's better referred to as Scope-Bound Resource Management. http://www.hackcraft.net/raii/
2016-09-23 09:24:30	<--	blueness (~blueness@gentoo/developer/blueness) has quit (Quit: blueness)
2016-09-23 09:24:52	-->	Sc0tty- (~Scott@2a02:c7d:2fd1:4f00:6c5f:2ae9:4d23:8e9e) has joined ##c++
2016-09-23 09:25:00	PJBoy	yeah I never got that name
2016-09-23 09:26:04	bsdbeard	ubsan, I remember what video that was from, "Make simple tasks simple" where stroustrup talked about concepts and explained why he chose the ugly template<class T> syntax in C++
2016-09-23 09:26:04		[09:26]
2016-09-23 09:26:10	<--	jamesaxl (~jamesaxl@176.98.129.195) has quit (Ping timeout: 260 seconds)
2016-09-23 09:26:12	ubsan	bsdbeard: ah
2016-09-23 09:26:13	-->	YungRaj (~YungRaj@50-24-71-159.bcstcmtk01.res.dyn.suddenlink.net) has joined ##c++
2016-09-23 09:26:50	bsdbeard	he had a better syntax but people didnt like that this big new feature didnt have a "heavy" syntax
2016-09-23 09:27:03	bsdbeard	so he made the nice syntax into what we have today
2016-09-23 09:27:04	-->	jamesaxl (~jamesaxl@176.98.129.195) has joined ##c++
2016-09-23 09:27:09	-->	Magnetar (~Mike@pool-108-48-114-242.washdc.fios.verizon.net) has joined ##c++
2016-09-23 09:27:11	bsdbeard	:(
2016-09-23 09:27:12	-->	NeutronStar (~Mike@pool-108-48-114-242.washdc.fios.verizon.net) has joined ##c++
2016-09-23 09:28:11	TheMontyChrist	dumb question...
2016-09-23 09:28:12	TheMontyChrist	GHashTable * args = g_hash_table_new_full (g_str_hash, g_str_equal,             free, free);
2016-09-23 09:28:18	TheMontyChrist	"freee" as in the free function?
2016-09-23 09:28:45	TheMontyChrist	I guess I could google the function g_hash_table_new_full :P
2016-09-23 09:28:46	TheMontyChrist	nvm
2016-09-23 09:30:05	-->	Tachyon_ (~Thunderbi@95.76.184.120) has joined ##c++
2016-09-23 09:30:46	<--	skweek (~skweek@2607:fe50:0:810b:ed75:37b:d904:8135) has quit (Ping timeout: 255 seconds)
2016-09-23 09:30:47	<--	cjwelborn (cjwelborn@unaffiliated/cjwelborn) has quit (Remote host closed the connection)
2016-09-23 09:31:09	-->	skweek (~skweek@2607:fe50:0:810b:ed75:37b:d904:8135) has joined ##c++
2016-09-23 09:32:11	<--	araml (~araml@unaffiliated/araml) has quit (Quit: WeeChat 1.4)
2016-09-23 09:32:36	-->	Mike11 (~Mike@unaffiliated/mike11) has joined ##c++
2016-09-23 09:34:30	<--	willy23123 (~willy2312@51-171-151-33-dynamic.agg2.lky.bge-rtd.eircom.net) has quit (Quit: Colloquy for iPhone - http://colloquy.mobi)
2016-09-23 09:36:03	-->	Immune (~Immune@173.55.30.110) has joined ##c++
2016-09-23 09:36:36	<--	xnavor (~xnavor@61.213.216.81.static.r.siw.siwnet.net) has quit (Quit: This computer has gone to sleep)
2016-09-23 09:37:20	<--	NeutronStar (~Mike@pool-108-48-114-242.washdc.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-23 09:37:20	<--	Magnetar (~Mike@pool-108-48-114-242.washdc.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-23 09:38:04	<--	Judge_Dredd (~Judge_Dre@unaffiliated/judge-dredd/x-2170742) has quit (Quit: Leaving.)
2016-09-23 09:39:53	<--	unK_ (~drunK@78-8-38-61.static.ip.netia.com.pl) has quit (Ping timeout: 240 seconds)
2016-09-23 09:41:40	-->	rodgger (~rodgger@201-71-164-171-arpa.younet.com.br) has joined ##c++
2016-09-23 09:41:40		[09:41]
2016-09-23 09:42:30	<--	francis36012 (~francis@136.159.49.119) has quit (Ping timeout: 276 seconds)
2016-09-23 09:43:11	<--	CuriousErnestBro (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has quit (Read error: Connection reset by peer)
2016-09-23 09:43:21	-->	CuriousErnestBro (~CuriousEr@54190ACF.cm-5-2a.dynamic.ziggo.nl) has joined ##c++
2016-09-23 09:43:47	-->	blueness (~blueness@gentoo/developer/blueness) has joined ##c++
2016-09-23 09:45:35	-->	planet_en (~nkh@5.107.65.47) has joined ##c++
2016-09-23 09:46:32	<--	fahadash (uid44972@gateway/web/irccloud.com/x-cbzdyarooebyzggk) has quit (Quit: Connection closed for inactivity)
2016-09-23 09:49:34	<--	PJBoy (~PJBoy_@unaffiliated/pjboy) has quit (Ping timeout: 240 seconds)
2016-09-23 09:50:39	SlashLife	w3z, bsdbeard: Maybe I misunderstood the problem ... but ... http://ideone.com/EORokP ?
2016-09-23 09:51:28	SlashLife	Much room for improvement, but no recursion, right?
2016-09-23 09:52:03	<--	nadder (~nadder@c83-248-23-129.bredband.comhem.se) has quit (Ping timeout: 244 seconds)
2016-09-23 09:53:05	-->	spindle (~spindle@27-33-39-55.static.tpgi.com.au) has joined ##c++
2016-09-23 09:53:31	-->	unK_ (~drunK@dynamic-78-8-247-122.ssp.dialog.net.pl) has joined ##c++
2016-09-23 09:54:00	-->	tarfart (26730104@gateway/web/cgi-irc/kiwiirc.com/ip.38.115.1.4) has joined ##c++
2016-09-23 09:54:03	tarfart	hi
2016-09-23 09:54:06	-->	Markow (~Markow@176.122.215.103) has joined ##c++
2016-09-23 09:54:23	tarfart	Regardless of how one handles hash collisions (linear probing or chaining), how is returning the mapped value after inserting not ambiguous?
2016-09-23 09:54:27	-->	Karyon (~yaaic@unaffiliated/karyon) has joined ##c++
2016-09-23 09:55:59	m_ben	w3z: http://melpon.org/wandbox/permlink/Cvk4KJ3TCaAD1j1L
2016-09-23 09:56:06	<--	sophia7 (~sophia7@unaffiliated/sophia7) has quit (Quit: sophia7)
2016-09-23 09:56:21	<--	Appleman1234 (~Appleman1@KD119104042061.au-net.ne.jp) has quit (Read error: Connection reset by peer)
2016-09-23 09:56:24	-->	merijn (~merijn@a212-238-239-156.adsl.xs4all.nl) has joined ##c++
2016-09-23 09:56:44	-->	sanke (~unoco@88-223-26-187.meganet.lt) has joined ##c++
2016-09-23 09:56:44		[09:56]
2016-09-23 09:56:48	<--	blueness (~blueness@gentoo/developer/blueness) has quit (Quit: blueness)
2016-09-23 09:56:50	<--	occamsblazer (~occamsbla@131.228.197.44) has quit (Read error: Connection reset by peer)
2016-09-23 09:57:17	-->	occamsblazer (~occamsbla@131.228.197.44) has joined ##c++
2016-09-23 09:58:35	-->	SwiftMatt (~Objective@162.242.94.102) has joined ##c++
2016-09-23 09:59:24	w3z	SlashLife: you cheated, it needs to use ratio_add, eg an application of a template template while maintaining the result of the previous invocation
2016-09-23 09:59:37	w3z	m_ben, your solution doesnt compile under clang, looking
2016-09-23 10:00:14	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-23 10:00:17	m_ben	haven't checked it with clang
2016-09-23 10:00:55	SlashLife	m_ben: Doesn't that recurse in the op+?
2016-09-23 10:01:38	m_ben	SlashLife: isn't that always the case with fold-expressions?
2016-09-23 10:01:57	w3z	and your op+ instead of ratio_add is kind of cheating as well, but perhaps acceptable
2016-09-23 10:02:07	 *	w3z keeps looking
2016-09-23 10:03:09	<--	seishun (~Kakera@46.109.98.192) has quit (Disconnected by services)
2016-09-23 10:03:15	-->	seishun (~Kakera@84.237.177.146) has joined ##c++
2016-09-23 10:03:29	w3z	the specialization taking two non type parameter packs is a nice trick
2016-09-23 10:03:59	m_ben	w3z: weren't you the one who taught me that trick?
2016-09-23 10:04:04	-->	zwf (~Thunderbi@modemcable076.238-20-96.mc.videotron.ca) has joined ##c++
2016-09-23 10:04:13	-->	cjwelborn (cjwelborn@coder.firrre.com) has joined ##c++
2016-09-23 10:04:13	<--	cjwelborn (cjwelborn@coder.firrre.com) has quit (Changing host)
2016-09-23 10:04:13	-->	cjwelborn (cjwelborn@unaffiliated/cjwelborn) has joined ##c++
2016-09-23 10:04:36	<--	unK_ (~drunK@dynamic-78-8-247-122.ssp.dialog.net.pl) has quit (Ping timeout: 276 seconds)
2016-09-23 10:04:53	<--	snyp (~Snyp@nas4.meghbelabroadband.in) has quit (Quit: WeeChat 1.5)
2016-09-23 10:05:04	<--	ambro718 (~ambro@unaffiliated/ambro718) has quit (Quit: Konversation terminated!)
2016-09-23 10:05:09	-->	snyp (~Snyp@nas4.meghbelabroadband.in) has joined ##c++
2016-09-23 10:05:10	-->	Appleman1234 (~Appleman1@KD119104042061.au-net.ne.jp) has joined ##c++
2016-09-23 10:05:13	w3z	yes for a single parameter pack, anyway, i think i agree with clang that your operator+ used in the fold is a no go
2016-09-23 10:05:42	m_ben	why?
2016-09-23 10:06:10	bsdbeard	in ratio<Ns, Ds>{} + ... , shoudlnt ... be a type? why is it expanded like that
2016-09-23 10:06:14	bsdbeard	^ m_ben
2016-09-23 10:06:37	bsdbeard	oh wait
2016-09-23 10:06:41	m_ben	bsdbeard: fold expressions work with values
2016-09-23 10:06:43	bsdbeard	nevermind
2016-09-23 10:06:46	w3z	bsdbeard: {} makes it ansinstance
2016-09-23 10:06:50	bsdbeard	yeah i got it
2016-09-23 10:06:56	<--	Anodl1 (~Anodl@p2003007A2F24340020B531955CDCDDC8.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2016-09-23 10:07:38	w3z	m_ben, well the clang error message, error: call to function 'operator+' that is neither visible in the template definition nor found by argument-dependent lookup - kind of points to it
2016-09-23 10:07:40	bsdbeard	thats a really cool implementation :-)
2016-09-23 10:07:51	m_ben	w3z: would it be better if I wrapped ratio<N,D> into a type and define a method operator+?
2016-09-23 10:08:00	-->	Davidbrcz (~david@185.21.216.137) has joined ##c++
2016-09-23 10:08:13	w3z	the rhs isnt expanded yet so its not sure which + to call
2016-09-23 10:09:13	-->	Anodl (~Anodl@p2003007A2F2434007C7DFF648FF576A3.dip0.t-ipconnect.de) has joined ##c++
2016-09-23 10:09:18	-->	Murii (~Murii@86.127.60.21) has joined ##c++
2016-09-23 10:09:24	w3z	when parsing the tempate definition, though its a dependent function, hmm - i need more thinking power, buts its friday afternoon
2016-09-23 10:09:43	<--	Enhex__ (~Enhex@82.252.138.77.rev.sfr.net) has quit (Quit: Leaving)
2016-09-23 10:10:47	w3z	m_ben, i dont think that will help with clangs complaint
2016-09-23 10:11:34	w3z	if you added a template + the rhs would still be unspecified when parsing the fold, before instantiation
2016-09-23 10:12:21	-->	fahadash (uid44972@gateway/web/irccloud.com/x-qtmwlwcfigljoolo) has joined ##c++
2016-09-23 10:12:21		[10:12]
2016-09-23 10:13:20	bsdbeard	{print_last(1,2,3,4,5);} template<typename ...Args> void print_last(Args&&... args) { (std::cout << ... << ", " << args) ; }
2016-09-23 10:13:21	geordi	error: no unexpanded parameter packs in binary fold
2016-09-23 10:13:27	bsdbeard	it doesnt work for me ;-(
2016-09-23 10:13:55	bsdbeard	geordi, prepend --clang
2016-09-23 10:13:56	geordi	error: invalid operands to binary expression ('const char *' and 'int')
2016-09-23 10:14:09	bsdbeard	the expression folding
2016-09-23 10:15:26	<--	Tachyon_ (~Thunderbi@95.76.184.120) has quit (Quit: Tachyon_)
2016-09-23 10:16:17	m_ben	{print_last(1,2,3,4,5);} template<typename ...Args> void print_last(Args&&... args) { (std::cout << ... args) << ",  "; }
2016-09-23 10:16:17	geordi	error: mismatched operator in fold-expression before 'args'
2016-09-23 10:16:28	m_ben	{print_last(1,2,3,4,5);} template<typename ...Args> void print_last(Args&&... args) { (std::cout << ... << args) << ",  "; }
2016-09-23 10:16:29	geordi	12345,
2016-09-23 10:16:31	w3z	m_ben, my interpretation of the error may be off, since it takes an instantiation to trigger it
2016-09-23 10:16:51	bsdbeard	ah
2016-09-23 10:16:56	bsdbeard	m_ben, no way to cram that comma there?
2016-09-23 10:16:57	<--	merijn (~merijn@a212-238-239-156.adsl.xs4all.nl) has quit (Quit: leaving)
2016-09-23 10:17:18	-->	unK_ (~drunK@dynamic-78-8-3-185.ssp.dialog.net.pl) has joined ##c++
2016-09-23 10:17:36	bsdbeard	oh well
2016-09-23 10:17:50	<--	Davidbrcz (~david@185.21.216.137) has quit (Quit: Leaving)
2016-09-23 10:18:44	<--	cjwelborn (cjwelborn@unaffiliated/cjwelborn) has quit (Remote host closed the connection)
2016-09-23 10:19:01	<--	korans (~korans@62.68.160.220) has quit (Ping timeout: 250 seconds)
2016-09-23 10:21:03	<--	Sc0tty- (~Scott@2a02:c7d:2fd1:4f00:6c5f:2ae9:4d23:8e9e) has quit (Ping timeout: 265 seconds)
2016-09-23 10:21:15	bsdbeard	{print_last(1,2,3,4,5);} template<typename ...Args> void print_last(Args&&... args) { (std::cout << ... << args << ...) ; }
2016-09-23 10:21:15	geordi	error: expected ')' before '<<' (fix known)
2016-09-23 10:22:31	<--	bolt (r00t@unaffiliated/bolt) has quit (Ping timeout: 244 seconds)
2016-09-23 10:22:51	-->	blueness (~blueness@gentoo/developer/blueness) has joined ##c++
2016-09-23 10:23:28	m_ben	{print_last(1,2,3,4,5);} template<typename ...Args> void print_last(Args&&... args) { (std::cout << ... << (std::cout << ", ", args)); }
2016-09-23 10:23:28	geordi	error: no match for 'operator<<' in 'cout << operator,<char, char_traits<char>, int>((* & operator<< <char_traits<char> >(cout, ((const char*)", "))), args#0)' (operand types are 'ostream {aka ostream}' and 'enable_if<true, ostream >::type {aka ostream}')
2016-09-23 10:24:08	<--	kaffeetrauma (~Thunderbi@85-22-37-153.ip.dokom21.de) has quit (Quit: kaffeetrauma)
2016-09-23 10:24:41	va	Given the expression "((Subclass *)baseclassptr)", is there an overview under which circumstances it behaves like static_cast<> and when like dynamic_cast<>?
2016-09-23 10:25:13	bsdbeard	{print_last(1,2,3,4,5);} template<typename ...Args> void print_last(Args&&... args) { (std::cout << ... << (args, ",")) ; }
2016-09-23 10:25:14	geordi	,,,,,
2016-09-23 10:25:24	bsdbeard	what the hell did I do :/
2016-09-23 10:25:46	m_ben	bsdbeard: it works on melpon.org: http://melpon.org/wandbox/permlink/Zd4ThhurYl2I7rZh but it's not optimal
2016-09-23 10:26:26	m_ben	{print_last(1,2,3,4,5);} template<typename ...Args> void print_last(Args&&... args) { (cout << ... << (cout << ", ", args)); }
2016-09-23 10:26:26	geordi	error: no match for 'operator<<' in 'cout << operator,<char, char_traits<char>, int>((* & operator<< <char_traits<char> >(cout, ((const char*)", "))), args#0)' (operand types are 'ostream {aka ostream}' and 'enable_if<true, ostream >::type {aka ostream}')
2016-09-23 10:26:32	m_ben	geordi: --clang
2016-09-23 10:26:33	geordi	Success
2016-09-23 10:26:49	<--	unK_ (~drunK@dynamic-78-8-3-185.ssp.dialog.net.pl) has quit (Ping timeout: 250 seconds)
2016-09-23 10:27:29	m_ben	geordi: --clang { print(1,2,3,4,5); } template<typename... Args> void print(Args&&... args) { (cout << ... << (cout << ", ", args)); }
2016-09-23 10:27:29		[10:27]
2016-09-23 10:27:30	geordi	error: invalid operands to binary expression ('ostream' (aka 'ostream') and 'enable_if<del_ostream_detail::take_by_value<int>(), ostream >::type' (aka 'ostream')) (fix known)
2016-09-23 10:27:35	bsdbeard	m_ben, if I understand that right it uses the comma operator, but shouldnt the comma operator always return the last part
2016-09-23 10:27:39	bsdbeard	<< (1,2,3,4,5);
2016-09-23 10:27:40	geordi	5
2016-09-23 10:29:21	-->	h4k1m (83e3a56b@gateway/web/freenode/ip.131.227.165.107) has joined ##c++
2016-09-23 10:29:31	-->	Dawgmatix (~user@pool-74-102-91-246.nwrknj.fios.verizon.net) has joined ##c++
2016-09-23 10:29:39	h4k1m	Hi everyone, I have a beginner question
2016-09-23 10:29:54	Dawgmatix	Any suggestions for a modern / newer metaprogramming book that takes C++11/C++14 into account?
2016-09-23 10:30:16	-->	erebel55 (~ethornbur@c-68-37-81-221.hsd1.mi.comcast.net) has joined ##c++
2016-09-23 10:30:25	erebel55	lo
2016-09-23 10:30:31	erebel55	anyone know what this error is about?
2016-09-23 10:30:31	erebel55	http://ideone.com/nqkMx9
2016-09-23 10:30:59	<--	ezzieyguywuf (~wolfie@unaffiliated/ezzieyguywuf) has quit (Read error: Connection reset by peer)
2016-09-23 10:31:13	m_ben	bsdbeard: the fold expression calls the binary operator (in this case <<) for every Args argument, so the comma operator is called each time. it prints ", " and then returns the "args" for the fold expression which itself prints "args". I don't understand why geordi shows me the finger
2016-09-23 10:31:18	h4k1m	I used in `C` to have the function's argument which is intended to be used as output as a pointer, but now in C++ I see some function's arguments declared as objects and intended to be output by that function, Is this normal?
2016-09-23 10:31:28	-->	ezzieyguywuf (~wolfie@unaffiliated/ezzieyguywuf) has joined ##c++
2016-09-23 10:31:44	m_ben	bsdbeard: lol this is the result with gcc 6.1: http://melpon.org/wandbox/permlink/XM9eOwukKxqpnmDF
2016-09-23 10:31:56	-->	de-facto (~de-facto@unaffiliated/de-facto) has joined ##c++
2016-09-23 10:31:57	bsdbeard	{print_last(1,2,3,4,5);} template<typename ...Args> void print_last(Args&&... args) { (std::cout << ... << ((void)(std::cout << args), ",")) ; }
2016-09-23 10:31:58	geordi	1,2,3,4,5,
2016-09-23 10:32:08	bsdbeard	m_ben, ^ thats the best i could come up with to have no comma in the start
2016-09-23 10:32:22	bsdbeard	but it has a trailing comma now
2016-09-23 10:32:31	erebel55	oh wow a pastebin with multiple tabs. melpon, bookmarking that
2016-09-23 10:33:12	-->	planet_e1 (~nkh@5.107.65.47) has joined ##c++
2016-09-23 10:33:27	bsdbeard	m_ben, it seems you have to wrap it in void
2016-09-23 10:33:37	bsdbeard	geordi, remove last void
2016-09-23 10:33:37	geordi	error: expected primary-expression before ')' token
2016-09-23 10:33:43	bsdbeard	geordi, remove ()
2016-09-23 10:33:43	geordi	error: no match for 'operator<<' in 'cout << operator,<char, char_traits<char>, char [2]>((* & cout.ostream::operator<<(args#0)), ",")' (operand types are 'ostream {aka ostream}' and 'enable_if<true, ostream >::type {aka ostream}')
2016-09-23 10:33:49	bsdbeard	without (void) gcc goes craz
2016-09-23 10:33:56	m_ben	geordi: --clang { print(1,2,3,4,5); } template<typename... Args> void print(Args&&... args) { (cout << ... << (cout << ", ", void(), args)); }
2016-09-23 10:33:57	geordi	, 1, 2, 3, 4, 5
2016-09-23 10:34:12	m_ben	bsdbeard: you were right
2016-09-23 10:34:33	erebel55	anyways, does anyone know why I'm getting this error? http://melpon.org/wandbox/permlink/jOfzvAM5ssy5WeSd
2016-09-23 10:34:52	bsdbeard	h4k1m, could you show an example?
2016-09-23 10:35:08	bsdbeard	h4k1m, it's not entirely clear what you mean
2016-09-23 10:35:09	-->	viro (~viro@unaffiliated/viro) has joined ##c++
2016-09-23 10:35:17	<--	planet_e1 (~nkh@5.107.65.47) has left ##c++
2016-09-23 10:35:23	va	erebel55: return type should be const int&, no?
2016-09-23 10:35:24	m_ben	erebel55: you have to return const int&
2016-09-23 10:35:33	m_ben	erebel55: http://melpon.org/wandbox/permlink/vPYs5xTjroUmWyIZ
2016-09-23 10:35:33	h4k1m	bsdbeard: yes this one in opencv: http://docs.opencv.org/2.4/modules/core/doc/clustering.html (the function argument `bestLabels` is intended for output I believe).
2016-09-23 10:35:35	<--	Immune (~Immune@173.55.30.110) has quit (Ping timeout: 260 seconds)
2016-09-23 10:35:53	w3z	{print_last(1,2,3,4,5);} template<typename ...Args> void print_last(Args&&... args) { auto o=experimental::make_ostream_joiner(std::cout,","); (o=...=args);}
2016-09-23 10:35:53	<--	planet_en (~nkh@5.107.65.47) has quit (Ping timeout: 248 seconds)
2016-09-23 10:35:53	geordi	1,2,3,4,5
2016-09-23 10:36:04	-->	f10_ (~flo@2001:470:52af:1:e083:b6f8:a539:bbc) has joined ##c++
2016-09-23 10:36:13	w3z	(of course ostream_joiner didnt make it in)
2016-09-23 10:36:13	erebel55	oh thanks guys :)
2016-09-23 10:36:20	bsdbeard	h4k1m, thats hard to say without seeing the type of InputOutputArray
2016-09-23 10:36:27	-->	bolt (r00t@unaffiliated/bolt) has joined ##c++
2016-09-23 10:37:06	<--	andrzejku (~Andrzej@90-156-117-46.internetia.net.pl) has quit (Quit: Leaving)
2016-09-23 10:37:21	h4k1m	bsdbeard: in a normal situation (vanilla c++ code), should it be a pointer if I wanted to have that parameter as output?
2016-09-23 10:37:28	bsdbeard	h4k1m, no
2016-09-23 10:37:35	bsdbeard	h4k1m, use a reference
2016-09-23 10:38:05	-->	gelignite (~gelignite@x4db55a6a.dyn.telefonica.de) has joined ##c++
2016-09-23 10:38:15	bsdbeard	{int a={}; f(a); f(a); cout << a; } void f(int& o){ o += 1; }
2016-09-23 10:38:16	geordi	2
2016-09-23 10:38:21	bsdbeard	h4k1m, like that ^
2016-09-23 10:38:27	h4k1m	bsdbeard: reference to an object I guess. But does the reference have to be initialized with the keyword `new` (to have a broader scope)?
2016-09-23 10:38:32	bsdbeard	no
2016-09-23 10:38:36	<--	divno (~divno@unaffiliated/divno) has quit (Quit: divno)
2016-09-23 10:38:50	bsdbeard	h4k1m, in general, if youre using modern C++ (C++14) you should almost never use pointers or new
2016-09-23 10:39:29	h4k1m	bsdbeard: It's starting to look more like java than C :s
2016-09-23 10:39:39	<--	pylbrecht (~pylbrecht@2a02:8109:8a00:b6c:e6:6be5:827e:7b01) has quit (Quit: Segmentation fault (core dumped))
2016-09-23 10:39:46	bsdbeard	Thats the other way around, you use new all the time in java
2016-09-23 10:39:59	-->	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has joined ##c++
2016-09-23 10:40:06	<--	blackwind_123 (~IceChat9@117.192.151.163) has quit (Ping timeout: 264 seconds)
2016-09-23 10:40:16	-->	unK_ (~drunK@dynamic-78-8-149-70.ssp.dialog.net.pl) has joined ##c++
2016-09-23 10:40:55	h4k1m	bsdbeard: you're right I was talking about the fact the pointers are not used anymore (that's what I've noticed with opencv... I haven't used it since around 2010 when it was written in C).
2016-09-23 10:40:58	erebel55	if I have the following function but I would like to also use it to return the values and not the references do I need to create a new function that returns just a float?
2016-09-23 10:40:59	erebel55	http://hastebin.com/kuxugadeco.cpp
2016-09-23 10:41:11	-->	f10 (~flo@ip5b403530.dynamic.kabel-deutschland.de) has joined ##c++
2016-09-23 10:41:26	bsdbeard	h4k1m, In modern C++ you have unique_ptr and shared_ptr which manage resources so you dont have to
2016-09-23 10:41:34	bsdbeard	h4k1m, underneath they use a normal pointer
2016-09-23 10:41:54	-->	nikki93 (~nikki93@2601:645:8104:cb10:8c2b:50d:3584:f038) has joined ##c++
2016-09-23 10:42:17	h4k1m	bsdbeard: I see. In the example you gave me, you're passing an address (so it's still a pointer, isn't it?)
2016-09-23 10:43:12	-->	Sc0tty- (~Sc0tty-@2a02:c7d:2fd1:4f00:8cb2:357d:dfcf:729f) has joined ##c++
2016-09-23 10:43:12		[10:43]
2016-09-23 10:43:43	<--	nwkj86 (~nwkj86@144.66.6.51.dyn.plus.net) has quit (Ping timeout: 250 seconds)
2016-09-23 10:43:45	<--	jurisl__ (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has quit (Ping timeout: 260 seconds)
2016-09-23 10:43:46	w3z	btw, in case you werent aware, when playing with variadic templates and geordi, you can use variadic generic lambdas as shorthand
2016-09-23 10:43:50	bsdbeard	h4k1m, I don't think it neccesarily passes an adress, it can probably inline the whole thing
2016-09-23 10:43:50	w3z	{[](auto...as){auto o=experimental::make_ostream_joiner(cout,","); (o=...=as);}(1,2,3);}
2016-09-23 10:43:51	geordi	1,2,3
2016-09-23 10:44:25	bsdbeard	h4k1m, The important thing is to distinguish automatic lifetime duration and managed duration
2016-09-23 10:44:34	bsdbeard	h4k1m, if you don't use "new" everything is automatic and you don't worry about it
2016-09-23 10:44:41	<--	iik (~IIK@staticline-31-183-46-69.toya.net.pl) has quit (Ping timeout: 240 seconds)
2016-09-23 10:46:22	bsdbeard	erebel55, Why would you have two functions that effectively return the same thing
2016-09-23 10:46:45	bsdbeard	erebel55, But yes, you would need another function with another name
2016-09-23 10:46:55	bsdbeard	erebel55, Or you could make that function const so it would return const references
2016-09-23 10:47:03	-->	Immune (~Immune@173.55.30.110) has joined ##c++
2016-09-23 10:47:05	bsdbeard	That is a const and non-const
2016-09-23 10:47:12	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-23 10:47:42	erebel55	I want the function to return a reference so that I can modify the original. But I also want to use it to just return the value (where I can't modify)
2016-09-23 10:47:47	h4k1m	bsdbeard: but there's the `&` in the function signature (f(int& o)...), doesn't this mean that it's expecting a pointer to an int?
2016-09-23 10:47:55	<--	jamesaxl (~jamesaxl@176.98.129.195) has quit (Quit: Leaving)
2016-09-23 10:48:02	erebel55	I wasn't sure if there was a way to get the value from the reference after the fact and not be able to modify it
2016-09-23 10:48:04	bsdbeard	No, a pointer would be int* o
2016-09-23 10:48:36	bsdbeard	h4k1m, Another important thing, if a function expects a pointer (but seriously dont use pointers) the pointer can be 0, so you dont know if you even got an object
2016-09-23 10:48:41	bsdbeard	h4k1m, A reference *can never* be null
2016-09-23 10:48:48	-->	cjwelborn (cjwelborn@unaffiliated/cjwelborn) has joined ##c++
2016-09-23 10:48:49	<--	RangerBob (~brian@pool-173-72-130-20.clppva.fios.verizon.net) has quit (Quit: Leaving)
2016-09-23 10:48:56	bsdbeard	Well I suppose it can in a very specific situation which you shouldnt worry about
2016-09-23 10:49:18	-->	code_zombie_ (~code_zomb@2601:300:8101:b670:cdf:c469:7816:fb73) has joined ##c++
2016-09-23 10:49:23	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-23 10:49:35	<--	code_zombie_ (~code_zomb@2601:300:8101:b670:cdf:c469:7816:fb73) has quit (Client Quit)
2016-09-23 10:49:53	<--	code_zombie (~code_zomb@136.63.230.43) has quit (Ping timeout: 240 seconds)
2016-09-23 10:50:33	h4k1m	bsdbeard: Now I understand, the `&` means that it's a reference and when you give an object as a parameter, it's passing a reference as well.... Thanks very much ^^
2016-09-23 10:50:49	bsdbeard	{int a; int& b = a; /* int& c = 0 error */ int* d = 0; int f* = & b; }
2016-09-23 10:50:49	geordi	error: expected initializer before '*' token
2016-09-23 10:50:52	bsdbeard	argh
2016-09-23 10:51:20	bsdbeard	{int a; int& b = a; /* int& c = 0 error */ int* d = 0; int* f = & b; }
2016-09-23 10:51:20	geordi	<no output>
2016-09-23 10:51:54	erebel55	bsdbeard, I guess it does work that way just fine http://melpon.org/wandbox/permlink/vPYs5xTjroUmWyIZ
2016-09-23 10:52:18	bsdbeard	h4k1m, right, the important thing is to distinguish between &b over there (taking address of b) ^ and int& b (declaring reference to some int)
2016-09-23 10:52:58	h4k1m	bsdbeard: yes that's why I mistook it for an address
2016-09-23 10:53:09	-->	giraffe (skarn@gateway/shell/firrre/x-swzwsbzrejojobgy) has joined ##c++
2016-09-23 10:53:31	bsdbeard	erebel55, right, yo can also add a non const to that, int& test()
2016-09-23 10:53:33	--	giraffe is now known as Guest60806
2016-09-23 10:54:00	<--	szulak (uid162164@gateway/web/irccloud.com/x-dumvopyjfgfdgxnj) has quit (Quit: Connection closed for inactivity)
2016-09-23 10:54:37	erebel55	what is a non const?
2016-09-23 10:55:12	bsdbeard	erebel55, I mean you can have a const and a non-const version of the test() function if you require so
2016-09-23 10:55:26	bsdbeard	like in the earlier example you showed
2016-09-23 10:55:29	<--	viro (~viro@unaffiliated/viro) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-09-23 10:55:56	<--	jan64 (~jan64@agaz161.neoplus.adsl.tpnet.pl) has quit (Quit: Leaving)
2016-09-23 10:55:59	erebel55	oh sorry my paste didn't update
2016-09-23 10:56:01	erebel55	http://melpon.org/wandbox/permlink/ThaUmDqQtFXInbJo
2016-09-23 10:56:06	erebel55	but yeah that makes sense
2016-09-23 10:56:22	<--	hoshi (~hoshi@abzm134.neoplus.adsl.tpnet.pl) has quit (Read error: Connection reset by peer)
2016-09-23 10:58:43	<--	jrolland-work (~jeff@155.92.176.224) has quit (Quit: Leaving)
2016-09-23 10:58:43		[10:58]
2016-09-23 10:58:50	bsdbeard	h4k1m, I checked the opencv source you linked and it also uses rvalue references (&&) in some places, so if youre not used to that it might be worth reading some basics about move semantics
2016-09-23 10:59:22	<--	AkaiSora (~quassel@197.17.55.252) has quit (Remote host closed the connection)
2016-09-23 10:59:45	-->	iik (~IIK@staticline-31-183-46-69.toya.net.pl) has joined ##c++
2016-09-23 11:00:32	-->	hoshi (~hoshi@abzm134.neoplus.adsl.tpnet.pl) has joined ##c++
2016-09-23 11:00:35	h4k1m	bsdbeard: I never heard of that, I'll have to read about it
2016-09-23 11:00:42	erebel55	bsdbeard, thanks that helped a lot. i didn't know you could overload functions with just a const different
2016-09-23 11:00:46	erebel55	*difference
2016-09-23 11:00:48	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-23 11:04:33	<--	JoshS (~jshjsh@172.56.38.166) has quit (Quit: Leaving)
2016-09-23 11:05:18	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-23 11:06:10	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Ping timeout: 255 seconds)
2016-09-23 11:06:38	-->	P1RATEZ (piratez@unaffiliated/p1ratez) has joined ##c++
2016-09-23 11:06:57	<--	sanct (~sanct@212.35.67.11) has quit (Ping timeout: 265 seconds)
2016-09-23 11:07:28	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-23 11:07:32	<--	Murii (~Murii@86.127.60.21) has quit
2016-09-23 11:08:30	-->	Tazen (Tazen@gateway/shell/xzibition.com/x-dsmnsfzkieywdezr) has joined ##c++
2016-09-23 11:08:47	<--	Anodl (~Anodl@p2003007A2F2434007C7DFF648FF576A3.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2016-09-23 11:09:44	-->	jrolland-work (~jrolland@155.92.176.225) has joined ##c++
2016-09-23 11:09:52	<--	Karyon (~yaaic@unaffiliated/karyon) has quit (Remote host closed the connection)
2016-09-23 11:09:54	<--	Taz|ZzZ (Tazen@gateway/shell/xzibition.com/x-jpmxdehohtmsuppe) has quit (Ping timeout: 244 seconds)
2016-09-23 11:09:55	<--	Zunino (~Zunino@201.49.127.2) has left ##c++
2016-09-23 11:10:22	-->	bushido_ (~bushido@unaffiliated/bursihido) has joined ##c++
2016-09-23 11:10:28	-->	xnavor (~xnavor@61.213.216.81.static.r.siw.siwnet.net) has joined ##c++
2016-09-23 11:11:01	<--	a3pq51 (~a3pq51@61-58-179-94.pool.ukrtel.net) has quit (Remote host closed the connection)
2016-09-23 11:12:30	<--	TheMontyChrist (c6d0fb17@gateway/web/freenode/ip.198.208.251.23) has quit (Quit: Page closed)
2016-09-23 11:12:44	<--	bushido_ (~bushido@unaffiliated/bursihido) has quit (Client Quit)
2016-09-23 11:13:06	-->	Shiva_ (~Shiva@122.173.151.209) has joined ##c++
2016-09-23 11:13:42	-->	sanct (~sanct@212.35.67.11) has joined ##c++
2016-09-23 11:14:14	<--	corebob (~corebob@cm-84.213.41.214.getinternet.no) has quit (Quit: WeeChat 1.5)
2016-09-23 11:14:14		[11:14]
2016-09-23 11:14:59	<--	Shiva_ (~Shiva@122.173.151.209) has left ##c++
2016-09-23 11:15:21	-->	corebob (~corebob@cm-84.213.41.214.getinternet.no) has joined ##c++
2016-09-23 11:15:33	<--	sanct (~sanct@212.35.67.11) has quit (Max SendQ exceeded)
2016-09-23 11:15:34	<--	xnavor (~xnavor@61.213.216.81.static.r.siw.siwnet.net) has quit (Quit: This computer has gone to sleep)
2016-09-23 11:16:26	-->	sanct (~sanct@212.35.67.11) has joined ##c++
2016-09-23 11:16:32	h4k1m	bsdbeard: but there's no `&` next to the `bestLabels` argument in https://github.com/opencv/opencv/blob/b3b434e221b99a237b989cfbf90ffe6e6af6fab1/modules/core/src/kmeans.cpp#L217
2016-09-23 11:17:01	<--	Sc0tty- (~Sc0tty-@2a02:c7d:2fd1:4f00:8cb2:357d:dfcf:729f) has quit (Quit: Leaving)
2016-09-23 11:17:01	-->	Shiva_ (~Shiva@unaffiliated/bursihido) has joined ##c++
2016-09-23 11:17:05	<--	sanct (~sanct@212.35.67.11) has quit (Max SendQ exceeded)
2016-09-23 11:17:08	bsdbeard	h4k1m, Yes, but if you read the opencv docs for OutputArray they explain its a special class that moves data underneat the implementation
2016-09-23 11:17:36	-->	sanct (~sanct@212.35.67.11) has joined ##c++
2016-09-23 11:17:44	h4k1m	bsdbeard: okay I'll check that... have to go, have a good night and thanks again!
2016-09-23 11:17:52	bsdbeard	h4k1m, http://docs.opencv.org/2.4/modules/core/doc/basic_structures.html?highlight=inputoutputarray#outputarray
2016-09-23 11:18:17	<--	Shiva_ (~Shiva@unaffiliated/bursihido) has left ##c++
2016-09-23 11:18:17	<--	h4k1m (83e3a56b@gateway/web/freenode/ip.131.227.165.107) has quit (Quit: Page closed)
2016-09-23 11:19:30	<--	tarfart (26730104@gateway/web/cgi-irc/kiwiirc.com/ip.38.115.1.4) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-09-23 11:22:25	-->	kasper^ (~safaf@82.137.9.212) has joined ##c++
2016-09-23 11:23:24	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-23 11:24:55	-->	skoocda (~skoocda@76.74.139.126) has joined ##c++
2016-09-23 11:25:33	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-23 11:25:34	<--	meshugga (philip@amd.co.at) has quit (Ping timeout: 240 seconds)
2016-09-23 11:25:35	<--	karakedi (~eAC53C340@unaffiliated/orphan) has quit (Ping timeout: 244 seconds)
2016-09-23 11:26:15	<--	skoocda (~skoocda@76.74.139.126) has quit (Remote host closed the connection)
2016-09-23 11:26:30	-->	skoocda (~skoocda@76.74.139.126) has joined ##c++
2016-09-23 11:30:00	-->	regedit (uid150526@gateway/web/irccloud.com/x-zokpfovqwjotihzl) has joined ##c++
2016-09-23 11:30:00		[11:30]
2016-09-23 11:30:15	-->	Faylite (~Faylite@gateway/vpn/privateinternetaccess/faylite) has joined ##c++
2016-09-23 11:30:57	-->	meshugga (~philip@amd.co.at) has joined ##c++
2016-09-23 11:31:32	-->	prehensileNipple (~nooblet@124.197.62.6) has joined ##c++
2016-09-23 11:31:54	-->	RoKenn (~RoKenn@2001:a61:2239:ed01:31b1:d80f:ae41:c7e2) has joined ##c++
2016-09-23 11:32:55	-->	JoshS (~jshjsh@172.56.38.166) has joined ##c++
2016-09-23 11:33:02	-->	StyxAlso (~markg@120.88.147.168) has joined ##c++
2016-09-23 11:34:43	<--	xaxxon (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has quit (Quit: This computer has gone to sleep)
2016-09-23 11:35:24	<--	meshugga (~philip@amd.co.at) has quit (Ping timeout: 244 seconds)
2016-09-23 11:35:59	<--	Amperture (~Amp@24-136-5-183.c3-0.fld-ubr1.chi-fld.il.cable.rcn.com) has quit (Quit: Leaving)
2016-09-23 11:36:44	bsdbeard	I can't tell if this is a horrible idea or a great idea... say you have a big vector of foo and you want to sort it, but that means copying the foo, you could make a vector of reference_wrapper<foo> and sort that at no cost :o
2016-09-23 11:36:58	bsdbeard	or a set<reference_wrapper<foo>>
2016-09-23 11:37:02	<--	StyxAlso (~markg@120.88.147.168) has quit (Client Quit)
2016-09-23 11:37:42	<--	seishun (~Kakera@84.237.177.146) has quit (Ping timeout: 264 seconds)
2016-09-23 11:38:07	bsdbeard	or even a big ass std::array<reference_wrapper<foo>, 10000> to avoid allocation
2016-09-23 11:38:10	bsdbeard	and sort that
2016-09-23 11:40:21	bsdbeard	I feel like there's some big issue that I'm not noticing here
2016-09-23 11:40:32	bsdbeard	Which will make my computer blow up if I tried this
2016-09-23 11:41:30	<--	Immune (~Immune@173.55.30.110) has quit (Ping timeout: 260 seconds)
2016-09-23 11:43:23	-->	xaxxon (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has joined ##c++
2016-09-23 11:43:42	<--	magnicida (~raskolnik@ip5b41d3af.dynamic.kabel-deutschland.de) has quit (Quit: Leaving.)
2016-09-23 11:43:45	<--	orbiter (~UNIX2@ipb21bf875.dynamic.kabel-deutschland.de) has quit (Read error: Connection reset by peer)
2016-09-23 11:43:47	-->	Azusa762 (~roy@37.228.234.160) has joined ##c++
2016-09-23 11:43:55	<--	cmedeiros (~cmedeiros@200.186.50.162) has quit (Ping timeout: 272 seconds)
2016-09-23 11:46:22	-->	meshugga (philip@amd.co.at) has joined ##c++
2016-09-23 11:46:22		[11:46]
2016-09-23 11:47:18	<--	erebel55 (~ethornbur@c-68-37-81-221.hsd1.mi.comcast.net) has quit (Ping timeout: 264 seconds)
2016-09-23 11:49:22	<--	asc232 (~Keith@179.38.203.21) has quit (Remote host closed the connection)
2016-09-23 11:49:31	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-23 11:49:52	<--	kasper^ (~safaf@82.137.9.212) has quit
2016-09-23 11:50:11	-->	kasper^ (~safaf@82.137.9.212) has joined ##c++
2016-09-23 11:50:16	-->	jshjsh (~jshjsh@172.56.38.166) has joined ##c++
2016-09-23 11:50:19	-->	FreeBirdLjj (~freebirdl@2002:df41:5483:0:19ce:4a53:4b4c:b696) has joined ##c++
2016-09-23 11:51:05	<--	meshugga (philip@amd.co.at) has quit (Ping timeout: 248 seconds)
2016-09-23 11:51:30	<--	RebelCoderW (~Yuriy@cpc74579-lewi13-2-0-cust201.2-4.cable.virginm.net) has quit (Ping timeout: 264 seconds)
2016-09-23 11:51:41	-->	meshugga (philip@amd.co.at) has joined ##c++
2016-09-23 11:51:54	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-23 11:53:39	w3z	well youll need to initialize that array, otherwise itll work
2016-09-23 11:53:50	<--	JoshS (~jshjsh@172.56.38.166) has quit (Ping timeout: 265 seconds)
2016-09-23 11:54:12	-->	asc232 (~Keith@179.38.203.21) has joined ##c++
2016-09-23 11:54:22	w3z	its a bit simpler with two dynamic containers
2016-09-23 11:54:37	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-23 11:55:07	bsdbeard	w3z, what do you mean
2016-09-23 11:55:19	<--	FreeBirdLjj (~freebirdl@2002:df41:5483:0:19ce:4a53:4b4c:b696) has quit (Ping timeout: 272 seconds)
2016-09-23 11:55:34	bsdbeard	with the two dynamic container part
2016-09-23 11:55:45	w3z	{vector<int> V{5,4,3,2,1}; vector<reference_wrapper<int>> R{begin(V),end(V)}; sort(begin(R),end(R)); cout<<R;}
2016-09-23 11:55:46	geordi	{1, 2, 3, 4, 5}
2016-09-23 11:55:53	<--	rimdeker (~rimdeker@unaffiliated/rimdeker) has quit (Ping timeout: 244 seconds)
2016-09-23 11:56:08	w3z	the array will need an initializer helper
2016-09-23 11:56:15	<--	meshugga (philip@amd.co.at) has quit (Ping timeout: 265 seconds)
2016-09-23 11:56:17	bsdbeard	yeah I'm using a std::set so far for the second since i dont care about duplicates
2016-09-23 11:57:04	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-23 11:57:27	<--	asc232 (~Keith@179.38.203.21) has quit (Client Quit)
2016-09-23 11:57:53	bsdbeard	this actually solved so many problems for me... I have no idea why I didnt think of it before
2016-09-23 11:57:54	w3z	grr, i cant get a simler version of m_ben's template to blow up
2016-09-23 11:58:11	w3z	template<int> struct S{}; template<int I,int J> S<I+J> operator+(S<I>,S<J>); template<class...> struct X; template<int...Is> struct X<S<Is>...> {using type=decltype((S<Is>{}+...));}; X<S<0>,S<1>>::type T;
2016-09-23 11:58:15	w3z	{} template<int> struct S{}; template<int I,int J> S<I+J> operator+(S<I>,S<J>); template<class...> struct X; template<int...Is> struct X<S<Is>...> {using type=decltype((S<Is>{}+...));}; X<S<0>,S<1>>::type T;
2016-09-23 11:58:16	geordi	<no output>
2016-09-23 11:58:21	w3z	geordi: use --clang
2016-09-23 11:58:22	geordi	<no output>
2016-09-23 11:58:52	w3z	{} template<long a,long b,long c,long d> ratio_add<ratio<a,b>,ratio<c,d>> operator+(ratio<a,b>,ratio<c,d>); template<class ...> struct R; template<long...N,long...D> struct R<ratio<N,D>...>{using type=decltype((ratio<N,D>{}+...));}; R<ratio<1,2>,ratio<1,3>>::type T;
2016-09-23 11:58:52	geordi	<no output>
2016-09-23 11:58:57	bsdbeard	thats only possible in c++17 (c++1z) right?
2016-09-23 11:58:58	w3z	geordi: use --clang
2016-09-23 11:58:58	geordi	error: call to function 'operator+' that is neither visible in the template definition nor found by argument-dependent lookup
2016-09-23 11:58:58	m_ben	w3z: I tried my approach with 1000 ratios and it takes almost 30 sec and about 500MB to compile on melpon
2016-09-23 11:59:15	bsdbeard	folding expressions I mean
2016-09-23 11:59:18	m_ben	bsdbeard: yes
2016-09-23 11:59:20	w3z	bsdbeard: yes
2016-09-23 11:59:31	-->	magnicida (~raskolnik@2a02:8109:8c80:231:ea39:dfff:fe4d:275b) has joined ##c++
2016-09-23 12:00:06	w3z	m_ben, yeah its not going to be super efficient wrt compile times :)
2016-09-23 12:00:07	<--	zagabar (~zagabar@unaffiliated/zagabar) has quit (Quit: WeeChat 1.5)
2016-09-23 12:00:18	w3z	im just curious about the clang error now
2016-09-23 12:00:29	bsdbeard	how does it know which operator+ to use
2016-09-23 12:00:36	bsdbeard	before it expands the thing
2016-09-23 12:00:50	-->	meshugga (~philip@amd.co.at) has joined ##c++
2016-09-23 12:01:18	bsdbeard	since each type it sums is different
2016-09-23 12:01:22	w3z	it doesnt, but it doesnt look up the operator until expansion time
2016-09-23 12:01:22		[12:01]
2016-09-23 12:01:32	w3z	thats also true in the simpler case
2016-09-23 12:02:13	w3z	S<I> and S<J>
2016-09-23 12:02:13	-->	datasoop (uid144366@gateway/web/irccloud.com/x-dbocdegrwcrqvaui) has joined ##c++
2016-09-23 12:02:53	-->	Oramol (~Oramol@unaffiliated/oramol) has joined ##c++
2016-09-23 12:03:32	Oramol	Quite often I have a class and I want to hide whatever's inside of it, but I don't want to use void*s, is there a name for this pattern?
2016-09-23 12:03:41	datasoop	C++ is the best.
2016-09-23 12:04:01	Oramol	+ what's a good solution, I don't want to use a void*
2016-09-23 12:04:01	bsdbeard	Oramol, type erasure?
2016-09-23 12:04:01	bsdbeard	!type erasure
2016-09-23 12:04:03	nolyc	In the book 'C++ Template Metaprogramming', Dave Abrahams and Aleksey Gurtovoy define type erasure as 'the process of turning a wide variety of types with a common interface into one type with that same interface.' Examples include boost::function<sig>, where the common interface is 'callable with signature sig', and boost::any where the common interface is copy-constructible.
2016-09-23 12:04:21	Oramol	I think it's nearer a pimple
2016-09-23 12:04:50	bsdbeard	pimpl you mean
2016-09-23 12:04:56	Oramol	Yeah that.
2016-09-23 12:05:06	bsdbeard	so that's a good solution to do it... what' the problem?
2016-09-23 12:05:11	-->	logan_e_ (uid164592@gateway/web/irccloud.com/x-wpejfrqvusvonlug) has joined ##c++
2016-09-23 12:05:40	w3z	!pimpl
2016-09-23 12:05:41	Oramol	I don't want to do this: "class whatever { private: void* implementation; /* the rest */ };"
2016-09-23 12:05:42	nolyc	pimpl is a really inconvenient way to hide private bits of a class. http://en.wikipedia.org/wiki/Pimpl
2016-09-23 12:05:56	bsdbeard	Oramol, then use pimpl
2016-09-23 12:06:02	pragma-	pimpl is also a really unfortunate choice of acronym
2016-09-23 12:06:08	w3z	thats a poor way to implement pimpl
2016-09-23 12:06:11	Oramol	Another layer of indirection then though
2016-09-23 12:06:25	-->	athidhep (~afoakf@S0106602ad06acd48.vc.shawcable.net) has joined ##c++
2016-09-23 12:06:30	bsdbeard	what
2016-09-23 12:06:55	bsdbeard	its just one layer
2016-09-23 12:07:09	w3z	anyway, happy hour!
2016-09-23 12:07:17	Oramol	pimpl is to forward declare like "implementation_holder" then in the code for the class have "struct implementation_holder { /*actual implementation members here*/ };"
2016-09-23 12:07:29	-->	anuxivm (~anuxi@92.185.154.236) has joined ##c++
2016-09-23 12:07:56	<--	mukunda (mukunda@c-71-205-185-63.hsd1.co.comcast.net) has quit (Ping timeout: 244 seconds)
2016-09-23 12:07:59	Oramol	Fuck it, macro time.
2016-09-23 12:08:02	bsdbeard	right, thats one layer of indirection, just like casting a void* to whatever
2016-09-23 12:08:15	bsdbeard	i dont really understand why youre holding void*s at all
2016-09-23 12:08:38	Oramol	bsdbeard: the class has an implementation_holder*, the implementation_holder has a pointer to the actual thing you want (if you want to use new and not proxy methods)
2016-09-23 12:08:53	<--	firstdayonthejob (~firstdayo@cpc99346-croy26-2-0-cust153.19-2.cable.virginm.net) has quit (Quit: WeeChat 1.5)
2016-09-23 12:09:00	<--	alexmh (~alex@c-67-166-124-41.hsd1.ut.comcast.net) has quit (Remote host closed the connection)
2016-09-23 12:09:16	-->	rimdeker (~rimdeker@unaffiliated/rimdeker) has joined ##c++
2016-09-23 12:09:17	bsdbeard	no
2016-09-23 12:09:35	bsdbeard	the class has an unique_ptr<implementation_holder> and implementation_holder has no further pointers
2016-09-23 12:10:49	-->	Arjen (~Sylph@145.136.49.141) has joined ##c++
2016-09-23 12:10:55	bsdbeard	{} struct hide_my_ints {unique_ptr<struct implementation_holder> impl;}; struct implementation_holder {int a,b,c;};
2016-09-23 12:10:56	geordi	<no output>
2016-09-23 12:11:00	bsdbeard	Oramol, ^ its that simple
2016-09-23 12:11:08	bsdbeard	theres no need for pointer in a pointer
2016-09-23 12:11:43	Oramol	bsdbeard: I think we're going in different directions. My goal here is to have an unchanging header file with a pointer to a thing I can't forward declare (without changing the header file :/)
2016-09-23 12:11:49	<--	Arjen (~Sylph@145.136.49.141) has quit (Read error: Connection reset by peer)
2016-09-23 12:12:06	Oramol	That's not very helpful.... hmm... macros will do though
2016-09-23 12:12:11	bsdbeard	you dont need to forward declare it in some header, look at the example above ^
2016-09-23 12:12:17	Oramol	(My description wasn't very helpful is what I meant)
2016-09-23 12:12:24	bsdbeard	unique_ptr<struct anything> // anything does not exist yet
2016-09-23 12:13:05	<--	SwiftMatt (~Objective@162.242.94.102) has quit (Read error: Connection reset by peer)
2016-09-23 12:13:06	<--	MrP[Home] (~Palsson@c-a46fe555.06-213-6e6b701.cust.bredbandsbolaget.se) has quit (Ping timeout: 264 seconds)
2016-09-23 12:13:22	Oramol	I don't quite follow that line starting with {}, could you please rephrase?
2016-09-23 12:13:44	bsdbeard	your header file has this : {} struct hide_my_ints {unique_ptr<struct implementation_holder> impl;};
2016-09-23 12:13:50	bsdbeard	your cpp file has this : struct implementation_holder {int a,b,c;};
2016-09-23 12:14:08	bsdbeard	implementation_holder is not forward declared in any external header, no one even knows it exists
2016-09-23 12:14:09	<--	Sylph-DS (~Sylph@176.74.251.29) has quit (Ping timeout: 244 seconds)
2016-09-23 12:14:33	et	you need to declare a destructor.
2016-09-23 12:14:40	Oramol	is "{} struct ..." new or am I being daft and not seeing it?
2016-09-23 12:14:50	bsdbeard	thats just geordi stuff, ignore it
2016-09-23 12:14:53	bsdbeard	{}
2016-09-23 12:14:54	geordi	<no output>
2016-09-23 12:15:19	<--	rebb (~rebb3@p54B81C99.dip0.t-ipconnect.de) has quit (Quit: Pong timeout)
2016-09-23 12:15:38	bsdbeard	Oramol, if you really dont like pimpl you can use boost::auto
2016-09-23 12:15:48	bsdbeard	for data storage
2016-09-23 12:16:14	<--	datasoop (uid144366@gateway/web/irccloud.com/x-dbocdegrwcrqvaui) has left ##c++
2016-09-23 12:16:32	<--	fahadash (uid44972@gateway/web/irccloud.com/x-qtmwlwcfigljoolo) has quit (Quit: Connection closed for inactivity)
2016-09-23 12:16:32		[12:16]
2016-09-23 12:17:01	Oramol	Oh it's not that I'm trying to work out how to use what you gave! It seems to only have one layer of indirection (which is my target). I still don't see the "no forward declaration" part, but I'm happy that'd work with one!
2016-09-23 12:17:06	Oramol	Thanks :)
2016-09-23 12:17:54	Oramol	Thanks bsdbeard
2016-09-23 12:18:23	bsdbeard	Oramol, you can try it out at http://melpon.org/wandbox/
2016-09-23 12:18:33	<--	buffsy (~bufk@BSN-61-24-107.dynamic.siol.net) has quit (Remote host closed the connection)
2016-09-23 12:19:06	<--	matiu (~matiu@unaffiliated/matiu) has quit (Ping timeout: 264 seconds)
2016-09-23 12:19:35	Oramol	I GTG now, thanks again!
2016-09-23 12:20:47	-->	alyptik (~alyptik@unaffiliated/alyptik) has joined ##c++
2016-09-23 12:20:47		[12:20]
2016-09-23 12:20:47	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || https://isocpp.org/faq || pastes: http://melpon.org/wandbox"
2016-09-23 12:20:47	--	Topic set by V-ille (~ville@81-175-149-170.bb.dnainternet.fi) on Fri, 18 Sep 2015 07:13:01
2016-09-23 12:20:48	--	Channel ##c++: 987 nicks (0 ops, 0 voices, 987 normals)
2016-09-23 12:20:48	***	Buffer Playback...
2016-09-23 12:20:48	Oramol	[22:04:00] + what's a good solution, I don't want to use a void* [22:04:00]
2016-09-23 12:20:48	bsdbeard	[22:04:00] Oramol, type erasure? [22:04:00]
2016-09-23 12:20:48	bsdbeard	[22:04:00] !type erasure [22:04:00]
2016-09-23 12:20:48	nolyc	[22:04:02] In the book 'C++ Template Metaprogramming', Dave Abrahams and Aleksey Gurtovoy define type erasure as 'the process of turning a wide variety of types with a common interface into one type with that same interface.' Examples include boost::function<sig>, where the common interface is 'callable with signature sig', and boost::any where the common interface is copy-constructible. [22:04:02]
2016-09-23 12:20:48	Oramol	[22:04:20] I think it's nearer a pimple [22:04:20]
2016-09-23 12:20:48	bsdbeard	[22:04:49] pimpl you mean [22:04:49]
2016-09-23 12:20:48	Oramol	[22:04:55] Yeah that. [22:04:55]
2016-09-23 12:20:48	bsdbeard	[22:05:05] so that's a good solution to do it... what' the problem? [22:05:05]
2016-09-23 12:20:48	w3z	[22:05:39] !pimpl [22:05:39]
2016-09-23 12:20:48	Oramol	[22:05:40] I don't want to do this: "class whatever { private: void* implementation; /* the rest */ };" [22:05:40]
2016-09-23 12:20:48	nolyc	[22:05:41] pimpl is a really inconvenient way to hide private bits of a class. http://en.wikipedia.org/wiki/Pimpl [22:05:41]
2016-09-23 12:20:48	bsdbeard	[22:05:55] Oramol, then use pimpl [22:05:55]
2016-09-23 12:20:48	pragma-	[22:06:01] pimpl is also a really unfortunate choice of acronym [22:06:01]
2016-09-23 12:20:48	w3z	[22:06:07] thats a poor way to implement pimpl [22:06:07]
2016-09-23 12:20:48	Oramol	[22:06:10] Another layer of indirection then though [22:06:10]
2016-09-23 12:20:48	bsdbeard	[22:06:29] what [22:06:29]
2016-09-23 12:20:48	bsdbeard	[22:06:54] its just one layer [22:06:54]
2016-09-23 12:20:48	w3z	[22:07:07] anyway, happy hour! [22:07:07]
2016-09-23 12:20:48	Oramol	[22:07:16] pimpl is to forward declare like "implementation_holder" then in the code for the class have "struct implementation_holder { /*actual implementation members here*/ };" [22:07:16]
2016-09-23 12:20:48	Oramol	[22:07:58] Fuck it, macro time. [22:07:58]
2016-09-23 12:20:48	bsdbeard	[22:08:01] right, thats one layer of indirection, just like casting a void* to whatever [22:08:01]
2016-09-23 12:20:48	bsdbeard	[22:08:14] i dont really understand why youre holding void*s at all [22:08:14]
2016-09-23 12:20:48	Oramol	[22:08:37] bsdbeard: the class has an implementation_holder*, the implementation_holder has a pointer to the actual thing you want (if you want to use new and not proxy methods) [22:08:37]
2016-09-23 12:20:48	bsdbeard	[22:09:16] no [22:09:16]
2016-09-23 12:20:48	bsdbeard	[22:09:34] the class has an unique_ptr<implementation_holder> and implementation_holder has no further pointers [22:09:34]
2016-09-23 12:20:48	bsdbeard	[22:10:54] {} struct hide_my_ints {unique_ptr<struct implementation_holder> impl;}; struct implementation_holder {int a,b,c;}; [22:10:54]
2016-09-23 12:20:48	geordi	[22:10:55] <no output> [22:10:55]
2016-09-23 12:20:48	bsdbeard	[22:10:59] Oramol, ^ its that simple [22:10:59]
2016-09-23 12:20:48	bsdbeard	[22:11:07] theres no need for pointer in a pointer [22:11:07]
2016-09-23 12:20:48	Oramol	[22:11:42] bsdbeard: I think we're going in different directions. My goal here is to have an unchanging header file with a pointer to a thing I can't forward declare (without changing the header file :/) [22:11:42]
2016-09-23 12:20:48	Oramol	[22:12:05] That's not very helpful.... hmm... macros will do though [22:12:05]
2016-09-23 12:20:48	bsdbeard	[22:12:10] you dont need to forward declare it in some header, look at the example above ^ [22:12:10]
2016-09-23 12:20:48	Oramol	[22:12:16] (My description wasn't very helpful is what I meant) [22:12:16]
2016-09-23 12:20:48	bsdbeard	[22:12:23] unique_ptr<struct anything> // anything does not exist yet [22:12:23]
2016-09-23 12:20:48	Oramol	[22:13:21] I don't quite follow that line starting with {}, could you please rephrase? [22:13:21]
2016-09-23 12:20:48	bsdbeard	[22:13:43] your header file has this : {} struct hide_my_ints {unique_ptr<struct implementation_holder> impl;}; [22:13:43]
2016-09-23 12:20:48	bsdbeard	[22:13:49] your cpp file has this : struct implementation_holder {int a,b,c;}; [22:13:49]
2016-09-23 12:20:48	bsdbeard	[22:14:07] implementation_holder is not forward declared in any external header, no one even knows it exists [22:14:07]
2016-09-23 12:20:48	et	[22:14:32] you need to declare a destructor. [22:14:32]
2016-09-23 12:20:48	Oramol	[22:14:39] is "{} struct ..." new or am I being daft and not seeing it? [22:14:39]
2016-09-23 12:20:48	bsdbeard	[22:14:49] thats just geordi stuff, ignore it [22:14:49]
2016-09-23 12:20:48	bsdbeard	[22:14:52] {} [22:14:52]
2016-09-23 12:20:48	geordi	[22:14:53] <no output> [22:14:53]
2016-09-23 12:20:48	bsdbeard	[22:15:37] Oramol, if you really dont like pimpl you can use boost::auto [22:15:37]
2016-09-23 12:20:48	bsdbeard	[22:15:47] for data storage [22:15:47]
2016-09-23 12:20:48	Oramol	[22:17:00] Oh it's not that I'm trying to work out how to use what you gave! It seems to only have one layer of indirection (which is my target). I still don't see the "no forward declaration" part, but I'm happy that'd work with one! [22:17:00]
2016-09-23 12:20:48	Oramol	[22:17:05] Thanks :) [22:17:05]
2016-09-23 12:20:48	Oramol	[22:17:53] Thanks bsdbeard [22:17:53]
2016-09-23 12:20:48	bsdbeard	[22:18:22] Oramol, you can try it out at http://melpon.org/wandbox/ [22:18:22]
2016-09-23 12:20:48	Oramol	[22:19:34] I GTG now, thanks again! [22:19:34]
2016-09-23 12:20:48	***	Playback Complete.
2016-09-23 12:21:13	--	Channel created on Fri, 14 Sep 2001 17:15:35
2016-09-23 12:21:13	-->	Amperture (~Amp@24-136-5-183.c3-0.fld-ubr1.chi-fld.il.cable.rcn.com) has joined ##c++
2016-09-23 12:24:15	-->	Mike111 (~Mike@5.155.191.31) has joined ##c++
2016-09-23 12:24:30	<--	Mike111 (~Mike@5.155.191.31) has quit (Client Quit)
2016-09-23 12:24:41	<--	skweek (~skweek@2607:fe50:0:810b:ed75:37b:d904:8135) has quit (Ping timeout: 250 seconds)
2016-09-23 12:24:41	<--	Kirrahe (~kirrahe@ip51cc4257.adsl-surfen.hetnet.nl) has quit (Ping timeout: 250 seconds)
2016-09-23 12:25:27	-->	bkboggy (~bkboggy@cpe-172-250-147-60.socal.res.rr.com) has joined ##c++
2016-09-23 12:25:42	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-23 12:26:12	-->	decimad (~deci@ip5f5be505.dynamic.kabel-deutschland.de) has joined ##c++
2016-09-23 12:26:51	<--	Mike11 (~Mike@unaffiliated/mike11) has quit (Ping timeout: 250 seconds)
2016-09-23 12:28:10	<--	Munnu (~timo@91-158-145-247.elisa-laajakaista.fi) has quit (Quit: Follow the white rabbit. Compile the desert of the real. 3301.)
2016-09-23 12:31:18	-->	symm- (~symm-@86.127.152.32) has joined ##c++
2016-09-23 12:32:03	<--	scai (~scai@p4FF0EA1E.dip0.t-ipconnect.de) has left ##c++ ("[IRSSI]")
2016-09-23 12:33:03	<--	kszatan (~kszatan@dial-377.jgora.dialog.net.pl) has quit (Read error: Connection reset by peer)
2016-09-23 12:33:46	<--	jshjsh (~jshjsh@172.56.38.166) has quit (Ping timeout: 244 seconds)
2016-09-23 12:34:55	<--	hoshi (~hoshi@abzm134.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 265 seconds)
2016-09-23 12:35:49	<--	phinxy (~tehhhd@unaffiliated/phinxy) has quit (Read error: Connection reset by peer)
2016-09-23 12:35:49		[12:35]
2016-09-23 12:36:15	-->	kasper_ (~safaf@82.137.15.145) has joined ##c++
2016-09-23 12:38:18	<--	kasper^ (~safaf@82.137.9.212) has quit (Ping timeout: 264 seconds)
2016-09-23 12:38:43	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-23 12:40:59	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-23 12:41:00	<--	chachasmooth (~chachasmo@unaffiliated/chachasmooth) has quit (Ping timeout: 244 seconds)
2016-09-23 12:41:21	-->	sammyg2 (~sammyg@h-13-10.a485.priv.bahnhof.se) has joined ##c++
2016-09-23 12:41:34	<--	sammyg2 (~sammyg@h-13-10.a485.priv.bahnhof.se) has left ##c++ ("Leaving")
2016-09-23 12:41:39	-->	sammyg2 (~sammyg@h-13-10.a485.priv.bahnhof.se) has joined ##c++
2016-09-23 12:42:17	<--	tristans1 (~tristanse@nat-165-91-12-22.tamulink.tamu.edu) has quit (Quit: WeeChat 1.5)
2016-09-23 12:42:21	<--	Galik (~galik@unaffiliated/galik) has quit (Quit: Leaving)
2016-09-23 12:43:32	-->	chachasmooth (~chachasmo@unaffiliated/chachasmooth) has joined ##c++
2016-09-23 12:43:56	<--	RoKenn (~RoKenn@2001:a61:2239:ed01:31b1:d80f:ae41:c7e2) has quit (Quit: NSA proxy service interrupted)
2016-09-23 12:45:32	<--	biglama (~Day_dream@ram31-1-82-234-77-18.fbx.proxad.net) has quit (Remote host closed the connection)
2016-09-23 12:45:36	<--	rendar (~rendar@host55-19-dynamic.44-79-r.retail.telecomitalia.it) has quit (Quit: Leaving)
2016-09-23 12:46:29	-->	tristanseifert (~tristanse@nat-165-91-12-22.tamulink.tamu.edu) has joined ##c++
2016-09-23 12:47:29	<--	Brklyn (~truthbk@38.122.226.210) has quit (Ping timeout: 240 seconds)
2016-09-23 12:48:41	<--	AnarchyAo (~andrew@8.18.217.202) has quit (Ping timeout: 248 seconds)
2016-09-23 12:48:41	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-23 12:49:12	-->	Gluesticky (~nobody@unaffiliated/gluesticky) has joined ##c++
2016-09-23 12:49:36	<--	grako (~grako@host86-163-229-238.range86-163.btcentralplus.com) has quit
2016-09-23 12:50:40	-->	jbud (~jbud@ip-24-54-73-229.user.start.ca) has joined ##c++
2016-09-23 12:52:57	<--	bolt (r00t@unaffiliated/bolt) has quit (Quit: telnet irc.freenode.net 6667)
2016-09-23 12:52:57		[12:52]
2016-09-23 12:53:25	-->	kasper^ (~safaf@82.137.12.177) has joined ##c++
2016-09-23 12:53:56	<--	Lowl3v3l (~Lowl3v3l@dslb-088-075-098-175.088.075.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2016-09-23 12:54:49	--	sammyg2 is now known as sammyg
2016-09-23 12:55:21	-->	Sc0tty- (~Sc0tty-@2a02:c7d:2fd1:4f00:8cb2:357d:dfcf:729f) has joined ##c++
2016-09-23 12:55:53	<--	kasper_ (~safaf@82.137.15.145) has quit (Ping timeout: 250 seconds)
2016-09-23 12:57:18	-->	Immune (~Immune@173.55.30.110) has joined ##c++
2016-09-23 12:57:29	<--	iik (~IIK@staticline-31-183-46-69.toya.net.pl) has quit (Ping timeout: 240 seconds)
2016-09-23 12:58:16	-->	raphaelsc (~raphaelsc@186.213.114.168) has joined ##c++
2016-09-23 12:58:38	<--	skoocda (~skoocda@76.74.139.126) has quit (Quit: Leaving)
2016-09-23 12:59:56	-->	try (~try@unaffiliated/try) has joined ##c++
2016-09-23 13:00:33	<--	kimundi (~Kimundi@p4FE2E168.dip0.t-ipconnect.de) has quit (Ping timeout: 265 seconds)
2016-09-23 13:02:56	-->	SwiftMatt (~Objective@162.242.94.102) has joined ##c++
2016-09-23 13:05:24	<--	sammyg (~sammyg@h-13-10.a485.priv.bahnhof.se) has quit (Quit: Leaving)
2016-09-23 13:07:51	<--	CEnnis91 (uid3543@gateway/web/irccloud.com/x-cfqculwfozrvcaim) has quit (Quit: Connection closed for inactivity)
2016-09-23 13:07:57	<--	prehensileNipple (~nooblet@124.197.62.6) has quit (Quit: ...)
2016-09-23 13:07:57		[13:07]
2016-09-23 13:08:07	<--	SanguineAnomaly (~Sanguine@tickle.compsoc.man.ac.uk) has quit (Ping timeout: 250 seconds)
2016-09-23 13:08:27	<--	horlicks (~simon@tickle.compsoc.man.ac.uk) has quit (Ping timeout: 250 seconds)
2016-09-23 13:10:49	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-23 13:11:08	<--	xaxxon (~xaxxon@c-24-18-184-142.hsd1.wa.comcast.net) has quit (Quit: This computer has gone to sleep)
2016-09-23 13:12:50	-->	bolt (r00t@unaffiliated/bolt) has joined ##c++
2016-09-23 13:13:01	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-23 13:15:46	<--	f10_ (~flo@2001:470:52af:1:e083:b6f8:a539:bbc) has quit (Ping timeout: 255 seconds)
2016-09-23 13:16:02	-->	xnavor (~xnavor@61.213.216.81.static.r.siw.siwnet.net) has joined ##c++
2016-09-23 13:16:23	<--	symm- (~symm-@86.127.152.32) has quit (Ping timeout: 272 seconds)
2016-09-23 13:16:35	<--	f10 (~flo@ip5b403530.dynamic.kabel-deutschland.de) has quit (Ping timeout: 260 seconds)
2016-09-23 13:18:34	-->	horlicks (~simon@tickle.compsoc.man.ac.uk) has joined ##c++
2016-09-23 13:18:36	-->	SanguineAnomaly (~Sanguine@tickle.compsoc.man.ac.uk) has joined ##c++
2016-09-23 13:19:00	<--	Rajamaa (~Rajamaa@a91-156-244-1.elisa-laajakaista.fi) has quit (Quit: Konversation terminated!)
2016-09-23 13:21:20	<--	velco (~chill@vlan-185-78-38-153.comnet.bg) has quit (Quit: Leaving...)
2016-09-23 13:22:13	<--	Adva (~Hyrule@2a02:810a:12c0:5068:60e9:b7:c3dd:f5b3) has quit (Read error: Connection reset by peer)
2016-09-23 13:22:42	<--	xnavor (~xnavor@61.213.216.81.static.r.siw.siwnet.net) has quit (Quit: This computer has gone to sleep)
2016-09-23 13:23:24	-->	xnavor (~xnavor@61.213.216.81.static.r.siw.siwnet.net) has joined ##c++
2016-09-23 13:23:24		[13:23]
2016-09-23 13:23:46	-->	symm- (~symm-@86.127.152.32) has joined ##c++
2016-09-23 13:24:13	-->	kasper_ (~safaf@82.137.10.204) has joined ##c++
2016-09-23 13:24:13	<--	bolt (r00t@unaffiliated/bolt) has quit (Quit: telnet irc.freenode.net 6667)
2016-09-23 13:24:50	-->	bolt (r00t@unaffiliated/bolt) has joined ##c++
2016-09-23 13:24:58	<--	anuxivm (~anuxi@92.185.154.236) has quit (Read error: Connection reset by peer)
2016-09-23 13:25:00	-->	athend_ (~athend@199.43.187.5) has joined ##c++
2016-09-23 13:25:06	<--	kasper_ (~safaf@82.137.10.204) has quit (Client Quit)
2016-09-23 13:25:27	-->	kasper_ (~safaf@82.137.10.204) has joined ##c++
2016-09-23 13:26:01	<--	jokleinn1 (jokleinn@unaffiliated/jokleinn) has quit (Quit: weechat is using 15GB of RAM)
2016-09-23 13:26:46	-->	jokleinn (jokleinn@unaffiliated/jokleinn) has joined ##c++
2016-09-23 13:27:05	-->	skweek (~skweek@68-200-146-225.res.bhn.net) has joined ##c++
2016-09-23 13:27:34	<--	kasper^ (~safaf@82.137.12.177) has quit (Ping timeout: 240 seconds)
2016-09-23 13:28:40	-->	l2esonance (~l2esonanc@c-73-223-132-245.hsd1.ca.comcast.net) has joined ##c++
2016-09-23 13:28:42	<--	athend (~athend@199.43.186.25) has quit (Ping timeout: 276 seconds)
2016-09-23 13:28:47	<--	xnavor (~xnavor@61.213.216.81.static.r.siw.siwnet.net) has quit (Quit: This computer has gone to sleep)
2016-09-23 13:29:03	<--	tristanseifert (~tristanse@nat-165-91-12-22.tamulink.tamu.edu) has quit (Ping timeout: 244 seconds)
2016-09-23 13:29:39	-->	xnavor (~xnavor@61.213.216.81.static.r.siw.siwnet.net) has joined ##c++
2016-09-23 13:29:49	-->	athend (~athend@199.43.186.25) has joined ##c++
2016-09-23 13:31:55	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-23 13:31:57	<--	athend_ (~athend@199.43.187.5) has quit (Ping timeout: 276 seconds)
2016-09-23 13:33:24	<--	Azusa762 (~roy@37.228.234.160) has quit (Ping timeout: 265 seconds)
2016-09-23 13:33:29	<--	Faylite (~Faylite@gateway/vpn/privateinternetaccess/faylite) has quit (Ping timeout: 240 seconds)
2016-09-23 13:34:36	-->	kasper^ (~safaf@82.137.14.27) has joined ##c++
2016-09-23 13:34:45	<--	corebob (~corebob@cm-84.213.41.214.getinternet.no) has quit (Quit: WeeChat 1.5)
2016-09-23 13:34:52	<--	kasper_ (~safaf@82.137.10.204) has quit (Ping timeout: 265 seconds)
2016-09-23 13:35:14	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-23 13:35:21	<--	kazakuri (~kazakuri@shinjiru.me) has quit (Ping timeout: 265 seconds)
2016-09-23 13:36:33	-->	fahadash (uid44972@gateway/web/irccloud.com/x-edqhhdxrjabbfrli) has joined ##c++
2016-09-23 13:37:04	-->	tristanseifert (~tristanse@128.194.3.4) has joined ##c++
2016-09-23 13:38:23	-->	arescorpio (~arescorpi@64-238-114-200.fibertel.com.ar) has joined ##c++
2016-09-23 13:39:24	<--	anton02 (~quassel@lal1651212.lnk.telstra.net) has quit (Remote host closed the connection)
2016-09-23 13:39:24		[13:39]
2016-09-23 13:40:02	-->	tristans1 (~tristanse@128.194.3.4) has joined ##c++
2016-09-23 13:40:19	-->	kazakuri (~kazakuri@shinjiru.me) has joined ##c++
2016-09-23 13:40:26	<--	xnavor (~xnavor@61.213.216.81.static.r.siw.siwnet.net) has quit (Quit: This computer has gone to sleep)
2016-09-23 13:42:13	<--	snyp (~Snyp@nas4.meghbelabroadband.in) has quit (Quit: WeeChat 1.5)
2016-09-23 13:42:19	<--	tristanseifert (~tristanse@128.194.3.4) has quit (Ping timeout: 255 seconds)
2016-09-23 13:43:01	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-23 13:43:04	-->	oranges1o1 (~splendid@95.141.37.248) has joined ##c++
2016-09-23 13:43:22	<--	occamsblazer (~occamsbla@131.228.197.44) has quit (Quit: Ad somnum per aspera)
2016-09-23 13:44:17	<--	fedepad (~fedepad@p4FE11F83.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-09-23 13:44:44	-->	fedepad (~fedepad@p4FE11F83.dip0.t-ipconnect.de) has joined ##c++
2016-09-23 13:45:03	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-23 13:45:19	-->	SunOS (AlIt0@unaffiliated/sunos) has joined ##c++
2016-09-23 13:46:51	SunOS	hello
2016-09-23 13:46:52	-->	SunnyD (~SunnyD@cpe-72-178-78-211.hot.res.rr.com) has joined ##c++
2016-09-23 13:48:00	<--	oranges1o1 (~splendid@95.141.37.248) has quit (Remote host closed the connection)
2016-09-23 13:49:06	-->	Merris (~roe@46.165.208.40) has joined ##c++
2016-09-23 13:49:26	<--	chachasmooth (~chachasmo@unaffiliated/chachasmooth) has quit (Ping timeout: 265 seconds)
2016-09-23 13:49:27	SunOS	can some one chek one script ..
2016-09-23 13:49:33	-->	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has joined ##c++
2016-09-23 13:49:41	SunOS	i can`t understand why crash
2016-09-23 13:49:42	<--	fedepad (~fedepad@p4FE11F83.dip0.t-ipconnect.de) has quit (Ping timeout: 264 seconds)
2016-09-23 13:50:17	-->	chachasmooth (~chachasmo@unaffiliated/chachasmooth) has joined ##c++
2016-09-23 13:50:34	-->	a3Dman_ (~3Dman@unaffiliated/a3dman) has joined ##c++
2016-09-23 13:51:24	<--	YungRaj (~YungRaj@50-24-71-159.bcstcmtk01.res.dyn.suddenlink.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-23 13:51:37	<--	tristans1 (~tristanse@128.194.3.4) has quit (Ping timeout: 248 seconds)
2016-09-23 13:52:17	<--	a3Dman (~3Dman@unaffiliated/a3dman) has quit (Ping timeout: 240 seconds)
2016-09-23 13:52:17	<--	Merris (~roe@46.165.208.40) has quit (Client Quit)
2016-09-23 13:53:26	-->	mukunda (mukunda@c-71-205-185-63.hsd1.co.comcast.net) has joined ##c++
2016-09-23 13:53:54	-->	tristans1 (~tristanse@128.194.3.4) has joined ##c++
2016-09-23 13:53:57	<--	matkatmusic (~matkatmus@pool-108-54-229-138.nycmny.fios.verizon.net) has quit (Ping timeout: 250 seconds)
2016-09-23 13:54:05	-->	zwliew (uid161395@gateway/web/irccloud.com/x-xcxpgvmcgxvjatvb) has joined ##c++
2016-09-23 13:57:07	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-23 13:57:07		[13:57]
2016-09-23 13:59:31	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-23 13:59:36	-->	redrifle (~boogiepop@unaffiliated/redrifle) has joined ##c++
2016-09-23 14:00:09	<--	tristans1 (~tristanse@128.194.3.4) has quit (Ping timeout: 248 seconds)
2016-09-23 14:02:05	<--	tachoknight (~tachoknig@c-73-246-129-13.hsd1.il.comcast.net) has quit (Quit: Leaving)
2016-09-23 14:02:40	<--	Sc0tty- (~Sc0tty-@2a02:c7d:2fd1:4f00:8cb2:357d:dfcf:729f) has quit (Quit: Leaving)
2016-09-23 14:03:48	redrifle	Let's say I want to verify an X.509 server certificate against a CA, is this sufficient for a subsequent TLS session?
2016-09-23 14:03:50	-->	Mike11 (~Mike@unaffiliated/mike11) has joined ##c++
2016-09-23 14:04:12	<--	Dawgmatix (~user@pool-74-102-91-246.nwrknj.fios.verizon.net) has quit (Remote host closed the connection)
2016-09-23 14:04:19	redrifle	I'm kind of confused about how X.509 verification works in general.
2016-09-23 14:04:28	m_ben	!topic
2016-09-23 14:04:29	nolyc	Welcome to ##c++. This channel is for the discussion of standard C++, including potential and future standardizations. This channel is NOT for discussion of: development platforms (OSes and other tools not directly related to C++), non-standard libraries, programs written in C++, other programming languages, a/s/l, or anything else that isn't C++.
2016-09-23 14:05:01	-->	t0by (~t0by@host151-242-dynamic.8-87-r.retail.telecomitalia.it) has joined ##c++
2016-09-23 14:05:17	<--	t0by (~t0by@host151-242-dynamic.8-87-r.retail.telecomitalia.it) has quit (Remote host closed the connection)
2016-09-23 14:05:44	redrifle	Yeah i got you, I already asked in #openssl but it's damn dead in there.
2016-09-23 14:06:08	bsdbeard	redrifle, you want ##networking
2016-09-23 14:06:24	redrifle	Ah, didn't think of that, thanks bsdbeard.
2016-09-23 14:06:37	m_ben	redrifle: well what do you expect, it's friday night
2016-09-23 14:06:50	<--	MulleDK19 (MulleDK19@unaffiliated/mulledk19) has quit
2016-09-23 14:07:48	<--	chachasmooth (~chachasmo@unaffiliated/chachasmooth) has quit (Ping timeout: 265 seconds)
2016-09-23 14:08:15	<--	nikki93 (~nikki93@2601:645:8104:cb10:8c2b:50d:3584:f038) has quit (Remote host closed the connection)
2016-09-23 14:09:28	<--	c0le (~c0le@59.99.251.45) has quit (Quit: "This is the end.. My beautiful friend.. The end.")
2016-09-23 14:09:36	 *	redrifle pfffts
2016-09-23 14:09:43	 *	redrifle 'wagies'
2016-09-23 14:10:35	-->	hospes (~textual@80-e6-50-26-d3-fa.wlan.lsu.edu) has joined ##c++
2016-09-23 14:10:41	-->	chachasmooth (~chachasmo@unaffiliated/chachasmooth) has joined ##c++
2016-09-23 14:13:51	<--	mackal (~mike@pool-96-237-144-12.bstnma.fios.verizon.net) has quit (Quit: BE VIGILANT.)
2016-09-23 14:13:51		[14:13]
2016-09-23 14:14:43	-->	nikki93 (~nikki93@2601:645:8104:cb10:6802:c810:dd74:e619) has joined ##c++
2016-09-23 14:15:00	-->	Levitator (~Meh@cpe-2606-A000-E182-FB00-3074-FCAC-F02C-7715.dyn6.twc.com) has joined ##c++
2016-09-23 14:15:24	<--	P1RATEZ (piratez@unaffiliated/p1ratez) has quit
2016-09-23 14:15:54	<--	Winslow_ (~Winslow_@bnc.unknowncheats.me) has quit (Excess Flood)
2016-09-23 14:16:42	<--	nikki93 (~nikki93@2601:645:8104:cb10:6802:c810:dd74:e619) has quit (Remote host closed the connection)
2016-09-23 14:17:04	-->	nikki93 (~nikki93@2601:645:8104:cb10:6802:c810:dd74:e619) has joined ##c++
2016-09-23 14:17:14	-->	c0le (~c0le@59.99.251.45) has joined ##c++
2016-09-23 14:17:22	<--	nikki93 (~nikki93@2601:645:8104:cb10:6802:c810:dd74:e619) has quit (Remote host closed the connection)
2016-09-23 14:18:08	<--	try (~try@unaffiliated/try) has quit (Quit: bye)
2016-09-23 14:18:14	-->	HoloPed (~HoloPed__@66.11.188.221) has joined ##c++
2016-09-23 14:18:15	-->	tocka (~tocka@78-56-107-170.static.zebra.lt) has joined ##c++
2016-09-23 14:18:22	HoloPed	Can someone explain this C++ wizardy to me? Why is there a #undef followed immediately by an #ifdef?
2016-09-23 14:18:27	-->	Winslow_ (~Winslow_@bnc.unknowncheats.me) has joined ##c++
2016-09-23 14:18:27	HoloPed	https://github.com/davisking/dlib/blob/master/dlib/image_processing/scan_fhog_pyramid_abstract.h
2016-09-23 14:18:34	-->	Grievre (~rfmerrill@c-24-6-174-73.hsd1.ca.comcast.net) has joined ##c++
2016-09-23 14:18:37	HoloPed	my project doesn't compile because its looking for some strcuture that is defined there, and it was compiling before . I have no idea whats going on
2016-09-23 14:19:07	<--	Birchy (~Birchy@178-164-108.52.3p.ntebredband.no) has quit (Quit: Leaving)
2016-09-23 14:19:10	Grievre	Hey is there a way to tell clang-format "Don't mess with the line breaks in a function declaration/call, /unless/ it includes a line that's too long"?
2016-09-23 14:19:52	<--	gegagome (~gegagome@206.83.5.2) has quit (Quit: gegagome)
2016-09-23 14:20:41	-->	Rickmasta (~Rick@pool-96-246-90-176.nycmny.fios.verizon.net) has joined ##c++
2016-09-23 14:20:58	m_ben	!give Grievre general
2016-09-23 14:20:59	nolyc	Grievre: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2016-09-23 14:22:15	<--	brolaf (~brolaf@46.246.44.75) has quit (Ping timeout: 265 seconds)
2016-09-23 14:23:40	<--	kasper^ (~safaf@82.137.14.27) has quit (Ping timeout: 260 seconds)
2016-09-23 14:24:39	<--	rimdeker (~rimdeker@unaffiliated/rimdeker) has quit (Ping timeout: 265 seconds)
2016-09-23 14:26:34	<--	Henke37 (~Henrik@81-227-16-59-no133.bredband.skanova.com) has quit (Quit: ERR_SHUTDOWN)
2016-09-23 14:27:12	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-23 14:27:21	catern	hello ##c++, I have yet another weird question!
2016-09-23 14:29:00	catern	is there some clever way I can get a datastructure with methods Handle insert(Key k, Val v); Val lookup(Key k); void del(Handle h);, where h is, uh... well... at most 8 bytes in size? (probably a pointer?)
2016-09-23 14:29:00		[14:29]
2016-09-23 14:29:26	catern	the reason for this is that I need to pass the Handle into some operating system functionality :)
2016-09-23 14:29:29	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-23 14:29:48	<--	skweek (~skweek@68-200-146-225.res.bhn.net) has quit (Ping timeout: 276 seconds)
2016-09-23 14:30:48	-->	JoshS (~jshjsh@172.56.38.166) has joined ##c++
2016-09-23 14:30:51	<--	biberu (~biberu@c-cf2d72d5.08-441-7570702.cust.bredbandsbolaget.se) has quit
2016-09-23 14:31:05	<--	CrypticSquared (~CrypticS_@unaffiliated/crypticsquared) has quit (Ping timeout: 248 seconds)
2016-09-23 14:31:38	<--	unK_ (~drunK@dynamic-78-8-149-70.ssp.dialog.net.pl) has quit (Quit: KVIrc 4.3.1 Aria http://www.kvirc.net/)
2016-09-23 14:31:57	<--	athidhep (~afoakf@S0106602ad06acd48.vc.shawcable.net) has quit (Quit: athidhep)
2016-09-23 14:34:15	<--	redrifle (~boogiepop@unaffiliated/redrifle) has quit (Disconnected by services)
2016-09-23 14:35:09	-->	joehunt5888 (~joehunt@115.164.185.210) has joined ##c++
2016-09-23 14:35:19	-->	tristanseifert (~tristanse@128.194.3.4) has joined ##c++
2016-09-23 14:35:47	<--	k_j (~no@151.42.78.158) has quit (Ping timeout: 265 seconds)
2016-09-23 14:36:08	bsdbeard	catern, so pass a pointer
2016-09-23 14:36:19	<--	eclaire (~claire@dc.35.01a8.ip4.static.sl-reverse.com) has quit (Ping timeout: 265 seconds)
2016-09-23 14:37:09	<--	wildlander (~wild@unaffiliated/wildlander) has quit (Quit: o/)
2016-09-23 14:37:21	<--	Mike11 (~Mike@unaffiliated/mike11) has quit (Quit: Leaving.)
2016-09-23 14:38:25	-->	CrypticSquared (~CrypticS_@unaffiliated/crypticsquared) has joined ##c++
2016-09-23 14:39:03	-->	rimdeker (~rimdeker@unaffiliated/rimdeker) has joined ##c++
2016-09-23 14:40:20	catern	that is true, fair enough
2016-09-23 14:42:26	<--	regedit (uid150526@gateway/web/irccloud.com/x-zokpfovqwjotihzl) has quit (Quit: Connection closed for inactivity)
2016-09-23 14:43:30	<--	magnicida (~raskolnik@2a02:8109:8c80:231:ea39:dfff:fe4d:275b) has quit (Ping timeout: 265 seconds)
2016-09-23 14:43:47	<--	tocka (~tocka@78-56-107-170.static.zebra.lt) has quit
2016-09-23 14:43:59	-->	YungRaj (~YungRaj@50-24-71-159.bcstcmtk01.res.dyn.suddenlink.net) has joined ##c++
2016-09-23 14:45:12	<--	RedOrangeZ (~RedOrange@c-73-30-227-113.hsd1.pa.comcast.net) has quit (Read error: Connection reset by peer)
2016-09-23 14:45:12		[14:45]
2016-09-23 14:45:34	-->	CEnnis91 (uid3543@gateway/web/irccloud.com/x-yyxrmczzfzjgxpol) has joined ##c++
2016-09-23 14:45:54	<--	EvilPenguin (~EvilPengu@bur-inet-pa-1.disney.com) has quit (Ping timeout: 265 seconds)
2016-09-23 14:46:18	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-23 14:48:36	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-23 14:48:48	<--	al1o (~al1o@236.red-88-16-49.dynamicip.rima-tde.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-09-23 14:48:55	-->	AmR|EiSa (~amr@41.38.25.233) has joined ##c++
2016-09-23 14:49:03	-->	nikki93 (~nikki93@2601:645:8104:cb10:f01c:4875:7c7a:c3b1) has joined ##c++
2016-09-23 14:49:16	-->	athidhep (~afoakf@S0106602ad06acd48.vc.shawcable.net) has joined ##c++
2016-09-23 14:51:24	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-23 14:53:42	Kamuela	Can you pretend it's C++ but do 100% C?
2016-09-23 14:53:43	<--	Winslow_ (~Winslow_@bnc.unknowncheats.me) has quit (Excess Flood)
2016-09-23 14:53:46	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-23 14:53:59	catern	ooh, ooh, I know this one!
2016-09-23 14:54:01	catern	no!
2016-09-23 14:54:55	-->	Winslow_ (~Winslow_@bnc.unknowncheats.me) has joined ##c++
2016-09-23 14:55:38	<--	rimdeker (~rimdeker@unaffiliated/rimdeker) has quit (Quit: Leaving)
2016-09-23 14:55:42	-->	erebel55 (~ethornbur@c-68-37-81-221.hsd1.mi.comcast.net) has joined ##c++
2016-09-23 14:56:17	<--	gelignite (~gelignite@x4db55a6a.dyn.telefonica.de) has quit (Quit: http://bit.ly/1kso8Ta)
2016-09-23 14:56:38	-->	pitbullhell (~bat@91.227.222.62) has joined ##c++
2016-09-23 14:56:41	-->	RedOrangeZ (~RedOrange@c-73-30-227-113.hsd1.pa.comcast.net) has joined ##c++
2016-09-23 14:56:50	bsdbeard	Luckily you don't have to pretend, you can actually use C++!
2016-09-23 14:57:16	-->	tesuji_ (~tesuji@x2f68f34.dyn.telefonica.de) has joined ##c++
2016-09-23 14:57:37	-->	Jacob_ (62c17913@gateway/web/freenode/ip.98.193.121.19) has joined ##c++
2016-09-23 14:57:59	<--	tesuji (~tesuji@unaffiliated/tesuji) has quit (Ping timeout: 265 seconds)
2016-09-23 14:58:13	<--	Jacob_ (62c17913@gateway/web/freenode/ip.98.193.121.19) has quit (Client Quit)
2016-09-23 14:59:32	-->	vralphv (~vralp@d137-186-58-40.abhsia.telus.net) has joined ##c++
2016-09-23 14:59:48	<--	Winslow_ (~Winslow_@bnc.unknowncheats.me) has quit (Excess Flood)
2016-09-23 15:00:11	-->	Winslow_ (~Winslow_@bnc.unknowncheats.me) has joined ##c++
2016-09-23 15:02:08	<--	YungRaj (~YungRaj@50-24-71-159.bcstcmtk01.res.dyn.suddenlink.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-09-23 15:02:08		[15:02]
2016-09-23 15:02:30	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-23 15:02:57	<--	pitbullhell (~bat@91.227.222.62) has quit (Ping timeout: 276 seconds)
2016-09-23 15:03:12	catern	hmm
2016-09-23 15:03:33	catern	can I std::move() a unique_ptr into a function that takes a raw pointer?
2016-09-23 15:03:43	<--	sssilver (~sssilver@38.122.48.218) has quit (Ping timeout: 250 seconds)
2016-09-23 15:04:14	catern	after I hand it off to this function I am done with it totally
2016-09-23 15:04:37	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-23 15:04:48	et	does that function take ownership? if so, just release the pointer. if not, no.
2016-09-23 15:05:59	<--	nikki93 (~nikki93@2601:645:8104:cb10:f01c:4875:7c7a:c3b1) has quit (Remote host closed the connection)
2016-09-23 15:06:00	<--	oxygene (~fred@ALille-652-1-298-119.w92-147.abo.wanadoo.fr) has quit (Quit: Quitte)
2016-09-23 15:06:44	-->	skweek (~skweek@68-200-146-225.res.bhn.net) has joined ##c++
2016-09-23 15:06:48	<--	irrenhaus3 (~xenon@HSI-KBW-046-005-253-043.hsi8.kabel-badenwuerttemberg.de) has quit (Quit: Lost terminal)
2016-09-23 15:08:05	<--	uboot__ (~moon@x4dbaaedf.dyn.telefonica.de) has quit (Ping timeout: 244 seconds)
2016-09-23 15:09:46	<--	VA3VNA (~mayday_ja@69.156.55.23) has quit (Ping timeout: 260 seconds)
2016-09-23 15:10:41	-->	dj_pi (~dj@c-73-191-212-56.hsd1.mi.comcast.net) has joined ##c++
2016-09-23 15:12:39	-->	VA3VNA (~mayday_ja@69.156.55.23) has joined ##c++
2016-09-23 15:15:36	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-23 15:16:06	<--	sanct (~sanct@212.35.67.11) has quit (Ping timeout: 264 seconds)
2016-09-23 15:16:36	<--	bkboggy (~bkboggy@cpe-172-250-147-60.socal.res.rr.com) has quit (Ping timeout: 276 seconds)
2016-09-23 15:17:36	-->	uboot__ (~moon@x4dbbe6b7.dyn.telefonica.de) has joined ##c++
2016-09-23 15:17:36		[15:17]
2016-09-23 15:18:03	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-23 15:18:34	-->	bkboggy (~bkboggy@cpe-172-250-147-60.socal.res.rr.com) has joined ##c++
2016-09-23 15:18:37	-->	vdamewood (~vdamewood@unaffiliated/vdamewood) has joined ##c++
2016-09-23 15:19:10	<--	xcor (~xcor@2a02:c7d:c07:7f00:a520:9d73:ddb4:f629) has quit (Quit: No Ping reply in 180 seconds.)
2016-09-23 15:21:36	-->	xcor (~xcor@2a02:c7d:c07:7f00:9057:a575:fc4a:49d7) has joined ##c++
2016-09-23 15:22:42	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-23 15:24:37	<--	SecondForm_Glenn (~Thunderbi@108.189.70.212) has quit (Ping timeout: 244 seconds)
2016-09-23 15:24:46	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-23 15:27:48	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-23 15:28:55	<--	Cppg (~Cppg@host109-149-152-50.range109-149.btcentralplus.com) has quit (Ping timeout: 265 seconds)
2016-09-23 15:29:56	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-23 15:30:46	-->	Cppg (~Cppg@host86-144-19-70.range86-144.btcentralplus.com) has joined ##c++
2016-09-23 15:32:54	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-23 15:32:54		[15:32]
2016-09-23 15:34:14	<--	jkhl (~j@host86-182-59-122.range86-182.btcentralplus.com) has quit (Ping timeout: 265 seconds)
2016-09-23 15:35:06	<--	fogbank (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-23 15:38:20	catern	the function does indeed take ownership
2016-09-23 15:39:00	-->	fogbank (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-23 15:39:10	catern	I mean - that's what it does in the functionality - did you mean something represented in the types and stuff?
2016-09-23 15:39:41	catern	are you saying, just pass it in with .get() and then release the pointer?
2016-09-23 15:40:28	<--	dedgrant (~dedgrant@192-40-237-82.dedicated.allstream.net) has quit (Quit: Leaving)
2016-09-23 15:41:09	-->	MethCat- (~ruzhen@192.210.231.214) has joined ##c++
2016-09-23 15:41:12	MethCat-	ahh it's a wonderful day
2016-09-23 15:41:18	<--	fogb (~foggy@78-134-104-13.v4.ngi.it) has quit (Ping timeout: 244 seconds)
2016-09-23 15:43:05	<--	chachasmooth (~chachasmo@unaffiliated/chachasmooth) has quit (Ping timeout: 248 seconds)
2016-09-23 15:44:10	-->	fogb (~foggy@78-134-104-13.v4.ngi.it) has joined ##c++
2016-09-23 15:44:35	<--	hexagoxel (~hexagoxel@p200300798F210800021E33FFFE2231E9.dip0.t-ipconnect.de) has quit (Ping timeout: 272 seconds)
