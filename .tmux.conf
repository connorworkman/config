    # Copyright 2012 Cirrus Minor. All rights reserved.
    #
    # Redistribution and use in source and binary forms, with or without modification, are
    # permitted provided that the following conditions are met:
    #
    #    1. Redistributions of source code must retain the above copyright notice, this list of
    #       conditions and the following disclaimer.
    #    2. Redistributions in binary form must reproduce the above copyright notice, this list
    #             of conditions and the following disclaimer in the documentation and/or other materials
    #        provided with the distribution.
    #
    # THIS SOFTWARE IS PROVIDED BY Cirrus Minor ''AS IS'' AND ANY EXPRESS OR IMPLIED
    #       WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
    # FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL Cirrus Minor OR
    # CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
    # CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
    # SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
    # ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
    # NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
    # ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    # All the following colours are supported: black, red, green, yellow, blue, magenta, cyan, white, default, bright, bold, dim,
    # The views and conclusions contained in the software and documentation are those of the
    # authors and should not be interpreted as representing official policies, either expressed
    # or implied, by Cirrus Minor.

	################
	## .tmux.conf ##
	#Changing the default prefix key:
	#unbind C-b
	set -g prefix 'M-.'
	set -g prefix2 'M-`'
	#set-option -g prefix 'M-.'
	#set-option -g prefix2 C-'/'
	#bind 'M-.' send-prefix
	#bind C-'/' send-prefix
	# Creating new key bindings:
	bind b set status
	bind S command-prompt "new-window -n %1 'ssh %1'"
	bind ? list-keys
	# M-. = move-window
	unbind l
	bind l split-window -v 'exec vim /store/config/.tmux.conf'
	unbind '.'
	bind 'M-.' command-prompt "swap-window -t %1"
	#bind C-b last-window
	bind '.' last-window
	bind > next-window
	bind < previous-window
	bind ` command-prompt
	# C-a = new-window
	bind C-c new-window
	# Esc = copy-mode
	unbind '['
	bind Escape copy-mode
	#bind -n F2 copy-mode
	# | = horizontal split
	unbind %
	bind | split-window -h
	# - = vertical split
	unbind '"'
	bind - split-window -v
	# \" = choose-window
	bind '"' choose-window
	# h = display cheatsheet
	bind / command-prompt "split-window -h 'exec man %1'"
	bind h run "less /store/config/scripts/tmux-cheat-sheet.txt"
	bind g run "less /store/help-vim.txt"
	# r = tmux renumbering script
	unbind r
	#bind r run "~/bin/tmux_renum"
	bind r source-file "/store/config/.tmux.conf"
	# r = respawn after exit or disconnect (zombie)
	bind C-r respawn-window
	# k = kill after exit or disconnect (zombie)
	bind C-k kill-window
	bind k confirm-before -p "kill-pane #P? (y/n)" kill-pane

	# swap vi and emacs mode
	bind v set-option -g mode-keys "vi" \; send-keys "set -o vi" Enter \; display "set mode-keys: vi"
	bind e set-option -g mode-keys "emacs" \; send-keys "set -o emacs" Enter \; display "set mode-keys: emacs"
	bind V send-keys "set -o vi" Enter \; display 'set-mode-keys: vi'
	#bind V run "set -o vi"i \; display 'set-mode-keys: vi'
	bind E send-keys "set -o emacs" Enter \; display 'set-mode-keys: emacs'
	#bind E run "set -o emacs" \; display 'set-mode-keys: emacs'

	bind -t vi-copy v "begin-selection"
	bind -t vi-copy y "copy-selection"
	bind -t vi-copy V "rectangle-toggle"

	# Enable mouse copy-mode scrolling
	bind -T root WheelUpPane   \
	if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
	bind -T root WheelDownPane \
	if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"

	# Enable fast scrolling with Ctrl
	bind -T root C-WheelUpPane \
	if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
	bind -T root C-WheelDownPane \
	if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"
	#bind -t vi-copy C-WheelUpPane   halfpage-up
	bind -t vi-copy C-WheelUpPane  page-up
	#bind -t vi-copy C-WheelDownPane halfpage-down
	bind -t vi-copy C-WheelDownPane page-down

	# Make mouse-drag work only with Ctrl
	#unbind -T root MouseDrag1Pane
	#unbind -t vi-copy MouseDrag1Pane
	#bind -n C-MouseDrag1Pane if -Ft= \
	#'#{mouse_any_flag}' 'if -Ft= \"#{pane_in_mode}\" \"copy-mode -M\" \"send-keys -M\"' 'copy-mode -M'
	#bind -t vi-copy C-MouseDrag1Pane begin-selection
	# Toggle mouse on/off

	bind m set-option -g mouse on \; display 'mouse: on'
	bind m set-option -g mouse off \; display 'mouse: off'

	bind -t emacs-copy k cursor-up
	bind -t emacs-copy j cursor-down
	bind -t emacs-copy h cursor-left
	bind -t emacs-copy l cursor-right

	bind -t emacs-copy b page-up
	bind -t emacs-copy { page-up
	bind -t emacs-copy Space page-down
	bind -t emacs-copy } page-down

	bind -t vi-copy u page-up
	bind -t vi-copy d page-down

	bind -t emacs-edit C-Left previous-word
	bind -t emacs-edit C-Right next-word

	#-----------------------------------------------i
	#Setting other options, such as the default command, or locking after 30 minutes of inactivity:
	#set-option -g default-command "exec /bin/ksh"
	#set -g default-command bash
	#set -g default-command "${SHELL}"
	#set -g default-command "exec /usr/bin/zsh -"
	set -g default-command "exec ${SHELL} -"
	#set-option -g default-shell "zsh"
	set -g set-remain-on-exit  on
	set -g remain-on-exit on
	set -g base-index 1
	#set-option -g lock-after-time 1800

	# Mouse (tmux >= 2.1)
	#-------------------------------------------------

	# Allows scrolling and selecting in copy-mode
	set -g mouse on
	#set-option -g mode-keys vi
	set -g mode-keys "emacs"
	set -g status-keys "emacs"
	#set -g mode-keys vi
	set -g default-terminal "tmux-256color"
	#set -g default-terminal "xterm-256color"
	#set -g default-terminal "screen-256color"
	set -g escape-time 10
	set -g status-right '"#{=22:pane_title}"'
	set -ga terminal-overrides ",xterm-termite:Tc"
	set -ga terminal-overrides ',xterm*:smcup@:rmcup@'
	set -ga terminal-overrides ',rxvt-uni*:XT:Ms=\E]52;%p1%s;%p2%s\007'
	set -g history-limit 30000
	setw -g aggressive-resize on
	setw -g xterm-keys on

	# Look & Feel
	#-----------------------------------------------

	# Statusbar properties
	##set -g display-time 5000
	set -g status-bg default
	set -g status-fg black

	# pane divider color; non active pane
	set -g pane-border-fg green
	set -g pane-border-bg default

	# pane divider color; active pane
	# helps when you have more than two panes.
	set -g pane-active-border-fg blue
	set -g pane-active-border-bg default

	# window notifications; display activity on other window
	set -g monitor-activity on
	set -g visual-activity on

	# statusbar colors
	set -g status-fg white
	set -g status-bg default
	set -g status-attr default

	# window title colors; non active
	set -g window-status-fg blue
	set -g window-status-bg black
	set -g window-status-attr dim

	# window title colors; active
	set -g window-status-current-fg colour38
	set -g window-status-current-bg default
	set -g window-status-current-attr bright

	# urlscan as context and url view
	bind u capture-pane \; save-buffer /tmp/tmux-buffer \; \
	new-window -n "urlscan" '$SHELL -c "urlscan  < /tmp/tmux-buffer"'

	# urlview as context and url view
	bind U capture-pane \; save-buffer /tmp/tmux-buffer \; \
	new-window -n "urlview" '$SHELL -c "urlview  < /tmp/tmux-buffer"'

	# Titles
	set -g set-titles on
	set -g set-titles-string "#T"
	#set -g set-titles-string "#h - #W"
	#set -g set-titles-string "#(tmux ls | awk -F: '{print $1}' | xargs | sed 's/\ / | /g')"
	set -g status-justify centre
	set -g automatic-rename on

	#tmux messages
	set -g message-bg default
	set -g message-fg yellow

	#statusbar & external scripts
	#-----------------------------------------------------
	##########################################
	# STATUS BAR
	set -g status on
	# Turning the status line off, or changing its colour:
	#set -g status off
	#set -g status-style bg=blue
	#set -g status-utf8 on
	set -g status-interval 1
	set -g status-attr bright
	set -g status-fg white
	set -g status-bg black
	set -g status-left-length 20
	#set -g status-left '∙ #(rainbarf) #[fg=green][ %m/%d %H:%M:%S ]#[default]'
	#set -g status-left " #(~/tmux-powerline/powerline.sh left)"
	#set -g status-left '#[fg=green][#[fg=red]#S#[fg=green]]#[default]'
	#set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
	set -g status-left "∙ #(rainbarf) #[fg=green][ %m/%d %H:%M:%S ] #[default]"
	set -g status-justify centre
	#set -g status-right '#[fg=green][ %m/%d %H:%M:%S ]#[default]'
	#set -g status-right "∙ #(rainbarf) "
	#set -g status-right "┆ #(tmux-applet)#h ∙"
	#set -g status-right "#(~/tmux-powerline/powerline.sh right)"
	#set -g status-right "┆ #(tmux-applet)#h ∙"
	# status prompt
	set -g status-right '#(~/bin/tmux_battery_charge_indicator.sh) #[bg=white,fg=colour240] %H:%M #[bg=colour240,fg=white] %Y-%m-%d '
	#set -g status-right "#[fg=colour255]#(cat  /home/cirrus/.cache/i3blocks/notification  | grep BODY | cut -c 6-) #[bg=36,fg=yellow]◀ %H:%M #[default]  ┆ #(tmux-applet)  #h ∙"
	set -g window-status-current-format '#[fg=yellow,bg=black](#I.#P|#F|#W)#[default]'
	#set -g window-status-current-format "#[fg=blue,bg=black] Session #S ❮|:#W|#h:#T|❯ "
	set -g window-status-format '#I.#P#F#W'
	set -g status-left-length 200
	set -g status-right-length 180
	#run-shell ~/build/tmux-open/open.tmux
	#run-shell ~/build/tmux-copycat/copycat.tmux
